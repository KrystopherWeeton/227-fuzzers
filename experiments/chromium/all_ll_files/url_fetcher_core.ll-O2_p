; ModuleID = '../../net/url_request/url_fetcher_core.cc'
source_filename = "../../net/url_request/url_fetcher_core.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [24 x i8] }
%"class.net::URLFetcherCore::Registry" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.net::URLFetcherCore" = type <{ %"class.net::URLRequest::Delegate", %"class.base::RefCountedThreadSafe", [4 x i8], %"class.net::URLRequestContextGetterObserver", %"class.net::URLFetcher"*, %class.GURL, %class.GURL, i32, i32, %"class.net::URLFetcherDelegate"*, %class.scoped_refptr, %class.scoped_refptr.14, %class.scoped_refptr.15, %"class.std::__1::unique_ptr.16", i32, %"class.absl::optional.400", [2 x i8], i32, [4 x i8], %class.scoped_refptr.405, %class.scoped_refptr.407, %"class.absl::optional.286", i8*, %"class.base::RepeatingCallback.413", %"class.net::HttpRequestHeaders", %class.scoped_refptr.373, %"class.net::ProxyServer", i8, [7 x i8], i64, i64, %"class.net::IPEndPoint", i8, [3 x i8], %"class.std::__1::basic_string", %"class.base::FilePath", i64, i64, %"class.base::RepeatingCallback.414", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], %"class.std::__1::unique_ptr.415", %"class.std::__1::unique_ptr.422", %class.scoped_refptr.437, %class.scoped_refptr.437, i8, [7 x i8], %"class.std::__1::unique_ptr.439", i8, i8, i8, i8, i32, i32, [4 x i8], %"class.base::TimeDelta", i32, i32, %"class.std::__1::unique_ptr.445", i64, i64, i64, %"struct.net::NetworkTrafficAnnotationTag", [4 x i8] }>
%"class.net::URLRequest::Delegate" = type { i32 (...)** }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.net::URLRequestContextGetterObserver" = type { i32 (...)** }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GURL* }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.13" }>
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.14 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%class.scoped_refptr.15 = type { %"class.base::TaskRunner"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.13", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.net::URLRequest"* }
%"class.net::URLRequest" = type { %"class.base::SupportsUserData.base", %"class.net::URLRequestContext"*, %"class.net::NetLogWithSource", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.272", %"class.std::__1::vector.279", %"class.net::SiteForCookies", %"class.net::IsolationInfo", i32, i8, i8, %"class.absl::optional.286", %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.net::HttpRequestHeaders", i32, i8, i32, i32, %"class.std::__1::vector.318", %"class.std::__1::vector.325", i32, %"class.net::URLRequest::Delegate"*, i32, %"class.net::HttpResponseInfo", i8, i8, i32, %"class.net::UploadProgress", i32, i32, i8, %"class.std::__1::basic_string", i8, i8, i64, %"class.base::TimeTicks", %"struct.net::LoadTimingInfo", %"class.net::ProxyServer", %"class.absl::optional.382", %"struct.net::NetworkTrafficAnnotationTag", %"class.net::SocketTag", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.395", %"class.base::RepeatingCallback.395", i8, i8, i32, %"class.base::WeakPtrFactory.396" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree.19" }
%"class.std::__1::__tree.19" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.net::URLRequestContext" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::CertVerifier"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::ProxyResolutionService"*, %"class.net::ProxyDelegate"*, %"class.net::SSLConfigService"*, %"class.net::NetworkDelegate"*, %"class.net::HttpServerProperties"*, %"class.net::HttpUserAgentSettings"*, %"class.net::CookieStore"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SCTAuditingDelegate"*, %"class.net::HttpTransactionFactory"*, %"class.net::URLRequestJobFactory"*, %"class.net::URLRequestThrottlerManager"*, %"class.net::QuicContext"*, %"class.net::NetworkQualityEstimator"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::FtpAuthCache"*, %"class.std::__1::unique_ptr.259", i8, i8, i8, %"class.std::__1::basic_string" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.33" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.28" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.35" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::CertVerifier" = type opaque
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::ProxyResolutionService" = type opaque
%"class.net::ProxyDelegate" = type opaque
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.40", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.42" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.net::NetworkDelegate" = type { i32 (...)** }
%"class.net::HttpServerProperties" = type { %"class.net::BrokenAlternativeServices::Delegate", %"class.base::TickClock"*, %"class.base::Clock"*, i8, i8, i8, %"class.std::__1::unique_ptr.47", %"class.net::HttpServerProperties::ServerInfoMap", %"class.net::BrokenAlternativeServices", %"class.net::IPAddress", %"class.base::flat_map", %"class.std::__1::vector.129", %"class.base::MRUCache.136", %"class.base::flat_map.156", i64, %"class.base::OneShotTimer" }
%"class.net::BrokenAlternativeServices::Delegate" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.net::HttpServerPropertiesManager"* }
%"class.net::HttpServerPropertiesManager" = type opaque
%"class.net::HttpServerProperties::ServerInfoMap" = type { %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map.57", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.53" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.57" = type { %"class.std::__1::__tree.58" }
%"class.std::__1::__tree.58" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::BrokenAlternativeServices" = type { %"class.net::BrokenAlternativeServices::Delegate"*, %"class.base::TickClock"*, %"class.std::__1::list.68", %"class.std::__1::map.75", %"class.std::__1::set.86", %"class.net::RecentlyBrokenAlternativeServices", %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.121" }
%"class.std::__1::list.68" = type { %"class.std::__1::__list_imp.69" }
%"class.std::__1::__list_imp.69" = type { %"struct.std::__1::__list_node_base.70", %"class.std::__1::__compressed_pair.71" }
%"struct.std::__1::__list_node_base.70" = type { %"struct.std::__1::__list_node_base.70"*, %"struct.std::__1::__list_node_base.70"* }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.75" = type { %"class.std::__1::__tree.76" }
%"class.std::__1::__tree.76" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.86" = type { %"class.std::__1::__tree.87" }
%"class.std::__1::__tree.87" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::RecentlyBrokenAlternativeServices" = type { %"class.base::MRUCache.94" }
%"class.base::MRUCache.94" = type { %"class.base::MRUCacheBase.95" }
%"class.base::MRUCacheBase.95" = type { i32 (...)**, %"class.std::__1::list.96", %"class.std::__1::map.103", i64 }
%"class.std::__1::list.96" = type { %"class.std::__1::__list_imp.97" }
%"class.std::__1::__list_imp.97" = type { %"struct.std::__1::__list_node_base.98", %"class.std::__1::__compressed_pair.99" }
%"struct.std::__1::__list_node_base.98" = type { %"struct.std::__1::__list_node_base.98"*, %"struct.std::__1::__list_node_base.98"* }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.103" = type { %"class.std::__1::__tree.104" }
%"class.std::__1::__tree.104" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.121" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.112 }
%class.scoped_refptr.112 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.113", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.113" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.114" }
%"struct.std::__1::atomic.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__cxx_atomic_impl.117" }
%"struct.std::__1::__cxx_atomic_impl.117" = type { %"struct.std::__1::__cxx_atomic_base_impl.118" }
%"struct.std::__1::__cxx_atomic_base_impl.118" = type { i8 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.122" }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.124" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.std::__1::basic_string"* }
%"class.base::MRUCache.136" = type { %"class.base::MRUCacheBase.137" }
%"class.base::MRUCacheBase.137" = type { i32 (...)**, %"class.std::__1::list.138", %"class.std::__1::map.145", i64 }
%"class.std::__1::list.138" = type { %"class.std::__1::__list_imp.139" }
%"class.std::__1::__list_imp.139" = type { %"struct.std::__1::__list_node_base.140", %"class.std::__1::__compressed_pair.141" }
%"struct.std::__1::__list_node_base.140" = type { %"struct.std::__1::__list_node_base.140"*, %"struct.std::__1::__list_node_base.140"* }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.145" = type { %"class.std::__1::__tree.146" }
%"class.std::__1::__tree.146" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::flat_map.156" = type { %"class.base::internal::flat_tree.157" }
%"class.base::internal::flat_tree.157" = type { %"class.std::__1::vector.158" }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"*, %"class.std::__1::__compressed_pair.161" }
%"struct.std::__1::pair.160" = type opaque
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.std::__1::pair.160"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.119 }
%class.scoped_refptr.119 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.120", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.120" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::CookieStore" = type opaque
%"class.net::TransportSecurityState" = type <{ %"class.std::__1::map.166", %"class.std::__1::map.177", %"class.std::__1::map.186", %"class.net::TransportSecurityState::Delegate"*, %"class.net::TransportSecurityState::ReportSenderInterface"*, i8, i8, i8, [5 x i8], %"class.net::TransportSecurityState::ExpectCTReporter"*, %"class.net::TransportSecurityState::RequireCTDelegate"*, %"class.net::ExpiringCache", %"class.net::ExpiringCache", i8, [7 x i8], %"class.base::Time", %"class.std::__1::set.209", i8, [7 x i8] }>
%"class.std::__1::map.166" = type { %"class.std::__1::__tree.167" }
%"class.std::__1::__tree.167" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.177" = type { %"class.std::__1::__tree.178" }
%"class.std::__1::__tree.178" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.186" = type { %"class.std::__1::__tree.187" }
%"class.std::__1::__tree.187" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::TransportSecurityState::Delegate" = type { i32 (...)** }
%"class.net::TransportSecurityState::ReportSenderInterface" = type { i32 (...)** }
%"class.net::TransportSecurityState::ExpectCTReporter" = type { i32 (...)** }
%"class.net::TransportSecurityState::RequireCTDelegate" = type { i32 (...)** }
%"class.net::ExpiringCache" = type <{ i64, %"class.std::__1::map.197", %"struct.std::__1::less.206", %"class.net::NoopEvictionHandler", [6 x i8] }>
%"class.std::__1::map.197" = type { %"class.std::__1::__tree.198" }
%"class.std::__1::__tree.198" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::less.206" = type { i8 }
%"class.net::NoopEvictionHandler" = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.208" }
%"class.base::time_internal::TimeBase.208" = type { i64 }
%"class.std::__1::set.209" = type { %"class.std::__1::__tree.210" }
%"class.std::__1::__tree.210" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.211", %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::HttpTransactionFactory" = type opaque
%"class.net::URLRequestJobFactory" = type opaque
%"class.net::URLRequestThrottlerManager" = type <{ %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::NetworkChangeNotifier::ConnectionTypeObserver", %"class.std::__1::map.220", i32, [4 x i8], %"class.url::StringPieceReplacements", i8, i8, [6 x i8], %"class.net::NetLogWithSource", i32, [4 x i8] }>
%"class.net::NetworkChangeNotifier::IPAddressObserver" = type { i32 (...)**, %class.scoped_refptr.217 }
%class.scoped_refptr.217 = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.net::NetworkChangeNotifier::ConnectionTypeObserver" = type { i32 (...)**, %class.scoped_refptr.218 }
%class.scoped_refptr.218 = type { %"class.base::ObserverListThreadSafe.219"* }
%"class.base::ObserverListThreadSafe.219" = type opaque
%"class.std::__1::map.220" = type { %"class.std::__1::__tree.221" }
%"class.std::__1::__tree.221" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.222", %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.url::StringPieceReplacements" = type { %"class.url::Replacements" }
%"class.url::Replacements" = type { %"struct.url::URLComponentSource", %"struct.url::Parsed" }
%"struct.url::URLComponentSource" = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr.229", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.235", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set.242", %"class.std::__1::vector.252", %"class.std::__1::vector.252", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.237" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::set.242" = type { %"class.std::__1::__tree.243" }
%"class.std::__1::__tree.243" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { i32*, i32*, %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { i32* }
%"class.net::NetworkQualityEstimator" = type opaque
%"class.net::ReportingService" = type opaque
%"class.net::NetworkErrorLoggingService" = type opaque
%"class.net::FtpAuthCache" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.std::__1::set.262"* }
%"class.std::__1::set.262" = type opaque
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.net::URLRequestJob"* }
%"class.net::URLRequestJob" = type opaque
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.net::UploadDataStream"* }
%"class.net::UploadDataStream" = type { i32 (...)**, i64, i64, i64, i8, i8, i8, %"class.base::OnceCallback.275", %"class.net::NetLogWithSource" }
%"class.base::OnceCallback.275" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.285 }
%union.anon.285 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.286", %"class.absl::optional.286", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.296" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.291", %"class.absl::optional.291" }
%"class.absl::optional.291" = type { %"class.absl::optional_internal::optional_data.292" }
%"class.absl::optional_internal::optional_data.292" = type { %"class.absl::optional_internal::optional_data_base.293" }
%"class.absl::optional_internal::optional_data_base.293" = type { %"class.absl::optional_internal::optional_data_dtor_base.294" }
%"class.absl::optional_internal::optional_data_dtor_base.294" = type { i8, %union.anon.295 }
%union.anon.295 = type { %"class.net::SchemefulSite" }
%"class.absl::optional.296" = type { %"class.absl::optional_internal::optional_data.297" }
%"class.absl::optional_internal::optional_data.297" = type { %"class.absl::optional_internal::optional_data_base.298" }
%"class.absl::optional_internal::optional_data_base.298" = type { %"class.absl::optional_internal::optional_data_dtor_base.299" }
%"class.absl::optional_internal::optional_data_dtor_base.299" = type { i8, %union.anon.300 }
%union.anon.300 = type { %"class.std::__1::set.301" }
%"class.std::__1::set.301" = type { %"class.std::__1::__tree.302" }
%"class.std::__1::__tree.302" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.318" = type { %"class.std::__1::__vector_base.319" }
%"class.std::__1::__vector_base.319" = type { %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"*, %"class.std::__1::__compressed_pair.320" }
%"struct.net::CookieWithAccessResult" = type <{ %"class.net::CanonicalCookie", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.net::CanonicalCookie" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, i8, i32, i32 }
%"struct.net::CookieAccessResult" = type <{ %"class.net::CookieInclusionStatus", i32, i32, i8, [3 x i8] }>
%"class.net::CookieInclusionStatus" = type { i32, i32 }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.net::CookieWithAccessResult"* }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"struct.net::CookieAndLineWithAccessResult"*, %"struct.net::CookieAndLineWithAccessResult"*, %"class.std::__1::__compressed_pair.332" }
%"struct.net::CookieAndLineWithAccessResult" = type <{ %"class.absl::optional.327", %"class.std::__1::basic_string", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.absl::optional.327" = type { %"class.absl::optional_internal::optional_data.328" }
%"class.absl::optional_internal::optional_data.328" = type { %"class.absl::optional_internal::optional_data_base.329" }
%"class.absl::optional_internal::optional_data_base.329" = type { %"class.absl::optional_internal::optional_data_dtor_base.330" }
%"class.absl::optional_internal::optional_data_dtor_base.330" = type { i8, %union.anon.331 }
%union.anon.331 = type { %"class.net::CanonicalCookie" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.net::CookieAndLineWithAccessResult"* }
%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional.337", %class.scoped_refptr.342, %"class.net::SSLInfo", %class.scoped_refptr.373, %"class.net::HttpVaryData", %"class.std::__1::vector.129" }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.337" = type { %"class.absl::optional_internal::optional_data.338" }
%"class.absl::optional_internal::optional_data.338" = type { %"class.absl::optional_internal::optional_data_base.339" }
%"class.absl::optional_internal::optional_data_base.339" = type { %"class.absl::optional_internal::optional_data_dtor_base.340" }
%"class.absl::optional_internal::optional_data_dtor_base.340" = type { i8, %union.anon.341 }
%union.anon.341 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.342 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type opaque
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.343, %class.scoped_refptr.343, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.356", %"class.std::__1::basic_string", %"class.std::__1::vector.364", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.343 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.344", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.345", %"class.std::__1::vector.349" }
%"class.base::RefCountedThreadSafe.344" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.129", %"class.std::__1::vector.129", %"class.std::__1::vector.129", %"class.std::__1::vector.129" }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.349" = type { %"class.std::__1::__vector_base.350" }
%"class.std::__1::__vector_base.350" = type { %"class.std::__1::unique_ptr.345"*, %"class.std::__1::unique_ptr.345"*, %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.std::__1::unique_ptr.345"* }
%"class.std::__1::vector.356" = type { %"class.std::__1::__vector_base.357" }
%"class.std::__1::__vector_base.357" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.359" }
%"class.net::HashValue" = type { i32, %union.anon.358 }
%union.anon.358 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.364" = type { %"class.std::__1::__vector_base.365" }
%"class.std::__1::__vector_base.365" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.368" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.366, i32, [4 x i8] }>
%class.scoped_refptr.366 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.367", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.367" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.net::UploadProgress" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.absl::optional.382" = type { %"class.absl::optional_internal::optional_data.383" }
%"class.absl::optional_internal::optional_data.383" = type { %"class.absl::optional_internal::optional_data_base.384" }
%"class.absl::optional_internal::optional_data_base.384" = type { %"class.absl::optional_internal::optional_data_dtor_base.385" }
%"class.absl::optional_internal::optional_data_dtor_base.385" = type { i8, %union.anon.386 }
%union.anon.386 = type { %"class.base::internal::flat_tree.387" }
%"class.base::internal::flat_tree.387" = type { %"class.std::__1::vector.388" }
%"class.std::__1::vector.388" = type { %"class.std::__1::__vector_base.389" }
%"class.std::__1::__vector_base.389" = type { i32*, i32*, %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { i32* }
%"class.net::SocketTag" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.395" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.396" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.400" = type { %"class.absl::optional_internal::optional_data.401" }
%"class.absl::optional_internal::optional_data.401" = type { %"class.absl::optional_internal::optional_data_base.402" }
%"class.absl::optional_internal::optional_data_base.402" = type { %"class.absl::optional_internal::optional_data_dtor_base.403" }
%"class.absl::optional_internal::optional_data_dtor_base.403" = type { i8, %union.anon.404 }
%union.anon.404 = type { i8 }
%class.scoped_refptr.405 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.406", i8* }
%"class.base::RefCountedThreadSafe.406" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.407 = type { %"class.net::URLRequestContextGetter"* }
%"class.net::URLRequestContextGetter" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.408", [4 x i8], %"class.base::ObserverList.409" }
%"class.base::RefCountedThreadSafe.408" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ObserverList.409" = type <{ %"class.std::__1::vector.40", %"class.base::LinkedList.410", i64, i32, [4 x i8] }>
%"class.base::LinkedList.410" = type { %"class.base::LinkNode.411" }
%"class.base::LinkNode.411" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.286" = type { %"class.absl::optional_internal::optional_data.287" }
%"class.absl::optional_internal::optional_data.287" = type { %"class.absl::optional_internal::optional_data_base.288" }
%"class.absl::optional_internal::optional_data_base.288" = type { %"class.absl::optional_internal::optional_data_dtor_base.289" }
%"class.absl::optional_internal::optional_data_dtor_base.289" = type { i8, %union.anon.290 }
%union.anon.290 = type { %"class.url::Origin" }
%"class.base::RepeatingCallback.413" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.311" }
%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.313" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%class.scoped_refptr.373 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.374", %"class.std::__1::vector.375", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.374" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.375" = type { %"class.std::__1::__vector_base.376" }
%"class.std::__1::__vector_base.376" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.377" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::RepeatingCallback.414" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.net::ChunkedUploadDataStream::Writer"* }
%"class.net::ChunkedUploadDataStream::Writer" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.418 }
%class.scoped_refptr.418 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.net::ChunkedUploadDataStream"* }
%"class.net::ChunkedUploadDataStream" = type { %"class.net::UploadDataStream", i64, i64, i8, %"class.std::__1::vector.425", %class.scoped_refptr.405, i32, %"class.base::WeakPtrFactory.433" }
%"class.std::__1::vector.425" = type { %"class.std::__1::__vector_base.426" }
%"class.std::__1::__vector_base.426" = type { %"class.std::__1::unique_ptr.427"*, %"class.std::__1::unique_ptr.427"*, %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::unique_ptr.427" = type opaque
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.std::__1::unique_ptr.427"* }
%"class.base::WeakPtrFactory.433" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.437 = type { %"class.net::URLRequestThrottlerEntryInterface"* }
%"class.net::URLRequestThrottlerEntryInterface" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.438", [4 x i8] }>
%"class.base::RefCountedThreadSafe.438" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.net::URLFetcherResponseWriter"* }
%"class.net::URLFetcherResponseWriter" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.base::RepeatingTimer"* }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback.448" }
%"class.base::RepeatingCallback.448" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.net::URLFetcher" = type { i32 (...)** }
%"class.net::URLFetcherDelegate" = type { i32 (...)** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.net::URLFetcherCore"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.net::URLFetcherStringWriter" = type { %"class.net::URLFetcherResponseWriter", %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.net::URLFetcherFileWriter" = type { %"class.net::URLFetcherResponseWriter", %class.scoped_refptr, %"class.base::FilePath", i8, %"class.std::__1::unique_ptr.453", %"class.base::OnceCallback.275", %"class.base::WeakPtrFactory.459" }
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.net::FileStream"* }
%"class.net::FileStream" = type opaque
%"class.base::WeakPtrFactory.459" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.net::SSLPrivateKey" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.461", [4 x i8] }>
%"class.base::RefCountedThreadSafe.461" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr.405, i32, i32 }
%"class.base::SupportsUserData" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::SupportsUserData::Data" = type { i32 (...)** }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.net::UploadBytesElementReader" = type { %"class.net::UploadElementReader", i8*, i64, i64 }
%"class.net::UploadElementReader" = type { i32 (...)** }
%"class.net::UploadFileElementReader" = type { %"class.net::UploadElementReader", %class.scoped_refptr.15, %"class.base::FilePath", i64, i64, %"class.base::Time", %"class.std::__1::unique_ptr.453", i64, i64, %"struct.base::File::Info", i32, %"class.base::OnceCallback.275", i8, %"class.base::WeakPtrFactory.481" }
%"struct.base::File::Info" = type { i64, i8, i8, %"class.base::Time", %"class.base::Time", %"class.base::Time" }
%"class.base::WeakPtrFactory.481" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.net::TransportInfo" = type opaque

$_ZNSt3__16__treeIPN3net14URLFetcherCoreENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS4_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS4_ENS3_5ErrorEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS3_ENS2_5ErrorEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbEJ13scoped_refptrIS4_ESB_bEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbEJ13scoped_refptrIS3_ESA_bEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS4_EEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base12LazyInstanceIN3net14URLFetcherCore8RegistryENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvNS_9TimeDeltaEEJ13scoped_refptrIS4_ES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvNS_9TimeDeltaEEJ13scoped_refptrIS3_ES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFv13scoped_refptrINS3_17DrainableIOBufferEEiEJS5_IS4_ES7_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFv13scoped_refptrINS2_17DrainableIOBufferEEiEJS4_IS3_ES6_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJiEEENS_12OnceCallbackIFvDpT_EEEvEUliE_JEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJiEEENS_12OnceCallbackIFvDpT_EEEvEUliE_JEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvllEJ13scoped_refptrIS4_EllEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvllEJ13scoped_refptrIS3_EllEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvlllEJ13scoped_refptrIS4_ElllEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvlllEJ13scoped_refptrIS3_ElllEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZN3net14URLFetcherCore10g_registryE = hidden global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZTVN3net14URLFetcherCoreE = hidden unnamed_addr constant { [12 x i8*], [5 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"struct.net::TransportInfo"*, %"class.base::OnceCallback.275"*)* @_ZN3net10URLRequest8Delegate11OnConnectedEPS0_RKNS_13TransportInfoEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, %"struct.net::RedirectInfo"*, i8*)* @_ZN3net14URLFetcherCore18OnReceivedRedirectEPNS_10URLRequestERKNS_12RedirectInfoEPb to i8*), i8* bitcast (void (%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"class.net::AuthChallengeInfo"*)* @_ZN3net10URLRequest8Delegate14OnAuthRequiredEPS0_RKNS_17AuthChallengeInfoE to i8*), i8* bitcast (void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, %"class.net::SSLCertRequestInfo"*)* @_ZN3net14URLFetcherCore22OnCertificateRequestedEPNS_10URLRequestEPNS_18SSLCertRequestInfoE to i8*), i8* bitcast (void (%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, i32, %"class.net::SSLInfo"*, i1)* @_ZN3net10URLRequest8Delegate21OnSSLCertificateErrorEPS0_iRKNS_7SSLInfoEb to i8*), i8* bitcast (void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)* @_ZN3net14URLFetcherCore17OnResponseStartedEPNS_10URLRequestEi to i8*), i8* bitcast (void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)* @_ZN3net14URLFetcherCore15OnReadCompletedEPNS_10URLRequestEi to i8*), i8* bitcast (void (%"class.net::URLFetcherCore"*)* @_ZN3net14URLFetcherCoreD2Ev to i8*), i8* bitcast (void (%"class.net::URLFetcherCore"*)* @_ZN3net14URLFetcherCoreD0Ev to i8*), i8* bitcast (void (%"class.net::URLFetcherCore"*)* @_ZN3net14URLFetcherCore21OnContextShuttingDownEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.net::URLFetcherCore"*)* @_ZThn16_N3net14URLFetcherCore21OnContextShuttingDownEv to i8*), i8* bitcast (void (%"class.net::URLFetcherCore"*)* @_ZThn16_N3net14URLFetcherCoreD1Ev to i8*), i8* bitcast (void (%"class.net::URLFetcherCore"*)* @_ZThn16_N3net14URLFetcherCoreD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [42 x i8] c"../../net/url_request/url_fetcher_core.cc\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"original_url_.is_valid()\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"Start\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"Stop\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"AppendChunkToUpload\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"ReceivedContentWasMalformed\00", align 1
@_ZN12_GLOBAL__N_129g_ignore_certificate_requestsE = internal unnamed_addr global i8 0, align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"POST\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"PUT\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"PATCH\00", align 1
@_ZN3net18HttpRequestHeaders12kContentTypeE = external constant [0 x i8], align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"StartURLRequest\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"DELETE\00", align 1
@.str.12 = private unnamed_addr constant [31 x i8] c"StartURLRequestWhenAppropriate\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"RetryOrCompleteUrlFetch\00", align 1
@.str.14 = private unnamed_addr constant [31 x i8] c"CancelRequestAndInformDelegate\00", align 1
@.str.15 = private unnamed_addr constant [29 x i8] c"InformDelegateUploadProgress\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"InformDelegateDownloadProgress\00", align 1

@_ZN3net14URLFetcherCore8RegistryC1Ev = hidden unnamed_addr alias void (%"class.net::URLFetcherCore::Registry"*), void (%"class.net::URLFetcherCore::Registry"*)* @_ZN3net14URLFetcherCore8RegistryC2Ev
@_ZN3net14URLFetcherCore8RegistryD1Ev = hidden unnamed_addr alias void (%"class.net::URLFetcherCore::Registry"*), void (%"class.net::URLFetcherCore::Registry"*)* @_ZN3net14URLFetcherCore8RegistryD2Ev
@_ZN3net14URLFetcherCoreC1EPNS_10URLFetcherERK4GURLNS1_11RequestTypeEPNS_18URLFetcherDelegateENS_27NetworkTrafficAnnotationTagE = hidden unnamed_addr alias void (%"class.net::URLFetcherCore"*, %"class.net::URLFetcher"*, %class.GURL*, i32, %"class.net::URLFetcherDelegate"*, i32), void (%"class.net::URLFetcherCore"*, %"class.net::URLFetcher"*, %class.GURL*, i32, %"class.net::URLFetcherDelegate"*, i32)* @_ZN3net14URLFetcherCoreC2EPNS_10URLFetcherERK4GURLNS1_11RequestTypeEPNS_18URLFetcherDelegateENS_27NetworkTrafficAnnotationTagE
@_ZN3net14URLFetcherCoreD1Ev = hidden unnamed_addr alias void (%"class.net::URLFetcherCore"*), void (%"class.net::URLFetcherCore"*)* @_ZN3net14URLFetcherCoreD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore8RegistryC2Ev(%"class.net::URLFetcherCore::Registry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_node_base"** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore8RegistryD2Ev(%"class.net::URLFetcherCore::Registry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeIPN3net14URLFetcherCoreENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node"* %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore8Registry17AddURLFetcherCoreEPS0_(%"class.net::URLFetcherCore::Registry"*, %"class.net::URLFetcherCore"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.net::URLFetcherCore"* %1 to i64
  %4 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %32, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %35, %32 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %34, %32 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %14 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %13, align 8
  %15 = icmp ugt %"class.net::URLFetcherCore"* %14, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %38

22:                                               ; preds = %10
  %23 = icmp ult %"class.net::URLFetcherCore"* %14, %1
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %38

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %38

32:                                               ; preds = %24, %16
  %33 = phi %"class.std::__1::__tree_node_base"* [ %18, %16 ], [ %26, %24 ]
  %34 = phi %"class.std::__1::__tree_node_base"** [ %17, %16 ], [ %25, %24 ]
  %35 = bitcast %"class.std::__1::__tree_node_base"* %33 to %"class.std::__1::__tree_node"*
  br label %10

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %38

38:                                               ; preds = %36, %30, %28, %20
  %39 = phi %"class.std::__1::__tree_end_node"* [ %4, %36 ], [ %21, %20 ], [ %29, %28 ], [ %31, %30 ]
  %40 = phi %"class.std::__1::__tree_node_base"** [ %37, %36 ], [ %17, %20 ], [ %25, %28 ], [ %12, %30 ]
  %41 = bitcast %"class.std::__1::__tree_node_base"** %40 to %"class.std::__1::__tree_node"**
  %42 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node"* %42, null
  br i1 %43, label %44, label %68

44:                                               ; preds = %38
  %45 = tail call i8* @_Znwm(i64 40) #13, !noalias !2
  %46 = getelementptr inbounds i8, i8* %45, i64 32
  %47 = bitcast i8* %46 to i64*
  store i64 %3, i64* %47, align 8, !noalias !2
  %48 = bitcast i8* %45 to %"class.std::__1::__tree_node_base"*
  %49 = getelementptr inbounds i8, i8* %45, i64 16
  %50 = bitcast i8* %49 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %39, %"class.std::__1::__tree_end_node"** %50, align 8
  %51 = bitcast %"class.std::__1::__tree_node_base"** %40 to i8**
  store i8* %45, i8** %51, align 8
  %52 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %44
  %58 = ptrtoint %"class.std::__1::__tree_node_base"* %55 to i64
  %59 = bitcast %"class.net::URLFetcherCore::Registry"* %0 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  br label %61

61:                                               ; preds = %57, %44
  %62 = phi %"class.std::__1::__tree_node_base"* [ %48, %44 ], [ %60, %57 ]
  %63 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %64, %"class.std::__1::__tree_node_base"* %62) #12
  %65 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  br label %68

68:                                               ; preds = %38, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore8Registry20RemoveURLFetcherCoreEPS0_(%"class.net::URLFetcherCore::Registry"*, %"class.net::URLFetcherCore"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  %7 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node_base"*
  br i1 %6, label %71, label %8

8:                                                ; preds = %2, %8
  %9 = phi %"class.std::__1::__tree_end_node"* [ %19, %8 ], [ %3, %2 ]
  %10 = phi %"class.std::__1::__tree_node"* [ %20, %8 ], [ %5, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1
  %12 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %11, align 8
  %13 = icmp ult %"class.net::URLFetcherCore"* %12, %1
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__tree_node_base"** %14 to %"class.std::__1::__tree_node"**
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node"* %10 to %"class.std::__1::__tree_node"**
  %18 = select i1 %13, %"class.std::__1::__tree_node"** %15, %"class.std::__1::__tree_node"** %17
  %19 = select i1 %13, %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"* %16
  %20 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  %21 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %21, label %22, label %8

22:                                               ; preds = %8
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %19, %3
  br i1 %23, label %71, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 4
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.net::URLFetcherCore"**
  %27 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %26, align 8
  %28 = icmp ugt %"class.net::URLFetcherCore"* %27, %1
  br i1 %28, label %71, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 1, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %41

33:                                               ; preds = %29
  %34 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node_base"*
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 2
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_end_node"**
  %37 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 0, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, %34
  br i1 %40, label %57, label %48

41:                                               ; preds = %29, %41
  %42 = phi %"class.std::__1::__tree_node_base"* [ %44, %41 ], [ %31, %29 ]
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %46, label %41

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %42, i64 0, i32 0
  br label %57

48:                                               ; preds = %33, %48
  %49 = phi %"class.std::__1::__tree_end_node"** [ %52, %48 ], [ %36, %33 ]
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to %"class.std::__1::__tree_node_base"**
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %51, i64 0, i32 2
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, %51
  br i1 %56, label %57, label %48

57:                                               ; preds = %48, %46, %33
  %58 = phi %"class.std::__1::__tree_end_node"* [ %47, %46 ], [ %37, %33 ], [ %53, %48 ]
  %59 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_end_node"* %60, %19
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = ptrtoint %"class.std::__1::__tree_end_node"* %58 to i64
  %64 = bitcast %"class.net::URLFetcherCore::Registry"* %0 to i64*
  store i64 %63, i64* %64, align 8
  br label %65

65:                                               ; preds = %62, %57
  %66 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, -1
  store i64 %68, i64* %66, align 8
  %69 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %7, %"class.std::__1::__tree_node_base"* %69) #12
  %70 = bitcast %"class.std::__1::__tree_end_node"* %19 to i8*
  tail call void @_ZdlPv(i8* %70) #13
  br label %71

71:                                               ; preds = %2, %22, %24, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore8Registry9CancelAllEv(%"class.net::URLFetcherCore::Registry"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.net::URLFetcherCore::Registry"* %0 to %"class.std::__1::__tree_node"**
  br label %7

7:                                                ; preds = %5, %7
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %8, i64 0, i32 1
  %10 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %9, align 8
  tail call void @_ZN3net14URLFetcherCore16CancelURLRequestEi(%"class.net::URLFetcherCore"* %10, i32 -3)
  %11 = load i64, i64* %2, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %7

13:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore16CancelURLRequestEi(%"class.net::URLFetcherCore"*, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %3, align 8
  %5 = icmp eq %"class.net::URLRequest"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @_ZN3net10URLRequest15CancelWithErrorEi(%"class.net::URLRequest"* nonnull %4, i32 %1) #12
  tail call void @_ZN3net14URLFetcherCore14ReleaseRequestEv(%"class.net::URLFetcherCore"* %0)
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 8
  store i32 %1, i32* %9, align 4
  %10 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 20
  %11 = bitcast %class.scoped_refptr.407* %10 to i64*
  %12 = getelementptr inbounds %class.scoped_refptr.407, %class.scoped_refptr.407* %10, i64 0, i32 0
  %13 = load %"class.net::URLRequestContextGetter"*, %"class.net::URLRequestContextGetter"** %12, align 8
  store i64 0, i64* %11, align 8
  %14 = icmp eq %"class.net::URLRequestContextGetter"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.net::URLRequestContextGetter", %"class.net::URLRequestContextGetter"* %13, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.408", %"class.base::RefCountedThreadSafe.408"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.408", %"class.base::RefCountedThreadSafe.408"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe.408"* %21 to %"class.net::URLRequestContextGetter"*
  tail call void @_ZNK3net23URLRequestContextGetter10OnDestructEv(%"class.net::URLRequestContextGetter"* %22) #12
  br label %23

23:                                               ; preds = %8, %15, %20
  %24 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %28) #12
  store i8 0, i8* %24, align 8
  br label %29

29:                                               ; preds = %23, %27
  %30 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 22
  store i8* null, i8** %30, align 8
  %31 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 23, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %31) #12
  %32 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 48
  store i8 1, i8* %32, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCoreC2EPNS_10URLFetcherERK4GURLNS1_11RequestTypeEPNS_18URLFetcherDelegateENS_27NetworkTrafficAnnotationTagE(%"class.net::URLFetcherCore"*, %"class.net::URLFetcher"*, %class.GURL* dereferenceable(120), i32, %"class.net::URLFetcherDelegate"*, i32) unnamed_addr #0 align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN3net14URLFetcherCoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN3net14URLFetcherCoreE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 4
  store %"class.net::URLFetcher"* %1, %"class.net::URLFetcher"** %11, align 8
  %12 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 5
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %12, %class.GURL* dereferenceable(120) %2) #12
  %13 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 6
  tail call void @_ZN4GURLC1Ev(%class.GURL* %13) #12
  %14 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 7
  store i32 %3, i32* %14, align 8
  %15 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 9
  store %"class.net::URLFetcherDelegate"* %4, %"class.net::URLFetcherDelegate"** %15, align 8
  %16 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #12
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 0, i32 0
  %18 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %17, align 8
  %19 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 10, i32 0
  store %"class.base::SequencedTaskRunner"* %18, %"class.base::SequencedTaskRunner"** %19, align 8
  %20 = icmp eq %"class.base::SequencedTaskRunner"* %18, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  br label %24

24:                                               ; preds = %6, %21
  %25 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 11, i32 0
  %26 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 17
  %27 = bitcast %"class.base::SingleThreadTaskRunner"** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 29, i1 false)
  store i32 -1, i32* %26, align 8
  %28 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 19, i32 0
  %29 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 24
  %31 = bitcast %"class.net::IOBuffer"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 17, i1 false)
  %32 = bitcast %union.anon.290* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 96, i1 false)
  tail call void @_ZN3net18HttpRequestHeadersC1Ev(%"class.net::HttpRequestHeaders"* %30) #12
  %33 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 25, i32 0
  store %"class.net::HttpResponseHeaders"* null, %"class.net::HttpResponseHeaders"** %33, align 8
  %34 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 26, i32 0
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 26, i32 2
  tail call void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"* %35) #12
  %36 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 27
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 29
  %38 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 31
  %39 = bitcast i64* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false)
  tail call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %38) #12
  %40 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 32
  store i8 0, i8* %40, align 4
  %41 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 34
  %42 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #12
  %43 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 35
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %43) #12
  %44 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 36
  %45 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 44
  %46 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 50
  %47 = bitcast %"class.std::__1::unique_ptr.439"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 51
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 52
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 53
  %51 = bitcast i64* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 77, i1 false)
  %52 = bitcast %"class.std::__1::unique_ptr.415"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 33, i1 false)
  store i8 1, i8* %50, align 2
  %53 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 55
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 56
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 58, i32 0
  %56 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 62
  %57 = bitcast i64* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false)
  %58 = bitcast i64* %56 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %58, align 8
  %59 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 64
  store i64 -1, i64* %59, align 8
  %60 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 65, i32 0
  store i32 %5, i32* %60, align 8
  %61 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 5, i32 1
  %62 = load i8, i8* %61, align 8, !range !5
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %24
  %65 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 109, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0)) #12
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #12
  br label %67

67:                                               ; preds = %24, %64
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

declare dereferenceable(8) %class.scoped_refptr* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #2

declare void @_ZN3net18HttpRequestHeadersC1Ev(%"class.net::HttpRequestHeaders"*) unnamed_addr #2

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #2

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore5StartEv(%"class.net::URLFetcherCore"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 11
  %5 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %4, i64 0, i32 0
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %8, label %28

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 20, i32 0
  %10 = load %"class.net::URLRequestContextGetter"*, %"class.net::URLRequestContextGetter"** %9, align 8
  %11 = bitcast %"class.net::URLRequestContextGetter"* %10 to %"class.base::SingleThreadTaskRunner"* (%"class.net::URLRequestContextGetter"*)***
  %12 = load %"class.base::SingleThreadTaskRunner"* (%"class.net::URLRequestContextGetter"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.net::URLRequestContextGetter"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.net::URLRequestContextGetter"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.net::URLRequestContextGetter"*)** %12, i64 1
  %14 = load %"class.base::SingleThreadTaskRunner"* (%"class.net::URLRequestContextGetter"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.net::URLRequestContextGetter"*)** %13, align 8
  %15 = tail call %"class.base::SingleThreadTaskRunner"* %14(%"class.net::URLRequestContextGetter"* %10) #12
  %16 = ptrtoint %"class.base::SingleThreadTaskRunner"* %15 to i64
  %17 = bitcast %class.scoped_refptr.14* %4 to i64*
  %18 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  store i64 %16, i64* %17, align 8
  %19 = icmp eq %"class.base::SingleThreadTaskRunner"* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %18, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe.13"* %26 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %27) #12
  br label %28

28:                                               ; preds = %25, %20, %8, %1
  %29 = bitcast %class.scoped_refptr.14* %4 to %"class.base::TaskRunner"**
  %30 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %29, align 8
  %31 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 124) #12
  %32 = call i8* @_Znwm(i64 56) #13, !noalias !6
  %33 = bitcast i8* %32 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %33, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS4_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !6
  %34 = getelementptr inbounds i8, i8* %32, i64 32
  %35 = bitcast i8* %34 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*)* @_ZN3net14URLFetcherCore15StartOnIOThreadEv to i64), i64 0>, <2 x i64>* %35, align 8, !noalias !6
  %36 = getelementptr inbounds i8, i8* %32, i64 48
  %37 = bitcast i8* %36 to %"class.net::URLFetcherCore"**
  store %"class.net::URLFetcherCore"* %0, %"class.net::URLFetcherCore"** %37, align 8, !noalias !6
  %38 = icmp eq %"class.net::URLFetcherCore"* %0, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic, !noalias !6
  br label %42

42:                                               ; preds = %28, %39
  %43 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %32, i8** %43, align 8, !alias.scope !6
  %44 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %30, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #12
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #12
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore15StartOnIOThreadEv(%"class.net::URLFetcherCore"*) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.275", align 8
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 42
  %4 = load i8, i8* %3, align 4, !range !5
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 152) #13
  %8 = bitcast i8* %7 to %"class.net::ChunkedUploadDataStream"*
  tail call void @_ZN3net23ChunkedUploadDataStreamC1El(%"class.net::ChunkedUploadDataStream"* nonnull %8, i64 0) #12
  %9 = ptrtoint i8* %7 to i64
  %10 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 45
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.422", %"class.std::__1::unique_ptr.422"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.net::ChunkedUploadDataStream"*, %"class.net::ChunkedUploadDataStream"** %11, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.422"* %10 to i64*
  store i64 %9, i64* %13, align 8
  %14 = icmp eq %"class.net::ChunkedUploadDataStream"* %12, null
  %15 = bitcast i8* %7 to %"class.net::ChunkedUploadDataStream"*
  br i1 %14, label %22, label %16

16:                                               ; preds = %6
  %17 = bitcast %"class.net::ChunkedUploadDataStream"* %12 to void (%"class.net::ChunkedUploadDataStream"*)***
  %18 = load void (%"class.net::ChunkedUploadDataStream"*)**, void (%"class.net::ChunkedUploadDataStream"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.net::ChunkedUploadDataStream"*)*, void (%"class.net::ChunkedUploadDataStream"*)** %18, i64 1
  %20 = load void (%"class.net::ChunkedUploadDataStream"*)*, void (%"class.net::ChunkedUploadDataStream"*)** %19, align 8
  tail call void %20(%"class.net::ChunkedUploadDataStream"* nonnull %12) #12
  %21 = load %"class.net::ChunkedUploadDataStream"*, %"class.net::ChunkedUploadDataStream"** %11, align 8
  br label %22

22:                                               ; preds = %16, %6
  %23 = phi %"class.net::ChunkedUploadDataStream"* [ %21, %16 ], [ %15, %6 ]
  %24 = tail call %"class.net::ChunkedUploadDataStream::Writer"* @_ZN3net23ChunkedUploadDataStream12CreateWriterEv(%"class.net::ChunkedUploadDataStream"* %23) #12
  %25 = ptrtoint %"class.net::ChunkedUploadDataStream::Writer"* %24 to i64
  %26 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 44
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.415", %"class.std::__1::unique_ptr.415"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.net::ChunkedUploadDataStream::Writer"*, %"class.net::ChunkedUploadDataStream::Writer"** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.415"* %26 to i64*
  store i64 %25, i64* %29, align 8
  %30 = icmp eq %"class.net::ChunkedUploadDataStream::Writer"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  tail call void @_ZN3net23ChunkedUploadDataStream6WriterD1Ev(%"class.net::ChunkedUploadDataStream::Writer"* nonnull %28) #12
  %32 = bitcast %"class.net::ChunkedUploadDataStream::Writer"* %28 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %22, %31, %1
  %34 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 50, i32 0, i32 0, i32 0
  %35 = load %"class.net::URLFetcherResponseWriter"*, %"class.net::URLFetcherResponseWriter"** %34, align 8
  %36 = icmp eq %"class.net::URLFetcherResponseWriter"* %35, null
  br i1 %36, label %37, label %50

37:                                               ; preds = %33
  %38 = tail call i8* @_Znwm(i64 32) #13
  %39 = bitcast i8* %38 to %"class.net::URLFetcherStringWriter"*
  tail call void @_ZN3net22URLFetcherStringWriterC1Ev(%"class.net::URLFetcherStringWriter"* nonnull %39) #12
  %40 = load %"class.net::URLFetcherResponseWriter"*, %"class.net::URLFetcherResponseWriter"** %34, align 8
  %41 = bitcast %"class.net::URLFetcherResponseWriter"** %34 to i8**
  store i8* %38, i8** %41, align 8
  %42 = icmp eq %"class.net::URLFetcherResponseWriter"* %40, null
  %43 = bitcast i8* %38 to %"class.net::URLFetcherResponseWriter"*
  br i1 %42, label %50, label %44

44:                                               ; preds = %37
  %45 = bitcast %"class.net::URLFetcherResponseWriter"* %40 to void (%"class.net::URLFetcherResponseWriter"*)***
  %46 = load void (%"class.net::URLFetcherResponseWriter"*)**, void (%"class.net::URLFetcherResponseWriter"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.net::URLFetcherResponseWriter"*)*, void (%"class.net::URLFetcherResponseWriter"*)** %46, i64 1
  %48 = load void (%"class.net::URLFetcherResponseWriter"*)*, void (%"class.net::URLFetcherResponseWriter"*)** %47, align 8
  tail call void %48(%"class.net::URLFetcherResponseWriter"* nonnull %40) #12
  %49 = load %"class.net::URLFetcherResponseWriter"*, %"class.net::URLFetcherResponseWriter"** %34, align 8
  br label %50

50:                                               ; preds = %33, %37, %44
  %51 = phi %"class.net::URLFetcherResponseWriter"* [ %35, %33 ], [ %43, %37 ], [ %49, %44 ]
  %52 = tail call i8* @_Znwm(i64 56) #13, !noalias !11
  %53 = bitcast i8* %52 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %53, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS4_EEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !11
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*, i32)* @_ZN3net14URLFetcherCore19DidInitializeWriterEi to i64), i64 0>, <2 x i64>* %55, align 8, !noalias !11
  %56 = getelementptr inbounds i8, i8* %52, i64 48
  %57 = bitcast i8* %56 to %"class.net::URLFetcherCore"**
  store %"class.net::URLFetcherCore"* %0, %"class.net::URLFetcherCore"** %57, align 8, !noalias !11
  %58 = icmp eq %"class.net::URLFetcherCore"* %0, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 1 monotonic, !noalias !11
  br label %62

62:                                               ; preds = %50, %59
  %63 = bitcast %"class.base::OnceCallback.275"* %2 to i8**
  store i8* %52, i8** %63, align 8, !alias.scope !11
  %64 = bitcast %"class.net::URLFetcherResponseWriter"* %51 to i32 (%"class.net::URLFetcherResponseWriter"*, %"class.base::OnceCallback.275"*)***
  %65 = load i32 (%"class.net::URLFetcherResponseWriter"*, %"class.base::OnceCallback.275"*)**, i32 (%"class.net::URLFetcherResponseWriter"*, %"class.base::OnceCallback.275"*)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.net::URLFetcherResponseWriter"*, %"class.base::OnceCallback.275"*)*, i32 (%"class.net::URLFetcherResponseWriter"*, %"class.base::OnceCallback.275"*)** %65, i64 2
  %67 = load i32 (%"class.net::URLFetcherResponseWriter"*, %"class.base::OnceCallback.275"*)*, i32 (%"class.net::URLFetcherResponseWriter"*, %"class.base::OnceCallback.275"*)** %66, align 8
  %68 = call i32 %67(%"class.net::URLFetcherResponseWriter"* %51, %"class.base::OnceCallback.275"* nonnull %2) #12
  %69 = getelementptr inbounds %"class.base::OnceCallback.275", %"class.base::OnceCallback.275"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %69) #12
  switch i32 %68, label %70 [
    i32 -1, label %72
    i32 0, label %71
  ]

70:                                               ; preds = %62
  call void @_ZN3net14URLFetcherCore30CancelRequestAndInformDelegateEi(%"class.net::URLFetcherCore"* %0, i32 %68) #12
  br label %72

71:                                               ; preds = %62
  call void @_ZN3net14URLFetcherCore30StartURLRequestWhenAppropriateEv(%"class.net::URLFetcherCore"* %0) #12
  br label %72

72:                                               ; preds = %62, %71, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore4StopEv(%"class.net::URLFetcherCore"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 9
  store %"class.net::URLFetcherDelegate"* null, %"class.net::URLFetcherDelegate"** %4, align 8
  %5 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 4
  store %"class.net::URLFetcher"* null, %"class.net::URLFetcher"** %5, align 8
  %6 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 11, i32 0
  %7 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %6, align 8
  %8 = icmp eq %"class.base::SingleThreadTaskRunner"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.base::SingleThreadTaskRunner"* %7 to %"class.base::SequencedTaskRunner"*
  %11 = bitcast %"class.base::SingleThreadTaskRunner"* %7 to i1 (%"class.base::SequencedTaskRunner"*)***
  %12 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %12, i64 5
  %14 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.base::SequencedTaskRunner"* nonnull %10) #12
  br i1 %15, label %16, label %17

16:                                               ; preds = %9
  tail call void @_ZN3net14URLFetcherCore16CancelURLRequestEi(%"class.net::URLFetcherCore"* %0, i32 -3)
  br label %37

17:                                               ; preds = %9
  %18 = bitcast %"class.base::SingleThreadTaskRunner"** %6 to %"class.base::TaskRunner"**
  %19 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %18, align 8
  %20 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 139) #12
  %21 = call i8* @_Znwm(i64 64) #13, !noalias !16
  %22 = bitcast i8* %21 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %22, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS4_ENS3_5ErrorEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS3_ENS2_5ErrorEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !16
  %23 = getelementptr inbounds i8, i8* %21, i64 32
  %24 = bitcast i8* %23 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*, i32)* @_ZN3net14URLFetcherCore16CancelURLRequestEi to i64), i64 0>, <2 x i64>* %24, align 8, !noalias !16
  %25 = getelementptr inbounds i8, i8* %21, i64 48
  %26 = bitcast i8* %25 to %"class.net::URLFetcherCore"**
  store %"class.net::URLFetcherCore"* %0, %"class.net::URLFetcherCore"** %26, align 8, !noalias !16
  %27 = icmp eq %"class.net::URLFetcherCore"* %0, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic, !noalias !16
  br label %31

31:                                               ; preds = %17, %28
  %32 = getelementptr inbounds i8, i8* %21, i64 56
  %33 = bitcast i8* %32 to i32*
  store i32 -3, i32* %33, align 4, !noalias !16
  %34 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %21, i8** %34, align 8, !alias.scope !16
  %35 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %19, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #12
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #12
  br label %37

37:                                               ; preds = %1, %31, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore13SetUploadDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.net::URLFetcherCore"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 39
  %5 = icmp eq %"class.std::__1::basic_string"* %4, %1
  br i1 %5, label %35, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %10, label %25, label %15

15:                                               ; preds = %6
  br i1 %14, label %19, label %16

16:                                               ; preds = %15
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #12
  br label %35

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %21, i64 %23) #12
  br label %35

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %31 = zext i8 %13 to i64
  %32 = select i1 %14, i8* %27, i8* %30
  %33 = select i1 %14, i64 %29, i64 %31
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %32, i64 %33) #12
  br label %35

35:                                               ; preds = %3, %16, %19, %25
  %36 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 34
  %37 = icmp eq %"class.std::__1::basic_string"* %36, %2
  br i1 %37, label %67, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %42, label %57, label %47

47:                                               ; preds = %38
  br i1 %46, label %51, label %48

48:                                               ; preds = %47
  %49 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #12
  br label %67

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %36, i8* %53, i64 %55) #12
  br label %67

57:                                               ; preds = %38
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %63 = zext i8 %45 to i64
  %64 = select i1 %46, i8* %59, i8* %62
  %65 = select i1 %46, i64 %61, i64 %63
  %66 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %36, i8* %64, i64 %65) #12
  br label %67

67:                                               ; preds = %35, %48, %51, %57
  %68 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 32
  store i8 1, i8* %68, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK3net14URLFetcherCore21AssertHasNoUploadDataEv(%"class.net::URLFetcherCore"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore17SetUploadFilePathERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN4base8FilePathEmm13scoped_refptrINSA_10TaskRunnerEE(%"class.net::URLFetcherCore"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24), i64, i64, %"class.base::TaskRunner"*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 39
  %8 = icmp eq %"class.std::__1::basic_string"* %7, %1
  br i1 %8, label %38, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %13, label %28, label %18

18:                                               ; preds = %9
  br i1 %17, label %22, label %19

19:                                               ; preds = %18
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #12
  br label %38

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %7, i8* %24, i64 %26) #12
  br label %38

28:                                               ; preds = %9
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %34 = zext i8 %16 to i64
  %35 = select i1 %17, i8* %30, i8* %33
  %36 = select i1 %17, i64 %32, i64 %34
  %37 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %7, i8* %35, i64 %36) #12
  br label %38

38:                                               ; preds = %6, %19, %22, %28
  %39 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 35
  %40 = tail call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"* %39, %"class.base::FilePath"* dereferenceable(24) %2) #12
  %41 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 36
  store i64 %3, i64* %41, align 8
  %42 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 37
  store i64 %4, i64* %42, align 8
  %43 = icmp eq %"class.base::TaskRunner"* %5, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  br label %47

47:                                               ; preds = %38, %44
  %48 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 12
  %49 = ptrtoint %"class.base::TaskRunner"* %5 to i64
  %50 = bitcast %class.scoped_refptr.15* %48 to i64*
  %51 = getelementptr inbounds %class.scoped_refptr.15, %class.scoped_refptr.15* %48, i64 0, i32 0
  %52 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %51, align 8
  store i64 %49, i64* %50, align 8
  %53 = icmp eq %"class.base::TaskRunner"* %52, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %52, i64 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.13"* %60 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #12
  br label %62

62:                                               ; preds = %47, %54, %59
  %63 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 32
  store i8 1, i8* %63, align 4
  br i1 %43, label %72, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %5, i64 0, i32 1
  %66 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw sub i32* %66, i32 1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %65, i64 -2
  %71 = bitcast %"class.base::RefCountedThreadSafe.13"* %70 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %71) #12
  br label %72

72:                                               ; preds = %62, %64, %69
  ret void
}

declare dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore22SetUploadStreamFactoryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN4base17RepeatingCallbackIFNS1_10unique_ptrINS_16UploadDataStreamENS1_14default_deleteISD_EEEEvEEE(%"class.net::URLFetcherCore"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::RepeatingCallback.414"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 39
  %5 = icmp eq %"class.std::__1::basic_string"* %4, %1
  br i1 %5, label %35, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %10, label %25, label %15

15:                                               ; preds = %6
  br i1 %14, label %19, label %16

16:                                               ; preds = %15
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #12
  br label %35

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %21, i64 %23) #12
  br label %35

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %31 = zext i8 %13 to i64
  %32 = select i1 %14, i8* %27, i8* %30
  %33 = select i1 %14, i64 %29, i64 %31
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %32, i64 %33) #12
  br label %35

35:                                               ; preds = %3, %16, %19, %25
  %36 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 38, i32 0
  %37 = getelementptr inbounds %"class.base::RepeatingCallback.414", %"class.base::RepeatingCallback.414"* %2, i64 0, i32 0
  %38 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %36, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %37) #12
  %39 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 32
  store i8 1, i8* %39, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore16SetChunkedUploadERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLFetcherCore"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 42
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 39
  %5 = icmp eq %"class.std::__1::basic_string"* %4, %1
  br i1 %5, label %35, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %10, label %25, label %15

15:                                               ; preds = %6
  br i1 %14, label %19, label %16

16:                                               ; preds = %15
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #12
  br label %35

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %21, i64 %23) #12
  br label %35

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %31 = zext i8 %13 to i64
  %32 = select i1 %14, i8* %27, i8* %30
  %33 = select i1 %14, i64 %29, i64 %31
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %4, i8* %32, i64 %33) #12
  br label %35

35:                                               ; preds = %2, %16, %19, %25
  %36 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 34
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #12
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %36, i64 0) #12
  %42 = lshr i64 %40, 56
  %43 = trunc i64 %42 to i8
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %35
  tail call void @_ZdlPv(i8* %38) #13
  br label %46

46:                                               ; preds = %35, %45
  store i8 1, i8* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore19AppendChunkToUploadERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.net::URLFetcherCore"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = zext i1 %2 to i8
  %7 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 11, i32 0
  %8 = bitcast %"class.base::SingleThreadTaskRunner"** %7 to %"class.base::TaskRunner"**
  %9 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %8, align 8
  %10 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 212) #12
  %11 = call i8* @_Znwm(i64 88) #13, !noalias !21
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbEJ13scoped_refptrIS4_ESB_bEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbEJ13scoped_refptrIS3_ESA_bEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !21
  %13 = getelementptr inbounds i8, i8* %11, i64 32
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*, %"class.std::__1::basic_string"*, i1)* @_ZN3net14URLFetcherCore29CompleteAddingUploadDataChunkERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb to i64), i64 0>, <2 x i64>* %14, align 8, !noalias !21
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to %"class.net::URLFetcherCore"**
  store %"class.net::URLFetcherCore"* %0, %"class.net::URLFetcherCore"** %16, align 8, !noalias !21
  %17 = icmp eq %"class.net::URLFetcherCore"* %0, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !21
  br label %21

21:                                               ; preds = %18, %3
  %22 = getelementptr inbounds i8, i8* %11, i64 56
  %23 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1, !noalias !21
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %28, i64 24, i1 false) #12, !noalias !21
  br label %35

29:                                               ; preds = %21
  %30 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8, !noalias !21
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8, !noalias !21
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %30, i8* %32, i64 %34) #12, !noalias !21
  br label %35

35:                                               ; preds = %27, %29
  %36 = getelementptr inbounds i8, i8* %11, i64 80
  store i8 %6, i8* %36, align 1, !noalias !21
  %37 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %11, i8** %37, align 8, !alias.scope !21
  %38 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %9, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #12
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore29CompleteAddingUploadDataChunkERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.net::URLFetcherCore"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) #0 align 2 {
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 44, i32 0, i32 0, i32 0
  %5 = load %"class.net::ChunkedUploadDataStream::Writer"*, %"class.net::ChunkedUploadDataStream::Writer"** %4, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = zext i8 %8 to i64
  %16 = select i1 %9, i8* %11, i8* %14
  %17 = select i1 %9, i64 %13, i64 %15
  %18 = trunc i64 %17 to i32
  %19 = tail call zeroext i1 @_ZN3net23ChunkedUploadDataStream6Writer10AppendDataEPKcib(%"class.net::ChunkedUploadDataStream::Writer"* %5, i8* %16, i32 %18, i1 zeroext %2) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net14URLFetcherCore12SetLoadFlagsEi(%"class.net::URLFetcherCore"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 14
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net14URLFetcherCore19SetAllowCredentialsEb(%"class.net::URLFetcherCore"* nocapture, i1 zeroext) local_unnamed_addr #5 align 2 {
  %3 = zext i1 %1 to i16
  %4 = shl nuw nsw i16 %3, 8
  %5 = or i16 %4, 1
  %6 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 15
  %7 = bitcast %"class.absl::optional.400"* %6 to i16*
  store i16 %5, i16* %7, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net14URLFetcherCore12GetLoadFlagsEv(%"class.net::URLFetcherCore"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 14
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore11SetReferrerERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLFetcherCore"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 40
  %4 = icmp eq %"class.std::__1::basic_string"* %3, %1
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #12
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #12
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #12
  br label %34

34:                                               ; preds = %2, %15, %18, %24
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net14URLFetcherCore17SetReferrerPolicyENS_14ReferrerPolicyE(%"class.net::URLFetcherCore"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 41
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore24ClearExtraRequestHeadersEv(%"class.net::URLFetcherCore"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 24
  tail call void @_ZN3net18HttpRequestHeaders5ClearEv(%"class.net::HttpRequestHeaders"* %2) #12
  ret void
}

declare void @_ZN3net18HttpRequestHeaders5ClearEv(%"class.net::HttpRequestHeaders"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore21AddExtraRequestHeaderERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.net::URLFetcherCore"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 24
  %7 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  store i8* %16, i8** %8, align 8
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %11 to i64
  %21 = select i1 %12, i64 %19, i64 %20
  store i64 %21, i64* %17, align 8
  %22 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %24 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %31 = select i1 %27, i8* %29, i8* %30
  store i8* %31, i8** %23, align 8
  %32 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %26 to i64
  %36 = select i1 %27, i64 %34, i64 %35
  store i64 %36, i64* %32, align 8
  call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* %6, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore17SetRequestContextEPNS_23URLRequestContextGetterE(%"class.net::URLFetcherCore"* nocapture, %"class.net::URLRequestContextGetter"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 20
  %4 = icmp eq %"class.net::URLRequestContextGetter"* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.net::URLRequestContextGetter", %"class.net::URLRequestContextGetter"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  br label %8

8:                                                ; preds = %5, %2
  %9 = ptrtoint %"class.net::URLRequestContextGetter"* %1 to i64
  %10 = bitcast %class.scoped_refptr.407* %3 to i64*
  %11 = getelementptr inbounds %class.scoped_refptr.407, %class.scoped_refptr.407* %3, i64 0, i32 0
  %12 = load %"class.net::URLRequestContextGetter"*, %"class.net::URLRequestContextGetter"** %11, align 8
  store i64 %9, i64* %10, align 8
  %13 = icmp eq %"class.net::URLRequestContextGetter"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.net::URLRequestContextGetter", %"class.net::URLRequestContextGetter"* %12, i64 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe.408", %"class.base::RefCountedThreadSafe.408"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe.408", %"class.base::RefCountedThreadSafe.408"* %15, i64 -2
  %21 = bitcast %"class.base::RefCountedThreadSafe.408"* %20 to %"class.net::URLRequestContextGetter"*
  tail call void @_ZNK3net23URLRequestContextGetter10OnDestructEv(%"class.net::URLRequestContextGetter"* %21) #12
  br label %22

22:                                               ; preds = %8, %14, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore12SetInitiatorERKN4absl8optionalIN3url6OriginEEE(%"class.net::URLFetcherCore"*, %"class.absl::optional.286"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 21
  %4 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !5
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !5
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %11, label %15, label %13

13:                                               ; preds = %7
  %14 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %12, %"class.url::Origin"* dereferenceable(80) %8) #12
  br label %22

15:                                               ; preds = %7
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %12, %"class.url::Origin"* dereferenceable(80) %8) #12
  store i8 1, i8* %9, align 8
  br label %22

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !5
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %21) #12
  store i8 0, i8* %17, align 8
  br label %22

22:                                               ; preds = %13, %15, %16, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore21SetURLRequestUserDataEPKvRKN4base17RepeatingCallbackIFNSt3__110unique_ptrINS3_16SupportsUserData4DataENS5_14default_deleteIS8_EEEEvEEE(%"class.net::URLFetcherCore"*, i8*, %"class.base::RepeatingCallback.413"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 22
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 23, i32 0
  %6 = getelementptr inbounds %"class.base::RepeatingCallback.413", %"class.base::RepeatingCallback.413"* %2, i64 0, i32 0
  %7 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %5, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %6) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net14URLFetcherCore17SetStopOnRedirectEb(%"class.net::URLFetcherCore"* nocapture, i1 zeroext) local_unnamed_addr #5 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 51
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net14URLFetcherCore26SetAutomaticallyRetryOn5xxEb(%"class.net::URLFetcherCore"* nocapture, i1 zeroext) local_unnamed_addr #5 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 53
  store i8 %3, i8* %4, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net14URLFetcherCore18SetMaxRetriesOn5xxEi(%"class.net::URLFetcherCore"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 56
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net14URLFetcherCore18GetMaxRetriesOn5xxEv(%"class.net::URLFetcherCore"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 56
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net14URLFetcherCore15GetBackoffDelayEv(%"class.net::URLFetcherCore"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 58, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net14URLFetcherCore37SetAutomaticallyRetryOnNetworkChangesEi(%"class.net::URLFetcherCore"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 60
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore24SaveResponseToFileAtPathERKN4base8FilePathE13scoped_refptrINS1_19SequencedTaskRunnerEE(%"class.net::URLFetcherCore"* nocapture, %"class.base::FilePath"* dereferenceable(24), %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 80) #13
  %5 = bitcast i8* %4 to %"class.net::URLFetcherFileWriter"*
  %6 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %3, %7
  tail call void @_ZN3net20URLFetcherFileWriterC1E13scoped_refptrIN4base19SequencedTaskRunnerEERKNS2_8FilePathE(%"class.net::URLFetcherFileWriter"* nonnull %5, %"class.base::SequencedTaskRunner"* %2, %"class.base::FilePath"* dereferenceable(24) %1) #12
  %11 = ptrtoint i8* %4 to i64
  %12 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 50
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.439"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.net::URLFetcherResponseWriter"*, %"class.net::URLFetcherResponseWriter"** %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr.439"* %12 to i64*
  store i64 %11, i64* %15, align 8
  %16 = icmp eq %"class.net::URLFetcherResponseWriter"* %14, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.net::URLFetcherResponseWriter"* %14 to void (%"class.net::URLFetcherResponseWriter"*)***
  %19 = load void (%"class.net::URLFetcherResponseWriter"*)**, void (%"class.net::URLFetcherResponseWriter"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.net::URLFetcherResponseWriter"*)*, void (%"class.net::URLFetcherResponseWriter"*)** %19, i64 1
  %21 = load void (%"class.net::URLFetcherResponseWriter"*)*, void (%"class.net::URLFetcherResponseWriter"*)** %20, align 8
  tail call void %21(%"class.net::URLFetcherResponseWriter"* nonnull %14) #12
  br label %22

22:                                               ; preds = %10, %17
  br i1 %6, label %31, label %23

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe.13"* %29 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %30) #12
  br label %31

31:                                               ; preds = %22, %23, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore22SaveResponseWithWriterENSt3__110unique_ptrINS_24URLFetcherResponseWriterENS1_14default_deleteIS3_EEEE(%"class.net::URLFetcherCore"* nocapture, %"class.net::URLFetcherResponseWriter"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.net::URLFetcherResponseWriter"* %1 to i64
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 50
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.439"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.net::URLFetcherResponseWriter"*, %"class.net::URLFetcherResponseWriter"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.439"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.net::URLFetcherResponseWriter"* %6, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.net::URLFetcherResponseWriter"* %6 to void (%"class.net::URLFetcherResponseWriter"*)***
  %11 = load void (%"class.net::URLFetcherResponseWriter"*)**, void (%"class.net::URLFetcherResponseWriter"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::URLFetcherResponseWriter"*)*, void (%"class.net::URLFetcherResponseWriter"*)** %11, i64 1
  %13 = load void (%"class.net::URLFetcherResponseWriter"*)*, void (%"class.net::URLFetcherResponseWriter"*)** %12, align 8
  tail call void %13(%"class.net::URLFetcherResponseWriter"* nonnull %6) #12
  br label %14

14:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN3net20URLFetcherFileWriterC1E13scoped_refptrIN4base19SequencedTaskRunnerEERKNS2_8FilePathE(%"class.net::URLFetcherFileWriter"*, %"class.base::SequencedTaskRunner"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore27SaveResponseToTemporaryFileE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.net::URLFetcherCore"* nocapture, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::FilePath", align 8
  %4 = tail call i8* @_Znwm(i64 80) #13
  %5 = bitcast i8* %4 to %"class.net::URLFetcherFileWriter"*
  %6 = icmp eq %"class.base::SequencedTaskRunner"* %1, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %3) #12
  call void @_ZN3net20URLFetcherFileWriterC1E13scoped_refptrIN4base19SequencedTaskRunnerEERKNS2_8FilePathE(%"class.net::URLFetcherFileWriter"* nonnull %5, %"class.base::SequencedTaskRunner"* %1, %"class.base::FilePath"* nonnull dereferenceable(24) %3) #12
  %12 = ptrtoint i8* %4 to i64
  %13 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 50
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.439"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.net::URLFetcherResponseWriter"*, %"class.net::URLFetcherResponseWriter"** %14, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.439"* %13 to i64*
  store i64 %12, i64* %16, align 8
  %17 = icmp eq %"class.net::URLFetcherResponseWriter"* %15, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %10
  %19 = bitcast %"class.net::URLFetcherResponseWriter"* %15 to void (%"class.net::URLFetcherResponseWriter"*)***
  %20 = load void (%"class.net::URLFetcherResponseWriter"*)**, void (%"class.net::URLFetcherResponseWriter"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.net::URLFetcherResponseWriter"*)*, void (%"class.net::URLFetcherResponseWriter"*)** %20, i64 1
  %22 = load void (%"class.net::URLFetcherResponseWriter"*)*, void (%"class.net::URLFetcherResponseWriter"*)** %21, align 8
  call void %22(%"class.net::URLFetcherResponseWriter"* nonnull %15) #12
  br label %23

23:                                               ; preds = %10, %18
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br i1 %6, label %32, label %24

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %25, i64 -2
  %31 = bitcast %"class.base::RefCountedThreadSafe.13"* %30 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %31) #12
  br label %32

32:                                               ; preds = %23, %24, %29
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.net::HttpResponseHeaders"* @_ZNK3net14URLFetcherCore18GetResponseHeadersEv(%"class.net::URLFetcherCore"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 25, i32 0
  %3 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %2, align 8
  ret %"class.net::HttpResponseHeaders"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net14URLFetcherCore16GetSocketAddressEv(%"class.net::IPEndPoint"* noalias sret, %"class.net::URLFetcherCore"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %1, i64 0, i32 31
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %0, %"class.net::IPEndPoint"* dereferenceable(20) %3) #12
  ret void
}

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(40) %"class.net::ProxyServer"* @_ZNK3net14URLFetcherCore15ProxyServerUsedEv(%"class.net::URLFetcherCore"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 26
  ret %"class.net::ProxyServer"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net14URLFetcherCore9WasCachedEv(%"class.net::URLFetcherCore"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 27
  %3 = load i8, i8* %2, align 8, !range !5
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net14URLFetcherCore32GetReceivedResponseContentLengthEv(%"class.net::URLFetcherCore"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 29
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net14URLFetcherCore21GetTotalReceivedBytesEv(%"class.net::URLFetcherCore"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 30
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(120) %class.GURL* @_ZNK3net14URLFetcherCore14GetOriginalURLEv(%"class.net::URLFetcherCore"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 5
  ret %class.GURL* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(120) %class.GURL* @_ZNK3net14URLFetcherCore6GetURLEv(%"class.net::URLFetcherCore"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 6
  ret %class.GURL* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net14URLFetcherCore8GetErrorEv(%"class.net::URLFetcherCore"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net14URLFetcherCore15GetResponseCodeEv(%"class.net::URLFetcherCore"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore27ReceivedContentWasMalformedEv(%"class.net::URLFetcherCore"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 11, i32 0
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.base::SingleThreadTaskRunner"* %5 to %"class.base::TaskRunner"*
  %9 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 359) #12
  %10 = call i8* @_Znwm(i64 56) #13, !noalias !26
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS4_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !26
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*)* @_ZN3net14URLFetcherCore22NotifyMalformedContentEv to i64), i64 0>, <2 x i64>* %13, align 8, !noalias !26
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = bitcast i8* %14 to %"class.net::URLFetcherCore"**
  store %"class.net::URLFetcherCore"* %0, %"class.net::URLFetcherCore"** %15, align 8, !noalias !26
  %16 = icmp eq %"class.net::URLFetcherCore"* %0, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic, !noalias !26
  br label %20

20:                                               ; preds = %7, %17
  %21 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %10, i8** %21, align 8, !alias.scope !26
  %22 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* nonnull %8, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #12
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #12
  br label %24

24:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore22NotifyMalformedContentEv(%"class.net::URLFetcherCore"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 47, i32 0
  %3 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %2, align 8
  %4 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 17
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, -1
  %9 = select i1 %8, i32 200, i32 %7
  %10 = bitcast %"class.net::URLRequestThrottlerEntryInterface"* %3 to void (%"class.net::URLRequestThrottlerEntryInterface"*, i32)***
  %11 = load void (%"class.net::URLRequestThrottlerEntryInterface"*, i32)**, void (%"class.net::URLRequestThrottlerEntryInterface"*, i32)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::URLRequestThrottlerEntryInterface"*, i32)*, void (%"class.net::URLRequestThrottlerEntryInterface"*, i32)** %11, i64 4
  %13 = load void (%"class.net::URLRequestThrottlerEntryInterface"*, i32)*, void (%"class.net::URLRequestThrottlerEntryInterface"*, i32)** %12, align 8
  tail call void %13(%"class.net::URLRequestThrottlerEntryInterface"* nonnull %3, i32 %9) #12
  br label %14

14:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net14URLFetcherCore19GetResponseAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLFetcherCore"* nocapture readonly, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 50, i32 0, i32 0, i32 0
  %4 = load %"class.net::URLFetcherResponseWriter"*, %"class.net::URLFetcherResponseWriter"** %3, align 8
  %5 = icmp eq %"class.net::URLFetcherResponseWriter"* %4, null
  br i1 %5, label %45, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.net::URLFetcherResponseWriter"* %4 to %"class.net::URLFetcherStringWriter"* (%"class.net::URLFetcherResponseWriter"*)***
  %8 = load %"class.net::URLFetcherStringWriter"* (%"class.net::URLFetcherResponseWriter"*)**, %"class.net::URLFetcherStringWriter"* (%"class.net::URLFetcherResponseWriter"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.net::URLFetcherStringWriter"* (%"class.net::URLFetcherResponseWriter"*)*, %"class.net::URLFetcherStringWriter"* (%"class.net::URLFetcherResponseWriter"*)** %8, i64 5
  %10 = load %"class.net::URLFetcherStringWriter"* (%"class.net::URLFetcherResponseWriter"*)*, %"class.net::URLFetcherStringWriter"* (%"class.net::URLFetcherResponseWriter"*)** %9, align 8
  %11 = tail call %"class.net::URLFetcherStringWriter"* %10(%"class.net::URLFetcherResponseWriter"* nonnull %4) #12
  %12 = icmp eq %"class.net::URLFetcherStringWriter"* %11, null
  br i1 %12, label %45, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.net::URLFetcherStringWriter", %"class.net::URLFetcherStringWriter"* %11, i64 0, i32 1
  %15 = icmp eq %"class.std::__1::basic_string"* %14, %1
  br i1 %15, label %45, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %20, label %35, label %25

25:                                               ; preds = %16
  br i1 %24, label %29, label %26

26:                                               ; preds = %25
  %27 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #12
  br label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.net::URLFetcherStringWriter", %"class.net::URLFetcherStringWriter"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %1, i8* %31, i64 %33) #12
  br label %45

35:                                               ; preds = %16
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.net::URLFetcherStringWriter", %"class.net::URLFetcherStringWriter"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %41 = zext i8 %23 to i64
  %42 = select i1 %24, i8* %37, i8* %40
  %43 = select i1 %24, i64 %39, i64 %41
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %1, i8* %42, i64 %43) #12
  br label %45

45:                                               ; preds = %2, %35, %29, %26, %13, %6
  %46 = phi i1 [ false, %6 ], [ true, %13 ], [ true, %26 ], [ true, %29 ], [ true, %35 ], [ false, %2 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14URLFetcherCore21GetResponseAsFilePathEbPN4base8FilePathE(%"class.net::URLFetcherCore"* nocapture readonly, i1 zeroext, %"class.base::FilePath"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 50, i32 0, i32 0, i32 0
  %5 = load %"class.net::URLFetcherResponseWriter"*, %"class.net::URLFetcherResponseWriter"** %4, align 8
  %6 = icmp eq %"class.net::URLFetcherResponseWriter"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.net::URLFetcherResponseWriter"* %5 to %"class.net::URLFetcherFileWriter"* (%"class.net::URLFetcherResponseWriter"*)***
  %9 = load %"class.net::URLFetcherFileWriter"* (%"class.net::URLFetcherResponseWriter"*)**, %"class.net::URLFetcherFileWriter"* (%"class.net::URLFetcherResponseWriter"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.net::URLFetcherFileWriter"* (%"class.net::URLFetcherResponseWriter"*)*, %"class.net::URLFetcherFileWriter"* (%"class.net::URLFetcherResponseWriter"*)** %9, i64 6
  %11 = load %"class.net::URLFetcherFileWriter"* (%"class.net::URLFetcherResponseWriter"*)*, %"class.net::URLFetcherFileWriter"* (%"class.net::URLFetcherResponseWriter"*)** %10, align 8
  %12 = tail call %"class.net::URLFetcherFileWriter"* %11(%"class.net::URLFetcherResponseWriter"* nonnull %5) #12
  %13 = icmp eq %"class.net::URLFetcherFileWriter"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.net::URLFetcherFileWriter", %"class.net::URLFetcherFileWriter"* %12, i64 0, i32 2
  %16 = tail call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"* %2, %"class.base::FilePath"* dereferenceable(24) %15) #12
  br i1 %1, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZN3net20URLFetcherFileWriter10DisownFileEv(%"class.net::URLFetcherFileWriter"* nonnull %12) #12
  br label %18

18:                                               ; preds = %3, %14, %17, %7
  %19 = phi i1 [ false, %7 ], [ true, %17 ], [ true, %14 ], [ false, %3 ]
  ret i1 %19
}

declare void @_ZN3net20URLFetcherFileWriter10DisownFileEv(%"class.net::URLFetcherFileWriter"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore18OnReceivedRedirectEPNS_10URLRequestERKNS_12RedirectInfoEPb(%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, %"struct.net::RedirectInfo"* dereferenceable(272), i8* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 51
  %6 = load i8, i8* %5, align 8, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %93, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 52
  store i8 1, i8* %9, align 1
  %10 = getelementptr inbounds %"struct.net::RedirectInfo", %"struct.net::RedirectInfo"* %2, i64 0, i32 2
  %11 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 6
  %12 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %11, %class.GURL* dereferenceable(120) %10) #12
  %13 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %13, align 8
  %15 = tail call i32 @_ZNK3net10URLRequest15GetResponseCodeEv(%"class.net::URLRequest"* %14) #12
  %16 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 17
  store i32 %15, i32* %16, align 8
  %17 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %13, align 8
  %18 = tail call %"class.net::HttpResponseHeaders"* @_ZNK3net10URLRequest16response_headersEv(%"class.net::URLRequest"* %17) #12
  %19 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 25
  %20 = icmp eq %"class.net::HttpResponseHeaders"* %18, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  br label %24

24:                                               ; preds = %21, %8
  %25 = ptrtoint %"class.net::HttpResponseHeaders"* %18 to i64
  %26 = bitcast %class.scoped_refptr.373* %19 to i64*
  %27 = getelementptr inbounds %class.scoped_refptr.373, %class.scoped_refptr.373* %19, i64 0, i32 0
  %28 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.net::HttpResponseHeaders"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  tail call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %28) #12
  %35 = bitcast %"class.net::HttpResponseHeaders"* %28 to i8*
  tail call void @_ZdlPv(i8* %35) #13
  br label %36

36:                                               ; preds = %24, %30, %34
  %37 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %13, align 8
  %38 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %37, i64 0, i32 41
  %39 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 26
  %40 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %38, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %39, i64 0, i32 0
  store i32 %41, i32* %42, align 8
  %43 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 26, i32 2
  %44 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %37, i64 0, i32 41, i32 2
  %45 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %43, i64 0, i32 0
  %46 = icmp eq %"class.net::ProxyServer"* %39, %38
  br i1 %46, label %76, label %47

47:                                               ; preds = %36
  %48 = bitcast %"class.net::HostPortPair"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = bitcast %"class.net::HostPortPair"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %51, label %66, label %56

56:                                               ; preds = %47
  br i1 %55, label %60, label %57

57:                                               ; preds = %56
  %58 = bitcast %"class.net::HostPortPair"* %43 to i8*
  %59 = bitcast %"class.net::HostPortPair"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false) #12
  br label %76

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %37, i64 0, i32 41, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %45, i8* %62, i64 %64) #12
  br label %76

66:                                               ; preds = %47
  %67 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %37, i64 0, i32 41, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.net::HostPortPair"* %44 to i8*
  %72 = zext i8 %54 to i64
  %73 = select i1 %55, i8* %68, i8* %71
  %74 = select i1 %55, i64 %70, i64 %72
  %75 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %45, i8* %73, i64 %74) #12
  br label %76

76:                                               ; preds = %36, %57, %60, %66
  %77 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %37, i64 0, i32 41, i32 2, i32 1
  %78 = load i16, i16* %77, align 8
  %79 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 26, i32 2, i32 1
  store i16 %78, i16* %79, align 8
  %80 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %13, align 8
  %81 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %80, i64 0, i32 27, i32 0
  %82 = load i8, i8* %81, align 8, !range !5
  %83 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 27
  store i8 %82, i8* %83, align 8
  %84 = tail call i64 @_ZNK3net10URLRequest21GetTotalReceivedBytesEv(%"class.net::URLRequest"* %80) #12
  %85 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 30
  %86 = load i64, i64* %85, align 8
  %87 = add nsw i64 %86, %84
  store i64 %87, i64* %85, align 8
  %88 = tail call i32 @_ZN3net10URLRequest6CancelEv(%"class.net::URLRequest"* %1) #12
  %89 = bitcast %"class.net::URLFetcherCore"* %0 to void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)***
  %90 = load void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)**, void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)*, void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)** %90, i64 6
  %92 = load void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)*, void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)** %91, align 8
  tail call void %92(%"class.net::URLFetcherCore"* %0, %"class.net::URLRequest"* %1, i32 %88) #12
  br label %93

93:                                               ; preds = %4, %76
  ret void
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare i32 @_ZNK3net10URLRequest15GetResponseCodeEv(%"class.net::URLRequest"*) local_unnamed_addr #2

declare %"class.net::HttpResponseHeaders"* @_ZNK3net10URLRequest16response_headersEv(%"class.net::URLRequest"*) local_unnamed_addr #2

declare i64 @_ZNK3net10URLRequest21GetTotalReceivedBytesEv(%"class.net::URLRequest"*) local_unnamed_addr #2

declare i32 @_ZN3net10URLRequest6CancelEv(%"class.net::URLRequest"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore17OnResponseStartedEPNS_10URLRequestEi(%"class.net::URLFetcherCore"*, %"class.net::URLRequest"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.net::IPEndPoint", align 2
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %6, label %83

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %8 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %7, align 8
  %9 = tail call i32 @_ZNK3net10URLRequest15GetResponseCodeEv(%"class.net::URLRequest"* %8) #12
  %10 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 17
  store i32 %9, i32* %10, align 8
  %11 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %7, align 8
  %12 = tail call %"class.net::HttpResponseHeaders"* @_ZNK3net10URLRequest16response_headersEv(%"class.net::URLRequest"* %11) #12
  %13 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 25
  %14 = icmp eq %"class.net::HttpResponseHeaders"* %12, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %15, %6
  %19 = ptrtoint %"class.net::HttpResponseHeaders"* %12 to i64
  %20 = bitcast %class.scoped_refptr.373* %13 to i64*
  %21 = getelementptr inbounds %class.scoped_refptr.373, %class.scoped_refptr.373* %13, i64 0, i32 0
  %22 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %21, align 8
  store i64 %19, i64* %20, align 8
  %23 = icmp eq %"class.net::HttpResponseHeaders"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  tail call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %22) #12
  %29 = bitcast %"class.net::HttpResponseHeaders"* %22 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %18, %24, %28
  %31 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %31) #12
  %32 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %7, align 8
  call void @_ZNK3net10URLRequest25GetResponseRemoteEndpointEv(%"class.net::IPEndPoint"* nonnull sret %4, %"class.net::URLRequest"* %32) #12
  %33 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 31, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 2 %31, i64 20, i1 false)
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %31) #12
  %34 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %7, align 8
  %35 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %34, i64 0, i32 41
  %36 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 26
  %37 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %35, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %36, i64 0, i32 0
  store i32 %38, i32* %39, align 8
  %40 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 26, i32 2
  %41 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %34, i64 0, i32 41, i32 2
  %42 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %40, i64 0, i32 0
  %43 = icmp eq %"class.net::ProxyServer"* %36, %35
  br i1 %43, label %73, label %44

44:                                               ; preds = %30
  %45 = bitcast %"class.net::HostPortPair"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = bitcast %"class.net::HostPortPair"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %48, label %63, label %53

53:                                               ; preds = %44
  br i1 %52, label %57, label %54

54:                                               ; preds = %53
  %55 = bitcast %"class.net::HostPortPair"* %40 to i8*
  %56 = bitcast %"class.net::HostPortPair"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #12
  br label %73

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %34, i64 0, i32 41, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %42, i8* %59, i64 %61) #12
  br label %73

63:                                               ; preds = %44
  %64 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %34, i64 0, i32 41, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.net::HostPortPair"* %41 to i8*
  %69 = zext i8 %51 to i64
  %70 = select i1 %52, i8* %65, i8* %68
  %71 = select i1 %52, i64 %67, i64 %69
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %42, i8* %70, i64 %71) #12
  br label %73

73:                                               ; preds = %30, %54, %57, %63
  %74 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %34, i64 0, i32 41, i32 2, i32 1
  %75 = load i16, i16* %74, align 8
  %76 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 26, i32 2, i32 1
  store i16 %75, i16* %76, align 8
  %77 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %7, align 8
  %78 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %77, i64 0, i32 27, i32 0
  %79 = load i8, i8* %78, align 8, !range !5
  %80 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 27
  store i8 %79, i8* %80, align 8
  %81 = call i64 @_ZNK3net10URLRequest22GetExpectedContentSizeEv(%"class.net::URLRequest"* %77) #12
  %82 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 64
  store i64 %81, i64* %82, align 8
  br label %83

83:                                               ; preds = %73, %3
  %84 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 7
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 2
  br i1 %86, label %120, label %87

87:                                               ; preds = %83
  %88 = call i8* @_Znwm(i64 24) #13
  %89 = bitcast i8* %88 to %"class.net::IOBuffer"*
  call void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"* nonnull %89, i64 4096) #12
  %90 = getelementptr inbounds i8, i8* %88, i64 8
  %91 = bitcast i8* %90 to i32*
  %92 = atomicrmw add i32* %91, i32 1 monotonic
  %93 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 19
  %94 = ptrtoint i8* %88 to i64
  %95 = bitcast %class.scoped_refptr.405* %93 to i64*
  %96 = getelementptr inbounds %class.scoped_refptr.405, %class.scoped_refptr.405* %93, i64 0, i32 0
  %97 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %96, align 8
  store i64 %94, i64* %95, align 8
  %98 = icmp eq %"class.net::IOBuffer"* %97, null
  br i1 %98, label %111, label %99

99:                                               ; preds = %87
  %100 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %97, i64 0, i32 1
  %101 = getelementptr inbounds %"class.base::RefCountedThreadSafe.406", %"class.base::RefCountedThreadSafe.406"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw sub i32* %101, i32 1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %111

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.base::RefCountedThreadSafe.406", %"class.base::RefCountedThreadSafe.406"* %100, i64 -2
  %106 = bitcast %"class.base::RefCountedThreadSafe.406"* %105 to %"class.net::IOBuffer"*
  %107 = bitcast %"class.base::RefCountedThreadSafe.406"* %105 to void (%"class.net::IOBuffer"*)***
  %108 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %108, i64 1
  %110 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %109, align 8
  call void %110(%"class.net::IOBuffer"* nonnull %106) #12
  br label %111

111:                                              ; preds = %104, %99, %87
  %112 = load i32, i32* %84, align 8
  %113 = icmp eq i32 %112, 2
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %116 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %115, align 8
  %117 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 19, i32 0
  %118 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %117, align 8
  %119 = call i32 @_ZN3net10URLRequest4ReadEPNS_8IOBufferEi(%"class.net::URLRequest"* %116, %"class.net::IOBuffer"* %118, i32 4096) #12
  br label %120

120:                                              ; preds = %83, %111, %114
  %121 = phi i32 [ %119, %114 ], [ 0, %111 ], [ 0, %83 ]
  %122 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %123 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %122, align 8
  %124 = bitcast %"class.net::URLFetcherCore"* %0 to void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)***
  %125 = load void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)**, void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)*, void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)** %125, i64 6
  %127 = load void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)*, void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)** %126, align 8
  call void %127(%"class.net::URLFetcherCore"* %0, %"class.net::URLRequest"* %123, i32 %121) #12
  ret void
}

declare void @_ZNK3net10URLRequest25GetResponseRemoteEndpointEv(%"class.net::IPEndPoint"* sret, %"class.net::URLRequest"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

declare i64 @_ZNK3net10URLRequest22GetExpectedContentSizeEv(%"class.net::URLRequest"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore12ReadResponseEv(%"class.net::URLFetcherCore"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %7 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %6, align 8
  %8 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 19, i32 0
  %9 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %8, align 8
  %10 = tail call i32 @_ZN3net10URLRequest4ReadEPNS_8IOBufferEi(%"class.net::URLRequest"* %7, %"class.net::IOBuffer"* %9, i32 4096) #12
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i32 [ %10, %5 ], [ 0, %1 ]
  %13 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %13, align 8
  %15 = bitcast %"class.net::URLFetcherCore"* %0 to void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)***
  %16 = load void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)**, void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)*, void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)** %16, i64 6
  %18 = load void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)*, void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)** %17, align 8
  tail call void %18(%"class.net::URLFetcherCore"* %0, %"class.net::URLRequest"* %14, i32 %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore22OnCertificateRequestedEPNS_10URLRequestEPNS_18SSLCertRequestInfoE(%"class.net::URLFetcherCore"* nocapture readnone, %"class.net::URLRequest"*, %"class.net::SSLCertRequestInfo"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = load i8, i8* @_ZN12_GLOBAL__N_129g_ignore_certificate_requestsE, align 1, !range !5
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN3net10URLRequest23ContinueWithCertificateE13scoped_refptrINS_15X509CertificateEES1_INS_13SSLPrivateKeyEE(%"class.net::URLRequest"* %1, %"class.net::X509Certificate"* null, %"class.net::SSLPrivateKey"* null) #12
  br label %9

7:                                                ; preds = %3
  %8 = tail call i32 @_ZN3net10URLRequest6CancelEv(%"class.net::URLRequest"* %1) #12
  br label %9

9:                                                ; preds = %7, %6
  ret void
}

declare void @_ZN3net10URLRequest23ContinueWithCertificateE13scoped_refptrINS_15X509CertificateEES1_INS_13SSLPrivateKeyEE(%"class.net::URLRequest"*, %"class.net::X509Certificate"*, %"class.net::SSLPrivateKey"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore15OnReadCompletedEPNS_10URLRequestEi(%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.275", align 8
  %5 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 52
  %6 = load i8, i8* %5, align 1, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %1, i64 0, i32 5, i32 0, i32 1
  %10 = load %class.GURL*, %class.GURL** %9, align 8
  %11 = getelementptr inbounds %class.GURL, %class.GURL* %10, i64 -1
  %12 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 6
  %13 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %12, %class.GURL* dereferenceable(120) %11) #12
  br label %14

14:                                               ; preds = %3, %8
  %15 = tail call %"class.net::URLRequestContext"* @_ZNK3net10URLRequest7contextEv(%"class.net::URLRequest"* %1) #12
  %16 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %15, i64 0, i32 17
  %17 = load %"class.net::URLRequestThrottlerManager"*, %"class.net::URLRequestThrottlerManager"** %16, align 8
  %18 = icmp eq %"class.net::URLRequestThrottlerManager"* %17, null
  br i1 %18, label %40, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 6
  %21 = tail call %"class.net::URLRequestThrottlerEntryInterface"* @_ZN3net26URLRequestThrottlerManager18RegisterRequestUrlERK4GURL(%"class.net::URLRequestThrottlerManager"* nonnull %17, %class.GURL* dereferenceable(120) %20) #12
  %22 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 47
  %23 = ptrtoint %"class.net::URLRequestThrottlerEntryInterface"* %21 to i64
  %24 = bitcast %class.scoped_refptr.437* %22 to i64*
  %25 = getelementptr inbounds %class.scoped_refptr.437, %class.scoped_refptr.437* %22, i64 0, i32 0
  %26 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %26, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.net::URLRequestThrottlerEntryInterface", %"class.net::URLRequestThrottlerEntryInterface"* %26, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.438", %"class.base::RefCountedThreadSafe.438"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.438", %"class.base::RefCountedThreadSafe.438"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.438"* %34 to %"class.net::URLRequestThrottlerEntryInterface"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.438"* %34 to void (%"class.net::URLRequestThrottlerEntryInterface"*)***
  %37 = load void (%"class.net::URLRequestThrottlerEntryInterface"*)**, void (%"class.net::URLRequestThrottlerEntryInterface"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.net::URLRequestThrottlerEntryInterface"*)*, void (%"class.net::URLRequestThrottlerEntryInterface"*)** %37, i64 6
  %39 = load void (%"class.net::URLRequestThrottlerEntryInterface"*)*, void (%"class.net::URLRequestThrottlerEntryInterface"*)** %38, align 8
  tail call void %39(%"class.net::URLRequestThrottlerEntryInterface"* nonnull %35) #12
  br label %40

40:                                               ; preds = %33, %28, %19, %14
  %41 = icmp sgt i32 %2, 0
  br i1 %41, label %42, label %69

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 63
  %44 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 19, i32 0
  %45 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %42, %64
  %47 = phi i32 [ %2, %42 ], [ %67, %64 ]
  %48 = sext i32 %47 to i64
  %49 = load i64, i64* %43, align 8
  %50 = add nsw i64 %49, %48
  store i64 %50, i64* %43, align 8
  tail call void @_ZN3net14URLFetcherCore30InformDelegateDownloadProgressEv(%"class.net::URLFetcherCore"* %0)
  %51 = tail call i8* @_Znwm(i64 40) #13
  %52 = bitcast i8* %51 to %"class.net::DrainableIOBuffer"*
  %53 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %44, align 8
  %54 = icmp eq %"class.net::IOBuffer"* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %53, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic
  br label %58

58:                                               ; preds = %46, %55
  tail call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %52, %"class.net::IOBuffer"* %53, i32 %47) #12
  %59 = getelementptr inbounds i8, i8* %51, i64 8
  %60 = bitcast i8* %59 to i32*
  %61 = atomicrmw add i32* %60, i32 1 monotonic
  %62 = tail call i32 @_ZN3net14URLFetcherCore11WriteBufferE13scoped_refptrINS_17DrainableIOBufferEE(%"class.net::URLFetcherCore"* %0, %"class.net::DrainableIOBuffer"* nonnull %52)
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %111, label %64

64:                                               ; preds = %58
  %65 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %45, align 8
  %66 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %44, align 8
  %67 = tail call i32 @_ZN3net10URLRequest4ReadEPNS_8IOBufferEi(%"class.net::URLRequest"* %65, %"class.net::IOBuffer"* %66, i32 4096) #12
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %46, label %69

69:                                               ; preds = %64, %40
  %70 = phi i32 [ %2, %40 ], [ %67, %64 ]
  %71 = icmp eq i32 %70, -1
  br i1 %71, label %72, label %76

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 7
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 2
  br i1 %75, label %76, label %111

76:                                               ; preds = %69, %72
  %77 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 8
  store i32 %70, i32* %77, align 4
  %78 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %79 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %78, align 8
  %80 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %79, i64 0, i32 38
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 29
  store i64 %81, i64* %82, align 8
  %83 = tail call i64 @_ZNK3net10URLRequest21GetTotalReceivedBytesEv(%"class.net::URLRequest"* %79) #12
  %84 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 30
  %85 = load i64, i64* %84, align 8
  %86 = add nsw i64 %85, %83
  store i64 %86, i64* %84, align 8
  tail call void @_ZN3net14URLFetcherCore14ReleaseRequestEv(%"class.net::URLFetcherCore"* %0)
  %87 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 50, i32 0, i32 0, i32 0
  %88 = load %"class.net::URLFetcherResponseWriter"*, %"class.net::URLFetcherResponseWriter"** %87, align 8
  %89 = icmp slt i32 %70, 0
  %90 = select i1 %89, i32 %70, i32 0
  %91 = tail call i8* @_Znwm(i64 56) #13, !noalias !31
  %92 = bitcast i8* %91 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %92, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS4_EEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !31
  %93 = getelementptr inbounds i8, i8* %91, i64 32
  %94 = bitcast i8* %93 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*, i32)* @_ZN3net14URLFetcherCore16DidFinishWritingEi to i64), i64 0>, <2 x i64>* %94, align 8, !noalias !31
  %95 = getelementptr inbounds i8, i8* %91, i64 48
  %96 = bitcast i8* %95 to %"class.net::URLFetcherCore"**
  store %"class.net::URLFetcherCore"* %0, %"class.net::URLFetcherCore"** %96, align 8, !noalias !31
  %97 = icmp eq %"class.net::URLFetcherCore"* %0, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %76
  %99 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 1 monotonic, !noalias !31
  br label %101

101:                                              ; preds = %76, %98
  %102 = bitcast %"class.base::OnceCallback.275"* %4 to i8**
  store i8* %91, i8** %102, align 8, !alias.scope !31
  %103 = bitcast %"class.net::URLFetcherResponseWriter"* %88 to i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)***
  %104 = load i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)**, i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)*** %103, align 8
  %105 = getelementptr inbounds i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)*, i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)** %104, i64 4
  %106 = load i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)*, i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)** %105, align 8
  %107 = call i32 %106(%"class.net::URLFetcherResponseWriter"* %88, i32 %90, %"class.base::OnceCallback.275"* nonnull %4) #12
  %108 = getelementptr inbounds %"class.base::OnceCallback.275", %"class.base::OnceCallback.275"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %108) #12
  switch i32 %107, label %109 [
    i32 -1, label %111
    i32 0, label %110
  ]

109:                                              ; preds = %101
  call void @_ZN3net14URLFetcherCore30CancelRequestAndInformDelegateEi(%"class.net::URLFetcherCore"* %0, i32 %107) #12
  br label %111

110:                                              ; preds = %101
  call void @_ZN3net14URLFetcherCore23RetryOrCompleteUrlFetchEv(%"class.net::URLFetcherCore"* %0) #12
  br label %111

111:                                              ; preds = %58, %101, %110, %109, %72
  ret void
}

declare %"class.net::URLRequestContext"* @_ZNK3net10URLRequest7contextEv(%"class.net::URLRequest"*) local_unnamed_addr #2

declare %"class.net::URLRequestThrottlerEntryInterface"* @_ZN3net26URLRequestThrottlerManager18RegisterRequestUrlERK4GURL(%"class.net::URLRequestThrottlerManager"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore30InformDelegateDownloadProgressEv(%"class.net::URLFetcherCore"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 10, i32 0
  %5 = bitcast %"class.base::SequencedTaskRunner"** %4 to %"class.base::TaskRunner"**
  %6 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %5, align 8
  %7 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 931) #12
  %8 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 63
  %9 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %9, align 8
  %11 = call i64 @_ZNK3net10URLRequest21GetTotalReceivedBytesEv(%"class.net::URLRequest"* %10) #12
  %12 = call i8* @_Znwm(i64 80) #13, !noalias !36
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvlllEJ13scoped_refptrIS4_ElllEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvlllEJ13scoped_refptrIS3_ElllEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !36
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*, i64, i64, i64)* @_ZN3net14URLFetcherCore48InformDelegateDownloadProgressInDelegateSequenceElll to i64), i64 0>, <2 x i64>* %15, align 8, !noalias !36
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to %"class.net::URLFetcherCore"**
  store %"class.net::URLFetcherCore"* %0, %"class.net::URLFetcherCore"** %17, align 8, !noalias !36
  %18 = icmp eq %"class.net::URLFetcherCore"* %0, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic, !noalias !36
  br label %22

22:                                               ; preds = %1, %19
  %23 = getelementptr inbounds i8, i8* %12, i64 56
  %24 = bitcast i64* %8 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8, !noalias !36
  %26 = bitcast i8* %23 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %26, align 8, !noalias !36
  %27 = getelementptr inbounds i8, i8* %12, i64 72
  %28 = bitcast i8* %27 to i64*
  store i64 %11, i64* %28, align 8, !noalias !36
  %29 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %12, i8** %29, align 8, !alias.scope !36
  %30 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %6, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #12
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14URLFetcherCore11WriteBufferE13scoped_refptrINS_17DrainableIOBufferEE(%"class.net::URLFetcherCore"*, %"class.net::DrainableIOBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.275", align 8
  %4 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %1) #12
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %47

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 50, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %1, i64 0, i32 0
  %9 = icmp eq %"class.net::URLFetcherCore"* %0, null
  %10 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = icmp eq %"class.net::DrainableIOBuffer"* %1, null
  %12 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback.275"* %3 to i8**
  %14 = getelementptr inbounds %"class.base::OnceCallback.275", %"class.base::OnceCallback.275"* %3, i64 0, i32 0
  br label %15

15:                                               ; preds = %6, %44
  %16 = load %"class.net::URLFetcherResponseWriter"*, %"class.net::URLFetcherResponseWriter"** %7, align 8
  %17 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %1) #12
  %18 = call i8* @_Znwm(i64 64) #13, !noalias !41
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFv13scoped_refptrINS3_17DrainableIOBufferEEiEJS5_IS4_ES7_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFv13scoped_refptrINS2_17DrainableIOBufferEEiEJS4_IS3_ES6_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !41
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*, %"class.net::DrainableIOBuffer"*, i32)* @_ZN3net14URLFetcherCore14DidWriteBufferE13scoped_refptrINS_17DrainableIOBufferEEi to i64), i64 0>, <2 x i64>* %21, align 8, !noalias !41
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to %"class.net::URLFetcherCore"**
  store %"class.net::URLFetcherCore"* %0, %"class.net::URLFetcherCore"** %23, align 8, !noalias !41
  br i1 %9, label %26, label %24

24:                                               ; preds = %15
  %25 = atomicrmw add i32* %10, i32 1 monotonic, !noalias !41
  br label %26

26:                                               ; preds = %24, %15
  %27 = getelementptr inbounds i8, i8* %18, i64 56
  %28 = bitcast i8* %27 to %"class.net::DrainableIOBuffer"**
  store %"class.net::DrainableIOBuffer"* %1, %"class.net::DrainableIOBuffer"** %28, align 8, !noalias !41
  br i1 %11, label %31, label %29

29:                                               ; preds = %26
  %30 = atomicrmw add i32* %12, i32 1 monotonic, !noalias !41
  br label %31

31:                                               ; preds = %26, %29
  store i8* %18, i8** %13, align 8, !alias.scope !41
  %32 = bitcast %"class.net::URLFetcherResponseWriter"* %16 to i32 (%"class.net::URLFetcherResponseWriter"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.275"*)***
  %33 = load i32 (%"class.net::URLFetcherResponseWriter"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.275"*)**, i32 (%"class.net::URLFetcherResponseWriter"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.275"*)*** %32, align 8
  %34 = getelementptr inbounds i32 (%"class.net::URLFetcherResponseWriter"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.275"*)*, i32 (%"class.net::URLFetcherResponseWriter"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.275"*)** %33, i64 3
  %35 = load i32 (%"class.net::URLFetcherResponseWriter"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.275"*)*, i32 (%"class.net::URLFetcherResponseWriter"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.275"*)** %34, align 8
  %36 = call i32 %35(%"class.net::URLFetcherResponseWriter"* %16, %"class.net::IOBuffer"* %8, i32 %17, %"class.base::OnceCallback.275"* nonnull %3) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #12
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %31
  %39 = icmp eq i32 %36, -1
  br i1 %39, label %47, label %40

40:                                               ; preds = %38
  br i1 %11, label %43, label %41

41:                                               ; preds = %40
  %42 = atomicrmw add i32* %12, i32 1 monotonic
  br label %43

43:                                               ; preds = %40, %41
  call void @_ZN3net14URLFetcherCore14DidWriteBufferE13scoped_refptrINS_17DrainableIOBufferEEi(%"class.net::URLFetcherCore"* %0, %"class.net::DrainableIOBuffer"* %1, i32 %36)
  br label %47

44:                                               ; preds = %31
  call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %1, i32 %36) #12
  %45 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %1) #12
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %15, label %47

47:                                               ; preds = %44, %2, %43, %38
  %48 = phi i32 [ -1, %38 ], [ %36, %43 ], [ 0, %2 ], [ 0, %44 ]
  %49 = icmp eq %"class.net::DrainableIOBuffer"* %1, null
  br i1 %49, label %62, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %1, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe.406", %"class.base::RefCountedThreadSafe.406"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw sub i32* %52, i32 1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %62

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.406", %"class.base::RefCountedThreadSafe.406"* %51, i64 -2
  %57 = bitcast %"class.base::RefCountedThreadSafe.406"* %56 to %"class.net::IOBuffer"*
  %58 = bitcast %"class.base::RefCountedThreadSafe.406"* %56 to void (%"class.net::IOBuffer"*)***
  %59 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %59, i64 1
  %61 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %60, align 8
  call void %61(%"class.net::IOBuffer"* nonnull %57) #12
  br label %62

62:                                               ; preds = %47, %50, %55
  ret i32 %48
}

declare i32 @_ZN3net10URLRequest4ReadEPNS_8IOBufferEi(%"class.net::URLRequest"*, %"class.net::IOBuffer"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore14ReleaseRequestEv(%"class.net::URLFetcherCore"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 20, i32 0
  %3 = load %"class.net::URLRequestContextGetter"*, %"class.net::URLRequestContextGetter"** %2, align 8
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 3
  tail call void @_ZN3net23URLRequestContextGetter14RemoveObserverEPNS_31URLRequestContextGetterObserverE(%"class.net::URLRequestContextGetter"* %3, %"class.net::URLRequestContextGetterObserver"* %4) #12
  %5 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 61, i32 0, i32 0, i32 0
  %6 = load %"class.base::RepeatingTimer"*, %"class.base::RepeatingTimer"** %5, align 8
  store %"class.base::RepeatingTimer"* null, %"class.base::RepeatingTimer"** %5, align 8
  %7 = icmp eq %"class.base::RepeatingTimer"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.base::RepeatingTimer"* %6 to void (%"class.base::RepeatingTimer"*)***
  %10 = load void (%"class.base::RepeatingTimer"*)**, void (%"class.base::RepeatingTimer"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.base::RepeatingTimer"*)*, void (%"class.base::RepeatingTimer"*)** %10, i64 1
  %12 = load void (%"class.base::RepeatingTimer"*)*, void (%"class.base::RepeatingTimer"*)** %11, align 8
  tail call void %12(%"class.base::RepeatingTimer"* nonnull %6) #12
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %14, align 8
  store %"class.net::URLRequest"* null, %"class.net::URLRequest"** %14, align 8
  %16 = icmp eq %"class.net::URLRequest"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.net::URLRequest"* %15 to void (%"class.net::URLRequest"*)***
  %19 = load void (%"class.net::URLRequest"*)**, void (%"class.net::URLRequest"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %19, i64 1
  %21 = load void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %20, align 8
  tail call void %21(%"class.net::URLRequest"* nonnull %15) #12
  br label %22

22:                                               ; preds = %13, %17
  %23 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 19
  %24 = bitcast %class.scoped_refptr.405* %23 to i64*
  %25 = getelementptr inbounds %class.scoped_refptr.405, %class.scoped_refptr.405* %23, i64 0, i32 0
  %26 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %25, align 8
  store i64 0, i64* %24, align 8
  %27 = icmp eq %"class.net::IOBuffer"* %26, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %26, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.406", %"class.base::RefCountedThreadSafe.406"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.406", %"class.base::RefCountedThreadSafe.406"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.406"* %34 to %"class.net::IOBuffer"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.406"* %34 to void (%"class.net::IOBuffer"*)***
  %37 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %37, i64 1
  %39 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %38, align 8
  tail call void %39(%"class.net::IOBuffer"* nonnull %35) #12
  br label %40

40:                                               ; preds = %22, %28, %33
  %41 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0) acquire, align 8
  %42 = icmp ugt i64 %41, 1
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  %44 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0)) #12
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 8), i8 0, i64 16, i1 false) #12
  store i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 8), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 0) to i8**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceIN3net14URLFetcherCore8RegistryENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE to i8*)) #12
  br label %48

46:                                               ; preds = %43
  %47 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0) acquire, align 8
  br label %48

48:                                               ; preds = %40, %45, %46
  %49 = phi i64 [ %41, %40 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 0) to i64), %45 ], [ %47, %46 ]
  %50 = inttoptr i64 %49 to %"class.net::URLFetcherCore::Registry"*
  %51 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %50, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node"**
  %53 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node"* %53, null
  %55 = bitcast %"class.std::__1::__tree_node"* %53 to %"class.std::__1::__tree_node_base"*
  br i1 %54, label %119, label %56

56:                                               ; preds = %48, %56
  %57 = phi %"class.std::__1::__tree_end_node"* [ %67, %56 ], [ %51, %48 ]
  %58 = phi %"class.std::__1::__tree_node"* [ %68, %56 ], [ %53, %48 ]
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 1
  %60 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %59, align 8
  %61 = icmp ult %"class.net::URLFetcherCore"* %60, %0
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 1
  %63 = bitcast %"class.std::__1::__tree_node_base"** %62 to %"class.std::__1::__tree_node"**
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::__tree_node"* %58 to %"class.std::__1::__tree_node"**
  %66 = select i1 %61, %"class.std::__1::__tree_node"** %63, %"class.std::__1::__tree_node"** %65
  %67 = select i1 %61, %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"* %64
  %68 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %66, align 8
  %69 = icmp eq %"class.std::__1::__tree_node"* %68, null
  br i1 %69, label %70, label %56

70:                                               ; preds = %56
  %71 = icmp eq %"class.std::__1::__tree_end_node"* %67, %51
  br i1 %71, label %119, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 4
  %74 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"class.net::URLFetcherCore"**
  %75 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %74, align 8
  %76 = icmp ugt %"class.net::URLFetcherCore"* %75, %0
  br i1 %76, label %119, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 1, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, null
  br i1 %80, label %81, label %89

81:                                               ; preds = %77
  %82 = bitcast %"class.std::__1::__tree_end_node"* %67 to %"class.std::__1::__tree_node_base"*
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 2
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.std::__1::__tree_end_node"**
  %85 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, %82
  br i1 %88, label %105, label %96

89:                                               ; preds = %77, %89
  %90 = phi %"class.std::__1::__tree_node_base"* [ %92, %89 ], [ %79, %77 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %94, label %89

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 0
  br label %105

96:                                               ; preds = %81, %96
  %97 = phi %"class.std::__1::__tree_end_node"** [ %100, %96 ], [ %84, %81 ]
  %98 = bitcast %"class.std::__1::__tree_end_node"** %97 to %"class.std::__1::__tree_node_base"**
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  br i1 %104, label %105, label %96

105:                                              ; preds = %96, %94, %81
  %106 = phi %"class.std::__1::__tree_end_node"* [ %95, %94 ], [ %85, %81 ], [ %101, %96 ]
  %107 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %50, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_end_node"* %108, %67
  br i1 %109, label %110, label %113

110:                                              ; preds = %105
  %111 = ptrtoint %"class.std::__1::__tree_end_node"* %106 to i64
  %112 = inttoptr i64 %49 to i64*
  store i64 %111, i64* %112, align 8
  br label %113

113:                                              ; preds = %110, %105
  %114 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %50, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %115, -1
  store i64 %116, i64* %114, align 8
  %117 = bitcast %"class.std::__1::__tree_end_node"* %67 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %55, %"class.std::__1::__tree_node_base"* %117) #12
  %118 = bitcast %"class.std::__1::__tree_end_node"* %67 to i8*
  tail call void @_ZdlPv(i8* %118) #13
  br label %119

119:                                              ; preds = %48, %70, %72, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore16DidFinishWritingEi(%"class.net::URLFetcherCore"*, i32) #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZN3net14URLFetcherCore30CancelRequestAndInformDelegateEi(%"class.net::URLFetcherCore"* %0, i32 %1)
  br label %6

5:                                                ; preds = %2
  tail call void @_ZN3net14URLFetcherCore23RetryOrCompleteUrlFetchEv(%"class.net::URLFetcherCore"* %0)
  br label %6

6:                                                ; preds = %5, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore21OnContextShuttingDownEv(%"class.net::URLFetcherCore"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net14URLFetcherCore30CancelRequestAndInformDelegateEi(%"class.net::URLFetcherCore"* %0, i32 -26)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore30CancelRequestAndInformDelegateEi(%"class.net::URLFetcherCore"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  tail call void @_ZN3net14URLFetcherCore16CancelURLRequestEi(%"class.net::URLFetcherCore"* %0, i32 %1)
  %5 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 10, i32 0
  %6 = bitcast %"class.base::SequencedTaskRunner"** %5 to %"class.base::TaskRunner"**
  %7 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %6, align 8
  %8 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 811) #12
  %9 = call i8* @_Znwm(i64 56) #13, !noalias !46
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS4_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !46
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*)* @_ZN3net14URLFetcherCore29InformDelegateFetchIsCompleteEv to i64), i64 0>, <2 x i64>* %12, align 8, !noalias !46
  %13 = getelementptr inbounds i8, i8* %9, i64 48
  %14 = bitcast i8* %13 to %"class.net::URLFetcherCore"**
  store %"class.net::URLFetcherCore"* %0, %"class.net::URLFetcherCore"** %14, align 8, !noalias !46
  %15 = icmp eq %"class.net::URLFetcherCore"* %0, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic, !noalias !46
  br label %19

19:                                               ; preds = %2, %16
  %20 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %9, i8** %20, align 8, !alias.scope !46
  %21 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %7, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #12
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3net14URLFetcherCore21OnContextShuttingDownEv(%"class.net::URLFetcherCore"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 -1, i32 64
  %3 = bitcast i64* %2 to %"class.net::URLFetcherCore"*
  tail call void @_ZN3net14URLFetcherCore30CancelRequestAndInformDelegateEi(%"class.net::URLFetcherCore"* %3, i32 -26) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore9CancelAllEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0)) #12
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 8), i8 0, i64 16, i1 false) #12
  store i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 8), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 0) to i8**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceIN3net14URLFetcherCore8RegistryENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE to i8*)) #12
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.net::URLFetcherCore::Registry"*
  %11 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %8
  %15 = inttoptr i64 %9 to %"class.std::__1::__tree_node"**
  br label %16

16:                                               ; preds = %16, %14
  %17 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 1
  %19 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %18, align 8
  tail call void @_ZN3net14URLFetcherCore16CancelURLRequestEi(%"class.net::URLFetcherCore"* %19, i32 -3) #12
  %20 = load i64, i64* %11, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %16

22:                                               ; preds = %16, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14URLFetcherCore18GetNumFetcherCoresEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0)) #12
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 8), i8 0, i64 16, i1 false) #12
  store i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 8), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 0) to i8**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceIN3net14URLFetcherCore8RegistryENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE to i8*)) #12
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.net::URLFetcherCore::Registry"*
  %11 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  ret i32 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net14URLFetcherCore28SetIgnoreCertificateRequestsEb(i1 zeroext) local_unnamed_addr #5 align 2 {
  %2 = zext i1 %0 to i8
  store i8 %2, i8* @_ZN12_GLOBAL__N_129g_ignore_certificate_requestsE, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCoreD2Ev(%"class.net::URLFetcherCore"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN3net14URLFetcherCoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN3net14URLFetcherCoreE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 61, i32 0, i32 0, i32 0
  %5 = load %"class.base::RepeatingTimer"*, %"class.base::RepeatingTimer"** %4, align 8
  store %"class.base::RepeatingTimer"* null, %"class.base::RepeatingTimer"** %4, align 8
  %6 = icmp eq %"class.base::RepeatingTimer"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.base::RepeatingTimer"* %5 to void (%"class.base::RepeatingTimer"*)***
  %9 = load void (%"class.base::RepeatingTimer"*)**, void (%"class.base::RepeatingTimer"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.base::RepeatingTimer"*)*, void (%"class.base::RepeatingTimer"*)** %9, i64 1
  %11 = load void (%"class.base::RepeatingTimer"*)*, void (%"class.base::RepeatingTimer"*)** %10, align 8
  tail call void %11(%"class.base::RepeatingTimer"* nonnull %5) #12
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 50, i32 0, i32 0, i32 0
  %14 = load %"class.net::URLFetcherResponseWriter"*, %"class.net::URLFetcherResponseWriter"** %13, align 8
  store %"class.net::URLFetcherResponseWriter"* null, %"class.net::URLFetcherResponseWriter"** %13, align 8
  %15 = icmp eq %"class.net::URLFetcherResponseWriter"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.net::URLFetcherResponseWriter"* %14 to void (%"class.net::URLFetcherResponseWriter"*)***
  %18 = load void (%"class.net::URLFetcherResponseWriter"*)**, void (%"class.net::URLFetcherResponseWriter"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.net::URLFetcherResponseWriter"*)*, void (%"class.net::URLFetcherResponseWriter"*)** %18, i64 1
  %20 = load void (%"class.net::URLFetcherResponseWriter"*)*, void (%"class.net::URLFetcherResponseWriter"*)** %19, align 8
  tail call void %20(%"class.net::URLFetcherResponseWriter"* nonnull %14) #12
  br label %21

21:                                               ; preds = %12, %16
  %22 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 47, i32 0
  %23 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %22, align 8
  %24 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.net::URLRequestThrottlerEntryInterface", %"class.net::URLRequestThrottlerEntryInterface"* %23, i64 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe.438", %"class.base::RefCountedThreadSafe.438"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %37

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.438", %"class.base::RefCountedThreadSafe.438"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe.438"* %31 to %"class.net::URLRequestThrottlerEntryInterface"*
  %33 = bitcast %"class.base::RefCountedThreadSafe.438"* %31 to void (%"class.net::URLRequestThrottlerEntryInterface"*)***
  %34 = load void (%"class.net::URLRequestThrottlerEntryInterface"*)**, void (%"class.net::URLRequestThrottlerEntryInterface"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.net::URLRequestThrottlerEntryInterface"*)*, void (%"class.net::URLRequestThrottlerEntryInterface"*)** %34, i64 6
  %36 = load void (%"class.net::URLRequestThrottlerEntryInterface"*)*, void (%"class.net::URLRequestThrottlerEntryInterface"*)** %35, align 8
  tail call void %36(%"class.net::URLRequestThrottlerEntryInterface"* nonnull %32) #12
  br label %37

37:                                               ; preds = %21, %25, %30
  %38 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 46, i32 0
  %39 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %38, align 8
  %40 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %39, null
  br i1 %40, label %53, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.net::URLRequestThrottlerEntryInterface", %"class.net::URLRequestThrottlerEntryInterface"* %39, i64 0, i32 1
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe.438", %"class.base::RefCountedThreadSafe.438"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %53

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe.438", %"class.base::RefCountedThreadSafe.438"* %42, i64 -2
  %48 = bitcast %"class.base::RefCountedThreadSafe.438"* %47 to %"class.net::URLRequestThrottlerEntryInterface"*
  %49 = bitcast %"class.base::RefCountedThreadSafe.438"* %47 to void (%"class.net::URLRequestThrottlerEntryInterface"*)***
  %50 = load void (%"class.net::URLRequestThrottlerEntryInterface"*)**, void (%"class.net::URLRequestThrottlerEntryInterface"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.net::URLRequestThrottlerEntryInterface"*)*, void (%"class.net::URLRequestThrottlerEntryInterface"*)** %50, i64 6
  %52 = load void (%"class.net::URLRequestThrottlerEntryInterface"*)*, void (%"class.net::URLRequestThrottlerEntryInterface"*)** %51, align 8
  tail call void %52(%"class.net::URLRequestThrottlerEntryInterface"* nonnull %48) #12
  br label %53

53:                                               ; preds = %37, %41, %46
  %54 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 45, i32 0, i32 0, i32 0
  %55 = load %"class.net::ChunkedUploadDataStream"*, %"class.net::ChunkedUploadDataStream"** %54, align 8
  store %"class.net::ChunkedUploadDataStream"* null, %"class.net::ChunkedUploadDataStream"** %54, align 8
  %56 = icmp eq %"class.net::ChunkedUploadDataStream"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.net::ChunkedUploadDataStream"* %55 to void (%"class.net::ChunkedUploadDataStream"*)***
  %59 = load void (%"class.net::ChunkedUploadDataStream"*)**, void (%"class.net::ChunkedUploadDataStream"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.net::ChunkedUploadDataStream"*)*, void (%"class.net::ChunkedUploadDataStream"*)** %59, i64 1
  %61 = load void (%"class.net::ChunkedUploadDataStream"*)*, void (%"class.net::ChunkedUploadDataStream"*)** %60, align 8
  tail call void %61(%"class.net::ChunkedUploadDataStream"* nonnull %55) #12
  br label %62

62:                                               ; preds = %53, %57
  %63 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 44, i32 0, i32 0, i32 0
  %64 = load %"class.net::ChunkedUploadDataStream::Writer"*, %"class.net::ChunkedUploadDataStream::Writer"** %63, align 8
  store %"class.net::ChunkedUploadDataStream::Writer"* null, %"class.net::ChunkedUploadDataStream::Writer"** %63, align 8
  %65 = icmp eq %"class.net::ChunkedUploadDataStream::Writer"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %62
  tail call void @_ZN3net23ChunkedUploadDataStream6WriterD1Ev(%"class.net::ChunkedUploadDataStream::Writer"* nonnull %64) #12
  %67 = bitcast %"class.net::ChunkedUploadDataStream::Writer"* %64 to i8*
  tail call void @_ZdlPv(i8* %67) #13
  br label %68

68:                                               ; preds = %62, %66
  %69 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 40
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  tail call void @_ZdlPv(i8* %76) #13
  br label %77

77:                                               ; preds = %68, %74
  %78 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 39
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %77, %83
  %87 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 38, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %87) #12
  %88 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 35
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %88) #12
  %89 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 34
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  tail call void @_ZdlPv(i8* %96) #13
  br label %97

97:                                               ; preds = %86, %94
  %98 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 31
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %98) #12
  %99 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 26, i32 2
  %100 = bitcast %"class.net::HostPortPair"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #13
  br label %107

107:                                              ; preds = %97, %104
  %108 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 25, i32 0
  %109 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %108, align 8
  %110 = icmp eq %"class.net::HttpResponseHeaders"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw sub i32* %112, i32 1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %117

115:                                              ; preds = %111
  tail call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %109) #12
  %116 = bitcast %"class.net::HttpResponseHeaders"* %109 to i8*
  tail call void @_ZdlPv(i8* %116) #13
  br label %117

117:                                              ; preds = %107, %111, %115
  %118 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 24
  tail call void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"* %118) #12
  %119 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 23, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %119) #12
  %120 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %124) #12
  store i8 0, i8* %120, align 8
  br label %125

125:                                              ; preds = %117, %123
  %126 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 20, i32 0
  %127 = load %"class.net::URLRequestContextGetter"*, %"class.net::URLRequestContextGetter"** %126, align 8
  %128 = icmp eq %"class.net::URLRequestContextGetter"* %127, null
  br i1 %128, label %137, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.net::URLRequestContextGetter", %"class.net::URLRequestContextGetter"* %127, i64 0, i32 1
  %131 = getelementptr inbounds %"class.base::RefCountedThreadSafe.408", %"class.base::RefCountedThreadSafe.408"* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = atomicrmw sub i32* %131, i32 1 acq_rel
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %137

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.base::RefCountedThreadSafe.408", %"class.base::RefCountedThreadSafe.408"* %130, i64 -2
  %136 = bitcast %"class.base::RefCountedThreadSafe.408"* %135 to %"class.net::URLRequestContextGetter"*
  tail call void @_ZNK3net23URLRequestContextGetter10OnDestructEv(%"class.net::URLRequestContextGetter"* %136) #12
  br label %137

137:                                              ; preds = %125, %129, %134
  %138 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 19, i32 0
  %139 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %138, align 8
  %140 = icmp eq %"class.net::IOBuffer"* %139, null
  br i1 %140, label %153, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %139, i64 0, i32 1
  %143 = getelementptr inbounds %"class.base::RefCountedThreadSafe.406", %"class.base::RefCountedThreadSafe.406"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = atomicrmw sub i32* %143, i32 1 acq_rel
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %153

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.base::RefCountedThreadSafe.406", %"class.base::RefCountedThreadSafe.406"* %142, i64 -2
  %148 = bitcast %"class.base::RefCountedThreadSafe.406"* %147 to %"class.net::IOBuffer"*
  %149 = bitcast %"class.base::RefCountedThreadSafe.406"* %147 to void (%"class.net::IOBuffer"*)***
  %150 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %150, i64 1
  %152 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %151, align 8
  tail call void %152(%"class.net::IOBuffer"* nonnull %148) #12
  br label %153

153:                                              ; preds = %137, %141, %146
  %154 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %155 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %154, align 8
  store %"class.net::URLRequest"* null, %"class.net::URLRequest"** %154, align 8
  %156 = icmp eq %"class.net::URLRequest"* %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %153
  %158 = bitcast %"class.net::URLRequest"* %155 to void (%"class.net::URLRequest"*)***
  %159 = load void (%"class.net::URLRequest"*)**, void (%"class.net::URLRequest"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %159, i64 1
  %161 = load void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %160, align 8
  tail call void %161(%"class.net::URLRequest"* nonnull %155) #12
  br label %162

162:                                              ; preds = %153, %157
  %163 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 12, i32 0
  %164 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %163, align 8
  %165 = icmp eq %"class.base::TaskRunner"* %164, null
  br i1 %165, label %174, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %164, i64 0, i32 1
  %168 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = atomicrmw sub i32* %168, i32 1 acq_rel
  %170 = icmp eq i32 %169, 1
  br i1 %170, label %171, label %174

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %167, i64 -2
  %173 = bitcast %"class.base::RefCountedThreadSafe.13"* %172 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %173) #12
  br label %174

174:                                              ; preds = %162, %166, %171
  %175 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 11, i32 0
  %176 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %175, align 8
  %177 = icmp eq %"class.base::SingleThreadTaskRunner"* %176, null
  br i1 %177, label %186, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %176, i64 0, i32 0, i32 0, i32 1
  %180 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = atomicrmw sub i32* %180, i32 1 acq_rel
  %182 = icmp eq i32 %181, 1
  br i1 %182, label %183, label %186

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %179, i64 -2
  %185 = bitcast %"class.base::RefCountedThreadSafe.13"* %184 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %185) #12
  br label %186

186:                                              ; preds = %174, %178, %183
  %187 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 10, i32 0
  %188 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %187, align 8
  %189 = icmp eq %"class.base::SequencedTaskRunner"* %188, null
  br i1 %189, label %198, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %188, i64 0, i32 0, i32 1
  %192 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %191, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = atomicrmw sub i32* %192, i32 1 acq_rel
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %195, label %198

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %191, i64 -2
  %197 = bitcast %"class.base::RefCountedThreadSafe.13"* %196 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %197) #12
  br label %198

198:                                              ; preds = %186, %190, %195
  %199 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 6
  tail call void @_ZN4GURLD1Ev(%class.GURL* %199) #12
  %200 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 5
  tail call void @_ZN4GURLD1Ev(%class.GURL* %200) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3net14URLFetcherCoreD1Ev(%"class.net::URLFetcherCore"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 -1, i32 64
  %3 = bitcast i64* %2 to %"class.net::URLFetcherCore"*
  tail call void @_ZN3net14URLFetcherCoreD2Ev(%"class.net::URLFetcherCore"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCoreD0Ev(%"class.net::URLFetcherCore"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net14URLFetcherCoreD2Ev(%"class.net::URLFetcherCore"* %0) #12
  %2 = bitcast %"class.net::URLFetcherCore"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3net14URLFetcherCoreD0Ev(%"class.net::URLFetcherCore"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 -1, i32 64
  %3 = bitcast i64* %2 to %"class.net::URLFetcherCore"*
  tail call void @_ZN3net14URLFetcherCoreD2Ev(%"class.net::URLFetcherCore"* %3) #12
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

declare %"class.net::ChunkedUploadDataStream::Writer"* @_ZN3net23ChunkedUploadDataStream12CreateWriterEv(%"class.net::ChunkedUploadDataStream"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore19DidInitializeWriterEi(%"class.net::URLFetcherCore"*, i32) #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZN3net14URLFetcherCore30CancelRequestAndInformDelegateEi(%"class.net::URLFetcherCore"* %0, i32 %1)
  br label %6

5:                                                ; preds = %2
  tail call void @_ZN3net14URLFetcherCore30StartURLRequestWhenAppropriateEv(%"class.net::URLFetcherCore"* %0)
  br label %6

6:                                                ; preds = %5, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore15StartURLRequestEv(%"class.net::URLFetcherCore"*) #0 align 2 {
  %2 = alloca %"class.base::RepeatingCallback.448", align 8
  %3 = alloca %"class.net::SiteForCookies", align 8
  %4 = alloca %class.GURL, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.base::Time", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 48
  %13 = load i8, i8* %12, align 8, !range !5
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %397

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 20, i32 0
  %17 = load %"class.net::URLRequestContextGetter"*, %"class.net::URLRequestContextGetter"** %16, align 8
  %18 = bitcast %"class.net::URLRequestContextGetter"* %17 to %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)***
  %19 = load %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)**, %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)*** %18, align 8
  %20 = load %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)*, %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)** %19, align 8
  %21 = tail call %"class.net::URLRequestContext"* %20(%"class.net::URLRequestContextGetter"* %17) #12
  %22 = icmp eq %"class.net::URLRequestContext"* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %15
  tail call void @_ZN3net14URLFetcherCore30CancelRequestAndInformDelegateEi(%"class.net::URLFetcherCore"* %0, i32 -26)
  br label %397

24:                                               ; preds = %15
  %25 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0) acquire, align 8
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0)) #12
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 8), i8 0, i64 16, i1 false) #12
  store i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 8), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 0) to i8**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceIN3net14URLFetcherCore8RegistryENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE to i8*)) #12
  br label %32

30:                                               ; preds = %27
  %31 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 0) acquire, align 8
  br label %32

32:                                               ; preds = %24, %29, %30
  %33 = phi i64 [ %25, %24 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net14URLFetcherCore10g_registryE, i64 0, i32 1, i64 0) to i64), %29 ], [ %31, %30 ]
  %34 = inttoptr i64 %33 to %"class.net::URLFetcherCore::Registry"*
  %35 = ptrtoint %"class.net::URLFetcherCore"* %0 to i64
  %36 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %34, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node"**
  %38 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node"* %38, null
  br i1 %39, label %68, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %34, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %64, %40
  %43 = phi %"class.std::__1::__tree_node"* [ %67, %64 ], [ %38, %40 ]
  %44 = phi %"class.std::__1::__tree_node_base"** [ %66, %64 ], [ %41, %40 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 1
  %46 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %45, align 8
  %47 = icmp ugt %"class.net::URLFetcherCore"* %46, %0
  br i1 %47, label %48, label %54

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %64

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 0
  br label %70

54:                                               ; preds = %42
  %55 = icmp ult %"class.net::URLFetcherCore"* %46, %0
  br i1 %55, label %56, label %62

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 1
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 0
  br label %70

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %43, i64 0, i32 0, i32 0
  br label %70

64:                                               ; preds = %56, %48
  %65 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %58, %56 ]
  %66 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %57, %56 ]
  %67 = bitcast %"class.std::__1::__tree_node_base"* %65 to %"class.std::__1::__tree_node"*
  br label %42

68:                                               ; preds = %32
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  br label %70

70:                                               ; preds = %68, %62, %60, %52
  %71 = phi %"class.std::__1::__tree_end_node"* [ %36, %68 ], [ %53, %52 ], [ %61, %60 ], [ %63, %62 ]
  %72 = phi %"class.std::__1::__tree_node_base"** [ %69, %68 ], [ %49, %52 ], [ %57, %60 ], [ %44, %62 ]
  %73 = bitcast %"class.std::__1::__tree_node_base"** %72 to %"class.std::__1::__tree_node"**
  %74 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node"* %74, null
  br i1 %75, label %76, label %100

76:                                               ; preds = %70
  %77 = tail call i8* @_Znwm(i64 40) #13, !noalias !51
  %78 = getelementptr inbounds i8, i8* %77, i64 32
  %79 = bitcast i8* %78 to i64*
  store i64 %35, i64* %79, align 8, !noalias !51
  %80 = bitcast i8* %77 to %"class.std::__1::__tree_node_base"*
  %81 = getelementptr inbounds i8, i8* %77, i64 16
  %82 = bitcast i8* %81 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %71, %"class.std::__1::__tree_end_node"** %82, align 8
  %83 = bitcast %"class.std::__1::__tree_node_base"** %72 to i8**
  store i8* %77, i8** %83, align 8
  %84 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %34, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %76
  %90 = ptrtoint %"class.std::__1::__tree_node_base"* %87 to i64
  %91 = inttoptr i64 %33 to i64*
  store i64 %90, i64* %91, align 8
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  br label %93

93:                                               ; preds = %89, %76
  %94 = phi %"class.std::__1::__tree_node_base"* [ %80, %76 ], [ %92, %89 ]
  %95 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %34, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %96, %"class.std::__1::__tree_node_base"* %94) #12
  %97 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %34, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  br label %100

100:                                              ; preds = %70, %93
  %101 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 63
  store i64 0, i64* %101, align 8
  %102 = load %"class.net::URLRequestContextGetter"*, %"class.net::URLRequestContextGetter"** %16, align 8
  %103 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 3
  tail call void @_ZN3net23URLRequestContextGetter11AddObserverEPNS_31URLRequestContextGetterObserverE(%"class.net::URLRequestContextGetter"* %102, %"class.net::URLRequestContextGetterObserver"* %103) #12
  %104 = load %"class.net::URLRequestContextGetter"*, %"class.net::URLRequestContextGetter"** %16, align 8
  %105 = bitcast %"class.net::URLRequestContextGetter"* %104 to %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)***
  %106 = load %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)**, %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)*** %105, align 8
  %107 = load %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)*, %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)** %106, align 8
  %108 = tail call %"class.net::URLRequestContext"* %107(%"class.net::URLRequestContextGetter"* %104) #12
  %109 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 5
  %110 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 0
  %111 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 65, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = tail call %"class.net::URLRequest"* @_ZNK3net17URLRequestContext13CreateRequestERK4GURLNS_15RequestPriorityEPNS_10URLRequest8DelegateENS_27NetworkTrafficAnnotationTagE(%"class.net::URLRequestContext"* %108, %class.GURL* dereferenceable(120) %109, i32 2, %"class.net::URLRequest::Delegate"* %110, i32 %112) #12
  %114 = ptrtoint %"class.net::URLRequest"* %113 to i64
  %115 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  %118 = bitcast %"class.std::__1::unique_ptr.16"* %115 to i64*
  store i64 %114, i64* %118, align 8
  %119 = icmp eq %"class.net::URLRequest"* %117, null
  br i1 %119, label %126, label %120

120:                                              ; preds = %100
  %121 = bitcast %"class.net::URLRequest"* %117 to void (%"class.net::URLRequest"*)***
  %122 = load void (%"class.net::URLRequest"*)**, void (%"class.net::URLRequest"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %122, i64 1
  %124 = load void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %123, align 8
  tail call void %124(%"class.net::URLRequest"* nonnull %117) #12
  %125 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  br label %126

126:                                              ; preds = %120, %100
  %127 = phi %"class.net::URLRequest"* [ %125, %120 ], [ %113, %100 ]
  %128 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %127, i64 0, i32 18
  %129 = load i32, i32* %128, align 8
  %130 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 14
  %131 = load i32, i32* %130, align 8
  %132 = or i32 %131, %129
  %133 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 45, i32 0, i32 0, i32 0
  %134 = load %"class.net::ChunkedUploadDataStream"*, %"class.net::ChunkedUploadDataStream"** %133, align 8
  %135 = icmp eq %"class.net::ChunkedUploadDataStream"* %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %126
  %137 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %134, i64 0, i32 0
  store %"class.net::ChunkedUploadDataStream"* null, %"class.net::ChunkedUploadDataStream"** %133, align 8
  tail call void @_ZN3net10URLRequest10set_uploadENSt3__110unique_ptrINS_16UploadDataStreamENS1_14default_deleteIS3_EEEE(%"class.net::URLRequest"* %127, %"class.net::UploadDataStream"* %137) #12
  %138 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  br label %139

139:                                              ; preds = %126, %136
  %140 = phi %"class.net::URLRequest"* [ %127, %126 ], [ %138, %136 ]
  tail call void @_ZN3net10URLRequest12SetLoadFlagsEi(%"class.net::URLRequest"* %140, i32 %132) #12
  %141 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %142 = load i8, i8* %141, align 1, !range !5
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %149, label %144

144:                                              ; preds = %139
  %145 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  %146 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1, !range !5
  %148 = icmp ne i8 %147, 0
  tail call void @_ZN3net10URLRequest21set_allow_credentialsEb(%"class.net::URLRequest"* %145, i1 zeroext %148) #12
  br label %149

149:                                              ; preds = %139, %144
  %150 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  %151 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 40
  tail call void @_ZN3net10URLRequest11SetReferrerERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLRequest"* %150, %"class.std::__1::basic_string"* dereferenceable(24) %151) #12
  %152 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  %153 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 41
  %154 = load i32, i32* %153, align 8
  tail call void @_ZN3net10URLRequest19set_referrer_policyENS_14ReferrerPolicyE(%"class.net::URLRequest"* %152, i32 %154) #12
  %155 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  %156 = bitcast %"class.net::SiteForCookies"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %156) #12
  %157 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %157) #12
  %158 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 21
  %159 = getelementptr inbounds %"class.absl::optional.286", %"class.absl::optional.286"* %158, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i8, i8* %159, align 8, !range !5
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %168, label %162

162:                                              ; preds = %149
  %163 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %164 = load i8, i8* %163, align 8, !range !5
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %4, %"class.url::Origin"* %167) #12
  br label %169

168:                                              ; preds = %162, %149
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %4, %class.GURL* dereferenceable(120) %109) #12
  br label %169

169:                                              ; preds = %168, %166
  call void @_ZN3net14SiteForCookies7FromUrlERK4GURL(%"class.net::SiteForCookies"* nonnull sret %3, %class.GURL* nonnull dereferenceable(120) %4) #12
  call void @_ZN3net10URLRequest20set_site_for_cookiesERKNS_14SiteForCookiesE(%"class.net::URLRequest"* %155, %"class.net::SiteForCookies"* nonnull dereferenceable(88) %3) #12
  call void @_ZN3net14SiteForCookiesD1Ev(%"class.net::SiteForCookies"* nonnull %3) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %157) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %156) #12
  %170 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  call void @_ZN3net10URLRequest13set_initiatorERKN4absl8optionalIN3url6OriginEEE(%"class.net::URLRequest"* %170, %"class.absl::optional.286"* dereferenceable(88) %158) #12
  %171 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 22
  %172 = load i8*, i8** %171, align 8
  %173 = icmp eq i8* %172, null
  br i1 %173, label %185, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  %176 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %175, align 8
  %177 = icmp eq %"class.base::internal::BindStateBase"* %176, null
  br i1 %177, label %185, label %178

178:                                              ; preds = %174
  %179 = bitcast %"class.std::__1::unique_ptr.16"* %115 to %"class.base::SupportsUserData"**
  %180 = load %"class.base::SupportsUserData"*, %"class.base::SupportsUserData"** %179, align 8
  %181 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %176, i64 0, i32 1
  %182 = bitcast void ()** %181 to %"class.base::SupportsUserData::Data"* (%"class.base::internal::BindStateBase"*)**
  %183 = load %"class.base::SupportsUserData::Data"* (%"class.base::internal::BindStateBase"*)*, %"class.base::SupportsUserData::Data"* (%"class.base::internal::BindStateBase"*)** %182, align 8
  %184 = call %"class.base::SupportsUserData::Data"* %183(%"class.base::internal::BindStateBase"* nonnull %176) #12
  call void @_ZN4base16SupportsUserData11SetUserDataEPKvNSt3__110unique_ptrINS0_4DataENS3_14default_deleteIS5_EEEE(%"class.base::SupportsUserData"* %180, i8* nonnull %172, %"class.base::SupportsUserData::Data"* %184) #12
  br label %185

185:                                              ; preds = %169, %178, %174
  %186 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 7
  %187 = load i32, i32* %186, align 8
  switch i32 %187, label %386 [
    i32 3, label %374
    i32 1, label %188
    i32 4, label %188
    i32 5, label %188
    i32 2, label %361
  ]

188:                                              ; preds = %185, %185, %185
  %189 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  %190 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #12
  %191 = icmp eq i32 %187, 1
  %192 = icmp eq i32 %187, 4
  %193 = select i1 %192, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)
  %194 = select i1 %191, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* %193
  %195 = call i64 @strlen(i8* %194) #12
  %196 = icmp ugt i64 %195, -17
  br i1 %196, label %197, label %199

197:                                              ; preds = %188
  %198 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %198) #14
  unreachable

199:                                              ; preds = %188
  %200 = icmp ult i64 %195, 23
  br i1 %200, label %210, label %201

201:                                              ; preds = %199
  %202 = add nuw i64 %195, 16
  %203 = and i64 %202, -16
  %204 = call i8* @_Znwm(i64 %203) #13
  %205 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %204, i8** %205, align 8
  %206 = or i64 %203, -9223372036854775808
  %207 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %206, i64* %207, align 8
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %195, i64* %208, align 8
  %209 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %215

210:                                              ; preds = %199
  %211 = trunc i64 %195 to i8
  %212 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %212, i64 0, i32 1, i32 0
  store i8 %211, i8* %213, align 1
  %214 = icmp eq i64 %195, 0
  br i1 %214, label %218, label %215

215:                                              ; preds = %210, %201
  %216 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %212, %210 ], [ %209, %201 ]
  %217 = phi i8* [ %190, %210 ], [ %204, %201 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %217, i8* align 1 %194, i64 %195, i1 false) #12
  br label %218

218:                                              ; preds = %210, %215
  %219 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %212, %210 ], [ %216, %215 ]
  %220 = phi i8* [ %190, %210 ], [ %217, %215 ]
  %221 = getelementptr inbounds i8, i8* %220, i64 %195
  store i8 0, i8* %221, align 1
  call void @_ZN3net10URLRequest10set_methodERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLRequest"* %189, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #12
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %219, i64 0, i32 1, i32 0
  %223 = load i8, i8* %222, align 1
  %224 = icmp slt i8 %223, 0
  br i1 %224, label %225, label %228

225:                                              ; preds = %218
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load i8*, i8** %226, align 8
  call void @_ZdlPv(i8* %227) #13
  br label %228

228:                                              ; preds = %218, %225
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #12
  %229 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 39
  %230 = bitcast %"class.std::__1::basic_string"* %229 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  %232 = load i8, i8* %231, align 1
  %233 = icmp slt i8 %232, 0
  br i1 %233, label %234, label %237

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 39, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %236 = load i64, i64* %235, align 8
  br label %239

237:                                              ; preds = %228
  %238 = zext i8 %232 to i64
  br label %239

239:                                              ; preds = %234, %237
  %240 = phi i64 [ %236, %234 ], [ %238, %237 ]
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %259, label %242

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 24
  %244 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %244) #12
  %245 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders12kContentTypeE, i64 0, i64 0), i8** %245, align 8
  %246 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %247 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders12kContentTypeE, i64 0, i64 0)) #12
  store i64 %247, i64* %246, align 8
  %248 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %248) #12
  %249 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %250 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %229, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = bitcast %"class.std::__1::basic_string"* %229 to i8*
  %253 = select i1 %233, i8* %251, i8* %252
  store i8* %253, i8** %249, align 8
  %254 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %255 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 39, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %256 = load i64, i64* %255, align 8
  %257 = zext i8 %232 to i64
  %258 = select i1 %233, i64 %256, i64 %257
  store i64 %258, i64* %254, align 8
  call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* %243, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %248) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %244) #12
  br label %259

259:                                              ; preds = %242, %239
  %260 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 34
  %261 = bitcast %"class.std::__1::basic_string"* %260 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %261, i64 0, i32 1, i32 0
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %259
  %266 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %267 = load i64, i64* %266, align 8
  br label %270

268:                                              ; preds = %259
  %269 = zext i8 %263 to i64
  br label %270

270:                                              ; preds = %265, %268
  %271 = phi i64 [ %267, %265 ], [ %269, %268 ]
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %290, label %273

273:                                              ; preds = %270
  %274 = call i8* @_Znwm(i64 32) #13
  %275 = bitcast i8* %274 to %"class.net::UploadBytesElementReader"*
  br i1 %264, label %276, label %281

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %260, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load i8*, i8** %277, align 8
  %279 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %280 = load i64, i64* %279, align 8
  br label %284

281:                                              ; preds = %273
  %282 = bitcast %"class.std::__1::basic_string"* %260 to i8*
  %283 = zext i8 %263 to i64
  br label %284

284:                                              ; preds = %281, %276
  %285 = phi i8* [ %278, %276 ], [ %282, %281 ]
  %286 = phi i64 [ %280, %276 ], [ %283, %281 ]
  call void @_ZN3net24UploadBytesElementReaderC1EPKcm(%"class.net::UploadBytesElementReader"* nonnull %275, i8* %285, i64 %286) #12
  %287 = bitcast i8* %274 to %"class.net::UploadElementReader"*
  %288 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  %289 = call %"class.net::UploadDataStream"* @_ZN3net24ElementsUploadDataStream16CreateWithReaderENSt3__110unique_ptrINS_19UploadElementReaderENS1_14default_deleteIS3_EEEEl(%"class.net::UploadElementReader"* nonnull %287, i64 0) #12
  call void @_ZN3net10URLRequest10set_uploadENSt3__110unique_ptrINS_16UploadDataStreamENS1_14default_deleteIS3_EEEE(%"class.net::URLRequest"* %288, %"class.net::UploadDataStream"* %289) #12
  br label %328

290:                                              ; preds = %270
  %291 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 35
  %292 = bitcast %"class.base::FilePath"* %291 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %293 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %292, i64 0, i32 1, i32 0
  %294 = load i8, i8* %293, align 1
  %295 = icmp slt i8 %294, 0
  br i1 %295, label %296, label %299

296:                                              ; preds = %290
  %297 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 35, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %298 = load i64, i64* %297, align 8
  br label %301

299:                                              ; preds = %290
  %300 = zext i8 %294 to i64
  br label %301

301:                                              ; preds = %296, %299
  %302 = phi i64 [ %298, %296 ], [ %300, %299 ]
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %318, label %304

304:                                              ; preds = %301
  %305 = call i8* @_Znwm(i64 168) #13
  %306 = bitcast i8* %305 to %"class.net::UploadFileElementReader"*
  %307 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 12, i32 0
  %308 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %307, align 8
  %309 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 36
  %310 = load i64, i64* %309, align 8
  %311 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 37
  %312 = load i64, i64* %311, align 8
  %313 = bitcast %"class.base::Time"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %313) #12
  %314 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %8, i64 0, i32 0, i32 0
  store i64 0, i64* %314, align 8
  call void @_ZN3net23UploadFileElementReaderC1EPN4base10TaskRunnerERKNS1_8FilePathEmmRKNS1_4TimeE(%"class.net::UploadFileElementReader"* nonnull %306, %"class.base::TaskRunner"* %308, %"class.base::FilePath"* dereferenceable(24) %291, i64 %310, i64 %312, %"class.base::Time"* nonnull dereferenceable(8) %8) #12
  %315 = bitcast i8* %305 to %"class.net::UploadElementReader"*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %313) #12
  %316 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  %317 = call %"class.net::UploadDataStream"* @_ZN3net24ElementsUploadDataStream16CreateWithReaderENSt3__110unique_ptrINS_19UploadElementReaderENS1_14default_deleteIS3_EEEEl(%"class.net::UploadElementReader"* nonnull %315, i64 0) #12
  call void @_ZN3net10URLRequest10set_uploadENSt3__110unique_ptrINS_16UploadDataStreamENS1_14default_deleteIS3_EEEE(%"class.net::URLRequest"* %316, %"class.net::UploadDataStream"* %317) #12
  br label %328

318:                                              ; preds = %301
  %319 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0
  %320 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %319, align 8
  %321 = icmp eq %"class.base::internal::BindStateBase"* %320, null
  br i1 %321, label %328, label %322

322:                                              ; preds = %318
  %323 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %320, i64 0, i32 1
  %324 = bitcast void ()** %323 to %"class.net::UploadDataStream"* (%"class.base::internal::BindStateBase"*)**
  %325 = load %"class.net::UploadDataStream"* (%"class.base::internal::BindStateBase"*)*, %"class.net::UploadDataStream"* (%"class.base::internal::BindStateBase"*)** %324, align 8
  %326 = call %"class.net::UploadDataStream"* %325(%"class.base::internal::BindStateBase"* nonnull %320) #12
  %327 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  call void @_ZN3net10URLRequest10set_uploadENSt3__110unique_ptrINS_16UploadDataStreamENS1_14default_deleteIS3_EEEE(%"class.net::URLRequest"* %327, %"class.net::UploadDataStream"* %326) #12
  br label %328

328:                                              ; preds = %304, %322, %318, %284
  %329 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 62
  store i64 -1, i64* %329, align 8
  %330 = call i8* @_Znwm(i64 128) #13
  %331 = bitcast i8* %330 to %"class.base::RepeatingTimer"*
  call void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"* nonnull %331) #12
  %332 = ptrtoint i8* %330 to i64
  %333 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 61
  %334 = getelementptr inbounds %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.445"* %333, i64 0, i32 0, i32 0, i32 0
  %335 = load %"class.base::RepeatingTimer"*, %"class.base::RepeatingTimer"** %334, align 8
  %336 = bitcast %"class.std::__1::unique_ptr.445"* %333 to i64*
  store i64 %332, i64* %336, align 8
  %337 = icmp eq %"class.base::RepeatingTimer"* %335, null
  %338 = bitcast i8* %330 to %"class.base::RepeatingTimer"*
  br i1 %337, label %345, label %339

339:                                              ; preds = %328
  %340 = bitcast %"class.base::RepeatingTimer"* %335 to void (%"class.base::RepeatingTimer"*)***
  %341 = load void (%"class.base::RepeatingTimer"*)**, void (%"class.base::RepeatingTimer"*)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.base::RepeatingTimer"*)*, void (%"class.base::RepeatingTimer"*)** %341, i64 1
  %343 = load void (%"class.base::RepeatingTimer"*)*, void (%"class.base::RepeatingTimer"*)** %342, align 8
  call void %343(%"class.base::RepeatingTimer"* nonnull %335) #12
  %344 = load %"class.base::RepeatingTimer"*, %"class.base::RepeatingTimer"** %334, align 8
  br label %345

345:                                              ; preds = %339, %328
  %346 = phi %"class.base::RepeatingTimer"* [ %344, %339 ], [ %338, %328 ]
  %347 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %347) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 622) #12
  %348 = bitcast %"class.base::RepeatingCallback.448"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %348)
  %349 = call i8* @_Znwm(i64 56) #13, !noalias !54
  %350 = bitcast i8* %349 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %350, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !54
  %351 = getelementptr inbounds i8, i8* %349, i64 32
  %352 = bitcast i8* %351 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*)* @_ZN3net14URLFetcherCore28InformDelegateUploadProgressEv to i64), i64 0>, <2 x i64>* %352, align 8, !noalias !54
  %353 = getelementptr inbounds i8, i8* %349, i64 48
  %354 = bitcast i8* %353 to i64*
  store i64 %35, i64* %354, align 8, !noalias !54
  %355 = bitcast %"class.base::RepeatingCallback.448"* %2 to i8**
  store i8* %349, i8** %355, align 8, !alias.scope !54
  %356 = bitcast %"class.base::RepeatingTimer"* %346 to void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.448"*)***
  %357 = load void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.448"*)**, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.448"*)*** %356, align 8
  %358 = getelementptr inbounds void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.448"*)*, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.448"*)** %357, i64 7
  %359 = load void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.448"*)*, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback.448"*)** %358, align 8
  call void %359(%"class.base::RepeatingTimer"* %346, %"class.base::Location"* nonnull dereferenceable(32) %9, i64 100000, %"class.base::RepeatingCallback.448"* nonnull %2) #12
  %360 = getelementptr inbounds %"class.base::RepeatingCallback.448", %"class.base::RepeatingCallback.448"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %360) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %348)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %347) #12
  br label %386

361:                                              ; preds = %185
  %362 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  %363 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %363) #12
  %364 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %365 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %364, i64 0, i32 1, i32 0
  store i8 4, i8* %365, align 1
  %366 = bitcast %"class.std::__1::basic_string"* %10 to i32*
  store i32 1145128264, i32* %366, align 8
  %367 = getelementptr inbounds i8, i8* %363, i64 4
  store i8 0, i8* %367, align 4
  call void @_ZN3net10URLRequest10set_methodERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLRequest"* %362, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #12
  %368 = load i8, i8* %365, align 1
  %369 = icmp slt i8 %368, 0
  br i1 %369, label %370, label %373

370:                                              ; preds = %361
  %371 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = load i8*, i8** %371, align 8
  call void @_ZdlPv(i8* %372) #13
  br label %373

373:                                              ; preds = %361, %370
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %363) #12
  br label %386

374:                                              ; preds = %185
  %375 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  %376 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %376) #12
  %377 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %378 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %377, i64 0, i32 1, i32 0
  store i8 6, i8* %378, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %376, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i64 6, i1 false) #12
  %379 = getelementptr inbounds i8, i8* %376, i64 6
  store i8 0, i8* %379, align 2
  call void @_ZN3net10URLRequest10set_methodERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLRequest"* %375, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #12
  %380 = load i8, i8* %378, align 1
  %381 = icmp slt i8 %380, 0
  br i1 %381, label %382, label %385

382:                                              ; preds = %374
  %383 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load i8*, i8** %383, align 8
  call void @_ZdlPv(i8* %384) #13
  br label %385

385:                                              ; preds = %374, %382
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %376) #12
  br label %386

386:                                              ; preds = %185, %385, %373, %345
  %387 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 24
  %388 = getelementptr inbounds %"class.net::HttpRequestHeaders", %"class.net::HttpRequestHeaders"* %387, i64 0, i32 0, i32 0, i32 0
  %389 = load %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"** %388, align 8
  %390 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 24, i32 0, i32 0, i32 1
  %391 = load %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"** %390, align 8
  %392 = icmp eq %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %389, %391
  br i1 %392, label %395, label %393

393:                                              ; preds = %386
  %394 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  call void @_ZN3net10URLRequest22SetExtraRequestHeadersERKNS_18HttpRequestHeadersE(%"class.net::URLRequest"* %394, %"class.net::HttpRequestHeaders"* dereferenceable(24) %387) #12
  br label %395

395:                                              ; preds = %393, %386
  %396 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %116, align 8
  call void @_ZN3net10URLRequest5StartEv(%"class.net::URLRequest"* %396) #12
  br label %397

397:                                              ; preds = %1, %395, %23
  ret void
}

declare void @_ZN3net23URLRequestContextGetter11AddObserverEPNS_31URLRequestContextGetterObserverE(%"class.net::URLRequestContextGetter"*, %"class.net::URLRequestContextGetterObserver"*) local_unnamed_addr #2

declare %"class.net::URLRequest"* @_ZNK3net17URLRequestContext13CreateRequestERK4GURLNS_15RequestPriorityEPNS_10URLRequest8DelegateENS_27NetworkTrafficAnnotationTagE(%"class.net::URLRequestContext"*, %class.GURL* dereferenceable(120), i32, %"class.net::URLRequest::Delegate"*, i32) local_unnamed_addr #2

declare void @_ZN3net10URLRequest10set_uploadENSt3__110unique_ptrINS_16UploadDataStreamENS1_14default_deleteIS3_EEEE(%"class.net::URLRequest"*, %"class.net::UploadDataStream"*) local_unnamed_addr #2

declare void @_ZN3net10URLRequest12SetLoadFlagsEi(%"class.net::URLRequest"*, i32) local_unnamed_addr #2

declare void @_ZN3net10URLRequest21set_allow_credentialsEb(%"class.net::URLRequest"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN3net10URLRequest11SetReferrerERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLRequest"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3net10URLRequest19set_referrer_policyENS_14ReferrerPolicyE(%"class.net::URLRequest"*, i32) local_unnamed_addr #2

declare void @_ZN3net10URLRequest20set_site_for_cookiesERKNS_14SiteForCookiesE(%"class.net::URLRequest"*, %"class.net::SiteForCookies"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN3net14SiteForCookies7FromUrlERK4GURL(%"class.net::SiteForCookies"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZNK3url6Origin6GetURLEv(%class.GURL* sret, %"class.url::Origin"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net14SiteForCookiesD1Ev(%"class.net::SiteForCookies"*) unnamed_addr #3

declare void @_ZN3net10URLRequest13set_initiatorERKN4absl8optionalIN3url6OriginEEE(%"class.net::URLRequest"*, %"class.absl::optional.286"* dereferenceable(88)) local_unnamed_addr #2

declare void @_ZN4base16SupportsUserData11SetUserDataEPKvNSt3__110unique_ptrINS0_4DataENS3_14default_deleteIS5_EEEE(%"class.base::SupportsUserData"*, i8*, %"class.base::SupportsUserData::Data"*) local_unnamed_addr #2

declare void @_ZN3net10URLRequest10set_methodERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLRequest"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3net24UploadBytesElementReaderC1EPKcm(%"class.net::UploadBytesElementReader"*, i8*, i64) unnamed_addr #2

declare %"class.net::UploadDataStream"* @_ZN3net24ElementsUploadDataStream16CreateWithReaderENSt3__110unique_ptrINS_19UploadElementReaderENS1_14default_deleteIS3_EEEEl(%"class.net::UploadElementReader"*, i64) local_unnamed_addr #2

declare void @_ZN3net23UploadFileElementReaderC1EPN4base10TaskRunnerERKNS1_8FilePathEmmRKNS1_4TimeE(%"class.net::UploadFileElementReader"*, %"class.base::TaskRunner"*, %"class.base::FilePath"* dereferenceable(24), i64, i64, %"class.base::Time"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore28InformDelegateUploadProgressEv(%"class.net::URLFetcherCore"*) #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %4, align 8
  %6 = icmp eq %"class.net::URLRequest"* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %1
  %8 = tail call { i64, i64 } @_ZNK3net10URLRequest17GetUploadProgressEv(%"class.net::URLRequest"* nonnull %5) #12
  %9 = extractvalue { i64, i64 } %8, 1
  %10 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 62
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, %9
  br i1 %12, label %46, label %13

13:                                               ; preds = %7
  store i64 %9, i64* %10, align 8
  %14 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 42
  %15 = load i8, i8* %14, align 4, !range !5
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %4, align 8
  %19 = tail call { i64, i64 } @_ZNK3net10URLRequest17GetUploadProgressEv(%"class.net::URLRequest"* %18) #12
  %20 = extractvalue { i64, i64 } %19, 0
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %46, label %22

22:                                               ; preds = %17, %13
  %23 = phi i64 [ %20, %17 ], [ -1, %13 ]
  %24 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 10, i32 0
  %25 = bitcast %"class.base::SequencedTaskRunner"** %24 to %"class.base::TaskRunner"**
  %26 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %25, align 8
  %27 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 912) #12
  %28 = call i8* @_Znwm(i64 72) #13, !noalias !59
  %29 = bitcast i8* %28 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %29, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvllEJ13scoped_refptrIS4_EllEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvllEJ13scoped_refptrIS3_EllEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !59
  %30 = getelementptr inbounds i8, i8* %28, i64 32
  %31 = bitcast i8* %30 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*, i64, i64)* @_ZN3net14URLFetcherCore46InformDelegateUploadProgressInDelegateSequenceEll to i64), i64 0>, <2 x i64>* %31, align 8, !noalias !59
  %32 = getelementptr inbounds i8, i8* %28, i64 48
  %33 = bitcast i8* %32 to %"class.net::URLFetcherCore"**
  store %"class.net::URLFetcherCore"* %0, %"class.net::URLFetcherCore"** %33, align 8, !noalias !59
  %34 = icmp eq %"class.net::URLFetcherCore"* %0, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic, !noalias !59
  br label %38

38:                                               ; preds = %22, %35
  %39 = getelementptr inbounds i8, i8* %28, i64 56
  %40 = bitcast i8* %39 to i64*
  store i64 %9, i64* %40, align 8, !noalias !59
  %41 = getelementptr inbounds i8, i8* %28, i64 64
  %42 = bitcast i8* %41 to i64*
  store i64 %23, i64* %42, align 8, !noalias !59
  %43 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %28, i8** %43, align 8, !alias.scope !59
  %44 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %26, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #12
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #12
  br label %46

46:                                               ; preds = %1, %17, %7, %38
  ret void
}

declare void @_ZN3net10URLRequest22SetExtraRequestHeadersERKNS_18HttpRequestHeadersE(%"class.net::URLRequest"*, %"class.net::HttpRequestHeaders"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3net10URLRequest5StartEv(%"class.net::URLRequest"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore30StartURLRequestWhenAppropriateEv(%"class.net::URLFetcherCore"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 48
  %6 = load i8, i8* %5, align 8, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %114

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 20, i32 0
  %10 = load %"class.net::URLRequestContextGetter"*, %"class.net::URLRequestContextGetter"** %9, align 8
  %11 = bitcast %"class.net::URLRequestContextGetter"* %10 to %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)***
  %12 = load %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)**, %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)*** %11, align 8
  %13 = load %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)*, %"class.net::URLRequestContext"* (%"class.net::URLRequestContextGetter"*)** %12, align 8
  %14 = tail call %"class.net::URLRequestContext"* %13(%"class.net::URLRequestContextGetter"* %10) #12
  %15 = icmp eq %"class.net::URLRequestContext"* %14, null
  br i1 %15, label %113, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %14, i64 0, i32 17
  %18 = load %"class.net::URLRequestThrottlerManager"*, %"class.net::URLRequestThrottlerManager"** %17, align 8
  %19 = icmp eq %"class.net::URLRequestThrottlerManager"* %18, null
  br i1 %19, label %113, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 46
  %22 = getelementptr inbounds %class.scoped_refptr.437, %class.scoped_refptr.437* %21, i64 0, i32 0
  %23 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %22, align 8
  %24 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.base::TimeTicks"* %2 to i8*
  br label %53

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 5
  %29 = tail call %"class.net::URLRequestThrottlerEntryInterface"* @_ZN3net26URLRequestThrottlerManager18RegisterRequestUrlERK4GURL(%"class.net::URLRequestThrottlerManager"* nonnull %18, %class.GURL* dereferenceable(120) %28) #12
  %30 = ptrtoint %"class.net::URLRequestThrottlerEntryInterface"* %29 to i64
  %31 = bitcast %class.scoped_refptr.437* %21 to i64*
  %32 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %22, align 8
  store i64 %30, i64* %31, align 8
  %33 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %32, null
  br i1 %33, label %48, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.net::URLRequestThrottlerEntryInterface", %"class.net::URLRequestThrottlerEntryInterface"* %32, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe.438", %"class.base::RefCountedThreadSafe.438"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe.438", %"class.base::RefCountedThreadSafe.438"* %35, i64 -2
  %41 = bitcast %"class.base::RefCountedThreadSafe.438"* %40 to %"class.net::URLRequestThrottlerEntryInterface"*
  %42 = bitcast %"class.base::RefCountedThreadSafe.438"* %40 to void (%"class.net::URLRequestThrottlerEntryInterface"*)***
  %43 = load void (%"class.net::URLRequestThrottlerEntryInterface"*)**, void (%"class.net::URLRequestThrottlerEntryInterface"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.net::URLRequestThrottlerEntryInterface"*)*, void (%"class.net::URLRequestThrottlerEntryInterface"*)** %43, i64 6
  %45 = load void (%"class.net::URLRequestThrottlerEntryInterface"*)*, void (%"class.net::URLRequestThrottlerEntryInterface"*)** %44, align 8
  tail call void %45(%"class.net::URLRequestThrottlerEntryInterface"* nonnull %41) #12
  br label %46

46:                                               ; preds = %34, %39
  %47 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %22, align 8
  br label %48

48:                                               ; preds = %46, %27
  %49 = phi %"class.net::URLRequestThrottlerEntryInterface"* [ %47, %46 ], [ %29, %27 ]
  %50 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %49, null
  br i1 %50, label %113, label %51

51:                                               ; preds = %48
  %52 = bitcast %"class.base::TimeTicks"* %2 to i8*
  br label %53

53:                                               ; preds = %51, %25
  %54 = phi i8* [ %52, %51 ], [ %26, %25 ]
  %55 = phi %"class.net::URLRequestThrottlerEntryInterface"* [ %49, %51 ], [ %23, %25 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  %56 = bitcast %"class.net::URLRequestThrottlerEntryInterface"* %55 to i64 (%"class.net::URLRequestThrottlerEntryInterface"*)***
  %57 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*)**, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)** %57, i64 2
  %59 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)** %58, align 8
  %60 = tail call i64 %59(%"class.net::URLRequestThrottlerEntryInterface"* nonnull %55) #12
  %61 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 47, i32 0
  %62 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %61, align 8
  %63 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 46, i32 0
  %66 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %65, align 8
  %67 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %66, %62
  br i1 %67, label %74, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.net::URLRequestThrottlerEntryInterface"* %62 to i64 (%"class.net::URLRequestThrottlerEntryInterface"*)***
  %70 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*)**, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*** %69, align 8
  %71 = getelementptr inbounds i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)** %70, i64 2
  %72 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)** %71, align 8
  %73 = tail call i64 %72(%"class.net::URLRequestThrottlerEntryInterface"* nonnull %62) #12
  br label %74

74:                                               ; preds = %68, %64, %53
  %75 = phi i64 [ 0, %64 ], [ 0, %53 ], [ %73, %68 ]
  %76 = icmp sgt i64 %60, %75
  %77 = select i1 %76, i64 %60, i64 %75
  %78 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  store i64 %77, i64* %78, align 8
  %79 = bitcast %"class.net::URLRequestThrottlerEntryInterface"* %55 to i64 (%"class.net::URLRequestThrottlerEntryInterface"*, %"class.base::TimeTicks"*)***
  %80 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*, %"class.base::TimeTicks"*)**, i64 (%"class.net::URLRequestThrottlerEntryInterface"*, %"class.base::TimeTicks"*)*** %79, align 8
  %81 = getelementptr inbounds i64 (%"class.net::URLRequestThrottlerEntryInterface"*, %"class.base::TimeTicks"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*, %"class.base::TimeTicks"*)** %80, i64 1
  %82 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*, %"class.base::TimeTicks"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*, %"class.base::TimeTicks"*)** %81, align 8
  %83 = call i64 %82(%"class.net::URLRequestThrottlerEntryInterface"* nonnull %55, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %113, label %85

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 11, i32 0
  %87 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %86, align 8
  %88 = bitcast %"class.base::SingleThreadTaskRunner"* %87 to %"class.base::TaskRunner"*
  %89 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %89) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 682) #12
  %90 = call i8* @_Znwm(i64 56) #13, !noalias !64
  %91 = bitcast i8* %90 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %91, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS4_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !64
  %92 = getelementptr inbounds i8, i8* %90, i64 32
  %93 = bitcast i8* %92 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*)* @_ZN3net14URLFetcherCore15StartURLRequestEv to i64), i64 0>, <2 x i64>* %93, align 8, !noalias !64
  %94 = getelementptr inbounds i8, i8* %90, i64 48
  %95 = bitcast i8* %94 to %"class.net::URLFetcherCore"**
  store %"class.net::URLFetcherCore"* %0, %"class.net::URLFetcherCore"** %95, align 8, !noalias !64
  %96 = icmp eq %"class.net::URLFetcherCore"* %0, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 1 monotonic, !noalias !64
  br label %100

100:                                              ; preds = %85, %97
  %101 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %90, i8** %101, align 8, !alias.scope !64
  %102 = icmp slt i64 %83, 0
  %103 = select i1 %102, i64 -9223372036854775808, i64 9223372036854775807
  %104 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %83, i64 1000) #12
  %105 = extractvalue { i64, i1 } %104, 1
  %106 = extractvalue { i64, i1 } %104, 0
  %107 = select i1 %105, i64 %103, i64 %106, !prof !69
  %108 = bitcast %"class.base::SingleThreadTaskRunner"* %87 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %109 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %108, align 8
  %110 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %109, align 8
  %111 = call zeroext i1 %110(%"class.base::TaskRunner"* %88, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4, i64 %107) #12
  %112 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %112) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %89) #12
  br label %114

113:                                              ; preds = %74, %48, %16, %8
  call void @_ZN3net14URLFetcherCore15StartURLRequestEv(%"class.net::URLFetcherCore"* %0)
  br label %114

114:                                              ; preds = %113, %100, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net14URLFetcherCore21GetBackoffReleaseTimeEv(%"class.net::URLFetcherCore"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 46, i32 0
  %3 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %2, align 8
  %4 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.net::URLRequestThrottlerEntryInterface"* %3 to i64 (%"class.net::URLRequestThrottlerEntryInterface"*)***
  %7 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*)**, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)** %7, i64 2
  %9 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)** %8, align 8
  %10 = tail call i64 %9(%"class.net::URLRequestThrottlerEntryInterface"* nonnull %3) #12
  %11 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 47, i32 0
  %12 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %11, align 8
  %13 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %12, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %5
  %15 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %2, align 8
  %16 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %15, %12
  br i1 %16, label %23, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.net::URLRequestThrottlerEntryInterface"* %12 to i64 (%"class.net::URLRequestThrottlerEntryInterface"*)***
  %19 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*)**, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)** %19, i64 2
  %21 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)** %20, align 8
  %22 = tail call i64 %21(%"class.net::URLRequestThrottlerEntryInterface"* nonnull %12) #12
  br label %23

23:                                               ; preds = %14, %5, %17
  %24 = phi i64 [ 0, %14 ], [ 0, %5 ], [ %22, %17 ]
  %25 = icmp sgt i64 %10, %24
  %26 = select i1 %25, i64 %10, i64 %24
  br label %27

27:                                               ; preds = %1, %23
  %28 = phi i64 [ %26, %23 ], [ 0, %1 ]
  ret i64 %28
}

declare i32 @_ZN3net10URLRequest15CancelWithErrorEi(%"class.net::URLRequest"*, i32) local_unnamed_addr #2

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore21OnCompletedURLRequestEN4base9TimeDeltaE(%"class.net::URLFetcherCore"* nocapture, i64) #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 9
  %4 = load %"class.net::URLFetcherDelegate"*, %"class.net::URLFetcherDelegate"** %3, align 8
  %5 = icmp eq %"class.net::URLFetcherDelegate"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 58, i32 0
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 4
  %9 = load %"class.net::URLFetcher"*, %"class.net::URLFetcher"** %8, align 8
  %10 = bitcast %"class.net::URLFetcherDelegate"* %4 to void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*)***
  %11 = load void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*)**, void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*)*** %10, align 8
  %12 = load void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*)*, void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*)** %11, align 8
  tail call void %12(%"class.net::URLFetcherDelegate"* nonnull %4, %"class.net::URLFetcher"* %9) #12
  br label %13

13:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore29InformDelegateFetchIsCompleteEv(%"class.net::URLFetcherCore"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 9
  %3 = load %"class.net::URLFetcherDelegate"*, %"class.net::URLFetcherDelegate"** %2, align 8
  %4 = icmp eq %"class.net::URLFetcherDelegate"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 4
  %7 = load %"class.net::URLFetcher"*, %"class.net::URLFetcher"** %6, align 8
  %8 = bitcast %"class.net::URLFetcherDelegate"* %3 to void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*)***
  %9 = load void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*)**, void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*)*** %8, align 8
  %10 = load void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*)*, void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*)** %9, align 8
  tail call void %10(%"class.net::URLFetcherDelegate"* nonnull %3, %"class.net::URLFetcher"* %7) #12
  br label %11

11:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore23RetryOrCompleteUrlFetchEv(%"class.net::URLFetcherCore"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 17
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 499
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, -139
  br i1 %12, label %13, label %57

13:                                               ; preds = %9, %1
  %14 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 55
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 46, i32 0
  %18 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %17, align 8
  %19 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %18, null
  br i1 %19, label %42, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.net::URLRequestThrottlerEntryInterface"* %18 to i64 (%"class.net::URLRequestThrottlerEntryInterface"*)***
  %22 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*)**, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*** %21, align 8
  %23 = getelementptr inbounds i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)** %22, i64 2
  %24 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)** %23, align 8
  %25 = tail call i64 %24(%"class.net::URLRequestThrottlerEntryInterface"* nonnull %18) #12
  %26 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 47, i32 0
  %27 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %26, align 8
  %28 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %27, null
  br i1 %28, label %38, label %29

29:                                               ; preds = %20
  %30 = load %"class.net::URLRequestThrottlerEntryInterface"*, %"class.net::URLRequestThrottlerEntryInterface"** %17, align 8
  %31 = icmp eq %"class.net::URLRequestThrottlerEntryInterface"* %30, %27
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.net::URLRequestThrottlerEntryInterface"* %27 to i64 (%"class.net::URLRequestThrottlerEntryInterface"*)***
  %34 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*)**, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*** %33, align 8
  %35 = getelementptr inbounds i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)** %34, i64 2
  %36 = load i64 (%"class.net::URLRequestThrottlerEntryInterface"*)*, i64 (%"class.net::URLRequestThrottlerEntryInterface"*)** %35, align 8
  %37 = tail call i64 %36(%"class.net::URLRequestThrottlerEntryInterface"* nonnull %27) #12
  br label %38

38:                                               ; preds = %32, %29, %20
  %39 = phi i64 [ 0, %29 ], [ 0, %20 ], [ %37, %32 ]
  %40 = icmp sgt i64 %25, %39
  %41 = select i1 %40, i64 %25, i64 %39
  br label %42

42:                                               ; preds = %13, %38
  %43 = phi i64 [ %41, %38 ], [ 0, %13 ]
  %44 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  %45 = sub nsw i64 %43, %44
  %46 = icmp sgt i64 %45, 0
  %47 = select i1 %46, i64 %45, i64 0
  %48 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 53
  %49 = load i8, i8* %48, align 2, !range !5
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %42
  %52 = load i32, i32* %14, align 4
  %53 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 56
  %54 = load i32, i32* %53, align 8
  %55 = icmp sgt i32 %52, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %51
  tail call void @_ZN3net14URLFetcherCore15StartOnIOThreadEv(%"class.net::URLFetcherCore"* %0)
  br label %131

57:                                               ; preds = %9, %51, %42
  %58 = phi i64 [ %47, %42 ], [ %47, %51 ], [ 0, %9 ]
  %59 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 8
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, -21
  br i1 %61, label %62, label %88

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 59
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 60
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %64, %66
  br i1 %67, label %68, label %88

68:                                               ; preds = %62
  %69 = add nsw i32 %64, 1
  store i32 %69, i32* %63, align 8
  %70 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 11, i32 0
  %71 = bitcast %"class.base::SingleThreadTaskRunner"** %70 to %"class.base::TaskRunner"**
  %72 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %71, align 8
  %73 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %73) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 791) #12
  %74 = call i8* @_Znwm(i64 56) #13, !noalias !70
  %75 = bitcast i8* %74 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %75, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS4_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !70
  %76 = getelementptr inbounds i8, i8* %74, i64 32
  %77 = bitcast i8* %76 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*)* @_ZN3net14URLFetcherCore15StartOnIOThreadEv to i64), i64 0>, <2 x i64>* %77, align 8, !noalias !70
  %78 = getelementptr inbounds i8, i8* %74, i64 48
  %79 = bitcast i8* %78 to %"class.net::URLFetcherCore"**
  store %"class.net::URLFetcherCore"* %0, %"class.net::URLFetcherCore"** %79, align 8, !noalias !70
  %80 = icmp eq %"class.net::URLFetcherCore"* %0, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %68
  %82 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 1 monotonic, !noalias !70
  br label %84

84:                                               ; preds = %68, %81
  %85 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %74, i8** %85, align 8, !alias.scope !70
  %86 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %72, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #12
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %87) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %73) #12
  br label %131

88:                                               ; preds = %62, %57
  %89 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 20
  %90 = bitcast %class.scoped_refptr.407* %89 to i64*
  %91 = getelementptr inbounds %class.scoped_refptr.407, %class.scoped_refptr.407* %89, i64 0, i32 0
  %92 = load %"class.net::URLRequestContextGetter"*, %"class.net::URLRequestContextGetter"** %91, align 8
  store i64 0, i64* %90, align 8
  %93 = icmp eq %"class.net::URLRequestContextGetter"* %92, null
  br i1 %93, label %102, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.net::URLRequestContextGetter", %"class.net::URLRequestContextGetter"* %92, i64 0, i32 1
  %96 = getelementptr inbounds %"class.base::RefCountedThreadSafe.408", %"class.base::RefCountedThreadSafe.408"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw sub i32* %96, i32 1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.base::RefCountedThreadSafe.408", %"class.base::RefCountedThreadSafe.408"* %95, i64 -2
  %101 = bitcast %"class.base::RefCountedThreadSafe.408"* %100 to %"class.net::URLRequestContextGetter"*
  tail call void @_ZNK3net23URLRequestContextGetter10OnDestructEv(%"class.net::URLRequestContextGetter"* %101) #12
  br label %102

102:                                              ; preds = %88, %94, %99
  %103 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  %104 = load i8, i8* %103, align 8, !range !5
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %107) #12
  store i8 0, i8* %103, align 8
  br label %108

108:                                              ; preds = %102, %106
  %109 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 22
  store i8* null, i8** %109, align 8
  %110 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 23, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %110) #12
  %111 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 10, i32 0
  %112 = bitcast %"class.base::SequencedTaskRunner"** %111 to %"class.base::TaskRunner"**
  %113 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %112, align 8
  %114 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 800) #12
  %115 = call i8* @_Znwm(i64 64) #13, !noalias !75
  %116 = bitcast i8* %115 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %116, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvNS_9TimeDeltaEEJ13scoped_refptrIS4_ES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvNS_9TimeDeltaEEJ13scoped_refptrIS3_ES4_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !75
  %117 = getelementptr inbounds i8, i8* %115, i64 32
  %118 = bitcast i8* %117 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLFetcherCore"*, i64)* @_ZN3net14URLFetcherCore21OnCompletedURLRequestEN4base9TimeDeltaE to i64), i64 0>, <2 x i64>* %118, align 8, !noalias !75
  %119 = getelementptr inbounds i8, i8* %115, i64 48
  %120 = bitcast i8* %119 to %"class.net::URLFetcherCore"**
  store %"class.net::URLFetcherCore"* %0, %"class.net::URLFetcherCore"** %120, align 8, !noalias !75
  %121 = icmp eq %"class.net::URLFetcherCore"* %0, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %108
  %123 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 1 monotonic, !noalias !75
  br label %125

125:                                              ; preds = %108, %122
  %126 = getelementptr inbounds i8, i8* %115, i64 56
  %127 = bitcast i8* %126 to i64*
  store i64 %58, i64* %127, align 8, !noalias !75
  %128 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %115, i8** %128, align 8, !alias.scope !75
  %129 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %113, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #12
  %130 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %130) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #12
  br label %131

131:                                              ; preds = %56, %125, %84
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3net23URLRequestContextGetter14RemoveObserverEPNS_31URLRequestContextGetterObserverE(%"class.net::URLRequestContextGetter"*, %"class.net::URLRequestContextGetterObserver"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net23ChunkedUploadDataStream6Writer10AppendDataEPKcib(%"class.net::ChunkedUploadDataStream::Writer"*, i8*, i32, i1 zeroext) local_unnamed_addr #2

declare i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore14DidWriteBufferE13scoped_refptrINS_17DrainableIOBufferEEi(%"class.net::URLFetcherCore"*, %"class.net::DrainableIOBuffer"*, i32) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.275", align 8
  %5 = icmp slt i32 %2, 0
  br i1 %5, label %6, label %18

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 50, i32 0, i32 0, i32 0
  %8 = load %"class.net::URLFetcherResponseWriter"*, %"class.net::URLFetcherResponseWriter"** %7, align 8
  %9 = tail call i8* @_Znwm(i64 40) #13, !noalias !80
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJiEEENS_12OnceCallbackIFvDpT_EEEvEUliE_JEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJiEEENS_12OnceCallbackIFvDpT_EEEvEUliE_JEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !80
  %11 = bitcast %"class.base::OnceCallback.275"* %4 to i8**
  store i8* %9, i8** %11, align 8, !alias.scope !80
  %12 = bitcast %"class.net::URLFetcherResponseWriter"* %8 to i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)***
  %13 = load i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)**, i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)*, i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)** %13, i64 4
  %15 = load i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)*, i32 (%"class.net::URLFetcherResponseWriter"*, i32, %"class.base::OnceCallback.275"*)** %14, align 8
  %16 = call i32 %15(%"class.net::URLFetcherResponseWriter"* %8, i32 %2, %"class.base::OnceCallback.275"* nonnull %4) #12
  %17 = getelementptr inbounds %"class.base::OnceCallback.275", %"class.base::OnceCallback.275"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #12
  call void @_ZN3net14URLFetcherCore30CancelRequestAndInformDelegateEi(%"class.net::URLFetcherCore"* %0, i32 %2)
  br label %46

18:                                               ; preds = %3
  tail call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %1, i32 %2) #12
  %19 = icmp eq %"class.net::DrainableIOBuffer"* %1, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  br label %23

23:                                               ; preds = %18, %20
  %24 = tail call i32 @_ZN3net14URLFetcherCore11WriteBufferE13scoped_refptrINS_17DrainableIOBufferEE(%"class.net::URLFetcherCore"* %0, %"class.net::DrainableIOBuffer"* %1)
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %46, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %28 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %27, align 8
  %29 = icmp eq %"class.net::URLRequest"* %28, null
  br i1 %29, label %46, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 7
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 2
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 19, i32 0
  %36 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %35, align 8
  %37 = tail call i32 @_ZN3net10URLRequest4ReadEPNS_8IOBufferEi(%"class.net::URLRequest"* nonnull %28, %"class.net::IOBuffer"* %36, i32 4096) #12
  %38 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %27, align 8
  br label %39

39:                                               ; preds = %30, %34
  %40 = phi %"class.net::URLRequest"* [ %38, %34 ], [ %28, %30 ]
  %41 = phi i32 [ %37, %34 ], [ 0, %30 ]
  %42 = bitcast %"class.net::URLFetcherCore"* %0 to void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)***
  %43 = load void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)**, void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)*, void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)** %43, i64 6
  %45 = load void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)*, void (%"class.net::URLFetcherCore"*, %"class.net::URLRequest"*, i32)** %44, align 8
  tail call void %45(%"class.net::URLFetcherCore"* %0, %"class.net::URLRequest"* %40, i32 %41) #12
  br label %46

46:                                               ; preds = %39, %26, %23, %6
  %47 = icmp eq %"class.net::DrainableIOBuffer"* %1, null
  br i1 %47, label %60, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %1, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe.406", %"class.base::RefCountedThreadSafe.406"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %60

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.base::RefCountedThreadSafe.406", %"class.base::RefCountedThreadSafe.406"* %49, i64 -2
  %55 = bitcast %"class.base::RefCountedThreadSafe.406"* %54 to %"class.net::IOBuffer"*
  %56 = bitcast %"class.base::RefCountedThreadSafe.406"* %54 to void (%"class.net::IOBuffer"*)***
  %57 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %57, i64 1
  %59 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %58, align 8
  call void %59(%"class.net::IOBuffer"* nonnull %55) #12
  br label %60

60:                                               ; preds = %46, %48, %53
  ret void
}

declare void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"*, i32) local_unnamed_addr #2

declare { i64, i64 } @_ZNK3net10URLRequest17GetUploadProgressEv(%"class.net::URLRequest"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore46InformDelegateUploadProgressInDelegateSequenceEll(%"class.net::URLFetcherCore"* nocapture readonly, i64, i64) #0 align 2 {
  %4 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 9
  %5 = load %"class.net::URLFetcherDelegate"*, %"class.net::URLFetcherDelegate"** %4, align 8
  %6 = icmp eq %"class.net::URLFetcherDelegate"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 4
  %9 = load %"class.net::URLFetcher"*, %"class.net::URLFetcher"** %8, align 8
  %10 = bitcast %"class.net::URLFetcherDelegate"* %5 to void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64)***
  %11 = load void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64)**, void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64)*, void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64)** %11, i64 2
  %13 = load void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64)*, void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64)** %12, align 8
  tail call void %13(%"class.net::URLFetcherDelegate"* nonnull %5, %"class.net::URLFetcher"* %9, i64 %1, i64 %2) #12
  br label %14

14:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14URLFetcherCore48InformDelegateDownloadProgressInDelegateSequenceElll(%"class.net::URLFetcherCore"* nocapture readonly, i64, i64, i64) #0 align 2 {
  %5 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 9
  %6 = load %"class.net::URLFetcherDelegate"*, %"class.net::URLFetcherDelegate"** %5, align 8
  %7 = icmp eq %"class.net::URLFetcherDelegate"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %0, i64 0, i32 4
  %10 = load %"class.net::URLFetcher"*, %"class.net::URLFetcher"** %9, align 8
  %11 = bitcast %"class.net::URLFetcherDelegate"* %6 to void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64, i64)***
  %12 = load void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64, i64)**, void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64, i64)*, void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64, i64)** %12, i64 1
  %14 = load void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64, i64)*, void (%"class.net::URLFetcherDelegate"*, %"class.net::URLFetcher"*, i64, i64, i64)** %13, align 8
  tail call void %14(%"class.net::URLFetcherDelegate"* nonnull %6, %"class.net::URLFetcher"* %10, i64 %1, i64 %2, i64 %3) #12
  br label %15

15:                                               ; preds = %4, %8
  ret void
}

declare i32 @_ZN3net10URLRequest8Delegate11OnConnectedEPS0_RKNS_13TransportInfoEN4base12OnceCallbackIFviEEE(%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"struct.net::TransportInfo"*, %"class.base::OnceCallback.275"*) unnamed_addr #2

declare void @_ZN3net10URLRequest8Delegate14OnAuthRequiredEPS0_RKNS_17AuthChallengeInfoE(%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"class.net::AuthChallengeInfo"* dereferenceable(184)) unnamed_addr #2

declare void @_ZN3net10URLRequest8Delegate21OnSSLCertificateErrorEPS0_iRKNS_7SSLInfoEb(%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, i32, %"class.net::SSLInfo"* dereferenceable(128), i1 zeroext) unnamed_addr #2

declare void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"*) unnamed_addr #2

declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN3net14URLFetcherCoreENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPN3net14URLFetcherCoreENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN3net14URLFetcherCoreENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !5
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !5
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !5
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !5
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !5
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !5
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !5
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !5
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !5
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !5
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !5
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !5
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !5
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZNK3net23URLRequestContextGetter10OnDestructEv(%"class.net::URLRequestContextGetter"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net23ChunkedUploadDataStream6WriterD1Ev(%"class.net::ChunkedUploadDataStream::Writer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS4_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.net::URLFetcherCore"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::URLFetcherCore"*)**
  %21 = load void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.net::URLFetcherCore"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::URLFetcherCore"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.net::URLFetcherCore"* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvvEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.net::URLFetcherCore"**
  %6 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %5, align 8
  %7 = icmp eq %"class.net::URLFetcherCore"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.net::URLFetcherCore"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.net::URLFetcherCore"*)***
  %17 = load void (%"class.net::URLFetcherCore"*)**, void (%"class.net::URLFetcherCore"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %17, i64 8
  %19 = load void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %18, align 8
  tail call void %19(%"class.net::URLFetcherCore"* nonnull %15) #12
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS4_ENS3_5ErrorEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i32*
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  %14 = bitcast i8* %13 to %"class.net::URLFetcherCore"*
  %15 = and i64 %7, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %7, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.net::URLFetcherCore"*, i32)**
  %23 = load void (%"class.net::URLFetcherCore"*, i32)*, void (%"class.net::URLFetcherCore"*, i32)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %7 to void (%"class.net::URLFetcherCore"*, i32)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.net::URLFetcherCore"*, i32)* [ %23, %17 ], [ %25, %24 ]
  %28 = load i32, i32* %5, align 4
  tail call void %27(%"class.net::URLFetcherCore"* %14, i32 %28) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS3_ENS2_5ErrorEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.net::URLFetcherCore"**
  %6 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %5, align 8
  %7 = icmp eq %"class.net::URLFetcherCore"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.net::URLFetcherCore"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.net::URLFetcherCore"*)***
  %17 = load void (%"class.net::URLFetcherCore"*)**, void (%"class.net::URLFetcherCore"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %17, i64 8
  %19 = load void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %18, align 8
  tail call void %19(%"class.net::URLFetcherCore"* nonnull %15) #12
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbEJ13scoped_refptrIS4_ESB_bEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::basic_string"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 4
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i8*
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %12
  %16 = bitcast i8* %15 to %"class.net::URLFetcherCore"*
  %17 = and i64 %9, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %9, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.net::URLFetcherCore"*, %"class.std::__1::basic_string"*, i1)**
  %25 = load void (%"class.net::URLFetcherCore"*, %"class.std::__1::basic_string"*, i1)*, void (%"class.net::URLFetcherCore"*, %"class.std::__1::basic_string"*, i1)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %9 to void (%"class.net::URLFetcherCore"*, %"class.std::__1::basic_string"*, i1)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.net::URLFetcherCore"*, %"class.std::__1::basic_string"*, i1)* [ %25, %19 ], [ %27, %26 ]
  %30 = load i8, i8* %7, align 1, !range !5
  %31 = icmp ne i8 %30, 0
  tail call void %29(%"class.net::URLFetcherCore"* %16, %"class.std::__1::basic_string"* dereferenceable(24) %5, i1 zeroext %31) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbEJ13scoped_refptrIS3_ESA_bEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #13
  br label %12

12:                                               ; preds = %9, %3
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %"class.net::URLFetcherCore"**
  %15 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %14, align 8
  %16 = icmp eq %"class.net::URLFetcherCore"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %15, i64 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %29

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 -2
  %24 = bitcast %"class.base::RefCountedThreadSafe"* %23 to %"class.net::URLFetcherCore"*
  %25 = bitcast %"class.base::RefCountedThreadSafe"* %23 to void (%"class.net::URLFetcherCore"*)***
  %26 = load void (%"class.net::URLFetcherCore"*)**, void (%"class.net::URLFetcherCore"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %26, i64 8
  %28 = load void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %27, align 8
  tail call void %28(%"class.net::URLFetcherCore"* nonnull %24) #12
  br label %29

29:                                               ; preds = %12, %17, %22
  %30 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %29, %1
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"*, i64) unnamed_addr #2

declare void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"*, %"class.net::IOBuffer"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS4_EEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = bitcast void ()** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  %13 = bitcast i8* %12 to %"class.net::URLFetcherCore"*
  %14 = and i64 %6, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %6, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::URLFetcherCore"*, i32)**
  %22 = load void (%"class.net::URLFetcherCore"*, i32)*, void (%"class.net::URLFetcherCore"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %6 to void (%"class.net::URLFetcherCore"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::URLFetcherCore"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.net::URLFetcherCore"* %13, i32 %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFviEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.net::URLFetcherCore"**
  %6 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %5, align 8
  %7 = icmp eq %"class.net::URLFetcherCore"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.net::URLFetcherCore"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.net::URLFetcherCore"*)***
  %17 = load void (%"class.net::URLFetcherCore"*)**, void (%"class.net::URLFetcherCore"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %17, i64 8
  %19 = load void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %18, align 8
  tail call void %19(%"class.net::URLFetcherCore"* nonnull %15) #12
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12LazyInstanceIN3net14URLFetcherCore8RegistryENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %"class.net::URLFetcherCore::Registry"*
  %5 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %4, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.net::URLFetcherCore::Registry", %"class.net::URLFetcherCore::Registry"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  tail call void @_ZNSt3__16__treeIPN3net14URLFetcherCoreENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %5, %"class.std::__1::__tree_node"* %8) #12
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

declare void @_ZN3net23ChunkedUploadDataStreamC1El(%"class.net::ChunkedUploadDataStream"*, i64) unnamed_addr #2

declare void @_ZN3net22URLFetcherStringWriterC1Ev(%"class.net::URLFetcherStringWriter"*) unnamed_addr #2

declare void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.net::URLFetcherCore"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::URLFetcherCore"*)**
  %21 = load void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.net::URLFetcherCore"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::URLFetcherCore"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.net::URLFetcherCore"* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvNS_9TimeDeltaEEJ13scoped_refptrIS4_ES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.net::URLFetcherCore"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::URLFetcherCore"*, i64)**
  %21 = load void (%"class.net::URLFetcherCore"*, i64)*, void (%"class.net::URLFetcherCore"*, i64)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.net::URLFetcherCore"*, i64)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::URLFetcherCore"*, i64)* [ %21, %15 ], [ %23, %22 ]
  %26 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %26 to i64*
  %28 = load i64, i64* %27, align 8
  tail call void %25(%"class.net::URLFetcherCore"* %12, i64 %28) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvNS_9TimeDeltaEEJ13scoped_refptrIS3_ES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.net::URLFetcherCore"**
  %6 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %5, align 8
  %7 = icmp eq %"class.net::URLFetcherCore"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.net::URLFetcherCore"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.net::URLFetcherCore"*)***
  %17 = load void (%"class.net::URLFetcherCore"*)**, void (%"class.net::URLFetcherCore"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %17, i64 8
  %19 = load void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %18, align 8
  tail call void %19(%"class.net::URLFetcherCore"* nonnull %15) #12
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFv13scoped_refptrINS3_17DrainableIOBufferEEiEJS5_IS4_ES7_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = bitcast void ()** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  %13 = bitcast i8* %12 to %"class.net::URLFetcherCore"*
  %14 = and i64 %6, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %6, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::URLFetcherCore"*, %"class.net::DrainableIOBuffer"*, i32)**
  %22 = load void (%"class.net::URLFetcherCore"*, %"class.net::DrainableIOBuffer"*, i32)*, void (%"class.net::URLFetcherCore"*, %"class.net::DrainableIOBuffer"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %6 to void (%"class.net::URLFetcherCore"*, %"class.net::DrainableIOBuffer"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::URLFetcherCore"*, %"class.net::DrainableIOBuffer"*, i32)* [ %22, %16 ], [ %24, %23 ]
  %27 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %28 = bitcast void (%"class.base::internal::BindStateBase"*)** %27 to %"class.net::DrainableIOBuffer"**
  %29 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %28, align 8
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %28, align 8
  tail call void %26(%"class.net::URLFetcherCore"* %13, %"class.net::DrainableIOBuffer"* %29, i32 %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFv13scoped_refptrINS2_17DrainableIOBufferEEiEJS4_IS3_ES6_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %39, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.net::DrainableIOBuffer"**
  %6 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %5, align 8
  %7 = icmp eq %"class.net::DrainableIOBuffer"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe.406", %"class.base::RefCountedThreadSafe.406"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.406", %"class.base::RefCountedThreadSafe.406"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe.406"* %14 to %"class.net::IOBuffer"*
  %16 = bitcast %"class.base::RefCountedThreadSafe.406"* %14 to void (%"class.net::IOBuffer"*)***
  %17 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %17, i64 1
  %19 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %18, align 8
  tail call void %19(%"class.net::IOBuffer"* nonnull %15) #12
  br label %20

20:                                               ; preds = %13, %8, %3
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %22 = bitcast void (%"class.base::internal::BindStateBase"*)** %21 to %"class.net::URLFetcherCore"**
  %23 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %22, align 8
  %24 = icmp eq %"class.net::URLFetcherCore"* %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %23, i64 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %37

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.net::URLFetcherCore"*
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %31 to void (%"class.net::URLFetcherCore"*)***
  %34 = load void (%"class.net::URLFetcherCore"*)**, void (%"class.net::URLFetcherCore"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %34, i64 8
  %36 = load void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %35, align 8
  tail call void %36(%"class.net::URLFetcherCore"* nonnull %32) #12
  br label %37

37:                                               ; preds = %20, %25, %30
  %38 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %37, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJiEEENS_12OnceCallbackIFvDpT_EEEvEUliE_JEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJiEEENS_12OnceCallbackIFvDpT_EEEvEUliE_JEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvllEJ13scoped_refptrIS4_EllEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i64*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i64*
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %12
  %16 = bitcast i8* %15 to %"class.net::URLFetcherCore"*
  %17 = and i64 %9, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %9, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.net::URLFetcherCore"*, i64, i64)**
  %25 = load void (%"class.net::URLFetcherCore"*, i64, i64)*, void (%"class.net::URLFetcherCore"*, i64, i64)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %9 to void (%"class.net::URLFetcherCore"*, i64, i64)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.net::URLFetcherCore"*, i64, i64)* [ %25, %19 ], [ %27, %26 ]
  %30 = load i64, i64* %5, align 8
  %31 = load i64, i64* %7, align 8
  tail call void %29(%"class.net::URLFetcherCore"* %16, i64 %30, i64 %31) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvllEJ13scoped_refptrIS3_EllEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.net::URLFetcherCore"**
  %6 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %5, align 8
  %7 = icmp eq %"class.net::URLFetcherCore"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.net::URLFetcherCore"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.net::URLFetcherCore"*)***
  %17 = load void (%"class.net::URLFetcherCore"*)**, void (%"class.net::URLFetcherCore"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %17, i64 8
  %19 = load void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %18, align 8
  tail call void %19(%"class.net::URLFetcherCore"* nonnull %15) #12
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14URLFetcherCoreEFvlllEJ13scoped_refptrIS4_ElllEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i64*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i64*
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 3
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i64*
  %10 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %14
  %18 = bitcast i8* %17 to %"class.net::URLFetcherCore"*
  %19 = and i64 %11, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %1
  %22 = bitcast i8* %17 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = add i64 %11, -1
  %25 = getelementptr i8, i8* %23, i64 %24
  %26 = bitcast i8* %25 to void (%"class.net::URLFetcherCore"*, i64, i64, i64)**
  %27 = load void (%"class.net::URLFetcherCore"*, i64, i64, i64)*, void (%"class.net::URLFetcherCore"*, i64, i64, i64)** %26, align 8
  br label %30

28:                                               ; preds = %1
  %29 = inttoptr i64 %11 to void (%"class.net::URLFetcherCore"*, i64, i64, i64)*
  br label %30

30:                                               ; preds = %21, %28
  %31 = phi void (%"class.net::URLFetcherCore"*, i64, i64, i64)* [ %27, %21 ], [ %29, %28 ]
  %32 = load i64, i64* %5, align 8
  %33 = load i64, i64* %7, align 8
  %34 = load i64, i64* %9, align 8
  tail call void %31(%"class.net::URLFetcherCore"* %18, i64 %32, i64 %33, i64 %34) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14URLFetcherCoreEFvlllEJ13scoped_refptrIS3_ElllEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.net::URLFetcherCore"**
  %6 = load %"class.net::URLFetcherCore"*, %"class.net::URLFetcherCore"** %5, align 8
  %7 = icmp eq %"class.net::URLFetcherCore"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::URLFetcherCore", %"class.net::URLFetcherCore"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.net::URLFetcherCore"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.net::URLFetcherCore"*)***
  %17 = load void (%"class.net::URLFetcherCore"*)**, void (%"class.net::URLFetcherCore"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %17, i64 8
  %19 = load void (%"class.net::URLFetcherCore"*)*, void (%"class.net::URLFetcherCore"*)** %18, align 8
  tail call void %19(%"class.net::URLFetcherCore"* nonnull %15) #12
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeIPN3net14URLFetcherCoreENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeIPN3net14URLFetcherCoreENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!5 = !{i8 0, i8 2}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvvEJPS4_EEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvvEJPS4_EEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFviEJPS4_EEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFviEJPS4_EEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFviEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFviEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFviEJPS4_NS3_5ErrorEEEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFviEJPS4_NS3_5ErrorEEEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFviEJPS2_NS1_5ErrorEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFviEJPS2_NS1_5ErrorEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!21 = !{!22, !24}
!22 = distinct !{!22, !23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbEJPS4_SD_RbEEEDcOT0_DpOT1_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbEJPS4_SD_RbEEEDcOT0_DpOT1_"}
!24 = distinct !{!24, !25, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbEJPS2_SB_RbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbEJPS2_SB_RbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!26 = !{!27, !29}
!27 = distinct !{!27, !28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvvEJPS4_EEEDcOT0_DpOT1_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvvEJPS4_EEEDcOT0_DpOT1_"}
!29 = distinct !{!29, !30, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!31 = !{!32, !34}
!32 = distinct !{!32, !33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFviEJPS4_EEEDcOT0_DpOT1_: argument 0"}
!33 = distinct !{!33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFviEJPS4_EEEDcOT0_DpOT1_"}
!34 = distinct !{!34, !35, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFviEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!35 = distinct !{!35, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFviEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!36 = !{!37, !39}
!37 = distinct !{!37, !38, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvlllEJPS4_RlS8_lEEEDcOT0_DpOT1_: argument 0"}
!38 = distinct !{!38, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvlllEJPS4_RlS8_lEEEDcOT0_DpOT1_"}
!39 = distinct !{!39, !40, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvlllEJPS2_RlS6_lEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!40 = distinct !{!40, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvlllEJPS2_RlS6_lEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!41 = !{!42, !44}
!42 = distinct !{!42, !43, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFv13scoped_refptrINS3_17DrainableIOBufferEEiEJPS4_RS7_EEEDcOT0_DpOT1_: argument 0"}
!43 = distinct !{!43, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFv13scoped_refptrINS3_17DrainableIOBufferEEiEJPS4_RS7_EEEDcOT0_DpOT1_"}
!44 = distinct !{!44, !45, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFv13scoped_refptrINS1_17DrainableIOBufferEEiEJPS2_RS5_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!45 = distinct !{!45, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFv13scoped_refptrINS1_17DrainableIOBufferEEiEJPS2_RS5_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!46 = !{!47, !49}
!47 = distinct !{!47, !48, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvvEJPS4_EEEDcOT0_DpOT1_: argument 0"}
!48 = distinct !{!48, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvvEJPS4_EEEDcOT0_DpOT1_"}
!49 = distinct !{!49, !50, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!50 = distinct !{!50, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__16__treeIPN3net14URLFetcherCoreENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__16__treeIPN3net14URLFetcherCoreENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!54 = !{!55, !57}
!55 = distinct !{!55, !56, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN3net14URLFetcherCoreEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!56 = distinct !{!56, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN3net14URLFetcherCoreEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!57 = distinct !{!57, !58, !"_ZN4base13BindRepeatingIRMN3net14URLFetcherCoreEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!58 = distinct !{!58, !"_ZN4base13BindRepeatingIRMN3net14URLFetcherCoreEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!59 = !{!60, !62}
!60 = distinct !{!60, !61, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvllEJPS4_RlS8_EEEDcOT0_DpOT1_: argument 0"}
!61 = distinct !{!61, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvllEJPS4_RlS8_EEEDcOT0_DpOT1_"}
!62 = distinct !{!62, !63, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvllEJPS2_RlS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!63 = distinct !{!63, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvllEJPS2_RlS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!64 = !{!65, !67}
!65 = distinct !{!65, !66, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvvEJPS4_EEEDcOT0_DpOT1_: argument 0"}
!66 = distinct !{!66, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvvEJPS4_EEEDcOT0_DpOT1_"}
!67 = distinct !{!67, !68, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!68 = distinct !{!68, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!69 = !{!"branch_weights", i32 1, i32 2000}
!70 = !{!71, !73}
!71 = distinct !{!71, !72, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvvEJPS4_EEEDcOT0_DpOT1_: argument 0"}
!72 = distinct !{!72, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvvEJPS4_EEEDcOT0_DpOT1_"}
!73 = distinct !{!73, !74, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!74 = distinct !{!74, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvvEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!75 = !{!76, !78}
!76 = distinct !{!76, !77, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvNS_9TimeDeltaEEJPS4_RS5_EEEDcOT0_DpOT1_: argument 0"}
!77 = distinct !{!77, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14URLFetcherCoreEFvNS_9TimeDeltaEEJPS4_RS5_EEEDcOT0_DpOT1_"}
!78 = distinct !{!78, !79, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvNS_9TimeDeltaEEJPS2_RS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!79 = distinct !{!79, !"_ZN4base8BindOnceIMN3net14URLFetcherCoreEFvNS_9TimeDeltaEEJPS2_RS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!80 = !{!81, !83, !85, !87}
!81 = distinct !{!81, !82, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJiEEENS2_IFvDpT_EEEvEUliE_JEEEDcOT0_DpOT1_: argument 0"}
!82 = distinct !{!82, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJiEEENS2_IFvDpT_EEEvEUliE_JEEEDcOT0_DpOT1_"}
!83 = distinct !{!83, !84, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJiEEENS_12OnceCallbackIFvDpT_EEEvEUliE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!84 = distinct !{!84, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJiEEENS_12OnceCallbackIFvDpT_EEEvEUliE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!85 = distinct !{!85, !86, !"_ZN4base9DoNothing4OnceIJiEEENS_12OnceCallbackIFvDpT_EEEv: argument 0"}
!86 = distinct !{!86, !"_ZN4base9DoNothing4OnceIJiEEENS_12OnceCallbackIFvDpT_EEEv"}
!87 = distinct !{!87, !88, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJiEEEv: argument 0"}
!88 = distinct !{!88, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJiEEEv"}
