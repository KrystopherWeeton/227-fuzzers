; ModuleID = '../../third_party/boringssl/src/ssl/ssl_aead_ctx.cc'
source_filename = "../../third_party/boringssl/src/ssl/ssl_aead_ctx.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%"class.bssl::Span" = type { i8*, i64 }
%"class.bssl::Span.1" = type { i8*, i64 }

@.str = private unnamed_addr constant [52 x i8] c"../../third_party/boringssl/src/ssl/ssl_aead_ctx.cc\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"../../third_party/boringssl/src/ssl/internal.h\00", align 1

@_ZN4bssl14SSLAEADContextC1EtbPK13ssl_cipher_st = hidden unnamed_addr alias void (%"class.bssl::SSLAEADContext"*, i16, i1, %struct.ssl_cipher_st*), void (%"class.bssl::SSLAEADContext"*, i16, i1, %struct.ssl_cipher_st*)* @_ZN4bssl14SSLAEADContextC2EtbPK13ssl_cipher_st
@_ZN4bssl14SSLAEADContextD1Ev = hidden unnamed_addr alias void (%"class.bssl::SSLAEADContext"*), void (%"class.bssl::SSLAEADContext"*)* @_ZN4bssl14SSLAEADContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl14SSLAEADContextC2EtbPK13ssl_cipher_st(%"class.bssl::SSLAEADContext"*, i16 zeroext, i1 zeroext, %struct.ssl_cipher_st*) unnamed_addr #0 align 2 {
  %5 = zext i1 %2 to i8
  %6 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 0
  store %struct.ssl_cipher_st* %3, %struct.ssl_cipher_st** %6, align 8
  %7 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 1, i32 0
  tail call void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st* %7) #5
  %8 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 3
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 4
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 5
  store i16 %1, i16* %10, align 2
  %11 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 6
  store i8 %5, i8* %11, align 8
  %12 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, -32
  store i8 %14, i8* %12, align 1
  %15 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 2, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 0, i64 12, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl14SSLAEADContextD2Ev(%"class.bssl::SSLAEADContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 1, i32 0
  tail call void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.bssl::SSLAEADContext"* @_ZN4bssl14SSLAEADContext16CreateNullCipherEb(i1 zeroext) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @OPENSSL_malloc(i64 632) #5
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 196) #5
  br label %20

5:                                                ; preds = %1
  %6 = zext i1 %0 to i8
  %7 = bitcast i8* %2 to %"class.bssl::SSLAEADContext"*
  %8 = bitcast i8* %2 to %struct.ssl_cipher_st**
  store %struct.ssl_cipher_st* null, %struct.ssl_cipher_st** %8, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to %struct.evp_aead_ctx_st*
  tail call void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st* %10) #5
  %11 = getelementptr inbounds i8, i8* %2, i64 620
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds i8, i8* %2, i64 621
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds i8, i8* %2, i64 622
  %14 = bitcast i8* %13 to i16*
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds i8, i8* %2, i64 624
  store i8 %6, i8* %15, align 8
  %16 = getelementptr inbounds i8, i8* %2, i64 625
  %17 = load i8, i8* %16, align 1
  %18 = and i8 %17, -32
  store i8 %18, i8* %16, align 1
  %19 = getelementptr inbounds i8, i8* %2, i64 608
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 0, i64 12, i1 false) #5
  br label %20

20:                                               ; preds = %4, %5
  %21 = phi %"class.bssl::SSLAEADContext"* [ null, %4 ], [ %7, %5 ]
  ret %"class.bssl::SSLAEADContext"* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.bssl::SSLAEADContext"* @_ZN4bssl14SSLAEADContext6CreateE20evp_aead_direction_ttbPK13ssl_cipher_stNS_4SpanIKhEES7_S7_(i32, i16 zeroext, i1 zeroext, %struct.ssl_cipher_st*, i8*, i64, %"class.bssl::Span"* nocapture readonly byval(%"class.bssl::Span") align 8, %"class.bssl::Span"* nocapture readonly byval(%"class.bssl::Span") align 8) local_unnamed_addr #0 align 2 {
  %9 = alloca %struct.evp_aead_st*, align 8
  %10 = alloca i16, align 2
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca [80 x i8], align 16
  %14 = zext i1 %2 to i8
  %15 = ptrtoint %struct.ssl_cipher_st* %3 to i64
  %16 = bitcast %struct.evp_aead_st** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  store %struct.evp_aead_st* inttoptr (i64 -6148914691236517206 to %struct.evp_aead_st*), %struct.evp_aead_st** %9, align 8
  %17 = bitcast i16* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %17) #5
  store i16 -21846, i16* %10, align 2
  %18 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #5
  store i64 -6148914691236517206, i64* %11, align 8
  %19 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #5
  store i64 -6148914691236517206, i64* %12, align 8
  %20 = call zeroext i1 @_ZN4bssl30ssl_protocol_version_from_wireEPtt(i16* nonnull %10, i16 zeroext %1) #5
  br i1 %20, label %21, label %34

21:                                               ; preds = %8
  %22 = load i16, i16* %10, align 2
  %23 = call zeroext i1 @_ZN4bssl23ssl_cipher_get_evp_aeadEPPK11evp_aead_stPmS4_PK13ssl_cipher_sttb(%struct.evp_aead_st** nonnull %9, i64* nonnull %11, i64* nonnull %12, %struct.ssl_cipher_st* %3, i16 zeroext %22, i1 zeroext %2) #5
  br i1 %23, label %24, label %34

24:                                               ; preds = %21
  %25 = load i64, i64* %12, align 8
  %26 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %7, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  %30 = load i64, i64* %11, align 8
  %31 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %6, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %30, %32
  br i1 %33, label %35, label %34

34:                                               ; preds = %29, %24, %21, %8
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 70) #5
  br label %122

35:                                               ; preds = %29
  %36 = getelementptr inbounds [80 x i8], [80 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %36) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 -86, i64 80, i1 false)
  %37 = icmp eq i64 %30, 0
  br i1 %37, label %55, label %38

38:                                               ; preds = %35
  %39 = add i64 %25, %5
  %40 = add i64 %39, %30
  %41 = icmp ugt i64 %40, 80
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 80) #5
  br label %120

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %6, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %36, i8* align 1 %45, i64 %30, i1 false) #5
  %46 = getelementptr inbounds [80 x i8], [80 x i8]* %13, i64 0, i64 %30
  %47 = icmp eq i64 %5, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %43
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %4, i64 %5, i1 false) #5
  br label %49

49:                                               ; preds = %43, %48
  %50 = icmp eq i64 %25, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %7, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds i8, i8* %46, i64 %5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %53, i64 %25, i1 false) #5
  br label %55

55:                                               ; preds = %51, %49, %35
  %56 = phi i8* [ %4, %35 ], [ %36, %49 ], [ %36, %51 ]
  %57 = phi i64 [ %5, %35 ], [ %40, %49 ], [ %40, %51 ]
  %58 = call i8* @OPENSSL_malloc(i64 632) #5
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %61

60:                                               ; preds = %55
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 196) #5
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 94) #5
  br label %120

61:                                               ; preds = %55
  %62 = bitcast i8* %58 to i64*
  store i64 %15, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %58, i64 8
  %64 = bitcast i8* %63 to %struct.evp_aead_ctx_st*
  call void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st* %64) #5
  %65 = getelementptr inbounds i8, i8* %58, i64 620
  store i8 0, i8* %65, align 4
  %66 = getelementptr inbounds i8, i8* %58, i64 621
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds i8, i8* %58, i64 622
  %68 = bitcast i8* %67 to i16*
  store i16 %1, i16* %68, align 2
  %69 = getelementptr inbounds i8, i8* %58, i64 624
  store i8 %14, i8* %69, align 8
  %70 = getelementptr inbounds i8, i8* %58, i64 625
  %71 = load i8, i8* %70, align 1
  %72 = and i8 %71, -32
  store i8 %72, i8* %70, align 1
  %73 = getelementptr inbounds i8, i8* %58, i64 608
  call void @llvm.memset.p0i8.i64(i8* align 1 %73, i8 0, i64 12, i1 false) #5
  %74 = ptrtoint i8* %58 to i64
  %75 = load %struct.evp_aead_st*, %struct.evp_aead_st** %9, align 8
  %76 = call i32 @EVP_AEAD_CTX_init_with_direction(%struct.evp_aead_ctx_st* %64, %struct.evp_aead_st* %75, i8* %56, i64 %57, i64 0, i32 %0) #5
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %117, label %78

78:                                               ; preds = %61
  %79 = load %struct.evp_aead_st*, %struct.evp_aead_st** %9, align 8
  %80 = call i64 @EVP_AEAD_nonce_length(%struct.evp_aead_st* %79) #5
  %81 = trunc i64 %80 to i8
  store i8 %81, i8* %66, align 1
  br i1 %37, label %82, label %114

82:                                               ; preds = %78
  %83 = icmp eq i64 %25, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %7, i64 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %73, i8* align 1 %86, i64 %25, i1 false) #5
  br label %87

87:                                               ; preds = %82, %84
  %88 = trunc i64 %25 to i8
  store i8 %88, i8* %65, align 4
  %89 = getelementptr inbounds %struct.ssl_cipher_st, %struct.ssl_cipher_st* %3, i64 0, i32 5
  %90 = load i32, i32* %89, align 4
  %91 = and i32 %90, 64
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %87
  %94 = load i8, i8* %70, align 1
  %95 = or i8 %94, 4
  store i8 %95, i8* %70, align 1
  br label %99

96:                                               ; preds = %87
  %97 = load i8, i8* %66, align 1
  %98 = sub i8 %97, %88
  br label %99

99:                                               ; preds = %96, %93
  %100 = phi i8 [ 8, %93 ], [ %98, %96 ]
  store i8 %100, i8* %66, align 1
  %101 = load i32, i32* %89, align 4
  %102 = and i32 %101, 24
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %99
  %105 = load i8, i8* %70, align 1
  %106 = or i8 %105, 1
  store i8 %106, i8* %70, align 1
  br label %107

107:                                              ; preds = %99, %104
  %108 = load i16, i16* %10, align 2
  %109 = icmp ugt i16 %108, 771
  br i1 %109, label %110, label %120

110:                                              ; preds = %107
  %111 = load i8, i8* %70, align 1
  store i8 8, i8* %66, align 1
  %112 = and i8 %111, -22
  %113 = or i8 %112, 20
  store i8 %113, i8* %70, align 1
  br label %120

114:                                              ; preds = %78
  %115 = load i8, i8* %70, align 1
  %116 = or i8 %115, 11
  store i8 %116, i8* %70, align 1
  br label %120

117:                                              ; preds = %61
  %118 = getelementptr inbounds i8, i8* %58, i64 8
  %119 = bitcast i8* %118 to %struct.evp_aead_ctx_st*
  call void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st* %119) #5
  call void @OPENSSL_free(i8* nonnull %58) #5
  br label %120

120:                                              ; preds = %60, %114, %110, %107, %117, %42
  %121 = phi i64 [ 0, %42 ], [ 0, %117 ], [ %74, %107 ], [ %74, %110 ], [ %74, %114 ], [ 0, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %36) #5
  br label %122

122:                                              ; preds = %120, %34
  %123 = phi i64 [ %121, %120 ], [ 0, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #5
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %17) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  %124 = inttoptr i64 %123 to %"class.bssl::SSLAEADContext"*
  ret %"class.bssl::SSLAEADContext"* %124
}

declare zeroext i1 @_ZN4bssl30ssl_protocol_version_from_wireEPtt(i16*, i16 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl23ssl_cipher_get_evp_aeadEPPK11evp_aead_stPmS4_PK13ssl_cipher_sttb(%struct.evp_aead_st**, i64*, i64*, %struct.ssl_cipher_st*, i16 zeroext, i1 zeroext) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @EVP_AEAD_CTX_init_with_direction(%struct.evp_aead_ctx_st*, %struct.evp_aead_st*, i8*, i64, i64, i32) local_unnamed_addr #2

declare i64 @EVP_AEAD_nonce_length(%struct.evp_aead_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.bssl::SSLAEADContext"* @_ZN4bssl14SSLAEADContext24CreatePlaceholderForQUICEtPK13ssl_cipher_st(i16 zeroext, %struct.ssl_cipher_st*) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @OPENSSL_malloc(i64 632) #5
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 196) #5
  br label %21

6:                                                ; preds = %2
  %7 = ptrtoint %struct.ssl_cipher_st* %1 to i64
  %8 = bitcast i8* %3 to %"class.bssl::SSLAEADContext"*
  %9 = bitcast i8* %3 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 8
  %11 = bitcast i8* %10 to %struct.evp_aead_ctx_st*
  tail call void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st* %11) #5
  %12 = getelementptr inbounds i8, i8* %3, i64 620
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds i8, i8* %3, i64 621
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds i8, i8* %3, i64 622
  %15 = bitcast i8* %14 to i16*
  store i16 %0, i16* %15, align 2
  %16 = getelementptr inbounds i8, i8* %3, i64 624
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds i8, i8* %3, i64 625
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, -32
  store i8 %19, i8* %17, align 1
  %20 = getelementptr inbounds i8, i8* %3, i64 608
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %20, i8 0, i64 12, i1 false) #5
  br label %21

21:                                               ; preds = %5, %6
  %22 = phi %"class.bssl::SSLAEADContext"* [ null, %5 ], [ %8, %6 ]
  ret %"class.bssl::SSLAEADContext"* %22
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4bssl14SSLAEADContext22SetVersionIfNullCipherEt(%"class.bssl::SSLAEADContext"* nocapture, i16 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 0
  %4 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %3, align 8
  %5 = icmp eq %struct.ssl_cipher_st* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 5
  store i16 %1, i16* %7, align 2
  br label %8

8:                                                ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i16, align 2
  %3 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %3) #5
  store i16 -21846, i16* %2, align 2
  %4 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 5
  %5 = load i16, i16* %4, align 2
  %6 = call zeroext i1 @_ZN4bssl30ssl_protocol_version_from_wireEPtt(i16* nonnull %2, i16 zeroext %5) #5
  %7 = load i16, i16* %2, align 2
  %8 = select i1 %6, i16 %7, i16 0
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %3) #5
  ret i16 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK4bssl14SSLAEADContext13RecordVersionEv(%"class.bssl::SSLAEADContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i16, align 2
  %3 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 5
  %4 = load i16, i16* %3, align 2
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 6
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i16 769, i16 -257
  br label %20

11:                                               ; preds = %1
  %12 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #5
  store i16 -21846, i16* %2, align 2
  %13 = call zeroext i1 @_ZN4bssl30ssl_protocol_version_from_wireEPtt(i16* nonnull %2, i16 zeroext %4) #5
  %14 = load i16, i16* %2, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #5
  %15 = icmp ult i16 %14, 772
  %16 = xor i1 %13, true
  %17 = or i1 %15, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %11
  %19 = load i16, i16* %3, align 2
  br label %20

20:                                               ; preds = %11, %18, %6
  %21 = phi i16 [ %10, %6 ], [ %19, %18 ], [ 771, %11 ]
  ret i16 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4bssl14SSLAEADContext16ExplicitNonceLenEv(%"class.bssl::SSLAEADContext"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 4
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i64
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i64 [ %9, %6 ], [ 0, %1 ]
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4bssl14SSLAEADContext9SuffixLenEPmmm(%"class.bssl::SSLAEADContext"*, i64*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 0
  %6 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %5, align 8
  %7 = icmp eq %struct.ssl_cipher_st* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  store i64 %3, i64* %1, align 8
  br label %13

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 1, i32 0
  %11 = tail call i32 @EVP_AEAD_CTX_tag_len(%struct.evp_aead_ctx_st* %10, i64* %1, i64 %2, i64 %3) #5
  %12 = icmp ne i32 %11, 0
  br label %13

13:                                               ; preds = %9, %8
  %14 = phi i1 [ true, %8 ], [ %12, %9 ]
  ret i1 %14
}

declare i32 @EVP_AEAD_CTX_tag_len(%struct.evp_aead_ctx_st*, i64*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4bssl14SSLAEADContext13CiphertextLenEPmmm(%"class.bssl::SSLAEADContext"*, i64* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  store i64 -6148914691236517206, i64* %5, align 8
  %7 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 0
  %8 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %7, align 8
  %9 = icmp eq %struct.ssl_cipher_st* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i64 %3, i64* %5, align 8
  br label %15

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 1, i32 0
  %13 = call i32 @EVP_AEAD_CTX_tag_len(%struct.evp_aead_ctx_st* %12, i64* nonnull %5, i64 %2, i64 %3) #5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %11, %10
  %16 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 4
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  br label %24

24:                                               ; preds = %15, %20
  %25 = phi i64 [ %23, %20 ], [ 0, %15 ]
  %26 = load i64, i64* %5, align 8
  %27 = add i64 %25, %2
  %28 = add i64 %27, %26
  store i64 %28, i64* %5, align 8
  %29 = icmp ult i64 %28, %2
  %30 = icmp ugt i64 %28, 65534
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %33

32:                                               ; preds = %24
  call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 208) #5
  br label %34

33:                                               ; preds = %24
  store i64 %28, i64* %1, align 8
  br label %34

34:                                               ; preds = %11, %33, %32
  %35 = phi i1 [ false, %32 ], [ true, %33 ], [ false, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4bssl14SSLAEADContext11MaxOverheadEv(%"class.bssl::SSLAEADContext"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 4
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i64
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i64 [ %9, %6 ], [ 0, %1 ]
  %12 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 0
  %13 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %12, align 8
  %14 = icmp eq %struct.ssl_cipher_st* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 1, i32 0
  %17 = tail call %struct.evp_aead_st* @EVP_AEAD_CTX_aead(%struct.evp_aead_ctx_st* %16) #5
  %18 = tail call i64 @EVP_AEAD_max_overhead(%struct.evp_aead_st* %17) #5
  br label %19

19:                                               ; preds = %10, %15
  %20 = phi i64 [ %18, %15 ], [ 0, %10 ]
  %21 = add i64 %20, %11
  ret i64 %21
}

declare i64 @EVP_AEAD_max_overhead(%struct.evp_aead_st*) local_unnamed_addr #2

declare %struct.evp_aead_st* @EVP_AEAD_CTX_aead(%struct.evp_aead_ctx_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN4bssl14SSLAEADContext17GetAdditionalDataEPhhtPKhmNS_4SpanIS2_EE(%"class.bssl::SSLAEADContext"* nocapture readonly, i8*, i8 zeroext, i16 zeroext, i8* nocapture readonly, i64, %"class.bssl::Span"* nocapture readonly byval(%"class.bssl::Span") align 8) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 7
  %9 = load i8, i8* %8, align 1
  %10 = and i8 %9, 16
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %6, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %6, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %36

17:                                               ; preds = %7
  %18 = bitcast i8* %4 to i64*
  %19 = bitcast i8* %1 to i64*
  %20 = load i64, i64* %18, align 1
  store i64 %20, i64* %19, align 1
  %21 = getelementptr inbounds i8, i8* %1, i64 8
  store i8 %2, i8* %21, align 1
  %22 = lshr i16 %3, 8
  %23 = trunc i16 %22 to i8
  %24 = getelementptr inbounds i8, i8* %1, i64 9
  store i8 %23, i8* %24, align 1
  %25 = trunc i16 %3 to i8
  %26 = getelementptr inbounds i8, i8* %1, i64 10
  store i8 %25, i8* %26, align 1
  %27 = load i8, i8* %8, align 1
  %28 = and i8 %27, 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %17
  %31 = lshr i64 %5, 8
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds i8, i8* %1, i64 11
  store i8 %32, i8* %33, align 1
  %34 = trunc i64 %5 to i8
  %35 = getelementptr inbounds i8, i8* %1, i64 12
  store i8 %34, i8* %35, align 1
  br label %36

36:                                               ; preds = %30, %17, %12
  %37 = phi i8* [ %14, %12 ], [ %1, %17 ], [ %1, %30 ]
  %38 = phi i64 [ %16, %12 ], [ 11, %17 ], [ 13, %30 ]
  %39 = insertvalue { i8*, i64 } undef, i8* %37, 0
  %40 = insertvalue { i8*, i64 } %39, i64 %38, 1
  ret { i8*, i64 } %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl14SSLAEADContext4OpenEPNS_4SpanIhEEhtPKhNS1_IS4_EES2_(%"class.bssl::SSLAEADContext"*, %"class.bssl::Span.1"* nocapture, i8 zeroext, i16 zeroext, i8* nocapture readonly, %"class.bssl::Span"* nocapture readonly byval(%"class.bssl::Span") align 8, %"class.bssl::Span.1"* nocapture byval(%"class.bssl::Span.1") align 8) local_unnamed_addr #0 align 2 {
  %8 = alloca [13 x i8], align 8
  %9 = alloca [24 x i8], align 16
  %10 = alloca i64, align 8
  %11 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 0
  %12 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %11, align 8
  %13 = icmp eq %struct.ssl_cipher_st* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %7
  %15 = bitcast %"class.bssl::Span.1"* %1 to i8*
  %16 = bitcast %"class.bssl::Span.1"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* nonnull align 8 %16, i64 16, i1 false)
  br label %226

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 7
  %19 = load i8, i8* %18, align 1
  %20 = and i8 %19, 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %42

22:                                               ; preds = %17
  %23 = and i8 %19, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i64
  br label %29

29:                                               ; preds = %25, %22
  %30 = phi i64 [ %28, %25 ], [ 0, %22 ]
  %31 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 1, i32 0
  %32 = tail call %struct.evp_aead_st* @EVP_AEAD_CTX_aead(%struct.evp_aead_ctx_st* %31) #5
  %33 = tail call i64 @EVP_AEAD_max_overhead(%struct.evp_aead_st* %32) #5
  %34 = add i64 %33, %30
  %35 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %6, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %36, %34
  br i1 %37, label %41, label %38

38:                                               ; preds = %29
  %39 = sub i64 %36, %34
  %40 = load i8, i8* %18, align 1
  br label %42

41:                                               ; preds = %29
  tail call void @ERR_put_error(i32 16, i32 0, i32 112, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 257) #5
  br label %226

42:                                               ; preds = %38, %17
  %43 = phi i8 [ %19, %17 ], [ %40, %38 ]
  %44 = phi i64 [ 0, %17 ], [ %39, %38 ]
  %45 = getelementptr inbounds [13 x i8], [13 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %45) #5
  %46 = getelementptr inbounds [13 x i8], [13 x i8]* %8, i64 0, i64 11
  %47 = getelementptr inbounds [13 x i8], [13 x i8]* %8, i64 0, i64 12
  %48 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %5, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 13, i1 false)
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %5, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = and i8 %43, 16
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %70

54:                                               ; preds = %42
  %55 = getelementptr inbounds [13 x i8], [13 x i8]* %8, i64 0, i64 10
  %56 = getelementptr inbounds [13 x i8], [13 x i8]* %8, i64 0, i64 9
  %57 = getelementptr inbounds [13 x i8], [13 x i8]* %8, i64 0, i64 8
  %58 = bitcast i8* %4 to i64*
  %59 = bitcast [13 x i8]* %8 to i64*
  %60 = load i64, i64* %58, align 1
  store i64 %60, i64* %59, align 8
  store i8 %2, i8* %57, align 8
  %61 = lshr i16 %3, 8
  %62 = trunc i16 %61 to i8
  store i8 %62, i8* %56, align 1
  %63 = trunc i16 %3 to i8
  store i8 %63, i8* %55, align 2
  %64 = and i8 %43, 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %54
  %67 = lshr i64 %44, 8
  %68 = trunc i64 %67 to i8
  store i8 %68, i8* %46, align 1
  %69 = trunc i64 %44 to i8
  store i8 %69, i8* %47, align 4
  br label %70

70:                                               ; preds = %42, %54, %66
  %71 = phi i8* [ %45, %54 ], [ %45, %66 ], [ %49, %42 ]
  %72 = phi i64 [ 11, %54 ], [ 13, %66 ], [ %51, %42 ]
  %73 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #5
  %74 = and i8 %43, 4
  %75 = icmp eq i8 %74, 0
  %76 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %73, i8 -86, i64 24, i1 false)
  %77 = load i8, i8* %76, align 4
  %78 = zext i8 %77 to i64
  br i1 %75, label %86, label %79

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 4
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i64
  %83 = sub nsw i64 %78, %82
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %79
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %73, i8 0, i64 %83, i1 false) #5
  br label %90

86:                                               ; preds = %70
  %87 = icmp eq i8 %77, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %73, i8* align 1 %89, i64 %78, i1 false) #5
  br label %90

90:                                               ; preds = %88, %86, %85, %79
  %91 = phi i64 [ 0, %79 ], [ %83, %85 ], [ 0, %86 ], [ %78, %88 ]
  %92 = and i8 %43, 1
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %111, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %6, i64 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 4
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  %100 = icmp ult i64 %96, %99
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  tail call void @ERR_put_error(i32 16, i32 0, i32 112, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 284) #5
  br label %224

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %6, i64 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = icmp eq i8 %98, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %91
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* align 1 %104, i64 %99, i1 false) #5
  br label %108

108:                                              ; preds = %106, %102
  %109 = getelementptr inbounds i8, i8* %104, i64 %99
  %110 = sub i64 %96, %99
  store i8* %109, i8** %103, align 8
  store i64 %110, i64* %95, align 8
  br label %118

111:                                              ; preds = %90
  %112 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 4
  %113 = load i8, i8* %112, align 1
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %111
  %116 = zext i8 %113 to i64
  %117 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %91
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %117, i8* align 1 %4, i64 %116, i1 false) #5
  br label %118

118:                                              ; preds = %111, %115, %108
  %119 = phi i8 [ %113, %115 ], [ %98, %108 ], [ 0, %111 ]
  %120 = zext i8 %119 to i64
  %121 = add nsw i64 %91, %120
  %122 = icmp eq i8 %77, 0
  %123 = or i1 %75, %122
  br i1 %123, label %207, label %124

124:                                              ; preds = %118
  %125 = icmp ult i8 %77, 32
  br i1 %125, label %196, label %126

126:                                              ; preds = %124
  %127 = and i64 %78, 224
  %128 = add nsw i64 %127, -32
  %129 = lshr exact i64 %128, 5
  %130 = add nuw nsw i64 %129, 1
  %131 = and i64 %130, 1
  %132 = icmp eq i64 %128, 0
  br i1 %132, label %174, label %133

133:                                              ; preds = %126
  %134 = sub nuw nsw i64 %130, %131
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ 0, %133 ], [ %171, %135 ]
  %137 = phi i64 [ %134, %133 ], [ %172, %135 ]
  %138 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 2, i64 %136
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1
  %141 = getelementptr inbounds i8, i8* %138, i64 16
  %142 = bitcast i8* %141 to <16 x i8>*
  %143 = load <16 x i8>, <16 x i8>* %142, align 1
  %144 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %136
  %145 = bitcast i8* %144 to <16 x i8>*
  %146 = load <16 x i8>, <16 x i8>* %145, align 16
  %147 = getelementptr inbounds i8, i8* %144, i64 16
  %148 = bitcast i8* %147 to <16 x i8>*
  %149 = load <16 x i8>, <16 x i8>* %148, align 16
  %150 = xor <16 x i8> %146, %140
  %151 = xor <16 x i8> %149, %143
  %152 = bitcast i8* %144 to <16 x i8>*
  store <16 x i8> %150, <16 x i8>* %152, align 16
  %153 = bitcast i8* %147 to <16 x i8>*
  store <16 x i8> %151, <16 x i8>* %153, align 16
  %154 = or i64 %136, 32
  %155 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 2, i64 %154
  %156 = bitcast i8* %155 to <16 x i8>*
  %157 = load <16 x i8>, <16 x i8>* %156, align 1
  %158 = getelementptr inbounds i8, i8* %155, i64 16
  %159 = bitcast i8* %158 to <16 x i8>*
  %160 = load <16 x i8>, <16 x i8>* %159, align 1
  %161 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %154
  %162 = bitcast i8* %161 to <16 x i8>*
  %163 = load <16 x i8>, <16 x i8>* %162, align 16
  %164 = getelementptr inbounds i8, i8* %161, i64 16
  %165 = bitcast i8* %164 to <16 x i8>*
  %166 = load <16 x i8>, <16 x i8>* %165, align 16
  %167 = xor <16 x i8> %163, %157
  %168 = xor <16 x i8> %166, %160
  %169 = bitcast i8* %161 to <16 x i8>*
  store <16 x i8> %167, <16 x i8>* %169, align 16
  %170 = bitcast i8* %164 to <16 x i8>*
  store <16 x i8> %168, <16 x i8>* %170, align 16
  %171 = add i64 %136, 64
  %172 = add i64 %137, -2
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %135, !llvm.loop !3

174:                                              ; preds = %135, %126
  %175 = phi i64 [ 0, %126 ], [ %171, %135 ]
  %176 = icmp eq i64 %131, 0
  br i1 %176, label %194, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 2, i64 %175
  %179 = bitcast i8* %178 to <16 x i8>*
  %180 = load <16 x i8>, <16 x i8>* %179, align 1
  %181 = getelementptr inbounds i8, i8* %178, i64 16
  %182 = bitcast i8* %181 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1
  %184 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %175
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 16
  %187 = getelementptr inbounds i8, i8* %184, i64 16
  %188 = bitcast i8* %187 to <16 x i8>*
  %189 = load <16 x i8>, <16 x i8>* %188, align 16
  %190 = xor <16 x i8> %186, %180
  %191 = xor <16 x i8> %189, %183
  %192 = bitcast i8* %184 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %192, align 16
  %193 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %191, <16 x i8>* %193, align 16
  br label %194

194:                                              ; preds = %174, %177
  %195 = icmp eq i64 %127, %78
  br i1 %195, label %207, label %196

196:                                              ; preds = %194, %124
  %197 = phi i64 [ 0, %124 ], [ %127, %194 ]
  br label %198

198:                                              ; preds = %196, %198
  %199 = phi i64 [ %205, %198 ], [ %197, %196 ]
  %200 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 2, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %199
  %203 = load i8, i8* %202, align 1
  %204 = xor i8 %203, %201
  store i8 %204, i8* %202, align 1
  %205 = add nuw nsw i64 %199, 1
  %206 = icmp ult i64 %205, %78
  br i1 %206, label %198, label %207, !llvm.loop !5

207:                                              ; preds = %198, %194, %118
  %208 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #5
  store i64 -6148914691236517206, i64* %10, align 8
  %209 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 1, i32 0
  %210 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %6, i64 0, i32 0
  %211 = load i8*, i8** %210, align 8
  %212 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %6, i64 0, i32 1
  %213 = load i64, i64* %212, align 8
  %214 = call i32 @EVP_AEAD_CTX_open(%struct.evp_aead_ctx_st* %209, i8* %211, i64* nonnull %10, i64 %213, i8* nonnull %73, i64 %121, i8* %211, i64 %213, i8* %71, i64 %72) #5
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %222, label %216

216:                                              ; preds = %207
  %217 = load i64, i64* %10, align 8
  %218 = icmp ugt i64 %213, %217
  %219 = select i1 %218, i64 %217, i64 %213
  %220 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %1, i64 0, i32 0
  store i8* %211, i8** %220, align 8
  %221 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %1, i64 0, i32 1
  store i64 %219, i64* %221, align 8
  br label %222

222:                                              ; preds = %207, %216
  %223 = phi i1 [ true, %216 ], [ false, %207 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #5
  br label %224

224:                                              ; preds = %222, %101
  %225 = phi i1 [ false, %101 ], [ %223, %222 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #5
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %45) #5
  br label %226

226:                                              ; preds = %41, %224, %14
  %227 = phi i1 [ true, %14 ], [ %225, %224 ], [ false, %41 ]
  ret i1 %227
}

declare i32 @EVP_AEAD_CTX_open(%struct.evp_aead_ctx_st*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl14SSLAEADContext11SealScatterEPhS1_S1_htPKhNS_4SpanIS2_EES3_mS3_m(%"class.bssl::SSLAEADContext"*, i8*, i8*, i8*, i8 zeroext, i16 zeroext, i8* nocapture readonly, %"class.bssl::Span"* nocapture readonly byval(%"class.bssl::Span") align 8, i8*, i64, i8*, i64) local_unnamed_addr #0 align 2 {
  %13 = alloca i64, align 8
  %14 = alloca [13 x i8], align 8
  %15 = alloca [24 x i8], align 16
  %16 = alloca i64, align 8
  %17 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 7
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 4
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i64
  br label %25

25:                                               ; preds = %12, %21
  %26 = phi i64 [ %24, %21 ], [ 0, %12 ]
  %27 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #5
  store i64 -6148914691236517206, i64* %13, align 8
  %28 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 0
  %29 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %28, align 8
  %30 = icmp eq %struct.ssl_cipher_st* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %25
  store i64 %11, i64* %13, align 8
  br label %37

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 1, i32 0
  %34 = call i32 @EVP_AEAD_CTX_tag_len(%struct.evp_aead_ctx_st* %33, i64* nonnull %13, i64 %9, i64 %11) #5
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  call void @ERR_put_error(i32 16, i32 0, i32 200, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 324) #5
  br label %255

37:                                               ; preds = %32, %31
  %38 = icmp eq i8* %8, %2
  %39 = ptrtoint i8* %8 to i64
  br i1 %38, label %40, label %42

40:                                               ; preds = %37
  %41 = add i64 %39, %9
  br label %49

42:                                               ; preds = %37
  %43 = ptrtoint i8* %2 to i64
  %44 = add i64 %39, %9
  %45 = icmp ugt i64 %44, %43
  %46 = add i64 %43, %9
  %47 = icmp ugt i64 %46, %39
  %48 = and i1 %45, %47
  br i1 %48, label %63, label %49

49:                                               ; preds = %40, %42
  %50 = phi i64 [ %41, %40 ], [ %44, %42 ]
  %51 = ptrtoint i8* %1 to i64
  %52 = icmp ugt i64 %50, %51
  %53 = add i64 %26, %51
  %54 = icmp ugt i64 %53, %39
  %55 = and i1 %52, %54
  br i1 %55, label %63, label %56

56:                                               ; preds = %49
  %57 = ptrtoint i8* %3 to i64
  %58 = icmp ugt i64 %50, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %56
  %60 = load i64, i64* %13, align 8
  %61 = add i64 %60, %57
  %62 = icmp ugt i64 %61, %39
  br i1 %62, label %63, label %64

63:                                               ; preds = %49, %42, %59
  call void @ERR_put_error(i32 16, i32 0, i32 189, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 330) #5
  br label %255

64:                                               ; preds = %59, %56
  %65 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %28, align 8
  %66 = icmp eq %struct.ssl_cipher_st* %65, null
  br i1 %66, label %67, label %73

67:                                               ; preds = %64
  %68 = icmp eq i64 %9, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %67
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %8, i64 %9, i1 false) #5
  br label %70

70:                                               ; preds = %67, %69
  %71 = icmp eq i64 %11, 0
  br i1 %71, label %255, label %72

72:                                               ; preds = %70
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %10, i64 %11, i1 false) #5
  br label %255

73:                                               ; preds = %64
  %74 = getelementptr inbounds [13 x i8], [13 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %74) #5
  %75 = getelementptr inbounds [13 x i8], [13 x i8]* %14, i64 0, i64 11
  %76 = getelementptr inbounds [13 x i8], [13 x i8]* %14, i64 0, i64 12
  %77 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %7, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 13, i1 false)
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %7, i64 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = load i8, i8* %17, align 1
  %82 = and i8 %81, 16
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %100

84:                                               ; preds = %73
  %85 = getelementptr inbounds [13 x i8], [13 x i8]* %14, i64 0, i64 10
  %86 = getelementptr inbounds [13 x i8], [13 x i8]* %14, i64 0, i64 9
  %87 = getelementptr inbounds [13 x i8], [13 x i8]* %14, i64 0, i64 8
  %88 = bitcast i8* %6 to i64*
  %89 = bitcast [13 x i8]* %14 to i64*
  %90 = load i64, i64* %88, align 1
  store i64 %90, i64* %89, align 8
  store i8 %4, i8* %87, align 8
  %91 = lshr i16 %5, 8
  %92 = trunc i16 %91 to i8
  store i8 %92, i8* %86, align 1
  %93 = trunc i16 %5 to i8
  store i8 %93, i8* %85, align 2
  %94 = and i8 %81, 8
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %84
  %97 = lshr i64 %9, 8
  %98 = trunc i64 %97 to i8
  store i8 %98, i8* %75, align 1
  %99 = trunc i64 %9 to i8
  store i8 %99, i8* %76, align 4
  br label %100

100:                                              ; preds = %73, %84, %96
  %101 = phi i8* [ %74, %84 ], [ %74, %96 ], [ %78, %73 ]
  %102 = phi i64 [ 11, %84 ], [ 13, %96 ], [ %80, %73 ]
  %103 = getelementptr inbounds [24 x i8], [24 x i8]* %15, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #5
  %104 = and i8 %81, 4
  %105 = icmp eq i8 %104, 0
  %106 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 -86, i64 24, i1 false)
  %107 = load i8, i8* %106, align 4
  %108 = zext i8 %107 to i64
  br i1 %105, label %116, label %109

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 4
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = sub nsw i64 %108, %112
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %109
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 0, i64 %113, i1 false) #5
  br label %120

116:                                              ; preds = %100
  %117 = icmp eq i8 %107, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %103, i8* align 1 %119, i64 %108, i1 false) #5
  br label %120

120:                                              ; preds = %118, %116, %115, %109
  %121 = phi i64 [ 0, %109 ], [ %113, %115 ], [ 0, %116 ], [ %108, %118 ]
  %122 = and i8 %81, 2
  %123 = icmp eq i8 %122, 0
  %124 = getelementptr inbounds [24 x i8], [24 x i8]* %15, i64 0, i64 %121
  %125 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 4
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i64
  br i1 %123, label %134, label %128

128:                                              ; preds = %120
  %129 = call i32 @RAND_bytes(i8* %124, i64 %127) #5
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %253, label %131

131:                                              ; preds = %128
  %132 = load i8, i8* %125, align 1
  %133 = load i8, i8* %17, align 1
  br label %137

134:                                              ; preds = %120
  %135 = icmp eq i8 %126, 0
  br i1 %135, label %137, label %136

136:                                              ; preds = %134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %124, i8* align 1 %6, i64 %127, i1 false) #5
  br label %137

137:                                              ; preds = %131, %136, %134
  %138 = phi i8 [ %133, %131 ], [ %81, %136 ], [ %81, %134 ]
  %139 = phi i8 [ %132, %131 ], [ %126, %136 ], [ 0, %134 ]
  %140 = zext i8 %139 to i64
  %141 = add nsw i64 %121, %140
  %142 = and i8 %138, 1
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %156, label %144

144:                                              ; preds = %137
  %145 = add i64 %140, %51
  %146 = icmp ugt i64 %145, %39
  %147 = and i1 %52, %146
  br i1 %147, label %148, label %149

148:                                              ; preds = %144
  call void @ERR_put_error(i32 16, i32 0, i32 189, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 376) #5
  br label %253

149:                                              ; preds = %144
  %150 = icmp eq i8 %139, 0
  br i1 %150, label %156, label %151

151:                                              ; preds = %149
  %152 = load i8, i8* %106, align 4
  %153 = zext i8 %152 to i64
  %154 = getelementptr inbounds [24 x i8], [24 x i8]* %15, i64 0, i64 %153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %154, i64 %140, i1 false) #5
  %155 = load i8, i8* %17, align 1
  br label %156

156:                                              ; preds = %151, %149, %137
  %157 = phi i8 [ %155, %151 ], [ %138, %149 ], [ %138, %137 ]
  %158 = and i8 %157, 4
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %247, label %160

160:                                              ; preds = %156
  %161 = load i8, i8* %106, align 4
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %247, label %163

163:                                              ; preds = %160
  %164 = zext i8 %161 to i64
  %165 = icmp ult i8 %161, 32
  br i1 %165, label %236, label %166

166:                                              ; preds = %163
  %167 = and i64 %164, 224
  %168 = add nsw i64 %167, -32
  %169 = lshr exact i64 %168, 5
  %170 = add nuw nsw i64 %169, 1
  %171 = and i64 %170, 1
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %214, label %173

173:                                              ; preds = %166
  %174 = sub nuw nsw i64 %170, %171
  br label %175

175:                                              ; preds = %175, %173
  %176 = phi i64 [ 0, %173 ], [ %211, %175 ]
  %177 = phi i64 [ %174, %173 ], [ %212, %175 ]
  %178 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 2, i64 %176
  %179 = bitcast i8* %178 to <16 x i8>*
  %180 = load <16 x i8>, <16 x i8>* %179, align 1
  %181 = getelementptr inbounds i8, i8* %178, i64 16
  %182 = bitcast i8* %181 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1
  %184 = getelementptr inbounds [24 x i8], [24 x i8]* %15, i64 0, i64 %176
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 16
  %187 = getelementptr inbounds i8, i8* %184, i64 16
  %188 = bitcast i8* %187 to <16 x i8>*
  %189 = load <16 x i8>, <16 x i8>* %188, align 16
  %190 = xor <16 x i8> %186, %180
  %191 = xor <16 x i8> %189, %183
  %192 = bitcast i8* %184 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %192, align 16
  %193 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %191, <16 x i8>* %193, align 16
  %194 = or i64 %176, 32
  %195 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 2, i64 %194
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1
  %198 = getelementptr inbounds i8, i8* %195, i64 16
  %199 = bitcast i8* %198 to <16 x i8>*
  %200 = load <16 x i8>, <16 x i8>* %199, align 1
  %201 = getelementptr inbounds [24 x i8], [24 x i8]* %15, i64 0, i64 %194
  %202 = bitcast i8* %201 to <16 x i8>*
  %203 = load <16 x i8>, <16 x i8>* %202, align 16
  %204 = getelementptr inbounds i8, i8* %201, i64 16
  %205 = bitcast i8* %204 to <16 x i8>*
  %206 = load <16 x i8>, <16 x i8>* %205, align 16
  %207 = xor <16 x i8> %203, %197
  %208 = xor <16 x i8> %206, %200
  %209 = bitcast i8* %201 to <16 x i8>*
  store <16 x i8> %207, <16 x i8>* %209, align 16
  %210 = bitcast i8* %204 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %210, align 16
  %211 = add i64 %176, 64
  %212 = add i64 %177, -2
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %175, !llvm.loop !7

214:                                              ; preds = %175, %166
  %215 = phi i64 [ 0, %166 ], [ %211, %175 ]
  %216 = icmp eq i64 %171, 0
  br i1 %216, label %234, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 2, i64 %215
  %219 = bitcast i8* %218 to <16 x i8>*
  %220 = load <16 x i8>, <16 x i8>* %219, align 1
  %221 = getelementptr inbounds i8, i8* %218, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  %223 = load <16 x i8>, <16 x i8>* %222, align 1
  %224 = getelementptr inbounds [24 x i8], [24 x i8]* %15, i64 0, i64 %215
  %225 = bitcast i8* %224 to <16 x i8>*
  %226 = load <16 x i8>, <16 x i8>* %225, align 16
  %227 = getelementptr inbounds i8, i8* %224, i64 16
  %228 = bitcast i8* %227 to <16 x i8>*
  %229 = load <16 x i8>, <16 x i8>* %228, align 16
  %230 = xor <16 x i8> %226, %220
  %231 = xor <16 x i8> %229, %223
  %232 = bitcast i8* %224 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %232, align 16
  %233 = bitcast i8* %227 to <16 x i8>*
  store <16 x i8> %231, <16 x i8>* %233, align 16
  br label %234

234:                                              ; preds = %214, %217
  %235 = icmp eq i64 %167, %164
  br i1 %235, label %247, label %236

236:                                              ; preds = %234, %163
  %237 = phi i64 [ 0, %163 ], [ %167, %234 ]
  br label %238

238:                                              ; preds = %236, %238
  %239 = phi i64 [ %245, %238 ], [ %237, %236 ]
  %240 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 2, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = getelementptr inbounds [24 x i8], [24 x i8]* %15, i64 0, i64 %239
  %243 = load i8, i8* %242, align 1
  %244 = xor i8 %243, %241
  store i8 %244, i8* %242, align 1
  %245 = add nuw nsw i64 %239, 1
  %246 = icmp ult i64 %245, %164
  br i1 %246, label %238, label %247, !llvm.loop !8

247:                                              ; preds = %238, %234, %160, %156
  %248 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #5
  store i64 -6148914691236517206, i64* %16, align 8
  %249 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 1, i32 0
  %250 = load i64, i64* %13, align 8
  %251 = call i32 @EVP_AEAD_CTX_seal_scatter(%struct.evp_aead_ctx_st* %249, i8* %2, i8* %3, i64* nonnull %16, i64 %250, i8* nonnull %103, i64 %141, i8* %8, i64 %9, i8* %10, i64 %11, i8* %101, i64 %102) #5
  %252 = icmp ne i32 %251, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #5
  br label %253

253:                                              ; preds = %128, %247, %148
  %254 = phi i1 [ false, %148 ], [ %252, %247 ], [ false, %128 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #5
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %74) #5
  br label %255

255:                                              ; preds = %72, %70, %253, %63, %36
  %256 = phi i1 [ false, %63 ], [ %254, %253 ], [ false, %36 ], [ true, %70 ], [ true, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #5
  ret i1 %256
}

declare i32 @RAND_bytes(i8*, i64) local_unnamed_addr #2

declare i32 @EVP_AEAD_CTX_seal_scatter(%struct.evp_aead_ctx_st*, i8*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl14SSLAEADContext4SealEPhPmmhtPKhNS_4SpanIS3_EES4_m(%"class.bssl::SSLAEADContext"*, i8*, i64* nocapture, i64, i8 zeroext, i16 zeroext, i8* nocapture readonly, %"class.bssl::Span"* nocapture readonly byval(%"class.bssl::Span") align 8, i8*, i64) local_unnamed_addr #0 align 2 {
  %11 = alloca i64, align 8
  %12 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 4
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i64
  br label %20

20:                                               ; preds = %10, %16
  %21 = phi i64 [ %19, %16 ], [ 0, %10 ]
  %22 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #5
  store i64 -6148914691236517206, i64* %11, align 8
  %23 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 0
  %24 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %23, align 8
  %25 = icmp eq %struct.ssl_cipher_st* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %20
  store i64 0, i64* %11, align 8
  br label %32

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 1, i32 0
  %29 = call i32 @EVP_AEAD_CTX_tag_len(%struct.evp_aead_ctx_st* %28, i64* nonnull %11, i64 %9, i64 0) #5
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  call void @ERR_put_error(i32 16, i32 0, i32 200, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 406) #5
  br label %50

32:                                               ; preds = %27, %26
  %33 = add i64 %21, %9
  %34 = icmp ult i64 %33, %9
  br i1 %34, label %39, label %35

35:                                               ; preds = %32
  %36 = load i64, i64* %11, align 8
  %37 = add i64 %36, %33
  %38 = icmp ult i64 %37, %33
  br i1 %38, label %39, label %40

39:                                               ; preds = %35, %32
  call void @ERR_put_error(i32 30, i32 0, i32 200, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 411) #5
  br label %50

40:                                               ; preds = %35
  %41 = icmp ugt i64 %37, %3
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  call void @ERR_put_error(i32 16, i32 0, i32 121, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 415) #5
  br label %50

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %1, i64 %21
  %45 = getelementptr inbounds i8, i8* %44, i64 %9
  %46 = call zeroext i1 @_ZN4bssl14SSLAEADContext11SealScatterEPhS1_S1_htPKhNS_4SpanIS2_EES3_mS3_m(%"class.bssl::SSLAEADContext"* %0, i8* %1, i8* %44, i8* %45, i8 zeroext %4, i16 zeroext %5, i8* %6, %"class.bssl::Span"* nonnull byval(%"class.bssl::Span") align 8 %7, i8* %8, i64 %9, i8* null, i64 0)
  br i1 %46, label %47, label %50

47:                                               ; preds = %43
  %48 = load i64, i64* %11, align 8
  %49 = add i64 %48, %33
  store i64 %49, i64* %2, align 8
  br label %50

50:                                               ; preds = %43, %47, %42, %39, %31
  %51 = phi i1 [ false, %39 ], [ false, %42 ], [ true, %47 ], [ false, %31 ], [ false, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #5
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4bssl14SSLAEADContext5GetIVEPPKhPm(%"class.bssl::SSLAEADContext"*, i8**, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 0
  %5 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %4, align 8
  %6 = icmp eq %struct.ssl_cipher_st* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %0, i64 0, i32 1, i32 0
  %9 = tail call i32 @EVP_AEAD_CTX_get_iv(%struct.evp_aead_ctx_st* %8, i8** %1, i64* %2) #5
  %10 = icmp ne i32 %9, 0
  br label %11

11:                                               ; preds = %7, %3
  %12 = phi i1 [ false, %3 ], [ %10, %7 ]
  ret i1 %12
}

declare i32 @EVP_AEAD_CTX_get_iv(%struct.evp_aead_ctx_st*, i8**, i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st*) local_unnamed_addr #2

declare void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st*) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.isvectorized", i32 1}
!5 = distinct !{!5, !6, !4}
!6 = !{!"llvm.loop.unroll.runtime.disable"}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !6, !4}
