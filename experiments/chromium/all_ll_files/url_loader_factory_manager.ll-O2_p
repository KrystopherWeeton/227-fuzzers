; ModuleID = '../../extensions/browser/url_loader_factory_manager.cc'
source_filename = "../../extensions/browser/url_loader_factory_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::nothrow_t" = type { i8 }
%"class.content::NavigationHandle" = type { %"class.base::SupportsUserData.base", [7 x i8] }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.extensions::Extension"**, %"class.extensions::Extension"**, %"class.std::__1::__compressed_pair.100" }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.22", %"class.std::__1::vector.28", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.48", %"class.std::__1::map.89", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.10" }
%"class.std::__1::__tree.10" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.30" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.35" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.41" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { i32*, i32*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.54" }
%"union.absl::variant_internal::DestructibleUnionImpl.54" = type { %"union.absl::variant_internal::DestructibleUnionImpl.55" }
%"union.absl::variant_internal::DestructibleUnionImpl.55" = type { %"union.absl::variant_internal::DestructibleUnionImpl.56" }
%"union.absl::variant_internal::DestructibleUnionImpl.56" = type { %"union.absl::variant_internal::DestructibleUnionImpl.57" }
%"union.absl::variant_internal::DestructibleUnionImpl.57" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map.89" = type { %"class.std::__1::__tree.90" }
%"class.std::__1::__tree.90" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.extensions::Extension"** }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.108" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.107 }
%union.anon.107 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.url::Origin"* }
%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.base::internal::flat_tree.192" = type { %"class.std::__1::vector.105" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.content::BrowserContext" = type opaque
%"class.network::mojom::URLLoaderFactoryParams" = type { i32, %"class.absl::optional.113", i8, i8, i8, i8, %"class.mojo::PendingRemote", %"class.net::IsolationInfo", i8, i8, i8, i8, %"class.absl::optional.138", %"class.mojo::StructPtr", %"class.mojo::StructPtr.150", %"class.mojo::PendingRemote.162", %"class.mojo::PendingRemote.163", %"class.mojo::PendingRemote.164", %"class.mojo::PendingRemote.165", i32, %"class.std::__1::basic_string" }
%"class.absl::optional.113" = type { %"class.absl::optional_internal::optional_data.114" }
%"class.absl::optional_internal::optional_data.114" = type { %"class.absl::optional_internal::optional_data_base.115" }
%"class.absl::optional_internal::optional_data_base.115" = type { %"class.absl::optional_internal::optional_data_dtor_base.116" }
%"class.absl::optional_internal::optional_data_dtor_base.116" = type { i8, %union.anon.117 }
%union.anon.117 = type { %"class.url::Origin" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.113", %"class.absl::optional.113", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.123" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.118", %"class.absl::optional.118" }
%"class.absl::optional.118" = type { %"class.absl::optional_internal::optional_data.119" }
%"class.absl::optional_internal::optional_data.119" = type { %"class.absl::optional_internal::optional_data_base.120" }
%"class.absl::optional_internal::optional_data_base.120" = type { %"class.absl::optional_internal::optional_data_dtor_base.121" }
%"class.absl::optional_internal::optional_data_dtor_base.121" = type { i8, %union.anon.122 }
%union.anon.122 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.absl::optional.123" = type { %"class.absl::optional_internal::optional_data.124" }
%"class.absl::optional_internal::optional_data.124" = type { %"class.absl::optional_internal::optional_data_base.125" }
%"class.absl::optional_internal::optional_data_base.125" = type { %"class.absl::optional_internal::optional_data_dtor_base.126" }
%"class.absl::optional_internal::optional_data_dtor_base.126" = type { i8, %union.anon.127 }
%union.anon.127 = type { %"class.std::__1::set.128" }
%"class.std::__1::set.128" = type { %"class.std::__1::__tree.129" }
%"class.std::__1::__tree.129" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional.138" = type { %"class.absl::optional_internal::optional_data.139" }
%"class.absl::optional_internal::optional_data.139" = type { %"class.absl::optional_internal::optional_data_base.140" }
%"class.absl::optional_internal::optional_data_base.140" = type { %"class.absl::optional_internal::optional_data_dtor_base.141" }
%"class.absl::optional_internal::optional_data_dtor_base.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { %"class.base::UnguessableToken" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.143" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.network::mojom::URLLoaderFactoryOverride"* }
%"class.network::mojom::URLLoaderFactoryOverride" = type <{ %"class.mojo::PendingRemote.146", %"class.mojo::PendingReceiver", i8, [7 x i8] }>
%"class.mojo::PendingRemote.146" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.166", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.169, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.171", [4 x i8] }>
%"class.base::RefCountedThreadSafe.166" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.167 }
%class.scoped_refptr.167 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.168", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.168" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.169 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.170" }>
%"class.base::RefCountedThreadSafe.170" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__cxx_atomic_impl.174" }
%"struct.std::__1::__cxx_atomic_impl.174" = type { %"struct.std::__1::__cxx_atomic_base_impl.175" }
%"struct.std::__1::__cxx_atomic_base_impl.175" = type { i32 }
%"class.mojo::StructPtr.150" = type { %"class.std::__1::unique_ptr.151" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.network::mojom::ClientSecurityState"* }
%"class.network::mojom::ClientSecurityState" = type <{ %"struct.network::CrossOriginEmbedderPolicy", i8, [3 x i8], i32, i32, [4 x i8] }>
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.154", i32, %"class.absl::optional.154" }
%"class.absl::optional.154" = type { %"class.absl::optional_internal::optional_data.155" }
%"class.absl::optional_internal::optional_data.155" = type { %"class.absl::optional_internal::optional_data_base.156" }
%"class.absl::optional_internal::optional_data_base.156" = type { %"class.absl::optional_internal::optional_data_dtor_base.157" }
%"class.absl::optional_internal::optional_data_dtor_base.157" = type { i8, %union.anon.158 }
%union.anon.158 = type { %"class.std::__1::basic_string" }
%"class.mojo::PendingRemote.162" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingRemote.163" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingRemote.164" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingRemote.165" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.extensions::ExtensionRegistry" = type { %class.KeyedService, %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.base::ObserverList", %"class.content::BrowserContext"* }
%class.KeyedService = type { i32 (...)** }
%"class.extensions::ExtensionSet" = type { %"class.std::__1::map.176" }
%"class.std::__1::map.176" = type { %"class.std::__1::__tree.177" }
%"class.std::__1::__tree.177" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.185", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.187" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare" = type { i8 }

$_ZN4base8internal9flat_treeIN3url6OriginENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE15sort_and_uniqueENS5_11__wrap_iterIPS3_EESF_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_PNS_15iterator_traitsISJ_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeE = comdat any

$_ZNSt3__116__rotate_forwardINS_11__wrap_iterIPN3url6OriginEEEEET_S6_S6_S6_ = comdat any

$_ZNSt3__16vectorIN3url6OriginENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@_ZN10extensions16kExtensionSchemeE = external constant [0 x i8], align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23URLLoaderFactoryManager45WillInjectContentScriptsWhenNavigationCommitsEN4base7PassKeyINS_20ContentScriptTrackerEEEPN7content16NavigationHandleERKNSt3__16vectorIPKNS_9ExtensionENS8_9allocatorISC_EEEE(%"class.content::NavigationHandle"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.105", align 8
  %4 = alloca %"class.url::Origin", align 8
  %5 = bitcast %"class.content::NavigationHandle"* %0 to i1 (%"class.content::NavigationHandle"*)***
  %6 = load i1 (%"class.content::NavigationHandle"*)**, i1 (%"class.content::NavigationHandle"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.content::NavigationHandle"*)*, i1 (%"class.content::NavigationHandle"*)** %6, i64 35
  %8 = load i1 (%"class.content::NavigationHandle"*)*, i1 (%"class.content::NavigationHandle"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.content::NavigationHandle"* %0) #10
  br i1 %9, label %70, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.105"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %3, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %3, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #10
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.extensions::Extension"**, %"class.extensions::Extension"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %18 = load %"class.extensions::Extension"**, %"class.extensions::Extension"*** %17, align 8
  %19 = icmp eq %"class.extensions::Extension"** %16, %18
  br i1 %19, label %69, label %20

20:                                               ; preds = %10
  %21 = bitcast %"class.url::Origin"* %4 to i8*
  %22 = bitcast %"class.url::Origin"** %13 to i64*
  br label %27

23:                                               ; preds = %43
  %24 = load %"class.url::Origin"*, %"class.url::Origin"** %12, align 8
  %25 = load %"class.url::Origin"*, %"class.url::Origin"** %13, align 8
  %26 = icmp eq %"class.url::Origin"* %24, %25
  br i1 %26, label %53, label %46

27:                                               ; preds = %20, %43
  %28 = phi %"class.extensions::Extension"** [ %16, %20 ], [ %44, %43 ]
  %29 = load %"class.extensions::Extension"*, %"class.extensions::Extension"** %28, align 8
  %30 = call zeroext i1 @_ZNK10extensions9Extension15is_platform_appEv(%"class.extensions::Extension"* %29) #10
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = call zeroext i1 @_ZNK10extensions9Extension15is_platform_appEv(%"class.extensions::Extension"* %29) #10
  br i1 %32, label %33, label %43

33:                                               ; preds = %27, %31
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #10
  %34 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %29, i64 0, i32 10
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %4, %class.GURL* dereferenceable(120) %34) #10
  %35 = load %"class.url::Origin"*, %"class.url::Origin"** %13, align 8
  %36 = load %"class.url::Origin"*, %"class.url::Origin"** %14, align 8
  %37 = icmp ult %"class.url::Origin"* %35, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %35, %"class.url::Origin"* nonnull dereferenceable(80) %4) #10
  %39 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %35, i64 1
  %40 = ptrtoint %"class.url::Origin"* %39 to i64
  store i64 %40, i64* %22, align 8
  br label %42

41:                                               ; preds = %33
  call void @_ZNSt3__16vectorIN3url6OriginENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.105"* nonnull %3, %"class.url::Origin"* nonnull dereferenceable(80) %4) #10
  br label %42

42:                                               ; preds = %38, %41
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #10
  br label %43

43:                                               ; preds = %31, %42
  %44 = getelementptr inbounds %"class.extensions::Extension"*, %"class.extensions::Extension"** %28, i64 1
  %45 = icmp eq %"class.extensions::Extension"** %44, %18
  br i1 %45, label %23, label %27

46:                                               ; preds = %23
  %47 = bitcast %"class.content::NavigationHandle"* %0 to %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)***
  %48 = load %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)**, %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)*, %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)** %48, i64 33
  %50 = load %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)*, %"class.content::RenderFrameHost"* (%"class.content::NavigationHandle"*)** %49, align 8
  %51 = call %"class.content::RenderFrameHost"* %50(%"class.content::NavigationHandle"* %0) #10
  call fastcc void @_ZN10extensions12_GLOBAL__N_153MarkIsolatedWorldsAsRequiringSeparateURLLoaderFactoryEPN7content15RenderFrameHostERKNSt3__16vectorIN3url6OriginENS4_9allocatorIS7_EEEEb(%"class.content::RenderFrameHost"* %51, %"class.std::__1::vector.105"* nonnull dereferenceable(24) %3, i1 zeroext false)
  %52 = load %"class.url::Origin"*, %"class.url::Origin"** %12, align 8
  br label %53

53:                                               ; preds = %46, %23
  %54 = phi %"class.url::Origin"* [ %52, %46 ], [ %25, %23 ]
  %55 = icmp eq %"class.url::Origin"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %53
  %57 = bitcast %"class.url::Origin"* %54 to i8*
  %58 = load %"class.url::Origin"*, %"class.url::Origin"** %13, align 8
  %59 = icmp eq %"class.url::Origin"* %58, %54
  br i1 %59, label %67, label %60

60:                                               ; preds = %56, %60
  %61 = phi %"class.url::Origin"* [ %62, %60 ], [ %58, %56 ]
  %62 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %61, i64 -1
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %62) #10
  %63 = icmp eq %"class.url::Origin"* %62, %54
  br i1 %63, label %64, label %60

64:                                               ; preds = %60
  %65 = bitcast %"class.std::__1::vector.105"* %3 to i8**
  %66 = load i8*, i8** %65, align 8
  br label %67

67:                                               ; preds = %64, %56
  %68 = phi i8* [ %66, %64 ], [ %57, %56 ]
  store %"class.url::Origin"* %54, %"class.url::Origin"** %13, align 8
  call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %10, %53, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  br label %70

70:                                               ; preds = %2, %69
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN10extensions12_GLOBAL__N_153MarkIsolatedWorldsAsRequiringSeparateURLLoaderFactoryEPN7content15RenderFrameHostERKNSt3__16vectorIN3url6OriginENS4_9allocatorIS7_EEEEb(%"class.content::RenderFrameHost"*, %"class.std::__1::vector.105"* nocapture readonly dereferenceable(24), i1 zeroext) unnamed_addr #0 {
  %4 = alloca %"class.base::internal::flat_tree.192", align 8
  %5 = bitcast %"class.base::internal::flat_tree.192"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %1, i64 0, i32 0, i32 1
  %7 = bitcast %"class.url::Origin"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.105"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 80
  %13 = icmp eq i64 %11, 0
  %14 = inttoptr i64 %10 to %"class.url::Origin"*
  %15 = inttoptr i64 %8 to %"class.url::Origin"*
  br i1 %13, label %42, label %16

16:                                               ; preds = %3
  %17 = icmp ugt i64 %12, 230584300921369395
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.base::internal::flat_tree.192"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %19) #12
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %11) #11
  %22 = bitcast i8* %21 to %"class.url::Origin"*
  %23 = getelementptr inbounds %"class.base::internal::flat_tree.192", %"class.base::internal::flat_tree.192"* %4, i64 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.url::Origin"** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.base::internal::flat_tree.192"* %4 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %22, i64 %12
  %27 = getelementptr inbounds %"class.base::internal::flat_tree.192", %"class.base::internal::flat_tree.192"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.url::Origin"* %26, %"class.url::Origin"** %27, align 8
  %28 = bitcast %"class.url::Origin"** %23 to i64*
  %29 = ptrtoint i8* %21 to i64
  %30 = icmp eq %"class.url::Origin"* %14, %15
  br i1 %30, label %39, label %31

31:                                               ; preds = %20, %31
  %32 = phi %"class.url::Origin"* [ %35, %31 ], [ %22, %20 ]
  %33 = phi %"class.url::Origin"* [ %34, %31 ], [ %14, %20 ]
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %32, %"class.url::Origin"* dereferenceable(80) %33) #10
  %34 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %33, i64 1
  %35 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %32, i64 1
  %36 = icmp eq %"class.url::Origin"* %34, %15
  br i1 %36, label %37, label %31

37:                                               ; preds = %31
  %38 = ptrtoint %"class.url::Origin"* %35 to i64
  br label %39

39:                                               ; preds = %37, %20
  %40 = phi i64 [ %29, %20 ], [ %38, %37 ]
  store i64 %40, i64* %28, align 8
  %41 = inttoptr i64 %40 to %"class.url::Origin"*
  br label %42

42:                                               ; preds = %3, %39
  %43 = phi %"class.url::Origin"* [ null, %3 ], [ %41, %39 ]
  %44 = phi %"class.url::Origin"* [ null, %3 ], [ %22, %39 ]
  call void @_ZN4base8internal9flat_treeIN3url6OriginENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE15sort_and_uniqueENS5_11__wrap_iterIPS3_EESF_(%"class.base::internal::flat_tree.192"* nonnull %4, %"class.url::Origin"* %44, %"class.url::Origin"* %43) #10
  %45 = bitcast %"class.content::RenderFrameHost"* %0 to void (%"class.content::RenderFrameHost"*, %"class.base::internal::flat_tree.192"*, i1)***
  %46 = load void (%"class.content::RenderFrameHost"*, %"class.base::internal::flat_tree.192"*, i1)**, void (%"class.content::RenderFrameHost"*, %"class.base::internal::flat_tree.192"*, i1)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.content::RenderFrameHost"*, %"class.base::internal::flat_tree.192"*, i1)*, void (%"class.content::RenderFrameHost"*, %"class.base::internal::flat_tree.192"*, i1)** %46, i64 76
  %48 = load void (%"class.content::RenderFrameHost"*, %"class.base::internal::flat_tree.192"*, i1)*, void (%"class.content::RenderFrameHost"*, %"class.base::internal::flat_tree.192"*, i1)** %47, align 8
  call void %48(%"class.content::RenderFrameHost"* %0, %"class.base::internal::flat_tree.192"* nonnull dereferenceable(24) %4, i1 zeroext %2) #10
  %49 = getelementptr inbounds %"class.base::internal::flat_tree.192", %"class.base::internal::flat_tree.192"* %4, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.url::Origin"*, %"class.url::Origin"** %49, align 8
  %51 = icmp eq %"class.url::Origin"* %50, null
  br i1 %51, label %66, label %52

52:                                               ; preds = %42
  %53 = bitcast %"class.url::Origin"* %50 to i8*
  %54 = getelementptr inbounds %"class.base::internal::flat_tree.192", %"class.base::internal::flat_tree.192"* %4, i64 0, i32 0, i32 0, i32 1
  %55 = load %"class.url::Origin"*, %"class.url::Origin"** %54, align 8
  %56 = icmp eq %"class.url::Origin"* %55, %50
  br i1 %56, label %64, label %57

57:                                               ; preds = %52, %57
  %58 = phi %"class.url::Origin"* [ %59, %57 ], [ %55, %52 ]
  %59 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %58, i64 -1
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %59) #10
  %60 = icmp eq %"class.url::Origin"* %59, %50
  br i1 %60, label %61, label %57

61:                                               ; preds = %57
  %62 = bitcast %"class.base::internal::flat_tree.192"* %4 to i8**
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %61, %52
  %65 = phi i8* [ %63, %61 ], [ %53, %52 ]
  store %"class.url::Origin"* %50, %"class.url::Origin"** %54, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %42, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23URLLoaderFactoryManager39WillProgrammaticallyInjectContentScriptEN4base7PassKeyINS_20ContentScriptTrackerEEEPN7content15RenderFrameHostERKNS_9ExtensionE(%"class.content::RenderFrameHost"*, %"class.extensions::Extension"* dereferenceable(472)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.105", align 8
  %4 = alloca [1 x %"class.url::Origin"], align 8
  %5 = tail call zeroext i1 @_ZNK10extensions9Extension15is_platform_appEv(%"class.extensions::Extension"* %1) #10
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK10extensions9Extension15is_platform_appEv(%"class.extensions::Extension"* %1) #10
  br i1 %7, label %8, label %25

8:                                                ; preds = %2, %6
  %9 = bitcast %"class.std::__1::vector.105"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = bitcast [1 x %"class.url::Origin"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %10) #10
  %11 = getelementptr inbounds [1 x %"class.url::Origin"], [1 x %"class.url::Origin"]* %4, i64 0, i64 0
  %12 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 10
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %11, %class.GURL* dereferenceable(120) %12) #10
  %13 = call i8* @_Znwm(i64 80) #11
  %14 = bitcast i8* %13 to %"class.url::Origin"*
  %15 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %3, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::vector.105"* %3 to i8**
  store i8* %13, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 80
  %18 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.url::Origin"** %18 to i8**
  store i8* %17, i8** %19, align 8
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* nonnull %14, %"class.url::Origin"* nonnull dereferenceable(80) %11) #10
  %20 = getelementptr inbounds i8, i8* %13, i64 80
  %21 = bitcast %"class.url::Origin"** %15 to i64*
  %22 = ptrtoint i8* %20 to i64
  store i64 %22, i64* %21, align 8
  call fastcc void @_ZN10extensions12_GLOBAL__N_153MarkIsolatedWorldsAsRequiringSeparateURLLoaderFactoryEPN7content15RenderFrameHostERKNSt3__16vectorIN3url6OriginENS4_9allocatorIS7_EEEEb(%"class.content::RenderFrameHost"* %0, %"class.std::__1::vector.105"* nonnull dereferenceable(24) %3, i1 zeroext true)
  %23 = bitcast i8* %13 to %"class.url::Origin"*
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %23) #10
  call void @_ZdlPv(i8* nonnull %13) #11
  %24 = getelementptr inbounds [1 x %"class.url::Origin"], [1 x %"class.url::Origin"]* %4, i64 0, i64 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  br label %25

25:                                               ; preds = %6, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23URLLoaderFactoryManager30OverrideURLLoaderFactoryParamsEPN7content14BrowserContextERKN3url6OriginEbPN7network5mojom22URLLoaderFactoryParamsE(%"class.content::BrowserContext"*, %"class.url::Origin"* nocapture readonly dereferenceable(80), i1 zeroext, %"class.network::mojom::URLLoaderFactoryParams"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.url::SchemeHostPort", align 8
  %6 = tail call %"class.extensions::ExtensionRegistry"* @_ZN10extensions17ExtensionRegistry3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %0) #10
  %7 = bitcast %"class.url::SchemeHostPort"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 56, i1 false)
  %8 = bitcast %"class.url::Origin"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.url::Origin"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %13, i64 24, i1 false) #10
  br label %20

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %15, i8* %17, i64 %19) #10
  br label %20

20:                                               ; preds = %14, %12
  %21 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %5, i64 0, i32 1
  %22 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #10
  br label %35

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %32, i64 %34) #10
  br label %35

35:                                               ; preds = %27, %30
  %36 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %5, i64 0, i32 2
  %37 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 2
  %38 = load i16, i16* %37, align 8
  store i16 %38, i16* %36, align 8
  %39 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions16kExtensionSchemeE, i64 0, i64 0)) #10
  %40 = bitcast %"class.url::SchemeHostPort"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %42 to i64
  %47 = select i1 %43, i64 %45, i64 %46
  %48 = icmp eq i64 %39, %47
  br i1 %48, label %49, label %69

49:                                               ; preds = %35
  %50 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %5, i64 0, i32 0
  %51 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %50, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions16kExtensionSchemeE, i64 0, i64 0), i64 %39) #10
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %69

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.extensions::ExtensionRegistry", %"class.extensions::ExtensionRegistry"* %6, i64 0, i32 1
  %55 = call %"class.extensions::Extension"* @_ZNK10extensions12ExtensionSet7GetByIDERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionSet"* %54, %"class.std::__1::basic_string"* dereferenceable(24) %21) #10
  %56 = icmp eq %"class.extensions::Extension"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %53
  br i1 %2, label %58, label %66

58:                                               ; preds = %57
  %59 = call zeroext i1 @_ZNK10extensions9Extension15is_platform_appEv(%"class.extensions::Extension"* nonnull %55) #10
  br i1 %59, label %60, label %62

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.network::mojom::URLLoaderFactoryParams", %"class.network::mojom::URLLoaderFactoryParams"* %3, i64 0, i32 2
  store i8 0, i8* %61, align 8
  br label %62

62:                                               ; preds = %60, %58
  %63 = call zeroext i1 @_ZNK10extensions9Extension15is_platform_appEv(%"class.extensions::Extension"* nonnull %55) #10
  br i1 %63, label %64, label %69

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.network::mojom::URLLoaderFactoryParams", %"class.network::mojom::URLLoaderFactoryParams"* %3, i64 0, i32 3
  store i8 0, i8* %65, align 1
  br label %69

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.network::mojom::URLLoaderFactoryParams", %"class.network::mojom::URLLoaderFactoryParams"* %3, i64 0, i32 2
  store i8 0, i8* %67, align 8
  %68 = getelementptr inbounds %"class.network::mojom::URLLoaderFactoryParams", %"class.network::mojom::URLLoaderFactoryParams"* %3, i64 0, i32 4
  store i8 1, i8* %68, align 2
  br label %69

69:                                               ; preds = %49, %35, %66, %64, %62, %53
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #10
  ret void
}

declare %"class.extensions::ExtensionRegistry"* @_ZN10extensions17ExtensionRegistry3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.extensions::Extension"* @_ZNK10extensions12ExtensionSet7GetByIDERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionSet"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"*) unnamed_addr #2

declare zeroext i1 @_ZNK10extensions9Extension15is_platform_appEv(%"class.extensions::Extension"*) local_unnamed_addr #3

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeIN3url6OriginENS_8identityENSt3__14lessIvEENS5_6vectorIS3_NS5_9allocatorIS3_EEEEE15sort_and_uniqueENS5_11__wrap_iterIPS3_EESF_(%"class.base::internal::flat_tree.192"*, %"class.url::Origin"*, %"class.url::Origin"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare", align 1
  %5 = ptrtoint %"class.url::Origin"* %2 to i64
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare", %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"class.url::Origin"* %1 to i64
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 80
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 115292150460684697
  %13 = select i1 %12, i64 %9, i64 115292150460684697
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = mul i64 %15, 80
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #10
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"class.url::Origin"* %1, %"class.url::Origin"* %2, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.url::Origin"* null, i64 0) #10
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"class.url::Origin"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"class.url::Origin"* %1, %"class.url::Origin"* %2, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.url::Origin"* nonnull %24, i64 %15) #10
  call void @_ZdlPv(i8* nonnull %17) #11
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = icmp eq %"class.url::Origin"* %1, %2
  br i1 %26, label %59, label %27

27:                                               ; preds = %25, %31
  %28 = phi %"class.url::Origin"* [ %29, %31 ], [ %1, %25 ]
  %29 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %28, i64 1
  %30 = icmp eq %"class.url::Origin"* %29, %2
  br i1 %30, label %59, label %31

31:                                               ; preds = %27
  %32 = call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %28, %"class.url::Origin"* dereferenceable(80) %29) #10
  br i1 %32, label %27, label %33

33:                                               ; preds = %31
  %34 = ptrtoint %"class.url::Origin"* %28 to i64
  %35 = icmp eq %"class.url::Origin"* %28, %2
  br i1 %35, label %59, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %28, i64 2
  %38 = icmp eq %"class.url::Origin"* %37, %2
  br i1 %38, label %55, label %39

39:                                               ; preds = %36, %48
  %40 = phi %"class.url::Origin"* [ %52, %48 ], [ %28, %36 ]
  %41 = phi %"class.url::Origin"* [ %50, %48 ], [ %37, %36 ]
  %42 = phi i64 [ %49, %48 ], [ %34, %36 ]
  %43 = call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %40, %"class.url::Origin"* dereferenceable(80) %41) #10
  br i1 %43, label %44, label %48

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %40, i64 1
  %46 = ptrtoint %"class.url::Origin"* %45 to i64
  %47 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %45, %"class.url::Origin"* dereferenceable(80) %41) #10
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i64 [ %42, %39 ], [ %46, %44 ]
  %50 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %41, i64 1
  %51 = icmp eq %"class.url::Origin"* %50, %2
  %52 = inttoptr i64 %49 to %"class.url::Origin"*
  br i1 %51, label %53, label %39

53:                                               ; preds = %48
  %54 = inttoptr i64 %49 to %"class.url::Origin"*
  br label %55

55:                                               ; preds = %53, %36
  %56 = phi %"class.url::Origin"* [ %28, %36 ], [ %54, %53 ]
  %57 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %56, i64 1
  %58 = ptrtoint %"class.url::Origin"* %57 to i64
  br label %59

59:                                               ; preds = %27, %25, %33, %55
  %60 = phi i64 [ %58, %55 ], [ %34, %33 ], [ %5, %25 ], [ %5, %27 ]
  %61 = inttoptr i64 %60 to %"class.url::Origin"*
  %62 = icmp eq %"class.url::Origin"* %61, %2
  br i1 %62, label %85, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.base::internal::flat_tree.192", %"class.base::internal::flat_tree.192"* %0, i64 0, i32 0, i32 0, i32 1
  %65 = load %"class.url::Origin"*, %"class.url::Origin"** %64, align 8
  %66 = icmp eq %"class.url::Origin"* %65, %2
  br i1 %66, label %76, label %67

67:                                               ; preds = %63, %67
  %68 = phi %"class.url::Origin"* [ %72, %67 ], [ %61, %63 ]
  %69 = phi %"class.url::Origin"* [ %71, %67 ], [ %2, %63 ]
  %70 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %68, %"class.url::Origin"* dereferenceable(80) %69) #10
  %71 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %69, i64 1
  %72 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %68, i64 1
  %73 = icmp eq %"class.url::Origin"* %71, %65
  br i1 %73, label %74, label %67

74:                                               ; preds = %67
  %75 = load %"class.url::Origin"*, %"class.url::Origin"** %64, align 8
  br label %76

76:                                               ; preds = %74, %63
  %77 = phi %"class.url::Origin"* [ %2, %63 ], [ %75, %74 ]
  %78 = phi %"class.url::Origin"* [ %61, %63 ], [ %72, %74 ]
  %79 = icmp eq %"class.url::Origin"* %77, %78
  br i1 %79, label %84, label %80

80:                                               ; preds = %76, %80
  %81 = phi %"class.url::Origin"* [ %82, %80 ], [ %77, %76 ]
  %82 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %81, i64 -1
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %82) #10
  %83 = icmp eq %"class.url::Origin"* %82, %78
  br i1 %83, label %84, label %80

84:                                               ; preds = %80, %76
  store %"class.url::Origin"* %78, %"class.url::Origin"** %64, align 8
  br label %85

85:                                               ; preds = %59, %84
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"class.url::Origin"*, %"class.url::Origin"*, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1), i64, %"class.url::Origin"*, i64) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.url::Origin", align 8
  %8 = alloca %"class.url::Origin", align 8
  switch i64 %3, label %16 [
    i64 0, label %96
    i64 1, label %96
    i64 2, label %9
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 -1
  %11 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %0) #10
  br i1 %11, label %12, label %96

12:                                               ; preds = %9
  %13 = bitcast %"class.url::Origin"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 80, i1 false) #10
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* nonnull %8, %"class.url::Origin"* dereferenceable(80) %0) #10
  %14 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %0, %"class.url::Origin"* dereferenceable(80) %10) #10
  %15 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %10, %"class.url::Origin"* nonnull dereferenceable(80) %8) #10
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #10
  br label %96

16:                                               ; preds = %6
  %17 = icmp slt i64 %3, 1
  br i1 %17, label %18, label %40

18:                                               ; preds = %16
  %19 = icmp eq %"class.url::Origin"* %0, %1
  br i1 %19, label %96, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 1
  %22 = icmp eq %"class.url::Origin"* %21, %1
  br i1 %22, label %96, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.url::Origin"* %7 to i8*
  br label %25

25:                                               ; preds = %32, %23
  %26 = phi %"class.url::Origin"* [ %21, %23 ], [ %35, %32 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %24) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 80, i1 false) #10
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* nonnull %7, %"class.url::Origin"* dereferenceable(80) %26) #10
  %27 = icmp eq %"class.url::Origin"* %26, %0
  br i1 %27, label %32, label %28

28:                                               ; preds = %25, %37
  %29 = phi %"class.url::Origin"* [ %30, %37 ], [ %26, %25 ]
  %30 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %29, i64 -1
  %31 = call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* nonnull %7, %"class.url::Origin"* dereferenceable(80) %30) #10
  br i1 %31, label %37, label %32

32:                                               ; preds = %37, %28, %25
  %33 = phi %"class.url::Origin"* [ %0, %25 ], [ %29, %28 ], [ %0, %37 ]
  %34 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %33, %"class.url::Origin"* nonnull dereferenceable(80) %7) #10
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %24) #10
  %35 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %26, i64 1
  %36 = icmp eq %"class.url::Origin"* %35, %1
  br i1 %36, label %96, label %25

37:                                               ; preds = %28
  %38 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %29, %"class.url::Origin"* dereferenceable(80) %30) #10
  %39 = icmp eq %"class.url::Origin"* %30, %0
  br i1 %39, label %32, label %28

40:                                               ; preds = %16
  %41 = lshr i64 %3, 1
  %42 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 %41
  %43 = icmp sgt i64 %3, %5
  br i1 %43, label %94, label %44

44:                                               ; preds = %40
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(%"class.url::Origin"* %0, %"class.url::Origin"* %42, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1) %2, i64 %41, %"class.url::Origin"* %4)
  %45 = sub nsw i64 %3, %41
  %46 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 %41
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(%"class.url::Origin"* %42, %"class.url::Origin"* %1, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1) %2, i64 %45, %"class.url::Origin"* %46)
  %47 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 %3
  br label %50

48:                                               ; preds = %72
  %49 = icmp eq %"class.url::Origin"* %73, %47
  br i1 %49, label %84, label %77

50:                                               ; preds = %44, %72
  %51 = phi %"class.url::Origin"* [ %74, %72 ], [ %4, %44 ]
  %52 = phi %"class.url::Origin"* [ %73, %72 ], [ %46, %44 ]
  %53 = phi %"class.url::Origin"* [ %75, %72 ], [ %0, %44 ]
  %54 = icmp eq %"class.url::Origin"* %52, %47
  br i1 %54, label %55, label %64

55:                                               ; preds = %50
  %56 = icmp eq %"class.url::Origin"* %51, %46
  br i1 %56, label %84, label %57

57:                                               ; preds = %55, %57
  %58 = phi %"class.url::Origin"* [ %61, %57 ], [ %51, %55 ]
  %59 = phi %"class.url::Origin"* [ %62, %57 ], [ %53, %55 ]
  %60 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %59, %"class.url::Origin"* dereferenceable(80) %58) #10
  %61 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %58, i64 1
  %62 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %59, i64 1
  %63 = icmp eq %"class.url::Origin"* %61, %46
  br i1 %63, label %84, label %57

64:                                               ; preds = %50
  %65 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %52, %"class.url::Origin"* dereferenceable(80) %51) #10
  br i1 %65, label %66, label %69

66:                                               ; preds = %64
  %67 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %53, %"class.url::Origin"* dereferenceable(80) %52) #10
  %68 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %52, i64 1
  br label %72

69:                                               ; preds = %64
  %70 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %53, %"class.url::Origin"* dereferenceable(80) %51) #10
  %71 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %51, i64 1
  br label %72

72:                                               ; preds = %69, %66
  %73 = phi %"class.url::Origin"* [ %68, %66 ], [ %52, %69 ]
  %74 = phi %"class.url::Origin"* [ %51, %66 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %53, i64 1
  %76 = icmp eq %"class.url::Origin"* %74, %46
  br i1 %76, label %48, label %50

77:                                               ; preds = %48, %77
  %78 = phi %"class.url::Origin"* [ %81, %77 ], [ %73, %48 ]
  %79 = phi %"class.url::Origin"* [ %82, %77 ], [ %75, %48 ]
  %80 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %79, %"class.url::Origin"* dereferenceable(80) %78) #10
  %81 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %78, i64 1
  %82 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %79, i64 1
  %83 = icmp eq %"class.url::Origin"* %81, %47
  br i1 %83, label %84, label %77

84:                                               ; preds = %77, %57, %48, %55
  %85 = icmp eq %"class.url::Origin"* %4, null
  %86 = icmp eq i64 %3, 0
  %87 = or i1 %86, %85
  br i1 %87, label %96, label %88

88:                                               ; preds = %84, %88
  %89 = phi i64 [ %91, %88 ], [ 0, %84 ]
  %90 = phi %"class.url::Origin"* [ %92, %88 ], [ %4, %84 ]
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %90) #10
  %91 = add nuw i64 %89, 1
  %92 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %90, i64 1
  %93 = icmp eq i64 %91, %3
  br i1 %93, label %96, label %88

94:                                               ; preds = %40
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"class.url::Origin"* %0, %"class.url::Origin"* %42, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1) %2, i64 %41, %"class.url::Origin"* %4, i64 %5)
  %95 = sub nsw i64 %3, %41
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"class.url::Origin"* %42, %"class.url::Origin"* %1, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1) %2, i64 %95, %"class.url::Origin"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(%"class.url::Origin"* %0, %"class.url::Origin"* %42, %"class.url::Origin"* %1, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1) %2, i64 %41, i64 %95, %"class.url::Origin"* %4, i64 %5)
  br label %96

96:                                               ; preds = %88, %32, %84, %20, %18, %94, %9, %12, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeE(%"class.url::Origin"*, %"class.url::Origin"*, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1), i64, %"class.url::Origin"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %14 [
    i64 0, label %57
    i64 1, label %6
    i64 2, label %7
  ]

6:                                                ; preds = %5
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %4, %"class.url::Origin"* dereferenceable(80) %0) #10
  br label %57

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 -1
  %9 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %8, %"class.url::Origin"* dereferenceable(80) %0) #10
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %4, %"class.url::Origin"* dereferenceable(80) %8) #10
  %11 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 1
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %11, %"class.url::Origin"* dereferenceable(80) %0) #10
  br label %57

12:                                               ; preds = %7
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %4, %"class.url::Origin"* dereferenceable(80) %0) #10
  %13 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 1
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %13, %"class.url::Origin"* dereferenceable(80) %8) #10
  br label %57

14:                                               ; preds = %5
  %15 = icmp slt i64 %3, 9
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_PNS_15iterator_traitsISJ_E10value_typeET_(%"class.url::Origin"* %0, %"class.url::Origin"* %1, %"class.url::Origin"* %4, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1) %2)
  br label %57

17:                                               ; preds = %14
  %18 = lshr i64 %3, 1
  %19 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 %18
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"class.url::Origin"* %0, %"class.url::Origin"* %19, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1) %2, i64 %18, %"class.url::Origin"* %4, i64 %18)
  %20 = sub nsw i64 %3, %18
  %21 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 %18
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_T_NS_15iterator_traitsISJ_E15difference_typeEPNSM_10value_typeEl(%"class.url::Origin"* %19, %"class.url::Origin"* %1, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1) %2, i64 %20, %"class.url::Origin"* %21, i64 %20)
  %22 = icmp eq i64 %18, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %52, %17
  %24 = phi %"class.url::Origin"* [ %19, %17 ], [ %53, %52 ]
  %25 = phi %"class.url::Origin"* [ %4, %17 ], [ %55, %52 ]
  %26 = icmp eq %"class.url::Origin"* %24, %1
  br i1 %26, label %57, label %27

27:                                               ; preds = %23, %27
  %28 = phi %"class.url::Origin"* [ %31, %27 ], [ %25, %23 ]
  %29 = phi %"class.url::Origin"* [ %30, %27 ], [ %24, %23 ]
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %28, %"class.url::Origin"* dereferenceable(80) %29) #10
  %30 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %29, i64 1
  %31 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %28, i64 1
  %32 = icmp eq %"class.url::Origin"* %30, %1
  br i1 %32, label %57, label %27

33:                                               ; preds = %17, %52
  %34 = phi %"class.url::Origin"* [ %55, %52 ], [ %4, %17 ]
  %35 = phi %"class.url::Origin"* [ %54, %52 ], [ %0, %17 ]
  %36 = phi %"class.url::Origin"* [ %53, %52 ], [ %19, %17 ]
  %37 = icmp eq %"class.url::Origin"* %36, %1
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = icmp eq %"class.url::Origin"* %35, %19
  br i1 %39, label %57, label %40

40:                                               ; preds = %38, %40
  %41 = phi %"class.url::Origin"* [ %44, %40 ], [ %34, %38 ]
  %42 = phi %"class.url::Origin"* [ %43, %40 ], [ %35, %38 ]
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %41, %"class.url::Origin"* dereferenceable(80) %42) #10
  %43 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %42, i64 1
  %44 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %41, i64 1
  %45 = icmp eq %"class.url::Origin"* %43, %19
  br i1 %45, label %57, label %40

46:                                               ; preds = %33
  %47 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %36, %"class.url::Origin"* dereferenceable(80) %35) #10
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %34, %"class.url::Origin"* dereferenceable(80) %36) #10
  %49 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %36, i64 1
  br label %52

50:                                               ; preds = %46
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %34, %"class.url::Origin"* dereferenceable(80) %35) #10
  %51 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %35, i64 1
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi %"class.url::Origin"* [ %49, %48 ], [ %36, %50 ]
  %54 = phi %"class.url::Origin"* [ %35, %48 ], [ %51, %50 ]
  %55 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %34, i64 1
  %56 = icmp eq %"class.url::Origin"* %54, %19
  br i1 %56, label %23, label %33

57:                                               ; preds = %40, %27, %38, %23, %12, %10, %5, %16, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(%"class.url::Origin"*, %"class.url::Origin"*, %"class.url::Origin"*, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1), i64, i64, %"class.url::Origin"*, i64) local_unnamed_addr #0 comdat {
  %9 = alloca %"class.url::Origin", align 8
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %131, label %11

11:                                               ; preds = %8
  %12 = ptrtoint %"class.url::Origin"* %1 to i64
  %13 = ptrtoint %"class.url::Origin"* %0 to i64
  br label %14

14:                                               ; preds = %11, %124
  %15 = phi %"class.url::Origin"* [ %129, %124 ], [ %2, %11 ]
  %16 = phi i64 [ %128, %124 ], [ %4, %11 ]
  %17 = phi i64 [ %127, %124 ], [ %5, %11 ]
  %18 = phi i64 [ %126, %124 ], [ %12, %11 ]
  %19 = phi i64 [ %125, %124 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %27

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %131, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to %"class.url::Origin"*
  br label %30

27:                                               ; preds = %14
  %28 = inttoptr i64 %19 to %"class.url::Origin"*
  %29 = inttoptr i64 %18 to %"class.url::Origin"*
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeE(%"class.url::Origin"* %28, %"class.url::Origin"* %29, %"class.url::Origin"* %15, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1) %3, i64 %16, i64 %17, %"class.url::Origin"* %6)
  br label %131

30:                                               ; preds = %25, %35
  %31 = phi i64 [ %16, %25 ], [ %38, %35 ]
  %32 = phi i64 [ %19, %25 ], [ %37, %35 ]
  %33 = inttoptr i64 %32 to %"class.url::Origin"*
  %34 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %26, %"class.url::Origin"* dereferenceable(80) %33) #10
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %33, i64 1
  %37 = ptrtoint %"class.url::Origin"* %36 to i64
  %38 = add nsw i64 %31, -1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %131, label %30

40:                                               ; preds = %30
  %41 = inttoptr i64 %32 to %"class.url::Origin"*
  %42 = icmp slt i64 %31, %17
  br i1 %42, label %43, label %68

43:                                               ; preds = %40
  %44 = sdiv i64 %17, 2
  %45 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %26, i64 %44
  %46 = ptrtoint %"class.url::Origin"* %45 to i64
  %47 = sub i64 %18, %32
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %43
  %50 = sdiv exact i64 %47, 80
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi %"class.url::Origin"* [ %61, %51 ], [ %41, %49 ]
  %53 = phi i64 [ %60, %51 ], [ %50, %49 ]
  %54 = lshr i64 %53, 1
  %55 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %52, i64 %54
  %56 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %45, %"class.url::Origin"* dereferenceable(80) %55) #10
  %57 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %55, i64 1
  %58 = xor i64 %54, -1
  %59 = add i64 %53, %58
  %60 = select i1 %56, i64 %54, i64 %59
  %61 = select i1 %56, %"class.url::Origin"* %52, %"class.url::Origin"* %57
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %63, label %51

63:                                               ; preds = %51, %43
  %64 = phi %"class.url::Origin"* [ %41, %43 ], [ %61, %51 ]
  %65 = ptrtoint %"class.url::Origin"* %64 to i64
  %66 = sub i64 %65, %32
  %67 = sdiv exact i64 %66, 80
  br label %102

68:                                               ; preds = %40
  %69 = icmp eq i64 %31, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %68
  %71 = inttoptr i64 %18 to %"class.url::Origin"*
  %72 = inttoptr i64 %32 to %"class.url::Origin"*
  %73 = bitcast %"class.url::Origin"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %73) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 80, i1 false) #10
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* nonnull %9, %"class.url::Origin"* dereferenceable(80) %72) #10
  %74 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %72, %"class.url::Origin"* dereferenceable(80) %71) #10
  %75 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %71, %"class.url::Origin"* nonnull dereferenceable(80) %9) #10
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %73) #10
  br label %131

76:                                               ; preds = %68
  %77 = sdiv i64 %31, 2
  %78 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %41, i64 %77
  %79 = ptrtoint %"class.url::Origin"* %78 to i64
  %80 = ptrtoint %"class.url::Origin"* %15 to i64
  %81 = sub i64 %80, %18
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %97, label %83

83:                                               ; preds = %76
  %84 = sdiv exact i64 %81, 80
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi %"class.url::Origin"* [ %95, %85 ], [ %26, %83 ]
  %87 = phi i64 [ %94, %85 ], [ %84, %83 ]
  %88 = lshr i64 %87, 1
  %89 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %86, i64 %88
  %90 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %89, %"class.url::Origin"* dereferenceable(80) %78) #10
  %91 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %89, i64 1
  %92 = xor i64 %88, -1
  %93 = add i64 %87, %92
  %94 = select i1 %90, i64 %93, i64 %88
  %95 = select i1 %90, %"class.url::Origin"* %91, %"class.url::Origin"* %86
  %96 = icmp eq i64 %94, 0
  br i1 %96, label %97, label %85

97:                                               ; preds = %85, %76
  %98 = phi %"class.url::Origin"* [ %26, %76 ], [ %95, %85 ]
  %99 = ptrtoint %"class.url::Origin"* %98 to i64
  %100 = sub i64 %99, %18
  %101 = sdiv exact i64 %100, 80
  br label %102

102:                                              ; preds = %97, %63
  %103 = phi i64 [ %65, %63 ], [ %79, %97 ]
  %104 = phi i64 [ %46, %63 ], [ %99, %97 ]
  %105 = phi i64 [ %44, %63 ], [ %101, %97 ]
  %106 = phi i64 [ %67, %63 ], [ %77, %97 ]
  %107 = sub nsw i64 %31, %106
  %108 = sub nsw i64 %17, %105
  %109 = inttoptr i64 %103 to %"class.url::Origin"*
  %110 = inttoptr i64 %104 to %"class.url::Origin"*
  %111 = icmp eq %"class.url::Origin"* %109, %26
  br i1 %111, label %116, label %112

112:                                              ; preds = %102
  %113 = icmp eq %"class.url::Origin"* %26, %110
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = tail call %"class.url::Origin"* @_ZNSt3__116__rotate_forwardINS_11__wrap_iterIPN3url6OriginEEEEET_S6_S6_S6_(%"class.url::Origin"* %109, %"class.url::Origin"* %26, %"class.url::Origin"* %110) #10
  br label %116

116:                                              ; preds = %102, %112, %114
  %117 = phi %"class.url::Origin"* [ %115, %114 ], [ %109, %112 ], [ %110, %102 ]
  %118 = add nsw i64 %106, %105
  %119 = add nsw i64 %107, %108
  %120 = icmp slt i64 %118, %119
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  %122 = ptrtoint %"class.url::Origin"* %117 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(%"class.url::Origin"* %41, %"class.url::Origin"* %109, %"class.url::Origin"* %117, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1) %3, i64 %106, i64 %105, %"class.url::Origin"* %6, i64 %7)
  br label %124

123:                                              ; preds = %116
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeEl(%"class.url::Origin"* %117, %"class.url::Origin"* %110, %"class.url::Origin"* %15, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1) %3, i64 %107, i64 %108, %"class.url::Origin"* %6, i64 %7)
  br label %124

124:                                              ; preds = %121, %123
  %125 = phi i64 [ %122, %121 ], [ %32, %123 ]
  %126 = phi i64 [ %104, %121 ], [ %103, %123 ]
  %127 = phi i64 [ %108, %121 ], [ %105, %123 ]
  %128 = phi i64 [ %107, %121 ], [ %106, %123 ]
  %129 = phi %"class.url::Origin"* [ %15, %121 ], [ %117, %123 ]
  %130 = icmp eq i64 %127, 0
  br i1 %130, label %131, label %14

131:                                              ; preds = %124, %23, %35, %8, %70, %27
  ret void
}

declare zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_PNS_15iterator_traitsISJ_E10value_typeET_(%"class.url::Origin"*, %"class.url::Origin"*, %"class.url::Origin"*, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"class.url::Origin"* %0, %1
  br i1 %5, label %30, label %6

6:                                                ; preds = %4
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %2, %"class.url::Origin"* dereferenceable(80) %0) #10
  %7 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 1
  %8 = icmp eq %"class.url::Origin"* %7, %1
  br i1 %8, label %30, label %9

9:                                                ; preds = %6, %27
  %10 = phi %"class.url::Origin"* [ %28, %27 ], [ %7, %6 ]
  %11 = phi %"class.url::Origin"* [ %12, %27 ], [ %2, %6 ]
  %12 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %11, i64 1
  %13 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %11) #10
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %12, %"class.url::Origin"* dereferenceable(80) %11) #10
  %15 = icmp eq %"class.url::Origin"* %11, %2
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"class.url::Origin"* [ %18, %20 ], [ %11, %14 ]
  %18 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %17, i64 -1
  %19 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %10, %"class.url::Origin"* dereferenceable(80) %18) #10
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %17, %"class.url::Origin"* dereferenceable(80) %18) #10
  %22 = icmp eq %"class.url::Origin"* %18, %2
  br i1 %22, label %23, label %16

23:                                               ; preds = %16, %20, %14
  %24 = phi %"class.url::Origin"* [ %2, %14 ], [ %2, %20 ], [ %17, %16 ]
  %25 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %24, %"class.url::Origin"* dereferenceable(80) %10) #10
  br label %27

26:                                               ; preds = %9
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %12, %"class.url::Origin"* dereferenceable(80) %10) #10
  br label %27

27:                                               ; preds = %26, %23
  %28 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %10, i64 1
  %29 = icmp eq %"class.url::Origin"* %28, %1
  br i1 %29, label %30, label %9

30:                                               ; preds = %27, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeIN3url6OriginENS1_8identityENS_4lessIvEENS_6vectorIS5_NS_9allocatorIS5_EEEEE13value_compareENS_11__wrap_iterIPS5_EEEEvT0_SJ_SJ_T_NS_15iterator_traitsISJ_E15difference_typeESN_PNSM_10value_typeE(%"class.url::Origin"*, %"class.url::Origin"*, %"class.url::Origin"*, %"struct.base::internal::flat_tree<url::Origin, base::identity, std::__1::less<void>, std::__1::vector<url::Origin, std::__1::allocator<url::Origin> > >::value_compare"* dereferenceable(1), i64, i64, %"class.url::Origin"*) local_unnamed_addr #0 comdat {
  %8 = icmp sgt i64 %4, %5
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  %10 = icmp eq %"class.url::Origin"* %0, %1
  br i1 %10, label %91, label %40

11:                                               ; preds = %7
  %12 = icmp eq %"class.url::Origin"* %1, %2
  br i1 %12, label %91, label %72

13:                                               ; preds = %40
  %14 = icmp eq %"class.url::Origin"* %46, %6
  br i1 %14, label %80, label %15

15:                                               ; preds = %13, %35
  %16 = phi %"class.url::Origin"* [ %37, %35 ], [ %6, %13 ]
  %17 = phi %"class.url::Origin"* [ %38, %35 ], [ %0, %13 ]
  %18 = phi %"class.url::Origin"* [ %36, %35 ], [ %1, %13 ]
  %19 = icmp eq %"class.url::Origin"* %18, %2
  br i1 %19, label %20, label %27

20:                                               ; preds = %15, %20
  %21 = phi %"class.url::Origin"* [ %25, %20 ], [ %17, %15 ]
  %22 = phi %"class.url::Origin"* [ %24, %20 ], [ %16, %15 ]
  %23 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %21, %"class.url::Origin"* dereferenceable(80) %22) #10
  %24 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %22, i64 1
  %25 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %21, i64 1
  %26 = icmp eq %"class.url::Origin"* %22, %41
  br i1 %26, label %80, label %20

27:                                               ; preds = %15
  %28 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %18, %"class.url::Origin"* dereferenceable(80) %16) #10
  br i1 %28, label %29, label %32

29:                                               ; preds = %27
  %30 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %17, %"class.url::Origin"* dereferenceable(80) %18) #10
  %31 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %18, i64 1
  br label %35

32:                                               ; preds = %27
  %33 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %17, %"class.url::Origin"* dereferenceable(80) %16) #10
  %34 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %16, i64 1
  br label %35

35:                                               ; preds = %32, %29
  %36 = phi %"class.url::Origin"* [ %31, %29 ], [ %18, %32 ]
  %37 = phi %"class.url::Origin"* [ %16, %29 ], [ %34, %32 ]
  %38 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %17, i64 1
  %39 = icmp eq %"class.url::Origin"* %37, %46
  br i1 %39, label %80, label %15

40:                                               ; preds = %9, %40
  %41 = phi %"class.url::Origin"* [ %46, %40 ], [ %6, %9 ]
  %42 = phi %"class.url::Origin"* [ %45, %40 ], [ %0, %9 ]
  %43 = phi i64 [ %44, %40 ], [ 0, %9 ]
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %41, %"class.url::Origin"* dereferenceable(80) %42) #10
  %44 = add i64 %43, 1
  %45 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %42, i64 1
  %46 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %41, i64 1
  %47 = icmp eq %"class.url::Origin"* %45, %1
  br i1 %47, label %13, label %40

48:                                               ; preds = %72
  %49 = icmp eq %"class.url::Origin"* %78, %6
  br i1 %49, label %80, label %50

50:                                               ; preds = %48, %62
  %51 = phi %"class.url::Origin"* [ %66, %62 ], [ %2, %48 ]
  %52 = phi %"class.url::Origin"* [ %69, %62 ], [ %78, %48 ]
  %53 = phi %"class.url::Origin"* [ %68, %62 ], [ %1, %48 ]
  %54 = icmp eq %"class.url::Origin"* %53, %0
  br i1 %54, label %55, label %62

55:                                               ; preds = %50, %55
  %56 = phi %"class.url::Origin"* [ %58, %55 ], [ %52, %50 ]
  %57 = phi %"class.url::Origin"* [ %59, %55 ], [ %51, %50 ]
  %58 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %56, i64 -1
  %59 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %57, i64 -1
  %60 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %59, %"class.url::Origin"* dereferenceable(80) %58) #10
  %61 = icmp eq %"class.url::Origin"* %58, %6
  br i1 %61, label %80, label %55

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %53, i64 -1
  %64 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %52, i64 -1
  %65 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %64, %"class.url::Origin"* dereferenceable(80) %63) #10
  %66 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %51, i64 -1
  %67 = select i1 %65, %"class.url::Origin"* %63, %"class.url::Origin"* %64
  %68 = select i1 %65, %"class.url::Origin"* %63, %"class.url::Origin"* %53
  %69 = select i1 %65, %"class.url::Origin"* %52, %"class.url::Origin"* %64
  %70 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %66, %"class.url::Origin"* dereferenceable(80) %67) #10
  %71 = icmp eq %"class.url::Origin"* %69, %6
  br i1 %71, label %80, label %50

72:                                               ; preds = %11, %72
  %73 = phi %"class.url::Origin"* [ %78, %72 ], [ %6, %11 ]
  %74 = phi %"class.url::Origin"* [ %77, %72 ], [ %1, %11 ]
  %75 = phi i64 [ %76, %72 ], [ 0, %11 ]
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %73, %"class.url::Origin"* dereferenceable(80) %74) #10
  %76 = add i64 %75, 1
  %77 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %74, i64 1
  %78 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %73, i64 1
  %79 = icmp eq %"class.url::Origin"* %77, %2
  br i1 %79, label %48, label %72

80:                                               ; preds = %35, %20, %62, %55, %48, %13
  %81 = phi i64 [ %44, %13 ], [ %76, %48 ], [ %76, %55 ], [ %76, %62 ], [ %44, %20 ], [ %44, %35 ]
  %82 = icmp eq %"class.url::Origin"* %6, null
  %83 = icmp eq i64 %81, 0
  %84 = or i1 %82, %83
  br i1 %84, label %91, label %85

85:                                               ; preds = %80, %85
  %86 = phi i64 [ %88, %85 ], [ 0, %80 ]
  %87 = phi %"class.url::Origin"* [ %89, %85 ], [ %6, %80 ]
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %87) #10
  %88 = add nuw i64 %86, 1
  %89 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %87, i64 1
  %90 = icmp eq i64 %88, %81
  br i1 %90, label %91, label %85

91:                                               ; preds = %85, %11, %9, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.url::Origin"* @_ZNSt3__116__rotate_forwardINS_11__wrap_iterIPN3url6OriginEEEEET_S6_S6_S6_(%"class.url::Origin"*, %"class.url::Origin"*, %"class.url::Origin"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.url::Origin", align 8
  %5 = alloca %"class.url::Origin", align 8
  %6 = ptrtoint %"class.url::Origin"* %1 to i64
  %7 = bitcast %"class.url::Origin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 80, i1 false) #10
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* nonnull %4, %"class.url::Origin"* dereferenceable(80) %0) #10
  %8 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %0, %"class.url::Origin"* dereferenceable(80) %1) #10
  %9 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %1, %"class.url::Origin"* nonnull dereferenceable(80) %4) #10
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #10
  %10 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 1
  %11 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 1
  %12 = icmp eq %"class.url::Origin"* %11, %2
  br i1 %12, label %29, label %13

13:                                               ; preds = %3, %13
  %14 = phi %"class.url::Origin"* [ %26, %13 ], [ %1, %3 ]
  %15 = phi %"class.url::Origin"* [ %24, %13 ], [ %11, %3 ]
  %16 = phi %"class.url::Origin"* [ %23, %13 ], [ %10, %3 ]
  %17 = phi i64 [ %20, %13 ], [ %6, %3 ]
  %18 = ptrtoint %"class.url::Origin"* %15 to i64
  %19 = icmp eq %"class.url::Origin"* %16, %14
  %20 = select i1 %19, i64 %18, i64 %17
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 80, i1 false) #10
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* nonnull %4, %"class.url::Origin"* dereferenceable(80) %16) #10
  %21 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %16, %"class.url::Origin"* dereferenceable(80) %15) #10
  %22 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %15, %"class.url::Origin"* nonnull dereferenceable(80) %4) #10
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #10
  %23 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %16, i64 1
  %24 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %15, i64 1
  %25 = icmp eq %"class.url::Origin"* %24, %2
  %26 = inttoptr i64 %20 to %"class.url::Origin"*
  br i1 %25, label %27, label %13

27:                                               ; preds = %13
  %28 = inttoptr i64 %20 to %"class.url::Origin"*
  br label %29

29:                                               ; preds = %27, %3
  %30 = phi i64 [ %6, %3 ], [ %20, %27 ]
  %31 = phi %"class.url::Origin"* [ %10, %3 ], [ %23, %27 ]
  %32 = phi %"class.url::Origin"* [ %1, %3 ], [ %28, %27 ]
  %33 = icmp eq %"class.url::Origin"* %31, %32
  br i1 %33, label %55, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %30 to %"class.url::Origin"*
  %36 = bitcast %"class.url::Origin"* %5 to i8*
  br label %37

37:                                               ; preds = %52, %34
  %38 = phi i64 [ %54, %52 ], [ %30, %34 ]
  %39 = phi %"class.url::Origin"* [ %47, %52 ], [ %31, %34 ]
  %40 = phi %"class.url::Origin"* [ %48, %52 ], [ %35, %34 ]
  %41 = inttoptr i64 %38 to %"class.url::Origin"*
  br label %42

42:                                               ; preds = %37, %51
  %43 = phi %"class.url::Origin"* [ %47, %51 ], [ %39, %37 ]
  %44 = phi %"class.url::Origin"* [ %41, %51 ], [ %40, %37 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %36) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 80, i1 false) #10
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* nonnull %5, %"class.url::Origin"* dereferenceable(80) %43) #10
  %45 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %43, %"class.url::Origin"* dereferenceable(80) %44) #10
  %46 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %44, %"class.url::Origin"* nonnull dereferenceable(80) %5) #10
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %36) #10
  %47 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %43, i64 1
  %48 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %44, i64 1
  %49 = icmp eq %"class.url::Origin"* %48, %2
  %50 = icmp eq %"class.url::Origin"* %47, %41
  br i1 %49, label %51, label %52

51:                                               ; preds = %42
  br i1 %50, label %55, label %42

52:                                               ; preds = %42
  %53 = ptrtoint %"class.url::Origin"* %48 to i64
  %54 = select i1 %50, i64 %53, i64 %38
  br label %37

55:                                               ; preds = %51, %29
  ret %"class.url::Origin"* %31
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3url6OriginENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.105"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.url::Origin"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.105"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 80
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 230584300921369395
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.105"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.url::Origin"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 80
  %20 = icmp ult i64 %19, 115292150460684697
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 230584300921369395, %14 ]
  %28 = mul i64 %27, 80
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.url::Origin"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.url::Origin"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %33, i64 %9
  %35 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %33, i64 %32
  %36 = ptrtoint %"class.url::Origin"* %35 to i64
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %34, %"class.url::Origin"* dereferenceable(80) %1) #10
  %37 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %34, i64 1
  %38 = ptrtoint %"class.url::Origin"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.url::Origin"*, %"class.url::Origin"** %39, align 8
  %41 = load %"class.url::Origin"*, %"class.url::Origin"** %3, align 8
  %42 = icmp eq %"class.url::Origin"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.url::Origin"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.url::Origin"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.url::Origin"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %46, i64 -1
  %49 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %47, i64 -1
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %48, %"class.url::Origin"* dereferenceable(80) %49) #10
  %50 = icmp eq %"class.url::Origin"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.url::Origin"*, %"class.url::Origin"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.url::Origin"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.url::Origin"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.url::Origin"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.url::Origin"*
  %60 = icmp eq %"class.url::Origin"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.url::Origin"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %62, i64 -1
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %63) #10
  %64 = icmp eq %"class.url::Origin"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
