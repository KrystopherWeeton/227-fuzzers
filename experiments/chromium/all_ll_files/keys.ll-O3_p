; ModuleID = '../../v8/src/objects/keys.cc'
source_filename = "../../v8/src/objects/keys.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::ElementsAccessor" = type { i32 (...)** }
%"struct.std::__1::atomic.1197" = type { %"struct.std::__1::__atomic_base.1198" }
%"struct.std::__1::__atomic_base.1198" = type { %"struct.std::__1::__atomic_base.1199" }
%"struct.std::__1::__atomic_base.1199" = type { %"struct.std::__1::__cxx_atomic_impl.1200" }
%"struct.std::__1::__cxx_atomic_impl.1200" = type { %"struct.std::__1::__cxx_atomic_base_impl.1201" }
%"struct.std::__1::__cxx_atomic_base_impl.1201" = type { i32 }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.542" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.140", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.20", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.20", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.20", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.20", i64, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.30", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.162", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.20", i64, i8, %"struct.std::__1::atomic.20", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.166", %"class.std::__1::vector.166", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::shared_ptr.481", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.504", %"class.std::__1::unique_ptr.530", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.536", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.549", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.331", i8, [7 x i8], %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.581", %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.605", %"class.std::__1::vector.633", i8, %"class.std::__1::unique_ptr.640", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.3", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.17", [4 x i8] }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.646", %"class.std::__1::unique_ptr.667", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.677", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.816", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.829", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.839", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.850", %"struct.std::__1::atomic.153", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.925", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.968"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.980", i32, i8, i8, i32, i32, %"class.std::__1::vector.986", %"class.std::__1::vector.986", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.993", i64, %"class.std::__1::unordered_map.994", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.542", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.161", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1050", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1088", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1122", %"class.std::__1::vector.1126", %"class.std::__1::vector.1126", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.0", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type { %"class.v8::internal::Isolate"*, i64, %"class.v8::internal::ExternalCallbackScope"* }
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.646" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.140", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.661" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.650" }
%"class.std::__1::vector.650" = type { %"class.std::__1::__vector_base.651" }
%"class.std::__1::__vector_base.651" = type { %"class.std::__1::unique_ptr.652"*, %"class.std::__1::unique_ptr.652"*, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.std::__1::unique_ptr.652"* }
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.670", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.670" = type { %"struct.std::__1::__atomic_base.671" }
%"struct.std::__1::__atomic_base.671" = type { %"struct.std::__1::__cxx_atomic_impl.672" }
%"struct.std::__1::__cxx_atomic_impl.672" = type { %"struct.std::__1::__cxx_atomic_base_impl.673" }
%"struct.std::__1::__cxx_atomic_base_impl.673" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.677" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.678", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.678" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.679", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type opaque
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.687", %"class.std::__1::unique_ptr.693", %"struct.std::__1::atomic.153", %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::set.729", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.729" = type { %"class.std::__1::__tree.730" }
%"class.std::__1::__tree.730" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.731", %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.745", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.752", %"class.v8::internal::DetachableVector.751", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.752" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.std::__1::unique_ptr.739", %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.485", %"class.std::__1::set.493" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.485" = type { %"class.std::__1::__tree.486" }
%"class.std::__1::__tree.486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::set.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.753", %"class.std::__1::vector.759", %"class.std::__1::unique_ptr.766", %"class.std::__1::vector.773", %"class.std::__1::unique_ptr.780", i64, %"class.std::__1::vector.786", %"class.std::__1::vector.794", %"class.std::__1::vector.802", i8, i8, i32 }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.759" = type { %"class.std::__1::__vector_base.760" }
%"class.std::__1::__vector_base.760" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.761" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.v8::internal::GlobalHandles::NodeSpace.769"* }
%"class.v8::internal::GlobalHandles::NodeSpace.769" = type opaque
%"class.std::__1::vector.773" = type { %"class.std::__1::__vector_base.774" }
%"class.std::__1::__vector_base.774" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.775" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.786" = type { %"class.std::__1::__vector_base.787" }
%"class.std::__1::__vector_base.787" = type { %"struct.std::__1::pair.788"*, %"struct.std::__1::pair.788"*, %"class.std::__1::__compressed_pair.789" }
%"struct.std::__1::pair.788" = type opaque
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"struct.std::__1::pair.788"* }
%"class.std::__1::vector.794" = type { %"class.std::__1::__vector_base.795" }
%"class.std::__1::__vector_base.795" = type { %"struct.std::__1::pair.796"*, %"struct.std::__1::pair.796"*, %"class.std::__1::__compressed_pair.797" }
%"struct.std::__1::pair.796" = type opaque
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"struct.std::__1::pair.796"* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.804" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.809", %"class.std::__1::vector.816" }
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { i64**, i64**, %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.823" }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { i32*, i32*, %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.829" = type { %"struct.std::__1::__atomic_base.830" }
%"struct.std::__1::__atomic_base.830" = type { %"struct.std::__1::__cxx_atomic_impl.831" }
%"struct.std::__1::__cxx_atomic_impl.831" = type { %"struct.std::__1::__cxx_atomic_base_impl.832" }
%"struct.std::__1::__cxx_atomic_base_impl.832" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.839" = type { %"struct.std::__1::__atomic_base.840" }
%"struct.std::__1::__atomic_base.840" = type { %"struct.std::__1::__cxx_atomic_impl.841" }
%"struct.std::__1::__cxx_atomic_impl.841" = type { %"struct.std::__1::__cxx_atomic_base_impl.842" }
%"struct.std::__1::__cxx_atomic_base_impl.842" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.846 }
%union.anon.846 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.850" = type { %"class.std::__1::__hash_table.851" }
%"class.std::__1::__hash_table.851" = type <{ %"class.std::__1::unique_ptr.852", %"class.std::__1::__compressed_pair.862", %"class.std::__1::__compressed_pair.867", %"class.std::__1::__compressed_pair.870", [4 x i8] }>
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854", %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::__hash_node_base.855"** }
%"struct.std::__1::__hash_node_base.855" = type { %"struct.std::__1::__hash_node_base.855"* }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.std::__1::__bucket_list_deallocator.857" }
%"class.std::__1::__bucket_list_deallocator.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"struct.std::__1::__hash_node_base.855" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__cxx_atomic_impl.155" }
%"struct.std::__1::__cxx_atomic_impl.155" = type { %"struct.std::__1::__cxx_atomic_base_impl.156" }
%"struct.std::__1::__cxx_atomic_base_impl.156" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.876", %"class.v8::internal::Handle.882", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.883", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.883" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.884", %"class.std::__1::vector.890", %"class.std::__1::unique_ptr.898", %"class.std::__1::unique_ptr.904", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.910", %"class.std::__1::vector.916", %"struct.std::__1::pair.924" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.890" = type { %"class.std::__1::__vector_base.891" }
%"class.std::__1::__vector_base.891" = type { %"class.std::__1::unique_ptr.892"*, %"class.std::__1::unique_ptr.892"*, %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::unique_ptr.892" = type opaque
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.std::__1::unique_ptr.892"* }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.916" = type { %"class.std::__1::__vector_base.917" }
%"class.std::__1::__vector_base.917" = type { %"struct.std::__1::pair.918"*, %"struct.std::__1::pair.918"*, %"class.std::__1::__compressed_pair.919" }
%"struct.std::__1::pair.918" = type opaque
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"struct.std::__1::pair.918"* }
%"struct.std::__1::pair.924" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.1"*, i16, i8*)*, i8* }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.928", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.928" = type { %"class.std::__1::__hash_table.929" }
%"class.std::__1::__hash_table.929" = type <{ %"class.std::__1::unique_ptr.930", %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.945", %"class.std::__1::__compressed_pair.949", [4 x i8] }>
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932", %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.std::__1::__hash_node_base.933"** }
%"struct.std::__1::__hash_node_base.933" = type { %"struct.std::__1::__hash_node_base.933"* }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.std::__1::__bucket_list_deallocator.935" }
%"class.std::__1::__bucket_list_deallocator.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"struct.std::__1::__hash_node_base.933" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.963" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.957"**, %"struct.std::__1::pair.957"**, %"struct.std::__1::pair.957"**, %"class.std::__1::__compressed_pair.958" }
%"struct.std::__1::pair.957" = type opaque
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.std::__1::pair.957"** }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.968" = type { %"class.std::__1::__vector_base.969" }
%"class.std::__1::__vector_base.969" = type { %"class.v8::internal::Handle.970"*, %"class.v8::internal::Handle.970"*, %"class.std::__1::__compressed_pair.971" }
%"class.v8::internal::Handle.970" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.v8::internal::Handle.970"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.976" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.976" = type { %"class.std::__1::__vector_base.977" }
%"class.std::__1::__vector_base.977" = type { %"struct.std::__1::pair.957"*, %"struct.std::__1::pair.957"*, %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"struct.std::__1::pair.957"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.834", i32, %"class.v8::Local.1" }
%"class.v8::Local.834" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.809", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.986" = type { %"class.std::__1::__vector_base.987" }
%"class.std::__1::__vector_base.987" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.993" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.994" = type { %"class.std::__1::__hash_table.995" }
%"class.std::__1::__hash_table.995" = type <{ %"class.std::__1::unique_ptr.996", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1011", %"class.std::__1::__compressed_pair.1014", [4 x i8] }>
%"class.std::__1::unique_ptr.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998", %"struct.std::__1::__compressed_pair_elem.1000" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"struct.std::__1::__hash_node_base.999"** }
%"struct.std::__1::__hash_node_base.999" = type { %"struct.std::__1::__hash_node_base.999"* }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"class.std::__1::__bucket_list_deallocator.1001" }
%"class.std::__1::__bucket_list_deallocator.1001" = type { %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"struct.std::__1::__hash_node_base.999" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.161" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1018", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1047", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1048", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1018" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1043, %union.anon.1045, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1043 = type { i64 }
%union.anon.1045 = type { i64 }
%"class.std::__1::weak_ptr.1047" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.20", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.161" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1048" = type { %"class.v8::PersistentBase.1049" }
%"class.v8::PersistentBase.1049" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1019", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1019" = type { %"class.std::__1::__hash_table.1020" }
%"class.std::__1::__hash_table.1020" = type <{ %"class.std::__1::unique_ptr.1021", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1036", %"class.std::__1::__compressed_pair.1039", [4 x i8] }>
%"class.std::__1::unique_ptr.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023", %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"struct.std::__1::__hash_node_base.1024"** }
%"struct.std::__1::__hash_node_base.1024" = type { %"struct.std::__1::__hash_node_base.1024"* }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.std::__1::__bucket_list_deallocator.1026" }
%"class.std::__1::__bucket_list_deallocator.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.1032" }
%"struct.std::__1::__compressed_pair_elem.1032" = type { %"struct.std::__1::__hash_node_base.1024" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1079", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1055", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1059", %"class.std::__1::unique_ptr.1065", %"class.std::__1::unique_ptr.475", %"class.std::__1::vector.1071", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1055" = type { %"struct.std::__1::__atomic_base.1056" }
%"struct.std::__1::__atomic_base.1056" = type { %"struct.std::__1::__cxx_atomic_impl.1057" }
%"struct.std::__1::__cxx_atomic_impl.1057" = type { %"struct.std::__1::__cxx_atomic_base_impl.1058" }
%"struct.std::__1::__cxx_atomic_base_impl.1058" = type { i32 }
%"class.std::__1::unique_ptr.1059" = type { %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.809" }
%"class.std::__1::unique_ptr.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1071" = type { %"class.std::__1::__vector_base.1072" }
%"class.std::__1::__vector_base.1072" = type { %"struct.std::__1::pair.1073"*, %"struct.std::__1::pair.1073"*, %"class.std::__1::__compressed_pair.1074" }
%"struct.std::__1::pair.1073" = type opaque
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %"struct.std::__1::pair.1073"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.20"*, %"class.std::__1::unique_ptr.98" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.39", %"class.std::__1::vector.39", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.41" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.46" }
%"class.std::__1::__hash_table.46" = type <{ %"class.std::__1::unique_ptr.47", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base.50"** }
%"struct.std::__1::__hash_node_base.50" = type { %"struct.std::__1::__hash_node_base.50"* }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__bucket_list_deallocator.52" }
%"class.std::__1::__bucket_list_deallocator.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.50" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.25", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.87", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.20"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.25", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.69", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.75" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.91", i8, [7 x i8] }>
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i64*, i64*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.20", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1079" = type { %"class.std::__1::__compressed_pair.1080" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.835", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.835" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1096" }
%"class.std::__1::unordered_map.1096" = type { %"class.std::__1::__hash_table.1097" }
%"class.std::__1::__hash_table.1097" = type <{ %"class.std::__1::unique_ptr.1098", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1113", %"class.std::__1::__compressed_pair.1116", [4 x i8] }>
%"class.std::__1::unique_ptr.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100", %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"struct.std::__1::__hash_node_base.1101"** }
%"struct.std::__1::__hash_node_base.1101" = type { %"struct.std::__1::__hash_node_base.1101"* }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"class.std::__1::__bucket_list_deallocator.1103" }
%"class.std::__1::__bucket_list_deallocator.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"struct.std::__1::__hash_node_base.1101" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.1122" = type { %"struct.std::__1::__atomic_base.1123" }
%"struct.std::__1::__atomic_base.1123" = type { %"struct.std::__1::__cxx_atomic_impl.1124" }
%"struct.std::__1::__cxx_atomic_impl.1124" = type { %"struct.std::__1::__cxx_atomic_base_impl.1125" }
%"struct.std::__1::__cxx_atomic_base_impl.1125" = type { %"class.std::__1::vector.1126"* }
%"class.std::__1::vector.1126" = type { %"class.std::__1::__vector_base.1127" }
%"class.std::__1::__vector_base.1127" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1128" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.104" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.std::__1::pair.106"*, %"struct.std::__1::pair.106"*, %"class.std::__1::__compressed_pair.107" }
%"struct.std::__1::pair.106" = type { i32, i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::pair.106"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.20", i32, %"struct.std::__1::atomic.20", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.112" }
%"class.std::__1::unordered_map.112" = type { %"class.std::__1::__hash_table.113" }
%"class.std::__1::__hash_table.113" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.117"** }
%"struct.std::__1::__hash_node_base.117" = type { %"struct.std::__1::__hash_node_base.117"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator.119" }
%"class.std::__1::__bucket_list_deallocator.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.117" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.153", %"struct.std::__1::atomic.157", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.168" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.288", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.182", %"class.std::__1::vector.183", %"class.std::__1::vector.190", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.182" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.185" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.std::__1::unique_ptr.192"*, %"class.std::__1::unique_ptr.192"*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::unique_ptr.192" = type opaque
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::unique_ptr.192"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.214", i8, i64 }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.230" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.182"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.230" = type { %"class.std::__1::__hash_table.231" }
%"class.std::__1::__hash_table.231" = type <{ %"class.std::__1::unique_ptr.232", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234", %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base.235"** }
%"struct.std::__1::__hash_node_base.235" = type { %"struct.std::__1::__hash_node_base.235"* }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::__bucket_list_deallocator.237" }
%"class.std::__1::__bucket_list_deallocator.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.235" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.257" }
%"class.std::__1::unordered_map.257" = type { %"class.std::__1::__hash_table.258" }
%"class.std::__1::__hash_table.258" = type <{ %"class.std::__1::unique_ptr.259", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.277", [4 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.262"** }
%"struct.std::__1::__hash_node_base.262" = type { %"struct.std::__1::__hash_node_base.262"* }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::__bucket_list_deallocator.264" }
%"class.std::__1::__bucket_list_deallocator.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base.262" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.std::__1::pair.290"*, %"struct.std::__1::pair.290"*, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::pair.290" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::pair.290"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.296", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.281"], [3 x %"class.std::__1::vector.281"], i8, %"struct.std::__1::atomic.153", [6 x i8], %"class.std::__1::vector.281", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.306"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.306" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.331", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.324"], %"class.std::__1::unique_ptr.296" }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.363", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.367", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.372" }
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__cxx_atomic_impl.369" }
%"struct.std::__1::__cxx_atomic_impl.369" = type { %"struct.std::__1::__cxx_atomic_base_impl.370" }
%"struct.std::__1::__cxx_atomic_base_impl.370" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.372" = type { %"class.std::__1::__hash_table.373" }
%"class.std::__1::__hash_table.373" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.377"** }
%"struct.std::__1::__hash_node_base.377" = type { %"struct.std::__1::__hash_node_base.377"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator.379" }
%"class.std::__1::__bucket_list_deallocator.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.377" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.296", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.153", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.402", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.422", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.438" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.481" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.500", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.482", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.500" = type { %"struct.std::__1::__atomic_base.501" }
%"struct.std::__1::__atomic_base.501" = type { %"struct.std::__1::__cxx_atomic_impl.502" }
%"struct.std::__1::__cxx_atomic_impl.502" = type { %"struct.std::__1::__cxx_atomic_base_impl.503" }
%"struct.std::__1::__cxx_atomic_base_impl.503" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.504" = type { %"class.std::__1::__hash_table.505" }
%"class.std::__1::__hash_table.505" = type <{ %"class.std::__1::unique_ptr.506", %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.524", [4 x i8] }>
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508", %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.509"** }
%"struct.std::__1::__hash_node_base.509" = type { %"struct.std::__1::__hash_node_base.509"* }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.std::__1::__bucket_list_deallocator.511" }
%"class.std::__1::__bucket_list_deallocator.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.std::__1::__hash_node_base.509" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.542", %"class.std::__1::vector.542" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.352", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.581" = type { %"class.std::__1::__hash_table.582" }
%"class.std::__1::__hash_table.582" = type <{ %"class.std::__1::unique_ptr.583", %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.601", [4 x i8] }>
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585", %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::__hash_node_base.586"** }
%"struct.std::__1::__hash_node_base.586" = type { %"struct.std::__1::__hash_node_base.586"* }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.std::__1::__bucket_list_deallocator.588" }
%"class.std::__1::__bucket_list_deallocator.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.std::__1::__hash_node_base.586" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.555" = type { %"class.std::__1::__hash_table.556" }
%"class.std::__1::__hash_table.556" = type <{ %"class.std::__1::unique_ptr.557", %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.575", [4 x i8] }>
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559", %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.560"** }
%"struct.std::__1::__hash_node_base.560" = type { %"struct.std::__1::__hash_node_base.560"* }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.std::__1::__bucket_list_deallocator.562" }
%"class.std::__1::__bucket_list_deallocator.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::__hash_node_base.560" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.605" = type { %"class.std::__1::__hash_table.606" }
%"class.std::__1::__hash_table.606" = type <{ %"class.std::__1::unique_ptr.607", %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.627", [4 x i8] }>
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609", %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.610"** }
%"struct.std::__1::__hash_node_base.610" = type { %"struct.std::__1::__hash_node_base.610"* }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.std::__1::__bucket_list_deallocator.612" }
%"class.std::__1::__bucket_list_deallocator.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.std::__1::__hash_node_base.610" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.20", i64, %"struct.std::__1::atomic.20" }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.142" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::KeyAccumulator" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1133", %"class.v8::internal::Handle", %"class.v8::internal::Handle", %"class.v8::internal::Handle.1135", i32, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.v8::internal::Handle.1134" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1133" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1135" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FastKeyAccumulator" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle", %"class.v8::internal::Handle.1133", %"class.v8::internal::Handle", %"class.v8::internal::Handle", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1181", i32, i32, i32, %"class.v8::internal::Handle.1182" }
%"class.v8::internal::Handle.1181" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1182" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle<v8::internal::Object>::ObjectRef" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PropertyDescriptor" = type { i8, %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1137" }
%"class.v8::internal::Handle.1137" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::PrototypeIterator" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Object", %"class.v8::internal::Handle.970", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::internal::Handle.1141" = type { %"class.v8::internal::HandleBase" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<v8::internal::Handle<v8::internal::Name>, int, v8::internal::(anonymous namespace)::NameComparator, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<v8::internal::Handle<v8::internal::Name>, int, v8::internal::(anonymous namespace)::NameComparator, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::(anonymous namespace)::NameComparator", %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"class.v8::internal::(anonymous namespace)::NameComparator" = type { %"class.v8::internal::Isolate"* }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %"class.v8::internal::Handle.1141", i32, i32, i8, [7 x i8] }>
%"class.v8::internal::CombinationAssertScope" = type { i8 }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::Representation" = type { i8 }
%"class.v8::internal::Handle<v8::internal::Map>::ObjectRef" = type { %"class.v8::internal::Map" }
%"class.v8::internal::PropertyCallbackArguments" = type { %"class.v8::internal::CustomArguments" }
%"class.v8::internal::CustomArguments" = type { %"class.v8::internal::CustomArgumentsBase", [7 x i64] }
%"class.v8::internal::CustomArgumentsBase" = type { %"class.v8::internal::Relocatable" }
%"class.std::__1::unique_ptr.1202" = type { %"class.std::__1::__compressed_pair.1203" }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.1204" }
%"struct.std::__1::__compressed_pair_elem.1204" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::PropertyCallbackInfo" = type { i64* }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.v8::Name" = type { i8 }
%"class.v8::internal::Handle<v8::internal::JSModuleNamespace>::ObjectRef" = type { %"class.v8::internal::JSModuleNamespace" }
%"class.v8::internal::JSModuleNamespace" = type { %"class.v8::internal::TorqueGeneratedJSModuleNamespace" }
%"class.v8::internal::TorqueGeneratedJSModuleNamespace" = type { %"class.v8::internal::JSSpecialObject" }
%"class.v8::internal::JSSpecialObject" = type { %"class.v8::internal::TorqueGeneratedJSSpecialObject" }
%"class.v8::internal::TorqueGeneratedJSSpecialObject" = type { %"class.v8::internal::JSCustomElementsObject" }
%"class.v8::internal::JSCustomElementsObject" = type { %"class.v8::internal::TorqueGeneratedJSCustomElementsObject" }
%"class.v8::internal::TorqueGeneratedJSCustomElementsObject" = type { %"class.v8::internal::JSObject" }
%"struct.v8::internal::EnumIndexComparator" = type { %"class.v8::internal::GlobalDictionary" }
%"class.v8::internal::GlobalDictionary" = type { %"class.v8::internal::BaseNameDictionary" }
%"class.v8::internal::BaseNameDictionary" = type { %"class.v8::internal::Dictionary.1156" }
%"class.v8::internal::Dictionary.1156" = type { %"class.v8::internal::HashTable.1157" }
%"class.v8::internal::HashTable.1157" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTableBase" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef" = type { %"class.v8::internal::GlobalDictionary" }
%"struct.v8::internal::EnumIndexComparator.1214" = type { %"class.v8::internal::NameDictionary" }
%"class.v8::internal::NameDictionary" = type { %"class.v8::internal::BaseNameDictionary.1158" }
%"class.v8::internal::BaseNameDictionary.1158" = type { %"class.v8::internal::Dictionary.1159" }
%"class.v8::internal::Dictionary.1159" = type { %"class.v8::internal::HashTable.1160" }
%"class.v8::internal::HashTable.1160" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef" = type { %"class.v8::internal::NameDictionary" }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.v8::PropertyCallbackInfo.1209" = type { i64* }

$_ZN2v88internal17PrototypeIterator43AdvanceFollowingProxiesIgnoringAccessChecksEv = comdat any

$_ZN2v88internal17PrototypeIterator7AdvanceEv = comdat any

$_ZN2v88internal25PropertyCallbackArguments16CallIndexedQueryENS0_6HandleINS0_15InterceptorInfoEEEj = comdat any

$_ZN2v88internal25PropertyCallbackArguments14CallNamedQueryENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEE = comdat any

$_ZN2v88internal6Object13GetSimpleHashES1_ = comdat any

$_ZNK2v88internal14Representation8MnemonicEv = comdat any

$_ZN2v88internal11RelocatableD2Ev = comdat any

$_ZN2v88internal11Relocatable21PostGarbageCollectionEv = comdat any

$_ZN2v88internal11RelocatableD0Ev = comdat any

$_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE = comdat any

$_ZN2v88internal25PropertyCallbackArguments22CallPropertyEnumeratorENS0_6HandleINS0_15InterceptorInfoEEE = comdat any

$_ZNK2v88internal3Map21GetIndexedInterceptorENS0_16PtrComprCageBaseE = comdat any

$_ZNK2v88internal3Map19GetNamedInterceptorENS0_16PtrComprCageBaseE = comdat any

$_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_ = comdat any

$_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_ = comdat any

$_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_ = comdat any

$_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_ = comdat any

$_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_ = comdat any

$_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_ = comdat any

$_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_ = comdat any

$_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_ = comdat any

$_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 = comdat any

$_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 = comdat any

$_ZTVN2v88internal11RelocatableE = comdat any

@_ZN2v88internal27FLAG_trace_for_in_enumerateE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [55 x i8] c"| strings=%d symbols=0 elements=0 || prototypes>=1 ||\0A\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"element->ToUint32(&number)\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"element->IsName()\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"attributes->ToInt32(&value)\00", align 1
@__func__._ZN2v88internal14KeyAccumulator21CollectOwnJSProxyKeysENS0_6HandleINS0_10JSReceiverEEENS2_INS0_7JSProxyEEE = private unnamed_addr constant [22 x i8] c"CollectOwnJSProxyKeys\00", align 1
@_ZN2v88internal16ElementsAccessor19elements_accessors_E = external local_unnamed_addr global %"class.v8::internal::ElementsAccessor"**, align 8
@.str.5 = private unnamed_addr constant [19 x i8] c"!handle_.is_null()\00", align 1
@.str.6 = private unnamed_addr constant [80 x i8] c"static_cast<unsigned>(length) <= static_cast<unsigned>(kMaxNumberOfDescriptors)\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@_ZN2v88internal8FLAG_logE = external local_unnamed_addr global i8, align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"interceptor-indexed-query\00", align 1
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1197", align 4
@_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.16 = private unnamed_addr constant [31 x i8] c"disabled-by-default-v8.runtime\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"V8.ExternalCallback\00", align 1
@_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.18 = private unnamed_addr constant [24 x i8] c"interceptor-named-query\00", align 1
@_ZTVN2v88internal11RelocatableE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11RelocatableD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11RelocatableD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)* @_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11Relocatable21PostGarbageCollectionEv to i8*)] }, comdat, align 8
@.str.19 = private unnamed_addr constant [31 x i8] c"interceptor-indexed-enumerator\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"interceptor-named-enumerator\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.21 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@.str.22 = private unnamed_addr constant [56 x i8] c"| strings=%d symbols=0 elements=%u || prototypes>=1 ||\0A\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"length == properties\00", align 1
@.str.25 = private unnamed_addr constant [35 x i8] c"Out of memory: HashMap::Initialize\00", align 1
@switch.table._ZN2v88internal12_GLOBAL__N_123GetFastEnumPropertyKeysEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE = private unnamed_addr constant [5 x i64] [i64 0, i64 0, i64 16384, i64 0, i64 0], align 8
@switch.table._ZNK2v88internal14Representation8MnemonicEv = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64*, i32, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::KeyAccumulator", align 8
  %8 = alloca %"class.v8::internal::FastKeyAccumulator", align 8
  %9 = load i64, i64* %0, align 8
  %10 = and i64 %9, -262144
  %11 = or i64 %10, 16
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 16
  %14 = add i64 %13, -41416
  %15 = inttoptr i64 %14 to %"class.v8::internal::Isolate"*
  %16 = bitcast %"class.v8::internal::FastKeyAccumulator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #7
  %17 = zext i1 %4 to i8
  %18 = zext i1 %5 to i8
  %19 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %15, %"class.v8::internal::Isolate"** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 1, i32 0, i32 0
  store i64* %0, i64** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 2, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 5
  %23 = bitcast i64** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #7
  store i32 %1, i32* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 6
  store i32 %2, i32* %24, align 4
  %25 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 7
  store i8 %17, i8* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 8
  store i8 %18, i8* %26, align 1
  %27 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 9
  store i8 0, i8* %27, align 2
  %28 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 10
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 11
  store i8 1, i8* %29, align 4
  %30 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 12
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 13
  store i8 0, i8* %31, align 2
  %32 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 14
  store i8 0, i8* %32, align 1
  call void @_ZN2v88internal18FastKeyAccumulator7PrepareEv(%"class.v8::internal::FastKeyAccumulator"* nonnull %8) #7
  %33 = load i32, i32* %24, align 4
  %34 = icmp eq i32 %33, 18
  br i1 %34, label %35, label %49

35:                                               ; preds = %6
  %36 = call i64* @_ZN2v88internal18FastKeyAccumulator11GetKeysFastENS0_17GetKeysConversionE(%"class.v8::internal::FastKeyAccumulator"* nonnull %8, i32 %3) #7
  %37 = icmp eq i64* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = ptrtoint i64* %36 to i64
  br label %92

40:                                               ; preds = %35
  %41 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %19, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %41, i64 0, i32 0, i32 7, i32 0, i64 5
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %41, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %45 to i32
  %47 = trunc i64 %43 to i32
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %49, label %92

49:                                               ; preds = %40, %6
  %50 = load i8, i8* %31, align 2, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = call i64* @_ZN2v88internal18FastKeyAccumulator29GetKeysWithPrototypeInfoCacheENS0_17GetKeysConversionE(%"class.v8::internal::FastKeyAccumulator"* nonnull %8, i32 %3) #7
  %54 = ptrtoint i64* %53 to i64
  br label %92

55:                                               ; preds = %49
  %56 = bitcast %"class.v8::internal::KeyAccumulator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #7
  %57 = bitcast %"class.v8::internal::FastKeyAccumulator"* %8 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = load i32, i32* %22, align 8
  %60 = load i32, i32* %24, align 4
  %61 = bitcast %"class.v8::internal::KeyAccumulator"* %7 to i64*
  store i64 %58, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %7, i64 0, i32 1, i32 0, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %7, i64 0, i32 6
  %64 = bitcast i64** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 40, i1 false) #7
  store i32 %59, i32* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %7, i64 0, i32 7
  store i32 %60, i32* %65, align 4
  %66 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %7, i64 0, i32 8
  %67 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %7, i64 0, i32 9
  %68 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %7, i64 0, i32 10
  store i8 1, i8* %68, align 2
  %69 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %7, i64 0, i32 11
  %70 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %7, i64 0, i32 12
  %71 = load i8, i8* %25, align 8, !range !2
  store i8 %71, i8* %66, align 8
  %72 = load i8, i8* %26, align 1, !range !2
  store i8 %72, i8* %67, align 1
  %73 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %8, i64 0, i32 4, i32 0, i32 0
  %74 = bitcast i64** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %7, i64 0, i32 4, i32 0, i32 0
  %77 = bitcast i64** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = load i8, i8* %29, align 4, !range !2
  store i8 %78, i8* %69, align 1
  %79 = bitcast i64** %21 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %7, i64 0, i32 2, i32 0, i32 0
  %82 = bitcast i64** %81 to i64*
  store i64 %80, i64* %82, align 8
  store i8 0, i8* %70, align 4
  %83 = load i64*, i64** %20, align 8
  %84 = call i16 @_ZN2v88internal14KeyAccumulator11CollectKeysENS0_6HandleINS0_10JSReceiverEEES4_(%"class.v8::internal::KeyAccumulator"* nonnull %7, i64* %83, i64* %83) #7
  %85 = trunc i16 %84 to i8
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %55
  %88 = call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_17GetKeysConversionE(%"class.v8::internal::KeyAccumulator"* nonnull %7, i32 %3) #7
  %89 = ptrtoint i64* %88 to i64
  br label %90

90:                                               ; preds = %55, %87
  %91 = phi i64 [ %89, %87 ], [ 0, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #7
  br label %92

92:                                               ; preds = %40, %38, %52, %90
  %93 = phi i64 [ %39, %38 ], [ %91, %90 ], [ %54, %52 ], [ 0, %40 ]
  %94 = inttoptr i64 %93 to i64*
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #7
  ret i64* %94
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal18FastKeyAccumulator7GetKeysENS0_17GetKeysConversionE(%"class.v8::internal::FastKeyAccumulator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 18
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = tail call i64* @_ZN2v88internal18FastKeyAccumulator11GetKeysFastENS0_17GetKeysConversionE(%"class.v8::internal::FastKeyAccumulator"* %0, i32 %1)
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i64* %7 to i64
  br label %31

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 0
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 5
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = trunc i64 %15 to i32
  %20 = icmp eq i32 %18, %19
  br i1 %20, label %21, label %31

21:                                               ; preds = %11, %2
  %22 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 13
  %23 = load i8, i8* %22, align 2, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = tail call i64* @_ZN2v88internal18FastKeyAccumulator29GetKeysWithPrototypeInfoCacheENS0_17GetKeysConversionE(%"class.v8::internal::FastKeyAccumulator"* %0, i32 %1)
  %27 = ptrtoint i64* %26 to i64
  br label %31

28:                                               ; preds = %21
  %29 = tail call i64* @_ZN2v88internal18FastKeyAccumulator11GetKeysSlowENS0_17GetKeysConversionE(%"class.v8::internal::FastKeyAccumulator"* %0, i32 %1)
  %30 = ptrtoint i64* %29 to i64
  br label %31

31:                                               ; preds = %11, %9, %28, %25
  %32 = phi i64 [ %10, %9 ], [ %30, %28 ], [ %27, %25 ], [ 0, %11 ]
  %33 = inttoptr i64 %32 to i64*
  ret i64* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_17GetKeysConversionE(%"class.v8::internal::KeyAccumulator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = bitcast %"class.v8::internal::KeyAccumulator"* %0 to %"class.v8::internal::Factory"**
  %8 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %8, i64 360
  %10 = bitcast %"class.v8::internal::Factory"* %9 to i64*
  br label %110

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  br label %29

18:                                               ; preds = %11
  %19 = load i64, i64* %4, align 8
  %20 = add i64 %19, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %24 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 12
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %22, %27
  br i1 %28, label %110, label %29

29:                                               ; preds = %15, %18
  %30 = phi %"class.v8::internal::Isolate"* [ %17, %15 ], [ %24, %18 ]
  %31 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %32 = tail call i64* @_ZN2v88internal14OrderedHashSet18ConvertToKeysArrayEPNS0_7IsolateENS0_6HandleIS1_EENS0_17GetKeysConversionE(%"class.v8::internal::Isolate"* %30, i64* nonnull %4, i32 %1) #7
  %33 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 12
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %110, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 2, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = icmp eq i64* %38, null
  br i1 %39, label %110, label %40

40:                                               ; preds = %36
  %41 = load i64, i64* %38, align 8
  %42 = and i64 %41, -4294967296
  %43 = add i64 %41, 35
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %42, %46
  %48 = load i64, i64* %32, align 8
  %49 = add i64 %47, 11
  %50 = inttoptr i64 %49 to i32*
  %51 = trunc i64 %48 to i32
  store atomic volatile i32 %51, i32* %50 monotonic, align 4
  %52 = and i64 %48, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %77, label %54

54:                                               ; preds = %40
  %55 = and i64 %47, -262144
  %56 = or i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 262144
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %54
  %62 = or i64 %55, 16
  %63 = inttoptr i64 %62 to %"class.v8::internal::Heap"**
  %64 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %63, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %64, i64 %47, i64 %49, i64 %48) #7
  br label %65

65:                                               ; preds = %61, %54
  %66 = and i64 %48, -262144
  %67 = or i64 %66, 8
  %68 = inttoptr i64 %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 24
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %65
  %73 = load i64, i64* %57, align 8
  %74 = and i64 %73, 24
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %72
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %47, i64 %49, i64 %48) #7
  br label %77

77:                                               ; preds = %40, %65, %72, %76
  %78 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 3, i32 0, i32 0
  %79 = load i64*, i64** %78, align 8
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %31, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 31, i32 4
  %89 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %88, align 8
  %90 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %77
  %92 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %89, i64 %86) #7
  br label %106

93:                                               ; preds = %77
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 31, i32 0
  %95 = load i64*, i64** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 31, i32 1
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %95, %97
  br i1 %98, label %99, label %101

99:                                               ; preds = %93
  %100 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %87) #7
  br label %101

101:                                              ; preds = %99, %93
  %102 = phi i64* [ %100, %99 ], [ %95, %93 ]
  %103 = ptrtoint i64* %102 to i64
  %104 = add i64 %103, 8
  %105 = inttoptr i64 %104 to i64*
  store i64* %105, i64** %94, align 8
  store i64 %86, i64* %102, align 8
  br label %106

106:                                              ; preds = %91, %101
  %107 = phi i64* [ %92, %91 ], [ %102, %101 ]
  %108 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %31, align 8
  %109 = tail call i64* @_ZN2v88internal3Map37GetOrCreatePrototypeChainValidityCellENS0_6HandleIS1_EEPNS0_7IsolateE(i64* %107, %"class.v8::internal::Isolate"* %108) #7
  br label %110

110:                                              ; preds = %18, %36, %106, %29, %6
  %111 = phi i64* [ %10, %6 ], [ %32, %29 ], [ %32, %106 ], [ %32, %36 ], [ %4, %18 ]
  ret i64* %111
}

declare i64* @_ZN2v88internal14OrderedHashSet18ConvertToKeysArrayEPNS0_7IsolateENS0_6HandleIS1_EENS0_17GetKeysConversionE(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64* @_ZN2v88internal14KeyAccumulator4keysEv(%"class.v8::internal::KeyAccumulator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

declare i64* @_ZN2v88internal3Map37GetOrCreatePrototypeChainValidityCellENS0_6HandleIS1_EEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14KeyAccumulator6AddKeyENS0_6ObjectENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* nocapture, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 4
  %7 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %6, align 8
  %8 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %7, i64 %1) #7
  br label %24

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %5) #7
  br label %19

19:                                               ; preds = %17, %11
  %20 = phi i64* [ %18, %17 ], [ %13, %11 ]
  %21 = ptrtoint i64* %20 to i64
  %22 = add i64 %21, 8
  %23 = inttoptr i64 %22 to i64*
  store i64* %23, i64** %12, align 8
  store i64 %1, i64* %20, align 8
  br label %24

24:                                               ; preds = %9, %19
  %25 = phi i64* [ %10, %9 ], [ %20, %19 ]
  %26 = tail call zeroext i1 @_ZN2v88internal14KeyAccumulator6AddKeyENS0_6HandleINS0_6ObjectEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* %0, i64* %25, i32 %2)
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14KeyAccumulator6AddKeyENS0_6HandleINS0_6ObjectEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* nocapture, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %6 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 64
  %9 = load i64, i64* %1, align 8
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %8, label %12, label %30

12:                                               ; preds = %3
  br i1 %11, label %176, label %13

13:                                               ; preds = %12
  %14 = and i64 %9, -4294967296
  %15 = add i64 %9, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 64
  br i1 %23, label %24, label %176

24:                                               ; preds = %13
  %25 = add i64 %9, 7
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %176, label %54

30:                                               ; preds = %3
  br i1 %11, label %51, label %31

31:                                               ; preds = %30
  %32 = and i64 %9, -4294967296
  %33 = add i64 %9, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %32, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp eq i16 %40, 64
  br i1 %41, label %42, label %51

42:                                               ; preds = %31
  %43 = and i32 %7, 16
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %176

45:                                               ; preds = %42
  %46 = add i64 %9, 7
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %176

51:                                               ; preds = %30, %31
  %52 = and i32 %7, 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %176

54:                                               ; preds = %24, %45, %51
  %55 = tail call zeroext i1 @_ZN2v88internal14KeyAccumulator10IsShadowedENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::KeyAccumulator"* %0, i64* %1)
  br i1 %55, label %176, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 1
  %58 = getelementptr inbounds %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1134"* %57, i64 0, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = icmp eq i64* %59, null
  br i1 %60, label %61, label %70

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %63 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %62, align 8
  %64 = tail call i64* @_ZN2v88internal14OrderedHashSet8AllocateINS0_7IsolateEEENS0_11MaybeHandleIS1_EEPT_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %63, i32 16, i8 zeroext 0) #7
  %65 = icmp eq i64* %64, null
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %61
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #9
  unreachable

67:                                               ; preds = %61
  %68 = ptrtoint i64* %64 to i64
  %69 = bitcast %"class.v8::internal::Handle.1134"* %57 to i64*
  store i64 %68, i64* %69, align 8
  br label %70

70:                                               ; preds = %67, %56
  %71 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #7
  %72 = icmp eq i32 %2, 1
  %73 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #7
  br i1 %72, label %74, label %147

74:                                               ; preds = %70
  %75 = load i64, i64* %1, align 8
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %146, label %78

78:                                               ; preds = %74
  %79 = and i64 %75, -4294967296
  %80 = add i64 %75, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %79, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = icmp ult i16 %87, 64
  br i1 %88, label %89, label %146

89:                                               ; preds = %78
  %90 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %75, i64* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0
  %92 = add i64 %75, 3
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, -536870910
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %102

97:                                               ; preds = %89
  %98 = lshr i32 %94, 2
  %99 = and i32 %98, 16777215
  store i32 %99, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #7
  %100 = bitcast %"class.v8::internal::KeyAccumulator"* %0 to %"class.v8::internal::FactoryBase"**
  %101 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %100, align 8
  br label %113

102:                                              ; preds = %89
  %103 = and i32 %94, 3
  %104 = icmp eq i32 %103, 2
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #7
  br label %148

106:                                              ; preds = %102
  %107 = call zeroext i1 @_ZN2v88internal6String16SlowAsArrayIndexEPj(%"class.v8::internal::String"* nonnull %91, i32* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #7
  br i1 %107, label %108, label %148

108:                                              ; preds = %106
  %109 = load i32, i32* %4, align 4
  %110 = bitcast %"class.v8::internal::KeyAccumulator"* %0 to %"class.v8::internal::FactoryBase"**
  %111 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %110, align 8
  %112 = icmp ult i32 %109, 1073741824
  br i1 %112, label %113, label %140

113:                                              ; preds = %97, %108
  %114 = phi %"class.v8::internal::FactoryBase"* [ %101, %97 ], [ %111, %108 ]
  %115 = phi i32 [ %99, %97 ], [ %109, %108 ]
  %116 = sext i32 %115 to i64
  %117 = shl nsw i64 %116, 1
  %118 = bitcast %"class.v8::internal::FactoryBase"* %114 to %"class.v8::internal::Isolate"*
  %119 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %114, i64 45608
  %120 = bitcast %"class.v8::internal::FactoryBase"* %119 to %"class.v8::internal::CanonicalHandleScope"**
  %121 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %120, align 8
  %122 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %113
  %124 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %121, i64 %117) #7
  br label %148

125:                                              ; preds = %113
  %126 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %114, i64 45584
  %127 = bitcast %"class.v8::internal::FactoryBase"* %126 to i64**
  %128 = load i64*, i64** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %114, i64 45592
  %130 = bitcast %"class.v8::internal::FactoryBase"* %129 to i64**
  %131 = load i64*, i64** %130, align 8
  %132 = icmp eq i64* %128, %131
  br i1 %132, label %133, label %135

133:                                              ; preds = %125
  %134 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %118) #7
  br label %135

135:                                              ; preds = %133, %125
  %136 = phi i64* [ %134, %133 ], [ %128, %125 ]
  %137 = ptrtoint i64* %136 to i64
  %138 = add i64 %137, 8
  %139 = inttoptr i64 %138 to i64*
  store i64* %139, i64** %127, align 8
  store i64 %117, i64* %136, align 8
  br label %148

140:                                              ; preds = %108
  %141 = uitofp i32 %109 to double
  %142 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %111) #7
  %143 = load i64, i64* %142, align 8
  %144 = add i64 %143, 3
  %145 = inttoptr i64 %144 to double*
  store double %141, double* %145, align 1
  br label %148

146:                                              ; preds = %74, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #7
  br label %148

147:                                              ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #7
  br label %148

148:                                              ; preds = %140, %135, %123, %105, %147, %146, %106
  %149 = phi i64* [ %1, %106 ], [ %1, %146 ], [ %1, %147 ], [ %1, %105 ], [ %142, %140 ], [ %124, %123 ], [ %136, %135 ]
  %150 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %151 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 1, i32 0, i32 0
  %153 = load i64*, i64** %152, align 8
  %154 = call i64* @_ZN2v88internal14OrderedHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %151, i64* %153, i64* %149) #7
  %155 = icmp eq i64* %154, null
  br i1 %155, label %156, label %162

156:                                              ; preds = %148
  %157 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %150, align 8
  %158 = bitcast %"class.v8::internal::Isolate"* %157 to %"class.v8::internal::Factory"*
  %159 = call i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %158, i32 325, i64* null, i64* null, i64* null) #7
  %160 = load i64, i64* %159, align 8
  %161 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %157, i64 %160, %"class.v8::internal::MessageLocation"* null) #7
  br label %174

162:                                              ; preds = %148
  %163 = load i64, i64* %154, align 8
  %164 = load i64*, i64** %58, align 8
  %165 = load i64, i64* %164, align 8
  %166 = trunc i64 %163 to i32
  %167 = trunc i64 %165 to i32
  %168 = icmp eq i32 %166, %167
  br i1 %168, label %174, label %169

169:                                              ; preds = %162
  %170 = ptrtoint i64* %154 to i64
  %171 = add i64 %165, 7
  %172 = inttoptr i64 %171 to i32*
  store atomic volatile i32 0, i32* %172 monotonic, align 4
  %173 = bitcast %"class.v8::internal::Handle.1134"* %57 to i64*
  store i64 %170, i64* %173, align 8
  br label %174

174:                                              ; preds = %162, %169, %156
  %175 = phi i1 [ false, %156 ], [ true, %169 ], [ true, %162 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #7
  br label %176

176:                                              ; preds = %24, %45, %12, %54, %51, %42, %13, %174
  %177 = phi i1 [ %175, %174 ], [ true, %13 ], [ true, %24 ], [ true, %42 ], [ true, %45 ], [ true, %51 ], [ true, %54 ], [ true, %12 ]
  ret i1 %177
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14KeyAccumulator10IsShadowedENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::KeyAccumulator"* nocapture readonly, i64* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::JSReceiver", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %5 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 5, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %6, null
  br i1 %7, label %73, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 10
  %10 = load i8, i8* %9, align 2, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %73

12:                                               ; preds = %8
  %13 = load i64, i64* %6, align 8
  %14 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %14, align 8
  %16 = load i64, i64* %1, align 8
  %17 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %16) #7
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %12
  %21 = bitcast %"class.v8::internal::JSReceiver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  %22 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %16, i64* %22, align 8
  %23 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  br label %24

24:                                               ; preds = %20, %12
  %25 = phi i64 [ %23, %20 ], [ %17, %12 ]
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %73

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 4
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %25 to i32
  %32 = ashr i32 %31, 1
  %33 = add i64 %13, 15
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = ashr i32 %35, 1
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 4
  %38 = load i64, i64* %37, align 8
  %39 = add nsw i32 %36, -1
  %40 = and i32 %39, %32
  %41 = shl i32 %40, 2
  %42 = add i32 %41, 12
  %43 = sext i32 %42 to i64
  %44 = add i64 %13, 7
  %45 = add i64 %44, %43
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = trunc i64 %38 to i32
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %73, label %50

50:                                               ; preds = %28
  %51 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4 to i8*
  %52 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4, i64 0, i32 0
  br label %54

54:                                               ; preds = %62, %50
  %55 = phi i32 [ %47, %50 ], [ %71, %62 ]
  %56 = phi i32 [ %40, %50 ], [ %65, %62 ]
  %57 = phi i32 [ 1, %50 ], [ %63, %62 ]
  %58 = zext i32 %55 to i64
  %59 = or i64 %30, %58
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #7
  %60 = load i64, i64* %1, align 8
  store i64 %60, i64* %52, align 8
  %61 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %53, i64 %59) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #7
  br i1 %61, label %73, label %62

62:                                               ; preds = %54
  %63 = add i32 %57, 1
  %64 = add i32 %57, %56
  %65 = and i32 %64, %39
  %66 = shl i32 %65, 2
  %67 = add i32 %66, 12
  %68 = sext i32 %67 to i64
  %69 = add i64 %44, %68
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = icmp eq i32 %71, %48
  br i1 %72, label %73, label %54

73:                                               ; preds = %62, %54, %2, %28, %24, %8
  %74 = phi i1 [ false, %8 ], [ false, %2 ], [ false, %24 ], [ false, %28 ], [ false, %62 ], [ true, %54 ]
  ret i1 %74
}

declare i64* @_ZN2v88internal14OrderedHashSet8AllocateINS0_7IsolateEEENS0_11MaybeHandleIS1_EEPT_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i32, i8 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal14OrderedHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14KeyAccumulator7AddKeysENS0_6HandleINS0_10FixedArrayEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* nocapture, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 1
  br i1 %8, label %9, label %53

9:                                                ; preds = %3
  %10 = lshr i32 %7, 1
  %11 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %12 = zext i32 %10 to i64
  br label %17

13:                                               ; preds = %49
  %14 = icmp ult i64 %52, %12
  br i1 %14, label %15, label %53

15:                                               ; preds = %13
  %16 = load i64, i64* %1, align 8
  br label %17

17:                                               ; preds = %15, %9
  %18 = phi i64 [ %4, %9 ], [ %16, %15 ]
  %19 = phi i64 [ 0, %9 ], [ %52, %15 ]
  %20 = and i64 %18, -4294967296
  %21 = trunc i64 %19 to i32
  %22 = shl i32 %21, 2
  %23 = sext i32 %22 to i64
  %24 = add nsw i64 %23, 7
  %25 = add i64 %24, %18
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %20, %28
  %30 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 31, i32 4
  %32 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %33 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %17
  %35 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %32, i64 %29) #7
  br label %49

36:                                               ; preds = %17
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 31, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 31, i32 1
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %38, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %30) #7
  br label %44

44:                                               ; preds = %42, %36
  %45 = phi i64* [ %43, %42 ], [ %38, %36 ]
  %46 = ptrtoint i64* %45 to i64
  %47 = add i64 %46, 8
  %48 = inttoptr i64 %47 to i64*
  store i64* %48, i64** %37, align 8
  store i64 %29, i64* %45, align 8
  br label %49

49:                                               ; preds = %34, %44
  %50 = phi i64* [ %35, %34 ], [ %45, %44 ]
  %51 = tail call zeroext i1 @_ZN2v88internal14KeyAccumulator6AddKeyENS0_6HandleINS0_6ObjectEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* %0, i64* %50, i32 %2)
  %52 = add nuw nsw i64 %19, 1
  br i1 %51, label %13, label %53

53:                                               ; preds = %49, %13, %3
  %54 = phi i1 [ true, %3 ], [ true, %13 ], [ false, %49 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14KeyAccumulator7AddKeysENS0_6HandleINS0_8JSObjectEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 10
  %12 = inttoptr i64 %11 to i8*
  %13 = load i8, i8* %12, align 1
  %14 = lshr i8 %13, 2
  %15 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %16 = zext i8 %14 to i64
  %17 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %15, i64 %16
  %18 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %17, align 8
  %19 = bitcast %"class.v8::internal::ElementsAccessor"* %18 to i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)***
  %20 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)**, i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)** %20, i64 12
  %22 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.v8::internal::ElementsAccessor"* %18, i64* %1, %"class.v8::internal::KeyAccumulator"* %0, i32 %2) #7
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15FilterProxyKeysEPNS0_14KeyAccumulatorENS0_6HandleINS0_7JSProxyEEENS3_INS0_10FixedArrayEEENS0_14PropertyFilterE(%"class.v8::internal::KeyAccumulator"* nocapture, i64*, i64*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = ptrtoint i64* %2 to i64
  br label %177

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = load i64, i64* %2, align 8
  %13 = add i64 %12, 3
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 1
  br i1 %16, label %17, label %173

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 4
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %21 = icmp eq i32 %3, 64
  %22 = and i32 %3, 8
  %23 = icmp eq i32 %22, 0
  %24 = and i32 %3, 16
  %25 = icmp eq i32 %24, 0
  %26 = and i32 %3, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %5, i64 0, i32 1, i32 0, i32 0
  %30 = bitcast i64** %29 to i8*
  %31 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 6
  %32 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 5, i32 0, i32 0
  br label %33

33:                                               ; preds = %17, %162
  %34 = phi i64 [ 0, %17 ], [ %164, %162 ]
  %35 = phi i64 [ %12, %17 ], [ %165, %162 ]
  %36 = phi i32 [ 0, %17 ], [ %163, %162 ]
  %37 = and i64 %35, -4294967296
  %38 = trunc i64 %34 to i32
  %39 = shl i32 %38, 2
  %40 = sext i32 %39 to i64
  %41 = add nsw i64 %40, 7
  %42 = add i64 %41, %35
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %37, %45
  %47 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %48 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %33
  %50 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %47, i64 %46) #7
  %51 = load i64, i64* %50, align 8
  br label %63

52:                                               ; preds = %33
  %53 = load i64*, i64** %19, align 8
  %54 = load i64*, i64** %20, align 8
  %55 = icmp eq i64* %53, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #7
  br label %58

58:                                               ; preds = %56, %52
  %59 = phi i64* [ %57, %56 ], [ %53, %52 ]
  %60 = ptrtoint i64* %59 to i64
  %61 = add i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  store i64* %62, i64** %19, align 8
  store i64 %46, i64* %59, align 8
  br label %63

63:                                               ; preds = %49, %58
  %64 = phi i64 [ %51, %49 ], [ %46, %58 ]
  %65 = phi i64* [ %50, %49 ], [ %59, %58 ]
  %66 = and i64 %64, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %63
  %69 = and i64 %64, -4294967296
  %70 = add i64 %64, -1
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %69, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i16*
  %77 = load atomic i16, i16* %76 monotonic, align 2
  %78 = icmp eq i16 %77, 64
  br label %79

79:                                               ; preds = %68, %63
  %80 = phi i1 [ false, %63 ], [ %78, %68 ]
  br i1 %21, label %81, label %82

81:                                               ; preds = %79
  br i1 %80, label %91, label %162

82:                                               ; preds = %79
  br i1 %80, label %83, label %90

83:                                               ; preds = %82
  br i1 %25, label %84, label %162

84:                                               ; preds = %83
  %85 = add i64 %64, 7
  %86 = inttoptr i64 %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %97, label %162

90:                                               ; preds = %82
  br i1 %23, label %97, label %162

91:                                               ; preds = %81
  %92 = add i64 %64, 7
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, 16
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %162, label %122

97:                                               ; preds = %84, %90
  br i1 %27, label %122, label %98

98:                                               ; preds = %97
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #7
  store i8 0, i8* %28, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #7
  %99 = call i16 @_ZN2v88internal7JSProxy24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"* %11, i64* %1, i64* %65, %"class.v8::internal::PropertyDescriptor"* nonnull %5) #7
  %100 = trunc i16 %99 to i8
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %172, label %102

102:                                              ; preds = %98
  %103 = icmp ugt i16 %99, 255
  br i1 %103, label %104, label %161

104:                                              ; preds = %102
  %105 = load i8, i8* %28, align 8
  %106 = and i8 %105, 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %121

108:                                              ; preds = %104
  %109 = load i32, i32* %31, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %161, label %111

111:                                              ; preds = %108
  %112 = load i64*, i64** %32, align 8
  %113 = icmp eq i64* %112, null
  br i1 %113, label %114, label %117

114:                                              ; preds = %111
  %115 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %116 = call i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %115, i32 16, i8 zeroext 0, i32 0) #7
  store i64* %116, i64** %32, align 8
  br label %117

117:                                              ; preds = %114, %111
  %118 = phi i64* [ %116, %114 ], [ %112, %111 ]
  %119 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %120 = call i64* @_ZN2v88internal13ObjectHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %119, i64* %118, i64* %65) #7
  store i64* %120, i64** %32, align 8
  br label %161

121:                                              ; preds = %104
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #7
  br label %122

122:                                              ; preds = %91, %121, %97
  %123 = zext i32 %36 to i64
  %124 = icmp eq i64 %34, %123
  br i1 %124, label %159, label %125

125:                                              ; preds = %122
  %126 = load i64, i64* %2, align 8
  %127 = load i64, i64* %65, align 8
  %128 = shl i32 %36, 2
  %129 = sext i32 %128 to i64
  %130 = add nsw i64 %129, 7
  %131 = add i64 %130, %126
  %132 = inttoptr i64 %131 to i32*
  %133 = trunc i64 %127 to i32
  store atomic volatile i32 %133, i32* %132 monotonic, align 4
  %134 = and i64 %127, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %159, label %136

136:                                              ; preds = %125
  %137 = and i64 %126, -262144
  %138 = or i64 %137, 8
  %139 = inttoptr i64 %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = and i64 %140, 262144
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %147, label %143

143:                                              ; preds = %136
  %144 = or i64 %137, 16
  %145 = inttoptr i64 %144 to %"class.v8::internal::Heap"**
  %146 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %145, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %146, i64 %126, i64 %131, i64 %127) #7
  br label %147

147:                                              ; preds = %143, %136
  %148 = and i64 %127, -262144
  %149 = or i64 %148, 8
  %150 = inttoptr i64 %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = and i64 %151, 24
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %147
  %155 = load i64, i64* %139, align 8
  %156 = and i64 %155, 24
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %154
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %126, i64 %131, i64 %127) #7
  br label %159

159:                                              ; preds = %158, %154, %147, %125, %122
  %160 = add nsw i32 %36, 1
  br label %162

161:                                              ; preds = %117, %108, %102
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #7
  br label %162

162:                                              ; preds = %90, %84, %83, %81, %91, %159, %161
  %163 = phi i32 [ %36, %161 ], [ %36, %91 ], [ %160, %159 ], [ %36, %81 ], [ %36, %83 ], [ %36, %84 ], [ %36, %90 ]
  %164 = add nuw nsw i64 %34, 1
  %165 = load i64, i64* %2, align 8
  %166 = add i64 %165, 3
  %167 = inttoptr i64 %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = ashr i32 %168, 1
  %170 = sext i32 %169 to i64
  %171 = icmp slt i64 %164, %170
  br i1 %171, label %33, label %173

172:                                              ; preds = %98
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #7
  br label %177

173:                                              ; preds = %162, %9
  %174 = phi i32 [ 0, %9 ], [ %163, %162 ]
  %175 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %11, i64* %2, i32 %174) #7
  %176 = ptrtoint i64* %175 to i64
  br label %177

177:                                              ; preds = %172, %173, %7
  %178 = phi i64 [ %8, %7 ], [ %176, %173 ], [ 0, %172 ]
  %179 = inttoptr i64 %178 to i64*
  ret i64* %179
}

declare i16 @_ZN2v88internal7JSProxy24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14KeyAccumulator15AddShadowingKeyENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::KeyAccumulator"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 5, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = icmp eq i64* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = tail call i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %12, i32 16, i8 zeroext 0, i32 0) #7
  store i64* %13, i64** %7, align 8
  br label %14

14:                                               ; preds = %10, %6
  %15 = phi i64* [ %13, %10 ], [ %8, %6 ]
  %16 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = tail call i64* @_ZN2v88internal13ObjectHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %17, i64* %15, i64* %1) #7
  store i64* %18, i64** %7, align 8
  br label %19

19:                                               ; preds = %2, %14
  ret void
}

declare i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal14KeyAccumulator18AddKeysFromJSProxyENS0_6HandleINS0_7JSProxyEEENS2_INS0_10FixedArrayEEE(%"class.v8::internal::KeyAccumulator"* nocapture, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 8
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %23

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 4
  %10 = tail call i64* @_ZN2v88internal15FilterProxyKeysEPNS0_14KeyAccumulatorENS0_6HandleINS0_7JSProxyEEENS3_INS0_10FixedArrayEEENS0_14PropertyFilterE(%"class.v8::internal::KeyAccumulator"* %0, i64* %1, i64* %2, i32 %9)
  %11 = icmp eq i64* %10, null
  br i1 %11, label %75, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = load i8, i8* %4, align 8, !range !2
  %18 = zext i8 %17 to i32
  br label %23

19:                                               ; preds = %12
  %20 = ptrtoint i64* %10 to i64
  %21 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 1
  %22 = bitcast %"class.v8::internal::Handle.1134"* %21 to i64*
  store i64 %20, i64* %22, align 8
  br label %75

23:                                               ; preds = %16, %3
  %24 = phi i32 [ %18, %16 ], [ 1, %3 ]
  %25 = phi i64* [ %10, %16 ], [ %2, %3 ]
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 3
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 1
  br i1 %30, label %31, label %75

31:                                               ; preds = %23
  %32 = lshr i32 %29, 1
  %33 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %34 = zext i32 %32 to i64
  br label %39

35:                                               ; preds = %71
  %36 = icmp ult i64 %74, %34
  br i1 %36, label %37, label %75

37:                                               ; preds = %35
  %38 = load i64, i64* %25, align 8
  br label %39

39:                                               ; preds = %37, %31
  %40 = phi i64 [ %26, %31 ], [ %38, %37 ]
  %41 = phi i64 [ 0, %31 ], [ %74, %37 ]
  %42 = and i64 %40, -4294967296
  %43 = trunc i64 %41 to i32
  %44 = shl i32 %43, 2
  %45 = sext i32 %44 to i64
  %46 = add i64 %40, 7
  %47 = add i64 %46, %45
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %42, %50
  %52 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 31, i32 4
  %54 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %53, align 8
  %55 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %39
  %57 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %54, i64 %51) #7
  br label %71

58:                                               ; preds = %39
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 31, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 31, i32 1
  %62 = load i64*, i64** %61, align 8
  %63 = icmp eq i64* %60, %62
  br i1 %63, label %64, label %66

64:                                               ; preds = %58
  %65 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %52) #7
  br label %66

66:                                               ; preds = %64, %58
  %67 = phi i64* [ %65, %64 ], [ %60, %58 ]
  %68 = ptrtoint i64* %67 to i64
  %69 = add i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  store i64* %70, i64** %59, align 8
  store i64 %51, i64* %67, align 8
  br label %71

71:                                               ; preds = %66, %56
  %72 = phi i64* [ %57, %56 ], [ %67, %66 ]
  %73 = tail call zeroext i1 @_ZN2v88internal14KeyAccumulator6AddKeyENS0_6HandleINS0_6ObjectEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* %0, i64* %72, i32 %24) #7
  %74 = add nuw nsw i64 %41, 1
  br i1 %73, label %35, label %75

75:                                               ; preds = %35, %71, %23, %7, %19
  %76 = phi i16 [ 257, %19 ], [ 0, %7 ], [ 257, %23 ], [ 257, %35 ], [ 0, %71 ]
  ret i16 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal14KeyAccumulator11CollectKeysENS0_6HandleINS0_10JSReceiverEEES4_(%"class.v8::internal::KeyAccumulator"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %5 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = load i64, i64* %2, align 8
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 188
  br i1 %19, label %20, label %25

20:                                               ; preds = %8
  %21 = tail call i16 @_ZN2v88internal14KeyAccumulator21CollectOwnJSProxyKeysENS0_6HandleINS0_10JSReceiverEEENS2_INS0_7JSProxyEEE(%"class.v8::internal::KeyAccumulator"* %0, i64* undef, i64* %2)
  %22 = trunc i16 %21 to i8
  %23 = icmp eq i8 %22, 0
  %24 = select i1 %23, i16 0, i16 257
  ret i16 %24

25:                                               ; preds = %3, %8
  %26 = zext i1 %7 to i32
  %27 = bitcast %"class.v8::internal::PrototypeIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #7
  %28 = bitcast %"class.v8::internal::KeyAccumulator"* %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.v8::internal::PrototypeIterator"* %4 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 2, i32 0, i32 0
  store i64* %2, i64** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 3
  store i32 %26, i32* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 4
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 6
  store i32 0, i32* %35, align 8
  %36 = icmp eq i64* %2, null
  br i1 %36, label %41, label %37, !prof !3

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 5, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 10
  %40 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 4, i32 0, i32 0
  br label %45

41:                                               ; preds = %25
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #9
  unreachable

42:                                               ; preds = %74, %77
  %43 = load i8, i8* %34, align 4
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %83

45:                                               ; preds = %37, %42
  %46 = load i64*, i64** %38, align 8
  %47 = icmp eq i64* %46, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  store i8 0, i8* %39, align 2
  br label %49

49:                                               ; preds = %45, %48
  %50 = load i64*, i64** %32, align 8
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, -4294967296
  %53 = add i64 %51, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %52, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = icmp eq i16 %60, 188
  br i1 %61, label %62, label %64

62:                                               ; preds = %49
  %63 = call i16 @_ZN2v88internal14KeyAccumulator21CollectOwnJSProxyKeysENS0_6HandleINS0_10JSReceiverEEENS2_INS0_7JSProxyEEE(%"class.v8::internal::KeyAccumulator"* %0, i64* undef, i64* %50)
  br label %66

64:                                               ; preds = %49
  %65 = call i16 @_ZN2v88internal14KeyAccumulator14CollectOwnKeysENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::KeyAccumulator"* %0, i64* %1, i64* %50)
  br label %66

66:                                               ; preds = %62, %64
  %67 = phi i16 [ %63, %62 ], [ %65, %64 ]
  %68 = trunc i16 %67 to i8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = icmp ugt i16 %67, 255
  br i1 %71, label %72, label %83

72:                                               ; preds = %70
  %73 = call zeroext i1 @_ZN2v88internal17PrototypeIterator43AdvanceFollowingProxiesIgnoringAccessChecksEv(%"class.v8::internal::PrototypeIterator"* nonnull %4)
  br i1 %73, label %74, label %83

74:                                               ; preds = %72
  %75 = load i64*, i64** %40, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %42, label %77

77:                                               ; preds = %74
  %78 = load i64, i64* %75, align 8
  %79 = load i64, i64* %50, align 8
  %80 = trunc i64 %78 to i32
  %81 = trunc i64 %79 to i32
  %82 = icmp eq i32 %80, %81
  br i1 %82, label %83, label %42

83:                                               ; preds = %72, %66, %70, %77, %42
  %84 = phi i16 [ 257, %42 ], [ 257, %77 ], [ 257, %70 ], [ 0, %66 ], [ 0, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #7
  ret i16 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal14KeyAccumulator21CollectOwnJSProxyKeysENS0_6HandleINS0_10JSReceiverEEENS2_INS0_7JSProxyEEE(%"class.v8::internal::KeyAccumulator"*, i64* nocapture readnone, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle.1141", align 8
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca [1 x %"class.v8::internal::Handle.1137"], align 8
  %7 = alloca %"class.v8::internal::Zone", align 8
  %8 = alloca %"class.v8::base::TemplateHashMapImpl", align 8
  %9 = alloca %"class.v8::internal::Handle.1141", align 8
  %10 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %11 = alloca %"class.v8::internal::Handle.1141", align 8
  %12 = alloca %"class.v8::internal::Handle.1141", align 8
  %13 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 6, i32 1, i32 3
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %33

19:                                               ; preds = %3
  %20 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #7
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 6, i32 1, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %20, %22
  %24 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  br i1 %23, label %25, label %27

25:                                               ; preds = %19
  %26 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %24) #7
  br label %662

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 6
  %29 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %28) #7
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %32 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %31) #7
  br label %662

33:                                               ; preds = %27, %3
  %34 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 7
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 64
  %37 = load i64, i64* %2, align 8
  %38 = and i64 %37, -4294967296
  br i1 %36, label %39, label %93

39:                                               ; preds = %33
  %40 = add i64 %37, 3
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %38, %43
  %45 = and i64 %43, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %68

47:                                               ; preds = %39
  %48 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %49 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %48, i64 0, i32 0, i32 1
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %48, i64 0, i32 1, i64 0
  br label %64

56:                                               ; preds = %50, %47
  %57 = and i64 %37, -262144
  %58 = or i64 %57, 16
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 16
  %61 = add i64 %60, -41416
  %62 = inttoptr i64 %61 to %"class.v8::internal::Isolate"*
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %62, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %64

64:                                               ; preds = %56, %54
  %65 = phi i64* [ %63, %56 ], [ %55, %54 ]
  %66 = getelementptr inbounds i64, i64* %65, i64 115
  %67 = load i64, i64* %66, align 8
  br label %68

68:                                               ; preds = %39, %64
  %69 = phi i64 [ %67, %64 ], [ %44, %39 ]
  %70 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %70, i64 0, i32 31, i32 4
  %72 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %71, align 8
  %73 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  %75 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %72, i64 %69) #7
  br label %89

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %70, i64 0, i32 31, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %70, i64 0, i32 31, i32 1
  %80 = load i64*, i64** %79, align 8
  %81 = icmp eq i64* %78, %80
  br i1 %81, label %82, label %84

82:                                               ; preds = %76
  %83 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %70) #7
  br label %84

84:                                               ; preds = %82, %76
  %85 = phi i64* [ %83, %82 ], [ %78, %76 ]
  %86 = ptrtoint i64* %85 to i64
  %87 = add i64 %86, 8
  %88 = inttoptr i64 %87 to i64*
  store i64* %88, i64** %77, align 8
  store i64 %69, i64* %85, align 8
  br label %89

89:                                               ; preds = %74, %84
  %90 = phi i64* [ %75, %74 ], [ %85, %84 ]
  %91 = tail call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_125CollectKeysFromDictionaryINS0_14NameDictionaryEEENS0_15ExceptionStatusENS0_6HandleIT_EEPNS0_14KeyAccumulatorE(i64* %90, %"class.v8::internal::KeyAccumulator"* %0)
  %92 = select i1 %91, i16 257, i16 0
  ret i16 %92

93:                                               ; preds = %33
  %94 = add i64 %37, 11
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %38, %97
  %99 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %93
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %98) #7
  br label %118

105:                                              ; preds = %93
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %99) #7
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %98, i64* %114, align 8
  br label %118

118:                                              ; preds = %103, %113
  %119 = phi i64* [ %104, %103 ], [ %114, %113 ]
  %120 = load i64, i64* %2, align 8
  %121 = and i64 %120, -4294967296
  %122 = add i64 %120, 11
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  %126 = or i64 %121, %125
  %127 = add i64 %126, -1
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %121, %130
  %132 = add i64 %131, 7
  %133 = inttoptr i64 %132 to i16*
  %134 = load atomic i16, i16* %133 monotonic, align 2
  %135 = icmp ult i16 %134, 186
  br i1 %135, label %136, label %143

136:                                              ; preds = %118
  %137 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %138 = bitcast %"class.v8::internal::Isolate"* %137 to %"class.v8::internal::Factory"*
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %137, i64 0, i32 0, i32 7, i32 0, i64 401
  %140 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %138, i32 150, i64* %139, i64* null, i64* null) #7
  %141 = load i64, i64* %140, align 8
  %142 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %137, i64 %141, %"class.v8::internal::MessageLocation"* null) #7
  br label %662

143:                                              ; preds = %118
  %144 = add i64 %120, 7
  %145 = inttoptr i64 %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %121, %147
  %149 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %149, i64 0, i32 31, i32 4
  %151 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %150, align 8
  %152 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %143
  %154 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %151, i64 %148) #7
  br label %168

155:                                              ; preds = %143
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %149, i64 0, i32 31, i32 0
  %157 = load i64*, i64** %156, align 8
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %149, i64 0, i32 31, i32 1
  %159 = load i64*, i64** %158, align 8
  %160 = icmp eq i64* %157, %159
  br i1 %160, label %161, label %163

161:                                              ; preds = %155
  %162 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %149) #7
  br label %163

163:                                              ; preds = %161, %155
  %164 = phi i64* [ %162, %161 ], [ %157, %155 ]
  %165 = ptrtoint i64* %164 to i64
  %166 = add i64 %165, 8
  %167 = inttoptr i64 %166 to i64*
  store i64* %167, i64** %156, align 8
  store i64 %148, i64* %164, align 8
  br label %168

168:                                              ; preds = %153, %163
  %169 = phi i64* [ %154, %153 ], [ %164, %163 ]
  %170 = bitcast %"class.v8::internal::KeyAccumulator"* %0 to %"class.v8::internal::Factory"**
  %171 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %171, i64 3336
  %173 = bitcast %"class.v8::internal::Factory"* %172 to i64*
  %174 = tail call i64* @_ZN2v88internal6Object9GetMethodENS0_6HandleINS0_10JSReceiverEEENS2_INS0_4NameEEE(i64* %119, i64* %173) #7
  %175 = icmp eq i64* %174, null
  br i1 %175, label %662, label %176

176:                                              ; preds = %168
  %177 = load i64, i64* %174, align 8
  %178 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %178, i64 0, i32 0, i32 7, i32 0, i64 4
  %180 = load i64, i64* %179, align 8
  %181 = trunc i64 %177 to i32
  %182 = trunc i64 %180 to i32
  %183 = icmp eq i32 %181, %182
  br i1 %183, label %184, label %195

184:                                              ; preds = %176
  %185 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 8
  %186 = load i8, i8* %185, align 8, !range !2
  %187 = icmp ne i8 %186, 0
  %188 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 9
  %189 = load i8, i8* %188, align 1, !range !2
  %190 = icmp ne i8 %189, 0
  %191 = tail call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64* %169, i32 0, i32 0, i32 0, i1 zeroext %187, i1 zeroext %190) #7
  %192 = icmp eq i64* %191, null
  br i1 %192, label %662, label %193

193:                                              ; preds = %184
  %194 = tail call i16 @_ZN2v88internal14KeyAccumulator18AddKeysFromJSProxyENS0_6HandleINS0_7JSProxyEEENS2_INS0_10FixedArrayEEE(%"class.v8::internal::KeyAccumulator"* %0, i64* %2, i64* nonnull %191) #7
  br label %662

195:                                              ; preds = %176
  %196 = bitcast [1 x %"class.v8::internal::Handle.1137"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #7
  %197 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1137"], [1 x %"class.v8::internal::Handle.1137"]* %6, i64 0, i64 0
  %198 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1137"], [1 x %"class.v8::internal::Handle.1137"]* %6, i64 0, i64 0, i32 0, i32 0
  store i64* %169, i64** %198, align 8
  %199 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %178, i64* nonnull %174, i64* %119, i32 1, %"class.v8::internal::Handle.1137"* nonnull %197) #7
  %200 = icmp eq i64* %199, null
  br i1 %200, label %660, label %201

201:                                              ; preds = %195
  %202 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %203 = call i64* @_ZN2v88internal6Object23CreateListFromArrayLikeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementTypesE(%"class.v8::internal::Isolate"* %202, i64* nonnull %199, i32 1) #7
  %204 = icmp eq i64* %203, null
  br i1 %204, label %660, label %205

205:                                              ; preds = %201
  %206 = bitcast %"class.v8::internal::Zone"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %206) #7
  %207 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %207, i64 0, i32 34
  %209 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %208, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %7, %"class.v8::internal::AccountingAllocator"* %209, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__._ZN2v88internal14KeyAccumulator21CollectOwnJSProxyKeysENS0_6HandleINS0_10JSReceiverEEENS2_INS0_7JSProxyEEE, i64 0, i64 0), i1 zeroext false) #7
  %210 = bitcast %"class.v8::base::TemplateHashMapImpl"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %210) #7
  %211 = bitcast %"class.v8::internal::KeyAccumulator"* %0 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = ptrtoint %"class.v8::internal::Zone"* %7 to i64
  %214 = bitcast %"class.v8::base::TemplateHashMapImpl"* %8 to i64*
  store i64 %212, i64* %214, align 8
  %215 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %8, i64 0, i32 0, i32 1
  %216 = bitcast %"class.v8::internal::ZoneAllocationPolicy"* %215 to i64*
  store i64 %213, i64* %216, align 8
  %217 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %8, i64 0, i32 0, i32 2
  %218 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %217 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 16, i1 false) #7
  %219 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 2
  %220 = load i64, i64* %219, align 8
  %221 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 3
  %222 = load i64, i64* %221, align 8
  %223 = sub i64 %222, %220
  %224 = icmp ult i64 %223, 192
  br i1 %224, label %225, label %227, !prof !3

225:                                              ; preds = %205
  %226 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* nonnull %7, i64 192) #7
  br label %229

227:                                              ; preds = %205
  %228 = add i64 %220, 192
  store i64 %228, i64* %219, align 8
  br label %229

229:                                              ; preds = %227, %225
  %230 = phi i64 [ %226, %225 ], [ %220, %227 ]
  %231 = inttoptr i64 %230 to %"struct.v8::base::TemplateHashMapEntry"*
  store %"struct.v8::base::TemplateHashMapEntry"* %231, %"struct.v8::base::TemplateHashMapEntry"** %217, align 8
  %232 = icmp eq i64 %230, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %229
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.25, i64 0, i64 0)) #9
  unreachable

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %8, i64 0, i32 0, i32 3
  store i32 8, i32* %235, align 8
  %236 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %231, i64 0, i32 3
  store i8 0, i8* %236, align 8
  %237 = load i32, i32* %235, align 8
  %238 = icmp ugt i32 %237, 1
  br i1 %238, label %239, label %271

239:                                              ; preds = %234
  %240 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %217, align 8
  %241 = zext i32 %237 to i64
  %242 = add nsw i64 %241, -1
  %243 = add nsw i64 %241, -2
  %244 = and i64 %242, 3
  %245 = icmp ult i64 %243, 3
  br i1 %245, label %261, label %246

246:                                              ; preds = %239
  %247 = sub nsw i64 %242, %244
  br label %248

248:                                              ; preds = %248, %246
  %249 = phi i64 [ 1, %246 ], [ %258, %248 ]
  %250 = phi i64 [ %247, %246 ], [ %259, %248 ]
  %251 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %240, i64 %249, i32 3
  store i8 0, i8* %251, align 8
  %252 = add nuw nsw i64 %249, 1
  %253 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %240, i64 %252, i32 3
  store i8 0, i8* %253, align 8
  %254 = add nuw nsw i64 %249, 2
  %255 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %240, i64 %254, i32 3
  store i8 0, i8* %255, align 8
  %256 = add nuw nsw i64 %249, 3
  %257 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %240, i64 %256, i32 3
  store i8 0, i8* %257, align 8
  %258 = add nuw nsw i64 %249, 4
  %259 = add i64 %250, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %248

261:                                              ; preds = %248, %239
  %262 = phi i64 [ 1, %239 ], [ %258, %248 ]
  %263 = icmp eq i64 %244, 0
  br i1 %263, label %271, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %268, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %269, %264 ], [ %244, %261 ]
  %267 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %240, i64 %265, i32 3
  store i8 0, i8* %267, align 8
  %268 = add nuw nsw i64 %265, 1
  %269 = add i64 %266, -1
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %271, label %264, !llvm.loop !4

271:                                              ; preds = %261, %264, %234
  %272 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %8, i64 0, i32 0, i32 4
  store i32 0, i32* %272, align 4
  %273 = load i64, i64* %203, align 8
  %274 = add i64 %273, 3
  %275 = inttoptr i64 %274 to i32*
  %276 = load i32, i32* %275, align 4
  %277 = icmp sgt i32 %276, 1
  br i1 %277, label %278, label %362

278:                                              ; preds = %271
  %279 = bitcast %"class.v8::internal::Handle.1141"* %9 to i8*
  %280 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %9, i64 0, i32 0, i32 0
  %281 = bitcast %"class.v8::internal::String"* %5 to i8*
  %282 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = bitcast %"class.v8::internal::Handle.1141"* %4 to i8*
  %284 = bitcast %"class.v8::internal::Handle.1141"* %4 to i64*
  br label %285

285:                                              ; preds = %278, %346
  %286 = phi i64 [ %273, %278 ], [ %349, %346 ]
  %287 = phi i64 [ 0, %278 ], [ %348, %346 ]
  %288 = phi i32 [ 0, %278 ], [ %347, %346 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %279) #7
  %289 = and i64 %286, -4294967296
  %290 = trunc i64 %287 to i32
  %291 = shl i32 %290, 2
  %292 = sext i32 %291 to i64
  %293 = add nsw i64 %292, 7
  %294 = add i64 %293, %286
  %295 = inttoptr i64 %294 to i32*
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = zext i32 %296 to i64
  %298 = or i64 %289, %297
  %299 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %300 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %299, i64 0, i32 31, i32 4
  %301 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %300, align 8
  %302 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %301, null
  br i1 %302, label %307, label %303

303:                                              ; preds = %285
  %304 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %301, i64 %298) #7
  %305 = load i64, i64* %304, align 8
  %306 = ptrtoint i64* %304 to i64
  br label %320

307:                                              ; preds = %285
  %308 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %299, i64 0, i32 31, i32 0
  %309 = load i64*, i64** %308, align 8
  %310 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %299, i64 0, i32 31, i32 1
  %311 = load i64*, i64** %310, align 8
  %312 = icmp eq i64* %309, %311
  br i1 %312, label %313, label %315

313:                                              ; preds = %307
  %314 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %299) #7
  br label %315

315:                                              ; preds = %313, %307
  %316 = phi i64* [ %314, %313 ], [ %309, %307 ]
  %317 = ptrtoint i64* %316 to i64
  %318 = add i64 %317, 8
  %319 = inttoptr i64 %318 to i64*
  store i64* %319, i64** %308, align 8
  store i64 %298, i64* %316, align 8
  br label %320

320:                                              ; preds = %303, %315
  %321 = phi i64 [ %306, %303 ], [ %317, %315 ]
  %322 = phi i64 [ %305, %303 ], [ %298, %315 ]
  %323 = phi i64* [ %304, %303 ], [ %316, %315 ]
  store i64* %323, i64** %280, align 8
  %324 = add i64 %322, 3
  %325 = inttoptr i64 %324 to i32*
  %326 = load i32, i32* %325, align 4
  %327 = and i32 %326, 1
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %331

329:                                              ; preds = %320
  %330 = lshr i32 %326, 2
  br label %333

331:                                              ; preds = %320
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %281) #7
  store i64 %322, i64* %282, align 8
  %332 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %281) #7
  br label %333

333:                                              ; preds = %329, %331
  %334 = phi i32 [ %330, %329 ], [ %332, %331 ]
  %335 = call fastcc %"struct.v8::base::TemplateHashMapEntry"* @_ZNK2v84base19TemplateHashMapImplINS_8internal6HandleINS2_4NameEEEiNS2_12_GLOBAL__N_114NameComparatorENS2_20ZoneAllocationPolicyEE5ProbeIS5_EEPNS0_20TemplateHashMapEntryIS5_iEERKT_j(%"class.v8::base::TemplateHashMapImpl"* nonnull %8, %"class.v8::internal::Handle.1141"* nonnull dereferenceable(8) %9, i32 %334) #7
  %336 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %335, i64 0, i32 3
  %337 = load i8, i8* %336, align 8, !range !2
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %339, label %341

339:                                              ; preds = %333
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %283) #7
  store i64 %321, i64* %284, align 8
  %340 = call fastcc %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplINS_8internal6HandleINS2_4NameEEEiNS2_12_GLOBAL__N_114NameComparatorENS2_20ZoneAllocationPolicyEE14FillEmptyEntryEPNS0_20TemplateHashMapEntryIS5_iEERKS5_RKij(%"class.v8::base::TemplateHashMapImpl"* nonnull %8, %"struct.v8::base::TemplateHashMapEntry"* %335, %"class.v8::internal::Handle.1141"* nonnull dereferenceable(8) %4, i32 0, i32 %334) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %283) #7
  br label %341

341:                                              ; preds = %333, %339
  %342 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %340, %339 ], [ %335, %333 ]
  %343 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %342, i64 0, i32 1
  %344 = load i32, i32* %343, align 8
  %345 = icmp eq i32 %344, 1
  br i1 %345, label %356, label %346

346:                                              ; preds = %341
  store i32 1, i32* %343, align 8
  %347 = add nuw nsw i32 %288, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #7
  %348 = add nuw nsw i64 %287, 1
  %349 = load i64, i64* %203, align 8
  %350 = add i64 %349, 3
  %351 = inttoptr i64 %350 to i32*
  %352 = load i32, i32* %351, align 4
  %353 = ashr i32 %352, 1
  %354 = sext i32 %353 to i64
  %355 = icmp slt i64 %348, %354
  br i1 %355, label %285, label %362

356:                                              ; preds = %341
  %357 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %358 = bitcast %"class.v8::internal::Isolate"* %357 to %"class.v8::internal::Factory"*
  %359 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %358, i32 147, i64* null, i64* null, i64* null) #7
  %360 = load i64, i64* %359, align 8
  %361 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %357, i64 %360, %"class.v8::internal::MessageLocation"* null) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #7
  br label %658

362:                                              ; preds = %346, %271
  %363 = phi i32 [ 0, %271 ], [ %347, %346 ]
  %364 = call i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64* %169) #7
  %365 = trunc i16 %364 to i8
  %366 = icmp eq i8 %365, 0
  br i1 %366, label %658, label %367

367:                                              ; preds = %362
  %368 = icmp ugt i16 %364, 255
  %369 = call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_6HandleINS0_10JSReceiverEEENS0_17KeyCollectionModeENS0_14PropertyFilterENS0_17GetKeysConversionEbb(i64* %169, i32 0, i32 0, i32 0, i1 zeroext false, i1 zeroext false) #7
  %370 = icmp eq i64* %369, null
  br i1 %370, label %658, label %371

371:                                              ; preds = %367
  %372 = bitcast %"class.v8::internal::KeyAccumulator"* %0 to %"class.v8::internal::FactoryBase"**
  %373 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %372, align 8
  %374 = load i64, i64* %369, align 8
  %375 = add i64 %374, 3
  %376 = inttoptr i64 %375 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = ashr i32 %377, 1
  %379 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %373, i32 %378, i8 zeroext 0) #7
  %380 = load i64, i64* %369, align 8
  %381 = add i64 %380, 3
  %382 = inttoptr i64 %381 to i32*
  %383 = load i32, i32* %382, align 4
  %384 = icmp sgt i32 %383, 1
  br i1 %384, label %385, label %488

385:                                              ; preds = %371
  %386 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %10, i64 0, i32 0
  %387 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %10, i64 0, i32 1, i32 0, i32 0
  %388 = bitcast i64** %387 to i8*
  br label %389

389:                                              ; preds = %385, %477
  %390 = phi i64 [ 0, %385 ], [ %479, %477 ]
  %391 = phi i32 [ 0, %385 ], [ %478, %477 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %386) #7
  store i8 0, i8* %386, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %388, i8 0, i64 32, i1 false) #7
  %392 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %393 = load i64, i64* %369, align 8
  %394 = and i64 %393, -4294967296
  %395 = trunc i64 %390 to i32
  %396 = shl i32 %395, 2
  %397 = sext i32 %396 to i64
  %398 = add nsw i64 %397, 7
  %399 = add i64 %393, %398
  %400 = inttoptr i64 %399 to i32*
  %401 = load atomic i32, i32* %400 monotonic, align 4
  %402 = zext i32 %401 to i64
  %403 = or i64 %394, %402
  %404 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %392, i64 0, i32 31, i32 4
  %405 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %404, align 8
  %406 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %405, null
  br i1 %406, label %409, label %407

407:                                              ; preds = %389
  %408 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %405, i64 %403) #7
  br label %422

409:                                              ; preds = %389
  %410 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %392, i64 0, i32 31, i32 0
  %411 = load i64*, i64** %410, align 8
  %412 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %392, i64 0, i32 31, i32 1
  %413 = load i64*, i64** %412, align 8
  %414 = icmp eq i64* %411, %413
  br i1 %414, label %415, label %417

415:                                              ; preds = %409
  %416 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %392) #7
  br label %417

417:                                              ; preds = %415, %409
  %418 = phi i64* [ %416, %415 ], [ %411, %409 ]
  %419 = ptrtoint i64* %418 to i64
  %420 = add i64 %419, 8
  %421 = inttoptr i64 %420 to i64*
  store i64* %421, i64** %410, align 8
  store i64 %403, i64* %418, align 8
  br label %422

422:                                              ; preds = %407, %417
  %423 = phi i64* [ %408, %407 ], [ %418, %417 ]
  %424 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"* %392, i64* %169, i64* %423, %"class.v8::internal::PropertyDescriptor"* nonnull %10) #7
  %425 = trunc i16 %424 to i8
  %426 = icmp eq i8 %425, 0
  br i1 %426, label %487, label %427

427:                                              ; preds = %422
  %428 = icmp ugt i16 %424, 255
  br i1 %428, label %429, label %477

429:                                              ; preds = %427
  %430 = load i8, i8* %386, align 8
  %431 = and i8 %430, 4
  %432 = icmp eq i8 %431, 0
  br i1 %432, label %433, label %477

433:                                              ; preds = %429
  %434 = load i64, i64* %379, align 8
  %435 = load i64, i64* %369, align 8
  %436 = and i64 %435, -4294967296
  %437 = add i64 %435, %398
  %438 = inttoptr i64 %437 to i32*
  %439 = load atomic i32, i32* %438 monotonic, align 4
  %440 = zext i32 %439 to i64
  %441 = or i64 %436, %440
  %442 = shl i32 %391, 2
  %443 = sext i32 %442 to i64
  %444 = add nsw i64 %443, 7
  %445 = add i64 %444, %434
  %446 = inttoptr i64 %445 to i32*
  store atomic volatile i32 %439, i32* %446 monotonic, align 4
  %447 = and i64 %440, 1
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %472, label %449

449:                                              ; preds = %433
  %450 = and i64 %434, -262144
  %451 = or i64 %450, 8
  %452 = inttoptr i64 %451 to i64*
  %453 = load i64, i64* %452, align 8
  %454 = and i64 %453, 262144
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %460, label %456

456:                                              ; preds = %449
  %457 = or i64 %450, 16
  %458 = inttoptr i64 %457 to %"class.v8::internal::Heap"**
  %459 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %458, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %459, i64 %434, i64 %445, i64 %441) #7
  br label %460

460:                                              ; preds = %456, %449
  %461 = and i64 %441, -262144
  %462 = or i64 %461, 8
  %463 = inttoptr i64 %462 to i64*
  %464 = load i64, i64* %463, align 8
  %465 = and i64 %464, 24
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %472, label %467

467:                                              ; preds = %460
  %468 = load i64, i64* %452, align 8
  %469 = and i64 %468, 24
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %471, label %472

471:                                              ; preds = %467
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %434, i64 %445, i64 %441) #7
  br label %472

472:                                              ; preds = %433, %460, %467, %471
  %473 = add nsw i32 %391, 1
  %474 = load i64, i64* %369, align 8
  %475 = add i64 %474, %398
  %476 = inttoptr i64 %475 to i32*
  store atomic volatile i32 0, i32* %476 monotonic, align 4
  br label %477

477:                                              ; preds = %429, %427, %472
  %478 = phi i32 [ %391, %427 ], [ %473, %472 ], [ %391, %429 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %386) #7
  %479 = add nuw nsw i64 %390, 1
  %480 = load i64, i64* %369, align 8
  %481 = add i64 %480, 3
  %482 = inttoptr i64 %481 to i32*
  %483 = load i32, i32* %482, align 4
  %484 = ashr i32 %483, 1
  %485 = sext i32 %484 to i64
  %486 = icmp slt i64 %479, %485
  br i1 %486, label %389, label %488

487:                                              ; preds = %422
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %386) #7
  br label %658

488:                                              ; preds = %477, %371
  %489 = phi i32 [ 0, %371 ], [ %478, %477 ]
  %490 = icmp eq i32 %489, 0
  %491 = and i1 %368, %490
  br i1 %491, label %498, label %492

492:                                              ; preds = %488
  %493 = icmp sgt i32 %489, 0
  br i1 %493, label %494, label %561

494:                                              ; preds = %492
  %495 = bitcast %"class.v8::internal::Handle.1141"* %11 to i8*
  %496 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %11, i64 0, i32 0, i32 0
  %497 = zext i32 %489 to i64
  br label %500

498:                                              ; preds = %488
  %499 = call i16 @_ZN2v88internal14KeyAccumulator18AddKeysFromJSProxyENS0_6HandleINS0_7JSProxyEEENS2_INS0_10FixedArrayEEE(%"class.v8::internal::KeyAccumulator"* %0, i64* %2, i64* nonnull %203)
  br label %658

500:                                              ; preds = %551, %494
  %501 = phi i64 [ 0, %494 ], [ %553, %551 ]
  %502 = phi i32 [ %363, %494 ], [ %552, %551 ]
  %503 = load i64, i64* %379, align 8
  %504 = and i64 %503, -4294967296
  %505 = trunc i64 %501 to i32
  %506 = shl i32 %505, 2
  %507 = sext i32 %506 to i64
  %508 = add nsw i64 %507, 7
  %509 = add i64 %508, %503
  %510 = inttoptr i64 %509 to i32*
  %511 = load atomic i32, i32* %510 monotonic, align 4
  %512 = zext i32 %511 to i64
  %513 = or i64 %504, %512
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %495) #7
  %514 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %515 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %514, i64 0, i32 31, i32 4
  %516 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %515, align 8
  %517 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %516, null
  br i1 %517, label %521, label %518

518:                                              ; preds = %500
  %519 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %516, i64 %513) #7
  %520 = load i64, i64* %519, align 8
  br label %534

521:                                              ; preds = %500
  %522 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %514, i64 0, i32 31, i32 0
  %523 = load i64*, i64** %522, align 8
  %524 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %514, i64 0, i32 31, i32 1
  %525 = load i64*, i64** %524, align 8
  %526 = icmp eq i64* %523, %525
  br i1 %526, label %527, label %529

527:                                              ; preds = %521
  %528 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %514) #7
  br label %529

529:                                              ; preds = %527, %521
  %530 = phi i64* [ %528, %527 ], [ %523, %521 ]
  %531 = ptrtoint i64* %530 to i64
  %532 = add i64 %531, 8
  %533 = inttoptr i64 %532 to i64*
  store i64* %533, i64** %522, align 8
  store i64 %513, i64* %530, align 8
  br label %534

534:                                              ; preds = %518, %529
  %535 = phi i64 [ %520, %518 ], [ %513, %529 ]
  %536 = phi i64* [ %519, %518 ], [ %530, %529 ]
  store i64* %536, i64** %496, align 8
  %537 = add i64 %535, 3
  %538 = inttoptr i64 %537 to i32*
  %539 = load i32, i32* %538, align 4
  %540 = lshr i32 %539, 2
  %541 = call fastcc %"struct.v8::base::TemplateHashMapEntry"* @_ZNK2v84base19TemplateHashMapImplINS_8internal6HandleINS2_4NameEEEiNS2_12_GLOBAL__N_114NameComparatorENS2_20ZoneAllocationPolicyEE5ProbeIS5_EEPNS0_20TemplateHashMapEntryIS5_iEERKT_j(%"class.v8::base::TemplateHashMapImpl"* nonnull %8, %"class.v8::internal::Handle.1141"* nonnull dereferenceable(8) %11, i32 %540) #7
  %542 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %541, i64 0, i32 3
  %543 = load i8, i8* %542, align 8, !range !2
  %544 = icmp eq i8 %543, 0
  %545 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %541, null
  %546 = or i1 %545, %544
  br i1 %546, label %555, label %547

547:                                              ; preds = %534
  %548 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %541, i64 0, i32 1
  %549 = load i32, i32* %548, align 8
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %555, label %551

551:                                              ; preds = %547
  store i32 0, i32* %548, align 8
  %552 = add nsw i32 %502, -1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %495) #7
  %553 = add nuw nsw i64 %501, 1
  %554 = icmp eq i64 %553, %497
  br i1 %554, label %561, label %500

555:                                              ; preds = %547, %534
  %556 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %557 = bitcast %"class.v8::internal::Isolate"* %556 to %"class.v8::internal::Factory"*
  %558 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %557, i32 145, i64* %536, i64* null, i64* null) #7
  %559 = load i64, i64* %558, align 8
  %560 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %556, i64 %559, %"class.v8::internal::MessageLocation"* null) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %495) #7
  br label %658

561:                                              ; preds = %551, %492
  %562 = phi i32 [ %363, %492 ], [ %552, %551 ]
  br i1 %368, label %572, label %563

563:                                              ; preds = %561
  %564 = load i64, i64* %369, align 8
  %565 = add i64 %564, 3
  %566 = inttoptr i64 %565 to i32*
  %567 = load i32, i32* %566, align 4
  %568 = icmp sgt i32 %567, 1
  br i1 %568, label %569, label %647

569:                                              ; preds = %563
  %570 = bitcast %"class.v8::internal::Handle.1141"* %12 to i8*
  %571 = getelementptr inbounds %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %12, i64 0, i32 0, i32 0
  br label %574

572:                                              ; preds = %561
  %573 = call i16 @_ZN2v88internal14KeyAccumulator18AddKeysFromJSProxyENS0_6HandleINS0_7JSProxyEEENS2_INS0_10FixedArrayEEE(%"class.v8::internal::KeyAccumulator"* %0, i64* %2, i64* nonnull %203)
  br label %658

574:                                              ; preds = %569, %631
  %575 = phi i64 [ %564, %569 ], [ %632, %631 ]
  %576 = phi i64 [ 0, %569 ], [ %634, %631 ]
  %577 = phi i32 [ %562, %569 ], [ %633, %631 ]
  %578 = and i64 %575, -4294967296
  %579 = trunc i64 %576 to i32
  %580 = shl i32 %579, 2
  %581 = sext i32 %580 to i64
  %582 = add nsw i64 %581, 7
  %583 = add i64 %582, %575
  %584 = inttoptr i64 %583 to i32*
  %585 = load atomic i32, i32* %584 monotonic, align 4
  %586 = zext i32 %585 to i64
  %587 = or i64 %578, %586
  %588 = and i64 %586, 1
  %589 = icmp eq i64 %588, 0
  br i1 %589, label %631, label %590

590:                                              ; preds = %574
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %570) #7
  %591 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %592 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %591, i64 0, i32 31, i32 4
  %593 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %592, align 8
  %594 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %593, null
  br i1 %594, label %598, label %595

595:                                              ; preds = %590
  %596 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %593, i64 %587) #7
  %597 = load i64, i64* %596, align 8
  br label %611

598:                                              ; preds = %590
  %599 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %591, i64 0, i32 31, i32 0
  %600 = load i64*, i64** %599, align 8
  %601 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %591, i64 0, i32 31, i32 1
  %602 = load i64*, i64** %601, align 8
  %603 = icmp eq i64* %600, %602
  br i1 %603, label %604, label %606

604:                                              ; preds = %598
  %605 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %591) #7
  br label %606

606:                                              ; preds = %604, %598
  %607 = phi i64* [ %605, %604 ], [ %600, %598 ]
  %608 = ptrtoint i64* %607 to i64
  %609 = add i64 %608, 8
  %610 = inttoptr i64 %609 to i64*
  store i64* %610, i64** %599, align 8
  store i64 %587, i64* %607, align 8
  br label %611

611:                                              ; preds = %595, %606
  %612 = phi i64 [ %597, %595 ], [ %587, %606 ]
  %613 = phi i64* [ %596, %595 ], [ %607, %606 ]
  store i64* %613, i64** %571, align 8
  %614 = add i64 %612, 3
  %615 = inttoptr i64 %614 to i32*
  %616 = load i32, i32* %615, align 4
  %617 = lshr i32 %616, 2
  %618 = call fastcc %"struct.v8::base::TemplateHashMapEntry"* @_ZNK2v84base19TemplateHashMapImplINS_8internal6HandleINS2_4NameEEEiNS2_12_GLOBAL__N_114NameComparatorENS2_20ZoneAllocationPolicyEE5ProbeIS5_EEPNS0_20TemplateHashMapEntryIS5_iEERKT_j(%"class.v8::base::TemplateHashMapImpl"* nonnull %8, %"class.v8::internal::Handle.1141"* nonnull dereferenceable(8) %12, i32 %617) #7
  %619 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %618, i64 0, i32 3
  %620 = load i8, i8* %619, align 8, !range !2
  %621 = icmp eq i8 %620, 0
  %622 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %618, null
  %623 = or i1 %622, %621
  br i1 %623, label %641, label %624

624:                                              ; preds = %611
  %625 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %618, i64 0, i32 1
  %626 = load i32, i32* %625, align 8
  %627 = icmp eq i32 %626, 0
  br i1 %627, label %641, label %628

628:                                              ; preds = %624
  store i32 0, i32* %625, align 8
  %629 = add nsw i32 %577, -1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %570) #7
  %630 = load i64, i64* %369, align 8
  br label %631

631:                                              ; preds = %574, %628
  %632 = phi i64 [ %630, %628 ], [ %575, %574 ]
  %633 = phi i32 [ %629, %628 ], [ %577, %574 ]
  %634 = add nuw nsw i64 %576, 1
  %635 = add i64 %632, 3
  %636 = inttoptr i64 %635 to i32*
  %637 = load i32, i32* %636, align 4
  %638 = ashr i32 %637, 1
  %639 = sext i32 %638 to i64
  %640 = icmp slt i64 %634, %639
  br i1 %640, label %574, label %647

641:                                              ; preds = %611, %624
  %642 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %643 = bitcast %"class.v8::internal::Isolate"* %642 to %"class.v8::internal::Factory"*
  %644 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %643, i32 145, i64* %613, i64* null, i64* null) #7
  %645 = load i64, i64* %644, align 8
  %646 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %642, i64 %645, %"class.v8::internal::MessageLocation"* null) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %570) #7
  br label %658

647:                                              ; preds = %631, %563
  %648 = phi i32 [ %562, %563 ], [ %633, %631 ]
  %649 = icmp eq i32 %648, 0
  br i1 %649, label %656, label %650

650:                                              ; preds = %647
  %651 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %652 = bitcast %"class.v8::internal::Isolate"* %651 to %"class.v8::internal::Factory"*
  %653 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %652, i32 146, i64* null, i64* null, i64* null) #7
  %654 = load i64, i64* %653, align 8
  %655 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %651, i64 %654, %"class.v8::internal::MessageLocation"* null) #7
  br label %658

656:                                              ; preds = %647
  %657 = call i16 @_ZN2v88internal14KeyAccumulator18AddKeysFromJSProxyENS0_6HandleINS0_7JSProxyEEENS2_INS0_10FixedArrayEEE(%"class.v8::internal::KeyAccumulator"* %0, i64* %2, i64* nonnull %203)
  br label %658

658:                                              ; preds = %362, %498, %572, %650, %656, %487, %555, %641, %367, %356
  %659 = phi i16 [ 0, %356 ], [ 0, %362 ], [ 0, %367 ], [ %499, %498 ], [ %573, %572 ], [ 0, %650 ], [ %657, %656 ], [ 0, %641 ], [ 0, %555 ], [ 0, %487 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %210) #7
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %206) #7
  br label %660

660:                                              ; preds = %658, %201, %195
  %661 = phi i16 [ 0, %195 ], [ %659, %658 ], [ 0, %201 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #7
  br label %662

662:                                              ; preds = %136, %193, %184, %168, %660, %25, %30
  %663 = phi i16 [ 0, %30 ], [ 0, %25 ], [ 0, %136 ], [ %661, %660 ], [ 0, %168 ], [ %194, %193 ], [ 0, %184 ]
  ret i16 %663
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14KeyAccumulator16HasShadowingKeysEv(%"class.v8::internal::KeyAccumulator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp ne i64* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal14KeyAccumulator14CollectOwnKeysENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::KeyAccumulator"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %5 = alloca %"class.v8::internal::Context", align 8
  %6 = load i64, i64* %2, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 190
  br i1 %16, label %17, label %43

17:                                               ; preds = %3
  %18 = bitcast %"class.v8::internal::Context"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = and i64 %6, -262144
  %20 = or i64 %19, 16
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = add i64 %22, -41416
  %24 = inttoptr i64 %23 to %"class.v8::internal::Isolate"*
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  %29 = bitcast %"class.v8::internal::PrototypeIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #7
  %30 = load i64, i64* %21, align 16
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %32, %"class.v8::internal::Isolate"** %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 1, i32 0, i32 0
  store i64 %6, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 3
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 4
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 6
  store i32 0, i32* %38, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %4) #7
  %39 = load i64, i64* %34, align 8
  %40 = trunc i64 %39 to i32
  %41 = trunc i64 %28 to i32
  %42 = icmp eq i32 %40, %41
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #7
  br i1 %42, label %125, label %52

43:                                               ; preds = %3
  %44 = load atomic i32, i32* %9 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %7, %45
  %47 = add i64 %46, 9
  %48 = inttoptr i64 %47 to i8*
  %49 = load atomic i8, i8* %48 monotonic, align 1
  %50 = and i8 %49, 32
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %125, label %52

52:                                               ; preds = %17, %43
  %53 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %54 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 31, i32 4
  %58 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %59 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %52
  %61 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %58, i64 %56) #7
  br label %75

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 31, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 31, i32 1
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %64, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %54) #7
  br label %70

70:                                               ; preds = %68, %62
  %71 = phi i64* [ %69, %68 ], [ %64, %62 ]
  %72 = ptrtoint i64* %71 to i64
  %73 = add i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  store i64* %74, i64** %63, align 8
  store i64 %56, i64* %71, align 8
  br label %75

75:                                               ; preds = %60, %70
  %76 = phi i64* [ %61, %60 ], [ %71, %70 ]
  %77 = call zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %54, i64* %76, i64* %2) #7
  br i1 %77, label %125, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 6
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %146, label %82

82:                                               ; preds = %78
  %83 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %53, align 8
  %84 = call i64 @_ZN2v88internal15AccessCheckInfo3GetEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %83, i64* %2) #7
  %85 = trunc i64 %84 to i32
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %121, label %87

87:                                               ; preds = %82
  %88 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %53, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %88, i64 0, i32 31, i32 4
  %90 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %89, align 8
  %91 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %90, i64 %84) #7
  br label %107

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %88, i64 0, i32 31, i32 0
  %96 = load i64*, i64** %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %88, i64 0, i32 31, i32 1
  %98 = load i64*, i64** %97, align 8
  %99 = icmp eq i64* %96, %98
  br i1 %99, label %100, label %102

100:                                              ; preds = %94
  %101 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %88) #7
  br label %102

102:                                              ; preds = %100, %94
  %103 = phi i64* [ %101, %100 ], [ %96, %94 ]
  %104 = ptrtoint i64* %103 to i64
  %105 = add i64 %104, 8
  %106 = inttoptr i64 %105 to i64*
  store i64* %106, i64** %95, align 8
  store i64 %84, i64* %103, align 8
  br label %107

107:                                              ; preds = %102, %92
  %108 = phi i64* [ %93, %92 ], [ %103, %102 ]
  %109 = icmp eq i64* %108, null
  br i1 %109, label %121, label %110

110:                                              ; preds = %107
  %111 = load i64, i64* %108, align 8
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %110
  %117 = call i16 @_ZN2v88internal14KeyAccumulator33CollectAccessCheckInterceptorKeysENS0_6HandleINS0_15AccessCheckInfoEEENS2_INS0_10JSReceiverEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::KeyAccumulator"* %0, i64* nonnull %108, i64* %1, i64* %2)
  %118 = trunc i16 %117 to i8
  %119 = icmp ne i8 %118, 0
  %120 = zext i1 %119 to i16
  br label %146

121:                                              ; preds = %110, %82, %107
  %122 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 7
  %123 = load i32, i32* %122, align 4
  %124 = or i32 %123, 32
  store i32 %124, i32* %122, align 4
  br label %125

125:                                              ; preds = %17, %43, %121, %75
  %126 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 7
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, 64
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %125
  %131 = call zeroext i1 @_ZN2v88internal14KeyAccumulator19CollectPrivateNamesENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::KeyAccumulator"* %0, i64* undef, i64* %2)
  %132 = select i1 %131, i16 257, i16 0
  ret i16 %132

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 11
  %135 = load i8, i8* %134, align 1, !range !2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %141, label %137

137:                                              ; preds = %133
  %138 = call i16 @_ZN2v88internal14KeyAccumulator24CollectOwnElementIndicesENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::KeyAccumulator"* %0, i64* %1, i64* %2)
  %139 = trunc i16 %138 to i8
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %146, label %141

141:                                              ; preds = %133, %137
  %142 = call i16 @_ZN2v88internal14KeyAccumulator23CollectOwnPropertyNamesENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::KeyAccumulator"* %0, i64* %1, i64* %2)
  %143 = trunc i16 %142 to i8
  %144 = icmp eq i8 %143, 0
  %145 = select i1 %144, i16 0, i16 257
  br label %146

146:                                              ; preds = %141, %116, %137, %78
  %147 = phi i16 [ 1, %78 ], [ 0, %137 ], [ %120, %116 ], [ %145, %141 ]
  ret i16 %147
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal17PrototypeIterator43AdvanceFollowingProxiesIgnoringAccessChecksEv(%"class.v8::internal::PrototypeIterator"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.v8::internal::Handle.970", %"class.v8::internal::Handle.970"* %2, i64 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = load i64, i64* %4, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp eq i16 %16, 188
  br i1 %17, label %75, label %18

18:                                               ; preds = %1, %6
  %19 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = select i1 %5, i64* %20, i64* %4
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, -4294967296
  %24 = add i64 %22, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 15
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %23, %32
  %34 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %35 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 0, i32 7, i32 0, i64 6
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %31, %38
  br i1 %39, label %50, label %40

40:                                               ; preds = %18
  %41 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = add i64 %28, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = icmp ne i16 %47, 190
  %49 = zext i1 %48 to i8
  br label %50

50:                                               ; preds = %44, %40, %18
  %51 = phi i8 [ 1, %18 ], [ 0, %40 ], [ %49, %44 ]
  %52 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 %51, i8* %52, align 4
  br i1 %5, label %53, label %54

53:                                               ; preds = %50
  store i64 %33, i64* %20, align 8
  br label %107

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 31, i32 4
  %56 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %55, align 8
  %57 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %56, i64 %33) #7
  br label %73

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 31, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 31, i32 1
  %64 = load i64*, i64** %63, align 8
  %65 = icmp eq i64* %62, %64
  br i1 %65, label %66, label %68

66:                                               ; preds = %60
  %67 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %35) #7
  br label %68

68:                                               ; preds = %66, %60
  %69 = phi i64* [ %67, %66 ], [ %62, %60 ]
  %70 = ptrtoint i64* %69 to i64
  %71 = add i64 %70, 8
  %72 = inttoptr i64 %71 to i64*
  store i64* %72, i64** %61, align 8
  store i64 %33, i64* %69, align 8
  br label %73

73:                                               ; preds = %68, %58
  %74 = phi i64* [ %59, %58 ], [ %69, %68 ]
  store i64* %74, i64** %19, align 8
  br label %107

75:                                               ; preds = %6
  %76 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 6
  %77 = load i32, i32* %76, align 8
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %76, align 8
  %79 = icmp sgt i32 %77, 102399
  br i1 %79, label %80, label %84

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %82 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  %83 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %82) #7
  br label %107

84:                                               ; preds = %75
  %85 = tail call i64* @_ZN2v88internal7JSProxy12GetPrototypeENS0_6HandleIS1_EE(i64* nonnull %4) #7
  %86 = icmp eq i64* %85, null
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  store i64* null, i64** %3, align 8
  br label %107

88:                                               ; preds = %84
  %89 = ptrtoint i64* %85 to i64
  %90 = bitcast %"class.v8::internal::Handle.970"* %2 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %104, label %94

94:                                               ; preds = %88
  %95 = load i64, i64* %85, align 8
  %96 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 7, i32 0, i64 6
  %99 = load i64, i64* %98, align 8
  %100 = trunc i64 %95 to i32
  %101 = trunc i64 %99 to i32
  %102 = icmp eq i32 %100, %101
  %103 = zext i1 %102 to i8
  br label %104

104:                                              ; preds = %94, %88
  %105 = phi i8 [ 1, %88 ], [ %103, %94 ]
  %106 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 %105, i8* %106, align 4
  br label %107

107:                                              ; preds = %104, %87, %73, %53, %80
  %108 = phi i1 [ false, %80 ], [ true, %53 ], [ true, %73 ], [ true, %104 ], [ false, %87 ]
  ret i1 %108
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14KeyAccumulator15AddShadowingKeyENS0_6ObjectEPNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb1EEENS4_ILS5_1ELb1EEEEEE(%"class.v8::internal::KeyAccumulator"* nocapture, i64, %"class.v8::internal::CombinationAssertScope"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %43, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %11 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %10, align 8
  %12 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  %14 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %11, i64 %1) #7
  br label %28

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %17, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #7
  br label %23

23:                                               ; preds = %21, %15
  %24 = phi i64* [ %22, %21 ], [ %17, %15 ]
  %25 = ptrtoint i64* %24 to i64
  %26 = add i64 %25, 8
  %27 = inttoptr i64 %26 to i64*
  store i64* %27, i64** %16, align 8
  store i64 %1, i64* %24, align 8
  br label %28

28:                                               ; preds = %13, %23
  %29 = phi i64* [ %14, %13 ], [ %24, %23 ]
  %30 = load i32, i32* %4, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %43, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 5, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = icmp eq i64* %34, null
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %38 = tail call i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %37, i32 16, i8 zeroext 0, i32 0) #7
  store i64* %38, i64** %33, align 8
  br label %39

39:                                               ; preds = %36, %32
  %40 = phi i64* [ %38, %36 ], [ %34, %32 ]
  %41 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %42 = tail call i64* @_ZN2v88internal13ObjectHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %41, i64* %40, i64* %29) #7
  store i64* %42, i64** %33, align 8
  br label %43

43:                                               ; preds = %39, %28, %3
  ret void
}

declare i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal13ObjectHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18FastKeyAccumulator7PrepareEv(%"class.v8::internal::FastKeyAccumulator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::JSObject", align 8
  %3 = alloca %"class.v8::internal::JSObject", align 8
  %4 = alloca %"class.v8::internal::Map", align 8
  %5 = alloca %"class.v8::internal::JSObject", align 8
  %6 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %7 = alloca %"class.v8::internal::JSObject", align 8
  %8 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %233, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 9
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 10
  store i8 1, i8* %13, align 1
  %14 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, -4294967296
  %18 = add i64 %16, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp ugt i16 %25, 1041
  %27 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 14
  %28 = zext i1 %26 to i8
  store i8 %28, i8* %27, align 1
  %29 = load i64, i64* %15, align 8
  %30 = and i64 %29, -4294967296
  %31 = add i64 %29, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp ugt i16 %38, 188
  br i1 %39, label %40, label %60

40:                                               ; preds = %11
  %41 = bitcast %"class.v8::internal::JSObject"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #7
  %42 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %29, i64* %42, align 8
  %43 = call zeroext i1 @_ZN2v88internal8JSObject21HasEnumerableElementsEv(%"class.v8::internal::JSObject"* nonnull %2) #7
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = load i64, i64* %42, align 8
  %46 = and i64 %45, -4294967296
  %47 = add i64 %45, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %46, %50
  %52 = add i64 %51, 9
  %53 = inttoptr i64 %52 to i8*
  %54 = load atomic i8, i8* %53 monotonic, align 1
  %55 = and i8 %54, 8
  %56 = icmp ne i8 %55, 0
  br label %57

57:                                               ; preds = %44, %40
  %58 = phi i1 [ true, %40 ], [ %56, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #7
  %59 = load i64*, i64** %14, align 8
  br label %60

60:                                               ; preds = %11, %57
  %61 = phi i64* [ %59, %57 ], [ %15, %11 ]
  %62 = phi i1 [ %58, %57 ], [ true, %11 ]
  %63 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 11
  %64 = zext i1 %62 to i8
  store i8 %64, i8* %63, align 4
  %65 = bitcast %"class.v8::internal::PrototypeIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %65) #7
  %66 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 0
  %67 = bitcast %"class.v8::internal::FastKeyAccumulator"* %0 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = load i64, i64* %61, align 8
  %70 = bitcast %"class.v8::internal::PrototypeIterator"* %6 to i64*
  store i64 %68, i64* %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %6, i64 0, i32 1, i32 0, i32 0
  store i64 %69, i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %6, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %72, align 8
  %73 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %6, i64 0, i32 3
  store i32 0, i32* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %6, i64 0, i32 4
  store i8 0, i8* %74, align 4
  %75 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %6, i64 0, i32 6
  store i32 0, i32* %75, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %6) #7
  %76 = load i8, i8* %74, align 4, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %85

78:                                               ; preds = %60
  %79 = bitcast %"class.v8::internal::JSObject"* %3 to i8*
  %80 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.v8::internal::Map"* %4 to i8*
  %82 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.v8::internal::JSObject"* %5 to i8*
  %84 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %94

85:                                               ; preds = %178, %60
  %86 = phi i64 [ 0, %60 ], [ %179, %178 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %65) #7
  %87 = load i64*, i64** %14, align 8
  %88 = call zeroext i1 @_ZN2v88internal18FastKeyAccumulator21TryPrototypeInfoCacheENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::FastKeyAccumulator"* %0, i64* %87)
  %89 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 13
  %90 = zext i1 %88 to i8
  store i8 %90, i8* %89, align 2
  %91 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 12
  %92 = load i8, i8* %91, align 1, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %182, label %233

94:                                               ; preds = %78, %178
  %95 = phi i64 [ 0, %78 ], [ %179, %178 ]
  %96 = load i64, i64* %71, align 8
  %97 = load i8, i8* %63, align 4, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %94
  %100 = load i8, i8* %27, align 1, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %99
  %103 = and i64 %96, -4294967296
  %104 = add i64 %96, -1
  %105 = inttoptr i64 %104 to i32*
  br label %134

106:                                              ; preds = %99, %94
  %107 = and i64 %96, -4294967296
  %108 = add i64 %96, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %107, %111
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = icmp ugt i16 %115, 188
  br i1 %116, label %117, label %133

117:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #7
  store i64 %96, i64* %80, align 8
  %118 = call zeroext i1 @_ZN2v88internal8JSObject21HasEnumerableElementsEv(%"class.v8::internal::JSObject"* nonnull %3) #7
  br i1 %118, label %119, label %120

119:                                              ; preds = %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #7
  br label %133

120:                                              ; preds = %117
  %121 = load i64, i64* %80, align 8
  %122 = and i64 %121, -4294967296
  %123 = add i64 %121, -1
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %122, %126
  %128 = add i64 %127, 9
  %129 = inttoptr i64 %128 to i8*
  %130 = load atomic i8, i8* %129 monotonic, align 1
  %131 = and i8 %130, 8
  %132 = icmp eq i8 %131, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #7
  br i1 %132, label %134, label %133

133:                                              ; preds = %120, %106, %119
  store i8 1, i8* %63, align 4
  store i8 0, i8* %27, align 1
  br label %134

134:                                              ; preds = %102, %120, %133
  %135 = phi i32* [ %105, %102 ], [ %109, %120 ], [ %109, %133 ]
  %136 = phi i64 [ %103, %102 ], [ %107, %120 ], [ %107, %133 ]
  %137 = load atomic i32, i32* %135 monotonic, align 4
  %138 = zext i32 %137 to i64
  %139 = or i64 %136, %138
  %140 = add i64 %139, 11
  %141 = inttoptr i64 %140 to i32*
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 1023
  %144 = icmp eq i32 %143, 1023
  br i1 %144, label %145, label %166

145:                                              ; preds = %134
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #7
  %146 = load atomic i32, i32* %135 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %136, %147
  store i64 %148, i64* %82, align 8
  %149 = call zeroext i1 @_ZNK2v88internal3Map23OnlyHasSimplePropertiesEv(%"class.v8::internal::Map"* nonnull %4) #7
  br i1 %149, label %150, label %165

150:                                              ; preds = %145
  %151 = load i64, i64* %82, align 8
  %152 = add i64 %151, 7
  %153 = inttoptr i64 %152 to i16*
  %154 = load atomic i16, i16* %153 monotonic, align 2
  %155 = icmp eq i16 %154, 188
  br i1 %155, label %165, label %156

156:                                              ; preds = %150
  %157 = call i32 @_ZNK2v88internal3Map28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Map"* nonnull %4) #7
  %158 = icmp sgt i32 %157, 0
  br i1 %158, label %165, label %159

159:                                              ; preds = %156
  %160 = load i64, i64* %82, align 8
  %161 = add i64 %160, 11
  %162 = inttoptr i64 %161 to i32*
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, -1024
  store atomic volatile i32 %164, i32* %162 monotonic, align 4
  br label %165

165:                                              ; preds = %159, %156, %150, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #7
  br label %166

166:                                              ; preds = %165, %134
  %167 = load atomic i32, i32* %135 monotonic, align 4
  %168 = zext i32 %167 to i64
  %169 = or i64 %136, %168
  %170 = add i64 %169, 11
  %171 = inttoptr i64 %170 to i32*
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 1023
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %166
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #7
  store i64 %96, i64* %84, align 8
  %176 = call zeroext i1 @_ZN2v88internal8JSObject21HasEnumerableElementsEv(%"class.v8::internal::JSObject"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #7
  br i1 %176, label %177, label %178

177:                                              ; preds = %175, %166
  store i8 0, i8* %13, align 1
  br label %178

178:                                              ; preds = %175, %177
  %179 = phi i64 [ %95, %175 ], [ %96, %177 ]
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %6)
  %180 = load i8, i8* %74, align 4, !range !2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %94, label %85

182:                                              ; preds = %85
  %183 = load i8, i8* %13, align 1, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %207, label %185

185:                                              ; preds = %182
  %186 = load i64*, i64** %14, align 8
  %187 = load i64, i64* %186, align 8
  %188 = and i64 %187, -4294967296
  %189 = add i64 %187, -1
  %190 = inttoptr i64 %189 to i32*
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = zext i32 %191 to i64
  %193 = or i64 %188, %192
  %194 = add i64 %193, 11
  %195 = inttoptr i64 %194 to i32*
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 1023
  %198 = icmp eq i32 %197, 1023
  %199 = bitcast %"class.v8::internal::JSObject"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %199) #7
  br i1 %198, label %205, label %200

200:                                              ; preds = %185
  %201 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %187, i64* %201, align 8
  %202 = call zeroext i1 @_ZN2v88internal8JSObject21HasEnumerableElementsEv(%"class.v8::internal::JSObject"* nonnull %7) #7
  %203 = xor i1 %202, true
  %204 = zext i1 %203 to i8
  br label %205

205:                                              ; preds = %185, %200
  %206 = phi i8 [ 0, %185 ], [ %204, %200 ]
  store i8 %206, i8* %12, align 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %199) #7
  br label %233

207:                                              ; preds = %182
  %208 = trunc i64 %86 to i32
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %233, label %210

210:                                              ; preds = %207
  %211 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %66, align 8
  %212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %211, i64 0, i32 31, i32 4
  %213 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %212, align 8
  %214 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %210
  %216 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %213, i64 %86) #7
  br label %230

217:                                              ; preds = %210
  %218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %211, i64 0, i32 31, i32 0
  %219 = load i64*, i64** %218, align 8
  %220 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %211, i64 0, i32 31, i32 1
  %221 = load i64*, i64** %220, align 8
  %222 = icmp eq i64* %219, %221
  br i1 %222, label %223, label %225

223:                                              ; preds = %217
  %224 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %211) #7
  br label %225

225:                                              ; preds = %223, %217
  %226 = phi i64* [ %224, %223 ], [ %219, %217 ]
  %227 = ptrtoint i64* %226 to i64
  %228 = add i64 %227, 8
  %229 = inttoptr i64 %228 to i64*
  store i64* %229, i64** %218, align 8
  store i64 %86, i64* %226, align 8
  br label %230

230:                                              ; preds = %215, %225
  %231 = phi i64* [ %216, %215 ], [ %226, %225 ]
  %232 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 4, i32 0, i32 0
  store i64* %231, i64** %232, align 8
  br label %233

233:                                              ; preds = %85, %207, %230, %205, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal18FastKeyAccumulator15MayHaveElementsENS0_10JSReceiverE(%"class.v8::internal::FastKeyAccumulator"* nocapture readnone, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::JSObject", align 8
  %4 = and i64 %1, -4294967296
  %5 = add i64 %1, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp ugt i16 %12, 188
  br i1 %13, label %14, label %33

14:                                               ; preds = %2
  %15 = bitcast %"class.v8::internal::JSObject"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %16, align 8
  %17 = call zeroext i1 @_ZN2v88internal8JSObject21HasEnumerableElementsEv(%"class.v8::internal::JSObject"* nonnull %3) #7
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = load i64, i64* %16, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = add i64 %25, 9
  %27 = inttoptr i64 %26 to i8*
  %28 = load atomic i8, i8* %27 monotonic, align 1
  %29 = and i8 %28, 8
  %30 = icmp ne i8 %29, 0
  br label %31

31:                                               ; preds = %18, %14
  %32 = phi i1 [ true, %14 ], [ %30, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  br label %33

33:                                               ; preds = %2, %31
  %34 = phi i1 [ %32, %31 ], [ true, %2 ]
  ret i1 %34
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.v8::internal::Handle.970", %"class.v8::internal::Handle.970"* %2, i64 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %6, label %28

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %6
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 188
  br i1 %21, label %22, label %47

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 1, i8* %23, align 4
  %24 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 7, i32 0, i64 6
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %7, align 8
  br label %104

28:                                               ; preds = %1
  %29 = load i64, i64* %4, align 8
  %30 = and i64 %29, -4294967296
  %31 = add i64 %29, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 188
  br i1 %39, label %40, label %47

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 1, i8* %41, align 4
  %42 = bitcast %"class.v8::internal::PrototypeIterator"* %0 to %"class.v8::internal::Factory"**
  %43 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %43, i64 176
  %45 = ptrtoint %"class.v8::internal::Factory"* %44 to i64
  %46 = bitcast %"class.v8::internal::Handle.970"* %2 to i64*
  store i64 %45, i64* %46, align 8
  br label %104

47:                                               ; preds = %6, %11, %28
  %48 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %49 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %50 = select i1 %5, i64* %49, i64* %4
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, -4294967296
  %53 = add i64 %51, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %52, %56
  %58 = add i64 %57, 15
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %52, %61
  %63 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 0, i32 7, i32 0, i64 6
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %60, %67
  br i1 %68, label %79, label %69

69:                                               ; preds = %47
  %70 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = add i64 %57, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = icmp ne i16 %76, 190
  %78 = zext i1 %77 to i8
  br label %79

79:                                               ; preds = %73, %69, %47
  %80 = phi i8 [ 1, %47 ], [ 0, %69 ], [ %78, %73 ]
  %81 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 %80, i8* %81, align 4
  br i1 %5, label %82, label %83

82:                                               ; preds = %79
  store i64 %62, i64* %49, align 8
  br label %104

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 4
  %85 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %84, align 8
  %86 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %85, i64 %62) #7
  br label %102

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 0
  %91 = load i64*, i64** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 1
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %91, %93
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %64) #7
  br label %97

97:                                               ; preds = %95, %89
  %98 = phi i64* [ %96, %95 ], [ %91, %89 ]
  %99 = ptrtoint i64* %98 to i64
  %100 = add i64 %99, 8
  %101 = inttoptr i64 %100 to i64*
  store i64* %101, i64** %90, align 8
  store i64 %62, i64* %98, align 8
  br label %102

102:                                              ; preds = %97, %87
  %103 = phi i64* [ %88, %87 ], [ %98, %97 ]
  store i64* %103, i64** %48, align 8
  br label %104

104:                                              ; preds = %102, %82, %40, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal18FastKeyAccumulator21TryPrototypeInfoCacheENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::FastKeyAccumulator"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %4 = alloca %"class.v8::internal::Context", align 8
  %5 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 11
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 14
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %248, label %12

12:                                               ; preds = %8, %2
  %13 = load i64, i64* %1, align 8
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 11
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2097152
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %248

25:                                               ; preds = %12
  %26 = load atomic i32, i32* %16 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %14, %27
  %29 = add i64 %28, 9
  %30 = inttoptr i64 %29 to i8*
  %31 = load atomic i8, i8* %30 monotonic, align 1
  %32 = and i8 %31, 4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %248

34:                                               ; preds = %25
  %35 = load atomic i32, i32* %16 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %14, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp eq i16 %40, 190
  br i1 %41, label %42, label %68

42:                                               ; preds = %34
  %43 = bitcast %"class.v8::internal::Context"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #7
  %44 = and i64 %13, -262144
  %45 = or i64 %44, 16
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 16
  %48 = add i64 %47, -41416
  %49 = inttoptr i64 %48 to %"class.v8::internal::Isolate"*
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %49, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %51, i64* %52, align 8
  %53 = call i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #7
  %54 = bitcast %"class.v8::internal::PrototypeIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %54) #7
  %55 = load i64, i64* %46, align 16
  %56 = add i64 %55, -41416
  %57 = inttoptr i64 %56 to %"class.v8::internal::Isolate"*
  %58 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %57, %"class.v8::internal::Isolate"** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 1, i32 0, i32 0
  store i64 %13, i64* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 3
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 4
  store i8 0, i8* %62, align 4
  %63 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 6
  store i32 0, i32* %63, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %3) #7
  %64 = load i64, i64* %59, align 8
  %65 = trunc i64 %64 to i32
  %66 = trunc i64 %53 to i32
  %67 = icmp eq i32 %65, %66
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #7
  br i1 %67, label %103, label %77

68:                                               ; preds = %34
  %69 = load atomic i32, i32* %16 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %14, %70
  %72 = add i64 %71, 9
  %73 = inttoptr i64 %72 to i8*
  %74 = load atomic i8, i8* %73 monotonic, align 1
  %75 = and i8 %74, 32
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %103, label %77

77:                                               ; preds = %42, %68
  %78 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 0
  %79 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %79, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %79, i64 0, i32 31, i32 4
  %83 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %82, align 8
  %84 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %77
  %86 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %83, i64 %81) #7
  br label %100

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %79, i64 0, i32 31, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %79, i64 0, i32 31, i32 1
  %91 = load i64*, i64** %90, align 8
  %92 = icmp eq i64* %89, %91
  br i1 %92, label %93, label %95

93:                                               ; preds = %87
  %94 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %79) #7
  br label %95

95:                                               ; preds = %93, %87
  %96 = phi i64* [ %94, %93 ], [ %89, %87 ]
  %97 = ptrtoint i64* %96 to i64
  %98 = add i64 %97, 8
  %99 = inttoptr i64 %98 to i64*
  store i64* %99, i64** %88, align 8
  store i64 %81, i64* %96, align 8
  br label %100

100:                                              ; preds = %85, %95
  %101 = phi i64* [ %86, %85 ], [ %96, %95 ]
  %102 = call zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %79, i64* %101, i64* %1) #7
  br i1 %102, label %103, label %248

103:                                              ; preds = %42, %68, %100
  %104 = load i64, i64* %1, align 8
  %105 = and i64 %104, -4294967296
  %106 = add i64 %104, -1
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %105, %109
  %111 = add i64 %110, 15
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i64
  %115 = or i64 %105, %114
  %116 = icmp eq i32 %113, 0
  br i1 %116, label %248, label %117

117:                                              ; preds = %103
  %118 = add i64 %115, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %105, %121
  %123 = add i64 %122, 11
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 acquire, align 4
  %126 = and i32 %125, 1048576
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %248, label %128

128:                                              ; preds = %117
  %129 = load atomic i32, i32* %119 monotonic, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %105, %130
  %132 = add i64 %131, 35
  %133 = inttoptr i64 %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i64
  %136 = and i64 %135, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %248, label %138

138:                                              ; preds = %128
  %139 = or i64 %105, %135
  %140 = add i64 %139, -1
  %141 = inttoptr i64 %140 to i32*
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = zext i32 %142 to i64
  %144 = or i64 %105, %143
  %145 = add i64 %144, 7
  %146 = inttoptr i64 %145 to i16*
  %147 = load atomic i16, i16* %146 monotonic, align 2
  %148 = icmp eq i16 %147, 110
  br i1 %148, label %149, label %248

149:                                              ; preds = %138
  %150 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 0
  %151 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %151, i64 0, i32 31, i32 4
  %153 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %152, align 8
  %154 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %149
  %156 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %153, i64 %115) #7
  br label %170

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %151, i64 0, i32 31, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %151, i64 0, i32 31, i32 1
  %161 = load i64*, i64** %160, align 8
  %162 = icmp eq i64* %159, %161
  br i1 %162, label %163, label %165

163:                                              ; preds = %157
  %164 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %151) #7
  br label %165

165:                                              ; preds = %163, %157
  %166 = phi i64* [ %164, %163 ], [ %159, %157 ]
  %167 = ptrtoint i64* %166 to i64
  %168 = add i64 %167, 8
  %169 = inttoptr i64 %168 to i64*
  store i64* %169, i64** %158, align 8
  store i64 %115, i64* %166, align 8
  br label %170

170:                                              ; preds = %155, %165
  %171 = phi i64* [ %156, %155 ], [ %166, %165 ]
  %172 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* %171, i64** %172, align 8
  %173 = load atomic i32, i32* %119 monotonic, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %105, %174
  %176 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %150, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %176, i64 0, i32 31, i32 4
  %178 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %177, align 8
  %179 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %178, null
  br i1 %179, label %183, label %180

180:                                              ; preds = %170
  %181 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %178, i64 %175) #7
  %182 = ptrtoint i64* %181 to i64
  br label %196

183:                                              ; preds = %170
  %184 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %176, i64 0, i32 31, i32 0
  %185 = load i64*, i64** %184, align 8
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %176, i64 0, i32 31, i32 1
  %187 = load i64*, i64** %186, align 8
  %188 = icmp eq i64* %185, %187
  br i1 %188, label %189, label %191

189:                                              ; preds = %183
  %190 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %176) #7
  br label %191

191:                                              ; preds = %189, %183
  %192 = phi i64* [ %190, %189 ], [ %185, %183 ]
  %193 = ptrtoint i64* %192 to i64
  %194 = add i64 %193, 8
  %195 = inttoptr i64 %194 to i64*
  store i64* %195, i64** %184, align 8
  store i64 %175, i64* %192, align 8
  br label %196

196:                                              ; preds = %180, %191
  %197 = phi i64 [ %182, %180 ], [ %193, %191 ]
  %198 = phi i64* [ %181, %180 ], [ %192, %191 ]
  %199 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 2
  %200 = bitcast %"class.v8::internal::Handle.1133"* %199 to i64*
  store i64 %197, i64* %200, align 8
  %201 = load i64, i64* %198, align 8
  %202 = and i64 %201, -4294967296
  %203 = add i64 %201, 31
  %204 = inttoptr i64 %203 to i32*
  %205 = load i32, i32* %204, align 4
  %206 = zext i32 %205 to i64
  %207 = or i64 %202, %206
  %208 = and i64 %206, 1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %216, label %210

210:                                              ; preds = %196
  %211 = add i64 %207, 3
  %212 = inttoptr i64 %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = zext i32 %213 to i64
  %215 = or i64 %202, %214
  br label %216

216:                                              ; preds = %196, %210
  %217 = phi i64 [ %215, %210 ], [ %207, %196 ]
  %218 = trunc i64 %217 to i32
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %245

220:                                              ; preds = %216
  %221 = add i64 %201, 35
  %222 = inttoptr i64 %221 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = zext i32 %223 to i64
  %225 = or i64 %202, %224
  %226 = add i64 %225, 11
  %227 = inttoptr i64 %226 to i32*
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i64
  %230 = and i64 %229, 1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %245, label %232

232:                                              ; preds = %220
  %233 = or i64 %202, %229
  %234 = add i64 %233, -1
  %235 = inttoptr i64 %234 to i32*
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = zext i32 %236 to i64
  %238 = or i64 %202, %237
  %239 = add i64 %238, 7
  %240 = inttoptr i64 %239 to i16*
  %241 = load atomic i16, i16* %240 monotonic, align 2
  %242 = add i16 %241, -119
  %243 = icmp ult i16 %242, 13
  %244 = zext i1 %243 to i8
  br label %245

245:                                              ; preds = %232, %220, %216
  %246 = phi i8 [ 0, %216 ], [ 0, %220 ], [ %244, %232 ]
  %247 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 12
  store i8 %246, i8* %247, align 1
  br label %248

248:                                              ; preds = %117, %25, %128, %12, %100, %138, %103, %245, %8
  %249 = phi i1 [ false, %8 ], [ false, %12 ], [ false, %25 ], [ false, %100 ], [ true, %245 ], [ false, %103 ], [ false, %138 ], [ false, %117 ], [ false, %128 ]
  ret i1 %249
}

declare zeroext i1 @_ZN2v88internal8JSObject21HasEnumerableElementsEv(%"class.v8::internal::JSObject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal18FastKeyAccumulator11GetKeysFastENS0_17GetKeysConversionE(%"class.v8::internal::FastKeyAccumulator"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 10
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ true, %2 ], [ %9, %6 ]
  %12 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  br i1 %11, label %21, label %129

21:                                               ; preds = %10
  %22 = add i64 %20, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp ult i16 %24, 1042
  br i1 %25, label %129, label %26

26:                                               ; preds = %21
  %27 = add i64 %20, 11
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2097152
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %40, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 0
  %34 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 8
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_122GetOwnKeysWithElementsILb0EEENS0_11MaybeHandleINS0_10FixedArrayEEEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS0_17GetKeysConversionEb(%"class.v8::internal::Isolate"* %34, i64* %13, i32 %1, i1 zeroext %37)
  %39 = ptrtoint i64* %38 to i64
  br label %129

40:                                               ; preds = %26
  %41 = load atomic i32, i32* %17 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %15, %42
  %44 = add i64 %43, 11
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 1023
  %48 = icmp eq i32 %47, 1023
  br i1 %48, label %49, label %121

49:                                               ; preds = %40
  %50 = load atomic i32, i32* %17 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %15, %51
  %53 = add i64 %14, 7
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 0
  %57 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 0, i32 7, i32 0, i64 29
  %59 = load i64, i64* %58, align 8
  %60 = trunc i64 %59 to i32
  %61 = icmp eq i32 %55, %60
  br i1 %61, label %67, label %62

62:                                               ; preds = %49
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 0, i32 7, i32 0, i64 111
  %64 = load i64, i64* %63, align 8
  %65 = trunc i64 %64 to i32
  %66 = icmp eq i32 %55, %65
  br i1 %66, label %67, label %121

67:                                               ; preds = %62, %49
  %68 = add i64 %52, 11
  %69 = inttoptr i64 %68 to i32*
  %70 = load atomic i32, i32* %69 acquire, align 4
  %71 = and i32 %70, 1047552
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %67
  %74 = load atomic i32, i32* %69 monotonic, align 4
  %75 = and i32 %74, -1024
  store atomic volatile i32 %75, i32* %69 monotonic, align 4
  %76 = bitcast %"class.v8::internal::FastKeyAccumulator"* %0 to %"class.v8::internal::Factory"**
  %77 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %77, i64 360
  %79 = ptrtoint %"class.v8::internal::Factory"* %78 to i64
  br label %93

80:                                               ; preds = %67
  %81 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %56, align 8
  %82 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_123GetFastEnumPropertyKeysEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %81, i64* %13) #7
  %83 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 7
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %80
  %87 = ptrtoint i64* %82 to i64
  br label %93

88:                                               ; preds = %80
  %89 = bitcast %"class.v8::internal::FastKeyAccumulator"* %0 to %"class.v8::internal::Factory"**
  %90 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %89, align 8
  %91 = tail call i64* @_ZN2v88internal7Factory14CopyFixedArrayENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::Factory"* %90, i64* %82) #7
  %92 = ptrtoint i64* %91 to i64
  br label %93

93:                                               ; preds = %73, %86, %88
  %94 = phi i64 [ %79, %73 ], [ %92, %88 ], [ %87, %86 ]
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %121, label %96

96:                                               ; preds = %93
  %97 = load i8, i8* @_ZN2v88internal27FLAG_trace_for_in_enumerateE, align 1, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %96
  %100 = inttoptr i64 %94 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 3
  %103 = inttoptr i64 %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = ashr i32 %104, 1
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 %105) #7
  br label %106

106:                                              ; preds = %96, %99
  %107 = load i64, i64* %13, align 8
  %108 = and i64 %107, -4294967296
  %109 = add i64 %107, -1
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %108, %112
  %114 = add i64 %113, 11
  %115 = inttoptr i64 %114 to i32*
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 1023
  %118 = icmp ne i32 %117, 1023
  %119 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 9
  %120 = zext i1 %118 to i8
  store i8 %120, i8* %119, align 2
  br label %129

121:                                              ; preds = %62, %93, %40
  %122 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 0
  %123 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 8
  %125 = load i8, i8* %124, align 1, !range !2
  %126 = icmp ne i8 %125, 0
  %127 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_122GetOwnKeysWithElementsILb1EEENS0_11MaybeHandleINS0_10FixedArrayEEEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS0_17GetKeysConversionEb(%"class.v8::internal::Isolate"* %123, i64* %13, i32 %1, i1 zeroext %126)
  %128 = ptrtoint i64* %127 to i64
  br label %129

129:                                              ; preds = %32, %106, %121, %10, %21
  %130 = phi i64 [ 0, %21 ], [ 0, %10 ], [ %39, %32 ], [ %94, %106 ], [ %128, %121 ]
  %131 = inttoptr i64 %130 to i64*
  ret i64* %131
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal18FastKeyAccumulator29GetKeysWithPrototypeInfoCacheENS0_17GetKeysConversionE(%"class.v8::internal::FastKeyAccumulator"* readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::KeyAccumulator", align 8
  %5 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 11
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %35, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, -4294967296
  %13 = add i64 %11, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 11
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2097152
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 0
  %24 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 8
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp ne i8 %26, 0
  br i1 %22, label %30, label %28

28:                                               ; preds = %8
  %29 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_122GetOwnKeysWithElementsILb0EEENS0_11MaybeHandleINS0_10FixedArrayEEEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS0_17GetKeysConversionEb(%"class.v8::internal::Isolate"* %24, i64* %10, i32 %1, i1 zeroext %27)
  br label %32

30:                                               ; preds = %8
  %31 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_122GetOwnKeysWithElementsILb1EEENS0_11MaybeHandleINS0_10FixedArrayEEEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS0_17GetKeysConversionEb(%"class.v8::internal::Isolate"* %24, i64* %10, i32 %1, i1 zeroext %27)
  br label %32

32:                                               ; preds = %28, %30
  %33 = phi i64* [ %29, %28 ], [ %31, %30 ]
  %34 = icmp eq i64* %33, null
  br i1 %34, label %367, label %41

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 0
  %37 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 1, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = tail call i64* @_ZN2v88internal14KeyAccumulator22GetOwnEnumPropertyKeysEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %37, i64* %39)
  br label %41

41:                                               ; preds = %32, %35
  %42 = phi i64* [ %40, %35 ], [ %33, %32 ]
  %43 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 12
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %81, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 2, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, -4294967296
  %51 = add i64 %49, 35
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %50, %54
  %56 = add i64 %55, 11
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %50, %59
  %61 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 0
  %62 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %62, i64 0, i32 31, i32 4
  %64 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %63, align 8
  %65 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %46
  %67 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %64, i64 %60) #7
  br label %125

68:                                               ; preds = %46
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %62, i64 0, i32 31, i32 0
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %62, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %70, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %68
  %75 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %62) #7
  br label %76

76:                                               ; preds = %74, %68
  %77 = phi i64* [ %75, %74 ], [ %70, %68 ]
  %78 = ptrtoint i64* %77 to i64
  %79 = add i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  store i64* %80, i64** %69, align 8
  store i64 %60, i64* %77, align 8
  br label %125

81:                                               ; preds = %41
  %82 = bitcast %"class.v8::internal::KeyAccumulator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %82) #7
  %83 = bitcast %"class.v8::internal::FastKeyAccumulator"* %0 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 5
  %86 = load i32, i32* %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 6
  %88 = load i32, i32* %87, align 4
  %89 = bitcast %"class.v8::internal::KeyAccumulator"* %4 to i64*
  store i64 %84, i64* %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 1, i32 0, i32 0
  %91 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 6
  %92 = bitcast i64** %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 40, i1 false) #7
  store i32 %86, i32* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 7
  store i32 %88, i32* %93, align 4
  %94 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 8
  %95 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 9
  %96 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 10
  store i8 1, i8* %96, align 2
  %97 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 11
  %98 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 12
  %99 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 7
  %100 = load i8, i8* %99, align 8, !range !2
  store i8 %100, i8* %94, align 8
  %101 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 8
  %102 = load i8, i8* %101, align 1, !range !2
  store i8 %102, i8* %95, align 1
  %103 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 4, i32 0, i32 0
  %104 = bitcast i64** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 4, i32 0, i32 0
  %107 = bitcast i64** %106 to i64*
  store i64 %105, i64* %107, align 8
  %108 = load i8, i8* %5, align 4, !range !2
  store i8 %108, i8* %97, align 1
  %109 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast i64** %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8
  %112 = shufflevector <2 x i64> %111, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %113 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 2, i32 0, i32 0
  %114 = bitcast i64** %113 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %114, align 8
  %115 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 13
  %116 = load i8, i8* %115, align 2, !range !2
  store i8 %116, i8* %98, align 4
  %117 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 3, i32 0, i32 0
  %118 = load i64*, i64** %117, align 8
  %119 = call i16 @_ZN2v88internal14KeyAccumulator11CollectKeysENS0_6HandleINS0_10JSReceiverEEES4_(%"class.v8::internal::KeyAccumulator"* nonnull %4, i64* %118, i64* %118)
  %120 = trunc i16 %119 to i8
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %81
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %82) #7
  br label %367

123:                                              ; preds = %81
  %124 = call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_17GetKeysConversionE(%"class.v8::internal::KeyAccumulator"* nonnull %4, i32 %1)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %82) #7
  br label %125

125:                                              ; preds = %76, %66, %123
  %126 = phi i64* [ %124, %123 ], [ %67, %66 ], [ %77, %76 ]
  %127 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 0
  %128 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %127, align 8
  %129 = load i64, i64* %126, align 8
  %130 = add i64 %129, 3
  %131 = inttoptr i64 %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = ashr i32 %132, 1
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %336, label %135

135:                                              ; preds = %125
  %136 = load i8, i8* %5, align 4, !range !2
  %137 = icmp ne i8 %136, 0
  %138 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 1, i32 0, i32 0
  %139 = load i64*, i64** %138, align 8
  %140 = load i64, i64* %139, align 8
  %141 = and i64 %140, -4294967296
  %142 = add i64 %140, -1
  %143 = inttoptr i64 %142 to i32*
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = zext i32 %144 to i64
  %146 = or i64 %141, %145
  %147 = add i64 %146, 11
  %148 = inttoptr i64 %147 to i32*
  %149 = load atomic i32, i32* %148 acquire, align 4
  %150 = lshr i32 %149, 10
  %151 = and i32 %150, 1023
  %152 = icmp eq i32 %151, 0
  %153 = xor i1 %152, true
  %154 = or i1 %137, %153
  br i1 %154, label %155, label %336

155:                                              ; preds = %135
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %128, i64 0, i32 0, i32 4
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %146, 23
  %159 = inttoptr i64 %158 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = and i64 %157, 4294967295
  %162 = icmp eq i64 %161, 0
  call void @llvm.assume(i1 %162) #7
  %163 = zext i32 %160 to i64
  %164 = or i64 %157, %163
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %128, i64 0, i32 31, i32 4
  %166 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %165, align 8
  %167 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %155
  %169 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %166, i64 %164) #7
  br label %183

170:                                              ; preds = %155
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %128, i64 0, i32 31, i32 0
  %172 = load i64*, i64** %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %128, i64 0, i32 31, i32 1
  %174 = load i64*, i64** %173, align 8
  %175 = icmp eq i64* %172, %174
  br i1 %175, label %176, label %178

176:                                              ; preds = %170
  %177 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %128) #7
  br label %178

178:                                              ; preds = %176, %170
  %179 = phi i64* [ %177, %176 ], [ %172, %170 ]
  %180 = ptrtoint i64* %179 to i64
  %181 = add i64 %180, 8
  %182 = inttoptr i64 %181 to i64*
  store i64* %182, i64** %171, align 8
  store i64 %164, i64* %179, align 8
  br label %183

183:                                              ; preds = %178, %168
  %184 = phi i64* [ %169, %168 ], [ %179, %178 ]
  %185 = icmp eq i64* %42, null
  br i1 %185, label %186, label %189

186:                                              ; preds = %183
  %187 = bitcast %"class.v8::internal::Isolate"* %128 to %"class.v8::internal::FactoryBase"*
  %188 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %187, i32 %133, i8 zeroext 0) #7
  br label %205

189:                                              ; preds = %183
  %190 = load i64, i64* %42, align 8
  %191 = add i64 %190, 3
  %192 = inttoptr i64 %191 to i32*
  %193 = load i32, i32* %192, align 4
  %194 = ashr i32 %193, 1
  %195 = bitcast %"class.v8::internal::Isolate"* %128 to %"class.v8::internal::FactoryBase"*
  %196 = add nsw i32 %194, %133
  %197 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %195, i32 %196, i8 zeroext 0) #7
  %198 = icmp eq i32 %194, 0
  br i1 %198, label %205, label %199

199:                                              ; preds = %189
  %200 = bitcast %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #7
  %201 = load i64, i64* %42, align 8
  %202 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %201, i64* %202, align 8
  %203 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef"* %3, i64 0, i32 0
  %204 = load i64, i64* %197, align 8
  call void @_ZNK2v88internal10FixedArray6CopyToEiS1_ii(%"class.v8::internal::FixedArray"* nonnull %203, i32 0, i64 %204, i32 0, i32 %194) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #7
  br label %205

205:                                              ; preds = %199, %189, %186
  %206 = phi i64* [ %188, %186 ], [ %197, %189 ], [ %197, %199 ]
  %207 = phi i32 [ 0, %186 ], [ 0, %189 ], [ %194, %199 ]
  %208 = icmp sgt i32 %132, 1
  br i1 %208, label %209, label %268

209:                                              ; preds = %205
  %210 = zext i32 %151 to i64
  br i1 %152, label %213, label %211

211:                                              ; preds = %209
  %212 = sext i32 %133 to i64
  br label %271

213:                                              ; preds = %209
  %214 = sext i32 %207 to i64
  %215 = sext i32 %133 to i64
  br label %216

216:                                              ; preds = %262, %213
  %217 = phi i64 [ 0, %213 ], [ %264, %262 ]
  %218 = phi i64 [ %214, %213 ], [ %263, %262 ]
  %219 = load i64, i64* %126, align 8
  %220 = and i64 %219, -4294967296
  %221 = trunc i64 %217 to i32
  %222 = shl i32 %221, 2
  %223 = sext i32 %222 to i64
  %224 = add i64 %219, 7
  %225 = add i64 %224, %223
  %226 = inttoptr i64 %225 to i32*
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = zext i32 %227 to i64
  %229 = or i64 %220, %228
  %230 = load i64, i64* %206, align 8
  %231 = trunc i64 %218 to i32
  %232 = shl i32 %231, 2
  %233 = sext i32 %232 to i64
  %234 = add nsw i64 %233, 7
  %235 = add i64 %234, %230
  %236 = inttoptr i64 %235 to i32*
  store atomic volatile i32 %227, i32* %236 monotonic, align 4
  %237 = and i64 %228, 1
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %262, label %239

239:                                              ; preds = %216
  %240 = and i64 %230, -262144
  %241 = or i64 %240, 8
  %242 = inttoptr i64 %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = and i64 %243, 262144
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %250, label %246

246:                                              ; preds = %239
  %247 = or i64 %240, 16
  %248 = inttoptr i64 %247 to %"class.v8::internal::Heap"**
  %249 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %248, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %249, i64 %230, i64 %235, i64 %229) #7
  br label %250

250:                                              ; preds = %246, %239
  %251 = and i64 %229, -262144
  %252 = or i64 %251, 8
  %253 = inttoptr i64 %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = and i64 %254, 24
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %262, label %257

257:                                              ; preds = %250
  %258 = load i64, i64* %242, align 8
  %259 = and i64 %258, 24
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %257
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %230, i64 %235, i64 %229) #7
  br label %262

262:                                              ; preds = %261, %257, %250, %216
  %263 = add nsw i64 %218, 1
  %264 = add nuw nsw i64 %217, 1
  %265 = icmp slt i64 %264, %215
  br i1 %265, label %216, label %266

266:                                              ; preds = %262
  %267 = trunc i64 %263 to i32
  br label %268

268:                                              ; preds = %331, %266, %205
  %269 = phi i32 [ %207, %205 ], [ %267, %266 ], [ %333, %331 ]
  %270 = call i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %128, i64* %206, i32 %269) #7
  br label %336

271:                                              ; preds = %331, %211
  %272 = phi i64 [ 0, %211 ], [ %334, %331 ]
  %273 = phi i32 [ %207, %211 ], [ %333, %331 ]
  %274 = load i64, i64* %126, align 8
  %275 = and i64 %274, -4294967296
  %276 = trunc i64 %272 to i32
  %277 = shl i32 %276, 2
  %278 = sext i32 %277 to i64
  %279 = add i64 %274, 7
  %280 = add i64 %279, %278
  %281 = inttoptr i64 %280 to i32*
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = zext i32 %282 to i64
  %284 = or i64 %275, %283
  %285 = load i64, i64* %184, align 8
  %286 = add i64 %285, -1
  br label %289

287:                                              ; preds = %289
  %288 = icmp eq i64 %298, %210
  br i1 %288, label %299, label %289

289:                                              ; preds = %287, %271
  %290 = phi i64 [ 0, %271 ], [ %298, %287 ]
  %291 = mul nuw nsw i64 %290, 51539607552
  %292 = add nuw nsw i64 %291, 68719476736
  %293 = lshr exact i64 %292, 32
  %294 = add i64 %286, %293
  %295 = inttoptr i64 %294 to i32*
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = icmp eq i32 %296, %282
  %298 = add nuw nsw i64 %290, 1
  br i1 %297, label %331, label %287

299:                                              ; preds = %287
  %300 = load i64, i64* %206, align 8
  %301 = shl i32 %273, 2
  %302 = sext i32 %301 to i64
  %303 = add nsw i64 %302, 7
  %304 = add i64 %303, %300
  %305 = inttoptr i64 %304 to i32*
  store atomic volatile i32 %282, i32* %305 monotonic, align 4
  %306 = and i64 %283, 1
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %331, label %308

308:                                              ; preds = %299
  %309 = and i64 %300, -262144
  %310 = or i64 %309, 8
  %311 = inttoptr i64 %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = and i64 %312, 262144
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %319, label %315

315:                                              ; preds = %308
  %316 = or i64 %309, 16
  %317 = inttoptr i64 %316 to %"class.v8::internal::Heap"**
  %318 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %317, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %318, i64 %300, i64 %304, i64 %284) #7
  br label %319

319:                                              ; preds = %315, %308
  %320 = and i64 %284, -262144
  %321 = or i64 %320, 8
  %322 = inttoptr i64 %321 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = and i64 %323, 24
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %331, label %326

326:                                              ; preds = %319
  %327 = load i64, i64* %311, align 8
  %328 = and i64 %327, 24
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %326
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %300, i64 %304, i64 %284) #7
  br label %331

331:                                              ; preds = %289, %330, %326, %319, %299
  %332 = phi i32 [ 1, %299 ], [ 1, %319 ], [ 1, %326 ], [ 1, %330 ], [ 0, %289 ]
  %333 = add nsw i32 %332, %273
  %334 = add nuw nsw i64 %272, 1
  %335 = icmp slt i64 %334, %212
  br i1 %335, label %271, label %268

336:                                              ; preds = %125, %135, %268
  %337 = phi i64* [ %42, %125 ], [ %270, %268 ], [ %126, %135 ]
  %338 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 7
  %339 = load i8, i8* %338, align 8, !range !2
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %365, label %341

341:                                              ; preds = %336
  %342 = icmp eq i64* %42, %337
  br i1 %342, label %343, label %345

343:                                              ; preds = %341
  %344 = load i64, i64* %42, align 8
  br label %355

345:                                              ; preds = %341
  %346 = icmp eq i64* %42, null
  %347 = icmp eq i64* %337, null
  %348 = or i1 %346, %347
  br i1 %348, label %365, label %349

349:                                              ; preds = %345
  %350 = load i64, i64* %42, align 8
  %351 = load i64, i64* %337, align 8
  %352 = trunc i64 %350 to i32
  %353 = trunc i64 %351 to i32
  %354 = icmp eq i32 %352, %353
  br i1 %354, label %355, label %365

355:                                              ; preds = %343, %349
  %356 = phi i64 [ %344, %343 ], [ %351, %349 ]
  %357 = bitcast %"class.v8::internal::FastKeyAccumulator"* %0 to %"class.v8::internal::Factory"**
  %358 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %357, align 8
  %359 = add i64 %356, 3
  %360 = inttoptr i64 %359 to i32*
  %361 = load i32, i32* %360, align 4
  %362 = ashr i32 %361, 1
  %363 = call i64* @_ZN2v88internal7Factory18CopyFixedArrayUpToENS0_6HandleINS0_10FixedArrayEEEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %358, i64* %337, i32 %362, i8 zeroext 0) #7
  %364 = ptrtoint i64* %363 to i64
  br label %367

365:                                              ; preds = %345, %336, %349
  %366 = ptrtoint i64* %337 to i64
  br label %367

367:                                              ; preds = %122, %365, %355, %32
  %368 = phi i64 [ 0, %32 ], [ 0, %122 ], [ %366, %365 ], [ %364, %355 ]
  %369 = inttoptr i64 %368 to i64*
  ret i64* %369
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal18FastKeyAccumulator11GetKeysSlowENS0_17GetKeysConversionE(%"class.v8::internal::FastKeyAccumulator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::KeyAccumulator", align 8
  %4 = bitcast %"class.v8::internal::KeyAccumulator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #7
  %5 = bitcast %"class.v8::internal::FastKeyAccumulator"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.v8::internal::KeyAccumulator"* %3 to i64*
  store i64 %6, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %3, i64 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %3, i64 0, i32 6
  %14 = bitcast i64** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 40, i1 false) #7
  store i32 %8, i32* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %3, i64 0, i32 7
  store i32 %10, i32* %15, align 4
  %16 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %3, i64 0, i32 8
  %17 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %3, i64 0, i32 9
  %18 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %3, i64 0, i32 10
  store i8 1, i8* %18, align 2
  %19 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %3, i64 0, i32 11
  %20 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %3, i64 0, i32 12
  %21 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 7
  %22 = load i8, i8* %21, align 8, !range !2
  store i8 %22, i8* %16, align 8
  %23 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 8
  %24 = load i8, i8* %23, align 1, !range !2
  store i8 %24, i8* %17, align 1
  %25 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 4, i32 0, i32 0
  %26 = bitcast i64** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %3, i64 0, i32 4, i32 0, i32 0
  %29 = bitcast i64** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 11
  %31 = load i8, i8* %30, align 4, !range !2
  store i8 %31, i8* %19, align 1
  %32 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 2, i32 0, i32 0
  %33 = bitcast i64** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %3, i64 0, i32 2, i32 0, i32 0
  %36 = bitcast i64** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 13
  %38 = load i8, i8* %37, align 2, !range !2
  store i8 %38, i8* %20, align 4
  %39 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 1, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = call i16 @_ZN2v88internal14KeyAccumulator11CollectKeysENS0_6HandleINS0_10JSReceiverEEES4_(%"class.v8::internal::KeyAccumulator"* nonnull %3, i64* %40, i64* %40)
  %42 = trunc i16 %41 to i8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %2
  %45 = call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_17GetKeysConversionE(%"class.v8::internal::KeyAccumulator"* nonnull %3, i32 %1)
  br label %46

46:                                               ; preds = %2, %44
  %47 = phi i64* [ %45, %44 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #7
  ret i64* %47
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_122GetOwnKeysWithElementsILb0EEENS0_11MaybeHandleINS0_10FixedArrayEEEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS0_17GetKeysConversionEb(%"class.v8::internal::Isolate"*, i64*, i32, i1 zeroext) unnamed_addr #0 {
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 10
  %13 = inttoptr i64 %12 to i8*
  %14 = load i8, i8* %13, align 1
  %15 = lshr i8 %14, 2
  %16 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %17 = zext i8 %15 to i64
  %18 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %16, i64 %17
  %19 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %18, align 8
  %20 = tail call i64* @_ZN2v88internal14KeyAccumulator22GetOwnEnumPropertyKeysEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1)
  br i1 %3, label %60, label %21

21:                                               ; preds = %4
  %22 = load i64, i64* %1, align 8
  %23 = and i64 %22, -4294967296
  %24 = add i64 %22, 7
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = and i64 %22, -262144
  %30 = or i64 %29, 16
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 16
  %33 = add i64 %32, -41416
  %34 = inttoptr i64 %33 to %"class.v8::internal::Isolate"*
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 4
  %36 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %21
  %39 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %36, i64 %28) #7
  br label %53

40:                                               ; preds = %21
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = icmp eq i64* %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %34) #7
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i64* [ %47, %46 ], [ %42, %40 ]
  %50 = ptrtoint i64* %49 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  store i64* %52, i64** %41, align 8
  store i64 %28, i64* %49, align 8
  br label %53

53:                                               ; preds = %38, %48
  %54 = phi i64* [ %39, %38 ], [ %49, %48 ]
  %55 = bitcast %"class.v8::internal::ElementsAccessor"* %19 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)***
  %56 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)*** %55, align 8
  %57 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)** %56, i64 11
  %58 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)** %57, align 8
  %59 = tail call i64* %58(%"class.v8::internal::ElementsAccessor"* %19, i64* %1, i64* %54, i64* %20, i32 %2, i32 2) #7
  br label %60

60:                                               ; preds = %4, %53
  %61 = phi i64* [ %59, %53 ], [ %20, %4 ]
  %62 = load i8, i8* @_ZN2v88internal27FLAG_trace_for_in_enumerateE, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %79, label %64

64:                                               ; preds = %60
  %65 = load i64, i64* %20, align 8
  %66 = add i64 %65, 3
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = ashr i32 %68, 1
  %70 = icmp eq i64* %61, null
  br i1 %70, label %71, label %72, !prof !3

71:                                               ; preds = %64
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #9
  unreachable

72:                                               ; preds = %64
  %73 = load i64, i64* %61, align 8
  %74 = add i64 %73, 3
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = ashr i32 %76, 1
  %78 = sub nsw i32 %77, %69
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.22, i64 0, i64 0), i32 %69, i32 %78) #7
  br label %79

79:                                               ; preds = %60, %72
  ret i64* %61
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal18FastKeyAccumulator36GetOwnKeysWithUninitializedEnumCacheEv(%"class.v8::internal::FastKeyAccumulator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %4, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 29
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = icmp eq i32 %13, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 111
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %13, %23
  br i1 %24, label %25, label %51

25:                                               ; preds = %20, %1
  %26 = add i64 %10, 11
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = and i32 %28, 1047552
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %25
  %32 = load atomic i32, i32* %27 monotonic, align 4
  %33 = and i32 %32, -1024
  store atomic volatile i32 %33, i32* %27 monotonic, align 4
  %34 = bitcast %"class.v8::internal::FastKeyAccumulator"* %0 to %"class.v8::internal::Factory"**
  %35 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %35, i64 360
  %37 = ptrtoint %"class.v8::internal::Factory"* %36 to i64
  br label %51

38:                                               ; preds = %25
  %39 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %14, align 8
  %40 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_123GetFastEnumPropertyKeysEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %39, i64* %3)
  %41 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %0, i64 0, i32 7
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %38
  %45 = ptrtoint i64* %40 to i64
  br label %51

46:                                               ; preds = %38
  %47 = bitcast %"class.v8::internal::FastKeyAccumulator"* %0 to %"class.v8::internal::Factory"**
  %48 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %47, align 8
  %49 = tail call i64* @_ZN2v88internal7Factory14CopyFixedArrayENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::Factory"* %48, i64* %40) #7
  %50 = ptrtoint i64* %49 to i64
  br label %51

51:                                               ; preds = %20, %31, %46, %44
  %52 = phi i64 [ %37, %31 ], [ %50, %46 ], [ %45, %44 ], [ 0, %20 ]
  %53 = inttoptr i64 %52 to i64*
  ret i64* %53
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_122GetOwnKeysWithElementsILb1EEENS0_11MaybeHandleINS0_10FixedArrayEEEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS0_17GetKeysConversionEb(%"class.v8::internal::Isolate"*, i64*, i32, i1 zeroext) unnamed_addr #0 {
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 10
  %13 = inttoptr i64 %12 to i8*
  %14 = load i8, i8* %13, align 1
  %15 = lshr i8 %14, 2
  %16 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %17 = zext i8 %15 to i64
  %18 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %16, i64 %17
  %19 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %18, align 8
  %20 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_123GetFastEnumPropertyKeysEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1)
  br i1 %3, label %60, label %21

21:                                               ; preds = %4
  %22 = load i64, i64* %1, align 8
  %23 = and i64 %22, -4294967296
  %24 = add i64 %22, 7
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = and i64 %22, -262144
  %30 = or i64 %29, 16
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 16
  %33 = add i64 %32, -41416
  %34 = inttoptr i64 %33 to %"class.v8::internal::Isolate"*
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 4
  %36 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %21
  %39 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %36, i64 %28) #7
  br label %53

40:                                               ; preds = %21
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = icmp eq i64* %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %34) #7
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i64* [ %47, %46 ], [ %42, %40 ]
  %50 = ptrtoint i64* %49 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  store i64* %52, i64** %41, align 8
  store i64 %28, i64* %49, align 8
  br label %53

53:                                               ; preds = %38, %48
  %54 = phi i64* [ %39, %38 ], [ %49, %48 ]
  %55 = bitcast %"class.v8::internal::ElementsAccessor"* %19 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)***
  %56 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)*** %55, align 8
  %57 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)** %56, i64 11
  %58 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64*, i32, i32)** %57, align 8
  %59 = tail call i64* %58(%"class.v8::internal::ElementsAccessor"* %19, i64* %1, i64* %54, i64* %20, i32 %2, i32 2) #7
  br label %60

60:                                               ; preds = %4, %53
  %61 = phi i64* [ %59, %53 ], [ %20, %4 ]
  %62 = load i8, i8* @_ZN2v88internal27FLAG_trace_for_in_enumerateE, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %79, label %64

64:                                               ; preds = %60
  %65 = load i64, i64* %20, align 8
  %66 = add i64 %65, 3
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = ashr i32 %68, 1
  %70 = icmp eq i64* %61, null
  br i1 %70, label %71, label %72, !prof !3

71:                                               ; preds = %64
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #9
  unreachable

72:                                               ; preds = %64
  %73 = load i64, i64* %61, align 8
  %74 = add i64 %73, 3
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = ashr i32 %76, 1
  %78 = sub nsw i32 %77, %69
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.22, i64 0, i64 0), i32 %69, i32 %78) #7
  br label %79

79:                                               ; preds = %60, %72
  ret i64* %61
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_123GetFastEnumPropertyKeysEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"*, i64*) unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::Representation", align 1
  %4 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %7 = load i64, i64* %1, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %15 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %14, align 8
  %16 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %15, i64 %13) #7
  %19 = load i64, i64* %18, align 8
  br label %33

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %24 = load i64*, i64** %23, align 8
  %25 = icmp eq i64* %22, %24
  br i1 %25, label %26, label %28

26:                                               ; preds = %20
  %27 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %28

28:                                               ; preds = %26, %20
  %29 = phi i64* [ %27, %26 ], [ %22, %20 ]
  %30 = ptrtoint i64* %29 to i64
  %31 = add i64 %30, 8
  %32 = inttoptr i64 %31 to i64*
  store i64* %32, i64** %21, align 8
  store i64 %13, i64* %29, align 8
  br label %33

33:                                               ; preds = %17, %28
  %34 = phi i64 [ %19, %17 ], [ %13, %28 ]
  %35 = phi i64* [ %18, %17 ], [ %29, %28 ]
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %34, 23
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = and i64 %37, 4294967295
  %42 = icmp eq i64 %41, 0
  tail call void @llvm.assume(i1 %42) #7
  %43 = zext i32 %40 to i64
  %44 = or i64 %37, %43
  %45 = add i64 %44, 11
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %37, %48
  %50 = add i64 %49, 3
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %37, %53
  %55 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %14, align 8
  %56 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %33
  %58 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %55, i64 %54) #7
  br label %72

59:                                               ; preds = %33
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %63 = load i64*, i64** %62, align 8
  %64 = icmp eq i64* %61, %63
  br i1 %64, label %65, label %67

65:                                               ; preds = %59
  %66 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %67

67:                                               ; preds = %65, %59
  %68 = phi i64* [ %66, %65 ], [ %61, %59 ]
  %69 = ptrtoint i64* %68 to i64
  %70 = add i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  store i64* %71, i64** %60, align 8
  store i64 %54, i64* %68, align 8
  br label %72

72:                                               ; preds = %57, %67
  %73 = phi i64* [ %58, %57 ], [ %68, %67 ]
  %74 = load i64, i64* %35, align 8
  %75 = add i64 %74, 11
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 1023
  %79 = icmp eq i32 %78, 1023
  br i1 %79, label %109, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %82 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %82, i64 0, i32 164, i32 1
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %82, i64 0, i32 164, i32 0, i32 2
  %88 = load i32*, i32** %87, align 8
  br label %93

89:                                               ; preds = %80
  store i8 1, i8* %83, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %82, i64 0, i32 164, i32 0
  %91 = tail call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %90) #7
  %92 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %82, i64 0, i32 164, i32 0, i32 2
  store i32* %91, i32** %92, align 8
  br label %93

93:                                               ; preds = %89, %86
  %94 = phi i32* [ %88, %86 ], [ %91, %89 ]
  %95 = icmp eq i32* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = load i32, i32* %94, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %94, align 4
  br label %99

99:                                               ; preds = %93, %96
  %100 = load i64, i64* %73, align 8
  %101 = add i64 %100, 3
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = ashr i32 %103, 1
  %105 = icmp eq i32 %104, %78
  br i1 %105, label %458, label %106

106:                                              ; preds = %99
  %107 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %108 = tail call i64* @_ZN2v88internal7Factory18CopyFixedArrayUpToENS0_6HandleINS0_10FixedArrayEEEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %107, i64* %73, i32 %78, i8 zeroext 0) #7
  br label %458

109:                                              ; preds = %72
  %110 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #7
  %111 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %74, i64* %111, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %4, i64 0, i32 0
  %113 = call i32 @_ZNK2v88internal3Map28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Map"* nonnull %112) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #7
  %114 = load i64, i64* %73, align 8
  %115 = add i64 %114, 3
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = ashr i32 %117, 1
  %119 = icmp sgt i32 %113, %118
  br i1 %119, label %175, label %120

120:                                              ; preds = %109
  %121 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #7
  %122 = load i64, i64* %35, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5, i64 0, i32 0
  %125 = call zeroext i1 @_ZNK2v88internal3Map23OnlyHasSimplePropertiesEv(%"class.v8::internal::Map"* nonnull %124) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #7
  br i1 %125, label %126, label %146

126:                                              ; preds = %120
  %127 = load i64, i64* %35, align 8
  %128 = icmp eq i32 %113, 1023
  br i1 %128, label %129, label %134

129:                                              ; preds = %126
  %130 = add i64 %127, 11
  %131 = inttoptr i64 %130 to i32*
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = or i32 %132, 1023
  br label %143

134:                                              ; preds = %126
  %135 = icmp ult i32 %113, 1021
  br i1 %135, label %137, label %136, !prof !6

136:                                              ; preds = %134
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

137:                                              ; preds = %134
  %138 = add i64 %127, 11
  %139 = inttoptr i64 %138 to i32*
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, -1024
  %142 = or i32 %141, %113
  br label %143

143:                                              ; preds = %129, %137
  %144 = phi i32* [ %131, %129 ], [ %139, %137 ]
  %145 = phi i32 [ %133, %129 ], [ %142, %137 ]
  store atomic volatile i32 %145, i32* %144 monotonic, align 4
  br label %146

146:                                              ; preds = %143, %120
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %148 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %148, i64 0, i32 164, i32 1
  %150 = load i8, i8* %149, align 8, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %148, i64 0, i32 164, i32 0, i32 2
  %154 = load i32*, i32** %153, align 8
  br label %159

155:                                              ; preds = %146
  store i8 1, i8* %149, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %148, i64 0, i32 164, i32 0
  %157 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %156) #7
  %158 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %148, i64 0, i32 164, i32 0, i32 2
  store i32* %157, i32** %158, align 8
  br label %159

159:                                              ; preds = %155, %152
  %160 = phi i32* [ %154, %152 ], [ %157, %155 ]
  %161 = icmp eq i32* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %159
  %163 = load i32, i32* %160, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %160, align 4
  br label %165

165:                                              ; preds = %159, %162
  %166 = load i64, i64* %73, align 8
  %167 = add i64 %166, 3
  %168 = inttoptr i64 %167 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = ashr i32 %169, 1
  %171 = icmp eq i32 %170, %113
  br i1 %171, label %458, label %172

172:                                              ; preds = %165
  %173 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %174 = call i64* @_ZN2v88internal7Factory18CopyFixedArrayUpToENS0_6HandleINS0_10FixedArrayEEEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %173, i64* %73, i32 %113, i8 zeroext 0) #7
  br label %458

175:                                              ; preds = %109
  %176 = load i64, i64* %35, align 8
  %177 = load i64, i64* %36, align 8
  %178 = add i64 %176, 23
  %179 = inttoptr i64 %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = and i64 %177, 4294967295
  %182 = icmp eq i64 %181, 0
  call void @llvm.assume(i1 %182) #7
  %183 = zext i32 %180 to i64
  %184 = or i64 %177, %183
  %185 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %14, align 8
  %186 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %175
  %188 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %185, i64 %184) #7
  br label %202

189:                                              ; preds = %175
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %191 = load i64*, i64** %190, align 8
  %192 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %193 = load i64*, i64** %192, align 8
  %194 = icmp eq i64* %191, %193
  br i1 %194, label %195, label %197

195:                                              ; preds = %189
  %196 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %197

197:                                              ; preds = %195, %189
  %198 = phi i64* [ %196, %195 ], [ %191, %189 ]
  %199 = ptrtoint i64* %198 to i64
  %200 = add i64 %199, 8
  %201 = inttoptr i64 %200 to i64*
  store i64* %201, i64** %190, align 8
  store i64 %184, i64* %198, align 8
  br label %202

202:                                              ; preds = %187, %197
  %203 = phi i64* [ %188, %187 ], [ %198, %197 ]
  %204 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 14, i32 0
  %205 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %204, align 8
  %206 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %205, i64 0, i32 165, i32 1
  %207 = load i8, i8* %206, align 8, !range !2
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %212, label %209

209:                                              ; preds = %202
  %210 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %205, i64 0, i32 165, i32 0, i32 2
  %211 = load i32*, i32** %210, align 8
  br label %216

212:                                              ; preds = %202
  store i8 1, i8* %206, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %205, i64 0, i32 165, i32 0
  %214 = call i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"* %213) #7
  %215 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %205, i64 0, i32 165, i32 0, i32 2
  store i32* %214, i32** %215, align 8
  br label %216

216:                                              ; preds = %212, %209
  %217 = phi i32* [ %211, %209 ], [ %214, %212 ]
  %218 = icmp eq i32* %217, null
  br i1 %218, label %222, label %219

219:                                              ; preds = %216
  %220 = load i32, i32* %217, align 4
  %221 = add nsw i32 %220, 1
  store i32 %221, i32* %217, align 4
  br label %222

222:                                              ; preds = %216, %219
  %223 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %224 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %223, i32 %113, i8 zeroext 0) #7
  %225 = load i64, i64* %35, align 8
  %226 = add i64 %225, 11
  %227 = inttoptr i64 %226 to i32*
  %228 = load atomic i32, i32* %227 acquire, align 4
  %229 = lshr i32 %228, 10
  %230 = and i32 %229, 1023
  %231 = zext i32 %230 to i64
  %232 = icmp eq i32 %230, 0
  br i1 %232, label %311, label %237

233:                                              ; preds = %306
  %234 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 29
  %235 = and i8 %307, 1
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %431, label %311

237:                                              ; preds = %222, %306
  %238 = phi i32 [ %308, %306 ], [ 0, %222 ]
  %239 = phi i8 [ %307, %306 ], [ 1, %222 ]
  %240 = phi i64 [ %309, %306 ], [ 0, %222 ]
  %241 = load i64, i64* %203, align 8
  %242 = mul nuw nsw i64 %240, 51539607552
  %243 = add nuw nsw i64 %242, 68719476736
  %244 = lshr exact i64 %243, 32
  %245 = or i64 %244, 3
  %246 = add i64 %241, %245
  %247 = inttoptr i64 %246 to i32*
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 32
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %306

251:                                              ; preds = %237
  %252 = and i64 %241, -4294967296
  %253 = add nsw i64 %244, -1
  %254 = add i64 %253, %241
  %255 = inttoptr i64 %254 to i32*
  %256 = load atomic i32, i32* %255 monotonic, align 4
  %257 = zext i32 %256 to i64
  %258 = or i64 %252, %257
  %259 = and i64 %257, 1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %271, label %261

261:                                              ; preds = %251
  %262 = add i64 %258, -1
  %263 = inttoptr i64 %262 to i32*
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = zext i32 %264 to i64
  %266 = or i64 %252, %265
  %267 = add i64 %266, 7
  %268 = inttoptr i64 %267 to i16*
  %269 = load atomic i16, i16* %268 monotonic, align 2
  %270 = icmp eq i16 %269, 64
  br i1 %270, label %306, label %271

271:                                              ; preds = %251, %261
  %272 = load i64, i64* %224, align 8
  %273 = shl i32 %238, 2
  %274 = sext i32 %273 to i64
  %275 = add nsw i64 %274, 7
  %276 = add i64 %275, %272
  %277 = inttoptr i64 %276 to i32*
  store atomic volatile i32 %256, i32* %277 monotonic, align 4
  br i1 %260, label %301, label %278

278:                                              ; preds = %271
  %279 = and i64 %272, -262144
  %280 = or i64 %279, 8
  %281 = inttoptr i64 %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = and i64 %282, 262144
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %289, label %285

285:                                              ; preds = %278
  %286 = or i64 %279, 16
  %287 = inttoptr i64 %286 to %"class.v8::internal::Heap"**
  %288 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %287, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %288, i64 %272, i64 %276, i64 %258) #7
  br label %289

289:                                              ; preds = %285, %278
  %290 = and i64 %258, -262144
  %291 = or i64 %290, 8
  %292 = inttoptr i64 %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = and i64 %293, 24
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %301, label %296

296:                                              ; preds = %289
  %297 = load i64, i64* %281, align 8
  %298 = and i64 %297, 24
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %296
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %272, i64 %276, i64 %258) #7
  br label %301

301:                                              ; preds = %271, %289, %296, %300
  %302 = and i32 %248, 4
  %303 = icmp eq i32 %302, 0
  %304 = select i1 %303, i8 %239, i8 0
  %305 = add nsw i32 %238, 1
  br label %306

306:                                              ; preds = %237, %301, %261
  %307 = phi i8 [ %239, %237 ], [ %304, %301 ], [ %239, %261 ]
  %308 = phi i32 [ %238, %237 ], [ %305, %301 ], [ %238, %261 ]
  %309 = add nuw nsw i64 %240, 1
  %310 = icmp eq i64 %309, %231
  br i1 %310, label %233, label %237

311:                                              ; preds = %222, %233
  %312 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %223, i32 %113, i8 zeroext 0) #7
  %313 = load i64, i64* %35, align 8
  %314 = add i64 %313, 11
  %315 = inttoptr i64 %314 to i32*
  %316 = load atomic i32, i32* %315 acquire, align 4
  %317 = lshr i32 %316, 10
  %318 = and i32 %317, 1023
  %319 = zext i32 %318 to i64
  %320 = icmp eq i32 %318, 0
  br i1 %320, label %431, label %321

321:                                              ; preds = %311
  %322 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %3, i64 0, i32 0
  br label %323

323:                                              ; preds = %321, %427
  %324 = phi i32 [ 0, %321 ], [ %428, %427 ]
  %325 = phi i64 [ 0, %321 ], [ %429, %427 ]
  %326 = load i64, i64* %203, align 8
  %327 = mul nuw nsw i64 %325, 51539607552
  %328 = add nuw nsw i64 %327, 68719476736
  %329 = lshr exact i64 %328, 32
  %330 = or i64 %329, 3
  %331 = add i64 %326, %330
  %332 = inttoptr i64 %331 to i32*
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 32
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %427

336:                                              ; preds = %323
  %337 = and i64 %326, -4294967296
  %338 = add nsw i64 %329, -1
  %339 = add i64 %338, %326
  %340 = inttoptr i64 %339 to i32*
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = zext i32 %341 to i64
  %343 = and i64 %342, 1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %356, label %345

345:                                              ; preds = %336
  %346 = or i64 %337, %342
  %347 = add i64 %346, -1
  %348 = inttoptr i64 %347 to i32*
  %349 = load atomic i32, i32* %348 monotonic, align 4
  %350 = zext i32 %349 to i64
  %351 = or i64 %337, %350
  %352 = add i64 %351, 7
  %353 = inttoptr i64 %352 to i16*
  %354 = load atomic i16, i16* %353 monotonic, align 2
  %355 = icmp eq i16 %354, 64
  br i1 %355, label %427, label %356

356:                                              ; preds = %336, %345
  %357 = load i64, i64* %35, align 8
  %358 = and i64 %357, -4294967296
  %359 = add i64 %357, 23
  %360 = inttoptr i64 %359 to i32*
  %361 = load atomic i32, i32* %360 monotonic, align 4
  %362 = zext i32 %361 to i64
  %363 = or i64 %358, %362
  %364 = add i64 %363, %330
  %365 = inttoptr i64 %364 to i32*
  %366 = load atomic i32, i32* %365 monotonic, align 4
  %367 = ashr i32 %366, 1
  %368 = lshr i32 %367, 19
  %369 = and i32 %368, 1023
  %370 = lshr i32 %367, 6
  %371 = trunc i32 %370 to i8
  %372 = and i8 %371, 7
  %373 = add i64 %357, 3
  %374 = inttoptr i64 %373 to i8*
  %375 = load atomic i8, i8* %374 monotonic, align 1
  %376 = zext i8 %375 to i32
  %377 = add i64 %357, 4
  %378 = inttoptr i64 %377 to i8*
  %379 = load atomic i8, i8* %378 monotonic, align 1
  %380 = zext i8 %379 to i32
  %381 = sub nsw i32 %376, %380
  %382 = icmp slt i32 %369, %381
  br i1 %382, label %383, label %389

383:                                              ; preds = %356
  %384 = load atomic i8, i8* %378 monotonic, align 1
  %385 = load atomic i8, i8* %378 monotonic, align 1
  %386 = zext i8 %385 to i32
  %387 = add nuw nsw i32 %369, %386
  %388 = shl nuw nsw i32 %387, 2
  br label %393

389:                                              ; preds = %356
  %390 = sub nsw i32 %369, %381
  %391 = shl nsw i32 %390, 2
  %392 = add nsw i32 %391, 8
  br label %393

393:                                              ; preds = %389, %383
  %394 = phi i32 [ %388, %383 ], [ %392, %389 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %322) #7
  store i8 %372, i8* %322, align 1
  %395 = icmp ult i8 %372, 5
  br i1 %395, label %398, label %396

396:                                              ; preds = %393
  %397 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %3) #7
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8* %397) #7
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)) #9
  unreachable

398:                                              ; preds = %393
  %399 = zext i8 %372 to i64
  %400 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN2v88internal12_GLOBAL__N_123GetFastEnumPropertyKeysEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE, i64 0, i64 %399
  %401 = load i64, i64* %400, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %322) #7
  %402 = zext i1 %382 to i64
  %403 = shl nuw nsw i64 %402, 13
  %404 = sext i32 %394 to i64
  %405 = load i64, i64* %312, align 8
  %406 = lshr i32 %394, 2
  %407 = and i32 %406, 2047
  %408 = and i64 %404, 8192
  %409 = or i64 %408, %403
  %410 = icmp eq i64 %409, 0
  %411 = add nuw nsw i32 %407, 1073741821
  %412 = sub nsw i32 1, %407
  %413 = select i1 %410, i32 %412, i32 %411
  %414 = shl i32 %413, 1
  %415 = and i64 %404, 49152
  %416 = or i64 %401, %415
  %417 = icmp eq i64 %416, 16384
  %418 = zext i1 %417 to i32
  %419 = or i32 %414, %418
  %420 = shl i32 %419, 1
  %421 = shl i32 %324, 2
  %422 = sext i32 %421 to i64
  %423 = add nsw i64 %422, 7
  %424 = add i64 %423, %405
  %425 = inttoptr i64 %424 to i32*
  store atomic volatile i32 %420, i32* %425 monotonic, align 4
  %426 = add nsw i32 %324, 1
  br label %427

427:                                              ; preds = %323, %398, %345
  %428 = phi i32 [ %324, %323 ], [ %426, %398 ], [ %324, %345 ]
  %429 = add nuw nsw i64 %325, 1
  %430 = icmp eq i64 %429, %319
  br i1 %430, label %431, label %323

431:                                              ; preds = %427, %311, %233
  %432 = phi i64* [ %234, %233 ], [ %312, %311 ], [ %312, %427 ]
  call void @_ZN2v88internal15DescriptorArray27InitializeOrChangeEnumCacheENS0_6HandleIS1_EEPNS0_7IsolateENS2_INS0_10FixedArrayEEES7_(i64* %203, %"class.v8::internal::Isolate"* %0, i64* %224, i64* %432) #7
  %433 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %433) #7
  %434 = load i64, i64* %35, align 8
  %435 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %434, i64* %435, align 8
  %436 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %6, i64 0, i32 0
  %437 = call zeroext i1 @_ZNK2v88internal3Map23OnlyHasSimplePropertiesEv(%"class.v8::internal::Map"* nonnull %436) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %433) #7
  br i1 %437, label %438, label %458

438:                                              ; preds = %431
  %439 = load i64, i64* %35, align 8
  %440 = icmp eq i32 %113, 1023
  br i1 %440, label %441, label %446

441:                                              ; preds = %438
  %442 = add i64 %439, 11
  %443 = inttoptr i64 %442 to i32*
  %444 = load atomic i32, i32* %443 monotonic, align 4
  %445 = or i32 %444, 1023
  br label %455

446:                                              ; preds = %438
  %447 = icmp ult i32 %113, 1021
  br i1 %447, label %449, label %448, !prof !6

448:                                              ; preds = %446
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

449:                                              ; preds = %446
  %450 = add i64 %439, 11
  %451 = inttoptr i64 %450 to i32*
  %452 = load atomic i32, i32* %451 monotonic, align 4
  %453 = and i32 %452, -1024
  %454 = or i32 %453, %113
  br label %455

455:                                              ; preds = %441, %449
  %456 = phi i32* [ %443, %441 ], [ %451, %449 ]
  %457 = phi i32 [ %445, %441 ], [ %454, %449 ]
  store atomic volatile i32 %457, i32* %456 monotonic, align 4
  br label %458

458:                                              ; preds = %431, %455, %172, %165, %106, %99
  %459 = phi i64* [ %108, %106 ], [ %73, %99 ], [ %174, %172 ], [ %73, %165 ], [ %224, %455 ], [ %224, %431 ]
  ret i64* %459
}

declare i64* @_ZN2v88internal7Factory14CopyFixedArrayENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal14KeyAccumulator22GetOwnEnumPropertyKeysEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 11
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2097152
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_123GetFastEnumPropertyKeysEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1)
  br label %62

17:                                               ; preds = %2
  %18 = load atomic i32, i32* %6 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %4, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp eq i16 %23, 189
  %25 = add i64 %3, 3
  %26 = inttoptr i64 %25 to i32*
  br i1 %24, label %27, label %32

27:                                               ; preds = %17
  %28 = load atomic i32, i32* %26 acquire, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %4, %29
  %31 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_132GetOwnEnumPropertyDictionaryKeysINS0_16GlobalDictionaryEEENS0_6HandleINS0_10FixedArrayEEEPNS0_7IsolateENS0_17KeyCollectionModeEPNS0_14KeyAccumulatorENS4_INS0_8JSObjectEEET_(%"class.v8::internal::Isolate"* %0, i32 0, %"class.v8::internal::KeyAccumulator"* null, i64 %30)
  br label %62

32:                                               ; preds = %17
  %33 = load i32, i32* %26, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %4, %34
  %36 = and i64 %34, 1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %59

38:                                               ; preds = %32
  %39 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %40 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %39, i64 0, i32 0, i32 1
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %39, i64 0, i32 1, i64 0
  br label %55

47:                                               ; preds = %41, %38
  %48 = and i64 %3, -262144
  %49 = or i64 %48, 16
  %50 = inttoptr i64 %49 to i64*
  %51 = load i64, i64* %50, align 16
  %52 = add i64 %51, -41416
  %53 = inttoptr i64 %52 to %"class.v8::internal::Isolate"*
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %53, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %55

55:                                               ; preds = %47, %45
  %56 = phi i64* [ %54, %47 ], [ %46, %45 ]
  %57 = getelementptr inbounds i64, i64* %56, i64 115
  %58 = load i64, i64* %57, align 8
  br label %59

59:                                               ; preds = %32, %55
  %60 = phi i64 [ %58, %55 ], [ %35, %32 ]
  %61 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_132GetOwnEnumPropertyDictionaryKeysINS0_14NameDictionaryEEENS0_6HandleINS0_10FixedArrayEEEPNS0_7IsolateENS0_17KeyCollectionModeEPNS0_14KeyAccumulatorENS4_INS0_8JSObjectEEET_(%"class.v8::internal::Isolate"* %0, i32 0, %"class.v8::internal::KeyAccumulator"* null, i64 %60)
  br label %62

62:                                               ; preds = %59, %27, %15
  %63 = phi i64* [ %16, %15 ], [ %31, %27 ], [ %61, %59 ]
  ret i64* %63
}

declare i64* @_ZN2v88internal7Factory18CopyFixedArrayUpToENS0_6HandleINS0_10FixedArrayEEEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i32, i8 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14KeyAccumulator29FilterForEnumerablePropertiesENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEENS2_INS0_15InterceptorInfoEEES6_NS1_14IndexedOrNamedE(%"class.v8::internal::KeyAccumulator"* nocapture, i64*, i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::PropertyCallbackArguments", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %10 = load i64, i64* %4, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 10
  %18 = inttoptr i64 %17 to i8*
  %19 = load i8, i8* %18, align 1
  %20 = lshr i8 %19, 2
  %21 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %22 = zext i8 %20 to i64
  %23 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %21, i64 %22
  %24 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %23, align 8
  %25 = add i64 %10, 7
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %11, %28
  %30 = bitcast %"class.v8::internal::ElementsAccessor"* %24 to i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)***
  %31 = load i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)**, i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)*** %30, align 8
  %32 = getelementptr inbounds i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)*, i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)** %31, i64 23
  %33 = load i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)*, i64 (%"class.v8::internal::ElementsAccessor"*, i64, i64)** %32, align 8
  %34 = tail call i64 %33(%"class.v8::internal::ElementsAccessor"* %24, i64 %10, i64 %29) #7
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %151, label %36

36:                                               ; preds = %6
  %37 = bitcast %"class.v8::internal::ElementsAccessor"* %24 to i1 (%"class.v8::internal::ElementsAccessor"*, i64, i64)***
  %38 = bitcast %"class.v8::internal::PropertyCallbackArguments"* %7 to i8*
  %39 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %40 = bitcast %"class.v8::internal::ElementsAccessor"* %24 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)***
  %41 = icmp eq i32 %5, 0
  %42 = bitcast i32* %8 to i8*
  %43 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %9 to i8*
  %44 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %9, i64 0, i32 0
  %46 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %7, i64 0, i32 0, i32 1, i64 4
  %48 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %50 = bitcast %"class.v8::internal::Relocatable"** %49 to i64*
  br label %51

51:                                               ; preds = %36, %148
  %52 = phi i64 [ 0, %36 ], [ %149, %148 ]
  %53 = load i64, i64* %4, align 8
  %54 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64, i64)**, i1 (%"class.v8::internal::ElementsAccessor"*, i64, i64)*** %37, align 8
  %55 = getelementptr inbounds i1 (%"class.v8::internal::ElementsAccessor"*, i64, i64)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64, i64)** %54, i64 4
  %56 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64, i64)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64, i64)** %55, align 8
  %57 = call zeroext i1 %56(%"class.v8::internal::ElementsAccessor"* %24, i64 %53, i64 %52) #7
  br i1 %57, label %58, label %148

58:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %38) #7
  %59 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %60 = load i64, i64* %3, align 8
  %61 = and i64 %60, -4294967296
  %62 = add i64 %60, 31
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %61, %65
  %67 = load i64, i64* %1, align 8
  %68 = load i64, i64* %2, align 8
  call void @_ZN2v88internal25PropertyCallbackArgumentsC1EPNS0_7IsolateENS0_6ObjectES4_NS0_8JSObjectENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %7, %"class.v8::internal::Isolate"* %59, i64 %66, i64 %67, i64 %68, i64 4294967297) #7
  %69 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)*** %40, align 8
  %70 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)** %69, i64 5
  %71 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)** %70, align 8
  %72 = call i64* %71(%"class.v8::internal::ElementsAccessor"* %24, i64* %4, i64 %52) #7
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  br i1 %41, label %76, label %109

76:                                               ; preds = %58
  br i1 %75, label %77, label %82

77:                                               ; preds = %76
  %78 = trunc i64 %73 to i32
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %105, label %80, !prof !7

80:                                               ; preds = %77
  %81 = lshr i32 %78, 1
  br label %106

82:                                               ; preds = %76
  %83 = and i64 %73, -4294967296
  %84 = add i64 %73, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %83, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = icmp eq i16 %91, 66
  br i1 %92, label %93, label %105, !prof !8

93:                                               ; preds = %82
  %94 = add i64 %73, 3
  %95 = inttoptr i64 %94 to double*
  %96 = load double, double* %95, align 1
  %97 = fadd double %96, 0x4330000000000000
  %98 = bitcast double %97 to i64
  %99 = and i64 %98, -4294967296
  %100 = icmp eq i64 %99, 4841369599423283200
  br i1 %100, label %101, label %105, !prof !8

101:                                              ; preds = %93
  %102 = trunc i64 %98 to i32
  %103 = uitofp i32 %102 to double
  %104 = fcmp oeq double %96, %103
  br i1 %104, label %106, label %105, !prof !6

105:                                              ; preds = %93, %82, %77, %101
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

106:                                              ; preds = %80, %101
  %107 = phi i32 [ %81, %80 ], [ %102, %101 ]
  %108 = call i64* @_ZN2v88internal25PropertyCallbackArguments16CallIndexedQueryENS0_6HandleINS0_15InterceptorInfoEEEj(%"class.v8::internal::PropertyCallbackArguments"* nonnull %7, i64* %3, i32 %107)
  br label %124

109:                                              ; preds = %58
  br i1 %75, label %121, label %110, !prof !7

110:                                              ; preds = %109
  %111 = and i64 %73, -4294967296
  %112 = add i64 %73, -1
  %113 = inttoptr i64 %112 to i32*
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = zext i32 %114 to i64
  %116 = or i64 %111, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load atomic i16, i16* %118 monotonic, align 2
  %120 = icmp ult i16 %119, 65
  br i1 %120, label %122, label %121, !prof !6

121:                                              ; preds = %109, %110
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0)) #9
  unreachable

122:                                              ; preds = %110
  %123 = call i64* @_ZN2v88internal25PropertyCallbackArguments14CallNamedQueryENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %7, i64* %3, i64* %72)
  br label %124

124:                                              ; preds = %122, %106
  %125 = phi i64* [ %108, %106 ], [ %123, %122 ]
  %126 = icmp eq i64* %125, null
  br i1 %126, label %143, label %127

127:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #7
  %128 = load i64, i64* %125, align 8
  store i64 %128, i64* %44, align 8
  %129 = call zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"* nonnull %45, i32* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #7
  br i1 %129, label %131, label %130, !prof !6

130:                                              ; preds = %127
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #9
  unreachable

131:                                              ; preds = %127
  %132 = load i32, i32* %8, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  %136 = call zeroext i1 @_ZN2v88internal14KeyAccumulator6AddKeyENS0_6HandleINS0_6ObjectEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* %0, i64* %72, i32 0)
  br i1 %136, label %137, label %138

137:                                              ; preds = %131, %135
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #7
  br label %143

138:                                              ; preds = %135
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #7
  store i64 1994495044801650351, i64* %47, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %139 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %48, align 8
  %140 = load i64, i64* %50, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %139, i64 0, i32 91
  %142 = bitcast %"class.v8::internal::Relocatable"** %141 to i64*
  store i64 %140, i64* %142, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %38) #7
  br label %151

143:                                              ; preds = %124, %137
  store i64 1994495044801650351, i64* %47, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %144 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %48, align 8
  %145 = load i64, i64* %50, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %144, i64 0, i32 91
  %147 = bitcast %"class.v8::internal::Relocatable"** %146 to i64*
  store i64 %145, i64* %147, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %38) #7
  br label %148

148:                                              ; preds = %143, %51
  %149 = add nuw i64 %52, 1
  %150 = icmp eq i64 %149, %34
  br i1 %150, label %151, label %51

151:                                              ; preds = %148, %138, %6
  %152 = phi i1 [ true, %6 ], [ false, %138 ], [ true, %148 ]
  ret i1 %152
}

declare void @_ZN2v88internal25PropertyCallbackArgumentsC1EPNS0_7IsolateENS0_6ObjectES4_NS0_8JSObjectENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::PropertyCallbackArguments"*, %"class.v8::internal::Isolate"*, i64, i64, i64, i64) unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments16CallIndexedQueryENS0_6HandleINS0_15InterceptorInfoEEEj(%"class.v8::internal::PropertyCallbackArguments"*, i64*, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1202"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %7 = alloca %"class.v8::PropertyCallbackInfo", align 8
  %8 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %9 = bitcast i64* %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 40, i1 false) #7
  %12 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1197", %"struct.std::__1::atomic.1197"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14, !prof !6

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 14, i32 0
  %18 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %18, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallStats"** %15, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallTimer"* %16, i32 167) #7
  br label %20

20:                                               ; preds = %3, %14
  %21 = load i64, i64* %1, align 8
  %22 = add i64 %21, 11
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = and i64 %21, -4294967296
  %28 = zext i32 %24 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 3
  %31 = inttoptr i64 %30 to void (i32, %"class.v8::PropertyCallbackInfo"*)**
  %32 = load void (i32, %"class.v8::PropertyCallbackInfo"*)*, void (i32, %"class.v8::PropertyCallbackInfo"*)** %31, align 1
  br label %33

33:                                               ; preds = %20, %26
  %34 = phi void (i32, %"class.v8::PropertyCallbackInfo"*)* [ %32, %26 ], [ null, %20 ]
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 108
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 32
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 68
  %40 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %39, align 8
  %41 = call zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"* %40, i64* %1, i64* null, i32 0) #7
  br i1 %41, label %42, label %165

42:                                               ; preds = %38, %33
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 22
  %44 = load i32, i32* %43, align 8
  store i32 6, i32* %43, align 8
  %45 = bitcast %"class.v8::internal::ExternalCallbackScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #7
  %46 = ptrtoint void (i32, %"class.v8::PropertyCallbackInfo"*)* %34 to i64
  %47 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 1
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 2
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 21
  %51 = bitcast %"class.v8::internal::ExternalCallbackScope"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.v8::internal::ExternalCallbackScope"** %49 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %6, %"class.v8::internal::ExternalCallbackScope"** %50, align 8
  %54 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %55 = inttoptr i64 %54 to i8*
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %42
  %58 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %59 = bitcast %"class.v8::TracingController"* %58 to i8* (%"class.v8::TracingController"*, i8*)***
  %60 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %59, align 8
  %61 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %60, i64 2
  %62 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %61, align 8
  %63 = call i8* %62(%"class.v8::TracingController"* %58, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0)) #7
  %64 = ptrtoint i8* %63 to i64
  store atomic volatile i64 %64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %65

65:                                               ; preds = %57, %42
  %66 = phi i8* [ %55, %42 ], [ %63, %57 ]
  %67 = load atomic i8, i8* %66 monotonic, align 1
  %68 = and i8 %67, 5
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %97, label %70

70:                                               ; preds = %65
  %71 = bitcast [2 x %"class.std::__1::unique_ptr.1202"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #7
  %72 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 0, i64 16, i1 false) #7
  %73 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %74 = bitcast %"class.v8::TracingController"* %73 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)***
  %75 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)** %75, i64 3
  %77 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)** %76, align 8
  %78 = call i64 %77(%"class.v8::TracingController"* %73, i8 signext 66, i8* %66, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1202"* nonnull %72, i32 0) #7
  %79 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %80 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %79, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %79, align 8
  %81 = icmp eq %"class.v8::ConvertableToTraceFormat"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %70
  %83 = bitcast %"class.v8::ConvertableToTraceFormat"* %80 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %84 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %84, i64 1
  %86 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %85, align 8
  call void %86(%"class.v8::ConvertableToTraceFormat"* nonnull %80) #7
  br label %87

87:                                               ; preds = %82, %70
  %88 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %88, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %88, align 16
  %90 = icmp eq %"class.v8::ConvertableToTraceFormat"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.v8::ConvertableToTraceFormat"* %89 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %93 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %93, i64 1
  %95 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %94, align 8
  call void %95(%"class.v8::ConvertableToTraceFormat"* nonnull %89) #7
  br label %96

96:                                               ; preds = %91, %87
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #7
  br label %97

97:                                               ; preds = %65, %96
  %98 = bitcast %"class.v8::PropertyCallbackInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #7
  %99 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %100 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %7, i64 0, i32 0
  store i64* %99, i64** %100, align 8
  %101 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 21
  %105 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 1
  %107 = load i64, i64* %106, align 8
  call void @_ZN2v88internal6Logger24ApiIndexedPropertyAccessEPKcNS0_8JSObjectEj(%"class.v8::internal::Logger"* %105, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0), i64 %107, i32 %2) #7
  br label %108

108:                                              ; preds = %97, %103
  call void %34(i32 %2, %"class.v8::PropertyCallbackInfo"* nonnull dereferenceable(8) %7) #7
  %109 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 5
  %112 = load i64, i64* %111, align 8
  %113 = trunc i64 %110 to i32
  %114 = trunc i64 %112 to i32
  %115 = icmp eq i32 %113, %114
  %116 = select i1 %115, i64* null, i64* %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #7
  %117 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %118 = load i64, i64* %53, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %117, i64 0, i32 0, i32 9, i32 21
  %120 = bitcast %"class.v8::internal::ExternalCallbackScope"** %119 to i64*
  store i64 %118, i64* %120, align 8
  %121 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %122 = inttoptr i64 %121 to i8*
  %123 = icmp eq i64 %121, 0
  br i1 %123, label %124, label %132

124:                                              ; preds = %108
  %125 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %126 = bitcast %"class.v8::TracingController"* %125 to i8* (%"class.v8::TracingController"*, i8*)***
  %127 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %126, align 8
  %128 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %127, i64 2
  %129 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %128, align 8
  %130 = call i8* %129(%"class.v8::TracingController"* %125, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0)) #7
  %131 = ptrtoint i8* %130 to i64
  store atomic volatile i64 %131, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %132

132:                                              ; preds = %124, %108
  %133 = phi i8* [ %122, %108 ], [ %130, %124 ]
  %134 = load atomic i8, i8* %133 monotonic, align 1
  %135 = and i8 %134, 5
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %164, label %137

137:                                              ; preds = %132
  %138 = bitcast [2 x %"class.std::__1::unique_ptr.1202"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #7
  %139 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %138, i8 0, i64 16, i1 false) #7
  %140 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %141 = bitcast %"class.v8::TracingController"* %140 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)***
  %142 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*** %141, align 8
  %143 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)** %142, i64 3
  %144 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)** %143, align 8
  %145 = call i64 %144(%"class.v8::TracingController"* %140, i8 signext 69, i8* %133, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1202"* nonnull %139, i32 0) #7
  %146 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %147 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %146, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %146, align 8
  %148 = icmp eq %"class.v8::ConvertableToTraceFormat"* %147, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %137
  %150 = bitcast %"class.v8::ConvertableToTraceFormat"* %147 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %151 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %151, i64 1
  %153 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %152, align 8
  call void %153(%"class.v8::ConvertableToTraceFormat"* nonnull %147) #7
  br label %154

154:                                              ; preds = %149, %137
  %155 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %155, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %155, align 16
  %157 = icmp eq %"class.v8::ConvertableToTraceFormat"* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = bitcast %"class.v8::ConvertableToTraceFormat"* %156 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %160 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %160, i64 1
  %162 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %161, align 8
  call void %162(%"class.v8::ConvertableToTraceFormat"* nonnull %156) #7
  br label %163

163:                                              ; preds = %158, %154
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #7
  br label %164

164:                                              ; preds = %132, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #7
  store i32 %44, i32* %43, align 8
  br label %165

165:                                              ; preds = %38, %164
  %166 = phi i64* [ %116, %164 ], [ null, %38 ]
  %167 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %168 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %167, align 8
  %169 = icmp eq %"class.v8::internal::RuntimeCallStats"* %168, null
  br i1 %169, label %172, label %170, !prof !6

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %168, %"class.v8::internal::RuntimeCallTimer"* %171) #7
  br label %172

172:                                              ; preds = %165, %170
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #7
  ret i64* %166
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments14CallNamedQueryENS0_6HandleINS0_15InterceptorInfoEEENS2_INS0_4NameEEE(%"class.v8::internal::PropertyCallbackArguments"*, i64*, i64*) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1202"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %7 = alloca %"class.v8::PropertyCallbackInfo", align 8
  %8 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %9 = bitcast i64* %8 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 40, i1 false) #7
  %12 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1197", %"struct.std::__1::atomic.1197"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14, !prof !6

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 14, i32 0
  %18 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %18, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallStats"** %15, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %19, %"class.v8::internal::RuntimeCallTimer"* %16, i32 187) #7
  br label %20

20:                                               ; preds = %3, %14
  %21 = load i64, i64* %1, align 8
  %22 = add i64 %21, 11
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = and i64 %21, -4294967296
  %28 = zext i32 %24 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 3
  %31 = inttoptr i64 %30 to void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)**
  %32 = load void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)** %31, align 1
  br label %33

33:                                               ; preds = %20, %26
  %34 = phi void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* [ %32, %26 ], [ null, %20 ]
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 108
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 32
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 68
  %40 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %39, align 8
  %41 = call zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"* %40, i64* %1, i64* null, i32 0) #7
  br i1 %41, label %42, label %167

42:                                               ; preds = %38, %33
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 22
  %44 = load i32, i32* %43, align 8
  store i32 6, i32* %43, align 8
  %45 = bitcast %"class.v8::internal::ExternalCallbackScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #7
  %46 = ptrtoint void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* %34 to i64
  %47 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 1
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %6, i64 0, i32 2
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 21
  %51 = bitcast %"class.v8::internal::ExternalCallbackScope"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.v8::internal::ExternalCallbackScope"** %49 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %6, %"class.v8::internal::ExternalCallbackScope"** %50, align 8
  %54 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %55 = inttoptr i64 %54 to i8*
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %42
  %58 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %59 = bitcast %"class.v8::TracingController"* %58 to i8* (%"class.v8::TracingController"*, i8*)***
  %60 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %59, align 8
  %61 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %60, i64 2
  %62 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %61, align 8
  %63 = call i8* %62(%"class.v8::TracingController"* %58, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0)) #7
  %64 = ptrtoint i8* %63 to i64
  store atomic volatile i64 %64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %65

65:                                               ; preds = %57, %42
  %66 = phi i8* [ %55, %42 ], [ %63, %57 ]
  %67 = load atomic i8, i8* %66 monotonic, align 1
  %68 = and i8 %67, 5
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %97, label %70

70:                                               ; preds = %65
  %71 = bitcast [2 x %"class.std::__1::unique_ptr.1202"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #7
  %72 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 0, i64 16, i1 false) #7
  %73 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %74 = bitcast %"class.v8::TracingController"* %73 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)***
  %75 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)** %75, i64 3
  %77 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)** %76, align 8
  %78 = call i64 %77(%"class.v8::TracingController"* %73, i8 signext 66, i8* %66, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1202"* nonnull %72, i32 0) #7
  %79 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %80 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %79, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %79, align 8
  %81 = icmp eq %"class.v8::ConvertableToTraceFormat"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %70
  %83 = bitcast %"class.v8::ConvertableToTraceFormat"* %80 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %84 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %84, i64 1
  %86 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %85, align 8
  call void %86(%"class.v8::ConvertableToTraceFormat"* nonnull %80) #7
  br label %87

87:                                               ; preds = %82, %70
  %88 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %88, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %88, align 16
  %90 = icmp eq %"class.v8::ConvertableToTraceFormat"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.v8::ConvertableToTraceFormat"* %89 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %93 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %93, i64 1
  %95 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %94, align 8
  call void %95(%"class.v8::ConvertableToTraceFormat"* nonnull %89) #7
  br label %96

96:                                               ; preds = %91, %87
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #7
  br label %97

97:                                               ; preds = %65, %96
  %98 = bitcast %"class.v8::PropertyCallbackInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #7
  %99 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %100 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %7, i64 0, i32 0
  store i64* %99, i64** %100, align 8
  %101 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 21
  %105 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 1
  %107 = load i64, i64* %106, align 8
  %108 = load i64, i64* %2, align 8
  call void @_ZN2v88internal6Logger22ApiNamedPropertyAccessEPKcNS0_8JSObjectENS0_6ObjectE(%"class.v8::internal::Logger"* %105, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i64 0, i64 0), i64 %107, i64 %108) #7
  br label %109

109:                                              ; preds = %97, %103
  %110 = bitcast i64* %2 to %"class.v8::Name"*
  call void %34(%"class.v8::Name"* %110, %"class.v8::PropertyCallbackInfo"* nonnull dereferenceable(8) %7) #7
  %111 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 5
  %114 = load i64, i64* %113, align 8
  %115 = trunc i64 %112 to i32
  %116 = trunc i64 %114 to i32
  %117 = icmp eq i32 %115, %116
  %118 = select i1 %117, i64* null, i64* %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #7
  %119 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %120 = load i64, i64* %53, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %119, i64 0, i32 0, i32 9, i32 21
  %122 = bitcast %"class.v8::internal::ExternalCallbackScope"** %121 to i64*
  store i64 %120, i64* %122, align 8
  %123 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %124 = inttoptr i64 %123 to i8*
  %125 = icmp eq i64 %123, 0
  br i1 %125, label %126, label %134

126:                                              ; preds = %109
  %127 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %128 = bitcast %"class.v8::TracingController"* %127 to i8* (%"class.v8::TracingController"*, i8*)***
  %129 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %128, align 8
  %130 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %129, i64 2
  %131 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %130, align 8
  %132 = call i8* %131(%"class.v8::TracingController"* %127, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0)) #7
  %133 = ptrtoint i8* %132 to i64
  store atomic volatile i64 %133, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %134

134:                                              ; preds = %126, %109
  %135 = phi i8* [ %124, %109 ], [ %132, %126 ]
  %136 = load atomic i8, i8* %135 monotonic, align 1
  %137 = and i8 %136, 5
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %166, label %139

139:                                              ; preds = %134
  %140 = bitcast [2 x %"class.std::__1::unique_ptr.1202"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %140) #7
  %141 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %140, i8 0, i64 16, i1 false) #7
  %142 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %143 = bitcast %"class.v8::TracingController"* %142 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)***
  %144 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*** %143, align 8
  %145 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)** %144, i64 3
  %146 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)** %145, align 8
  %147 = call i64 %146(%"class.v8::TracingController"* %142, i8 signext 69, i8* %135, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1202"* nonnull %141, i32 0) #7
  %148 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %149 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %148, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %148, align 8
  %150 = icmp eq %"class.v8::ConvertableToTraceFormat"* %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %139
  %152 = bitcast %"class.v8::ConvertableToTraceFormat"* %149 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %153 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %153, i64 1
  %155 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %154, align 8
  call void %155(%"class.v8::ConvertableToTraceFormat"* nonnull %149) #7
  br label %156

156:                                              ; preds = %151, %139
  %157 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %158 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %157, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %157, align 16
  %159 = icmp eq %"class.v8::ConvertableToTraceFormat"* %158, null
  br i1 %159, label %165, label %160

160:                                              ; preds = %156
  %161 = bitcast %"class.v8::ConvertableToTraceFormat"* %158 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %162 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %161, align 8
  %163 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %162, i64 1
  %164 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %163, align 8
  call void %164(%"class.v8::ConvertableToTraceFormat"* nonnull %158) #7
  br label %165

165:                                              ; preds = %160, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %140) #7
  br label %166

166:                                              ; preds = %134, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #7
  store i32 %44, i32* %43, align 8
  br label %167

167:                                              ; preds = %38, %166
  %168 = phi i64* [ %118, %166 ], [ null, %38 ]
  %169 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %170 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %169, align 8
  %171 = icmp eq %"class.v8::internal::RuntimeCallStats"* %170, null
  br i1 %171, label %174, label %172, !prof !6

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %170, %"class.v8::internal::RuntimeCallTimer"* %173) #7
  br label %174

174:                                              ; preds = %167, %172
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #7
  ret i64* %168
}

declare zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal14KeyAccumulator30CollectInterceptorKeysInternalENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEENS2_INS0_15InterceptorInfoEEENS1_14IndexedOrNamedE(%"class.v8::internal::KeyAccumulator"*, i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %8 = alloca %"class.v8::internal::PropertyCallbackArguments", align 8
  %9 = bitcast %"class.v8::internal::PropertyCallbackArguments"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = load i64, i64* %3, align 8
  %13 = and i64 %12, -4294967296
  %14 = add i64 %12, 31
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = load i64, i64* %1, align 8
  %20 = load i64, i64* %2, align 8
  call void @_ZN2v88internal25PropertyCallbackArgumentsC1EPNS0_7IsolateENS0_6ObjectES4_NS0_8JSObjectENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %8, %"class.v8::internal::Isolate"* %11, i64 %18, i64 %19, i64 %20, i64 4294967297) #7
  %21 = load i64, i64* %3, align 8
  %22 = add i64 %21, 23
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 7, i32 0, i64 4
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %24, %28
  br i1 %29, label %95, label %30

30:                                               ; preds = %5
  %31 = icmp eq i32 %4, 0
  %32 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %31, label %34, label %63

34:                                               ; preds = %30
  br i1 %33, label %43, label %35

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %8, i64 0, i32 0, i32 1, i64 2
  %37 = bitcast i64* %36 to %"class.v8::internal::Isolate"**
  %38 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %38, i64 0, i32 21
  %40 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %8, i64 0, i32 0, i32 1, i64 1
  %42 = load i64, i64* %41, align 8
  call void @_ZN2v88internal6Logger15ApiObjectAccessEPKcNS0_10JSReceiverE(%"class.v8::internal::Logger"* %40, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0), i64 %42) #7
  br label %43

43:                                               ; preds = %34, %35
  %44 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #7
  %45 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %8, i64 0, i32 0, i32 1, i64 2
  %46 = bitcast i64* %45 to %"class.v8::internal::Isolate"**
  %47 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %46, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 40, i1 false) #7
  %48 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1197", %"struct.std::__1::atomic.1197"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %56, label %50, !prof !6

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %52 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 14, i32 0
  %54 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %54, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %55, %"class.v8::internal::RuntimeCallStats"** %51, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %55, %"class.v8::internal::RuntimeCallTimer"* %52, i32 165) #7
  br label %56

56:                                               ; preds = %50, %43
  %57 = call i64* @_ZN2v88internal25PropertyCallbackArguments22CallPropertyEnumeratorENS0_6HandleINS0_15InterceptorInfoEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %8, i64* %3) #7
  %58 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %59 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %58, align 8
  %60 = icmp eq %"class.v8::internal::RuntimeCallStats"* %59, null
  br i1 %60, label %92, label %61, !prof !6

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %59, %"class.v8::internal::RuntimeCallTimer"* %62) #7
  br label %92

63:                                               ; preds = %30
  br i1 %33, label %72, label %64

64:                                               ; preds = %63
  %65 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %8, i64 0, i32 0, i32 1, i64 2
  %66 = bitcast i64* %65 to %"class.v8::internal::Isolate"**
  %67 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %67, i64 0, i32 21
  %69 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %8, i64 0, i32 0, i32 1, i64 1
  %71 = load i64, i64* %70, align 8
  call void @_ZN2v88internal6Logger15ApiObjectAccessEPKcNS0_10JSReceiverE(%"class.v8::internal::Logger"* %69, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i64 %71) #7
  br label %72

72:                                               ; preds = %63, %64
  %73 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73) #7
  %74 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %8, i64 0, i32 0, i32 1, i64 2
  %75 = bitcast i64* %74 to %"class.v8::internal::Isolate"**
  %76 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %75, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 40, i1 false) #7
  %77 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1197", %"struct.std::__1::atomic.1197"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %85, label %79, !prof !6

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %81 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %76, i64 0, i32 14, i32 0
  %83 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %83, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %84, %"class.v8::internal::RuntimeCallStats"** %80, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %84, %"class.v8::internal::RuntimeCallTimer"* %81, i32 185) #7
  br label %85

85:                                               ; preds = %79, %72
  %86 = call i64* @_ZN2v88internal25PropertyCallbackArguments22CallPropertyEnumeratorENS0_6HandleINS0_15InterceptorInfoEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %8, i64* %3) #7
  %87 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 0
  %88 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %87, align 8
  %89 = icmp eq %"class.v8::internal::RuntimeCallStats"* %88, null
  br i1 %89, label %92, label %90, !prof !6

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %7, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %88, %"class.v8::internal::RuntimeCallTimer"* %91) #7
  br label %92

92:                                               ; preds = %90, %85, %61, %56
  %93 = phi i8* [ %44, %56 ], [ %44, %61 ], [ %73, %85 ], [ %73, %90 ]
  %94 = phi i64* [ %57, %56 ], [ %57, %61 ], [ %86, %85 ], [ %86, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #7
  br label %95

95:                                               ; preds = %92, %5
  %96 = phi i64* [ null, %5 ], [ %94, %92 ]
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 7, i32 0, i64 5
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = trunc i64 %101 to i32
  %103 = trunc i64 %99 to i32
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %107, label %105

105:                                              ; preds = %95
  %106 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %97) #7
  br label %149

107:                                              ; preds = %95
  %108 = icmp eq i64* %96, null
  br i1 %108, label %149, label %109

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 7
  %111 = load i32, i32* %110, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %125, label %114

114:                                              ; preds = %109
  %115 = load i64, i64* %3, align 8
  %116 = add i64 %115, 11
  %117 = inttoptr i64 %116 to i32*
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 7, i32 0, i64 4
  %120 = load i64, i64* %119, align 8
  %121 = trunc i64 %120 to i32
  %122 = icmp eq i32 %118, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %114
  %124 = call zeroext i1 @_ZN2v88internal14KeyAccumulator29FilterForEnumerablePropertiesENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEENS2_INS0_15InterceptorInfoEEES6_NS1_14IndexedOrNamedE(%"class.v8::internal::KeyAccumulator"* %0, i64* %1, i64* %2, i64* %3, i64* nonnull %96, i32 %4)
  br i1 %124, label %148, label %149

125:                                              ; preds = %109, %114
  %126 = icmp eq i32 %4, 0
  %127 = zext i1 %126 to i32
  %128 = load i64, i64* %96, align 8
  %129 = and i64 %128, -4294967296
  %130 = add i64 %128, -1
  %131 = inttoptr i64 %130 to i32*
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = zext i32 %132 to i64
  %134 = or i64 %129, %133
  %135 = add i64 %134, 10
  %136 = inttoptr i64 %135 to i8*
  %137 = load i8, i8* %136, align 1
  %138 = lshr i8 %137, 2
  %139 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %140 = zext i8 %138 to i64
  %141 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %139, i64 %140
  %142 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %141, align 8
  %143 = bitcast %"class.v8::internal::ElementsAccessor"* %142 to i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)***
  %144 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)**, i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)*** %143, align 8
  %145 = getelementptr inbounds i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)** %144, i64 12
  %146 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64*, %"class.v8::internal::KeyAccumulator"*, i32)** %145, align 8
  %147 = call zeroext i1 %146(%"class.v8::internal::ElementsAccessor"* %142, i64* nonnull %96, %"class.v8::internal::KeyAccumulator"* %0, i32 %127) #7
  br i1 %147, label %148, label %149

148:                                              ; preds = %125, %123
  br label %149

149:                                              ; preds = %125, %123, %107, %105, %148
  %150 = phi i16 [ 257, %148 ], [ 0, %105 ], [ 257, %107 ], [ 0, %123 ], [ 0, %125 ]
  %151 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %152 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %8, i64 0, i32 0, i32 1, i64 4
  store i64 1994495044801650351, i64* %152, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %153 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %154 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %156 = bitcast %"class.v8::internal::Relocatable"** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %154, i64 0, i32 91
  %159 = bitcast %"class.v8::internal::Relocatable"** %158 to i64*
  store i64 %157, i64* %159, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #7
  ret i16 %150
}

declare i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal14KeyAccumulator22CollectInterceptorKeysENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEENS1_14IndexedOrNamedE(%"class.v8::internal::KeyAccumulator"*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Map", align 8
  %6 = alloca %"class.v8::internal::Map", align 8
  %7 = icmp eq i32 %3, 0
  %8 = load i64, i64* %2, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 9
  %16 = inttoptr i64 %15 to i8*
  %17 = load atomic i8, i8* %16 monotonic, align 1
  br i1 %7, label %18, label %21

18:                                               ; preds = %4
  %19 = and i8 %17, 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %76, label %24

21:                                               ; preds = %4
  %22 = and i8 %17, 4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %76, label %31

24:                                               ; preds = %18
  %25 = bitcast %"class.v8::internal::Map"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #7
  %26 = load atomic i32, i32* %11 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %9, %27
  %29 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %28, i64* %29, align 8
  %30 = call i64 @_ZNK2v88internal3Map21GetIndexedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"* nonnull %5, i64 %9) #7
  br label %38

31:                                               ; preds = %21
  %32 = bitcast %"class.v8::internal::Map"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7
  %33 = load atomic i32, i32* %11 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %9, %34
  %36 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %35, i64* %36, align 8
  %37 = call i64 @_ZNK2v88internal3Map19GetNamedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"* nonnull %6, i64 %9) #7
  br label %38

38:                                               ; preds = %31, %24
  %39 = phi i8* [ %32, %31 ], [ %25, %24 ]
  %40 = phi i64 [ %37, %31 ], [ %30, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #7
  %41 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %42, i64 0, i32 31, i32 4
  %44 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %43, align 8
  %45 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %38
  %47 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %44, i64 %40) #7
  br label %61

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %42, i64 0, i32 31, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %42, i64 0, i32 31, i32 1
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %50, %52
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %42) #7
  br label %56

56:                                               ; preds = %54, %48
  %57 = phi i64* [ %55, %54 ], [ %50, %48 ]
  %58 = ptrtoint i64* %57 to i64
  %59 = add i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  store i64* %60, i64** %49, align 8
  store i64 %40, i64* %57, align 8
  br label %61

61:                                               ; preds = %46, %56
  %62 = phi i64* [ %47, %46 ], [ %57, %56 ]
  %63 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 7
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 32
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %61
  %68 = load i64, i64* %62, align 8
  %69 = add i64 %68, 35
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %67, %61
  %75 = call i16 @_ZN2v88internal14KeyAccumulator30CollectInterceptorKeysInternalENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEENS2_INS0_15InterceptorInfoEEENS1_14IndexedOrNamedE(%"class.v8::internal::KeyAccumulator"* %0, i64* %1, i64* %2, i64* %62, i32 %3)
  br label %76

76:                                               ; preds = %18, %67, %21, %74
  %77 = phi i16 [ 257, %18 ], [ 257, %21 ], [ %75, %74 ], [ 257, %67 ]
  ret i16 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal14KeyAccumulator24CollectOwnElementIndicesENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::KeyAccumulator"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %62

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 9
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %62

12:                                               ; preds = %8
  %13 = load i64, i64* %2, align 8
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 10
  %21 = inttoptr i64 %20 to i8*
  %22 = load i8, i8* %21, align 1
  %23 = lshr i8 %22, 2
  %24 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %25 = zext i8 %23 to i64
  %26 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %24, i64 %25
  %27 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %26, align 8
  %28 = add i64 %13, 7
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %14, %31
  %33 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %34 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 4
  %36 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %12
  %39 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %36, i64 %32) #7
  br label %53

40:                                               ; preds = %12
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = icmp eq i64* %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %34) #7
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i64* [ %47, %46 ], [ %42, %40 ]
  %50 = ptrtoint i64* %49 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  store i64* %52, i64** %41, align 8
  store i64 %32, i64* %49, align 8
  br label %53

53:                                               ; preds = %38, %48
  %54 = phi i64* [ %39, %38 ], [ %49, %48 ]
  %55 = bitcast %"class.v8::internal::ElementsAccessor"* %27 to i1 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, %"class.v8::internal::KeyAccumulator"*)***
  %56 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, %"class.v8::internal::KeyAccumulator"*)**, i1 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, %"class.v8::internal::KeyAccumulator"*)*** %55, align 8
  %57 = getelementptr inbounds i1 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, %"class.v8::internal::KeyAccumulator"*)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, %"class.v8::internal::KeyAccumulator"*)** %56, i64 9
  %58 = load i1 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, %"class.v8::internal::KeyAccumulator"*)*, i1 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, %"class.v8::internal::KeyAccumulator"*)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.v8::internal::ElementsAccessor"* %27, i64* %2, i64* %54, %"class.v8::internal::KeyAccumulator"* %0) #7
  br i1 %59, label %60, label %62

60:                                               ; preds = %53
  %61 = tail call i16 @_ZN2v88internal14KeyAccumulator22CollectInterceptorKeysENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEENS1_14IndexedOrNamedE(%"class.v8::internal::KeyAccumulator"* %0, i64* %1, i64* %2, i32 0)
  br label %62

62:                                               ; preds = %53, %3, %8, %60
  %63 = phi i16 [ %61, %60 ], [ 257, %8 ], [ 257, %3 ], [ 0, %53 ]
  ret i16 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal14KeyAccumulator23CollectOwnPropertyNamesENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::KeyAccumulator"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::JSModuleNamespace>::ObjectRef", align 8
  %5 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 18
  %8 = load i64, i64* %2, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2097152
  %19 = icmp eq i32 %18, 0
  br i1 %7, label %20, label %314

20:                                               ; preds = %3
  br i1 %19, label %21, label %146

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %23 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  %24 = tail call i64* @_ZN2v88internal14KeyAccumulator22GetOwnEnumPropertyKeysEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %23, i64* %2)
  %25 = load i64, i64* %2, align 8
  %26 = and i64 %25, -4294967296
  %27 = add i64 %25, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %26, %30
  %32 = add i64 %31, 11
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 acquire, align 4
  %35 = lshr i32 %34, 10
  %36 = and i32 %35, 1023
  %37 = load i64, i64* %24, align 8
  %38 = add i64 %37, 3
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = ashr i32 %40, 1
  %42 = icmp eq i32 %41, %36
  br i1 %42, label %195, label %43

43:                                               ; preds = %21
  %44 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %31, 15
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = and i64 %46, 4294967295
  %51 = icmp eq i64 %50, 0
  tail call void @llvm.assume(i1 %51) #7
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 0, i32 7, i32 0, i64 6
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i32
  %55 = icmp eq i32 %49, %54
  br i1 %55, label %195, label %56

56:                                               ; preds = %43
  %57 = add i64 %31, 23
  %58 = inttoptr i64 %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %46, %60
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 31, i32 4
  %63 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %62, align 8
  %64 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %56
  %66 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %63, i64 %61) #7
  br label %80

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 31, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 31, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = icmp eq i64* %69, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %67
  %74 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %44) #7
  br label %75

75:                                               ; preds = %73, %67
  %76 = phi i64* [ %74, %73 ], [ %69, %67 ]
  %77 = ptrtoint i64* %76 to i64
  %78 = add i64 %77, 8
  %79 = inttoptr i64 %78 to i64*
  store i64* %79, i64** %68, align 8
  store i64 %61, i64* %76, align 8
  br label %80

80:                                               ; preds = %65, %75
  %81 = phi i64* [ %66, %65 ], [ %76, %75 ]
  %82 = zext i32 %36 to i64
  %83 = icmp eq i32 %36, 0
  br i1 %83, label %195, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 6
  %86 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 5, i32 0, i32 0
  br label %87

87:                                               ; preds = %84, %143
  %88 = phi i64 [ 0, %84 ], [ %144, %143 ]
  %89 = load i64, i64* %81, align 8
  %90 = mul nuw nsw i64 %88, 51539607552
  %91 = add nuw nsw i64 %90, 68719476736
  %92 = lshr exact i64 %91, 32
  %93 = or i64 %92, 3
  %94 = add i64 %89, %93
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 32
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %143, label %99

99:                                               ; preds = %87
  %100 = and i64 %89, -4294967296
  %101 = add nsw i64 %92, -1
  %102 = add i64 %101, %89
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %100, %105
  %107 = load i32, i32* %85, align 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %143, label %109

109:                                              ; preds = %99
  %110 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 31, i32 4
  %112 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %111, align 8
  %113 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %109
  %115 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %112, i64 %106) #7
  br label %129

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 31, i32 0
  %118 = load i64*, i64** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 31, i32 1
  %120 = load i64*, i64** %119, align 8
  %121 = icmp eq i64* %118, %120
  br i1 %121, label %122, label %124

122:                                              ; preds = %116
  %123 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %110) #7
  br label %124

124:                                              ; preds = %122, %116
  %125 = phi i64* [ %123, %122 ], [ %118, %116 ]
  %126 = ptrtoint i64* %125 to i64
  %127 = add i64 %126, 8
  %128 = inttoptr i64 %127 to i64*
  store i64* %128, i64** %117, align 8
  store i64 %106, i64* %125, align 8
  br label %129

129:                                              ; preds = %124, %114
  %130 = phi i64* [ %115, %114 ], [ %125, %124 ]
  %131 = load i32, i32* %85, align 8
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %143, label %133

133:                                              ; preds = %129
  %134 = load i64*, i64** %86, align 8
  %135 = icmp eq i64* %134, null
  br i1 %135, label %136, label %139

136:                                              ; preds = %133
  %137 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  %138 = tail call i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %137, i32 16, i8 zeroext 0, i32 0) #7
  store i64* %138, i64** %86, align 8
  br label %139

139:                                              ; preds = %136, %133
  %140 = phi i64* [ %138, %136 ], [ %134, %133 ]
  %141 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  %142 = tail call i64* @_ZN2v88internal13ObjectHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %141, i64* %140, i64* %130) #7
  store i64* %142, i64** %86, align 8
  br label %143

143:                                              ; preds = %87, %139, %129, %99
  %144 = add nuw nsw i64 %88, 1
  %145 = icmp eq i64 %144, %82
  br i1 %145, label %195, label %87

146:                                              ; preds = %20
  %147 = load atomic i32, i32* %11 monotonic, align 4
  %148 = zext i32 %147 to i64
  %149 = or i64 %9, %148
  %150 = add i64 %149, 7
  %151 = inttoptr i64 %150 to i16*
  %152 = load atomic i16, i16* %151 monotonic, align 2
  %153 = icmp eq i16 %152, 189
  %154 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %155 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 6
  %157 = load i32, i32* %156, align 8
  %158 = add i64 %8, 3
  %159 = inttoptr i64 %158 to i32*
  br i1 %153, label %160, label %165

160:                                              ; preds = %146
  %161 = load atomic i32, i32* %159 acquire, align 4
  %162 = zext i32 %161 to i64
  %163 = or i64 %9, %162
  %164 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_132GetOwnEnumPropertyDictionaryKeysINS0_16GlobalDictionaryEEENS0_6HandleINS0_10FixedArrayEEEPNS0_7IsolateENS0_17KeyCollectionModeEPNS0_14KeyAccumulatorENS4_INS0_8JSObjectEEET_(%"class.v8::internal::Isolate"* %155, i32 %157, %"class.v8::internal::KeyAccumulator"* %0, i64 %163)
  br label %195

165:                                              ; preds = %146
  %166 = load i32, i32* %159, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %9, %167
  %169 = and i64 %167, 1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %192

171:                                              ; preds = %165
  %172 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %173 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %172, null
  br i1 %173, label %180, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %172, i64 0, i32 0, i32 1
  %176 = load i8, i8* %175, align 8, !range !2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %180, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %172, i64 0, i32 1, i64 0
  br label %188

180:                                              ; preds = %174, %171
  %181 = and i64 %8, -262144
  %182 = or i64 %181, 16
  %183 = inttoptr i64 %182 to i64*
  %184 = load i64, i64* %183, align 16
  %185 = add i64 %184, -41416
  %186 = inttoptr i64 %185 to %"class.v8::internal::Isolate"*
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %186, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %188

188:                                              ; preds = %180, %178
  %189 = phi i64* [ %187, %180 ], [ %179, %178 ]
  %190 = getelementptr inbounds i64, i64* %189, i64 115
  %191 = load i64, i64* %190, align 8
  br label %192

192:                                              ; preds = %165, %188
  %193 = phi i64 [ %191, %188 ], [ %168, %165 ]
  %194 = tail call fastcc i64* @_ZN2v88internal12_GLOBAL__N_132GetOwnEnumPropertyDictionaryKeysINS0_14NameDictionaryEEENS0_6HandleINS0_10FixedArrayEEEPNS0_7IsolateENS0_17KeyCollectionModeEPNS0_14KeyAccumulatorENS4_INS0_8JSObjectEEET_(%"class.v8::internal::Isolate"* %155, i32 %157, %"class.v8::internal::KeyAccumulator"* %0, i64 %193)
  br label %195

195:                                              ; preds = %143, %80, %43, %21, %160, %192
  %196 = phi i64* [ %164, %160 ], [ %194, %192 ], [ %24, %21 ], [ %24, %43 ], [ %24, %80 ], [ %24, %143 ]
  %197 = load i64, i64* %2, align 8
  %198 = and i64 %197, -4294967296
  %199 = add i64 %197, -1
  %200 = inttoptr i64 %199 to i32*
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = zext i32 %201 to i64
  %203 = or i64 %198, %202
  %204 = add i64 %203, 7
  %205 = inttoptr i64 %204 to i16*
  %206 = load atomic i16, i16* %205 monotonic, align 2
  %207 = icmp eq i16 %206, 191
  br i1 %207, label %208, label %264

208:                                              ; preds = %195
  %209 = load i64, i64* %196, align 8
  %210 = add i64 %209, 3
  %211 = inttoptr i64 %210 to i32*
  %212 = load i32, i32* %211, align 4
  %213 = icmp sgt i32 %212, 1
  br i1 %213, label %214, label %264

214:                                              ; preds = %208
  %215 = lshr i32 %212, 1
  %216 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %217 = bitcast %"class.v8::internal::Handle<v8::internal::JSModuleNamespace>::ObjectRef"* %4 to i8*
  %218 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSModuleNamespace>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSModuleNamespace>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSModuleNamespace>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSModuleNamespace>::ObjectRef"* %4, i64 0, i32 0
  %220 = zext i32 %215 to i64
  br label %225

221:                                              ; preds = %257
  %222 = icmp ult i64 %263, %220
  br i1 %222, label %223, label %264

223:                                              ; preds = %221
  %224 = load i64, i64* %196, align 8
  br label %225

225:                                              ; preds = %223, %214
  %226 = phi i64 [ %209, %214 ], [ %224, %223 ]
  %227 = phi i64 [ 0, %214 ], [ %263, %223 ]
  %228 = and i64 %226, -4294967296
  %229 = trunc i64 %227 to i32
  %230 = shl i32 %229, 2
  %231 = sext i32 %230 to i64
  %232 = add nsw i64 %231, 7
  %233 = add i64 %232, %226
  %234 = inttoptr i64 %233 to i32*
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = zext i32 %235 to i64
  %237 = or i64 %228, %236
  %238 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %216, align 8
  %239 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %238, i64 0, i32 31, i32 4
  %240 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %239, align 8
  %241 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %240, null
  br i1 %241, label %244, label %242

242:                                              ; preds = %225
  %243 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %240, i64 %237) #7
  br label %257

244:                                              ; preds = %225
  %245 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %238, i64 0, i32 31, i32 0
  %246 = load i64*, i64** %245, align 8
  %247 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %238, i64 0, i32 31, i32 1
  %248 = load i64*, i64** %247, align 8
  %249 = icmp eq i64* %246, %248
  br i1 %249, label %250, label %252

250:                                              ; preds = %244
  %251 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %238) #7
  br label %252

252:                                              ; preds = %250, %244
  %253 = phi i64* [ %251, %250 ], [ %246, %244 ]
  %254 = ptrtoint i64* %253 to i64
  %255 = add i64 %254, 8
  %256 = inttoptr i64 %255 to i64*
  store i64* %256, i64** %245, align 8
  store i64 %237, i64* %253, align 8
  br label %257

257:                                              ; preds = %242, %252
  %258 = phi i64* [ %243, %242 ], [ %253, %252 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #7
  %259 = load i64, i64* %2, align 8
  store i64 %259, i64* %218, align 8
  %260 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %216, align 8
  %261 = call i64* @_ZN2v88internal17JSModuleNamespace9GetExportEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JSModuleNamespace"* nonnull %219, %"class.v8::internal::Isolate"* %260, i64* %258) #7
  %262 = icmp eq i64* %261, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #7
  %263 = add nuw nsw i64 %227, 1
  br i1 %262, label %637, label %221

264:                                              ; preds = %221, %208, %195
  %265 = load i64, i64* %196, align 8
  %266 = add i64 %265, 3
  %267 = inttoptr i64 %266 to i32*
  %268 = load i32, i32* %267, align 4
  %269 = icmp sgt i32 %268, 1
  br i1 %269, label %270, label %635

270:                                              ; preds = %264
  %271 = lshr i32 %268, 1
  %272 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %273 = zext i32 %271 to i64
  br label %278

274:                                              ; preds = %310
  %275 = icmp ult i64 %313, %273
  br i1 %275, label %276, label %635

276:                                              ; preds = %274
  %277 = load i64, i64* %196, align 8
  br label %278

278:                                              ; preds = %276, %270
  %279 = phi i64 [ %265, %270 ], [ %277, %276 ]
  %280 = phi i64 [ 0, %270 ], [ %313, %276 ]
  %281 = and i64 %279, -4294967296
  %282 = trunc i64 %280 to i32
  %283 = shl i32 %282, 2
  %284 = sext i32 %283 to i64
  %285 = add i64 %279, 7
  %286 = add i64 %285, %284
  %287 = inttoptr i64 %286 to i32*
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = zext i32 %288 to i64
  %290 = or i64 %281, %289
  %291 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %272, align 8
  %292 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %291, i64 0, i32 31, i32 4
  %293 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %292, align 8
  %294 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %293, null
  br i1 %294, label %297, label %295

295:                                              ; preds = %278
  %296 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %293, i64 %290) #7
  br label %310

297:                                              ; preds = %278
  %298 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %291, i64 0, i32 31, i32 0
  %299 = load i64*, i64** %298, align 8
  %300 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %291, i64 0, i32 31, i32 1
  %301 = load i64*, i64** %300, align 8
  %302 = icmp eq i64* %299, %301
  br i1 %302, label %303, label %305

303:                                              ; preds = %297
  %304 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %291) #7
  br label %305

305:                                              ; preds = %303, %297
  %306 = phi i64* [ %304, %303 ], [ %299, %297 ]
  %307 = ptrtoint i64* %306 to i64
  %308 = add i64 %307, 8
  %309 = inttoptr i64 %308 to i64*
  store i64* %309, i64** %298, align 8
  store i64 %290, i64* %306, align 8
  br label %310

310:                                              ; preds = %305, %295
  %311 = phi i64* [ %296, %295 ], [ %306, %305 ]
  %312 = call zeroext i1 @_ZN2v88internal14KeyAccumulator6AddKeyENS0_6HandleINS0_6ObjectEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* %0, i64* %311, i32 0) #7
  %313 = add nuw nsw i64 %280, 1
  br i1 %312, label %274, label %637

314:                                              ; preds = %3
  %315 = load atomic i32, i32* %11 monotonic, align 4
  %316 = zext i32 %315 to i64
  %317 = or i64 %9, %316
  br i1 %19, label %318, label %549

318:                                              ; preds = %314
  %319 = add i64 %317, 11
  %320 = inttoptr i64 %319 to i32*
  %321 = load atomic i32, i32* %320 acquire, align 4
  %322 = lshr i32 %321, 10
  %323 = and i32 %322, 1023
  %324 = load i64, i64* %2, align 8
  %325 = and i64 %324, -4294967296
  %326 = add i64 %324, -1
  %327 = inttoptr i64 %326 to i32*
  %328 = load atomic i32, i32* %327 monotonic, align 4
  %329 = zext i32 %328 to i64
  %330 = or i64 %325, %329
  %331 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %332 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %331, align 8
  %333 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %332, i64 0, i32 0, i32 4
  %334 = load i64, i64* %333, align 8
  %335 = add i64 %330, 23
  %336 = inttoptr i64 %335 to i32*
  %337 = load i32, i32* %336, align 4
  %338 = and i64 %334, 4294967295
  %339 = icmp eq i64 %338, 0
  tail call void @llvm.assume(i1 %339) #7
  %340 = zext i32 %337 to i64
  %341 = or i64 %334, %340
  %342 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %332, i64 0, i32 31, i32 4
  %343 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %342, align 8
  %344 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %343, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %318
  %346 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %343, i64 %341) #7
  br label %360

347:                                              ; preds = %318
  %348 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %332, i64 0, i32 31, i32 0
  %349 = load i64*, i64** %348, align 8
  %350 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %332, i64 0, i32 31, i32 1
  %351 = load i64*, i64** %350, align 8
  %352 = icmp eq i64* %349, %351
  br i1 %352, label %353, label %355

353:                                              ; preds = %347
  %354 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %332) #7
  br label %355

355:                                              ; preds = %353, %347
  %356 = phi i64* [ %354, %353 ], [ %349, %347 ]
  %357 = ptrtoint i64* %356 to i64
  %358 = add i64 %357, 8
  %359 = inttoptr i64 %358 to i64*
  store i64* %359, i64** %348, align 8
  store i64 %341, i64* %356, align 8
  br label %360

360:                                              ; preds = %345, %355
  %361 = phi i64* [ %346, %345 ], [ %356, %355 ]
  %362 = load i32, i32* %5, align 4
  %363 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 6
  %364 = zext i32 %323 to i64
  %365 = icmp eq i32 %323, 0
  br i1 %365, label %542, label %366

366:                                              ; preds = %360
  %367 = load i32, i32* %363, align 8
  %368 = and i32 %362, 7
  %369 = icmp eq i32 %367, 1
  %370 = and i32 %362, 32
  %371 = icmp eq i32 %370, 0
  %372 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 5, i32 0, i32 0
  br label %373

373:                                              ; preds = %538, %366
  %374 = phi i32 [ -1, %366 ], [ %539, %538 ]
  %375 = phi i64 [ 0, %366 ], [ %540, %538 ]
  %376 = load i64, i64* %361, align 8
  %377 = mul nuw nsw i64 %375, 51539607552
  %378 = add nuw nsw i64 %377, 68719476736
  %379 = lshr exact i64 %378, 32
  %380 = or i64 %379, 3
  %381 = add i64 %380, %376
  %382 = inttoptr i64 %381 to i32*
  %383 = load atomic i32, i32* %382 monotonic, align 4
  %384 = lshr i32 %383, 4
  %385 = and i32 %368, %384
  %386 = icmp eq i32 %385, 0
  %387 = or i1 %369, %386
  br i1 %387, label %388, label %538

388:                                              ; preds = %373
  br i1 %371, label %389, label %392

389:                                              ; preds = %388
  %390 = and i64 %376, -4294967296
  %391 = add i64 %379, %376
  br label %421

392:                                              ; preds = %388
  %393 = and i32 %383, 2
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %538, label %395

395:                                              ; preds = %392
  %396 = and i64 %376, -4294967296
  %397 = add i64 %379, %376
  %398 = add i64 %397, 7
  %399 = inttoptr i64 %398 to i32*
  %400 = load atomic i32, i32* %399 monotonic, align 4
  %401 = zext i32 %400 to i64
  %402 = or i64 %396, %401
  %403 = and i64 %401, 1
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %538, label %405

405:                                              ; preds = %395
  %406 = add i64 %402, -1
  %407 = inttoptr i64 %406 to i32*
  %408 = load atomic i32, i32* %407 monotonic, align 4
  %409 = zext i32 %408 to i64
  %410 = or i64 %396, %409
  %411 = add i64 %410, 7
  %412 = inttoptr i64 %411 to i16*
  %413 = load atomic i16, i16* %412 monotonic, align 2
  %414 = icmp eq i16 %413, 86
  br i1 %414, label %415, label %538

415:                                              ; preds = %405
  %416 = add i64 %402, 7
  %417 = inttoptr i64 %416 to i32*
  %418 = load i32, i32* %417, align 4
  %419 = and i32 %418, 2
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %538, label %421

421:                                              ; preds = %415, %389
  %422 = phi i64 [ %391, %389 ], [ %397, %415 ]
  %423 = phi i64 [ %390, %389 ], [ %396, %415 ]
  %424 = add i64 %422, -1
  %425 = inttoptr i64 %424 to i32*
  %426 = load atomic i32, i32* %425 monotonic, align 4
  %427 = zext i32 %426 to i64
  %428 = or i64 %423, %427
  %429 = add i64 %428, -1
  %430 = inttoptr i64 %429 to i32*
  %431 = load atomic i32, i32* %430 monotonic, align 4
  %432 = zext i32 %431 to i64
  %433 = or i64 %423, %432
  %434 = add i64 %433, 7
  %435 = inttoptr i64 %434 to i16*
  %436 = load atomic i16, i16* %435 monotonic, align 2
  %437 = icmp eq i16 %436, 64
  br i1 %437, label %438, label %442

438:                                              ; preds = %421
  %439 = icmp eq i32 %374, -1
  %440 = trunc i64 %375 to i32
  %441 = select i1 %439, i32 %440, i32 %374
  br label %538

442:                                              ; preds = %421
  %443 = load i32, i32* %5, align 4
  %444 = icmp eq i32 %443, 64
  %445 = and i64 %427, 1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %455, label %447

447:                                              ; preds = %442
  %448 = load atomic i32, i32* %430 monotonic, align 4
  %449 = zext i32 %448 to i64
  %450 = or i64 %423, %449
  %451 = add i64 %450, 7
  %452 = inttoptr i64 %451 to i16*
  %453 = load atomic i16, i16* %452 monotonic, align 2
  %454 = icmp eq i16 %453, 64
  br label %455

455:                                              ; preds = %447, %442
  %456 = phi i1 [ false, %442 ], [ %454, %447 ]
  br i1 %444, label %457, label %458

457:                                              ; preds = %455
  br i1 %456, label %471, label %538

458:                                              ; preds = %455
  br i1 %456, label %459, label %468

459:                                              ; preds = %458
  %460 = and i32 %443, 16
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %538

462:                                              ; preds = %459
  %463 = add i64 %428, 7
  %464 = inttoptr i64 %463 to i32*
  %465 = load i32, i32* %464, align 4
  %466 = and i32 %465, 1
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %477, label %538

468:                                              ; preds = %458
  %469 = and i32 %443, 8
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %477, label %538

471:                                              ; preds = %457
  %472 = add i64 %428, 7
  %473 = inttoptr i64 %472 to i32*
  %474 = load i32, i32* %473, align 4
  %475 = and i32 %474, 16
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %538, label %477

477:                                              ; preds = %471, %468, %462
  br i1 %386, label %515, label %478

478:                                              ; preds = %477
  %479 = load i32, i32* %363, align 8
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %538, label %481

481:                                              ; preds = %478
  %482 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %331, align 8
  %483 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %482, i64 0, i32 31, i32 4
  %484 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %483, align 8
  %485 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %484, null
  br i1 %485, label %488, label %486

486:                                              ; preds = %481
  %487 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %484, i64 %428) #7
  br label %501

488:                                              ; preds = %481
  %489 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %482, i64 0, i32 31, i32 0
  %490 = load i64*, i64** %489, align 8
  %491 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %482, i64 0, i32 31, i32 1
  %492 = load i64*, i64** %491, align 8
  %493 = icmp eq i64* %490, %492
  br i1 %493, label %494, label %496

494:                                              ; preds = %488
  %495 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %482) #7
  br label %496

496:                                              ; preds = %494, %488
  %497 = phi i64* [ %495, %494 ], [ %490, %488 ]
  %498 = ptrtoint i64* %497 to i64
  %499 = add i64 %498, 8
  %500 = inttoptr i64 %499 to i64*
  store i64* %500, i64** %489, align 8
  store i64 %428, i64* %497, align 8
  br label %501

501:                                              ; preds = %496, %486
  %502 = phi i64* [ %487, %486 ], [ %497, %496 ]
  %503 = load i32, i32* %363, align 8
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %538, label %505

505:                                              ; preds = %501
  %506 = load i64*, i64** %372, align 8
  %507 = icmp eq i64* %506, null
  br i1 %507, label %508, label %511

508:                                              ; preds = %505
  %509 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %331, align 8
  %510 = tail call i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %509, i32 16, i8 zeroext 0, i32 0) #7
  store i64* %510, i64** %372, align 8
  br label %511

511:                                              ; preds = %508, %505
  %512 = phi i64* [ %510, %508 ], [ %506, %505 ]
  %513 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %331, align 8
  %514 = tail call i64* @_ZN2v88internal13ObjectHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %513, i64* %512, i64* %502) #7
  store i64* %514, i64** %372, align 8
  br label %538

515:                                              ; preds = %477
  %516 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %331, align 8
  %517 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %516, i64 0, i32 31, i32 4
  %518 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %517, align 8
  %519 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %518, null
  br i1 %519, label %522, label %520

520:                                              ; preds = %515
  %521 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %518, i64 %428) #7
  br label %535

522:                                              ; preds = %515
  %523 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %516, i64 0, i32 31, i32 0
  %524 = load i64*, i64** %523, align 8
  %525 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %516, i64 0, i32 31, i32 1
  %526 = load i64*, i64** %525, align 8
  %527 = icmp eq i64* %524, %526
  br i1 %527, label %528, label %530

528:                                              ; preds = %522
  %529 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %516) #7
  br label %530

530:                                              ; preds = %528, %522
  %531 = phi i64* [ %529, %528 ], [ %524, %522 ]
  %532 = ptrtoint i64* %531 to i64
  %533 = add i64 %532, 8
  %534 = inttoptr i64 %533 to i64*
  store i64* %534, i64** %523, align 8
  store i64 %428, i64* %531, align 8
  br label %535

535:                                              ; preds = %530, %520
  %536 = phi i64* [ %521, %520 ], [ %531, %530 ]
  %537 = tail call zeroext i1 @_ZN2v88internal14KeyAccumulator6AddKeyENS0_6HandleINS0_6ObjectEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* %0, i64* %536, i32 0) #7
  br i1 %537, label %538, label %637

538:                                              ; preds = %535, %511, %501, %478, %471, %468, %462, %459, %457, %438, %415, %405, %395, %392, %373
  %539 = phi i32 [ %374, %511 ], [ %374, %501 ], [ %374, %478 ], [ %374, %535 ], [ %374, %471 ], [ %374, %392 ], [ %374, %405 ], [ %374, %415 ], [ %374, %395 ], [ %374, %457 ], [ %374, %459 ], [ %374, %462 ], [ %374, %468 ], [ %441, %438 ], [ %374, %373 ]
  %540 = add nuw nsw i64 %375, 1
  %541 = icmp eq i64 %540, %364
  br i1 %541, label %542, label %373

542:                                              ; preds = %538, %360
  %543 = phi i32 [ -1, %360 ], [ %539, %538 ]
  %544 = icmp eq i32 %543, -1
  br i1 %544, label %635, label %545

545:                                              ; preds = %542
  %546 = tail call fastcc i64 @_ZN2v88internal12_GLOBAL__N_131CollectOwnPropertyNamesInternalILb0EEENS_4base8OptionalIiEENS0_6HandleINS0_8JSObjectEEEPNS0_14KeyAccumulatorENS6_INS0_15DescriptorArrayEEEii(%"class.v8::internal::KeyAccumulator"* %0, i64* %361, i32 %543, i32 %323)
  %547 = trunc i64 %546 to i8
  %548 = icmp eq i8 %547, 0
  br i1 %548, label %637, label %635

549:                                              ; preds = %314
  %550 = add i64 %317, 7
  %551 = inttoptr i64 %550 to i16*
  %552 = load atomic i16, i16* %551 monotonic, align 2
  %553 = icmp eq i16 %552, 189
  %554 = add i64 %8, 3
  %555 = inttoptr i64 %554 to i32*
  br i1 %553, label %556, label %583

556:                                              ; preds = %549
  %557 = load atomic i32, i32* %555 acquire, align 4
  %558 = zext i32 %557 to i64
  %559 = or i64 %9, %558
  %560 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %561 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %560, align 8
  %562 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %561, i64 0, i32 31, i32 4
  %563 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %562, align 8
  %564 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %563, null
  br i1 %564, label %567, label %565

565:                                              ; preds = %556
  %566 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %563, i64 %559) #7
  br label %580

567:                                              ; preds = %556
  %568 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %561, i64 0, i32 31, i32 0
  %569 = load i64*, i64** %568, align 8
  %570 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %561, i64 0, i32 31, i32 1
  %571 = load i64*, i64** %570, align 8
  %572 = icmp eq i64* %569, %571
  br i1 %572, label %573, label %575

573:                                              ; preds = %567
  %574 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %561) #7
  br label %575

575:                                              ; preds = %573, %567
  %576 = phi i64* [ %574, %573 ], [ %569, %567 ]
  %577 = ptrtoint i64* %576 to i64
  %578 = add i64 %577, 8
  %579 = inttoptr i64 %578 to i64*
  store i64* %579, i64** %568, align 8
  store i64 %559, i64* %576, align 8
  br label %580

580:                                              ; preds = %565, %575
  %581 = phi i64* [ %566, %565 ], [ %576, %575 ]
  %582 = tail call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_125CollectKeysFromDictionaryINS0_16GlobalDictionaryEEENS0_15ExceptionStatusENS0_6HandleIT_EEPNS0_14KeyAccumulatorE(i64* %581, %"class.v8::internal::KeyAccumulator"* %0)
  br i1 %582, label %635, label %637

583:                                              ; preds = %549
  %584 = load i32, i32* %555, align 4
  %585 = zext i32 %584 to i64
  %586 = or i64 %9, %585
  %587 = and i64 %585, 1
  %588 = icmp eq i64 %587, 0
  br i1 %588, label %589, label %610

589:                                              ; preds = %583
  %590 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %591 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %590, null
  br i1 %591, label %598, label %592

592:                                              ; preds = %589
  %593 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %590, i64 0, i32 0, i32 1
  %594 = load i8, i8* %593, align 8, !range !2
  %595 = icmp eq i8 %594, 0
  br i1 %595, label %598, label %596

596:                                              ; preds = %592
  %597 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %590, i64 0, i32 1, i64 0
  br label %606

598:                                              ; preds = %592, %589
  %599 = and i64 %8, -262144
  %600 = or i64 %599, 16
  %601 = inttoptr i64 %600 to i64*
  %602 = load i64, i64* %601, align 16
  %603 = add i64 %602, -41416
  %604 = inttoptr i64 %603 to %"class.v8::internal::Isolate"*
  %605 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %604, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %606

606:                                              ; preds = %598, %596
  %607 = phi i64* [ %605, %598 ], [ %597, %596 ]
  %608 = getelementptr inbounds i64, i64* %607, i64 115
  %609 = load i64, i64* %608, align 8
  br label %610

610:                                              ; preds = %583, %606
  %611 = phi i64 [ %609, %606 ], [ %586, %583 ]
  %612 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %613 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %612, align 8
  %614 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %613, i64 0, i32 31, i32 4
  %615 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %614, align 8
  %616 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %615, null
  br i1 %616, label %619, label %617

617:                                              ; preds = %610
  %618 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %615, i64 %611) #7
  br label %632

619:                                              ; preds = %610
  %620 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %613, i64 0, i32 31, i32 0
  %621 = load i64*, i64** %620, align 8
  %622 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %613, i64 0, i32 31, i32 1
  %623 = load i64*, i64** %622, align 8
  %624 = icmp eq i64* %621, %623
  br i1 %624, label %625, label %627

625:                                              ; preds = %619
  %626 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %613) #7
  br label %627

627:                                              ; preds = %625, %619
  %628 = phi i64* [ %626, %625 ], [ %621, %619 ]
  %629 = ptrtoint i64* %628 to i64
  %630 = add i64 %629, 8
  %631 = inttoptr i64 %630 to i64*
  store i64* %631, i64** %620, align 8
  store i64 %611, i64* %628, align 8
  br label %632

632:                                              ; preds = %617, %627
  %633 = phi i64* [ %618, %617 ], [ %628, %627 ]
  %634 = tail call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_125CollectKeysFromDictionaryINS0_14NameDictionaryEEENS0_15ExceptionStatusENS0_6HandleIT_EEPNS0_14KeyAccumulatorE(i64* %633, %"class.v8::internal::KeyAccumulator"* %0)
  br i1 %634, label %635, label %637

635:                                              ; preds = %274, %545, %580, %632, %542, %264
  %636 = call i16 @_ZN2v88internal14KeyAccumulator22CollectInterceptorKeysENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEENS1_14IndexedOrNamedE(%"class.v8::internal::KeyAccumulator"* %0, i64* %1, i64* %2, i32 1)
  br label %637

637:                                              ; preds = %535, %257, %310, %545, %580, %632, %635
  %638 = phi i16 [ %636, %635 ], [ 0, %580 ], [ 0, %632 ], [ 0, %545 ], [ 0, %310 ], [ 0, %257 ], [ 0, %535 ]
  ret i16 %638
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_132GetOwnEnumPropertyDictionaryKeysINS0_16GlobalDictionaryEEENS0_6HandleINS0_10FixedArrayEEEPNS0_7IsolateENS0_17KeyCollectionModeEPNS0_14KeyAccumulatorENS4_INS0_8JSObjectEEET_(%"class.v8::internal::Isolate"*, i32, %"class.v8::internal::KeyAccumulator"* nocapture, i64) unnamed_addr #0 {
  %5 = alloca %"struct.v8::internal::EnumIndexComparator", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %8 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %7, align 8
  %9 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %8, i64 %3) #7
  %12 = load i64, i64* %11, align 8
  br label %26

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %15, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %21

21:                                               ; preds = %19, %13
  %22 = phi i64* [ %20, %19 ], [ %15, %13 ]
  %23 = ptrtoint i64* %22 to i64
  %24 = add i64 %23, 8
  %25 = inttoptr i64 %24 to i64*
  store i64* %25, i64** %14, align 8
  store i64 %3, i64* %22, align 8
  br label %26

26:                                               ; preds = %10, %21
  %27 = phi i64 [ %12, %10 ], [ %3, %21 ]
  %28 = phi i64* [ %11, %10 ], [ %22, %21 ]
  %29 = add i64 %27, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = icmp ult i32 %31, 2
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 29
  br label %361

35:                                               ; preds = %26
  %36 = bitcast %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #7
  %37 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %27, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %39 = call i32 @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary.1156"* nonnull %38) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #7
  %40 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %41 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %40, i32 %39, i8 zeroext 0) #7
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 3
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = ashr i32 %45, 1
  %47 = load i64, i64* %28, align 8
  %48 = add i64 %47, 15
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = ashr i32 %50, 1
  %52 = sext i32 %51 to i64
  %53 = icmp eq i32 %51, 0
  br i1 %53, label %290, label %54

54:                                               ; preds = %35
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %57 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %2, i64 0, i32 6
  %58 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %2, i64 0, i32 0
  %59 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %2, i64 0, i32 5, i32 0, i32 0
  switch i32 %1, label %226 [
    i32 1, label %125
    i32 0, label %60
  ]

60:                                               ; preds = %54, %123
  %61 = phi i64 [ %124, %123 ], [ %47, %54 ]
  %62 = phi i32 [ %120, %123 ], [ %1, %54 ]
  %63 = phi i64 [ %121, %123 ], [ 0, %54 ]
  %64 = and i64 %61, -4294967296
  %65 = trunc i64 %63 to i32
  %66 = shl i32 %65, 2
  %67 = add i32 %66, 20
  %68 = sext i32 %67 to i64
  %69 = add i64 %61, 7
  %70 = add i64 %69, %68
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %64, %73
  %75 = load i64, i64* %55, align 8
  %76 = trunc i64 %75 to i32
  %77 = icmp eq i32 %72, %76
  br i1 %77, label %119, label %78

78:                                               ; preds = %60
  %79 = load i64, i64* %56, align 8
  %80 = trunc i64 %79 to i32
  %81 = icmp eq i32 %72, %80
  br i1 %81, label %119, label %82

82:                                               ; preds = %78
  %83 = add i64 %74, 3
  %84 = inttoptr i64 %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  %87 = and i64 %86, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %82
  %90 = or i64 %64, %86
  %91 = add i64 %90, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %64, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load atomic i16, i16* %97 monotonic, align 2
  %99 = icmp eq i16 %98, 64
  br i1 %99, label %119, label %100

100:                                              ; preds = %89, %82
  %101 = load atomic i32, i32* %71 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %64, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 32
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %119

109:                                              ; preds = %100
  %110 = load i64, i64* %41, align 8
  %111 = shl i32 %62, 2
  %112 = sext i32 %111 to i64
  %113 = add nsw i64 %112, 7
  %114 = add i64 %113, %110
  %115 = inttoptr i64 %114 to i32*
  %116 = shl i32 %65, 1
  store atomic volatile i32 %116, i32* %115 monotonic, align 4
  %117 = add nsw i32 %62, 1
  %118 = icmp eq i32 %117, %46
  br i1 %118, label %294, label %119

119:                                              ; preds = %109, %100, %89, %78, %60
  %120 = phi i32 [ %117, %109 ], [ %62, %89 ], [ %62, %78 ], [ %62, %60 ], [ %62, %100 ]
  %121 = add i64 %63, 1
  %122 = icmp eq i64 %121, %52
  br i1 %122, label %290, label %123

123:                                              ; preds = %119
  %124 = load i64, i64* %28, align 8
  br label %60

125:                                              ; preds = %54, %224
  %126 = phi i64 [ %225, %224 ], [ %47, %54 ]
  %127 = phi i32 [ %221, %224 ], [ 0, %54 ]
  %128 = phi i64 [ %222, %224 ], [ 0, %54 ]
  %129 = and i64 %126, -4294967296
  %130 = trunc i64 %128 to i32
  %131 = shl i32 %130, 2
  %132 = add i32 %131, 20
  %133 = sext i32 %132 to i64
  %134 = add i64 %126, 7
  %135 = add i64 %134, %133
  %136 = inttoptr i64 %135 to i32*
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = zext i32 %137 to i64
  %139 = or i64 %129, %138
  %140 = load i64, i64* %55, align 8
  %141 = trunc i64 %140 to i32
  %142 = icmp eq i32 %137, %141
  br i1 %142, label %220, label %143

143:                                              ; preds = %125
  %144 = load i64, i64* %56, align 8
  %145 = trunc i64 %144 to i32
  %146 = icmp eq i32 %137, %145
  br i1 %146, label %220, label %147

147:                                              ; preds = %143
  %148 = add i64 %139, 3
  %149 = inttoptr i64 %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = zext i32 %150 to i64
  %152 = or i64 %129, %151
  %153 = and i64 %151, 1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %165, label %155

155:                                              ; preds = %147
  %156 = add i64 %152, -1
  %157 = inttoptr i64 %156 to i32*
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = zext i32 %158 to i64
  %160 = or i64 %129, %159
  %161 = add i64 %160, 7
  %162 = inttoptr i64 %161 to i16*
  %163 = load atomic i16, i16* %162 monotonic, align 2
  %164 = icmp eq i16 %163, 64
  br i1 %164, label %220, label %165

165:                                              ; preds = %155, %147
  %166 = load atomic i32, i32* %136 monotonic, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %129, %167
  %169 = add i64 %168, 7
  %170 = inttoptr i64 %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = and i32 %171, 32
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %211, label %174

174:                                              ; preds = %165
  %175 = load i32, i32* %57, align 8
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %220, label %177

177:                                              ; preds = %174
  %178 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %58, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %178, i64 0, i32 31, i32 4
  %180 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %179, align 8
  %181 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %177
  %183 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %180, i64 %152) #7
  br label %197

184:                                              ; preds = %177
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %178, i64 0, i32 31, i32 0
  %186 = load i64*, i64** %185, align 8
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %178, i64 0, i32 31, i32 1
  %188 = load i64*, i64** %187, align 8
  %189 = icmp eq i64* %186, %188
  br i1 %189, label %190, label %192

190:                                              ; preds = %184
  %191 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %178) #7
  br label %192

192:                                              ; preds = %190, %184
  %193 = phi i64* [ %191, %190 ], [ %186, %184 ]
  %194 = ptrtoint i64* %193 to i64
  %195 = add i64 %194, 8
  %196 = inttoptr i64 %195 to i64*
  store i64* %196, i64** %185, align 8
  store i64 %152, i64* %193, align 8
  br label %197

197:                                              ; preds = %192, %182
  %198 = phi i64* [ %183, %182 ], [ %193, %192 ]
  %199 = load i32, i32* %57, align 8
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %220, label %201

201:                                              ; preds = %197
  %202 = load i64*, i64** %59, align 8
  %203 = icmp eq i64* %202, null
  br i1 %203, label %204, label %207

204:                                              ; preds = %201
  %205 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %58, align 8
  %206 = call i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %205, i32 16, i8 zeroext 0, i32 0) #7
  store i64* %206, i64** %59, align 8
  br label %207

207:                                              ; preds = %204, %201
  %208 = phi i64* [ %206, %204 ], [ %202, %201 ]
  %209 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %58, align 8
  %210 = call i64* @_ZN2v88internal13ObjectHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %209, i64* %208, i64* %198) #7
  store i64* %210, i64** %59, align 8
  br label %220

211:                                              ; preds = %165
  %212 = load i64, i64* %41, align 8
  %213 = shl i32 %127, 2
  %214 = sext i32 %213 to i64
  %215 = add nsw i64 %214, 7
  %216 = add i64 %215, %212
  %217 = inttoptr i64 %216 to i32*
  %218 = shl i32 %130, 1
  store atomic volatile i32 %218, i32* %217 monotonic, align 4
  %219 = add nsw i32 %127, 1
  br label %220

220:                                              ; preds = %211, %207, %197, %174, %155, %143, %125
  %221 = phi i32 [ %127, %207 ], [ %127, %197 ], [ %127, %174 ], [ %219, %211 ], [ %127, %155 ], [ %127, %143 ], [ %127, %125 ]
  %222 = add i64 %128, 1
  %223 = icmp eq i64 %222, %52
  br i1 %223, label %290, label %224

224:                                              ; preds = %220
  %225 = load i64, i64* %28, align 8
  br label %125

226:                                              ; preds = %54, %288
  %227 = phi i64 [ %289, %288 ], [ %47, %54 ]
  %228 = phi i32 [ %285, %288 ], [ 0, %54 ]
  %229 = phi i64 [ %286, %288 ], [ 0, %54 ]
  %230 = and i64 %227, -4294967296
  %231 = trunc i64 %229 to i32
  %232 = shl i32 %231, 2
  %233 = add i32 %232, 20
  %234 = sext i32 %233 to i64
  %235 = add i64 %227, 7
  %236 = add i64 %235, %234
  %237 = inttoptr i64 %236 to i32*
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = zext i32 %238 to i64
  %240 = or i64 %230, %239
  %241 = load i64, i64* %55, align 8
  %242 = trunc i64 %241 to i32
  %243 = icmp eq i32 %238, %242
  br i1 %243, label %284, label %244

244:                                              ; preds = %226
  %245 = load i64, i64* %56, align 8
  %246 = trunc i64 %245 to i32
  %247 = icmp eq i32 %238, %246
  br i1 %247, label %284, label %248

248:                                              ; preds = %244
  %249 = add i64 %240, 3
  %250 = inttoptr i64 %249 to i32*
  %251 = load i32, i32* %250, align 4
  %252 = zext i32 %251 to i64
  %253 = and i64 %252, 1
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %266, label %255

255:                                              ; preds = %248
  %256 = or i64 %230, %252
  %257 = add i64 %256, -1
  %258 = inttoptr i64 %257 to i32*
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = zext i32 %259 to i64
  %261 = or i64 %230, %260
  %262 = add i64 %261, 7
  %263 = inttoptr i64 %262 to i16*
  %264 = load atomic i16, i16* %263 monotonic, align 2
  %265 = icmp eq i16 %264, 64
  br i1 %265, label %284, label %266

266:                                              ; preds = %255, %248
  %267 = load atomic i32, i32* %237 monotonic, align 4
  %268 = zext i32 %267 to i64
  %269 = or i64 %230, %268
  %270 = add i64 %269, 7
  %271 = inttoptr i64 %270 to i32*
  %272 = load i32, i32* %271, align 4
  %273 = and i32 %272, 32
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %284

275:                                              ; preds = %266
  %276 = load i64, i64* %41, align 8
  %277 = shl i32 %228, 2
  %278 = sext i32 %277 to i64
  %279 = add nsw i64 %278, 7
  %280 = add i64 %279, %276
  %281 = inttoptr i64 %280 to i32*
  %282 = shl i32 %231, 1
  store atomic volatile i32 %282, i32* %281 monotonic, align 4
  %283 = add nsw i32 %228, 1
  br label %284

284:                                              ; preds = %275, %266, %255, %244, %226
  %285 = phi i32 [ %283, %275 ], [ %228, %255 ], [ %228, %244 ], [ %228, %226 ], [ %228, %266 ]
  %286 = add i64 %229, 1
  %287 = icmp eq i64 %286, %52
  br i1 %287, label %290, label %288

288:                                              ; preds = %284
  %289 = load i64, i64* %28, align 8
  br label %226

290:                                              ; preds = %119, %220, %284, %35
  %291 = phi i32 [ 0, %35 ], [ %285, %284 ], [ %221, %220 ], [ %120, %119 ]
  %292 = icmp eq i32 %46, %291
  br i1 %292, label %294, label %293, !prof !6

293:                                              ; preds = %290
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0)) #9
  unreachable

294:                                              ; preds = %109, %290
  %295 = load i64, i64* %41, align 8
  %296 = add i64 %295, 3
  %297 = inttoptr i64 %296 to i32*
  %298 = load i32, i32* %297, align 4
  %299 = ashr i32 %298, 1
  %300 = load i64, i64* %28, align 8
  %301 = add i64 %295, 7
  %302 = sext i32 %299 to i64
  %303 = shl nsw i64 %302, 2
  %304 = add i64 %303, %301
  %305 = bitcast %"struct.v8::internal::EnumIndexComparator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #7
  %306 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %300, i64* %306, align 8
  call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %301, i64 %304, %"struct.v8::internal::EnumIndexComparator"* nonnull dereferenceable(8) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #7
  %307 = icmp sgt i32 %298, 1
  br i1 %307, label %308, label %361

308:                                              ; preds = %294
  %309 = and i64 %300, -4294967296
  %310 = add i64 %300, 7
  %311 = and i64 %295, -262144
  %312 = or i64 %311, 8
  %313 = inttoptr i64 %312 to i64*
  %314 = or i64 %311, 16
  %315 = inttoptr i64 %314 to %"class.v8::internal::Heap"**
  br label %316

316:                                              ; preds = %358, %308
  %317 = phi i64 [ 0, %308 ], [ %359, %358 ]
  %318 = trunc i64 %317 to i32
  %319 = shl i32 %318, 2
  %320 = sext i32 %319 to i64
  %321 = add i64 %301, %320
  %322 = inttoptr i64 %321 to i32*
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = lshr i32 %323, 1
  %325 = shl i32 %324, 2
  %326 = add i32 %325, 20
  %327 = sext i32 %326 to i64
  %328 = add i64 %310, %327
  %329 = inttoptr i64 %328 to i32*
  %330 = load atomic i32, i32* %329 monotonic, align 4
  %331 = zext i32 %330 to i64
  %332 = or i64 %309, %331
  %333 = add i64 %332, 3
  %334 = inttoptr i64 %333 to i32*
  %335 = load i32, i32* %334, align 4
  %336 = zext i32 %335 to i64
  %337 = or i64 %309, %336
  store atomic volatile i32 %335, i32* %322 monotonic, align 4
  %338 = and i64 %336, 1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %358, label %340

340:                                              ; preds = %316
  %341 = load i64, i64* %313, align 8
  %342 = and i64 %341, 262144
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %346, label %344

344:                                              ; preds = %340
  %345 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %315, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %345, i64 %295, i64 %321, i64 %337) #7
  br label %346

346:                                              ; preds = %344, %340
  %347 = and i64 %337, -262144
  %348 = or i64 %347, 8
  %349 = inttoptr i64 %348 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = and i64 %350, 24
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %358, label %353

353:                                              ; preds = %346
  %354 = load i64, i64* %313, align 8
  %355 = and i64 %354, 24
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %358

357:                                              ; preds = %353
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %295, i64 %321, i64 %337) #7
  br label %358

358:                                              ; preds = %357, %353, %346, %316
  %359 = add nuw nsw i64 %317, 1
  %360 = icmp slt i64 %359, %302
  br i1 %360, label %316, label %361

361:                                              ; preds = %358, %294, %33
  %362 = phi i64* [ %34, %33 ], [ %41, %294 ], [ %41, %358 ]
  ret i64* %362
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_132GetOwnEnumPropertyDictionaryKeysINS0_14NameDictionaryEEENS0_6HandleINS0_10FixedArrayEEEPNS0_7IsolateENS0_17KeyCollectionModeEPNS0_14KeyAccumulatorENS4_INS0_8JSObjectEEET_(%"class.v8::internal::Isolate"*, i32, %"class.v8::internal::KeyAccumulator"* nocapture, i64) unnamed_addr #0 {
  %5 = alloca %"struct.v8::internal::EnumIndexComparator.1214", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %8 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %7, align 8
  %9 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %8, i64 %3) #7
  %12 = load i64, i64* %11, align 8
  br label %26

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %15, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %21

21:                                               ; preds = %19, %13
  %22 = phi i64* [ %20, %19 ], [ %15, %13 ]
  %23 = ptrtoint i64* %22 to i64
  %24 = add i64 %23, 8
  %25 = inttoptr i64 %24 to i64*
  store i64* %25, i64** %14, align 8
  store i64 %3, i64* %22, align 8
  br label %26

26:                                               ; preds = %10, %21
  %27 = phi i64 [ %12, %10 ], [ %3, %21 ]
  %28 = phi i64* [ %11, %10 ], [ %22, %21 ]
  %29 = add i64 %27, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = icmp ult i32 %31, 2
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 29
  br label %339

35:                                               ; preds = %26
  %36 = bitcast %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #7
  %37 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %27, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %39 = call i32 @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary.1159"* nonnull %38) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #7
  %40 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %41 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %40, i32 %39, i8 zeroext 0) #7
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 3
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = ashr i32 %45, 1
  %47 = load i64, i64* %28, align 8
  %48 = add i64 %47, 15
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = ashr i32 %50, 1
  %52 = sext i32 %51 to i64
  %53 = icmp eq i32 %51, 0
  br i1 %53, label %272, label %54

54:                                               ; preds = %35
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %57 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %2, i64 0, i32 6
  %58 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %2, i64 0, i32 0
  %59 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %2, i64 0, i32 5, i32 0, i32 0
  switch i32 %1, label %214 [
    i32 1, label %119
    i32 0, label %60
  ]

60:                                               ; preds = %54, %117
  %61 = phi i64 [ %118, %117 ], [ %47, %54 ]
  %62 = phi i32 [ %114, %117 ], [ %1, %54 ]
  %63 = phi i64 [ %115, %117 ], [ 0, %54 ]
  %64 = and i64 %61, -4294967296
  %65 = mul i64 %63, 51539607552
  %66 = add i64 %65, 85899345920
  %67 = ashr exact i64 %66, 32
  %68 = add i64 %61, 7
  %69 = add i64 %67, %68
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %64, %72
  %74 = load i64, i64* %55, align 8
  %75 = trunc i64 %74 to i32
  %76 = icmp eq i32 %71, %75
  br i1 %76, label %113, label %77

77:                                               ; preds = %60
  %78 = load i64, i64* %56, align 8
  %79 = trunc i64 %78 to i32
  %80 = icmp eq i32 %71, %79
  br i1 %80, label %113, label %81

81:                                               ; preds = %77
  %82 = and i64 %72, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81
  %85 = add i64 %73, -1
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %64, %88
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i16*
  %92 = load atomic i16, i16* %91 monotonic, align 2
  %93 = icmp eq i16 %92, 64
  br i1 %93, label %113, label %94

94:                                               ; preds = %84, %81
  %95 = add i64 %65, 120259084288
  %96 = ashr exact i64 %95, 32
  %97 = add i64 %96, %68
  %98 = inttoptr i64 %97 to i32*
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 32
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %113

102:                                              ; preds = %94
  %103 = load i64, i64* %41, align 8
  %104 = shl i32 %62, 2
  %105 = sext i32 %104 to i64
  %106 = add nsw i64 %105, 7
  %107 = add i64 %106, %103
  %108 = inttoptr i64 %107 to i32*
  %109 = trunc i64 %63 to i32
  %110 = shl i32 %109, 1
  store atomic volatile i32 %110, i32* %108 monotonic, align 4
  %111 = add nsw i32 %62, 1
  %112 = icmp eq i32 %111, %46
  br i1 %112, label %276, label %113

113:                                              ; preds = %102, %94, %84, %77, %60
  %114 = phi i32 [ %111, %102 ], [ %62, %84 ], [ %62, %77 ], [ %62, %60 ], [ %62, %94 ]
  %115 = add i64 %63, 1
  %116 = icmp eq i64 %115, %52
  br i1 %116, label %272, label %117

117:                                              ; preds = %113
  %118 = load i64, i64* %28, align 8
  br label %60

119:                                              ; preds = %54, %212
  %120 = phi i64 [ %213, %212 ], [ %47, %54 ]
  %121 = phi i32 [ %209, %212 ], [ 0, %54 ]
  %122 = phi i64 [ %210, %212 ], [ 0, %54 ]
  %123 = and i64 %120, -4294967296
  %124 = mul i64 %122, 51539607552
  %125 = add i64 %124, 85899345920
  %126 = ashr exact i64 %125, 32
  %127 = add i64 %120, 7
  %128 = add i64 %126, %127
  %129 = inttoptr i64 %128 to i32*
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = zext i32 %130 to i64
  %132 = or i64 %123, %131
  %133 = load i64, i64* %55, align 8
  %134 = trunc i64 %133 to i32
  %135 = icmp eq i32 %130, %134
  br i1 %135, label %208, label %136

136:                                              ; preds = %119
  %137 = load i64, i64* %56, align 8
  %138 = trunc i64 %137 to i32
  %139 = icmp eq i32 %130, %138
  br i1 %139, label %208, label %140

140:                                              ; preds = %136
  %141 = and i64 %131, 1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %153, label %143

143:                                              ; preds = %140
  %144 = add i64 %132, -1
  %145 = inttoptr i64 %144 to i32*
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %123, %147
  %149 = add i64 %148, 7
  %150 = inttoptr i64 %149 to i16*
  %151 = load atomic i16, i16* %150 monotonic, align 2
  %152 = icmp eq i16 %151, 64
  br i1 %152, label %208, label %153

153:                                              ; preds = %143, %140
  %154 = add i64 %124, 120259084288
  %155 = ashr exact i64 %154, 32
  %156 = add i64 %155, %127
  %157 = inttoptr i64 %156 to i32*
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 32
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %198, label %161

161:                                              ; preds = %153
  %162 = load i32, i32* %57, align 8
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %208, label %164

164:                                              ; preds = %161
  %165 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %58, align 8
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %165, i64 0, i32 31, i32 4
  %167 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %166, align 8
  %168 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %164
  %170 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %167, i64 %132) #7
  br label %184

171:                                              ; preds = %164
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %165, i64 0, i32 31, i32 0
  %173 = load i64*, i64** %172, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %165, i64 0, i32 31, i32 1
  %175 = load i64*, i64** %174, align 8
  %176 = icmp eq i64* %173, %175
  br i1 %176, label %177, label %179

177:                                              ; preds = %171
  %178 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %165) #7
  br label %179

179:                                              ; preds = %177, %171
  %180 = phi i64* [ %178, %177 ], [ %173, %171 ]
  %181 = ptrtoint i64* %180 to i64
  %182 = add i64 %181, 8
  %183 = inttoptr i64 %182 to i64*
  store i64* %183, i64** %172, align 8
  store i64 %132, i64* %180, align 8
  br label %184

184:                                              ; preds = %179, %169
  %185 = phi i64* [ %170, %169 ], [ %180, %179 ]
  %186 = load i32, i32* %57, align 8
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %208, label %188

188:                                              ; preds = %184
  %189 = load i64*, i64** %59, align 8
  %190 = icmp eq i64* %189, null
  br i1 %190, label %191, label %194

191:                                              ; preds = %188
  %192 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %58, align 8
  %193 = call i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %192, i32 16, i8 zeroext 0, i32 0) #7
  store i64* %193, i64** %59, align 8
  br label %194

194:                                              ; preds = %191, %188
  %195 = phi i64* [ %193, %191 ], [ %189, %188 ]
  %196 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %58, align 8
  %197 = call i64* @_ZN2v88internal13ObjectHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %196, i64* %195, i64* %185) #7
  store i64* %197, i64** %59, align 8
  br label %208

198:                                              ; preds = %153
  %199 = load i64, i64* %41, align 8
  %200 = shl i32 %121, 2
  %201 = sext i32 %200 to i64
  %202 = add nsw i64 %201, 7
  %203 = add i64 %202, %199
  %204 = inttoptr i64 %203 to i32*
  %205 = trunc i64 %122 to i32
  %206 = shl i32 %205, 1
  store atomic volatile i32 %206, i32* %204 monotonic, align 4
  %207 = add nsw i32 %121, 1
  br label %208

208:                                              ; preds = %198, %194, %184, %161, %143, %136, %119
  %209 = phi i32 [ %121, %194 ], [ %121, %184 ], [ %121, %161 ], [ %207, %198 ], [ %121, %143 ], [ %121, %136 ], [ %121, %119 ]
  %210 = add i64 %122, 1
  %211 = icmp eq i64 %210, %52
  br i1 %211, label %272, label %212

212:                                              ; preds = %208
  %213 = load i64, i64* %28, align 8
  br label %119

214:                                              ; preds = %54, %270
  %215 = phi i64 [ %271, %270 ], [ %47, %54 ]
  %216 = phi i32 [ %267, %270 ], [ 0, %54 ]
  %217 = phi i64 [ %268, %270 ], [ 0, %54 ]
  %218 = and i64 %215, -4294967296
  %219 = mul i64 %217, 51539607552
  %220 = add i64 %219, 85899345920
  %221 = ashr exact i64 %220, 32
  %222 = add i64 %215, 7
  %223 = add i64 %221, %222
  %224 = inttoptr i64 %223 to i32*
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = zext i32 %225 to i64
  %227 = or i64 %218, %226
  %228 = load i64, i64* %55, align 8
  %229 = trunc i64 %228 to i32
  %230 = icmp eq i32 %225, %229
  br i1 %230, label %266, label %231

231:                                              ; preds = %214
  %232 = load i64, i64* %56, align 8
  %233 = trunc i64 %232 to i32
  %234 = icmp eq i32 %225, %233
  br i1 %234, label %266, label %235

235:                                              ; preds = %231
  %236 = and i64 %226, 1
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %248, label %238

238:                                              ; preds = %235
  %239 = add i64 %227, -1
  %240 = inttoptr i64 %239 to i32*
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = zext i32 %241 to i64
  %243 = or i64 %218, %242
  %244 = add i64 %243, 7
  %245 = inttoptr i64 %244 to i16*
  %246 = load atomic i16, i16* %245 monotonic, align 2
  %247 = icmp eq i16 %246, 64
  br i1 %247, label %266, label %248

248:                                              ; preds = %238, %235
  %249 = add i64 %219, 120259084288
  %250 = ashr exact i64 %249, 32
  %251 = add i64 %250, %222
  %252 = inttoptr i64 %251 to i32*
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 32
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %266

256:                                              ; preds = %248
  %257 = load i64, i64* %41, align 8
  %258 = shl i32 %216, 2
  %259 = sext i32 %258 to i64
  %260 = add nsw i64 %259, 7
  %261 = add i64 %260, %257
  %262 = inttoptr i64 %261 to i32*
  %263 = trunc i64 %217 to i32
  %264 = shl i32 %263, 1
  store atomic volatile i32 %264, i32* %262 monotonic, align 4
  %265 = add nsw i32 %216, 1
  br label %266

266:                                              ; preds = %256, %248, %238, %231, %214
  %267 = phi i32 [ %265, %256 ], [ %216, %238 ], [ %216, %231 ], [ %216, %214 ], [ %216, %248 ]
  %268 = add i64 %217, 1
  %269 = icmp eq i64 %268, %52
  br i1 %269, label %272, label %270

270:                                              ; preds = %266
  %271 = load i64, i64* %28, align 8
  br label %214

272:                                              ; preds = %113, %208, %266, %35
  %273 = phi i32 [ 0, %35 ], [ %267, %266 ], [ %209, %208 ], [ %114, %113 ]
  %274 = icmp eq i32 %46, %273
  br i1 %274, label %276, label %275, !prof !6

275:                                              ; preds = %272
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0)) #9
  unreachable

276:                                              ; preds = %102, %272
  %277 = load i64, i64* %41, align 8
  %278 = add i64 %277, 3
  %279 = inttoptr i64 %278 to i32*
  %280 = load i32, i32* %279, align 4
  %281 = ashr i32 %280, 1
  %282 = load i64, i64* %28, align 8
  %283 = add i64 %277, 7
  %284 = sext i32 %281 to i64
  %285 = shl nsw i64 %284, 2
  %286 = add i64 %285, %283
  %287 = bitcast %"struct.v8::internal::EnumIndexComparator.1214"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287) #7
  %288 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1214", %"struct.v8::internal::EnumIndexComparator.1214"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %282, i64* %288, align 8
  call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %283, i64 %286, %"struct.v8::internal::EnumIndexComparator.1214"* nonnull dereferenceable(8) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #7
  %289 = icmp sgt i32 %280, 1
  br i1 %289, label %290, label %339

290:                                              ; preds = %276
  %291 = and i64 %282, -4294967296
  %292 = add i64 %282, 7
  %293 = and i64 %277, -262144
  %294 = or i64 %293, 8
  %295 = inttoptr i64 %294 to i64*
  %296 = or i64 %293, 16
  %297 = inttoptr i64 %296 to %"class.v8::internal::Heap"**
  br label %298

298:                                              ; preds = %336, %290
  %299 = phi i64 [ 0, %290 ], [ %337, %336 ]
  %300 = trunc i64 %299 to i32
  %301 = shl i32 %300, 2
  %302 = sext i32 %301 to i64
  %303 = add i64 %283, %302
  %304 = inttoptr i64 %303 to i32*
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = ashr i32 %305, 1
  %307 = sext i32 %306 to i64
  %308 = mul i64 %307, 51539607552
  %309 = add i64 %308, 85899345920
  %310 = ashr exact i64 %309, 32
  %311 = add i64 %292, %310
  %312 = inttoptr i64 %311 to i32*
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = zext i32 %313 to i64
  %315 = or i64 %291, %314
  store atomic volatile i32 %313, i32* %304 monotonic, align 4
  %316 = and i64 %314, 1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %336, label %318

318:                                              ; preds = %298
  %319 = load i64, i64* %295, align 8
  %320 = and i64 %319, 262144
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %324, label %322

322:                                              ; preds = %318
  %323 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %297, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %323, i64 %277, i64 %303, i64 %315) #7
  br label %324

324:                                              ; preds = %322, %318
  %325 = and i64 %315, -262144
  %326 = or i64 %325, 8
  %327 = inttoptr i64 %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = and i64 %328, 24
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %336, label %331

331:                                              ; preds = %324
  %332 = load i64, i64* %295, align 8
  %333 = and i64 %332, 24
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %336

335:                                              ; preds = %331
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %277, i64 %303, i64 %315) #7
  br label %336

336:                                              ; preds = %335, %331, %324, %298
  %337 = add nuw nsw i64 %299, 1
  %338 = icmp slt i64 %337, %284
  br i1 %338, label %298, label %339

339:                                              ; preds = %336, %276, %33
  %340 = phi i64* [ %34, %33 ], [ %41, %276 ], [ %41, %336 ]
  ret i64* %340
}

declare i64* @_ZN2v88internal17JSModuleNamespace9GetExportEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::JSModuleNamespace"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internal12_GLOBAL__N_131CollectOwnPropertyNamesInternalILb0EEENS_4base8OptionalIiEENS0_6HandleINS0_8JSObjectEEEPNS0_14KeyAccumulatorENS6_INS0_15DescriptorArrayEEEii(%"class.v8::internal::KeyAccumulator"* nocapture, i64*, i32, i32) unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 6
  %8 = sext i32 %3 to i64
  %9 = icmp eq i32 %2, %3
  br i1 %9, label %188, label %10

10:                                               ; preds = %4
  %11 = sext i32 %2 to i64
  %12 = load i32, i32* %7, align 8
  %13 = and i32 %6, 7
  %14 = icmp eq i32 %12, 1
  %15 = and i32 %6, 32
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 5, i32 0, i32 0
  br label %19

19:                                               ; preds = %10, %184
  %20 = phi i32 [ -1, %10 ], [ %185, %184 ]
  %21 = phi i64 [ %11, %10 ], [ %186, %184 ]
  %22 = load i64, i64* %1, align 8
  %23 = mul i64 %21, 51539607552
  %24 = add i64 %23, 68719476736
  %25 = ashr exact i64 %24, 32
  %26 = or i64 %25, 3
  %27 = add i64 %22, %26
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = lshr i32 %29, 4
  %31 = and i32 %13, %30
  %32 = icmp eq i32 %31, 0
  %33 = or i1 %32, %14
  br i1 %33, label %34, label %184

34:                                               ; preds = %19
  br i1 %16, label %35, label %38

35:                                               ; preds = %34
  %36 = and i64 %22, -4294967296
  %37 = add i64 %22, %25
  br label %67

38:                                               ; preds = %34
  %39 = and i32 %29, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %184, label %41

41:                                               ; preds = %38
  %42 = and i64 %22, -4294967296
  %43 = add i64 %22, %25
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %42, %47
  %49 = and i64 %47, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %184, label %51

51:                                               ; preds = %41
  %52 = add i64 %48, -1
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %42, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = icmp eq i16 %59, 86
  br i1 %60, label %61, label %184

61:                                               ; preds = %51
  %62 = add i64 %48, 7
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %184, label %67

67:                                               ; preds = %35, %61
  %68 = phi i64 [ %37, %35 ], [ %43, %61 ]
  %69 = phi i64 [ %36, %35 ], [ %42, %61 ]
  %70 = add i64 %68, -1
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %69, %73
  %75 = add i64 %74, -1
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %69, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = icmp eq i16 %82, 64
  br i1 %83, label %88, label %84

84:                                               ; preds = %67
  %85 = icmp eq i32 %20, -1
  %86 = trunc i64 %21 to i32
  %87 = select i1 %85, i32 %86, i32 %20
  br label %184

88:                                               ; preds = %67
  %89 = load i32, i32* %5, align 4
  %90 = icmp eq i32 %89, 64
  %91 = and i64 %73, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %88
  %94 = load atomic i32, i32* %76 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %69, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load atomic i16, i16* %98 monotonic, align 2
  %100 = icmp eq i16 %99, 64
  br label %101

101:                                              ; preds = %93, %88
  %102 = phi i1 [ false, %88 ], [ %100, %93 ]
  br i1 %90, label %103, label %104

103:                                              ; preds = %101
  br i1 %102, label %117, label %184

104:                                              ; preds = %101
  br i1 %102, label %105, label %114

105:                                              ; preds = %104
  %106 = and i32 %89, 16
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %184

108:                                              ; preds = %105
  %109 = add i64 %74, 7
  %110 = inttoptr i64 %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %123, label %184

114:                                              ; preds = %104
  %115 = and i32 %89, 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %123, label %184

117:                                              ; preds = %103
  %118 = add i64 %74, 7
  %119 = inttoptr i64 %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, 16
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %184, label %123

123:                                              ; preds = %114, %108, %117
  br i1 %32, label %161, label %124

124:                                              ; preds = %123
  %125 = load i32, i32* %7, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %184, label %127

127:                                              ; preds = %124
  %128 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %128, i64 0, i32 31, i32 4
  %130 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %129, align 8
  %131 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %127
  %133 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %130, i64 %74) #7
  br label %147

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %128, i64 0, i32 31, i32 0
  %136 = load i64*, i64** %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %128, i64 0, i32 31, i32 1
  %138 = load i64*, i64** %137, align 8
  %139 = icmp eq i64* %136, %138
  br i1 %139, label %140, label %142

140:                                              ; preds = %134
  %141 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %128) #7
  br label %142

142:                                              ; preds = %140, %134
  %143 = phi i64* [ %141, %140 ], [ %136, %134 ]
  %144 = ptrtoint i64* %143 to i64
  %145 = add i64 %144, 8
  %146 = inttoptr i64 %145 to i64*
  store i64* %146, i64** %135, align 8
  store i64 %74, i64* %143, align 8
  br label %147

147:                                              ; preds = %142, %132
  %148 = phi i64* [ %133, %132 ], [ %143, %142 ]
  %149 = load i32, i32* %7, align 8
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %184, label %151

151:                                              ; preds = %147
  %152 = load i64*, i64** %18, align 8
  %153 = icmp eq i64* %152, null
  br i1 %153, label %154, label %157

154:                                              ; preds = %151
  %155 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %156 = tail call i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %155, i32 16, i8 zeroext 0, i32 0) #7
  store i64* %156, i64** %18, align 8
  br label %157

157:                                              ; preds = %154, %151
  %158 = phi i64* [ %156, %154 ], [ %152, %151 ]
  %159 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %160 = tail call i64* @_ZN2v88internal13ObjectHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %159, i64* %158, i64* %148) #7
  store i64* %160, i64** %18, align 8
  br label %184

161:                                              ; preds = %123
  %162 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %162, i64 0, i32 31, i32 4
  %164 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %163, align 8
  %165 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %164, null
  br i1 %165, label %168, label %166

166:                                              ; preds = %161
  %167 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %164, i64 %74) #7
  br label %181

168:                                              ; preds = %161
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %162, i64 0, i32 31, i32 0
  %170 = load i64*, i64** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %162, i64 0, i32 31, i32 1
  %172 = load i64*, i64** %171, align 8
  %173 = icmp eq i64* %170, %172
  br i1 %173, label %174, label %176

174:                                              ; preds = %168
  %175 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %162) #7
  br label %176

176:                                              ; preds = %174, %168
  %177 = phi i64* [ %175, %174 ], [ %170, %168 ]
  %178 = ptrtoint i64* %177 to i64
  %179 = add i64 %178, 8
  %180 = inttoptr i64 %179 to i64*
  store i64* %180, i64** %169, align 8
  store i64 %74, i64* %177, align 8
  br label %181

181:                                              ; preds = %166, %176
  %182 = phi i64* [ %167, %166 ], [ %177, %176 ]
  %183 = tail call zeroext i1 @_ZN2v88internal14KeyAccumulator6AddKeyENS0_6HandleINS0_6ObjectEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* %0, i64* %182, i32 0) #7
  br i1 %183, label %184, label %192

184:                                              ; preds = %19, %61, %38, %84, %114, %108, %105, %103, %41, %51, %117, %181, %124, %147, %157
  %185 = phi i32 [ %20, %157 ], [ %20, %147 ], [ %20, %124 ], [ %20, %181 ], [ %20, %117 ], [ %20, %38 ], [ %20, %51 ], [ %20, %61 ], [ %20, %41 ], [ %20, %103 ], [ %20, %105 ], [ %20, %108 ], [ %20, %114 ], [ %87, %84 ], [ %20, %19 ]
  %186 = add i64 %21, 1
  %187 = icmp eq i64 %186, %8
  br i1 %187, label %188, label %19

188:                                              ; preds = %184, %4
  %189 = phi i32 [ -1, %4 ], [ %185, %184 ]
  %190 = and i32 %189, -256
  %191 = and i32 %189, 255
  br label %192

192:                                              ; preds = %181, %188
  %193 = phi i64 [ 1, %188 ], [ 0, %181 ]
  %194 = phi i32 [ %191, %188 ], [ 0, %181 ]
  %195 = phi i32 [ %190, %188 ], [ 0, %181 ]
  %196 = or i32 %195, %194
  %197 = zext i32 %196 to i64
  %198 = shl nuw i64 %197, 32
  %199 = or i64 %198, %193
  ret i64 %199
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_125CollectKeysFromDictionaryINS0_16GlobalDictionaryEEENS0_15ExceptionStatusENS0_6HandleIT_EEPNS0_14KeyAccumulatorE(i64*, %"class.v8::internal::KeyAccumulator"* nocapture) unnamed_addr #0 {
  %3 = alloca %"struct.v8::internal::EnumIndexComparator", align 8
  %4 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = bitcast %"class.v8::internal::Isolate"* %5 to %"class.v8::internal::FactoryBase"*
  %7 = load i64, i64* %0, align 8
  %8 = add i64 %7, 7
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = ashr i32 %10, 1
  %12 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %6, i32 %11, i8 zeroext 0) #7
  %13 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %1, i64 0, i32 7
  %14 = load i32, i32* %13, align 4
  %15 = load i64, i64* %0, align 8
  %16 = add i64 %15, 15
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = ashr i32 %18, 1
  %20 = sext i32 %19 to i64
  %21 = icmp eq i32 %19, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 4
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 5
  %25 = icmp eq i32 %14, 64
  %26 = and i32 %14, 8
  %27 = icmp eq i32 %26, 0
  %28 = and i32 %14, 16
  %29 = icmp eq i32 %28, 0
  %30 = and i32 %14, 7
  %31 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %1, i64 0, i32 6
  %32 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %1, i64 0, i32 5, i32 0, i32 0
  %33 = and i32 %14, 32
  %34 = icmp eq i32 %33, 0
  br label %48

35:                                               ; preds = %193, %2
  %36 = phi i32 [ 0, %2 ], [ %194, %193 ]
  %37 = phi i64 [ %15, %2 ], [ %197, %193 ]
  %38 = load i64, i64* %12, align 8
  %39 = add i64 %38, 7
  %40 = sext i32 %36 to i64
  %41 = shl nsw i64 %40, 2
  %42 = add i64 %39, %41
  %43 = bitcast %"struct.v8::internal::EnumIndexComparator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %44, align 8
  call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %39, i64 %42, %"struct.v8::internal::EnumIndexComparator"* nonnull dereferenceable(8) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  %45 = icmp sgt i32 %36, 0
  br i1 %45, label %46, label %336

46:                                               ; preds = %35
  %47 = zext i32 %36 to i64
  br label %198

48:                                               ; preds = %22, %193
  %49 = phi i64 [ %15, %22 ], [ %197, %193 ]
  %50 = phi i32 [ 0, %22 ], [ %194, %193 ]
  %51 = phi i64 [ 0, %22 ], [ %195, %193 ]
  %52 = and i64 %49, -4294967296
  %53 = trunc i64 %51 to i32
  %54 = shl i32 %53, 2
  %55 = add i32 %54, 20
  %56 = sext i32 %55 to i64
  %57 = add i64 %49, 7
  %58 = add i64 %57, %56
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %52, %61
  %63 = load i64, i64* %23, align 8
  %64 = trunc i64 %63 to i32
  %65 = icmp eq i32 %60, %64
  br i1 %65, label %193, label %66

66:                                               ; preds = %48
  %67 = load i64, i64* %24, align 8
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %60, %68
  br i1 %69, label %193, label %70

70:                                               ; preds = %66
  %71 = add i64 %62, 3
  %72 = inttoptr i64 %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %52, %74
  %76 = and i64 %74, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %70
  %79 = add i64 %75, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %52, %82
  %84 = add i64 %83, 7
  %85 = inttoptr i64 %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = icmp eq i16 %86, 64
  br label %88

88:                                               ; preds = %78, %70
  %89 = phi i1 [ false, %70 ], [ %87, %78 ]
  br i1 %25, label %90, label %91

90:                                               ; preds = %88
  br i1 %89, label %100, label %193

91:                                               ; preds = %88
  br i1 %89, label %92, label %99

92:                                               ; preds = %91
  br i1 %29, label %93, label %193

93:                                               ; preds = %92
  %94 = add i64 %75, 7
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %106, label %193

99:                                               ; preds = %91
  br i1 %27, label %106, label %193

100:                                              ; preds = %90
  %101 = add i64 %75, 7
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, 16
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %193, label %106

106:                                              ; preds = %99, %93, %100
  %107 = load atomic i32, i32* %59 monotonic, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %52, %108
  %110 = add i64 %109, 7
  %111 = inttoptr i64 %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = lshr i32 %112, 4
  %114 = and i32 %30, %113
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %153, label %116

116:                                              ; preds = %106
  %117 = load i32, i32* %31, align 8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %193, label %119

119:                                              ; preds = %116
  %120 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %120, i64 0, i32 31, i32 4
  %122 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %121, align 8
  %123 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %119
  %125 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %122, i64 %75) #7
  br label %139

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %120, i64 0, i32 31, i32 0
  %128 = load i64*, i64** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %120, i64 0, i32 31, i32 1
  %130 = load i64*, i64** %129, align 8
  %131 = icmp eq i64* %128, %130
  br i1 %131, label %132, label %134

132:                                              ; preds = %126
  %133 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %120) #7
  br label %134

134:                                              ; preds = %132, %126
  %135 = phi i64* [ %133, %132 ], [ %128, %126 ]
  %136 = ptrtoint i64* %135 to i64
  %137 = add i64 %136, 8
  %138 = inttoptr i64 %137 to i64*
  store i64* %138, i64** %127, align 8
  store i64 %75, i64* %135, align 8
  br label %139

139:                                              ; preds = %134, %124
  %140 = phi i64* [ %125, %124 ], [ %135, %134 ]
  %141 = load i32, i32* %31, align 8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %193, label %143

143:                                              ; preds = %139
  %144 = load i64*, i64** %32, align 8
  %145 = icmp eq i64* %144, null
  br i1 %145, label %146, label %149

146:                                              ; preds = %143
  %147 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %148 = tail call i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %147, i32 16, i8 zeroext 0, i32 0) #7
  store i64* %148, i64** %32, align 8
  br label %149

149:                                              ; preds = %146, %143
  %150 = phi i64* [ %148, %146 ], [ %144, %143 ]
  %151 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %152 = tail call i64* @_ZN2v88internal13ObjectHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %151, i64* %150, i64* %140) #7
  store i64* %152, i64** %32, align 8
  br label %193

153:                                              ; preds = %106
  br i1 %34, label %184, label %154

154:                                              ; preds = %153
  %155 = and i32 %112, 2
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %193, label %157

157:                                              ; preds = %154
  %158 = load atomic i32, i32* %59 monotonic, align 4
  %159 = zext i32 %158 to i64
  %160 = or i64 %52, %159
  %161 = add i64 %160, 11
  %162 = inttoptr i64 %161 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i64
  %165 = or i64 %52, %164
  %166 = and i64 %164, 1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %193, label %168

168:                                              ; preds = %157
  %169 = add i64 %165, -1
  %170 = inttoptr i64 %169 to i32*
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = zext i32 %171 to i64
  %173 = or i64 %52, %172
  %174 = add i64 %173, 7
  %175 = inttoptr i64 %174 to i16*
  %176 = load atomic i16, i16* %175 monotonic, align 2
  %177 = icmp eq i16 %176, 86
  br i1 %177, label %178, label %193

178:                                              ; preds = %168
  %179 = add i64 %165, 7
  %180 = inttoptr i64 %179 to i32*
  %181 = load i32, i32* %180, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %193, label %184

184:                                              ; preds = %178, %153
  %185 = load i64, i64* %12, align 8
  %186 = add nsw i32 %50, 1
  %187 = shl i32 %50, 2
  %188 = sext i32 %187 to i64
  %189 = add nsw i64 %188, 7
  %190 = add i64 %189, %185
  %191 = inttoptr i64 %190 to i32*
  %192 = shl i32 %53, 1
  store atomic volatile i32 %192, i32* %191 monotonic, align 4
  br label %193

193:                                              ; preds = %178, %154, %157, %168, %99, %93, %92, %90, %48, %66, %184, %116, %139, %149, %100
  %194 = phi i32 [ %50, %100 ], [ %186, %184 ], [ %50, %154 ], [ %50, %116 ], [ %50, %139 ], [ %50, %149 ], [ %50, %66 ], [ %50, %48 ], [ %50, %90 ], [ %50, %92 ], [ %50, %93 ], [ %50, %99 ], [ %50, %168 ], [ %50, %178 ], [ %50, %157 ]
  %195 = add i64 %51, 1
  %196 = icmp eq i64 %195, %20
  %197 = load i64, i64* %0, align 8
  br i1 %196, label %35, label %48

198:                                              ; preds = %261, %46
  %199 = phi i64 [ 0, %46 ], [ %263, %261 ]
  %200 = phi i8 [ 0, %46 ], [ %262, %261 ]
  %201 = load i64, i64* %12, align 8
  %202 = trunc i64 %199 to i32
  %203 = shl i32 %202, 2
  %204 = sext i32 %203 to i64
  %205 = add nsw i64 %204, 7
  %206 = add i64 %205, %201
  %207 = inttoptr i64 %206 to i32*
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = lshr i32 %208, 1
  %210 = load i64, i64* %0, align 8
  %211 = and i64 %210, -4294967296
  %212 = shl i32 %209, 2
  %213 = add i32 %212, 20
  %214 = sext i32 %213 to i64
  %215 = add i64 %210, 7
  %216 = add i64 %215, %214
  %217 = inttoptr i64 %216 to i32*
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = zext i32 %218 to i64
  %220 = or i64 %211, %219
  %221 = add i64 %220, 3
  %222 = inttoptr i64 %221 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = zext i32 %223 to i64
  %225 = or i64 %211, %224
  %226 = and i64 %224, 1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %238, label %228

228:                                              ; preds = %198
  %229 = add i64 %225, -1
  %230 = inttoptr i64 %229 to i32*
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = zext i32 %231 to i64
  %233 = or i64 %211, %232
  %234 = add i64 %233, 7
  %235 = inttoptr i64 %234 to i16*
  %236 = load atomic i16, i16* %235 monotonic, align 2
  %237 = icmp eq i16 %236, 64
  br i1 %237, label %261, label %238

238:                                              ; preds = %198, %228
  %239 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %240 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %239, i64 0, i32 31, i32 4
  %241 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %240, align 8
  %242 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %241, null
  br i1 %242, label %245, label %243

243:                                              ; preds = %238
  %244 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %241, i64 %225) #7
  br label %258

245:                                              ; preds = %238
  %246 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %239, i64 0, i32 31, i32 0
  %247 = load i64*, i64** %246, align 8
  %248 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %239, i64 0, i32 31, i32 1
  %249 = load i64*, i64** %248, align 8
  %250 = icmp eq i64* %247, %249
  br i1 %250, label %251, label %253

251:                                              ; preds = %245
  %252 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %239) #7
  br label %253

253:                                              ; preds = %251, %245
  %254 = phi i64* [ %252, %251 ], [ %247, %245 ]
  %255 = ptrtoint i64* %254 to i64
  %256 = add i64 %255, 8
  %257 = inttoptr i64 %256 to i64*
  store i64* %257, i64** %246, align 8
  store i64 %225, i64* %254, align 8
  br label %258

258:                                              ; preds = %243, %253
  %259 = phi i64* [ %244, %243 ], [ %254, %253 ]
  %260 = call zeroext i1 @_ZN2v88internal14KeyAccumulator6AddKeyENS0_6HandleINS0_6ObjectEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* %1, i64* %259, i32 0) #7
  br i1 %260, label %261, label %336

261:                                              ; preds = %258, %228
  %262 = phi i8 [ 1, %228 ], [ %200, %258 ]
  %263 = add nuw nsw i64 %199, 1
  %264 = icmp eq i64 %263, %47
  br i1 %264, label %265, label %198

265:                                              ; preds = %261
  %266 = and i8 %262, 1
  %267 = icmp ne i8 %266, 0
  %268 = and i1 %267, %45
  br i1 %268, label %269, label %336

269:                                              ; preds = %265
  %270 = zext i32 %36 to i64
  br label %271

271:                                              ; preds = %333, %269
  %272 = phi i64 [ 0, %269 ], [ %334, %333 ]
  %273 = load i64, i64* %12, align 8
  %274 = trunc i64 %272 to i32
  %275 = shl i32 %274, 2
  %276 = sext i32 %275 to i64
  %277 = add nsw i64 %276, 7
  %278 = add i64 %277, %273
  %279 = inttoptr i64 %278 to i32*
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = lshr i32 %280, 1
  %282 = load i64, i64* %0, align 8
  %283 = and i64 %282, -4294967296
  %284 = shl i32 %281, 2
  %285 = add i32 %284, 20
  %286 = sext i32 %285 to i64
  %287 = add i64 %282, 7
  %288 = add i64 %287, %286
  %289 = inttoptr i64 %288 to i32*
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = zext i32 %290 to i64
  %292 = or i64 %283, %291
  %293 = add i64 %292, 3
  %294 = inttoptr i64 %293 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = zext i32 %295 to i64
  %297 = or i64 %283, %296
  %298 = and i64 %296, 1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %333, label %300

300:                                              ; preds = %271
  %301 = add i64 %297, -1
  %302 = inttoptr i64 %301 to i32*
  %303 = load atomic i32, i32* %302 monotonic, align 4
  %304 = zext i32 %303 to i64
  %305 = or i64 %283, %304
  %306 = add i64 %305, 7
  %307 = inttoptr i64 %306 to i16*
  %308 = load atomic i16, i16* %307 monotonic, align 2
  %309 = icmp eq i16 %308, 64
  br i1 %309, label %310, label %333

310:                                              ; preds = %300
  %311 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %312 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %311, i64 0, i32 31, i32 4
  %313 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %312, align 8
  %314 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %313, null
  br i1 %314, label %317, label %315

315:                                              ; preds = %310
  %316 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %313, i64 %297) #7
  br label %330

317:                                              ; preds = %310
  %318 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %311, i64 0, i32 31, i32 0
  %319 = load i64*, i64** %318, align 8
  %320 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %311, i64 0, i32 31, i32 1
  %321 = load i64*, i64** %320, align 8
  %322 = icmp eq i64* %319, %321
  br i1 %322, label %323, label %325

323:                                              ; preds = %317
  %324 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %311) #7
  br label %325

325:                                              ; preds = %323, %317
  %326 = phi i64* [ %324, %323 ], [ %319, %317 ]
  %327 = ptrtoint i64* %326 to i64
  %328 = add i64 %327, 8
  %329 = inttoptr i64 %328 to i64*
  store i64* %329, i64** %318, align 8
  store i64 %297, i64* %326, align 8
  br label %330

330:                                              ; preds = %315, %325
  %331 = phi i64* [ %316, %315 ], [ %326, %325 ]
  %332 = call zeroext i1 @_ZN2v88internal14KeyAccumulator6AddKeyENS0_6HandleINS0_6ObjectEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* %1, i64* %331, i32 0) #7
  br i1 %332, label %333, label %336

333:                                              ; preds = %330, %271, %300
  %334 = add nuw nsw i64 %272, 1
  %335 = icmp eq i64 %334, %270
  br i1 %335, label %336, label %271

336:                                              ; preds = %258, %330, %333, %35, %265
  %337 = phi i1 [ true, %265 ], [ true, %35 ], [ true, %333 ], [ false, %330 ], [ false, %258 ]
  ret i1 %337
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_125CollectKeysFromDictionaryINS0_14NameDictionaryEEENS0_15ExceptionStatusENS0_6HandleIT_EEPNS0_14KeyAccumulatorE(i64*, %"class.v8::internal::KeyAccumulator"* nocapture) unnamed_addr #0 {
  %3 = alloca %"struct.v8::internal::EnumIndexComparator.1214", align 8
  %4 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = bitcast %"class.v8::internal::Isolate"* %5 to %"class.v8::internal::FactoryBase"*
  %7 = load i64, i64* %0, align 8
  %8 = add i64 %7, 7
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = ashr i32 %10, 1
  %12 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %6, i32 %11, i8 zeroext 0) #7
  %13 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %1, i64 0, i32 7
  %14 = load i32, i32* %13, align 4
  %15 = load i64, i64* %0, align 8
  %16 = add i64 %15, 15
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = ashr i32 %18, 1
  %20 = sext i32 %19 to i64
  %21 = icmp eq i32 %19, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 4
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 5
  %25 = icmp eq i32 %14, 64
  %26 = and i32 %14, 8
  %27 = icmp eq i32 %26, 0
  %28 = and i32 %14, 16
  %29 = icmp eq i32 %28, 0
  %30 = and i32 %14, 7
  %31 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %1, i64 0, i32 6
  %32 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %1, i64 0, i32 5, i32 0, i32 0
  %33 = and i32 %14, 32
  %34 = icmp eq i32 %33, 0
  br label %48

35:                                               ; preds = %186, %2
  %36 = phi i32 [ 0, %2 ], [ %187, %186 ]
  %37 = phi i64 [ %15, %2 ], [ %190, %186 ]
  %38 = load i64, i64* %12, align 8
  %39 = add i64 %38, 7
  %40 = sext i32 %36 to i64
  %41 = shl nsw i64 %40, 2
  %42 = add i64 %39, %41
  %43 = bitcast %"struct.v8::internal::EnumIndexComparator.1214"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1214", %"struct.v8::internal::EnumIndexComparator.1214"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %44, align 8
  call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %39, i64 %42, %"struct.v8::internal::EnumIndexComparator.1214"* nonnull dereferenceable(8) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  %45 = icmp sgt i32 %36, 0
  br i1 %45, label %46, label %321

46:                                               ; preds = %35
  %47 = zext i32 %36 to i64
  br label %191

48:                                               ; preds = %22, %186
  %49 = phi i64 [ %15, %22 ], [ %190, %186 ]
  %50 = phi i32 [ 0, %22 ], [ %187, %186 ]
  %51 = phi i64 [ 0, %22 ], [ %188, %186 ]
  %52 = and i64 %49, -4294967296
  %53 = mul i64 %51, 51539607552
  %54 = add i64 %53, 85899345920
  %55 = ashr exact i64 %54, 32
  %56 = add i64 %49, 7
  %57 = add i64 %56, %55
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %52, %60
  %62 = load i64, i64* %23, align 8
  %63 = trunc i64 %62 to i32
  %64 = icmp eq i32 %59, %63
  br i1 %64, label %186, label %65

65:                                               ; preds = %48
  %66 = load i64, i64* %24, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %59, %67
  br i1 %68, label %186, label %69

69:                                               ; preds = %65
  %70 = and i64 %60, 1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %69
  %73 = add i64 %61, -1
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %52, %76
  %78 = add i64 %77, 7
  %79 = inttoptr i64 %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = icmp eq i16 %80, 64
  br label %82

82:                                               ; preds = %72, %69
  %83 = phi i1 [ false, %69 ], [ %81, %72 ]
  br i1 %25, label %84, label %85

84:                                               ; preds = %82
  br i1 %83, label %94, label %186

85:                                               ; preds = %82
  br i1 %83, label %86, label %93

86:                                               ; preds = %85
  br i1 %29, label %87, label %186

87:                                               ; preds = %86
  %88 = add i64 %61, 7
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %100, label %186

93:                                               ; preds = %85
  br i1 %27, label %100, label %186

94:                                               ; preds = %84
  %95 = add i64 %61, 7
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = and i32 %97, 16
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %186, label %100

100:                                              ; preds = %93, %87, %94
  %101 = add i64 %53, 120259084288
  %102 = ashr exact i64 %101, 32
  %103 = add i64 %56, %102
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = lshr i32 %105, 4
  %107 = and i32 %30, %106
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %146, label %109

109:                                              ; preds = %100
  %110 = load i32, i32* %31, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %186, label %112

112:                                              ; preds = %109
  %113 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %113, i64 0, i32 31, i32 4
  %115 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %114, align 8
  %116 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %112
  %118 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %115, i64 %61) #7
  br label %132

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %113, i64 0, i32 31, i32 0
  %121 = load i64*, i64** %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %113, i64 0, i32 31, i32 1
  %123 = load i64*, i64** %122, align 8
  %124 = icmp eq i64* %121, %123
  br i1 %124, label %125, label %127

125:                                              ; preds = %119
  %126 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %113) #7
  br label %127

127:                                              ; preds = %125, %119
  %128 = phi i64* [ %126, %125 ], [ %121, %119 ]
  %129 = ptrtoint i64* %128 to i64
  %130 = add i64 %129, 8
  %131 = inttoptr i64 %130 to i64*
  store i64* %131, i64** %120, align 8
  store i64 %61, i64* %128, align 8
  br label %132

132:                                              ; preds = %127, %117
  %133 = phi i64* [ %118, %117 ], [ %128, %127 ]
  %134 = load i32, i32* %31, align 8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %186, label %136

136:                                              ; preds = %132
  %137 = load i64*, i64** %32, align 8
  %138 = icmp eq i64* %137, null
  br i1 %138, label %139, label %142

139:                                              ; preds = %136
  %140 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %141 = tail call i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"* %140, i32 16, i8 zeroext 0, i32 0) #7
  store i64* %141, i64** %32, align 8
  br label %142

142:                                              ; preds = %139, %136
  %143 = phi i64* [ %141, %139 ], [ %137, %136 ]
  %144 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %145 = tail call i64* @_ZN2v88internal13ObjectHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %144, i64* %143, i64* %133) #7
  store i64* %145, i64** %32, align 8
  br label %186

146:                                              ; preds = %100
  br i1 %34, label %176, label %147

147:                                              ; preds = %146
  %148 = and i32 %105, 2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %186, label %150

150:                                              ; preds = %147
  %151 = add i64 %53, 103079215104
  %152 = ashr exact i64 %151, 32
  %153 = add i64 %56, %152
  %154 = inttoptr i64 %153 to i32*
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = zext i32 %155 to i64
  %157 = or i64 %52, %156
  %158 = and i64 %156, 1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %186, label %160

160:                                              ; preds = %150
  %161 = add i64 %157, -1
  %162 = inttoptr i64 %161 to i32*
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = zext i32 %163 to i64
  %165 = or i64 %52, %164
  %166 = add i64 %165, 7
  %167 = inttoptr i64 %166 to i16*
  %168 = load atomic i16, i16* %167 monotonic, align 2
  %169 = icmp eq i16 %168, 86
  br i1 %169, label %170, label %186

170:                                              ; preds = %160
  %171 = add i64 %157, 7
  %172 = inttoptr i64 %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %186, label %176

176:                                              ; preds = %170, %146
  %177 = load i64, i64* %12, align 8
  %178 = add nsw i32 %50, 1
  %179 = shl i32 %50, 2
  %180 = sext i32 %179 to i64
  %181 = add nsw i64 %180, 7
  %182 = add i64 %181, %177
  %183 = inttoptr i64 %182 to i32*
  %184 = trunc i64 %51 to i32
  %185 = shl i32 %184, 1
  store atomic volatile i32 %185, i32* %183 monotonic, align 4
  br label %186

186:                                              ; preds = %170, %147, %150, %160, %93, %87, %86, %84, %48, %65, %176, %109, %132, %142, %94
  %187 = phi i32 [ %50, %94 ], [ %178, %176 ], [ %50, %147 ], [ %50, %109 ], [ %50, %132 ], [ %50, %142 ], [ %50, %65 ], [ %50, %48 ], [ %50, %84 ], [ %50, %86 ], [ %50, %87 ], [ %50, %93 ], [ %50, %160 ], [ %50, %170 ], [ %50, %150 ]
  %188 = add i64 %51, 1
  %189 = icmp eq i64 %188, %20
  %190 = load i64, i64* %0, align 8
  br i1 %189, label %35, label %48

191:                                              ; preds = %250, %46
  %192 = phi i64 [ 0, %46 ], [ %252, %250 ]
  %193 = phi i8 [ 0, %46 ], [ %251, %250 ]
  %194 = load i64, i64* %12, align 8
  %195 = trunc i64 %192 to i32
  %196 = shl i32 %195, 2
  %197 = sext i32 %196 to i64
  %198 = add nsw i64 %197, 7
  %199 = add i64 %198, %194
  %200 = inttoptr i64 %199 to i32*
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = ashr i32 %201, 1
  %203 = sext i32 %202 to i64
  %204 = load i64, i64* %0, align 8
  %205 = and i64 %204, -4294967296
  %206 = mul i64 %203, 51539607552
  %207 = add i64 %206, 85899345920
  %208 = ashr exact i64 %207, 32
  %209 = add i64 %204, 7
  %210 = add i64 %209, %208
  %211 = inttoptr i64 %210 to i32*
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = zext i32 %212 to i64
  %214 = or i64 %205, %213
  %215 = and i64 %213, 1
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %191
  %218 = add i64 %214, -1
  %219 = inttoptr i64 %218 to i32*
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = zext i32 %220 to i64
  %222 = or i64 %205, %221
  %223 = add i64 %222, 7
  %224 = inttoptr i64 %223 to i16*
  %225 = load atomic i16, i16* %224 monotonic, align 2
  %226 = icmp eq i16 %225, 64
  br i1 %226, label %250, label %227

227:                                              ; preds = %191, %217
  %228 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %228, i64 0, i32 31, i32 4
  %230 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %229, align 8
  %231 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %230, null
  br i1 %231, label %234, label %232

232:                                              ; preds = %227
  %233 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %230, i64 %214) #7
  br label %247

234:                                              ; preds = %227
  %235 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %228, i64 0, i32 31, i32 0
  %236 = load i64*, i64** %235, align 8
  %237 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %228, i64 0, i32 31, i32 1
  %238 = load i64*, i64** %237, align 8
  %239 = icmp eq i64* %236, %238
  br i1 %239, label %240, label %242

240:                                              ; preds = %234
  %241 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %228) #7
  br label %242

242:                                              ; preds = %240, %234
  %243 = phi i64* [ %241, %240 ], [ %236, %234 ]
  %244 = ptrtoint i64* %243 to i64
  %245 = add i64 %244, 8
  %246 = inttoptr i64 %245 to i64*
  store i64* %246, i64** %235, align 8
  store i64 %214, i64* %243, align 8
  br label %247

247:                                              ; preds = %232, %242
  %248 = phi i64* [ %233, %232 ], [ %243, %242 ]
  %249 = call zeroext i1 @_ZN2v88internal14KeyAccumulator6AddKeyENS0_6HandleINS0_6ObjectEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* %1, i64* %248, i32 0) #7
  br i1 %249, label %250, label %321

250:                                              ; preds = %247, %217
  %251 = phi i8 [ 1, %217 ], [ %193, %247 ]
  %252 = add nuw nsw i64 %192, 1
  %253 = icmp eq i64 %252, %47
  br i1 %253, label %254, label %191

254:                                              ; preds = %250
  %255 = and i8 %251, 1
  %256 = icmp ne i8 %255, 0
  %257 = and i1 %256, %45
  br i1 %257, label %258, label %321

258:                                              ; preds = %254
  %259 = zext i32 %36 to i64
  br label %260

260:                                              ; preds = %318, %258
  %261 = phi i64 [ 0, %258 ], [ %319, %318 ]
  %262 = load i64, i64* %12, align 8
  %263 = trunc i64 %261 to i32
  %264 = shl i32 %263, 2
  %265 = sext i32 %264 to i64
  %266 = add nsw i64 %265, 7
  %267 = add i64 %266, %262
  %268 = inttoptr i64 %267 to i32*
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = ashr i32 %269, 1
  %271 = sext i32 %270 to i64
  %272 = load i64, i64* %0, align 8
  %273 = and i64 %272, -4294967296
  %274 = mul i64 %271, 51539607552
  %275 = add i64 %274, 85899345920
  %276 = ashr exact i64 %275, 32
  %277 = add i64 %272, 7
  %278 = add i64 %277, %276
  %279 = inttoptr i64 %278 to i32*
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = zext i32 %280 to i64
  %282 = or i64 %273, %281
  %283 = and i64 %281, 1
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %318, label %285

285:                                              ; preds = %260
  %286 = add i64 %282, -1
  %287 = inttoptr i64 %286 to i32*
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = zext i32 %288 to i64
  %290 = or i64 %273, %289
  %291 = add i64 %290, 7
  %292 = inttoptr i64 %291 to i16*
  %293 = load atomic i16, i16* %292 monotonic, align 2
  %294 = icmp eq i16 %293, 64
  br i1 %294, label %295, label %318

295:                                              ; preds = %285
  %296 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %297 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %296, i64 0, i32 31, i32 4
  %298 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %297, align 8
  %299 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %298, null
  br i1 %299, label %302, label %300

300:                                              ; preds = %295
  %301 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %298, i64 %282) #7
  br label %315

302:                                              ; preds = %295
  %303 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %296, i64 0, i32 31, i32 0
  %304 = load i64*, i64** %303, align 8
  %305 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %296, i64 0, i32 31, i32 1
  %306 = load i64*, i64** %305, align 8
  %307 = icmp eq i64* %304, %306
  br i1 %307, label %308, label %310

308:                                              ; preds = %302
  %309 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %296) #7
  br label %310

310:                                              ; preds = %308, %302
  %311 = phi i64* [ %309, %308 ], [ %304, %302 ]
  %312 = ptrtoint i64* %311 to i64
  %313 = add i64 %312, 8
  %314 = inttoptr i64 %313 to i64*
  store i64* %314, i64** %303, align 8
  store i64 %282, i64* %311, align 8
  br label %315

315:                                              ; preds = %300, %310
  %316 = phi i64* [ %301, %300 ], [ %311, %310 ]
  %317 = call zeroext i1 @_ZN2v88internal14KeyAccumulator6AddKeyENS0_6HandleINS0_6ObjectEEENS0_16AddKeyConversionE(%"class.v8::internal::KeyAccumulator"* %1, i64* %316, i32 0) #7
  br i1 %317, label %318, label %321

318:                                              ; preds = %315, %260, %285
  %319 = add nuw nsw i64 %261, 1
  %320 = icmp eq i64 %319, %259
  br i1 %320, label %321, label %260

321:                                              ; preds = %247, %315, %318, %35, %254
  %322 = phi i1 [ true, %254 ], [ true, %35 ], [ true, %318 ], [ false, %315 ], [ false, %247 ]
  ret i1 %322
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14KeyAccumulator19CollectPrivateNamesENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::KeyAccumulator"* nocapture, i64* nocapture readnone, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %2, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 11
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2097152
  %15 = icmp eq i32 %14, 0
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  br i1 %15, label %19, label %64

19:                                               ; preds = %3
  %20 = add i64 %18, 11
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 acquire, align 4
  %23 = lshr i32 %22, 10
  %24 = and i32 %23, 1023
  %25 = load i64, i64* %2, align 8
  %26 = and i64 %25, -4294967296
  %27 = add i64 %25, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %26, %30
  %32 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %33 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 0, i32 4
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %31, 23
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = and i64 %35, 4294967295
  %40 = icmp eq i64 %39, 0
  tail call void @llvm.assume(i1 %40) #7
  %41 = zext i32 %38 to i64
  %42 = or i64 %35, %41
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 31, i32 4
  %44 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %43, align 8
  %45 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %19
  %47 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %44, i64 %42) #7
  br label %61

48:                                               ; preds = %19
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 31, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 31, i32 1
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %50, %52
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %33) #7
  br label %56

56:                                               ; preds = %54, %48
  %57 = phi i64* [ %55, %54 ], [ %50, %48 ]
  %58 = ptrtoint i64* %57 to i64
  %59 = add i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  store i64* %60, i64** %49, align 8
  store i64 %42, i64* %57, align 8
  br label %61

61:                                               ; preds = %46, %56
  %62 = phi i64* [ %47, %46 ], [ %57, %56 ]
  %63 = tail call fastcc i64 @_ZN2v88internal12_GLOBAL__N_131CollectOwnPropertyNamesInternalILb0EEENS_4base8OptionalIiEENS0_6HandleINS0_8JSObjectEEEPNS0_14KeyAccumulatorENS6_INS0_15DescriptorArrayEEEii(%"class.v8::internal::KeyAccumulator"* %0, i64* %62, i32 0, i32 %24)
  br label %150

64:                                               ; preds = %3
  %65 = add i64 %18, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = icmp eq i16 %67, 189
  %69 = add i64 %4, 3
  %70 = inttoptr i64 %69 to i32*
  br i1 %68, label %71, label %98

71:                                               ; preds = %64
  %72 = load atomic i32, i32* %70 acquire, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %5, %73
  %75 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %76 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %76, i64 0, i32 31, i32 4
  %78 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %77, align 8
  %79 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %71
  %81 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %78, i64 %74) #7
  br label %95

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %76, i64 0, i32 31, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %76, i64 0, i32 31, i32 1
  %86 = load i64*, i64** %85, align 8
  %87 = icmp eq i64* %84, %86
  br i1 %87, label %88, label %90

88:                                               ; preds = %82
  %89 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %76) #7
  br label %90

90:                                               ; preds = %88, %82
  %91 = phi i64* [ %89, %88 ], [ %84, %82 ]
  %92 = ptrtoint i64* %91 to i64
  %93 = add i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  store i64* %94, i64** %83, align 8
  store i64 %74, i64* %91, align 8
  br label %95

95:                                               ; preds = %80, %90
  %96 = phi i64* [ %81, %80 ], [ %91, %90 ]
  %97 = tail call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_125CollectKeysFromDictionaryINS0_16GlobalDictionaryEEENS0_15ExceptionStatusENS0_6HandleIT_EEPNS0_14KeyAccumulatorE(i64* %96, %"class.v8::internal::KeyAccumulator"* %0)
  br i1 %97, label %150, label %151

98:                                               ; preds = %64
  %99 = load i32, i32* %70, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %5, %100
  %102 = and i64 %100, 1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %125

104:                                              ; preds = %98
  %105 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %106 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %105, i64 0, i32 0, i32 1
  %109 = load i8, i8* %108, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %105, i64 0, i32 1, i64 0
  br label %121

113:                                              ; preds = %107, %104
  %114 = and i64 %4, -262144
  %115 = or i64 %114, 16
  %116 = inttoptr i64 %115 to i64*
  %117 = load i64, i64* %116, align 16
  %118 = add i64 %117, -41416
  %119 = inttoptr i64 %118 to %"class.v8::internal::Isolate"*
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %119, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %121

121:                                              ; preds = %113, %111
  %122 = phi i64* [ %120, %113 ], [ %112, %111 ]
  %123 = getelementptr inbounds i64, i64* %122, i64 115
  %124 = load i64, i64* %123, align 8
  br label %125

125:                                              ; preds = %98, %121
  %126 = phi i64 [ %124, %121 ], [ %101, %98 ]
  %127 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %128 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %128, i64 0, i32 31, i32 4
  %130 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %129, align 8
  %131 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %125
  %133 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %130, i64 %126) #7
  br label %147

134:                                              ; preds = %125
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %128, i64 0, i32 31, i32 0
  %136 = load i64*, i64** %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %128, i64 0, i32 31, i32 1
  %138 = load i64*, i64** %137, align 8
  %139 = icmp eq i64* %136, %138
  br i1 %139, label %140, label %142

140:                                              ; preds = %134
  %141 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %128) #7
  br label %142

142:                                              ; preds = %140, %134
  %143 = phi i64* [ %141, %140 ], [ %136, %134 ]
  %144 = ptrtoint i64* %143 to i64
  %145 = add i64 %144, 8
  %146 = inttoptr i64 %145 to i64*
  store i64* %146, i64** %135, align 8
  store i64 %126, i64* %143, align 8
  br label %147

147:                                              ; preds = %132, %142
  %148 = phi i64* [ %133, %132 ], [ %143, %142 ]
  %149 = tail call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_125CollectKeysFromDictionaryINS0_14NameDictionaryEEENS0_15ExceptionStatusENS0_6HandleIT_EEPNS0_14KeyAccumulatorE(i64* %148, %"class.v8::internal::KeyAccumulator"* %0)
  br i1 %149, label %150, label %151

150:                                              ; preds = %95, %147, %61
  br label %151

151:                                              ; preds = %147, %95, %150
  %152 = phi i1 [ true, %150 ], [ false, %95 ], [ false, %147 ]
  ret i1 %152
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal14KeyAccumulator33CollectAccessCheckInterceptorKeysENS0_6HandleINS0_15AccessCheckInfoEEENS2_INS0_10JSReceiverEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::KeyAccumulator"*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %41

8:                                                ; preds = %4
  %9 = load i64, i64* %1, align 8
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, 11
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 4
  %19 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %20 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %8
  %22 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %19, i64 %15) #7
  br label %36

23:                                               ; preds = %8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %17) #7
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %15, i64* %32, align 8
  br label %36

36:                                               ; preds = %21, %31
  %37 = phi i64* [ %22, %21 ], [ %32, %31 ]
  %38 = tail call i16 @_ZN2v88internal14KeyAccumulator30CollectInterceptorKeysInternalENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEENS2_INS0_15InterceptorInfoEEENS1_14IndexedOrNamedE(%"class.v8::internal::KeyAccumulator"* %0, i64* %2, i64* %3, i64* %37, i32 0)
  %39 = trunc i16 %38 to i8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %75, label %41

41:                                               ; preds = %4, %36
  %42 = load i64, i64* %1, align 8
  %43 = and i64 %42, -4294967296
  %44 = add i64 %42, 7
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %43, %47
  %49 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 0
  %50 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %50, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %41
  %55 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %48) #7
  br label %69

56:                                               ; preds = %41
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %50, i64 0, i32 31, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %50, i64 0, i32 31, i32 1
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %58, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %56
  %63 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %50) #7
  br label %64

64:                                               ; preds = %62, %56
  %65 = phi i64* [ %63, %62 ], [ %58, %56 ]
  %66 = ptrtoint i64* %65 to i64
  %67 = add i64 %66, 8
  %68 = inttoptr i64 %67 to i64*
  store i64* %68, i64** %57, align 8
  store i64 %48, i64* %65, align 8
  br label %69

69:                                               ; preds = %54, %64
  %70 = phi i64* [ %55, %54 ], [ %65, %64 ]
  %71 = tail call i16 @_ZN2v88internal14KeyAccumulator30CollectInterceptorKeysInternalENS0_6HandleINS0_10JSReceiverEEENS2_INS0_8JSObjectEEENS2_INS0_15InterceptorInfoEEENS1_14IndexedOrNamedE(%"class.v8::internal::KeyAccumulator"* %0, i64* %2, i64* %3, i64* %70, i32 1)
  %72 = trunc i16 %71 to i8
  %73 = icmp eq i8 %72, 0
  %74 = select i1 %73, i16 0, i16 257
  ret i16 %74

75:                                               ; preds = %36
  ret i16 0
}

declare i64 @_ZN2v88internal15AccessCheckInfo3GetEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object9GetMethodENS0_6HandleINS0_10JSReceiverEEENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal14KeyAccumulator27CollectOwnJSProxyTargetKeysENS0_6HandleINS0_7JSProxyEEENS2_INS0_10JSReceiverEEE(%"class.v8::internal::KeyAccumulator"* nocapture, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::KeyAccumulator", align 8
  %5 = alloca %"class.v8::internal::FastKeyAccumulator", align 8
  %6 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 8
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %0, i64 0, i32 9
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = load i64, i64* %2, align 8
  %11 = and i64 %10, -262144
  %12 = or i64 %11, 16
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 16
  %15 = add i64 %14, -41416
  %16 = inttoptr i64 %15 to %"class.v8::internal::Isolate"*
  %17 = bitcast %"class.v8::internal::FastKeyAccumulator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %16, %"class.v8::internal::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 1, i32 0, i32 0
  store i64* %2, i64** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 5
  %22 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 6
  %23 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 7
  %24 = bitcast i64** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false)
  store i8 %7, i8* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 8
  store i8 %9, i8* %25, align 1
  %26 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 9
  store i8 0, i8* %26, align 2
  %27 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 10
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 11
  store i8 1, i8* %28, align 4
  %29 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 12
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 13
  store i8 0, i8* %30, align 2
  %31 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 14
  store i8 0, i8* %31, align 1
  call void @_ZN2v88internal18FastKeyAccumulator7PrepareEv(%"class.v8::internal::FastKeyAccumulator"* nonnull %5) #7
  %32 = load i32, i32* %22, align 4
  %33 = icmp eq i32 %32, 18
  br i1 %33, label %34, label %49

34:                                               ; preds = %3
  %35 = call i64* @_ZN2v88internal18FastKeyAccumulator11GetKeysFastENS0_17GetKeysConversionE(%"class.v8::internal::FastKeyAccumulator"* nonnull %5, i32 0) #7
  %36 = icmp eq i64* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = ptrtoint i64* %35 to i64
  br label %92

39:                                               ; preds = %34
  %40 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 0, i32 7, i32 0, i64 5
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = trunc i64 %42 to i32
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %49, label %48

48:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #7
  br label %98

49:                                               ; preds = %39, %3
  %50 = load i8, i8* %30, align 2, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = call i64* @_ZN2v88internal18FastKeyAccumulator29GetKeysWithPrototypeInfoCacheENS0_17GetKeysConversionE(%"class.v8::internal::FastKeyAccumulator"* nonnull %5, i32 0) #7
  %54 = ptrtoint i64* %53 to i64
  br label %92

55:                                               ; preds = %49
  %56 = bitcast %"class.v8::internal::KeyAccumulator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #7
  %57 = bitcast %"class.v8::internal::FastKeyAccumulator"* %5 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = load i32, i32* %21, align 8
  %60 = load i32, i32* %22, align 4
  %61 = bitcast %"class.v8::internal::KeyAccumulator"* %4 to i64*
  store i64 %58, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 1, i32 0, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 6
  %64 = bitcast i64** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 40, i1 false) #7
  store i32 %59, i32* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 7
  store i32 %60, i32* %65, align 4
  %66 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 8
  %67 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 9
  %68 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 10
  store i8 1, i8* %68, align 2
  %69 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 11
  %70 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 12
  %71 = load i8, i8* %23, align 8, !range !2
  store i8 %71, i8* %66, align 8
  %72 = load i8, i8* %25, align 1, !range !2
  store i8 %72, i8* %67, align 1
  %73 = getelementptr inbounds %"class.v8::internal::FastKeyAccumulator", %"class.v8::internal::FastKeyAccumulator"* %5, i64 0, i32 4, i32 0, i32 0
  %74 = bitcast i64** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 4, i32 0, i32 0
  %77 = bitcast i64** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = load i8, i8* %28, align 4, !range !2
  store i8 %78, i8* %69, align 1
  %79 = bitcast i64** %20 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::KeyAccumulator", %"class.v8::internal::KeyAccumulator"* %4, i64 0, i32 2, i32 0, i32 0
  %82 = bitcast i64** %81 to i64*
  store i64 %80, i64* %82, align 8
  store i8 0, i8* %70, align 4
  %83 = load i64*, i64** %19, align 8
  %84 = call i16 @_ZN2v88internal14KeyAccumulator11CollectKeysENS0_6HandleINS0_10JSReceiverEEES4_(%"class.v8::internal::KeyAccumulator"* nonnull %4, i64* %83, i64* %83) #7
  %85 = trunc i16 %84 to i8
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %55
  %88 = call i64* @_ZN2v88internal14KeyAccumulator7GetKeysENS0_17GetKeysConversionE(%"class.v8::internal::KeyAccumulator"* nonnull %4, i32 0) #7
  %89 = ptrtoint i64* %88 to i64
  br label %90

90:                                               ; preds = %55, %87
  %91 = phi i64 [ %89, %87 ], [ 0, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #7
  br label %92

92:                                               ; preds = %37, %52, %90
  %93 = phi i64 [ %38, %37 ], [ %91, %90 ], [ %54, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #7
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %92
  %96 = inttoptr i64 %93 to i64*
  %97 = call i16 @_ZN2v88internal14KeyAccumulator18AddKeysFromJSProxyENS0_6HandleINS0_7JSProxyEEENS2_INS0_10FixedArrayEEE(%"class.v8::internal::KeyAccumulator"* %0, i64* %1, i64* %96)
  br label %98

98:                                               ; preds = %92, %48, %95
  %99 = phi i16 [ %97, %95 ], [ 0, %48 ], [ 0, %92 ]
  ret i16 %99
}

declare i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1137"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal6Object23CreateListFromArrayLikeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementTypesE(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1 zeroext) unnamed_addr #2

declare i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

declare i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @llvm.assume(i1) #7

declare zeroext i1 @_ZN2v88internal6String16SlowAsArrayIndexEPj(%"class.v8::internal::String"*, i32*) local_unnamed_addr #2

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #2

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal7JSProxy12GetPrototypeENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.v8::internal::String", align 8
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %5 = and i64 %0, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = trunc i64 %0 to i32
  %9 = ashr i32 %8, 1
  %10 = xor i32 %9, -1
  %11 = shl i32 %9, 15
  %12 = add i32 %11, %10
  %13 = lshr i32 %12, 12
  %14 = xor i32 %13, %12
  %15 = mul i32 %14, 5
  %16 = lshr i32 %15, 4
  %17 = xor i32 %16, %15
  %18 = mul i32 %17, 2057
  %19 = lshr i32 %18, 16
  %20 = and i32 %18, 1073741823
  %21 = xor i32 %20, %19
  %22 = shl nuw nsw i32 %21, 1
  %23 = zext i32 %22 to i64
  br label %180

24:                                               ; preds = %1
  %25 = and i64 %0, -4294967296
  %26 = add i64 %0, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 66
  br i1 %34, label %35, label %81

35:                                               ; preds = %24
  %36 = add i64 %0, 3
  %37 = inttoptr i64 %36 to double*
  %38 = load double, double* %37, align 1
  %39 = fcmp uno double %38, 0.000000e+00
  br i1 %39, label %180, label %40

40:                                               ; preds = %35
  %41 = fcmp oge double %38, 0xC1E0000000000000
  %42 = fcmp ole double %38, 0x41DFFFFFFFC00000
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %61

44:                                               ; preds = %40
  %45 = fptosi double %38 to i32
  %46 = sitofp i32 %45 to double
  %47 = fcmp oeq double %38, %46
  br i1 %47, label %48, label %61

48:                                               ; preds = %44
  %49 = xor i32 %45, -1
  %50 = shl i32 %45, 15
  %51 = add i32 %50, %49
  %52 = lshr i32 %51, 12
  %53 = xor i32 %52, %51
  %54 = mul i32 %53, 5
  %55 = lshr i32 %54, 4
  %56 = xor i32 %55, %54
  %57 = mul i32 %56, 2057
  %58 = lshr i32 %57, 16
  %59 = and i32 %57, 1073741823
  %60 = xor i32 %59, %58
  br label %76

61:                                               ; preds = %44, %40
  %62 = bitcast double %38 to i64
  %63 = xor i64 %62, -1
  %64 = shl i64 %62, 18
  %65 = add i64 %64, %63
  %66 = lshr i64 %65, 31
  %67 = xor i64 %66, %65
  %68 = mul i64 %67, 21
  %69 = lshr i64 %68, 11
  %70 = xor i64 %69, %68
  %71 = mul i64 %70, 65
  %72 = lshr i64 %71, 22
  %73 = xor i64 %72, %71
  %74 = trunc i64 %73 to i32
  %75 = and i32 %74, 1073741823
  br label %76

76:                                               ; preds = %61, %48
  %77 = phi i32 [ %60, %48 ], [ %75, %61 ]
  %78 = shl nsw i32 %77, 1
  %79 = and i32 %78, 2147483646
  %80 = zext i32 %79 to i64
  br label %180

81:                                               ; preds = %24
  %82 = load atomic i32, i32* %27 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %25, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = icmp ult i16 %87, 65
  br i1 %88, label %89, label %105

89:                                               ; preds = %81
  %90 = add i64 %0, 3
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = lshr i32 %92, 2
  br label %101

97:                                               ; preds = %89
  %98 = bitcast %"class.v8::internal::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #7
  %99 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %99, align 8
  %100 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #7
  br label %101

101:                                              ; preds = %95, %97
  %102 = phi i32 [ %96, %95 ], [ %100, %97 ]
  %103 = sext i32 %102 to i64
  %104 = shl nsw i64 %103, 1
  br label %180

105:                                              ; preds = %81
  %106 = load atomic i32, i32* %27 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %25, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = icmp eq i16 %111, 67
  br i1 %112, label %113, label %134

113:                                              ; preds = %105
  %114 = add i64 %0, 11
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %25, %117
  %119 = add i64 %118, 3
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %113
  %125 = lshr i32 %121, 2
  br label %130

126:                                              ; preds = %113
  %127 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #7
  %128 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %118, i64* %128, align 8
  %129 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #7
  br label %130

130:                                              ; preds = %124, %126
  %131 = phi i32 [ %125, %124 ], [ %129, %126 ]
  %132 = sext i32 %131 to i64
  %133 = shl nsw i64 %132, 1
  br label %180

134:                                              ; preds = %105
  %135 = load atomic i32, i32* %27 monotonic, align 4
  %136 = zext i32 %135 to i64
  %137 = or i64 %25, %136
  %138 = add i64 %137, 7
  %139 = inttoptr i64 %138 to i16*
  %140 = load atomic i16, i16* %139 monotonic, align 2
  %141 = icmp eq i16 %140, 65
  br i1 %141, label %142, label %165

142:                                              ; preds = %134
  %143 = add i64 %0, 3
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2147483646
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %180, label %148

148:                                              ; preds = %142
  %149 = add i64 %0, 7
  %150 = inttoptr i64 %149 to i64*
  %151 = load i64, i64* %150, align 1
  %152 = xor i64 %151, -1
  %153 = shl i64 %151, 18
  %154 = add i64 %153, %152
  %155 = lshr i64 %154, 31
  %156 = xor i64 %155, %154
  %157 = mul i64 %156, 21
  %158 = lshr i64 %157, 11
  %159 = xor i64 %158, %157
  %160 = mul i64 %159, 65
  %161 = lshr i64 %160, 22
  %162 = xor i64 %161, %160
  %163 = shl i64 %162, 1
  %164 = and i64 %163, 2147483646
  br label %180

165:                                              ; preds = %134
  %166 = load atomic i32, i32* %27 monotonic, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %25, %167
  %169 = add i64 %168, 7
  %170 = inttoptr i64 %169 to i16*
  %171 = load atomic i16, i16* %170 monotonic, align 2
  %172 = icmp eq i16 %171, 179
  br i1 %172, label %173, label %180

173:                                              ; preds = %165
  %174 = bitcast %"class.v8::internal::SharedFunctionInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #7
  %175 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %175, align 8
  %176 = call i32 @_ZN2v88internal18SharedFunctionInfo4HashEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #7
  %177 = shl i32 %176, 1
  %178 = and i32 %177, 2147483646
  %179 = zext i32 %178 to i64
  br label %180

180:                                              ; preds = %148, %142, %165, %35, %76, %173, %130, %101, %7
  %181 = phi i64 [ %23, %7 ], [ %104, %101 ], [ %133, %130 ], [ %179, %173 ], [ %80, %76 ], [ 2147483646, %35 ], [ %0, %165 ], [ %164, %148 ], [ 0, %142 ]
  ret i64 %181
}

declare i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"*) local_unnamed_addr #2

declare i32 @_ZN2v88internal18SharedFunctionInfo4HashEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal3Map23OnlyHasSimplePropertiesEv(%"class.v8::internal::Map"*) local_unnamed_addr #2

declare i32 @_ZNK2v88internal3Map28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Map"*) local_unnamed_addr #2

declare void @_ZN2v88internal15DescriptorArray27InitializeOrChangeEnumCacheENS0_6HandleIS1_EEPNS0_7IsolateENS2_INS0_10FixedArrayEEES7_(i64*, %"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare i32* @_ZNK2v88internal16StatsCounterBase24FindLocationInStatsTableEv(%"class.v8::internal::StatsCounterBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp ult i8 %3, 6
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)) #9
  unreachable

6:                                                ; preds = %1
  %7 = sext i8 %3 to i64
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZNK2v88internal14Representation8MnemonicEv, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

declare void @_ZNK2v88internal10FixedArray6CopyToEiS1_ii(%"class.v8::internal::FixedArray"*, i32, i64, i32, i32) local_unnamed_addr #2

declare i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"*, i64*, i64*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal6Logger24ApiIndexedPropertyAccessEPKcNS0_8JSObjectEj(%"class.v8::internal::Logger"*, i8*, i64, i32) local_unnamed_addr #2

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #2

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #2

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN2v88internal6Logger22ApiNamedPropertyAccessEPKcNS0_8JSObjectENS0_6ObjectE(%"class.v8::internal::Logger"*, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RelocatableD2Ev(%"class.v8::internal::Relocatable"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  store i64 %7, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11Relocatable21PostGarbageCollectionEv(%"class.v8::internal::Relocatable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RelocatableD0Ev(%"class.v8::internal::Relocatable"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Relocatable"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE(%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN2v88internal6Logger15ApiObjectAccessEPKcNS0_10JSReceiverE(%"class.v8::internal::Logger"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments22CallPropertyEnumeratorENS0_6HandleINS0_15InterceptorInfoEEE(%"class.v8::internal::PropertyCallbackArguments"*, i64*) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca [2 x %"class.std::__1::unique_ptr.1202"], align 16
  %4 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %5 = alloca %"class.v8::PropertyCallbackInfo.1209", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 23
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = and i64 %6, -4294967296
  %13 = zext i32 %9 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 3
  %16 = inttoptr i64 %15 to void (%"class.v8::PropertyCallbackInfo.1209"*)**
  %17 = load void (%"class.v8::PropertyCallbackInfo.1209"*)*, void (%"class.v8::PropertyCallbackInfo.1209"*)** %16, align 1
  br label %18

18:                                               ; preds = %2, %11
  %19 = phi void (%"class.v8::PropertyCallbackInfo.1209"*)* [ %17, %11 ], [ null, %2 ]
  %20 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %21 = bitcast i64* %20 to %"class.v8::internal::Isolate"**
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 108
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 32
  br i1 %25, label %26, label %30

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 68
  %28 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %27, align 8
  %29 = tail call zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"* %28, i64* %1, i64* null, i32 0) #7
  br i1 %29, label %30, label %145

30:                                               ; preds = %26, %18
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 9, i32 22
  %32 = load i32, i32* %31, align 8
  store i32 6, i32* %31, align 8
  %33 = bitcast %"class.v8::internal::ExternalCallbackScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #7
  %34 = ptrtoint void (%"class.v8::PropertyCallbackInfo.1209"*)* %19 to i64
  %35 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %4, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %22, %"class.v8::internal::Isolate"** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %4, i64 0, i32 1
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %4, i64 0, i32 2
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 9, i32 21
  %39 = bitcast %"class.v8::internal::ExternalCallbackScope"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.v8::internal::ExternalCallbackScope"** %37 to i64*
  store i64 %40, i64* %41, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %4, %"class.v8::internal::ExternalCallbackScope"** %38, align 8
  %42 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %43 = inttoptr i64 %42 to i8*
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %45, label %53

45:                                               ; preds = %30
  %46 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %47 = bitcast %"class.v8::TracingController"* %46 to i8* (%"class.v8::TracingController"*, i8*)***
  %48 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %47, align 8
  %49 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %48, i64 2
  %50 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %49, align 8
  %51 = call i8* %50(%"class.v8::TracingController"* %46, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0)) #7
  %52 = ptrtoint i8* %51 to i64
  store atomic volatile i64 %52, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %53

53:                                               ; preds = %45, %30
  %54 = phi i8* [ %43, %30 ], [ %51, %45 ]
  %55 = load atomic i8, i8* %54 monotonic, align 1
  %56 = and i8 %55, 5
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %85, label %58

58:                                               ; preds = %53
  %59 = bitcast [2 x %"class.std::__1::unique_ptr.1202"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #7
  %60 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %59, i8 0, i64 16, i1 false) #7
  %61 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %62 = bitcast %"class.v8::TracingController"* %61 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)***
  %63 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*** %62, align 8
  %64 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)** %63, i64 3
  %65 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)** %64, align 8
  %66 = call i64 %65(%"class.v8::TracingController"* %61, i8 signext 66, i8* %54, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1202"* nonnull %60, i32 0) #7
  %67 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  %68 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %67, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %67, align 8
  %69 = icmp eq %"class.v8::ConvertableToTraceFormat"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %58
  %71 = bitcast %"class.v8::ConvertableToTraceFormat"* %68 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %72 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %72, i64 1
  %74 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %73, align 8
  call void %74(%"class.v8::ConvertableToTraceFormat"* nonnull %68) #7
  br label %75

75:                                               ; preds = %70, %58
  %76 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %76, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %76, align 16
  %78 = icmp eq %"class.v8::ConvertableToTraceFormat"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.v8::ConvertableToTraceFormat"* %77 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %81 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %81, i64 1
  %83 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %82, align 8
  call void %83(%"class.v8::ConvertableToTraceFormat"* nonnull %77) #7
  br label %84

84:                                               ; preds = %79, %75
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #7
  br label %85

85:                                               ; preds = %53, %84
  %86 = bitcast %"class.v8::PropertyCallbackInfo.1209"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #7
  %87 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %88 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.1209", %"class.v8::PropertyCallbackInfo.1209"* %5, i64 0, i32 0
  store i64* %87, i64** %88, align 8
  call void %19(%"class.v8::PropertyCallbackInfo.1209"* nonnull dereferenceable(8) %5) #7
  %89 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 7, i32 0, i64 5
  %92 = load i64, i64* %91, align 8
  %93 = trunc i64 %90 to i32
  %94 = trunc i64 %92 to i32
  %95 = icmp eq i32 %93, %94
  %96 = select i1 %95, i64* null, i64* %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #7
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %35, align 8
  %98 = load i64, i64* %41, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 9, i32 21
  %100 = bitcast %"class.v8::internal::ExternalCallbackScope"** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %102 = inttoptr i64 %101 to i8*
  %103 = icmp eq i64 %101, 0
  br i1 %103, label %104, label %112

104:                                              ; preds = %85
  %105 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %106 = bitcast %"class.v8::TracingController"* %105 to i8* (%"class.v8::TracingController"*, i8*)***
  %107 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %106, align 8
  %108 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %107, i64 2
  %109 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %108, align 8
  %110 = call i8* %109(%"class.v8::TracingController"* %105, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0)) #7
  %111 = ptrtoint i8* %110 to i64
  store atomic volatile i64 %111, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %112

112:                                              ; preds = %104, %85
  %113 = phi i8* [ %102, %85 ], [ %110, %104 ]
  %114 = load atomic i8, i8* %113 monotonic, align 1
  %115 = and i8 %114, 5
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %144, label %117

117:                                              ; preds = %112
  %118 = bitcast [2 x %"class.std::__1::unique_ptr.1202"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #7
  %119 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %118, i8 0, i64 16, i1 false) #7
  %120 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #7
  %121 = bitcast %"class.v8::TracingController"* %120 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)***
  %122 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*** %121, align 8
  %123 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)** %122, i64 3
  %124 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1202"*, i32)** %123, align 8
  %125 = call i64 %124(%"class.v8::TracingController"* %120, i8 signext 69, i8* %113, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1202"* nonnull %119, i32 0) #7
  %126 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  %127 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %126, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %126, align 8
  %128 = icmp eq %"class.v8::ConvertableToTraceFormat"* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %117
  %130 = bitcast %"class.v8::ConvertableToTraceFormat"* %127 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %131 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %131, i64 1
  %133 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %132, align 8
  call void %133(%"class.v8::ConvertableToTraceFormat"* nonnull %127) #7
  br label %134

134:                                              ; preds = %129, %117
  %135 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1202"], [2 x %"class.std::__1::unique_ptr.1202"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %135, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %135, align 16
  %137 = icmp eq %"class.v8::ConvertableToTraceFormat"* %136, null
  br i1 %137, label %143, label %138

138:                                              ; preds = %134
  %139 = bitcast %"class.v8::ConvertableToTraceFormat"* %136 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %140 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %140, i64 1
  %142 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %141, align 8
  call void %142(%"class.v8::ConvertableToTraceFormat"* nonnull %136) #7
  br label %143

143:                                              ; preds = %138, %134
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #7
  br label %144

144:                                              ; preds = %112, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #7
  store i32 %32, i32* %31, align 8
  br label %145

145:                                              ; preds = %26, %144
  %146 = phi i64* [ %96, %144 ], [ null, %26 ]
  ret i64* %146
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal3Map21GetIndexedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 19
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = and i64 %1, 4294967295
  %9 = icmp eq i64 %8, 0
  tail call void @llvm.assume(i1 %9) #7
  %10 = zext i32 %7 to i64
  %11 = or i64 %10, %1
  %12 = and i64 %10, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %84, label %14

14:                                               ; preds = %2
  %15 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %16 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %15, null
  %17 = and i64 %4, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  br i1 %16, label %49, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 1, i64 10
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  br label %70

28:                                               ; preds = %20
  %29 = load i64, i64* %19, align 16
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 10
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  br label %35

35:                                               ; preds = %41, %28
  %36 = phi i64 [ %46, %41 ], [ %11, %28 ]
  %37 = add i64 %36, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = icmp eq i32 %39, %34
  br i1 %40, label %41, label %84

41:                                               ; preds = %35
  %42 = add i64 %36, 19
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %45, %1
  %47 = and i64 %45, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %84, label %35

49:                                               ; preds = %14
  %50 = load i64, i64* %19, align 16
  %51 = add i64 %50, -41416
  %52 = inttoptr i64 %51 to %"class.v8::internal::Isolate"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 0, i32 7, i32 0, i64 10
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %62, %49
  %57 = phi i64 [ %67, %62 ], [ %11, %49 ]
  %58 = add i64 %57, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = icmp eq i32 %60, %55
  br i1 %61, label %62, label %84

62:                                               ; preds = %56
  %63 = add i64 %57, 19
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %66, %1
  %68 = and i64 %66, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %84, label %56

70:                                               ; preds = %76, %24
  %71 = phi i64 [ %81, %76 ], [ %11, %24 ]
  %72 = add i64 %71, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = icmp eq i32 %74, %27
  br i1 %75, label %76, label %84

76:                                               ; preds = %70
  %77 = add i64 %71, 19
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %80, %1
  %82 = and i64 %80, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %70

84:                                               ; preds = %76, %70, %41, %35, %62, %56, %2
  %85 = phi i64 [ %11, %2 ], [ %67, %62 ], [ %57, %56 ], [ %36, %35 ], [ %46, %41 ], [ %71, %70 ], [ %81, %76 ]
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %111, label %88

88:                                               ; preds = %84
  %89 = add i64 %85, -1
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %92, %1
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load atomic i16, i16* %95 monotonic, align 2
  %97 = add i16 %96, -1059
  %98 = icmp ult i16 %97, 15
  br i1 %98, label %99, label %111

99:                                               ; preds = %88
  %100 = add i64 %85, 11
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i64 %85, -4294967296
  %104 = zext i32 %102 to i64
  %105 = or i64 %103, %104
  %106 = add i64 %105, 3
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 acquire, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %103, %109
  br label %111

111:                                              ; preds = %84, %88, %99
  %112 = phi i64 [ %110, %99 ], [ %85, %88 ], [ %85, %84 ]
  %113 = add i64 %112, 35
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 acquire, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %116, %1
  %118 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %119 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %118, null
  br i1 %119, label %126, label %120

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 0, i32 1
  %122 = load i8, i8* %121, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 1, i64 0
  br label %134

126:                                              ; preds = %120, %111
  %127 = and i64 %112, -262144
  %128 = or i64 %127, 16
  %129 = inttoptr i64 %128 to i64*
  %130 = load i64, i64* %129, align 16
  %131 = add i64 %130, -41416
  %132 = inttoptr i64 %131 to %"class.v8::internal::Isolate"*
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %134

134:                                              ; preds = %126, %124
  %135 = phi i64* [ %133, %126 ], [ %125, %124 ]
  %136 = getelementptr inbounds i64, i64* %135, i64 4
  %137 = load i64, i64* %136, align 8
  %138 = trunc i64 %137 to i32
  %139 = icmp eq i32 %115, %138
  br i1 %139, label %146, label %140

140:                                              ; preds = %134
  %141 = add i64 %117, 19
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %144, %1
  br label %146

146:                                              ; preds = %134, %140
  %147 = phi i64 [ %145, %140 ], [ %137, %134 ]
  ret i64 %147
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal3Map19GetNamedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 19
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = and i64 %1, 4294967295
  %9 = icmp eq i64 %8, 0
  tail call void @llvm.assume(i1 %9) #7
  %10 = zext i32 %7 to i64
  %11 = or i64 %10, %1
  %12 = and i64 %10, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %84, label %14

14:                                               ; preds = %2
  %15 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %16 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %15, null
  %17 = and i64 %4, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  br i1 %16, label %49, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 1, i64 10
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  br label %70

28:                                               ; preds = %20
  %29 = load i64, i64* %19, align 16
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 10
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  br label %35

35:                                               ; preds = %41, %28
  %36 = phi i64 [ %46, %41 ], [ %11, %28 ]
  %37 = add i64 %36, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = icmp eq i32 %39, %34
  br i1 %40, label %41, label %84

41:                                               ; preds = %35
  %42 = add i64 %36, 19
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %45, %1
  %47 = and i64 %45, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %84, label %35

49:                                               ; preds = %14
  %50 = load i64, i64* %19, align 16
  %51 = add i64 %50, -41416
  %52 = inttoptr i64 %51 to %"class.v8::internal::Isolate"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 0, i32 7, i32 0, i64 10
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %62, %49
  %57 = phi i64 [ %67, %62 ], [ %11, %49 ]
  %58 = add i64 %57, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = icmp eq i32 %60, %55
  br i1 %61, label %62, label %84

62:                                               ; preds = %56
  %63 = add i64 %57, 19
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %66, %1
  %68 = and i64 %66, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %84, label %56

70:                                               ; preds = %76, %24
  %71 = phi i64 [ %81, %76 ], [ %11, %24 ]
  %72 = add i64 %71, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = icmp eq i32 %74, %27
  br i1 %75, label %76, label %84

76:                                               ; preds = %70
  %77 = add i64 %71, 19
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %80, %1
  %82 = and i64 %80, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %70

84:                                               ; preds = %76, %70, %41, %35, %62, %56, %2
  %85 = phi i64 [ %11, %2 ], [ %67, %62 ], [ %57, %56 ], [ %36, %35 ], [ %46, %41 ], [ %71, %70 ], [ %81, %76 ]
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %111, label %88

88:                                               ; preds = %84
  %89 = add i64 %85, -1
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %92, %1
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load atomic i16, i16* %95 monotonic, align 2
  %97 = add i16 %96, -1059
  %98 = icmp ult i16 %97, 15
  br i1 %98, label %99, label %111

99:                                               ; preds = %88
  %100 = add i64 %85, 11
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i64 %85, -4294967296
  %104 = zext i32 %102 to i64
  %105 = or i64 %103, %104
  %106 = add i64 %105, 3
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 acquire, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %103, %109
  br label %111

111:                                              ; preds = %84, %88, %99
  %112 = phi i64 [ %110, %99 ], [ %85, %88 ], [ %85, %84 ]
  %113 = add i64 %112, 35
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 acquire, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %116, %1
  %118 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %119 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %118, null
  br i1 %119, label %126, label %120

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 0, i32 1
  %122 = load i8, i8* %121, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 1, i64 0
  br label %134

126:                                              ; preds = %120, %111
  %127 = and i64 %112, -262144
  %128 = or i64 %127, 16
  %129 = inttoptr i64 %128 to i64*
  %130 = load i64, i64* %129, align 16
  %131 = add i64 %130, -41416
  %132 = inttoptr i64 %131 to %"class.v8::internal::Isolate"*
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %134

134:                                              ; preds = %126, %124
  %135 = phi i64* [ %133, %126 ], [ %125, %124 ]
  %136 = getelementptr inbounds i64, i64* %135, i64 4
  %137 = load i64, i64* %136, align 8
  %138 = trunc i64 %137 to i32
  %139 = icmp eq i32 %115, %138
  br i1 %139, label %146, label %140

140:                                              ; preds = %134
  %141 = add i64 %117, 15
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %144, %1
  br label %146

146:                                              ; preds = %134, %140
  %147 = phi i64 [ %145, %140 ], [ %137, %134 ]
  ret i64 %147
}

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #2

declare i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #2

declare i32 @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary.1156"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64, i64, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %5

5:                                                ; preds = %464, %3
  %6 = phi i64 [ %1, %3 ], [ %413, %464 ]
  %7 = phi i64 [ %0, %3 ], [ %13, %464 ]
  %8 = add i64 %6, -4
  %9 = inttoptr i64 %8 to i32*
  br label %10

10:                                               ; preds = %476, %5
  %11 = phi i64 [ %7, %5 ], [ %477, %476 ]
  br label %12

12:                                               ; preds = %278, %10
  %13 = phi i64 [ %11, %10 ], [ %211, %278 ]
  %14 = sub i64 %6, %13
  %15 = trunc i64 %14 to i32
  %16 = sdiv i32 %15, 4
  switch i32 %16, label %71 [
    i32 0, label %480
    i32 1, label %480
    i32 2, label %17
    i32 3, label %56
    i32 4, label %60
    i32 5, label %65
  ]

17:                                               ; preds = %12
  %18 = add i64 %6, -4
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = inttoptr i64 %13 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = lshr i32 %20, 1
  %24 = load i64, i64* %4, align 8
  %25 = and i64 %24, -4294967296
  %26 = shl i32 %23, 2
  %27 = add i32 %26, 20
  %28 = sext i32 %27 to i64
  %29 = add i64 %24, 7
  %30 = add i64 %29, %28
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %25, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = lshr i32 %37, 9
  %39 = lshr i32 %22, 1
  %40 = shl i32 %39, 2
  %41 = add i32 %40, 20
  %42 = sext i32 %41 to i64
  %43 = add i64 %29, %42
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %25, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = lshr i32 %50, 9
  %52 = icmp ult i32 %38, %51
  br i1 %52, label %53, label %480

53:                                               ; preds = %17
  %54 = load atomic i32, i32* %21 monotonic, align 4
  %55 = load atomic i32, i32* %19 monotonic, align 4
  store atomic volatile i32 %55, i32* %21 monotonic, align 4
  store atomic volatile i32 %54, i32* %19 monotonic, align 4
  br label %480

56:                                               ; preds = %12
  %57 = add i64 %13, 4
  %58 = add i64 %6, -4
  %59 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %13, i64 %57, i64 %58, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %480

60:                                               ; preds = %12
  %61 = add i64 %13, 4
  %62 = add i64 %13, 8
  %63 = add i64 %6, -4
  %64 = tail call i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64 %13, i64 %61, i64 %62, i64 %63, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %480

65:                                               ; preds = %12
  %66 = add i64 %13, 4
  %67 = add i64 %13, 8
  %68 = add i64 %13, 12
  %69 = add i64 %6, -4
  %70 = tail call i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64 %13, i64 %66, i64 %67, i64 %68, i64 %69, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %480

71:                                               ; preds = %12
  %72 = icmp slt i32 %15, 124
  br i1 %72, label %73, label %74

73:                                               ; preds = %71
  tail call void @_ZNSt3__118__insertion_sort_3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %13, i64 %6, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %480

74:                                               ; preds = %71
  %75 = icmp sgt i32 %15, 3999
  %76 = lshr i32 %16, 1
  %77 = zext i32 %76 to i64
  %78 = shl nuw nsw i64 %77, 2
  %79 = add i64 %78, %13
  br i1 %75, label %80, label %86

80:                                               ; preds = %74
  %81 = and i32 %16, -4
  %82 = zext i32 %81 to i64
  %83 = add i64 %13, %82
  %84 = add i64 %79, %82
  %85 = tail call i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64 %13, i64 %83, i64 %79, i64 %84, i64 %8, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %88

86:                                               ; preds = %74
  %87 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %13, i64 %79, i64 %8, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %88

88:                                               ; preds = %86, %80
  %89 = phi i32 [ %85, %80 ], [ %87, %86 ]
  %90 = inttoptr i64 %13 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = inttoptr i64 %79 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = lshr i32 %91, 1
  %95 = load i64, i64* %4, align 8
  %96 = and i64 %95, -4294967296
  %97 = shl i32 %94, 2
  %98 = add i32 %97, 20
  %99 = sext i32 %98 to i64
  %100 = add i64 %95, 7
  %101 = add i64 %100, %99
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %96, %104
  %106 = add i64 %105, 7
  %107 = inttoptr i64 %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = lshr i32 %108, 9
  %110 = lshr i32 %93, 1
  %111 = shl i32 %110, 2
  %112 = add i32 %111, 20
  %113 = sext i32 %112 to i64
  %114 = add i64 %100, %113
  %115 = inttoptr i64 %114 to i32*
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %96, %117
  %119 = add i64 %118, 7
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = lshr i32 %121, 9
  %123 = icmp ult i32 %109, %122
  br i1 %123, label %321, label %124

124:                                              ; preds = %88, %284
  %125 = phi i64 [ %126, %284 ], [ %8, %88 ]
  %126 = add i64 %125, -4
  %127 = icmp eq i64 %13, %126
  br i1 %127, label %128, label %284

128:                                              ; preds = %124
  %129 = add i64 %13, 4
  %130 = load atomic i32, i32* %90 monotonic, align 4
  %131 = load atomic i32, i32* %9 monotonic, align 4
  %132 = lshr i32 %130, 1
  %133 = shl i32 %132, 2
  %134 = add i32 %133, 20
  %135 = sext i32 %134 to i64
  %136 = add i64 %100, %135
  %137 = inttoptr i64 %136 to i32*
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = zext i32 %138 to i64
  %140 = or i64 %96, %139
  %141 = add i64 %140, 7
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = lshr i32 %143, 9
  %145 = lshr i32 %131, 1
  %146 = shl i32 %145, 2
  %147 = add i32 %146, 20
  %148 = sext i32 %147 to i64
  %149 = add i64 %100, %148
  %150 = inttoptr i64 %149 to i32*
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = zext i32 %151 to i64
  %153 = or i64 %96, %152
  %154 = add i64 %153, 7
  %155 = inttoptr i64 %154 to i32*
  %156 = load i32, i32* %155, align 4
  %157 = lshr i32 %156, 9
  %158 = icmp ult i32 %144, %157
  br i1 %158, label %201, label %159

159:                                              ; preds = %128
  %160 = icmp eq i64 %129, %8
  br i1 %160, label %480, label %161

161:                                              ; preds = %159, %198
  %162 = phi i64 [ %199, %198 ], [ %129, %159 ]
  %163 = load atomic i32, i32* %90 monotonic, align 4
  %164 = inttoptr i64 %162 to i32*
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = lshr i32 %163, 1
  %167 = shl i32 %166, 2
  %168 = add i32 %167, 20
  %169 = sext i32 %168 to i64
  %170 = add i64 %100, %169
  %171 = inttoptr i64 %170 to i32*
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = zext i32 %172 to i64
  %174 = or i64 %96, %173
  %175 = add i64 %174, 7
  %176 = inttoptr i64 %175 to i32*
  %177 = load i32, i32* %176, align 4
  %178 = lshr i32 %177, 9
  %179 = lshr i32 %165, 1
  %180 = shl i32 %179, 2
  %181 = add i32 %180, 20
  %182 = sext i32 %181 to i64
  %183 = add i64 %100, %182
  %184 = inttoptr i64 %183 to i32*
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = zext i32 %185 to i64
  %187 = or i64 %96, %186
  %188 = add i64 %187, 7
  %189 = inttoptr i64 %188 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = lshr i32 %190, 9
  %192 = icmp ult i32 %178, %191
  br i1 %192, label %193, label %198

193:                                              ; preds = %161
  %194 = inttoptr i64 %162 to i32*
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = load atomic i32, i32* %9 monotonic, align 4
  store atomic volatile i32 %196, i32* %194 monotonic, align 4
  store atomic volatile i32 %195, i32* %9 monotonic, align 4
  %197 = add i64 %162, 4
  br label %201

198:                                              ; preds = %161
  %199 = add i64 %162, 4
  %200 = icmp eq i64 %199, %8
  br i1 %200, label %480, label %161

201:                                              ; preds = %128, %193
  %202 = phi i64 [ %129, %128 ], [ %197, %193 ]
  %203 = icmp eq i64 %202, %8
  br i1 %203, label %480, label %204

204:                                              ; preds = %201, %281
  %205 = phi i64 [ %248, %281 ], [ %8, %201 ]
  %206 = phi i64 [ %242, %281 ], [ %202, %201 ]
  %207 = load i64, i64* %4, align 8
  %208 = and i64 %207, -4294967296
  %209 = add i64 %207, 7
  br label %210

210:                                              ; preds = %210, %204
  %211 = phi i64 [ %206, %204 ], [ %242, %210 ]
  %212 = load atomic i32, i32* %90 monotonic, align 4
  %213 = inttoptr i64 %211 to i32*
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = lshr i32 %212, 1
  %216 = shl i32 %215, 2
  %217 = add i32 %216, 20
  %218 = sext i32 %217 to i64
  %219 = add i64 %209, %218
  %220 = inttoptr i64 %219 to i32*
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = zext i32 %221 to i64
  %223 = or i64 %208, %222
  %224 = add i64 %223, 7
  %225 = inttoptr i64 %224 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = lshr i32 %226, 9
  %228 = lshr i32 %214, 1
  %229 = shl i32 %228, 2
  %230 = add i32 %229, 20
  %231 = sext i32 %230 to i64
  %232 = add i64 %209, %231
  %233 = inttoptr i64 %232 to i32*
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = zext i32 %234 to i64
  %236 = or i64 %208, %235
  %237 = add i64 %236, 7
  %238 = inttoptr i64 %237 to i32*
  %239 = load i32, i32* %238, align 4
  %240 = lshr i32 %239, 9
  %241 = icmp ult i32 %227, %240
  %242 = add i64 %211, 4
  br i1 %241, label %243, label %210

243:                                              ; preds = %210
  %244 = inttoptr i64 %211 to i32*
  br label %245

245:                                              ; preds = %243, %245
  %246 = phi i64 [ %248, %245 ], [ %205, %243 ]
  %247 = load atomic i32, i32* %90 monotonic, align 4
  %248 = add i64 %246, -4
  %249 = inttoptr i64 %248 to i32*
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = lshr i32 %247, 1
  %252 = shl i32 %251, 2
  %253 = add i32 %252, 20
  %254 = sext i32 %253 to i64
  %255 = add i64 %209, %254
  %256 = inttoptr i64 %255 to i32*
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = zext i32 %257 to i64
  %259 = or i64 %208, %258
  %260 = add i64 %259, 7
  %261 = inttoptr i64 %260 to i32*
  %262 = load i32, i32* %261, align 4
  %263 = lshr i32 %262, 9
  %264 = lshr i32 %250, 1
  %265 = shl i32 %264, 2
  %266 = add i32 %265, 20
  %267 = sext i32 %266 to i64
  %268 = add i64 %209, %267
  %269 = inttoptr i64 %268 to i32*
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = zext i32 %270 to i64
  %272 = or i64 %208, %271
  %273 = add i64 %272, 7
  %274 = inttoptr i64 %273 to i32*
  %275 = load i32, i32* %274, align 4
  %276 = lshr i32 %275, 9
  %277 = icmp ult i32 %263, %276
  br i1 %277, label %245, label %278

278:                                              ; preds = %245
  %279 = inttoptr i64 %248 to i32*
  %280 = icmp ult i64 %211, %248
  br i1 %280, label %281, label %12

281:                                              ; preds = %278
  %282 = load atomic i32, i32* %244 monotonic, align 4
  %283 = load atomic i32, i32* %279 monotonic, align 4
  store atomic volatile i32 %283, i32* %244 monotonic, align 4
  store atomic volatile i32 %282, i32* %279 monotonic, align 4
  br label %204

284:                                              ; preds = %124
  %285 = inttoptr i64 %126 to i32*
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = load atomic i32, i32* %92 monotonic, align 4
  %288 = lshr i32 %286, 1
  %289 = shl i32 %288, 2
  %290 = add i32 %289, 20
  %291 = sext i32 %290 to i64
  %292 = add i64 %100, %291
  %293 = inttoptr i64 %292 to i32*
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = zext i32 %294 to i64
  %296 = or i64 %96, %295
  %297 = add i64 %296, 7
  %298 = inttoptr i64 %297 to i32*
  %299 = load i32, i32* %298, align 4
  %300 = lshr i32 %299, 9
  %301 = lshr i32 %287, 1
  %302 = shl i32 %301, 2
  %303 = add i32 %302, 20
  %304 = sext i32 %303 to i64
  %305 = add i64 %100, %304
  %306 = inttoptr i64 %305 to i32*
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = zext i32 %307 to i64
  %309 = or i64 %96, %308
  %310 = add i64 %309, 7
  %311 = inttoptr i64 %310 to i32*
  %312 = load i32, i32* %311, align 4
  %313 = lshr i32 %312, 9
  %314 = icmp ult i32 %300, %313
  br i1 %314, label %315, label %124

315:                                              ; preds = %284
  %316 = inttoptr i64 %13 to i32*
  %317 = inttoptr i64 %126 to i32*
  %318 = load atomic i32, i32* %316 monotonic, align 4
  %319 = load atomic i32, i32* %317 monotonic, align 4
  store atomic volatile i32 %319, i32* %316 monotonic, align 4
  store atomic volatile i32 %318, i32* %317 monotonic, align 4
  %320 = add i32 %89, 1
  br label %321

321:                                              ; preds = %88, %315
  %322 = phi i64 [ %126, %315 ], [ %8, %88 ]
  %323 = phi i32 [ %320, %315 ], [ %89, %88 ]
  %324 = add i64 %13, 4
  %325 = icmp ult i64 %324, %322
  br i1 %325, label %326, label %412

326:                                              ; preds = %321, %406
  %327 = phi i64 [ %372, %406 ], [ %322, %321 ]
  %328 = phi i64 [ %367, %406 ], [ %324, %321 ]
  %329 = phi i64 [ %411, %406 ], [ %79, %321 ]
  %330 = phi i32 [ %409, %406 ], [ %323, %321 ]
  %331 = inttoptr i64 %329 to i32*
  %332 = load i64, i64* %4, align 8
  %333 = and i64 %332, -4294967296
  %334 = add i64 %332, 7
  br label %335

335:                                              ; preds = %335, %326
  %336 = phi i64 [ %328, %326 ], [ %367, %335 ]
  %337 = inttoptr i64 %336 to i32*
  %338 = load atomic i32, i32* %337 monotonic, align 4
  %339 = load atomic i32, i32* %331 monotonic, align 4
  %340 = lshr i32 %338, 1
  %341 = shl i32 %340, 2
  %342 = add i32 %341, 20
  %343 = sext i32 %342 to i64
  %344 = add i64 %334, %343
  %345 = inttoptr i64 %344 to i32*
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = zext i32 %346 to i64
  %348 = or i64 %333, %347
  %349 = add i64 %348, 7
  %350 = inttoptr i64 %349 to i32*
  %351 = load i32, i32* %350, align 4
  %352 = lshr i32 %351, 9
  %353 = lshr i32 %339, 1
  %354 = shl i32 %353, 2
  %355 = add i32 %354, 20
  %356 = sext i32 %355 to i64
  %357 = add i64 %334, %356
  %358 = inttoptr i64 %357 to i32*
  %359 = load atomic i32, i32* %358 monotonic, align 4
  %360 = zext i32 %359 to i64
  %361 = or i64 %333, %360
  %362 = add i64 %361, 7
  %363 = inttoptr i64 %362 to i32*
  %364 = load i32, i32* %363, align 4
  %365 = lshr i32 %364, 9
  %366 = icmp ult i32 %352, %365
  %367 = add i64 %336, 4
  br i1 %366, label %335, label %368

368:                                              ; preds = %335
  %369 = inttoptr i64 %336 to i32*
  br label %370

370:                                              ; preds = %368, %370
  %371 = phi i64 [ %372, %370 ], [ %327, %368 ]
  %372 = add i64 %371, -4
  %373 = inttoptr i64 %372 to i32*
  %374 = load atomic i32, i32* %373 monotonic, align 4
  %375 = load atomic i32, i32* %331 monotonic, align 4
  %376 = lshr i32 %374, 1
  %377 = shl i32 %376, 2
  %378 = add i32 %377, 20
  %379 = sext i32 %378 to i64
  %380 = add i64 %334, %379
  %381 = inttoptr i64 %380 to i32*
  %382 = load atomic i32, i32* %381 monotonic, align 4
  %383 = zext i32 %382 to i64
  %384 = or i64 %333, %383
  %385 = add i64 %384, 7
  %386 = inttoptr i64 %385 to i32*
  %387 = load i32, i32* %386, align 4
  %388 = lshr i32 %387, 9
  %389 = lshr i32 %375, 1
  %390 = shl i32 %389, 2
  %391 = add i32 %390, 20
  %392 = sext i32 %391 to i64
  %393 = add i64 %334, %392
  %394 = inttoptr i64 %393 to i32*
  %395 = load atomic i32, i32* %394 monotonic, align 4
  %396 = zext i32 %395 to i64
  %397 = or i64 %333, %396
  %398 = add i64 %397, 7
  %399 = inttoptr i64 %398 to i32*
  %400 = load i32, i32* %399, align 4
  %401 = lshr i32 %400, 9
  %402 = icmp ult i32 %388, %401
  br i1 %402, label %403, label %370

403:                                              ; preds = %370
  %404 = inttoptr i64 %372 to i32*
  %405 = icmp ugt i64 %336, %372
  br i1 %405, label %412, label %406

406:                                              ; preds = %403
  %407 = load atomic i32, i32* %369 monotonic, align 4
  %408 = load atomic i32, i32* %404 monotonic, align 4
  store atomic volatile i32 %408, i32* %369 monotonic, align 4
  store atomic volatile i32 %407, i32* %404 monotonic, align 4
  %409 = add i32 %330, 1
  %410 = icmp eq i64 %329, %336
  %411 = select i1 %410, i64 %372, i64 %329
  br label %326

412:                                              ; preds = %403, %321
  %413 = phi i64 [ %324, %321 ], [ %336, %403 ]
  %414 = phi i64 [ %79, %321 ], [ %329, %403 ]
  %415 = phi i32 [ %323, %321 ], [ %330, %403 ]
  %416 = icmp eq i64 %413, %414
  br i1 %416, label %456, label %417

417:                                              ; preds = %412
  %418 = inttoptr i64 %414 to i32*
  %419 = load atomic i32, i32* %418 monotonic, align 4
  %420 = inttoptr i64 %413 to i32*
  %421 = load atomic i32, i32* %420 monotonic, align 4
  %422 = lshr i32 %419, 1
  %423 = load i64, i64* %4, align 8
  %424 = and i64 %423, -4294967296
  %425 = shl i32 %422, 2
  %426 = add i32 %425, 20
  %427 = sext i32 %426 to i64
  %428 = add i64 %423, 7
  %429 = add i64 %428, %427
  %430 = inttoptr i64 %429 to i32*
  %431 = load atomic i32, i32* %430 monotonic, align 4
  %432 = zext i32 %431 to i64
  %433 = or i64 %424, %432
  %434 = add i64 %433, 7
  %435 = inttoptr i64 %434 to i32*
  %436 = load i32, i32* %435, align 4
  %437 = lshr i32 %436, 9
  %438 = lshr i32 %421, 1
  %439 = shl i32 %438, 2
  %440 = add i32 %439, 20
  %441 = sext i32 %440 to i64
  %442 = add i64 %428, %441
  %443 = inttoptr i64 %442 to i32*
  %444 = load atomic i32, i32* %443 monotonic, align 4
  %445 = zext i32 %444 to i64
  %446 = or i64 %424, %445
  %447 = add i64 %446, 7
  %448 = inttoptr i64 %447 to i32*
  %449 = load i32, i32* %448, align 4
  %450 = lshr i32 %449, 9
  %451 = icmp ult i32 %437, %450
  br i1 %451, label %452, label %456

452:                                              ; preds = %417
  %453 = load atomic i32, i32* %420 monotonic, align 4
  %454 = load atomic i32, i32* %418 monotonic, align 4
  store atomic volatile i32 %454, i32* %420 monotonic, align 4
  store atomic volatile i32 %453, i32* %418 monotonic, align 4
  %455 = add i32 %415, 1
  br label %456

456:                                              ; preds = %412, %452, %417
  %457 = phi i32 [ %455, %452 ], [ %415, %417 ], [ %415, %412 ]
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %466

459:                                              ; preds = %456
  %460 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_(i64 %13, i64 %413, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  %461 = add i64 %413, 4
  %462 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_(i64 %461, i64 %6, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br i1 %462, label %463, label %465

463:                                              ; preds = %459
  br i1 %460, label %480, label %464

464:                                              ; preds = %463, %478
  br label %5

465:                                              ; preds = %459
  br i1 %460, label %476, label %466

466:                                              ; preds = %465, %456
  %467 = sub i64 %413, %13
  %468 = trunc i64 %467 to i32
  %469 = sdiv i32 %468, 4
  %470 = sub i64 %6, %413
  %471 = trunc i64 %470 to i32
  %472 = sdiv i32 %471, 4
  %473 = icmp slt i32 %469, %472
  br i1 %473, label %474, label %478

474:                                              ; preds = %466
  tail call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %13, i64 %413, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  %475 = add i64 %413, 4
  br label %476

476:                                              ; preds = %474, %465
  %477 = phi i64 [ %461, %465 ], [ %475, %474 ]
  br label %10

478:                                              ; preds = %466
  %479 = add i64 %413, 4
  tail call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %479, i64 %6, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %464

480:                                              ; preds = %463, %201, %12, %12, %159, %198, %17, %53, %56, %60, %65, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64, i64, i64, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = inttoptr i64 %1 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = inttoptr i64 %0 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = lshr i32 %6, 1
  %10 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, -4294967296
  %13 = shl i32 %9, 2
  %14 = add i32 %13, 20
  %15 = sext i32 %14 to i64
  %16 = add i64 %11, 7
  %17 = add i64 %16, %15
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %12, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = lshr i32 %24, 9
  %26 = lshr i32 %8, 1
  %27 = shl i32 %26, 2
  %28 = add i32 %27, 20
  %29 = sext i32 %28 to i64
  %30 = add i64 %16, %29
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %12, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = lshr i32 %37, 9
  %39 = icmp ult i32 %25, %38
  %40 = inttoptr i64 %2 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = load atomic i32, i32* %5 monotonic, align 4
  %43 = lshr i32 %41, 1
  %44 = shl i32 %43, 2
  %45 = add i32 %44, 20
  %46 = sext i32 %45 to i64
  %47 = add i64 %16, %46
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %12, %50
  %52 = add i64 %51, 7
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = lshr i32 %54, 9
  %56 = lshr i32 %42, 1
  %57 = shl i32 %56, 2
  %58 = add i32 %57, 20
  %59 = sext i32 %58 to i64
  %60 = add i64 %16, %59
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %12, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = lshr i32 %67, 9
  %69 = icmp ult i32 %55, %68
  br i1 %39, label %109, label %70

70:                                               ; preds = %4
  br i1 %69, label %71, label %150

71:                                               ; preds = %70
  %72 = load atomic i32, i32* %5 monotonic, align 4
  %73 = load atomic i32, i32* %40 monotonic, align 4
  store atomic volatile i32 %73, i32* %5 monotonic, align 4
  store atomic volatile i32 %72, i32* %40 monotonic, align 4
  %74 = load atomic i32, i32* %5 monotonic, align 4
  %75 = load atomic i32, i32* %7 monotonic, align 4
  %76 = lshr i32 %74, 1
  %77 = load i64, i64* %10, align 8
  %78 = and i64 %77, -4294967296
  %79 = shl i32 %76, 2
  %80 = add i32 %79, 20
  %81 = sext i32 %80 to i64
  %82 = add i64 %77, 7
  %83 = add i64 %82, %81
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %78, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = lshr i32 %90, 9
  %92 = lshr i32 %75, 1
  %93 = shl i32 %92, 2
  %94 = add i32 %93, 20
  %95 = sext i32 %94 to i64
  %96 = add i64 %82, %95
  %97 = inttoptr i64 %96 to i32*
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %78, %99
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = lshr i32 %103, 9
  %105 = icmp ult i32 %91, %104
  br i1 %105, label %106, label %150

106:                                              ; preds = %71
  %107 = load atomic i32, i32* %7 monotonic, align 4
  %108 = load atomic i32, i32* %5 monotonic, align 4
  store atomic volatile i32 %108, i32* %7 monotonic, align 4
  store atomic volatile i32 %107, i32* %5 monotonic, align 4
  br label %150

109:                                              ; preds = %4
  %110 = load atomic i32, i32* %7 monotonic, align 4
  br i1 %69, label %111, label %113

111:                                              ; preds = %109
  %112 = load atomic i32, i32* %40 monotonic, align 4
  store atomic volatile i32 %112, i32* %7 monotonic, align 4
  store atomic volatile i32 %110, i32* %40 monotonic, align 4
  br label %150

113:                                              ; preds = %109
  %114 = load atomic i32, i32* %5 monotonic, align 4
  store atomic volatile i32 %114, i32* %7 monotonic, align 4
  store atomic volatile i32 %110, i32* %5 monotonic, align 4
  %115 = load atomic i32, i32* %40 monotonic, align 4
  %116 = load atomic i32, i32* %5 monotonic, align 4
  %117 = lshr i32 %115, 1
  %118 = load i64, i64* %10, align 8
  %119 = and i64 %118, -4294967296
  %120 = shl i32 %117, 2
  %121 = add i32 %120, 20
  %122 = sext i32 %121 to i64
  %123 = add i64 %118, 7
  %124 = add i64 %123, %122
  %125 = inttoptr i64 %124 to i32*
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = zext i32 %126 to i64
  %128 = or i64 %119, %127
  %129 = add i64 %128, 7
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = lshr i32 %131, 9
  %133 = lshr i32 %116, 1
  %134 = shl i32 %133, 2
  %135 = add i32 %134, 20
  %136 = sext i32 %135 to i64
  %137 = add i64 %123, %136
  %138 = inttoptr i64 %137 to i32*
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = zext i32 %139 to i64
  %141 = or i64 %119, %140
  %142 = add i64 %141, 7
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = lshr i32 %144, 9
  %146 = icmp ult i32 %132, %145
  br i1 %146, label %147, label %150

147:                                              ; preds = %113
  %148 = load atomic i32, i32* %5 monotonic, align 4
  %149 = load atomic i32, i32* %40 monotonic, align 4
  store atomic volatile i32 %149, i32* %5 monotonic, align 4
  store atomic volatile i32 %148, i32* %40 monotonic, align 4
  br label %150

150:                                              ; preds = %113, %147, %71, %106, %70, %111
  %151 = phi i32 [ 1, %111 ], [ 0, %70 ], [ 2, %106 ], [ 1, %71 ], [ 2, %147 ], [ 1, %113 ]
  ret i32 %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64, i64, i64, i64, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %1, i64 %2, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %4)
  %7 = inttoptr i64 %3 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = inttoptr i64 %2 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = lshr i32 %8, 1
  %12 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, -4294967296
  %15 = shl i32 %11, 2
  %16 = add i32 %15, 20
  %17 = sext i32 %16 to i64
  %18 = add i64 %13, 7
  %19 = add i64 %18, %17
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %14, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = lshr i32 %26, 9
  %28 = lshr i32 %10, 1
  %29 = shl i32 %28, 2
  %30 = add i32 %29, 20
  %31 = sext i32 %30 to i64
  %32 = add i64 %18, %31
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %14, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = lshr i32 %39, 9
  %41 = icmp ult i32 %27, %40
  br i1 %41, label %42, label %120

42:                                               ; preds = %5
  %43 = load atomic i32, i32* %9 monotonic, align 4
  %44 = load atomic i32, i32* %7 monotonic, align 4
  store atomic volatile i32 %44, i32* %9 monotonic, align 4
  store atomic volatile i32 %43, i32* %7 monotonic, align 4
  %45 = add i32 %6, 1
  %46 = load atomic i32, i32* %9 monotonic, align 4
  %47 = inttoptr i64 %1 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = lshr i32 %46, 1
  %50 = load i64, i64* %12, align 8
  %51 = and i64 %50, -4294967296
  %52 = shl i32 %49, 2
  %53 = add i32 %52, 20
  %54 = sext i32 %53 to i64
  %55 = add i64 %50, 7
  %56 = add i64 %55, %54
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %51, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = lshr i32 %63, 9
  %65 = lshr i32 %48, 1
  %66 = shl i32 %65, 2
  %67 = add i32 %66, 20
  %68 = sext i32 %67 to i64
  %69 = add i64 %55, %68
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %51, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = lshr i32 %76, 9
  %78 = icmp ult i32 %64, %77
  br i1 %78, label %79, label %120

79:                                               ; preds = %42
  %80 = load atomic i32, i32* %47 monotonic, align 4
  %81 = load atomic i32, i32* %9 monotonic, align 4
  store atomic volatile i32 %81, i32* %47 monotonic, align 4
  store atomic volatile i32 %80, i32* %9 monotonic, align 4
  %82 = add i32 %6, 2
  %83 = load atomic i32, i32* %47 monotonic, align 4
  %84 = inttoptr i64 %0 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = lshr i32 %83, 1
  %87 = load i64, i64* %12, align 8
  %88 = and i64 %87, -4294967296
  %89 = shl i32 %86, 2
  %90 = add i32 %89, 20
  %91 = sext i32 %90 to i64
  %92 = add i64 %87, 7
  %93 = add i64 %92, %91
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %88, %96
  %98 = add i64 %97, 7
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = lshr i32 %100, 9
  %102 = lshr i32 %85, 1
  %103 = shl i32 %102, 2
  %104 = add i32 %103, 20
  %105 = sext i32 %104 to i64
  %106 = add i64 %92, %105
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %88, %109
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = lshr i32 %113, 9
  %115 = icmp ult i32 %101, %114
  br i1 %115, label %116, label %120

116:                                              ; preds = %79
  %117 = load atomic i32, i32* %84 monotonic, align 4
  %118 = load atomic i32, i32* %47 monotonic, align 4
  store atomic volatile i32 %118, i32* %84 monotonic, align 4
  store atomic volatile i32 %117, i32* %47 monotonic, align 4
  %119 = add i32 %6, 3
  br label %120

120:                                              ; preds = %42, %116, %79, %5
  %121 = phi i32 [ %119, %116 ], [ %82, %79 ], [ %45, %42 ], [ %6, %5 ]
  ret i32 %121
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64, i64, i64, i64, i64, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64 %0, i64 %1, i64 %2, i64 %3, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %5)
  %8 = inttoptr i64 %4 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = inttoptr i64 %3 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = lshr i32 %9, 1
  %13 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, -4294967296
  %16 = shl i32 %12, 2
  %17 = add i32 %16, 20
  %18 = sext i32 %17 to i64
  %19 = add i64 %14, 7
  %20 = add i64 %19, %18
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %15, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = lshr i32 %27, 9
  %29 = lshr i32 %11, 1
  %30 = shl i32 %29, 2
  %31 = add i32 %30, 20
  %32 = sext i32 %31 to i64
  %33 = add i64 %19, %32
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %15, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = lshr i32 %40, 9
  %42 = icmp ult i32 %28, %41
  br i1 %42, label %43, label %158

43:                                               ; preds = %6
  %44 = load atomic i32, i32* %10 monotonic, align 4
  %45 = load atomic i32, i32* %8 monotonic, align 4
  store atomic volatile i32 %45, i32* %10 monotonic, align 4
  store atomic volatile i32 %44, i32* %8 monotonic, align 4
  %46 = add i32 %7, 1
  %47 = load atomic i32, i32* %10 monotonic, align 4
  %48 = inttoptr i64 %2 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = lshr i32 %47, 1
  %51 = load i64, i64* %13, align 8
  %52 = and i64 %51, -4294967296
  %53 = shl i32 %50, 2
  %54 = add i32 %53, 20
  %55 = sext i32 %54 to i64
  %56 = add i64 %51, 7
  %57 = add i64 %56, %55
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %52, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = lshr i32 %64, 9
  %66 = lshr i32 %49, 1
  %67 = shl i32 %66, 2
  %68 = add i32 %67, 20
  %69 = sext i32 %68 to i64
  %70 = add i64 %56, %69
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %52, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = lshr i32 %77, 9
  %79 = icmp ult i32 %65, %78
  br i1 %79, label %80, label %158

80:                                               ; preds = %43
  %81 = load atomic i32, i32* %48 monotonic, align 4
  %82 = load atomic i32, i32* %10 monotonic, align 4
  store atomic volatile i32 %82, i32* %48 monotonic, align 4
  store atomic volatile i32 %81, i32* %10 monotonic, align 4
  %83 = add i32 %7, 2
  %84 = load atomic i32, i32* %48 monotonic, align 4
  %85 = inttoptr i64 %1 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = lshr i32 %84, 1
  %88 = load i64, i64* %13, align 8
  %89 = and i64 %88, -4294967296
  %90 = shl i32 %87, 2
  %91 = add i32 %90, 20
  %92 = sext i32 %91 to i64
  %93 = add i64 %88, 7
  %94 = add i64 %93, %92
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %89, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = lshr i32 %101, 9
  %103 = lshr i32 %86, 1
  %104 = shl i32 %103, 2
  %105 = add i32 %104, 20
  %106 = sext i32 %105 to i64
  %107 = add i64 %93, %106
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %89, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = lshr i32 %114, 9
  %116 = icmp ult i32 %102, %115
  br i1 %116, label %117, label %158

117:                                              ; preds = %80
  %118 = load atomic i32, i32* %85 monotonic, align 4
  %119 = load atomic i32, i32* %48 monotonic, align 4
  store atomic volatile i32 %119, i32* %85 monotonic, align 4
  store atomic volatile i32 %118, i32* %48 monotonic, align 4
  %120 = add i32 %7, 3
  %121 = load atomic i32, i32* %85 monotonic, align 4
  %122 = inttoptr i64 %0 to i32*
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = lshr i32 %121, 1
  %125 = load i64, i64* %13, align 8
  %126 = and i64 %125, -4294967296
  %127 = shl i32 %124, 2
  %128 = add i32 %127, 20
  %129 = sext i32 %128 to i64
  %130 = add i64 %125, 7
  %131 = add i64 %130, %129
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = zext i32 %133 to i64
  %135 = or i64 %126, %134
  %136 = add i64 %135, 7
  %137 = inttoptr i64 %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = lshr i32 %138, 9
  %140 = lshr i32 %123, 1
  %141 = shl i32 %140, 2
  %142 = add i32 %141, 20
  %143 = sext i32 %142 to i64
  %144 = add i64 %130, %143
  %145 = inttoptr i64 %144 to i32*
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %126, %147
  %149 = add i64 %148, 7
  %150 = inttoptr i64 %149 to i32*
  %151 = load i32, i32* %150, align 4
  %152 = lshr i32 %151, 9
  %153 = icmp ult i32 %139, %152
  br i1 %153, label %154, label %158

154:                                              ; preds = %117
  %155 = load atomic i32, i32* %122 monotonic, align 4
  %156 = load atomic i32, i32* %85 monotonic, align 4
  store atomic volatile i32 %156, i32* %122 monotonic, align 4
  store atomic volatile i32 %155, i32* %85 monotonic, align 4
  %157 = add i32 %7, 4
  br label %158

158:                                              ; preds = %43, %117, %154, %80, %6
  %159 = phi i32 [ %157, %154 ], [ %120, %117 ], [ %83, %80 ], [ %46, %43 ], [ %7, %6 ]
  ret i32 %159
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64, i64, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = add i64 %0, 8
  %5 = add i64 %0, 4
  %6 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %5, i64 %4, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  %7 = add i64 %0, 12
  %8 = icmp eq i64 %7, %1
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %12

11:                                               ; preds = %95, %3
  ret void

12:                                               ; preds = %9, %95
  %13 = phi i64 [ %4, %9 ], [ %14, %95 ]
  %14 = phi i64 [ %7, %9 ], [ %96, %95 ]
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = inttoptr i64 %13 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = lshr i32 %16, 1
  %20 = load i64, i64* %10, align 8
  %21 = and i64 %20, -4294967296
  %22 = shl i32 %19, 2
  %23 = add i32 %22, 20
  %24 = sext i32 %23 to i64
  %25 = add i64 %20, 7
  %26 = add i64 %25, %24
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %21, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = lshr i32 %33, 9
  %35 = lshr i32 %18, 1
  %36 = shl i32 %35, 2
  %37 = add i32 %36, 20
  %38 = sext i32 %37 to i64
  %39 = add i64 %25, %38
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %21, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = lshr i32 %46, 9
  %48 = icmp ult i32 %34, %47
  br i1 %48, label %49, label %95

49:                                               ; preds = %12
  %50 = load atomic i32, i32* %15 monotonic, align 4
  %51 = lshr i32 %50, 1
  %52 = shl i32 %51, 2
  %53 = add i32 %52, 20
  %54 = sext i32 %53 to i64
  br label %55

55:                                               ; preds = %62, %49
  %56 = phi i64 [ %13, %49 ], [ %63, %62 ]
  %57 = phi i64 [ %14, %49 ], [ %56, %62 ]
  %58 = inttoptr i64 %56 to i32*
  %59 = inttoptr i64 %57 to i32*
  %60 = load atomic i32, i32* %58 monotonic, align 4
  store atomic volatile i32 %60, i32* %59 monotonic, align 4
  %61 = icmp eq i64 %56, %0
  br i1 %61, label %92, label %62

62:                                               ; preds = %55
  %63 = add i64 %56, -4
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = load i64, i64* %10, align 8
  %67 = and i64 %66, -4294967296
  %68 = add i64 %66, 7
  %69 = add i64 %68, %54
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %67, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = lshr i32 %76, 9
  %78 = lshr i32 %65, 1
  %79 = shl i32 %78, 2
  %80 = add i32 %79, 20
  %81 = sext i32 %80 to i64
  %82 = add i64 %68, %81
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %67, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = lshr i32 %89, 9
  %91 = icmp ult i32 %77, %90
  br i1 %91, label %55, label %92

92:                                               ; preds = %55, %62
  %93 = phi i64 [ %56, %62 ], [ %0, %55 ]
  %94 = inttoptr i64 %93 to i32*
  store atomic volatile i32 %50, i32* %94 monotonic, align 4
  br label %95

95:                                               ; preds = %92, %12
  %96 = add i64 %14, 4
  %97 = icmp eq i64 %96, %1
  br i1 %97, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_(i64, i64, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = sub i64 %1, %0
  %5 = trunc i64 %4 to i32
  %6 = sdiv i32 %5, 4
  switch i32 %6, label %62 [
    i32 0, label %163
    i32 1, label %163
    i32 2, label %7
    i32 3, label %47
    i32 4, label %51
    i32 5, label %56
  ]

7:                                                ; preds = %3
  %8 = add i64 %1, -4
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = inttoptr i64 %0 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %10, 1
  %14 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967296
  %17 = shl i32 %13, 2
  %18 = add i32 %17, 20
  %19 = sext i32 %18 to i64
  %20 = add i64 %15, 7
  %21 = add i64 %20, %19
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %16, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = lshr i32 %28, 9
  %30 = lshr i32 %12, 1
  %31 = shl i32 %30, 2
  %32 = add i32 %31, 20
  %33 = sext i32 %32 to i64
  %34 = add i64 %20, %33
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %16, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = lshr i32 %41, 9
  %43 = icmp ult i32 %29, %42
  br i1 %43, label %44, label %163

44:                                               ; preds = %7
  %45 = load atomic i32, i32* %11 monotonic, align 4
  %46 = load atomic i32, i32* %9 monotonic, align 4
  store atomic volatile i32 %46, i32* %11 monotonic, align 4
  store atomic volatile i32 %45, i32* %9 monotonic, align 4
  br label %163

47:                                               ; preds = %3
  %48 = add i64 %0, 4
  %49 = add i64 %1, -4
  %50 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %48, i64 %49, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %163

51:                                               ; preds = %3
  %52 = add i64 %0, 4
  %53 = add i64 %0, 8
  %54 = add i64 %1, -4
  %55 = tail call i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64 %0, i64 %52, i64 %53, i64 %54, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %163

56:                                               ; preds = %3
  %57 = add i64 %0, 4
  %58 = add i64 %0, 8
  %59 = add i64 %0, 12
  %60 = add i64 %1, -4
  %61 = tail call i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64 %0, i64 %57, i64 %58, i64 %59, i64 %60, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %163

62:                                               ; preds = %3
  %63 = add i64 %0, 8
  %64 = add i64 %0, 4
  %65 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %64, i64 %63, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  %66 = add i64 %0, 12
  %67 = icmp eq i64 %66, %1
  br i1 %67, label %163, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %70

70:                                               ; preds = %68, %156
  %71 = phi i32 [ 0, %68 ], [ %157, %156 ]
  %72 = phi i64 [ %63, %68 ], [ %73, %156 ]
  %73 = phi i64 [ %66, %68 ], [ %158, %156 ]
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = inttoptr i64 %72 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = lshr i32 %75, 1
  %79 = load i64, i64* %69, align 8
  %80 = and i64 %79, -4294967296
  %81 = shl i32 %78, 2
  %82 = add i32 %81, 20
  %83 = sext i32 %82 to i64
  %84 = add i64 %79, 7
  %85 = add i64 %84, %83
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %80, %88
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = lshr i32 %92, 9
  %94 = lshr i32 %77, 1
  %95 = shl i32 %94, 2
  %96 = add i32 %95, 20
  %97 = sext i32 %96 to i64
  %98 = add i64 %84, %97
  %99 = inttoptr i64 %98 to i32*
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %80, %101
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = lshr i32 %105, 9
  %107 = icmp ult i32 %93, %106
  br i1 %107, label %108, label %156

108:                                              ; preds = %70
  %109 = load atomic i32, i32* %74 monotonic, align 4
  %110 = lshr i32 %109, 1
  %111 = shl i32 %110, 2
  %112 = add i32 %111, 20
  %113 = sext i32 %112 to i64
  br label %114

114:                                              ; preds = %121, %108
  %115 = phi i64 [ %72, %108 ], [ %122, %121 ]
  %116 = phi i64 [ %73, %108 ], [ %115, %121 ]
  %117 = inttoptr i64 %115 to i32*
  %118 = inttoptr i64 %116 to i32*
  %119 = load atomic i32, i32* %117 monotonic, align 4
  store atomic volatile i32 %119, i32* %118 monotonic, align 4
  %120 = icmp eq i64 %115, %0
  br i1 %120, label %151, label %121

121:                                              ; preds = %114
  %122 = add i64 %115, -4
  %123 = inttoptr i64 %122 to i32*
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = load i64, i64* %69, align 8
  %126 = and i64 %125, -4294967296
  %127 = add i64 %125, 7
  %128 = add i64 %127, %113
  %129 = inttoptr i64 %128 to i32*
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = zext i32 %130 to i64
  %132 = or i64 %126, %131
  %133 = add i64 %132, 7
  %134 = inttoptr i64 %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = lshr i32 %135, 9
  %137 = lshr i32 %124, 1
  %138 = shl i32 %137, 2
  %139 = add i32 %138, 20
  %140 = sext i32 %139 to i64
  %141 = add i64 %127, %140
  %142 = inttoptr i64 %141 to i32*
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %126, %144
  %146 = add i64 %145, 7
  %147 = inttoptr i64 %146 to i32*
  %148 = load i32, i32* %147, align 4
  %149 = lshr i32 %148, 9
  %150 = icmp ult i32 %136, %149
  br i1 %150, label %114, label %151

151:                                              ; preds = %114, %121
  %152 = phi i64 [ %115, %121 ], [ %0, %114 ]
  %153 = inttoptr i64 %152 to i32*
  store atomic volatile i32 %109, i32* %153 monotonic, align 4
  %154 = add i32 %71, 1
  %155 = icmp eq i32 %154, 8
  br i1 %155, label %160, label %156

156:                                              ; preds = %151, %70
  %157 = phi i32 [ %71, %70 ], [ %154, %151 ]
  %158 = add i64 %73, 4
  %159 = icmp eq i64 %158, %1
  br i1 %159, label %163, label %70

160:                                              ; preds = %151
  %161 = add i64 %73, 4
  %162 = icmp eq i64 %161, %1
  br label %163

163:                                              ; preds = %156, %62, %160, %7, %44, %3, %3, %56, %51, %47
  %164 = phi i1 [ true, %56 ], [ true, %51 ], [ true, %47 ], [ true, %3 ], [ true, %3 ], [ true, %44 ], [ true, %7 ], [ %162, %160 ], [ true, %62 ], [ true, %156 ]
  ret i1 %164
}

declare i32 @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary.1159"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64, i64, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1214", %"struct.v8::internal::EnumIndexComparator.1214"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %5

5:                                                ; preds = %379, %3
  %6 = phi i64 [ %1, %3 ], [ %337, %379 ]
  %7 = phi i64 [ %0, %3 ], [ %13, %379 ]
  %8 = add i64 %6, -4
  %9 = inttoptr i64 %8 to i32*
  br label %10

10:                                               ; preds = %391, %5
  %11 = phi i64 [ %7, %5 ], [ %392, %391 ]
  br label %12

12:                                               ; preds = %227, %10
  %13 = phi i64 [ %11, %10 ], [ %176, %227 ]
  %14 = sub i64 %6, %13
  %15 = trunc i64 %14 to i32
  %16 = sdiv i32 %15, 4
  switch i32 %16, label %62 [
    i32 0, label %395
    i32 1, label %395
    i32 2, label %17
    i32 3, label %47
    i32 4, label %51
    i32 5, label %56
  ]

17:                                               ; preds = %12
  %18 = add i64 %6, -4
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = inttoptr i64 %13 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = ashr i32 %20, 1
  %24 = sext i32 %23 to i64
  %25 = load i64, i64* %4, align 8
  %26 = mul i64 %24, 51539607552
  %27 = add i64 %26, 120259084288
  %28 = ashr exact i64 %27, 32
  %29 = add i64 %25, 7
  %30 = add i64 %28, %29
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = lshr i32 %32, 9
  %34 = ashr i32 %22, 1
  %35 = sext i32 %34 to i64
  %36 = mul i64 %35, 51539607552
  %37 = add i64 %36, 120259084288
  %38 = ashr exact i64 %37, 32
  %39 = add i64 %38, %29
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = lshr i32 %41, 9
  %43 = icmp ult i32 %33, %42
  br i1 %43, label %44, label %395

44:                                               ; preds = %17
  %45 = load atomic i32, i32* %21 monotonic, align 4
  %46 = load atomic i32, i32* %19 monotonic, align 4
  store atomic volatile i32 %46, i32* %21 monotonic, align 4
  store atomic volatile i32 %45, i32* %19 monotonic, align 4
  br label %395

47:                                               ; preds = %12
  %48 = add i64 %13, 4
  %49 = add i64 %6, -4
  %50 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %13, i64 %48, i64 %49, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  br label %395

51:                                               ; preds = %12
  %52 = add i64 %13, 4
  %53 = add i64 %13, 8
  %54 = add i64 %6, -4
  %55 = tail call i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64 %13, i64 %52, i64 %53, i64 %54, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  br label %395

56:                                               ; preds = %12
  %57 = add i64 %13, 4
  %58 = add i64 %13, 8
  %59 = add i64 %13, 12
  %60 = add i64 %6, -4
  %61 = tail call i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64 %13, i64 %57, i64 %58, i64 %59, i64 %60, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  br label %395

62:                                               ; preds = %12
  %63 = icmp slt i32 %15, 124
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  tail call void @_ZNSt3__118__insertion_sort_3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %13, i64 %6, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  br label %395

65:                                               ; preds = %62
  %66 = icmp sgt i32 %15, 3999
  %67 = lshr i32 %16, 1
  %68 = zext i32 %67 to i64
  %69 = shl nuw nsw i64 %68, 2
  %70 = add i64 %69, %13
  br i1 %66, label %71, label %77

71:                                               ; preds = %65
  %72 = and i32 %16, -4
  %73 = zext i32 %72 to i64
  %74 = add i64 %13, %73
  %75 = add i64 %70, %73
  %76 = tail call i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64 %13, i64 %74, i64 %70, i64 %75, i64 %8, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  br label %79

77:                                               ; preds = %65
  %78 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %13, i64 %70, i64 %8, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  br label %79

79:                                               ; preds = %77, %71
  %80 = phi i32 [ %76, %71 ], [ %78, %77 ]
  %81 = inttoptr i64 %13 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = inttoptr i64 %70 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = ashr i32 %82, 1
  %86 = sext i32 %85 to i64
  %87 = load i64, i64* %4, align 8
  %88 = mul i64 %86, 51539607552
  %89 = add i64 %88, 120259084288
  %90 = ashr exact i64 %89, 32
  %91 = add i64 %87, 7
  %92 = add i64 %90, %91
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = lshr i32 %94, 9
  %96 = ashr i32 %84, 1
  %97 = sext i32 %96 to i64
  %98 = mul i64 %97, 51539607552
  %99 = add i64 %98, 120259084288
  %100 = ashr exact i64 %99, 32
  %101 = add i64 %100, %91
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = lshr i32 %103, 9
  %105 = icmp ult i32 %95, %104
  br i1 %105, label %262, label %106

106:                                              ; preds = %79, %233
  %107 = phi i64 [ %108, %233 ], [ %8, %79 ]
  %108 = add i64 %107, -4
  %109 = icmp eq i64 %13, %108
  br i1 %109, label %110, label %233

110:                                              ; preds = %106
  %111 = add i64 %13, 4
  %112 = load atomic i32, i32* %81 monotonic, align 4
  %113 = load atomic i32, i32* %9 monotonic, align 4
  %114 = ashr i32 %112, 1
  %115 = sext i32 %114 to i64
  %116 = mul i64 %115, 51539607552
  %117 = add i64 %116, 120259084288
  %118 = ashr exact i64 %117, 32
  %119 = add i64 %118, %91
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = lshr i32 %121, 9
  %123 = ashr i32 %113, 1
  %124 = sext i32 %123 to i64
  %125 = mul i64 %124, 51539607552
  %126 = add i64 %125, 120259084288
  %127 = ashr exact i64 %126, 32
  %128 = add i64 %127, %91
  %129 = inttoptr i64 %128 to i32*
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = lshr i32 %130, 9
  %132 = icmp ult i32 %122, %131
  br i1 %132, label %167, label %133

133:                                              ; preds = %110
  %134 = icmp eq i64 %111, %8
  br i1 %134, label %395, label %135

135:                                              ; preds = %133, %164
  %136 = phi i64 [ %165, %164 ], [ %111, %133 ]
  %137 = load atomic i32, i32* %81 monotonic, align 4
  %138 = inttoptr i64 %136 to i32*
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = ashr i32 %137, 1
  %141 = sext i32 %140 to i64
  %142 = mul i64 %141, 51539607552
  %143 = add i64 %142, 120259084288
  %144 = ashr exact i64 %143, 32
  %145 = add i64 %144, %91
  %146 = inttoptr i64 %145 to i32*
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = lshr i32 %147, 9
  %149 = ashr i32 %139, 1
  %150 = sext i32 %149 to i64
  %151 = mul i64 %150, 51539607552
  %152 = add i64 %151, 120259084288
  %153 = ashr exact i64 %152, 32
  %154 = add i64 %153, %91
  %155 = inttoptr i64 %154 to i32*
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = lshr i32 %156, 9
  %158 = icmp ult i32 %148, %157
  br i1 %158, label %159, label %164

159:                                              ; preds = %135
  %160 = inttoptr i64 %136 to i32*
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = load atomic i32, i32* %9 monotonic, align 4
  store atomic volatile i32 %162, i32* %160 monotonic, align 4
  store atomic volatile i32 %161, i32* %9 monotonic, align 4
  %163 = add i64 %136, 4
  br label %167

164:                                              ; preds = %135
  %165 = add i64 %136, 4
  %166 = icmp eq i64 %165, %8
  br i1 %166, label %395, label %135

167:                                              ; preds = %110, %159
  %168 = phi i64 [ %111, %110 ], [ %163, %159 ]
  %169 = icmp eq i64 %168, %8
  br i1 %169, label %395, label %170

170:                                              ; preds = %167, %230
  %171 = phi i64 [ %205, %230 ], [ %8, %167 ]
  %172 = phi i64 [ %199, %230 ], [ %168, %167 ]
  %173 = load i64, i64* %4, align 8
  %174 = add i64 %173, 7
  br label %175

175:                                              ; preds = %175, %170
  %176 = phi i64 [ %172, %170 ], [ %199, %175 ]
  %177 = load atomic i32, i32* %81 monotonic, align 4
  %178 = inttoptr i64 %176 to i32*
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = ashr i32 %177, 1
  %181 = sext i32 %180 to i64
  %182 = mul i64 %181, 51539607552
  %183 = add i64 %182, 120259084288
  %184 = ashr exact i64 %183, 32
  %185 = add i64 %184, %174
  %186 = inttoptr i64 %185 to i32*
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = lshr i32 %187, 9
  %189 = ashr i32 %179, 1
  %190 = sext i32 %189 to i64
  %191 = mul i64 %190, 51539607552
  %192 = add i64 %191, 120259084288
  %193 = ashr exact i64 %192, 32
  %194 = add i64 %193, %174
  %195 = inttoptr i64 %194 to i32*
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = lshr i32 %196, 9
  %198 = icmp ult i32 %188, %197
  %199 = add i64 %176, 4
  br i1 %198, label %200, label %175

200:                                              ; preds = %175
  %201 = inttoptr i64 %176 to i32*
  br label %202

202:                                              ; preds = %200, %202
  %203 = phi i64 [ %205, %202 ], [ %171, %200 ]
  %204 = load atomic i32, i32* %81 monotonic, align 4
  %205 = add i64 %203, -4
  %206 = inttoptr i64 %205 to i32*
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = ashr i32 %204, 1
  %209 = sext i32 %208 to i64
  %210 = mul i64 %209, 51539607552
  %211 = add i64 %210, 120259084288
  %212 = ashr exact i64 %211, 32
  %213 = add i64 %212, %174
  %214 = inttoptr i64 %213 to i32*
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = lshr i32 %215, 9
  %217 = ashr i32 %207, 1
  %218 = sext i32 %217 to i64
  %219 = mul i64 %218, 51539607552
  %220 = add i64 %219, 120259084288
  %221 = ashr exact i64 %220, 32
  %222 = add i64 %221, %174
  %223 = inttoptr i64 %222 to i32*
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = lshr i32 %224, 9
  %226 = icmp ult i32 %216, %225
  br i1 %226, label %202, label %227

227:                                              ; preds = %202
  %228 = inttoptr i64 %205 to i32*
  %229 = icmp ult i64 %176, %205
  br i1 %229, label %230, label %12

230:                                              ; preds = %227
  %231 = load atomic i32, i32* %201 monotonic, align 4
  %232 = load atomic i32, i32* %228 monotonic, align 4
  store atomic volatile i32 %232, i32* %201 monotonic, align 4
  store atomic volatile i32 %231, i32* %228 monotonic, align 4
  br label %170

233:                                              ; preds = %106
  %234 = inttoptr i64 %108 to i32*
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = load atomic i32, i32* %83 monotonic, align 4
  %237 = ashr i32 %235, 1
  %238 = sext i32 %237 to i64
  %239 = mul i64 %238, 51539607552
  %240 = add i64 %239, 120259084288
  %241 = ashr exact i64 %240, 32
  %242 = add i64 %241, %91
  %243 = inttoptr i64 %242 to i32*
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = lshr i32 %244, 9
  %246 = ashr i32 %236, 1
  %247 = sext i32 %246 to i64
  %248 = mul i64 %247, 51539607552
  %249 = add i64 %248, 120259084288
  %250 = ashr exact i64 %249, 32
  %251 = add i64 %250, %91
  %252 = inttoptr i64 %251 to i32*
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = lshr i32 %253, 9
  %255 = icmp ult i32 %245, %254
  br i1 %255, label %256, label %106

256:                                              ; preds = %233
  %257 = inttoptr i64 %13 to i32*
  %258 = inttoptr i64 %108 to i32*
  %259 = load atomic i32, i32* %257 monotonic, align 4
  %260 = load atomic i32, i32* %258 monotonic, align 4
  store atomic volatile i32 %260, i32* %257 monotonic, align 4
  store atomic volatile i32 %259, i32* %258 monotonic, align 4
  %261 = add i32 %80, 1
  br label %262

262:                                              ; preds = %79, %256
  %263 = phi i64 [ %108, %256 ], [ %8, %79 ]
  %264 = phi i32 [ %261, %256 ], [ %80, %79 ]
  %265 = add i64 %13, 4
  %266 = icmp ult i64 %265, %263
  br i1 %266, label %267, label %336

267:                                              ; preds = %262, %330
  %268 = phi i64 [ %304, %330 ], [ %263, %262 ]
  %269 = phi i64 [ %299, %330 ], [ %265, %262 ]
  %270 = phi i64 [ %335, %330 ], [ %70, %262 ]
  %271 = phi i32 [ %333, %330 ], [ %264, %262 ]
  %272 = inttoptr i64 %270 to i32*
  %273 = load i64, i64* %4, align 8
  %274 = add i64 %273, 7
  br label %275

275:                                              ; preds = %275, %267
  %276 = phi i64 [ %269, %267 ], [ %299, %275 ]
  %277 = inttoptr i64 %276 to i32*
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = load atomic i32, i32* %272 monotonic, align 4
  %280 = ashr i32 %278, 1
  %281 = sext i32 %280 to i64
  %282 = mul i64 %281, 51539607552
  %283 = add i64 %282, 120259084288
  %284 = ashr exact i64 %283, 32
  %285 = add i64 %284, %274
  %286 = inttoptr i64 %285 to i32*
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = lshr i32 %287, 9
  %289 = ashr i32 %279, 1
  %290 = sext i32 %289 to i64
  %291 = mul i64 %290, 51539607552
  %292 = add i64 %291, 120259084288
  %293 = ashr exact i64 %292, 32
  %294 = add i64 %293, %274
  %295 = inttoptr i64 %294 to i32*
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = lshr i32 %296, 9
  %298 = icmp ult i32 %288, %297
  %299 = add i64 %276, 4
  br i1 %298, label %275, label %300

300:                                              ; preds = %275
  %301 = inttoptr i64 %276 to i32*
  br label %302

302:                                              ; preds = %300, %302
  %303 = phi i64 [ %304, %302 ], [ %268, %300 ]
  %304 = add i64 %303, -4
  %305 = inttoptr i64 %304 to i32*
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = load atomic i32, i32* %272 monotonic, align 4
  %308 = ashr i32 %306, 1
  %309 = sext i32 %308 to i64
  %310 = mul i64 %309, 51539607552
  %311 = add i64 %310, 120259084288
  %312 = ashr exact i64 %311, 32
  %313 = add i64 %312, %274
  %314 = inttoptr i64 %313 to i32*
  %315 = load atomic i32, i32* %314 monotonic, align 4
  %316 = lshr i32 %315, 9
  %317 = ashr i32 %307, 1
  %318 = sext i32 %317 to i64
  %319 = mul i64 %318, 51539607552
  %320 = add i64 %319, 120259084288
  %321 = ashr exact i64 %320, 32
  %322 = add i64 %321, %274
  %323 = inttoptr i64 %322 to i32*
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = lshr i32 %324, 9
  %326 = icmp ult i32 %316, %325
  br i1 %326, label %327, label %302

327:                                              ; preds = %302
  %328 = inttoptr i64 %304 to i32*
  %329 = icmp ugt i64 %276, %304
  br i1 %329, label %336, label %330

330:                                              ; preds = %327
  %331 = load atomic i32, i32* %301 monotonic, align 4
  %332 = load atomic i32, i32* %328 monotonic, align 4
  store atomic volatile i32 %332, i32* %301 monotonic, align 4
  store atomic volatile i32 %331, i32* %328 monotonic, align 4
  %333 = add i32 %271, 1
  %334 = icmp eq i64 %270, %276
  %335 = select i1 %334, i64 %304, i64 %270
  br label %267

336:                                              ; preds = %327, %262
  %337 = phi i64 [ %265, %262 ], [ %276, %327 ]
  %338 = phi i64 [ %70, %262 ], [ %270, %327 ]
  %339 = phi i32 [ %264, %262 ], [ %271, %327 ]
  %340 = icmp eq i64 %337, %338
  br i1 %340, label %371, label %341

341:                                              ; preds = %336
  %342 = inttoptr i64 %338 to i32*
  %343 = load atomic i32, i32* %342 monotonic, align 4
  %344 = inttoptr i64 %337 to i32*
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = ashr i32 %343, 1
  %347 = sext i32 %346 to i64
  %348 = load i64, i64* %4, align 8
  %349 = mul i64 %347, 51539607552
  %350 = add i64 %349, 120259084288
  %351 = ashr exact i64 %350, 32
  %352 = add i64 %348, 7
  %353 = add i64 %351, %352
  %354 = inttoptr i64 %353 to i32*
  %355 = load atomic i32, i32* %354 monotonic, align 4
  %356 = lshr i32 %355, 9
  %357 = ashr i32 %345, 1
  %358 = sext i32 %357 to i64
  %359 = mul i64 %358, 51539607552
  %360 = add i64 %359, 120259084288
  %361 = ashr exact i64 %360, 32
  %362 = add i64 %361, %352
  %363 = inttoptr i64 %362 to i32*
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = lshr i32 %364, 9
  %366 = icmp ult i32 %356, %365
  br i1 %366, label %367, label %371

367:                                              ; preds = %341
  %368 = load atomic i32, i32* %344 monotonic, align 4
  %369 = load atomic i32, i32* %342 monotonic, align 4
  store atomic volatile i32 %369, i32* %344 monotonic, align 4
  store atomic volatile i32 %368, i32* %342 monotonic, align 4
  %370 = add i32 %339, 1
  br label %371

371:                                              ; preds = %336, %367, %341
  %372 = phi i32 [ %370, %367 ], [ %339, %341 ], [ %339, %336 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %381

374:                                              ; preds = %371
  %375 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_(i64 %13, i64 %337, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  %376 = add i64 %337, 4
  %377 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_(i64 %376, i64 %6, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  br i1 %377, label %378, label %380

378:                                              ; preds = %374
  br i1 %375, label %395, label %379

379:                                              ; preds = %378, %393
  br label %5

380:                                              ; preds = %374
  br i1 %375, label %391, label %381

381:                                              ; preds = %380, %371
  %382 = sub i64 %337, %13
  %383 = trunc i64 %382 to i32
  %384 = sdiv i32 %383, 4
  %385 = sub i64 %6, %337
  %386 = trunc i64 %385 to i32
  %387 = sdiv i32 %386, 4
  %388 = icmp slt i32 %384, %387
  br i1 %388, label %389, label %393

389:                                              ; preds = %381
  tail call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %13, i64 %337, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  %390 = add i64 %337, 4
  br label %391

391:                                              ; preds = %389, %380
  %392 = phi i64 [ %376, %380 ], [ %390, %389 ]
  br label %10

393:                                              ; preds = %381
  %394 = add i64 %337, 4
  tail call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %394, i64 %6, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  br label %379

395:                                              ; preds = %378, %167, %12, %12, %133, %164, %17, %44, %47, %51, %56, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64, i64, i64, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = inttoptr i64 %1 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = inttoptr i64 %0 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %6, 1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1214", %"struct.v8::internal::EnumIndexComparator.1214"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = mul i64 %10, 51539607552
  %14 = add i64 %13, 120259084288
  %15 = ashr exact i64 %14, 32
  %16 = add i64 %12, 7
  %17 = add i64 %15, %16
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 9
  %21 = ashr i32 %8, 1
  %22 = sext i32 %21 to i64
  %23 = mul i64 %22, 51539607552
  %24 = add i64 %23, 120259084288
  %25 = ashr exact i64 %24, 32
  %26 = add i64 %25, %16
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = lshr i32 %28, 9
  %30 = icmp ult i32 %20, %29
  %31 = inttoptr i64 %2 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = load atomic i32, i32* %5 monotonic, align 4
  %34 = ashr i32 %32, 1
  %35 = sext i32 %34 to i64
  %36 = mul i64 %35, 51539607552
  %37 = add i64 %36, 120259084288
  %38 = ashr exact i64 %37, 32
  %39 = add i64 %38, %16
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = lshr i32 %41, 9
  %43 = ashr i32 %33, 1
  %44 = sext i32 %43 to i64
  %45 = mul i64 %44, 51539607552
  %46 = add i64 %45, 120259084288
  %47 = ashr exact i64 %46, 32
  %48 = add i64 %47, %16
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = lshr i32 %50, 9
  %52 = icmp ult i32 %42, %51
  br i1 %30, label %83, label %53

53:                                               ; preds = %4
  br i1 %52, label %54, label %115

54:                                               ; preds = %53
  %55 = load atomic i32, i32* %5 monotonic, align 4
  %56 = load atomic i32, i32* %31 monotonic, align 4
  store atomic volatile i32 %56, i32* %5 monotonic, align 4
  store atomic volatile i32 %55, i32* %31 monotonic, align 4
  %57 = load atomic i32, i32* %5 monotonic, align 4
  %58 = load atomic i32, i32* %7 monotonic, align 4
  %59 = ashr i32 %57, 1
  %60 = sext i32 %59 to i64
  %61 = load i64, i64* %11, align 8
  %62 = mul i64 %60, 51539607552
  %63 = add i64 %62, 120259084288
  %64 = ashr exact i64 %63, 32
  %65 = add i64 %61, 7
  %66 = add i64 %64, %65
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = lshr i32 %68, 9
  %70 = ashr i32 %58, 1
  %71 = sext i32 %70 to i64
  %72 = mul i64 %71, 51539607552
  %73 = add i64 %72, 120259084288
  %74 = ashr exact i64 %73, 32
  %75 = add i64 %74, %65
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = lshr i32 %77, 9
  %79 = icmp ult i32 %69, %78
  br i1 %79, label %80, label %115

80:                                               ; preds = %54
  %81 = load atomic i32, i32* %7 monotonic, align 4
  %82 = load atomic i32, i32* %5 monotonic, align 4
  store atomic volatile i32 %82, i32* %7 monotonic, align 4
  store atomic volatile i32 %81, i32* %5 monotonic, align 4
  br label %115

83:                                               ; preds = %4
  %84 = load atomic i32, i32* %7 monotonic, align 4
  br i1 %52, label %85, label %87

85:                                               ; preds = %83
  %86 = load atomic i32, i32* %31 monotonic, align 4
  store atomic volatile i32 %86, i32* %7 monotonic, align 4
  store atomic volatile i32 %84, i32* %31 monotonic, align 4
  br label %115

87:                                               ; preds = %83
  %88 = load atomic i32, i32* %5 monotonic, align 4
  store atomic volatile i32 %88, i32* %7 monotonic, align 4
  store atomic volatile i32 %84, i32* %5 monotonic, align 4
  %89 = load atomic i32, i32* %31 monotonic, align 4
  %90 = load atomic i32, i32* %5 monotonic, align 4
  %91 = ashr i32 %89, 1
  %92 = sext i32 %91 to i64
  %93 = load i64, i64* %11, align 8
  %94 = mul i64 %92, 51539607552
  %95 = add i64 %94, 120259084288
  %96 = ashr exact i64 %95, 32
  %97 = add i64 %93, 7
  %98 = add i64 %96, %97
  %99 = inttoptr i64 %98 to i32*
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = lshr i32 %100, 9
  %102 = ashr i32 %90, 1
  %103 = sext i32 %102 to i64
  %104 = mul i64 %103, 51539607552
  %105 = add i64 %104, 120259084288
  %106 = ashr exact i64 %105, 32
  %107 = add i64 %106, %97
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = lshr i32 %109, 9
  %111 = icmp ult i32 %101, %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %87
  %113 = load atomic i32, i32* %5 monotonic, align 4
  %114 = load atomic i32, i32* %31 monotonic, align 4
  store atomic volatile i32 %114, i32* %5 monotonic, align 4
  store atomic volatile i32 %113, i32* %31 monotonic, align 4
  br label %115

115:                                              ; preds = %87, %112, %54, %80, %53, %85
  %116 = phi i32 [ 1, %85 ], [ 0, %53 ], [ 2, %80 ], [ 1, %54 ], [ 2, %112 ], [ 1, %87 ]
  ret i32 %116
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64, i64, i64, i64, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %1, i64 %2, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %4)
  %7 = inttoptr i64 %3 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = inttoptr i64 %2 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = ashr i32 %8, 1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1214", %"struct.v8::internal::EnumIndexComparator.1214"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = mul i64 %12, 51539607552
  %16 = add i64 %15, 120259084288
  %17 = ashr exact i64 %16, 32
  %18 = add i64 %14, 7
  %19 = add i64 %17, %18
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = lshr i32 %21, 9
  %23 = ashr i32 %10, 1
  %24 = sext i32 %23 to i64
  %25 = mul i64 %24, 51539607552
  %26 = add i64 %25, 120259084288
  %27 = ashr exact i64 %26, 32
  %28 = add i64 %27, %18
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = lshr i32 %30, 9
  %32 = icmp ult i32 %22, %31
  br i1 %32, label %33, label %93

33:                                               ; preds = %5
  %34 = load atomic i32, i32* %9 monotonic, align 4
  %35 = load atomic i32, i32* %7 monotonic, align 4
  store atomic volatile i32 %35, i32* %9 monotonic, align 4
  store atomic volatile i32 %34, i32* %7 monotonic, align 4
  %36 = add i32 %6, 1
  %37 = load atomic i32, i32* %9 monotonic, align 4
  %38 = inttoptr i64 %1 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = ashr i32 %37, 1
  %41 = sext i32 %40 to i64
  %42 = load i64, i64* %13, align 8
  %43 = mul i64 %41, 51539607552
  %44 = add i64 %43, 120259084288
  %45 = ashr exact i64 %44, 32
  %46 = add i64 %42, 7
  %47 = add i64 %45, %46
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = lshr i32 %49, 9
  %51 = ashr i32 %39, 1
  %52 = sext i32 %51 to i64
  %53 = mul i64 %52, 51539607552
  %54 = add i64 %53, 120259084288
  %55 = ashr exact i64 %54, 32
  %56 = add i64 %55, %46
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = lshr i32 %58, 9
  %60 = icmp ult i32 %50, %59
  br i1 %60, label %61, label %93

61:                                               ; preds = %33
  %62 = load atomic i32, i32* %38 monotonic, align 4
  %63 = load atomic i32, i32* %9 monotonic, align 4
  store atomic volatile i32 %63, i32* %38 monotonic, align 4
  store atomic volatile i32 %62, i32* %9 monotonic, align 4
  %64 = add i32 %6, 2
  %65 = load atomic i32, i32* %38 monotonic, align 4
  %66 = inttoptr i64 %0 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = ashr i32 %65, 1
  %69 = sext i32 %68 to i64
  %70 = load i64, i64* %13, align 8
  %71 = mul i64 %69, 51539607552
  %72 = add i64 %71, 120259084288
  %73 = ashr exact i64 %72, 32
  %74 = add i64 %70, 7
  %75 = add i64 %73, %74
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = lshr i32 %77, 9
  %79 = ashr i32 %67, 1
  %80 = sext i32 %79 to i64
  %81 = mul i64 %80, 51539607552
  %82 = add i64 %81, 120259084288
  %83 = ashr exact i64 %82, 32
  %84 = add i64 %83, %74
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = lshr i32 %86, 9
  %88 = icmp ult i32 %78, %87
  br i1 %88, label %89, label %93

89:                                               ; preds = %61
  %90 = load atomic i32, i32* %66 monotonic, align 4
  %91 = load atomic i32, i32* %38 monotonic, align 4
  store atomic volatile i32 %91, i32* %66 monotonic, align 4
  store atomic volatile i32 %90, i32* %38 monotonic, align 4
  %92 = add i32 %6, 3
  br label %93

93:                                               ; preds = %33, %89, %61, %5
  %94 = phi i32 [ %92, %89 ], [ %64, %61 ], [ %36, %33 ], [ %6, %5 ]
  ret i32 %94
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64, i64, i64, i64, i64, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64 %0, i64 %1, i64 %2, i64 %3, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %5)
  %8 = inttoptr i64 %4 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = inttoptr i64 %3 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %9, 1
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1214", %"struct.v8::internal::EnumIndexComparator.1214"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = mul i64 %13, 51539607552
  %17 = add i64 %16, 120259084288
  %18 = ashr exact i64 %17, 32
  %19 = add i64 %15, 7
  %20 = add i64 %18, %19
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = lshr i32 %22, 9
  %24 = ashr i32 %11, 1
  %25 = sext i32 %24 to i64
  %26 = mul i64 %25, 51539607552
  %27 = add i64 %26, 120259084288
  %28 = ashr exact i64 %27, 32
  %29 = add i64 %28, %19
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = lshr i32 %31, 9
  %33 = icmp ult i32 %23, %32
  br i1 %33, label %34, label %122

34:                                               ; preds = %6
  %35 = load atomic i32, i32* %10 monotonic, align 4
  %36 = load atomic i32, i32* %8 monotonic, align 4
  store atomic volatile i32 %36, i32* %10 monotonic, align 4
  store atomic volatile i32 %35, i32* %8 monotonic, align 4
  %37 = add i32 %7, 1
  %38 = load atomic i32, i32* %10 monotonic, align 4
  %39 = inttoptr i64 %2 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = ashr i32 %38, 1
  %42 = sext i32 %41 to i64
  %43 = load i64, i64* %14, align 8
  %44 = mul i64 %42, 51539607552
  %45 = add i64 %44, 120259084288
  %46 = ashr exact i64 %45, 32
  %47 = add i64 %43, 7
  %48 = add i64 %46, %47
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = lshr i32 %50, 9
  %52 = ashr i32 %40, 1
  %53 = sext i32 %52 to i64
  %54 = mul i64 %53, 51539607552
  %55 = add i64 %54, 120259084288
  %56 = ashr exact i64 %55, 32
  %57 = add i64 %56, %47
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = lshr i32 %59, 9
  %61 = icmp ult i32 %51, %60
  br i1 %61, label %62, label %122

62:                                               ; preds = %34
  %63 = load atomic i32, i32* %39 monotonic, align 4
  %64 = load atomic i32, i32* %10 monotonic, align 4
  store atomic volatile i32 %64, i32* %39 monotonic, align 4
  store atomic volatile i32 %63, i32* %10 monotonic, align 4
  %65 = add i32 %7, 2
  %66 = load atomic i32, i32* %39 monotonic, align 4
  %67 = inttoptr i64 %1 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = ashr i32 %66, 1
  %70 = sext i32 %69 to i64
  %71 = load i64, i64* %14, align 8
  %72 = mul i64 %70, 51539607552
  %73 = add i64 %72, 120259084288
  %74 = ashr exact i64 %73, 32
  %75 = add i64 %71, 7
  %76 = add i64 %74, %75
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = lshr i32 %78, 9
  %80 = ashr i32 %68, 1
  %81 = sext i32 %80 to i64
  %82 = mul i64 %81, 51539607552
  %83 = add i64 %82, 120259084288
  %84 = ashr exact i64 %83, 32
  %85 = add i64 %84, %75
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = lshr i32 %87, 9
  %89 = icmp ult i32 %79, %88
  br i1 %89, label %90, label %122

90:                                               ; preds = %62
  %91 = load atomic i32, i32* %67 monotonic, align 4
  %92 = load atomic i32, i32* %39 monotonic, align 4
  store atomic volatile i32 %92, i32* %67 monotonic, align 4
  store atomic volatile i32 %91, i32* %39 monotonic, align 4
  %93 = add i32 %7, 3
  %94 = load atomic i32, i32* %67 monotonic, align 4
  %95 = inttoptr i64 %0 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = ashr i32 %94, 1
  %98 = sext i32 %97 to i64
  %99 = load i64, i64* %14, align 8
  %100 = mul i64 %98, 51539607552
  %101 = add i64 %100, 120259084288
  %102 = ashr exact i64 %101, 32
  %103 = add i64 %99, 7
  %104 = add i64 %102, %103
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = lshr i32 %106, 9
  %108 = ashr i32 %96, 1
  %109 = sext i32 %108 to i64
  %110 = mul i64 %109, 51539607552
  %111 = add i64 %110, 120259084288
  %112 = ashr exact i64 %111, 32
  %113 = add i64 %112, %103
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = lshr i32 %115, 9
  %117 = icmp ult i32 %107, %116
  br i1 %117, label %118, label %122

118:                                              ; preds = %90
  %119 = load atomic i32, i32* %95 monotonic, align 4
  %120 = load atomic i32, i32* %67 monotonic, align 4
  store atomic volatile i32 %120, i32* %95 monotonic, align 4
  store atomic volatile i32 %119, i32* %67 monotonic, align 4
  %121 = add i32 %7, 4
  br label %122

122:                                              ; preds = %34, %90, %118, %62, %6
  %123 = phi i32 [ %121, %118 ], [ %93, %90 ], [ %65, %62 ], [ %37, %34 ], [ %7, %6 ]
  ret i32 %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64, i64, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = add i64 %0, 8
  %5 = add i64 %0, 4
  %6 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %5, i64 %4, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  %7 = add i64 %0, 12
  %8 = icmp eq i64 %7, %1
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1214", %"struct.v8::internal::EnumIndexComparator.1214"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %12

11:                                               ; preds = %77, %3
  ret void

12:                                               ; preds = %9, %77
  %13 = phi i64 [ %4, %9 ], [ %14, %77 ]
  %14 = phi i64 [ %7, %9 ], [ %78, %77 ]
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = inttoptr i64 %13 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = ashr i32 %16, 1
  %20 = sext i32 %19 to i64
  %21 = load i64, i64* %10, align 8
  %22 = mul i64 %20, 51539607552
  %23 = add i64 %22, 120259084288
  %24 = ashr exact i64 %23, 32
  %25 = add i64 %21, 7
  %26 = add i64 %24, %25
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = lshr i32 %28, 9
  %30 = ashr i32 %18, 1
  %31 = sext i32 %30 to i64
  %32 = mul i64 %31, 51539607552
  %33 = add i64 %32, 120259084288
  %34 = ashr exact i64 %33, 32
  %35 = add i64 %34, %25
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = lshr i32 %37, 9
  %39 = icmp ult i32 %29, %38
  br i1 %39, label %40, label %77

40:                                               ; preds = %12
  %41 = load atomic i32, i32* %15 monotonic, align 4
  %42 = ashr i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = mul i64 %43, 51539607552
  %45 = add i64 %44, 120259084288
  %46 = ashr exact i64 %45, 32
  br label %47

47:                                               ; preds = %54, %40
  %48 = phi i64 [ %13, %40 ], [ %55, %54 ]
  %49 = phi i64 [ %14, %40 ], [ %48, %54 ]
  %50 = inttoptr i64 %48 to i32*
  %51 = inttoptr i64 %49 to i32*
  %52 = load atomic i32, i32* %50 monotonic, align 4
  store atomic volatile i32 %52, i32* %51 monotonic, align 4
  %53 = icmp eq i64 %48, %0
  br i1 %53, label %74, label %54

54:                                               ; preds = %47
  %55 = add i64 %48, -4
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = load i64, i64* %10, align 8
  %59 = add i64 %58, 7
  %60 = add i64 %59, %46
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = lshr i32 %62, 9
  %64 = ashr i32 %57, 1
  %65 = sext i32 %64 to i64
  %66 = mul i64 %65, 51539607552
  %67 = add i64 %66, 120259084288
  %68 = ashr exact i64 %67, 32
  %69 = add i64 %68, %59
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = lshr i32 %71, 9
  %73 = icmp ult i32 %63, %72
  br i1 %73, label %47, label %74

74:                                               ; preds = %47, %54
  %75 = phi i64 [ %48, %54 ], [ %0, %47 ]
  %76 = inttoptr i64 %75 to i32*
  store atomic volatile i32 %41, i32* %76 monotonic, align 4
  br label %77

77:                                               ; preds = %74, %12
  %78 = add i64 %14, 4
  %79 = icmp eq i64 %78, %1
  br i1 %79, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_(i64, i64, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = sub i64 %1, %0
  %5 = trunc i64 %4 to i32
  %6 = sdiv i32 %5, 4
  switch i32 %6, label %53 [
    i32 0, label %136
    i32 1, label %136
    i32 2, label %7
    i32 3, label %38
    i32 4, label %42
    i32 5, label %47
  ]

7:                                                ; preds = %3
  %8 = add i64 %1, -4
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = inttoptr i64 %0 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = ashr i32 %10, 1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1214", %"struct.v8::internal::EnumIndexComparator.1214"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = mul i64 %14, 51539607552
  %18 = add i64 %17, 120259084288
  %19 = ashr exact i64 %18, 32
  %20 = add i64 %16, 7
  %21 = add i64 %19, %20
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = lshr i32 %23, 9
  %25 = ashr i32 %12, 1
  %26 = sext i32 %25 to i64
  %27 = mul i64 %26, 51539607552
  %28 = add i64 %27, 120259084288
  %29 = ashr exact i64 %28, 32
  %30 = add i64 %29, %20
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = lshr i32 %32, 9
  %34 = icmp ult i32 %24, %33
  br i1 %34, label %35, label %136

35:                                               ; preds = %7
  %36 = load atomic i32, i32* %11 monotonic, align 4
  %37 = load atomic i32, i32* %9 monotonic, align 4
  store atomic volatile i32 %37, i32* %11 monotonic, align 4
  store atomic volatile i32 %36, i32* %9 monotonic, align 4
  br label %136

38:                                               ; preds = %3
  %39 = add i64 %0, 4
  %40 = add i64 %1, -4
  %41 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %39, i64 %40, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  br label %136

42:                                               ; preds = %3
  %43 = add i64 %0, 4
  %44 = add i64 %0, 8
  %45 = add i64 %1, -4
  %46 = tail call i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64 %0, i64 %43, i64 %44, i64 %45, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  br label %136

47:                                               ; preds = %3
  %48 = add i64 %0, 4
  %49 = add i64 %0, 8
  %50 = add i64 %0, 12
  %51 = add i64 %1, -4
  %52 = tail call i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64 %0, i64 %48, i64 %49, i64 %50, i64 %51, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  br label %136

53:                                               ; preds = %3
  %54 = add i64 %0, 8
  %55 = add i64 %0, 4
  %56 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %55, i64 %54, %"struct.v8::internal::EnumIndexComparator.1214"* dereferenceable(8) %2)
  %57 = add i64 %0, 12
  %58 = icmp eq i64 %57, %1
  br i1 %58, label %136, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1214", %"struct.v8::internal::EnumIndexComparator.1214"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %61

61:                                               ; preds = %59, %129
  %62 = phi i32 [ 0, %59 ], [ %130, %129 ]
  %63 = phi i64 [ %54, %59 ], [ %64, %129 ]
  %64 = phi i64 [ %57, %59 ], [ %131, %129 ]
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = inttoptr i64 %63 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = ashr i32 %66, 1
  %70 = sext i32 %69 to i64
  %71 = load i64, i64* %60, align 8
  %72 = mul i64 %70, 51539607552
  %73 = add i64 %72, 120259084288
  %74 = ashr exact i64 %73, 32
  %75 = add i64 %71, 7
  %76 = add i64 %74, %75
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = lshr i32 %78, 9
  %80 = ashr i32 %68, 1
  %81 = sext i32 %80 to i64
  %82 = mul i64 %81, 51539607552
  %83 = add i64 %82, 120259084288
  %84 = ashr exact i64 %83, 32
  %85 = add i64 %84, %75
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = lshr i32 %87, 9
  %89 = icmp ult i32 %79, %88
  br i1 %89, label %90, label %129

90:                                               ; preds = %61
  %91 = load atomic i32, i32* %65 monotonic, align 4
  %92 = ashr i32 %91, 1
  %93 = sext i32 %92 to i64
  %94 = mul i64 %93, 51539607552
  %95 = add i64 %94, 120259084288
  %96 = ashr exact i64 %95, 32
  br label %97

97:                                               ; preds = %104, %90
  %98 = phi i64 [ %63, %90 ], [ %105, %104 ]
  %99 = phi i64 [ %64, %90 ], [ %98, %104 ]
  %100 = inttoptr i64 %98 to i32*
  %101 = inttoptr i64 %99 to i32*
  %102 = load atomic i32, i32* %100 monotonic, align 4
  store atomic volatile i32 %102, i32* %101 monotonic, align 4
  %103 = icmp eq i64 %98, %0
  br i1 %103, label %124, label %104

104:                                              ; preds = %97
  %105 = add i64 %98, -4
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = load i64, i64* %60, align 8
  %109 = add i64 %108, 7
  %110 = add i64 %109, %96
  %111 = inttoptr i64 %110 to i32*
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = lshr i32 %112, 9
  %114 = ashr i32 %107, 1
  %115 = sext i32 %114 to i64
  %116 = mul i64 %115, 51539607552
  %117 = add i64 %116, 120259084288
  %118 = ashr exact i64 %117, 32
  %119 = add i64 %118, %109
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = lshr i32 %121, 9
  %123 = icmp ult i32 %113, %122
  br i1 %123, label %97, label %124

124:                                              ; preds = %97, %104
  %125 = phi i64 [ %98, %104 ], [ %0, %97 ]
  %126 = inttoptr i64 %125 to i32*
  store atomic volatile i32 %91, i32* %126 monotonic, align 4
  %127 = add i32 %62, 1
  %128 = icmp eq i32 %127, 8
  br i1 %128, label %133, label %129

129:                                              ; preds = %124, %61
  %130 = phi i32 [ %62, %61 ], [ %127, %124 ]
  %131 = add i64 %64, 4
  %132 = icmp eq i64 %131, %1
  br i1 %132, label %136, label %61

133:                                              ; preds = %124
  %134 = add i64 %64, 4
  %135 = icmp eq i64 %134, %1
  br label %136

136:                                              ; preds = %129, %53, %133, %7, %35, %3, %3, %47, %42, %38
  %137 = phi i1 [ true, %47 ], [ true, %42 ], [ true, %38 ], [ true, %3 ], [ true, %3 ], [ true, %35 ], [ true, %7 ], [ %135, %133 ], [ true, %53 ], [ true, %129 ]
  ret i1 %137
}

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.v8::base::TemplateHashMapEntry"* @_ZNK2v84base19TemplateHashMapImplINS_8internal6HandleINS2_4NameEEEiNS2_12_GLOBAL__N_114NameComparatorENS2_20ZoneAllocationPolicyEE5ProbeIS5_EEPNS0_20TemplateHashMapEntryIS5_iEERKT_j(%"class.v8::base::TemplateHashMapImpl"* nocapture readonly, %"class.v8::internal::Handle.1141"* nocapture readonly dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = and i32 %6, %2
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 2
  %10 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %9, align 8
  %11 = getelementptr %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %10, i64 %8
  %13 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %10, i64 %8, i32 3
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %94, label %16

16:                                               ; preds = %3
  %17 = getelementptr %"class.v8::internal::Handle.1141", %"class.v8::internal::Handle.1141"* %1, i64 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %16, %84
  %19 = phi i32 [ %5, %16 ], [ %85, %84 ]
  %20 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %12, %16 ], [ %90, %84 ]
  %21 = phi i64 [ %8, %16 ], [ %89, %84 ]
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %23 = load i64*, i64** %17, align 8
  %24 = getelementptr %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %20, i64 0, i32 0, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %94, label %27

27:                                               ; preds = %18
  %28 = icmp eq i64* %23, null
  %29 = icmp eq i64* %25, null
  %30 = or i1 %28, %29
  %31 = load i64, i64* %23, align 8
  br i1 %30, label %37, label %32

32:                                               ; preds = %27
  %33 = load i64, i64* %25, align 8
  %34 = trunc i64 %31 to i32
  %35 = trunc i64 %33 to i32
  %36 = icmp eq i32 %34, %35
  br i1 %36, label %94, label %37

37:                                               ; preds = %32, %27
  %38 = and i64 %31, -4294967296
  %39 = add i64 %31, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp ult i16 %46, 32
  br i1 %47, label %48, label %60

48:                                               ; preds = %37
  %49 = load i64, i64* %25, align 8
  %50 = and i64 %49, -4294967296
  %51 = add i64 %49, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %50, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = icmp ult i16 %58, 32
  br i1 %59, label %84, label %60

60:                                               ; preds = %48, %37
  %61 = load atomic i32, i32* %40 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %38, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = icmp eq i16 %66, 64
  br i1 %67, label %84, label %68

68:                                               ; preds = %60
  %69 = load i64, i64* %25, align 8
  %70 = and i64 %69, -4294967296
  %71 = add i64 %69, -1
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %70, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = icmp eq i16 %78, 64
  br i1 %79, label %84, label %80

80:                                               ; preds = %68
  %81 = tail call zeroext i1 @_ZN2v88internal6String10SlowEqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %22, i64* %23, i64* %25) #7
  br i1 %81, label %94, label %82

82:                                               ; preds = %80
  %83 = load i32, i32* %4, align 8
  br label %84

84:                                               ; preds = %82, %48, %60, %68
  %85 = phi i32 [ %83, %82 ], [ %19, %48 ], [ %19, %60 ], [ %19, %68 ]
  %86 = add nuw nsw i64 %21, 1
  %87 = add i32 %85, -1
  %88 = zext i32 %87 to i64
  %89 = and i64 %86, %88
  %90 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %10, i64 %89
  %91 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %10, i64 %89, i32 3
  %92 = load i8, i8* %91, align 8, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %18

94:                                               ; preds = %80, %32, %18, %84, %3
  %95 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %12, %3 ], [ %90, %84 ], [ %20, %18 ], [ %20, %32 ], [ %20, %80 ]
  ret %"struct.v8::base::TemplateHashMapEntry"* %95
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplINS_8internal6HandleINS2_4NameEEEiNS2_12_GLOBAL__N_114NameComparatorENS2_20ZoneAllocationPolicyEE14FillEmptyEntryEPNS0_20TemplateHashMapEntryIS5_iEERKS5_RKij(%"class.v8::base::TemplateHashMapImpl"* nocapture, %"struct.v8::base::TemplateHashMapEntry"*, %"class.v8::internal::Handle.1141"* nocapture readonly dereferenceable(8), i32, i32) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.v8::internal::Handle.1141"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %1 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %1, i64 0, i32 1
  store i32 %3, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %1, i64 0, i32 2
  store i32 %4, i32* %10, align 4
  %11 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %1, i64 0, i32 3
  store i8 1, i8* %11, align 8
  %12 = getelementptr %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %12, align 4
  %15 = lshr i32 %14, 2
  %16 = add i32 %15, %14
  %17 = getelementptr %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp ult i32 %16, %18
  br i1 %19, label %81, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 2
  %22 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %21, align 8
  %23 = shl i32 %18, 1
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 1, i32 0
  %26 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %25, align 8
  %27 = mul nuw nsw i64 %24, 24
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %26, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %26, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ugt i64 %27, %32
  br i1 %33, label %34, label %36, !prof !3

34:                                               ; preds = %20
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %26, i64 %27) #7
  br label %38

36:                                               ; preds = %20
  %37 = add i64 %29, %27
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to %"struct.v8::base::TemplateHashMapEntry"*
  store %"struct.v8::base::TemplateHashMapEntry"* %40, %"struct.v8::base::TemplateHashMapEntry"** %21, align 8
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.25, i64 0, i64 0)) #9
  unreachable

43:                                               ; preds = %38
  store i32 %23, i32* %17, align 8
  %44 = icmp eq i32 %23, 0
  br i1 %44, label %57, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 0, i32 3
  store i8 0, i8* %46, align 8
  %47 = load i32, i32* %17, align 8
  %48 = icmp ugt i32 %47, 1
  br i1 %48, label %49, label %57

49:                                               ; preds = %45, %49
  %50 = phi i64 [ %53, %49 ], [ 1, %45 ]
  %51 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %21, align 8
  %52 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %51, i64 %50, i32 3
  store i8 0, i8* %52, align 8
  %53 = add nuw nsw i64 %50, 1
  %54 = load i32, i32* %17, align 8
  %55 = zext i32 %54 to i64
  %56 = icmp ult i64 %53, %55
  br i1 %56, label %49, label %57

57:                                               ; preds = %49, %45, %43
  store i32 0, i32* %12, align 4
  %58 = icmp eq i32 %14, 0
  br i1 %58, label %79, label %59

59:                                               ; preds = %57, %75
  %60 = phi i32 [ %76, %75 ], [ %14, %57 ]
  %61 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %77, %75 ], [ %22, %57 ]
  %62 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %61, i64 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %61, i64 0, i32 0
  %67 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %61, i64 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = tail call fastcc %"struct.v8::base::TemplateHashMapEntry"* @_ZNK2v84base19TemplateHashMapImplINS_8internal6HandleINS2_4NameEEEiNS2_12_GLOBAL__N_114NameComparatorENS2_20ZoneAllocationPolicyEE5ProbeIS5_EEPNS0_20TemplateHashMapEntryIS5_iEERKT_j(%"class.v8::base::TemplateHashMapImpl"* %0, %"class.v8::internal::Handle.1141"* dereferenceable(8) %66, i32 %68) #7
  %70 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %61, i64 0, i32 1
  %71 = load i32, i32* %67, align 4
  %72 = load i32, i32* %70, align 4
  %73 = tail call fastcc %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplINS_8internal6HandleINS2_4NameEEEiNS2_12_GLOBAL__N_114NameComparatorENS2_20ZoneAllocationPolicyEE14FillEmptyEntryEPNS0_20TemplateHashMapEntryIS5_iEERKS5_RKij(%"class.v8::base::TemplateHashMapImpl"* %0, %"struct.v8::base::TemplateHashMapEntry"* %69, %"class.v8::internal::Handle.1141"* dereferenceable(8) %66, i32 %72, i32 %71) #7
  %74 = add i32 %60, -1
  br label %75

75:                                               ; preds = %59, %65
  %76 = phi i32 [ %74, %65 ], [ %60, %59 ]
  %77 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %61, i64 1
  %78 = icmp eq i32 %76, 0
  br i1 %78, label %79, label %59

79:                                               ; preds = %75, %57
  %80 = tail call fastcc %"struct.v8::base::TemplateHashMapEntry"* @_ZNK2v84base19TemplateHashMapImplINS_8internal6HandleINS2_4NameEEEiNS2_12_GLOBAL__N_114NameComparatorENS2_20ZoneAllocationPolicyEE5ProbeIS5_EEPNS0_20TemplateHashMapEntryIS5_iEERKT_j(%"class.v8::base::TemplateHashMapImpl"* %0, %"class.v8::internal::Handle.1141"* dereferenceable(8) %2, i32 %4)
  br label %81

81:                                               ; preds = %5, %79
  %82 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %80, %79 ], [ %1, %5 ]
  ret %"struct.v8::base::TemplateHashMapEntry"* %82
}

declare zeroext i1 @_ZN2v88internal6String10SlowEqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!"branch_weights", i32 1073205, i32 2146410443}
!8 = !{!"branch_weights", i32 2146410443, i32 1073205}
