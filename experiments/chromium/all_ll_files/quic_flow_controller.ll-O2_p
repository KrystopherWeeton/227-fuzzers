; ModuleID = '../../net/third_party/quiche/src/quic/core/quic_flow_controller.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/quic_flow_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::QuicFlowController" = type { %"class.quic::QuicFlowControllerInterface", %"class.quic::QuicSession"*, %"class.quic::QuicConnection"*, i32, i8, i8, i64, i64, i64, i64, i64, i64, i64, i8, %"class.quic::QuicFlowControllerInterface"*, i64, %"class.quic::QuicTime" }
%"class.quic::QuicFlowControllerInterface" = type { i32 (...)** }
%"class.quic::QuicConnection" = type <{ %"class.quic::QuicFramerVisitorInterface", %"class.quic::QuicBlockedWriterInterface", %"class.quic::QuicPacketCreator::DelegateInterface", %"class.quic::QuicSentPacketManager::NetworkChangeVisitor", %"class.quic::QuicNetworkBlackholeDetector::Delegate", %"class.quic::QuicIdleNetworkDetector::Delegate", %"class.quic::QuicPathValidator::SendDelegate", %"class.quic::QuicConnectionIdManagerVisitorInterface", %"class.quic::QuicFramer", i8, i8, i8, i8, [4 x i8], %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicAlarmFactory"*, %"struct.quic::PerPacketOptions"*, %"class.quic::QuicPacketWriter"*, i8, i8, [6 x i8], %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", i8, i8, [2 x i8], %"class.quic::QuicSocketAddress", [4 x i8], %"struct.quic::QuicConnection::PathState", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], i64, i8*, i8, [7 x i8], %"struct.quic::QuicPacketHeader", i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.std::__1::deque", %"class.quiche::QuicheCircularDeque", i64, i64, %"class.std::__1::unique_ptr.46", i32, [4 x i8], i64, %"struct.quic::QuicConnectionStats", %"class.quic::UberReceivedPacketManager", i32, i8, i8, [2 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, i32, %"class.quic::QuicOneBlockArena", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicConnectionVisitorInterface"*, %"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicPacketCreator", %"class.quic::QuicTime", %"class.quic::QuicSentPacketManager", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", [4 x i8], %"class.quic::QuicConnectionId", i8, [7 x i8], %"class.std::__1::vector", i64, i16, [6 x i8], i64, i64, i64, i8, i8, [6 x i8], i64, i64, i8, i8, i8, i8, %"struct.std::__1::array.20", i32, i8, i8, i8, [5 x i8], %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.177", %"class.quic::QuicTime::Delta", %"class.std::__1::unique_ptr.199", %"class.quiche::QuicheCircularDeque.205", %"class.quiche::QuicheCircularDeque.208", %"class.std::__1::vector.211", %"class.absl::optional.218", %"class.quic::QuicConnectionId", %"class.absl::optional.218", %"class.std::__1::list", %"class.quic::QuicCoalescedPacket", %"class.quic::QuicConnectionMtuDiscoverer", %"class.quic::QuicNetworkBlackholeDetector", %"class.quic::QuicIdleNetworkDetector", i8, i8, i8, i8, [4 x i8], %"class.std::__1::basic_string", i8, [7 x i8], i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPathValidator", %"struct.quic::QuicConnection::PathState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.quic::QuicFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicBlockedWriterInterface" = type { i32 (...)** }
%"class.quic::QuicPacketCreator::DelegateInterface" = type { i32 (...)** }
%"class.quic::QuicSentPacketManager::NetworkChangeVisitor" = type { i32 (...)** }
%"class.quic::QuicNetworkBlackholeDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicIdleNetworkDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicPathValidator::SendDelegate" = type { i32 (...)** }
%"class.quic::QuicConnectionIdManagerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicFramer" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.quic::QuicFramerVisitorInterface"*, i32, %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::ParsedQuicVersion", %"class.std::__1::vector", [4 x %"class.std::__1::unique_ptr"], i8, i8, i8, [4 x %"class.std::__1::unique_ptr.12"], i8, i8, %"struct.std::__1::array", i8, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", i8, i8, i8, %"class.quic::QuicPacketNumber", i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.quic::QuicPacketNumber", %"class.quic::QuicStreamFrameDataProducer"*, i8, i8, i8, i8, i8, i8, i64, i32, i32, i64 }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.quic::QuicEncrypter"* }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.std::__1::array" = type { [32 x i8] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.quic::QuicDecrypter"* }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicStreamFrameDataProducer" = type { i32 (...)** }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"struct.quic::PerPacketOptions" = type <{ i32 (...)**, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicPacketWriter" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.quic::QuicPacketHeader" = type { %"class.quic::QuicConnectionId", i8, %"class.quic::QuicConnectionId", i8, i8, i8, i8, i8, i8, %"struct.quic::ParsedQuicVersion", %"struct.std::__1::array"*, %"class.quic::QuicPacketNumber", i8, i8, %"struct.std::__1::array.20", i8, %"class.absl::string_view", i8, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::__split_buffer" = type { %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"class.std::__1::__compressed_pair.34" }
%"struct.quic::QuicConnection::UndecryptablePacket" = type <{ %"class.std::__1::unique_ptr.28", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.quic::QuicEncryptedPacket"* }
%"class.quic::QuicEncryptedPacket" = type { %"class.quic::QuicData.base", [7 x i8] }
%"class.quic::QuicData.base" = type <{ i32 (...)**, i8*, i64, i8 }>
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.quic::QuicConnection::UndecryptablePacket"** }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i64 }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" = type { %"class.std::__1::unique_ptr.28"*, i64 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::vector.49"* }
%"class.std::__1::vector.49" = type opaque
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional.53", %"class.absl::optional.53", %"class.absl::optional.53" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional.53" = type { %"class.absl::optional_internal::optional_data.54" }
%"class.absl::optional_internal::optional_data.54" = type { %"class.absl::optional_internal::optional_data_base.55" }
%"class.absl::optional_internal::optional_data_base.55" = type { %"class.absl::optional_internal::optional_data_dtor_base.56" }
%"class.absl::optional_internal::optional_data_dtor_base.56" = type { i8, %union.anon.57 }
%union.anon.57 = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::UberReceivedPacketManager" = type <{ i32 (...)**, [3 x %"class.quic::QuicReceivedPacketManager"], i8, [7 x i8] }>
%"class.quic::QuicReceivedPacketManager" = type { i32 (...)**, %"class.quic::QuicPacketNumber", %"struct.quic::QuicAckFrame", i8, i64, %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", %"struct.quic::QuicConnectionStats"*, i64, i64, i64, float, i8, i8, i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", i64 }
%"struct.quic::QuicAckFrame" = type { %"class.quic::QuicPacketNumber", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.62", %"class.quic::PacketNumberQueue", i8, i64, i64, i64 }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.64" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::pair"* }
%"class.quic::PacketNumberQueue" = type { %"class.quic::QuicIntervalSet" }
%"class.quic::QuicIntervalSet" = type { %"class.absl::btree_set" }
%"class.absl::btree_set" = type { %"class.absl::container_internal::btree_set_container" }
%"class.absl::container_internal::btree_set_container" = type { %"class.absl::container_internal::btree_container" }
%"class.absl::container_internal::btree_container" = type { %"class.absl::container_internal::btree" }
%"class.absl::container_internal::btree" = type { %"class.absl::container_internal::CompressedTuple", %"class.absl::container_internal::btree_node"*, i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.72" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.72" = type { %"class.absl::container_internal::btree_node"* }
%"class.absl::container_internal::btree_node" = type { i8 }
%"class.quic::QuicOneBlockArena" = type { [1056 x i8], i32, [4 x i8] }
%"class.quic::QuicArenaScopedPtr" = type { i8* }
%"class.quic::QuicConnectionVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicConnectionDebugVisitor" = type { %"class.quic::QuicSentPacketManager::DebugDelegate" }
%"class.quic::QuicSentPacketManager::DebugDelegate" = type { i32 (...)** }
%"class.quic::QuicPacketCreator" = type <{ %"class.quic::QuicPacketCreator::DelegateInterface"*, %"class.quic::QuicPacketCreator::DebugDelegate"*, %"class.quic::QuicFramer"*, %"class.quic::QuicRandom"*, i8, i8, %"struct.std::__1::array", [6 x i8], i64, i64, i8, [7 x i8], %"class.std::__1::vector.73", i64, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::SerializedPacket", %"class.std::__1::basic_string", i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPacketNumber", i64, i64, i8, [7 x i8] }>
%"class.quic::QuicPacketCreator::DebugDelegate" = type { i32 (...)** }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.101" }
%"struct.quic::QuicFrame" = type { %union.anon.75 }
%union.anon.75 = type { %"struct.quic::QuicStreamFrame" }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::SerializedPacket" = type <{ i8*, i16, [6 x i8], %"class.std::__1::function", %"class.std::__1::vector.73", %"class.std::__1::vector.73", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, i8, [3 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.quic::QuicSentPacketManager" = type <{ i32 (...)**, %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"class.quic::QuicSentPacketManager::DebugDelegate"*, %"class.quic::QuicSentPacketManager::NetworkChangeVisitor"*, i64, %"class.quic::RttStats", %"class.std::__1::unique_ptr.21", %"class.quic::LossDetectionInterface"*, %"class.quic::UberLossAlgorithm", %"class.quic::QuicPacketNumber", i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.quic::QuicPacketNumber", i16, [6 x i8], %"class.quic::PacingSender", i8, [7 x i8], %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i8, [7 x i8], %"class.quiche::QuicheCircularDeque.139", %"struct.quic::QuicAckFrame", i8, [7 x i8], %"class.std::__1::reverse_iterator", i8, [7 x i8], i64, i64, i8, i8, i8, [5 x i8], i64, i32, [4 x i8], i64, i8, i8, i8, i8, float, i8, [3 x i8], float, i32, i8, [3 x i8] }>
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.106", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.106" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector.73", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.quic::SendAlgorithmInterface"* }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::LossDetectionInterface" = type { i32 (...)** }
%"class.quic::UberLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", [3 x %"class.quic::GeneralLossAlgorithm"], %"class.std::__1::unique_ptr.109", %"struct.quic::LossDetectionParameters", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.quic::GeneralLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", %"class.quic::LossDetectionInterface"*, %"class.quic::QuicTime", i32, [4 x i8], i64, i8, i8, i8, [5 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.quic::LossDetectionTunerInterface"* }
%"class.quic::LossDetectionTunerInterface" = type { i32 (...)** }
%"struct.quic::LossDetectionParameters" = type { %"class.absl::optional.115", %"class.absl::optional.120" }
%"class.absl::optional.115" = type { %"class.absl::optional_internal::optional_data.116" }
%"class.absl::optional_internal::optional_data.116" = type { %"class.absl::optional_internal::optional_data_base.117" }
%"class.absl::optional_internal::optional_data_base.117" = type { %"class.absl::optional_internal::optional_data_dtor_base.118" }
%"class.absl::optional_internal::optional_data_dtor_base.118" = type { i8, %union.anon.119 }
%union.anon.119 = type { i32 }
%"class.absl::optional.120" = type { %"class.absl::optional_internal::optional_data.121" }
%"class.absl::optional_internal::optional_data.121" = type { %"class.absl::optional_internal::optional_data_base.122" }
%"class.absl::optional_internal::optional_data_base.122" = type { %"class.absl::optional_internal::optional_data_dtor_base.123" }
%"class.absl::optional_internal::optional_data_dtor_base.123" = type { i8, %union.anon.124 }
%union.anon.124 = type { i64 }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.127" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.134" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.quic::LostPacket"* }
%"class.quic::PacingSender" = type <{ %"class.quic::SendAlgorithmInterface"*, %"class.quic::QuicBandwidth", i32, [4 x i8], %"class.quic::QuicTime", i32, i32, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicSustainedBandwidthRecorder" = type { i8, i8, i8, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, %"class.quic::QuicTime" }
%"class.quiche::QuicheCircularDeque.139" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" = type { %"struct.std::__1::pair.142"*, i64 }
%"struct.std::__1::pair.142" = type opaque
%"class.std::__1::reverse_iterator" = type { %"struct.absl::container_internal::btree_iterator", %"struct.absl::container_internal::btree_iterator" }
%"struct.absl::container_internal::btree_iterator" = type <{ %"class.absl::container_internal::btree_node"*, i32, [4 x i8] }>
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.18, i32 }
%union.anon.18 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.19 }
%union.anon.19 = type { [4 x i32] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.quic::ParsedQuicVersion"* }
%"struct.std::__1::array.20" = type { [16 x i8] }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.quic::QuicPeerIssuedConnectionIdManager"* }
%"class.quic::QuicPeerIssuedConnectionIdManager" = type { i64, %"class.quic::QuicClock"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::vector.153", %"class.std::__1::vector.153", %"class.std::__1::vector.153", %"class.quic::QuicIntervalSet.160", i64 }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.quic::QuicAlarm"* }
%"class.quic::QuicAlarm" = type { i32 (...)**, %"class.quic::QuicArenaScopedPtr.149", %"class.quic::QuicTime" }
%"class.quic::QuicArenaScopedPtr.149" = type { i8* }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"struct.quic::QuicConnectionIdData"*, %"struct.quic::QuicConnectionIdData"*, %"class.std::__1::__compressed_pair.155" }
%"struct.quic::QuicConnectionIdData" = type { %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array.20" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.quic::QuicConnectionIdData"* }
%"class.quic::QuicIntervalSet.160" = type { %"class.absl::btree_set.161" }
%"class.absl::btree_set.161" = type { %"class.absl::container_internal::btree_set_container.162" }
%"class.absl::container_internal::btree_set_container.162" = type { %"class.absl::container_internal::btree_container.163" }
%"class.absl::container_internal::btree_container.163" = type { %"class.absl::container_internal::btree.164" }
%"class.absl::container_internal::btree.164" = type { %"class.absl::container_internal::CompressedTuple.165", %"class.absl::container_internal::btree_node.172"*, i64 }
%"class.absl::container_internal::CompressedTuple.165" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.166" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.166" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.171" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.171" = type { %"class.absl::container_internal::btree_node.172"* }
%"class.absl::container_internal::btree_node.172" = type { i8 }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.quic::QuicSelfIssuedConnectionIdManager"* }
%"class.quic::QuicSelfIssuedConnectionIdManager" = type { i32 (...)**, i64, %"class.quic::QuicClock"*, %"class.quic::QuicConnectionIdManagerVisitorInterface"*, %"class.std::__1::vector.180", %"class.std::__1::vector.188", %"class.std::__1::unique_ptr.146", %"class.quic::QuicConnectionId", i64, i64 }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"struct.std::__1::pair.182"*, %"struct.std::__1::pair.182"*, %"class.std::__1::__compressed_pair.183" }
%"struct.std::__1::pair.182" = type opaque
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"struct.std::__1::pair.182"* }
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"struct.std::__1::pair.190"*, %"struct.std::__1::pair.190"*, %"class.std::__1::__compressed_pair.191" }
%"struct.std::__1::pair.190" = type opaque
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.std::__1::pair.190"* }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::array.92"* }
%"struct.std::__1::array.92" = type { [8 x i8] }
%"class.quiche::QuicheCircularDeque.205" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" = type { %"struct.std::__1::array.92"*, i64 }
%"class.quiche::QuicheCircularDeque.208" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" = type { %"struct.quic::QuicConnection::PendingPathChallenge"*, i64 }
%"struct.quic::QuicConnection::PendingPathChallenge" = type { %"struct.std::__1::array.92", %"class.quic::QuicSocketAddress" }
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*, %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.quic::QuicConnectionId"* }
%"class.quic::QuicConnectionId" = type { %union.anon.1 }
%union.anon.1 = type { %struct.anon.3 }
%struct.anon.3 = type { i8, i8* }
%"class.absl::optional.218" = type { %"class.absl::optional_internal::optional_data.219" }
%"class.absl::optional_internal::optional_data.219" = type { %"class.absl::optional_internal::optional_data_base.220" }
%"class.absl::optional_internal::optional_data_base.220" = type { %"class.absl::optional_internal::optional_data_dtor_base.221" }
%"class.absl::optional_internal::optional_data_dtor_base.221" = type { i8, %union.anon.222 }
%union.anon.222 = type { %"class.quic::QuicConnectionId" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.223" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.quic::QuicCoalescedPacket" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", i16, i16, [4 x %"class.std::__1::basic_string"], [4 x i8], %"class.std::__1::unique_ptr.227" }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.quic::SerializedPacket"* }
%"class.quic::QuicConnectionMtuDiscoverer" = type { i16, i16, i16, i16, i64, %"class.quic::QuicPacketNumber" }
%"class.quic::QuicNetworkBlackholeDetector" = type { %"class.quic::QuicNetworkBlackholeDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicArenaScopedPtr" }
%"class.quic::QuicIdleNetworkDetector" = type <{ %"class.quic::QuicIdleNetworkDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicArenaScopedPtr", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::QuicPathValidator" = type { %"class.std::__1::vector.233", %"class.quic::QuicPathValidator::SendDelegate"*, %"class.quic::QuicRandom"*, %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.243", %"class.quic::QuicArenaScopedPtr", i64 }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"struct.std::__1::array.92"*, %"struct.std::__1::array.92"*, %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.quic::QuicPathValidationContext"* }
%"class.quic::QuicPathValidationContext" = type { i32 (...)**, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.quic::QuicPathValidator::ResultDelegate"* }
%"class.quic::QuicPathValidator::ResultDelegate" = type { i32 (...)** }
%"struct.quic::QuicConnection::PathState" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.std::__1::array.20", i8, i8, i64, i64, %"class.std::__1::unique_ptr.21", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.27 }
%union.anon.27 = type { %"class.quic::RttStats" }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QuicSession" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.296", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.359", %"class.absl::flat_hash_map.368", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.146", %"class.std::__1::vector", %"class.absl::optional.415", i8, i8, i8, i8, [4 x i8] }>
%"class.quic::QuicStreamIdManager::DelegateInterface" = type { i32 (...)** }
%"class.quic::HandshakerDelegateInterface" = type { i32 (...)** }
%"class.quic::StreamDelegateInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager::DelegateInterface" = type { i32 (...)** }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple.249" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple.249" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.250" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.250" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.251" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.251" = type { i64 }
%"class.quic::QuicSession::Visitor" = type { i32 (...)** }
%"class.quic::QuicWriteBlockedList" = type { %"class.http2::PriorityWriteScheduler", [8 x i32], [8 x i64], i8, %"class.quic::QuicWriteBlockedList::StaticStreamCollection" }
%"class.http2::PriorityWriteScheduler" = type <{ %"class.http2::WriteScheduler", i64, [8 x %"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo"], %"class.std::__1::unordered_map", i32, [4 x i8] }>
%"class.http2::WriteScheduler" = type { i32 (...)** }
%"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo" = type { %"class.std::__1::deque.258", i64 }
%"class.std::__1::deque.258" = type { %"class.std::__1::__deque_base.259" }
%"class.std::__1::__deque_base.259" = type { %"struct.std::__1::__split_buffer.260", i64, %"class.std::__1::__compressed_pair.266" }
%"struct.std::__1::__split_buffer.260" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"class.std::__1::__compressed_pair.261" }
%"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo" = type { i8, i32, i8 }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"*** }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.270", %"class.std::__1::__compressed_pair.278", %"class.std::__1::__compressed_pair.283", %"class.std::__1::__compressed_pair.286", [4 x i8] }>
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272", %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { float }
%"class.quic::QuicWriteBlockedList::StaticStreamCollection" = type { i64, %"class.std::__1::vector.289" }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"class.std::__1::__compressed_pair.291" }
%"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair" = type { i32, i8 }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"* }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"class.std::__1::unique_ptr.298"*, %"class.std::__1::unique_ptr.298"*, %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.quic::QuicStream"* }
%"class.quic::QuicStream" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.308", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8, [7 x i8] }>
%"class.quic::QuicStreamSequencer::StreamInterface" = type { i32 (...)** }
%"class.quic::QuicStreamSequencer" = type <{ i32 (...)**, %"class.quic::QuicStreamSequencer::StreamInterface"*, %"class.quic::QuicStreamSequencerBuffer", i64, i64, i8, [3 x i8], i32, i32, i8, i8, [2 x i8] }>
%"class.quic::QuicStreamSequencerBuffer" = type { i64, i64, i64, i64, i8, %"class.std::__1::unique_ptr.301", i64, %"class.quic::QuicIntervalSet.160" }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.quic::QuicStreamSequencerBuffer::BufferBlock"** }
%"struct.quic::QuicStreamSequencerBuffer::BufferBlock" = type { [8192 x i8] }
%"class.spdy::StreamPrecedence" = type { i8, %union.anon.307 }
%union.anon.307 = type { %"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" }
%"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" = type { i32, i32, i8 }
%"class.absl::optional.308" = type { %"class.absl::optional_internal::optional_data.309" }
%"class.absl::optional_internal::optional_data.309" = type { %"class.absl::optional_internal::optional_data_base.310" }
%"class.absl::optional_internal::optional_data_base.310" = type { %"class.absl::optional_internal::optional_data_dtor_base.311" }
%"class.absl::optional_internal::optional_data_dtor_base.311" = type { i8, %union.anon.312 }
%union.anon.312 = type { %"class.quic::QuicFlowController" }
%"class.quic::QuicStreamSendBuffer" = type <{ i64, %"class.quic::QuicIntervalDeque", i64, %"class.quic::QuicBufferAllocator"*, i64, i64, %"class.quic::QuicIntervalSet.160", %"class.quic::QuicIntervalSet.160", i32, [4 x i8] }>
%"class.quic::QuicIntervalDeque" = type { %"class.quiche::QuicheCircularDeque.315", %"class.absl::optional.120" }
%"class.quiche::QuicheCircularDeque.315" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" = type { %"struct.quic::BufferedSlice"*, i64 }
%"struct.quic::BufferedSlice" = type { %"class.quic::QuicMemSlice", i64 }
%"class.quic::QuicMemSlice" = type { %"class.quic::QuicMemSliceImpl" }
%"class.quic::QuicMemSliceImpl" = type { %class.scoped_refptr, i64 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.quic::QuicBufferAllocator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.std::__1::unique_ptr.298"* }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.333", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.338", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.326", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.218", %"class.absl::optional.218", %"class.absl::optional.218", %"class.absl::optional.218", %"class.absl::optional.218", %"class.absl::optional.218", %"class.absl::flat_hash_map.344", %"class.absl::flat_hash_map.344" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.326", %"class.std::__1::vector.326" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.333" = type { %"class.absl::optional_internal::optional_data.334" }
%"class.absl::optional_internal::optional_data.334" = type { %"class.absl::optional_internal::optional_data_base.335" }
%"class.absl::optional_internal::optional_data_base.335" = type { %"class.absl::optional_internal::optional_data_dtor_base.336" }
%"class.absl::optional_internal::optional_data_dtor_base.336" = type { i8, %union.anon.337 }
%union.anon.337 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.absl::optional.338" = type { %"class.absl::optional_internal::optional_data.339" }
%"class.absl::optional_internal::optional_data.339" = type { %"class.absl::optional_internal::optional_data_base.340" }
%"class.absl::optional_internal::optional_data_base.340" = type { %"class.absl::optional_internal::optional_data_dtor_base.341" }
%"class.absl::optional_internal::optional_data_dtor_base.341" = type { i8, %union.anon.342 }
%union.anon.342 = type { %"struct.std::__1::pair.343" }
%"struct.std::__1::pair.343" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.20" }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.20", %"struct.std::__1::array.20", i8 }
%"class.std::__1::vector.326" = type { %"class.std::__1::__vector_base.327" }
%"class.std::__1::__vector_base.327" = type { i32*, i32*, %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { i32* }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type opaque
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.251" }
%"class.absl::flat_hash_map.359" = type { %"class.absl::container_internal::raw_hash_map.360" }
%"class.absl::container_internal::raw_hash_map.360" = type { %"class.absl::container_internal::raw_hash_set.361" }
%"class.absl::container_internal::raw_hash_set.361" = type { i8*, %"union.absl::container_internal::map_slot_type.362"*, i64, i64, %"class.absl::container_internal::CompressedTuple.363" }
%"union.absl::container_internal::map_slot_type.362" = type opaque
%"class.absl::container_internal::CompressedTuple.363" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.364" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.364" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.251" }
%"class.absl::flat_hash_map.368" = type { %"class.absl::container_internal::raw_hash_map.369" }
%"class.absl::container_internal::raw_hash_map.369" = type { %"class.absl::container_internal::raw_hash_set.370" }
%"class.absl::container_internal::raw_hash_set.370" = type { i8*, %"union.absl::container_internal::map_slot_type.371"*, i64, i64, %"class.absl::container_internal::CompressedTuple.372" }
%"union.absl::container_internal::map_slot_type.371" = type opaque
%"class.absl::container_internal::CompressedTuple.372" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.373" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.373" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.251" }
%"class.quic::LegacyQuicStreamIdManager" = type { i8, i32, i64, i64, i32, %"class.absl::flat_hash_set", i32, i64, i64 }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set.377" }
%"class.absl::container_internal::raw_hash_set.377" = type { i8*, i32*, i64, i64, %"class.absl::container_internal::CompressedTuple.378" }
%"class.absl::container_internal::CompressedTuple.378" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.379" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.379" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.251" }
%"class.quic::UberQuicStreamIdManager" = type { %"struct.quic::ParsedQuicVersion", %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager" }
%"class.quic::QuicStreamIdManager" = type <{ %"class.quic::QuicStreamIdManager::DelegateInterface"*, i8, i8, [2 x i8], %"struct.quic::ParsedQuicVersion", i32, i32, i32, i32, i32, i32, i32, %"class.absl::flat_hash_set", i32, [4 x i8] }>
%"struct.quic::QuicConnectionCloseFrame" = type { i32, i64, i32, %"class.std::__1::basic_string", i64 }
%"class.quic::QuicControlFrameManager" = type { %"class.quiche::QuicheCircularDeque.381", i32, i32, i32, %"class.quiche::QuicheLinkedHashMap", %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.absl::flat_hash_map.397" }
%"class.quiche::QuicheCircularDeque.381" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" = type { %"struct.quic::QuicFrame"*, i64 }
%"class.absl::flat_hash_map.397" = type { %"class.absl::container_internal::raw_hash_map.398" }
%"class.absl::container_internal::raw_hash_map.398" = type { %"class.absl::container_internal::raw_hash_set.399" }
%"class.absl::container_internal::raw_hash_set.399" = type { i8*, %"union.absl::container_internal::map_slot_type.400"*, i64, i64, %"class.absl::container_internal::CompressedTuple.401" }
%"union.absl::container_internal::map_slot_type.400" = type opaque
%"class.absl::container_internal::CompressedTuple.401" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.402" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.402" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.251" }
%"class.quic::QuicDatagramQueue" = type { %"class.quic::QuicSession"*, %"class.quic::QuicClock"*, %"class.quic::QuicTime::Delta", %"class.quiche::QuicheCircularDeque.406", %"class.std::__1::unique_ptr.409" }
%"class.quiche::QuicheCircularDeque.406" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" = type { %"struct.quic::QuicDatagramQueue::Datagram"*, i64 }
%"struct.quic::QuicDatagramQueue::Datagram" = type { %"class.quic::QuicMemSlice", %"class.quic::QuicTime" }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.quic::QuicDatagramQueue::Observer"* }
%"class.quic::QuicDatagramQueue::Observer" = type { i32 (...)** }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list.390" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map.382" }
%"class.absl::container_internal::raw_hash_map.382" = type { %"class.absl::container_internal::raw_hash_set.383" }
%"class.absl::container_internal::raw_hash_set.383" = type { i8*, %"struct.std::__1::pair.384"**, i64, i64, %"class.absl::container_internal::CompressedTuple.385" }
%"struct.std::__1::pair.384" = type opaque
%"class.absl::container_internal::CompressedTuple.385" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.386" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.386" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.251" }
%"class.std::__1::list.390" = type { %"class.std::__1::__list_imp.391" }
%"class.std::__1::__list_imp.391" = type { %"struct.std::__1::__list_node_base.392", %"class.std::__1::__compressed_pair.393" }
%"struct.std::__1::__list_node_base.392" = type { %"struct.std::__1::__list_node_base.392"*, %"struct.std::__1::__list_node_base.392"* }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.absl::optional.415" = type { %"class.absl::optional_internal::optional_data.416" }
%"class.absl::optional_internal::optional_data.416" = type { %"class.absl::optional_internal::optional_data_base.417" }
%"class.absl::optional_internal::optional_data_base.417" = type { %"class.absl::optional_internal::optional_data_dtor_base.418" }
%"class.absl::optional_internal::optional_data_dtor_base.418" = type { i8, %union.anon.419 }
%union.anon.419 = type { %"class.std::__1::basic_string" }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4quic27QuicFlowControllerInterfaceD2Ev = comdat any

$_ZN4quic18QuicFlowControllerD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [11 x i8] c"connection\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"stream \00", align 1
@_ZTVN4quic18QuicFlowControllerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QuicFlowControllerInterface"*)* @_ZN4quic27QuicFlowControllerInterfaceD2Ev to i8*), i8* bitcast (void (%"class.quic::QuicFlowController"*)* @_ZN4quic18QuicFlowControllerD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicFlowController"*, i64)* @_ZN4quic18QuicFlowController19EnsureWindowAtLeastEm to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [67 x i8] c"../../net/third_party/quiche/src/quic/core/quic_flow_controller.cc\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"Server: \00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"Client: \00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c" Trying to send an extra \00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c" bytes, when bytes_sent = \00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c", and send_window_offset_ = \00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"bytes over send window offset\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"Max window at limit for \00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c" after \00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c" us, and RTT is \00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"us. Limit size: \00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"receive_window_size_:\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c" != receive_window_offset:\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4quic18QuicFlowControllerC1EPNS_11QuicSessionEjbmmmbPNS_27QuicFlowControllerInterfaceE = hidden unnamed_addr alias void (%"class.quic::QuicFlowController"*, %"class.quic::QuicSession"*, i32, i1, i64, i64, i64, i1, %"class.quic::QuicFlowControllerInterface"*), void (%"class.quic::QuicFlowController"*, %"class.quic::QuicSession"*, i32, i1, i64, i64, i64, i1, %"class.quic::QuicFlowControllerInterface"*)* @_ZN4quic18QuicFlowControllerC2EPNS_11QuicSessionEjbmmmbPNS_27QuicFlowControllerInterfaceE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicFlowController8LogLabelEv(%"class.std::__1::basic_string"* noalias sret, %"class.quic::QuicFlowController"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::AlphaNum", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %1, i64 0, i32 4
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 10, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #12
  %12 = getelementptr inbounds i8, i8* %11, i64 10
  store i8 0, i8* %12, align 2
  br label %30

13:                                               ; preds = %2
  %14 = bitcast %"class.absl::AlphaNum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8** %15, align 8
  %16 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 1
  store i64 7, i64* %16, align 8
  %17 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %1, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 1, i64 0
  %21 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %19, i8* %20) #12
  %22 = ptrtoint i8* %21 to i64
  %23 = ptrtoint i8* %20 to i64
  %24 = sub i64 %22, %23
  %25 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* %20, i8** %25, align 8
  %26 = icmp sgt i64 %24, -1
  br i1 %26, label %28, label %27, !prof !3

27:                                               ; preds = %13
  call void @llvm.trap() #12
  unreachable

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 %24, i64* %29, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* sret %0, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #12
  br label %30

30:                                               ; preds = %28, %8
  ret void
}

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic18QuicFlowControllerC2EPNS_11QuicSessionEjbmmmbPNS_27QuicFlowControllerInterfaceE(%"class.quic::QuicFlowController"* nocapture, %"class.quic::QuicSession"*, i32, i1 zeroext, i64, i64, i64, i1 zeroext, %"class.quic::QuicFlowControllerInterface"*) unnamed_addr #3 align 2 {
  %10 = zext i1 %3 to i8
  %11 = zext i1 %7 to i8
  %12 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4quic18QuicFlowControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 1
  store %"class.quic::QuicSession"* %1, %"class.quic::QuicSession"** %13, align 8
  %14 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %1, i64 0, i32 8
  %16 = bitcast %"class.quic::QuicConnection"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.quic::QuicConnection"** %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 3
  store i32 %2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 4
  store i8 %10, i8* %20, align 4
  %21 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %1, i64 0, i32 9
  %23 = load i8, i8* %22, align 8
  store i8 %23, i8* %21, align 1
  %24 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 6
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 7
  store i64 %4, i64* %25, align 8
  %26 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 8
  %27 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 10
  %28 = bitcast i64* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false)
  store i64 %5, i64* %27, align 8
  %29 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 11
  store i64 %5, i64* %29, align 8
  %30 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 12
  store i64 %6, i64* %30, align 8
  %31 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 13
  store i8 %11, i8* %31, align 8
  %32 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 14
  store %"class.quic::QuicFlowControllerInterface"* %8, %"class.quic::QuicFlowControllerInterface"** %32, align 8
  %33 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 15
  %34 = bitcast i64* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicFlowController16AddBytesConsumedEm(%"class.quic::QuicFlowController"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  tail call void @_ZN4quic18QuicFlowController21MaybeSendWindowUpdateEv(%"class.quic::QuicFlowController"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicFlowController21MaybeSendWindowUpdateEv(%"class.quic::QuicFlowController"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 1
  %3 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %2, align 8
  %4 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %3, i64 0, i32 8
  %5 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %4, align 8
  %6 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %5, i64 0, i32 83
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 10
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 8
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 11
  %16 = load i64, i64* %15, align 8
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 16, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %31

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 2
  %23 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %22, align 8
  %24 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %23, i64 0, i32 21
  %25 = load %"class.quic::QuicClock"*, %"class.quic::QuicClock"** %24, align 8
  %26 = bitcast %"class.quic::QuicClock"* %25 to i64 (%"class.quic::QuicClock"*)***
  %27 = load i64 (%"class.quic::QuicClock"*)**, i64 (%"class.quic::QuicClock"*)*** %26, align 8
  %28 = getelementptr inbounds i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %27, i64 2
  %29 = load i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %28, align 8
  %30 = tail call i64 %29(%"class.quic::QuicClock"* %25) #12
  store i64 %30, i64* %18, align 8
  br label %31

31:                                               ; preds = %9, %21
  %32 = icmp ult i64 %14, %17
  br i1 %32, label %33, label %58

33:                                               ; preds = %31
  tail call void @_ZN4quic18QuicFlowController26MaybeIncreaseMaxWindowSizeEv(%"class.quic::QuicFlowController"* %0)
  %34 = load i64, i64* %15, align 8
  %35 = sub i64 %34, %14
  %36 = load i64, i64* %10, align 8
  %37 = add i64 %35, %36
  store i64 %37, i64* %10, align 8
  %38 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 4
  %41 = load i8, i8* %40, align 4, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 2
  %45 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %44, align 8
  %46 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %45, i64 0, i32 8, i32 8, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = tail call i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32 %47) #12
  %49 = load i64, i64* %10, align 8
  br label %50

50:                                               ; preds = %33, %43
  %51 = phi i64 [ %49, %43 ], [ %37, %33 ]
  %52 = phi i32 [ %48, %43 ], [ %39, %33 ]
  %53 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %2, align 8
  %54 = bitcast %"class.quic::QuicSession"* %53 to void (%"class.quic::QuicSession"*, i32, i64)***
  %55 = load void (%"class.quic::QuicSession"*, i32, i64)**, void (%"class.quic::QuicSession"*, i32, i64)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.quic::QuicSession"*, i32, i64)*, void (%"class.quic::QuicSession"*, i32, i64)** %55, i64 67
  %57 = load void (%"class.quic::QuicSession"*, i32, i64)*, void (%"class.quic::QuicSession"*, i32, i64)** %56, align 8
  tail call void %57(%"class.quic::QuicSession"* %53, i32 %52, i64 %51) #12
  br label %58

58:                                               ; preds = %1, %50, %31
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic18QuicFlowController27UpdateHighestReceivedOffsetEm(%"class.quic::QuicFlowController"* nocapture, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 9
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 %1, i64* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicFlowController12AddBytesSentEm(%"class.quic::QuicFlowController"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::AlphaNum", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.absl::AlphaNum", align 8
  %9 = alloca %"class.absl::AlphaNum", align 8
  %10 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 6
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, %1
  %13 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 7
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %12, %14
  br i1 %15, label %16, label %114

16:                                               ; preds = %2
  %17 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %17, label %18, label %82

18:                                               ; preds = %16
  %19 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %19) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2, i64 0, i64 0), i32 94, i32 2) #12
  %20 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_ostringstream"* %20 to %"class.std::__1::basic_ostream"*
  %22 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 5
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, [9 x i8]* @.str.3, [9 x i8]* @.str.4
  %26 = getelementptr inbounds [9 x i8], [9 x i8]* %25, i64 0, i64 0
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %21, i8* nonnull %26, i64 8) #12
  %28 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 4
  %30 = load i8, i8* %29, align 4, !range !2, !noalias !4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %18
  %33 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 10, i8* %34, align 1, !alias.scope !4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #12
  %35 = getelementptr inbounds i8, i8* %28, i64 10
  store i8 0, i8* %35, align 2, !alias.scope !4
  br label %56

36:                                               ; preds = %18
  %37 = bitcast %"class.absl::AlphaNum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #12, !noalias !4
  %38 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8** %38, align 8, !noalias !4
  %39 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 1
  store i64 7, i64* %39, align 8, !noalias !4
  %40 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %40) #12, !noalias !4
  %41 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 3
  %42 = load i32, i32* %41, align 8, !noalias !4
  %43 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 1, i64 0
  %44 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %42, i8* %43) #12, !noalias !4
  %45 = ptrtoint i8* %44 to i64
  %46 = ptrtoint i8* %43 to i64
  %47 = sub i64 %45, %46
  %48 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* %43, i8** %48, align 8, !noalias !4
  %49 = icmp sgt i64 %47, -1
  br i1 %49, label %51, label %50, !prof !3

50:                                               ; preds = %36
  call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %36
  %52 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 %47, i64* %52, align 8, !noalias !4
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %6, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #12, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #12, !noalias !4
  %53 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  br label %56

56:                                               ; preds = %32, %51
  %57 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %33, %32 ], [ %53, %51 ]
  %58 = phi i8 [ 10, %32 ], [ %55, %51 ]
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %60 = icmp slt i8 %58, 0
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %58 to i64
  %66 = select i1 %60, i8* %62, i8* %28
  %67 = select i1 %60, i64 %64, i64 %65
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* %66, i64 %67) #12
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %68, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i64 25) #12
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %69, i64 %1) #12
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %70, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i64 26) #12
  %72 = load i64, i64* %10, align 8
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %71, i64 %72) #12
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %73, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0), i64 28) #12
  %75 = load i64, i64* %13, align 8
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %74, i64 %75) #12
  %77 = load i8, i8* %59, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %56
  %80 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %80) #13
  br label %81

81:                                               ; preds = %56, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %19) #12
  br label %82

82:                                               ; preds = %16, %81
  %83 = load i64, i64* %13, align 8
  store i64 %83, i64* %10, align 8
  %84 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 2
  %85 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %84, align 8
  %86 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #12
  %87 = bitcast %"class.absl::AlphaNum"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %87) #12
  %88 = sub i64 0, %1
  %89 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 1, i64 0
  %90 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %88, i8* %89) #12
  %91 = ptrtoint i8* %90 to i64
  %92 = ptrtoint i8* %89 to i64
  %93 = sub i64 %91, %92
  %94 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 0
  store i8* %89, i8** %94, align 8
  %95 = icmp sgt i64 %93, -1
  br i1 %95, label %97, label %96, !prof !3

96:                                               ; preds = %82
  call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %82
  %98 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 1
  store i64 %93, i64* %98, align 8
  %99 = bitcast %"class.absl::AlphaNum"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %99) #12
  %100 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %9, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0), i8** %100, align 8
  %101 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %9, i64 0, i32 0, i32 1
  store i64 29, i64* %101, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %7, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %8, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %9) #12
  %102 = bitcast %"class.quic::QuicConnection"* %85 to void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)***
  %103 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)**, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %103, i64 55
  %105 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %104, align 8
  call void %105(%"class.quic::QuicConnection"* %85, i32 63, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i32 2) #12
  %106 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %97
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %112) #13
  br label %113

113:                                              ; preds = %97, %110
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %99) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %87) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #12
  br label %115

114:                                              ; preds = %2
  store i64 %12, i64* %10, align 8
  br label %115

115:                                              ; preds = %114, %113
  ret void
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4quic18QuicFlowController20FlowControlViolationEv(%"class.quic::QuicFlowController"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 9
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 10
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicFlowController26MaybeIncreaseMaxWindowSizeEv(%"class.quic::QuicFlowController"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::AlphaNum", align 8
  %3 = alloca %"class.absl::AlphaNum", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 2
  %7 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %6, align 8
  %8 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %7, i64 0, i32 21
  %9 = load %"class.quic::QuicClock"*, %"class.quic::QuicClock"** %8, align 8
  %10 = bitcast %"class.quic::QuicClock"* %9 to i64 (%"class.quic::QuicClock"*)***
  %11 = load i64 (%"class.quic::QuicClock"*)**, i64 (%"class.quic::QuicClock"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %11, i64 2
  %13 = load i64 (%"class.quic::QuicClock"*)*, i64 (%"class.quic::QuicClock"*)** %12, align 8
  %14 = tail call i64 %13(%"class.quic::QuicClock"* %9) #12
  %15 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 16, i32 0
  %16 = load i64, i64* %15, align 8
  store i64 %14, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %119, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 13
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %119, label %22

22:                                               ; preds = %18
  %23 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %6, align 8
  %24 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %23, i64 0, i32 80, i32 8, i32 2, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %119, label %27

27:                                               ; preds = %22
  %28 = sub nsw i64 %14, %16
  %29 = shl nsw i64 %25, 1
  %30 = icmp slt i64 %28, %29
  br i1 %30, label %31, label %119

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 11
  %33 = load i64, i64* %32, align 8
  %34 = shl i64 %33, 1
  %35 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 12
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %36, %34
  %38 = select i1 %37, i64 %36, i64 %34
  store i64 %38, i64* %32, align 8
  %39 = icmp ugt i64 %38, %33
  br i1 %39, label %40, label %52

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 14
  %42 = load %"class.quic::QuicFlowControllerInterface"*, %"class.quic::QuicFlowControllerInterface"** %41, align 8
  %43 = icmp eq %"class.quic::QuicFlowControllerInterface"* %42, null
  br i1 %43, label %119, label %44

44:                                               ; preds = %40
  %45 = uitofp i64 %38 to float
  %46 = fmul float %45, 1.500000e+00
  %47 = fptoui float %46 to i64
  %48 = bitcast %"class.quic::QuicFlowControllerInterface"* %42 to void (%"class.quic::QuicFlowControllerInterface"*, i64)***
  %49 = load void (%"class.quic::QuicFlowControllerInterface"*, i64)**, void (%"class.quic::QuicFlowControllerInterface"*, i64)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.quic::QuicFlowControllerInterface"*, i64)*, void (%"class.quic::QuicFlowControllerInterface"*, i64)** %49, i64 2
  %51 = load void (%"class.quic::QuicFlowControllerInterface"*, i64)*, void (%"class.quic::QuicFlowControllerInterface"*, i64)** %50, align 8
  tail call void %51(%"class.quic::QuicFlowControllerInterface"* nonnull %42, i64 %47) #12
  br label %119

52:                                               ; preds = %31
  %53 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2, i64 0, i64 0), i64 67) #12
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %119

55:                                               ; preds = %52
  %56 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %56) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2, i64 0, i64 0), i32 178, i32 -1) #12
  %57 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %58 = bitcast %"class.std::__1::basic_ostringstream"* %57 to %"class.std::__1::basic_ostream"*
  %59 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 5
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 0
  %62 = select i1 %61, [9 x i8]* @.str.3, [9 x i8]* @.str.4
  %63 = getelementptr inbounds [9 x i8], [9 x i8]* %62, i64 0, i64 0
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %58, i8* nonnull %63, i64 8) #12
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %64, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i64 24) #12
  %66 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #12
  %67 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 4
  %68 = load i8, i8* %67, align 4, !range !2, !noalias !7
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %55
  %71 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  store i8 10, i8* %72, align 1, !alias.scope !7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #12
  %73 = getelementptr inbounds i8, i8* %66, i64 10
  store i8 0, i8* %73, align 2, !alias.scope !7
  br label %94

74:                                               ; preds = %55
  %75 = bitcast %"class.absl::AlphaNum"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %75) #12, !noalias !7
  %76 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %2, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8** %76, align 8, !noalias !7
  %77 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %2, i64 0, i32 0, i32 1
  store i64 7, i64* %77, align 8, !noalias !7
  %78 = bitcast %"class.absl::AlphaNum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %78) #12, !noalias !7
  %79 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 3
  %80 = load i32, i32* %79, align 8, !noalias !7
  %81 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 1, i64 0
  %82 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %80, i8* %81) #12, !noalias !7
  %83 = ptrtoint i8* %82 to i64
  %84 = ptrtoint i8* %81 to i64
  %85 = sub i64 %83, %84
  %86 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 0
  store i8* %81, i8** %86, align 8, !noalias !7
  %87 = icmp sgt i64 %85, -1
  br i1 %87, label %89, label %88, !prof !3

88:                                               ; preds = %74
  call void @llvm.trap() #12
  unreachable

89:                                               ; preds = %74
  %90 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 1
  store i64 %85, i64* %90, align 8, !noalias !7
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %2, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %78) #12, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %75) #12, !noalias !7
  %91 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  br label %94

94:                                               ; preds = %70, %89
  %95 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %71, %70 ], [ %91, %89 ]
  %96 = phi i8 [ 10, %70 ], [ %93, %89 ]
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %98 = icmp slt i8 %96, 0
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = zext i8 %96 to i64
  %104 = select i1 %98, i8* %100, i8* %66
  %105 = select i1 %98, i64 %102, i64 %103
  %106 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %65, i8* %104, i64 %105) #12
  %107 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %106, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #12
  %108 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %107, i64 %28) #12
  %109 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %108, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i64 16) #12
  %110 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %109, i64 %25) #12
  %111 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %110, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i64 16) #12
  %112 = load i64, i64* %32, align 8
  %113 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %111, i64 %112) #12
  %114 = load i8, i8* %97, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %94
  %117 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %117) #13
  br label %118

118:                                              ; preds = %94, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %56) #12
  br label %119

119:                                              ; preds = %27, %1, %22, %118, %52, %44, %40, %18
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic18QuicFlowController18IncreaseWindowSizeEv(%"class.quic::QuicFlowController"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 11
  %3 = load i64, i64* %2, align 8
  %4 = shl i64 %3, 1
  %5 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 12
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  %8 = select i1 %7, i64 %6, i64 %4
  store i64 %8, i64* %2, align 8
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN4quic18QuicFlowController21WindowUpdateThresholdEv(%"class.quic::QuicFlowController"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 11
  %3 = load i64, i64* %2, align 8
  %4 = lshr i64 %3, 1
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicFlowController44UpdateReceiveWindowOffsetAndSendWindowUpdateEm(%"class.quic::QuicFlowController"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 11
  %4 = load i64, i64* %3, align 8
  %5 = sub i64 %4, %1
  %6 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 10
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %5, %7
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 2
  %16 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %15, align 8
  %17 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %16, i64 0, i32 8, i32 8, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = tail call i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32 %18) #12
  %20 = load i64, i64* %6, align 8
  br label %21

21:                                               ; preds = %2, %14
  %22 = phi i64 [ %20, %14 ], [ %8, %2 ]
  %23 = phi i32 [ %19, %14 ], [ %10, %2 ]
  %24 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 1
  %25 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %24, align 8
  %26 = bitcast %"class.quic::QuicSession"* %25 to void (%"class.quic::QuicSession"*, i32, i64)***
  %27 = load void (%"class.quic::QuicSession"*, i32, i64)**, void (%"class.quic::QuicSession"*, i32, i64)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.quic::QuicSession"*, i32, i64)*, void (%"class.quic::QuicSession"*, i32, i64)** %27, i64 67
  %29 = load void (%"class.quic::QuicSession"*, i32, i64)*, void (%"class.quic::QuicSession"*, i32, i64)** %28, align 8
  tail call void %29(%"class.quic::QuicSession"* %25, i32 %23, i64 %22) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicFlowController16SendWindowUpdateEv(%"class.quic::QuicFlowController"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 2
  %9 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %8, align 8
  %10 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %9, i64 0, i32 8, i32 8, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = tail call i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32 %11) #12
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i32 [ %12, %7 ], [ %3, %1 ]
  %15 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 1
  %16 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %15, align 8
  %17 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 10
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.quic::QuicSession"* %16 to void (%"class.quic::QuicSession"*, i32, i64)***
  %20 = load void (%"class.quic::QuicSession"*, i32, i64)**, void (%"class.quic::QuicSession"*, i32, i64)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.quic::QuicSession"*, i32, i64)*, void (%"class.quic::QuicSession"*, i32, i64)** %20, i64 67
  %22 = load void (%"class.quic::QuicSession"*, i32, i64)*, void (%"class.quic::QuicSession"*, i32, i64)** %21, align 8
  tail call void %22(%"class.quic::QuicSession"* %16, i32 %14, i64 %18) #12
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic18QuicFlowController17ShouldSendBlockedEv(%"class.quic::QuicFlowController"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = tail call i64 @llvm.usub.sat.i64(i64 %5, i64 %3) #12
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 15
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, %5
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  store i64 %5, i64* %9, align 8
  br label %13

13:                                               ; preds = %1, %8, %12
  %14 = phi i1 [ true, %12 ], [ false, %8 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic18QuicFlowController14SendWindowSizeEv(%"class.quic::QuicFlowController"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = tail call i64 @llvm.usub.sat.i64(i64 %5, i64 %3)
  ret i64 %6
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic18QuicFlowController22UpdateSendWindowOffsetEm(%"class.quic::QuicFlowController"* nocapture, i64) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 7
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 6
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.usub.sat.i64(i64 %4, i64 %8) #12
  %10 = icmp eq i64 %9, 0
  store i64 %1, i64* %3, align 8
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i1 [ %10, %6 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic18QuicFlowController9IsBlockedEv(%"class.quic::QuicFlowController"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = tail call i64 @llvm.usub.sat.i64(i64 %5, i64 %3) #12
  %7 = icmp eq i64 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicFlowController19EnsureWindowAtLeastEm(%"class.quic::QuicFlowController"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 12
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  br i1 %5, label %6, label %37

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 10
  %8 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 8
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 11
  %11 = load i64, i64* %10, align 8
  %12 = shl i64 %11, 1
  %13 = icmp ult i64 %4, %12
  %14 = select i1 %13, i64 %4, i64 %12
  store i64 %14, i64* %10, align 8
  %15 = add i64 %14, %9
  store i64 %15, i64* %7, align 8
  %16 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 4
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 2
  %23 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %22, align 8
  %24 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %23, i64 0, i32 8, i32 8, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = tail call i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32 %25) #12
  %27 = load i64, i64* %7, align 8
  br label %28

28:                                               ; preds = %6, %21
  %29 = phi i64 [ %27, %21 ], [ %15, %6 ]
  %30 = phi i32 [ %26, %21 ], [ %17, %6 ]
  %31 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 1
  %32 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %31, align 8
  %33 = bitcast %"class.quic::QuicSession"* %32 to void (%"class.quic::QuicSession"*, i32, i64)***
  %34 = load void (%"class.quic::QuicSession"*, i32, i64)**, void (%"class.quic::QuicSession"*, i32, i64)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.quic::QuicSession"*, i32, i64)*, void (%"class.quic::QuicSession"*, i32, i64)** %34, i64 67
  %36 = load void (%"class.quic::QuicSession"*, i32, i64)*, void (%"class.quic::QuicSession"*, i32, i64)** %35, align 8
  tail call void %36(%"class.quic::QuicSession"* %32, i32 %30, i64 %29) #12
  br label %37

37:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18QuicFlowController23UpdateReceiveWindowSizeEm(%"class.quic::QuicFlowController"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 11
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.quic::QuicFlowController", %"class.quic::QuicFlowController"* %0, i64 0, i32 10
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %10, label %11, label %22

11:                                               ; preds = %9
  %12 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %12) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2, i64 0, i64 0), i32 302, i32 2) #12
  %13 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %13 to %"class.std::__1::basic_ostream"*
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0), i64 21) #12
  %16 = load i64, i64* %4, align 8
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %15, i64 %16) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i64 26) #12
  %19 = load i64, i64* %6, align 8
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %18, i64 %19) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %12) #12
  br label %22

21:                                               ; preds = %2
  store i64 %1, i64* %4, align 8
  store i64 %1, i64* %6, align 8
  br label %22

22:                                               ; preds = %11, %9, %21
  ret void
}

declare i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic27QuicFlowControllerInterfaceD2Ev(%"class.quic::QuicFlowControllerInterface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic18QuicFlowControllerD0Ev(%"class.quic::QuicFlowController"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.quic::QuicFlowController"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32, i8*) local_unnamed_addr #1

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4quic18QuicFlowController8LogLabelEv: argument 0"}
!6 = distinct !{!6, !"_ZN4quic18QuicFlowController8LogLabelEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4quic18QuicFlowController8LogLabelEv: argument 0"}
!9 = distinct !{!9, !"_ZN4quic18QuicFlowController8LogLabelEv"}
