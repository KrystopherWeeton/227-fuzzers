; ModuleID = '../../third_party/skia/src/core/SkGpuBlurUtils.cpp'
source_filename = "../../third_party/skia/src/core/SkGpuBlurUtils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRGBA4f = type { float, float, float, float }
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.179, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrColorInfo = type { %class.sk_sp.176, %class.sk_sp.178, i32, i32 }
%class.sk_sp.176 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.177, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.177 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.79" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i8 }
%class.sk_sp.178 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.53, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.53 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.54, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.97" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.54 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.57 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.55, i8* }
%class.sk_sp.55 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.56, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.56 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.57 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.58, void (i8*)*, i8* }
%class.SkNVRefCnt.58 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.59, i32, [4 x i8] }
%union.anon.59 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.54, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.94, %class.sk_sp.96, %class.sk_sp.96 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.69, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.85, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.61 }
%class.SkTHashTable.61 = type { i32, i32, %class.SkAutoTArray.62 }
%class.SkAutoTArray.62 = type { %"class.std::__1::unique_ptr.63" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.69 = type { %class.SkTHashTable.70 }
%class.SkTHashTable.70 = type { i32, i32, %class.SkAutoTArray.71 }
%class.SkAutoTArray.71 = type { %"class.std::__1::unique_ptr.72" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.78, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.78 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.84, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.84 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.85 = type { %class.SkTHashTable.86 }
%class.SkTHashTable.86 = type { i32, i32, %class.SkAutoTArray.87 }
%class.SkAutoTArray.87 = type { %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.94 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.95, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.95 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.96 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__atomic_base.99" }
%"struct.std::__1::__atomic_base.99" = type { %"struct.std::__1::__cxx_atomic_impl.100" }
%"struct.std::__1::__cxx_atomic_impl.100" = type { %"struct.std::__1::__cxx_atomic_base_impl.101" }
%"struct.std::__1::__cxx_atomic_base_impl.101" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.sk_sp.179 = type { %class.GrOpsTask* }
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.112, %class.sk_sp.132, %class.SkTArray.134, %struct.SkRect, %struct.SkIRect }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.102, i32, i32, %class.SkSTArray.109, %class.SkSTArray.109, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.52 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.52 = type { %class.sk_sp.53*, i64 }
%class.SkTArray.102 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.103", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.109 = type { %class.SkAlignedSTStorage.110, %class.SkTArray.111 }
%class.SkAlignedSTStorage.110 = type { [8 x i8] }
%class.SkTArray.111 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.9, %class.SkTArray.18, %class.SkTArray.20, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.4"*, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.20, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.21 }
%class.sk_sp.21 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.9 = type { %class.SkTHashTable.10 }
%class.SkTHashTable.10 = type { i32, i32, %class.SkAutoTArray.11 }
%class.SkAutoTArray.11 = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.242" }
%"struct.std::__1::pair.242" = type { i32, %class.SkTArray.243* }
%class.SkTArray.243 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.18 = type { %"class.std::__1::unique_ptr.19"*, i64 }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.243, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%class.SkTArray.20 = type { %class.SkString*, i64 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.112 = type { %class.SkAlignedSTStorage.113, %class.SkTArray.114 }
%class.SkAlignedSTStorage.113 = type { [2000 x i8] }
%class.SkTArray.114 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.115", %class.GrOp* }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.115", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.123" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.121 }
%union.anon.121 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.122, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.122 = type { i32 }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.126, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.126 = type { %class.SkAlignedSTStorage.127, %class.SkTArray.128 }
%class.SkAlignedSTStorage.127 = type { [8 x i8] }
%class.SkTArray.128 = type { %"class.std::__1::unique_ptr.123"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.132 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.133, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.133 = type { %"struct.std::__1::atomic" }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.34 }
%class.SkFibBlockSizes.34 = type { i32 }
%class.SkTArray.134 = type { %class.GrSurfaceProxy**, i64 }
%struct.SkRect = type { float, float, float, float }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.180, %class.SkAutoTMalloc }
%class.SkAutoTArray.180 = type { %"class.std::__1::unique_ptr.181" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.184 }
%union.anon.184 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.185, i32, %"struct.std::__1::atomic.79", %"struct.std::__1::atomic.79", i8, i8 }>
%class.sk_sp.185 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.186, %struct.SkRect, [4 x i8], %class.SkTDArray.187, %class.SkTDArray.188, %class.SkTDArray.189, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.186 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.187 = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.188 = type { i8*, i32, i32 }
%class.SkTDArray.189 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.190 }
%class.SkTDArray.190 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.191", [3 x i8] }
%"struct.std::__1::atomic.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__cxx_atomic_impl.193" }
%"struct.std::__1::__cxx_atomic_impl.193" = type { %"struct.std::__1::__cxx_atomic_base_impl.194" }
%"struct.std::__1::__cxx_atomic_base_impl.194" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.198" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.203, %class.SkSTArray.208, %class.SkSTArray.211 }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.202" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.202" = type { %struct.SkPoint* }
%class.SkZip.203 = type { %"class.std::__1::tuple.204", i64 }
%"class.std::__1::tuple.204" = type { %"struct.std::__1::__tuple_impl.205" }
%"struct.std::__1::__tuple_impl.205" = type { %"class.std::__1::__tuple_leaf.206", %"class.std::__1::__tuple_leaf.207" }
%"class.std::__1::__tuple_leaf.206" = type { i16* }
%"class.std::__1::__tuple_leaf.207" = type { %struct.SkPoint* }
%class.SkSTArray.208 = type { %class.SkAlignedSTStorage.209, %class.SkTArray.210 }
%class.SkAlignedSTStorage.209 = type { [8 x i8] }
%class.SkTArray.210 = type { i16*, i64 }
%class.SkSTArray.211 = type { %class.SkAlignedSTStorage.212, %class.SkTArray.213 }
%class.SkAlignedSTStorage.212 = type { [32 x i8] }
%class.SkTArray.213 = type { %struct.SkPoint*, i64 }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.1", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.170" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.GrAuditTrail* }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %class.SkArenaAlloc* }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.GrSubRunAllocator* }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.41, %class.SkTArray.50, %class.GrOpsTask*, %class.SkSTArray.135, %class.SkSTArray.138, %"class.std::__1::unique_ptr.140", %class.sk_sp.156, %class.GrTokenTracker, i8, i8, %class.SkTArray.157, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.41 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.42", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.45, i8, [7 x i8] }>
%class.sk_sp.45 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.46, i8*, i64 }
%class.GrNonAtomicRef.46 = type { i32 }
%class.SkTArray.50 = type { %class.sk_sp.51*, i64 }
%class.sk_sp.51 = type { %class.GrRenderTask* }
%class.SkSTArray.135 = type { %class.SkAlignedSTStorage.136, %class.SkTArray.137 }
%class.SkAlignedSTStorage.136 = type { [32 x i8] }
%class.SkTArray.137 = type { i32*, i64 }
%class.SkSTArray.138 = type { %class.SkAlignedSTStorage.139, %class.SkTArray.50 }
%class.SkAlignedSTStorage.139 = type { [32 x i8] }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.143, %"class.std::__1::unique_ptr.147", %class.GrPathRenderer* }
%class.SkSTArray.143 = type { %class.SkAlignedSTStorage.144, %class.SkTArray.145 }
%class.SkAlignedSTStorage.144 = type { [64 x i8] }
%class.SkTArray.145 = type { %class.sk_sp.146*, i64 }
%class.sk_sp.146 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.156 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.157 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.158, i32, %class.GrRenderTask** }
%class.SkTHashMap.158 = type { %class.SkTHashTable.159 }
%class.SkTHashTable.159 = type { i32, i32, %class.SkAutoTArray.160 }
%class.SkAutoTArray.160 = type { %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %class.GrProxyProvider* }
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %class.GrSurfaceContext* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrSurfaceDrawContext* }
%class.anon = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr.222"*, i32* }
%class.SkEventTracer = type { i32 (...)** }
%class.GrSurfaceFillContext = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.179, i8, [7 x i8] }>
%class.GrClip = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.SkBitmap = type { %class.sk_sp.228, %class.SkPixmap, %class.sk_sp.229 }
%class.sk_sp.228 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.176, i32, i32 }
%class.sk_sp.229 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque

$_ZN15GrTextureEffect14kDefaultBorderE = comdat any

@.str = private unnamed_addr constant [29 x i8] c"disabled-by-default-skia.gpu\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"GaussianBlur\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"sigmaX\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"sigmaY\00", align 1
@_ZN15GrTextureEffect14kDefaultBorderE = linkonce_odr hidden constant [4 x float] zeroinitializer, comdat, align 16
@_ZL17SK_PMColor4fWHITE = internal constant %struct.SkRGBA4f { float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00 }, align 4
@_ZZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFitE28trace_event_unique_atomic456.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrSurfaceDrawContext* @_ZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFit(%class.GrRecordingContext*, %class.GrSurfaceProxyView*, i32, i32, %class.sk_sp.176* nocapture, %struct.SkIRect* readonly byval(%struct.SkIRect) align 8, %struct.SkIRect* byval(%struct.SkIRect) align 8, float, float, i32, i32) local_unnamed_addr #0 {
  %12 = alloca %class.GrSurfaceProxyView, align 8
  %13 = alloca %struct.SkIRect, align 8
  %14 = alloca %class.sk_sp.176, align 8
  %15 = alloca %class.GrSurfaceProxyView, align 8
  %16 = alloca %struct.SkIRect, align 8
  %17 = alloca %class.sk_sp.176, align 8
  %18 = alloca %class.sk_sp.176, align 8
  %19 = alloca %class.SkSurfaceProps, align 4
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca %class.GrPaint, align 8
  %23 = alloca [28 x float], align 16
  %24 = alloca %class.GrSurfaceProxyView, align 8
  %25 = alloca { <2 x float>, <2 x float> }, align 8
  %26 = alloca { <2 x float>, <2 x float> }, align 8
  %27 = alloca %class.SkMatrix, align 16
  %28 = alloca { <2 x float>, <2 x float> }, align 8
  %29 = alloca { <2 x float>, <2 x float> }, align 8
  %30 = alloca %class.sk_sp.176, align 8
  %31 = alloca %class.SkSurfaceProps, align 4
  %32 = alloca %class.GrPaint, align 8
  %33 = alloca %class.GrSurfaceProxyView, align 8
  %34 = alloca { <2 x float>, <2 x float> }, align 8
  %35 = alloca <2 x i8*>, align 16
  %36 = alloca [2 x i8], align 1
  %37 = alloca <2 x double>, align 16
  %38 = alloca i32, align 4
  %39 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %40 = alloca { i64, i64 }, align 8
  %41 = bitcast { i64, i64 }* %40 to %struct.SkIRect*
  %42 = alloca %struct.SkIRect, align 4
  %43 = alloca %class.sk_sp.176, align 8
  %44 = alloca %class.SkSurfaceProps, align 4
  %45 = alloca %class.GrSurfaceProxyView, align 8
  %46 = alloca { <2 x float>, <2 x float> }, align 8
  %47 = bitcast { <2 x float>, <2 x float> }* %46 to %struct.SkRect*
  %48 = alloca { <2 x float>, <2 x float> }, align 8
  %49 = bitcast { <2 x float>, <2 x float> }* %48 to %struct.SkRect*
  %50 = alloca { i64, i64 }, align 8
  %51 = bitcast { i64, i64 }* %50 to %struct.SkIRect*
  %52 = alloca %class.GrColorInfo, align 8
  %53 = alloca %class.sk_sp.176, align 8
  %54 = alloca %"class.std::__1::unique_ptr.222", align 8
  %55 = alloca %class.GrSurfaceProxyView, align 8
  %56 = alloca %"class.std::__1::unique_ptr", align 8
  %57 = alloca %class.sk_sp.176, align 8
  %58 = alloca %class.SkSurfaceProps, align 4
  %59 = alloca %class.anon, align 8
  %60 = alloca { <2 x float>, <2 x float> }, align 8
  %61 = bitcast { <2 x float>, <2 x float> }* %60 to %struct.SkRect*
  %62 = alloca %class.GrSurfaceProxyView, align 8
  %63 = alloca %class.sk_sp.176, align 8
  %64 = alloca %struct.SkIRect, align 8
  %65 = alloca %struct.SkIRect, align 8
  store i32 %3, i32* %38, align 4
  %66 = load atomic i64, i64* @_ZZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFitE28trace_event_unique_atomic456.0.0 monotonic, align 8
  %67 = inttoptr i64 %66 to i8*
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %69, label %77

69:                                               ; preds = %11
  %70 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #11
  %71 = bitcast %class.SkEventTracer* %70 to i8* (%class.SkEventTracer*, i8*)***
  %72 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %71, align 8
  %73 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %72, i64 2
  %74 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %73, align 8
  %75 = tail call i8* %74(%class.SkEventTracer* %70, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #11
  %76 = ptrtoint i8* %75 to i64
  store atomic i64 %76, i64* @_ZZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFitE28trace_event_unique_atomic456.0.0 monotonic, align 8
  br label %77

77:                                               ; preds = %11, %69
  %78 = phi i8* [ %67, %11 ], [ %75, %69 ]
  %79 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #11
  %80 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %39, i64 0, i32 0
  %81 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %39, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %39, i64 0, i32 1, i32 1
  %83 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %39, i64 0, i32 1, i32 2
  %84 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %39, i64 0, i32 1
  %85 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %80, align 8
  %86 = load i8, i8* %78, align 1
  %87 = and i8 %86, 5
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %107, label %89

89:                                               ; preds = %77
  %90 = bitcast <2 x i8*>* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #11
  %91 = getelementptr inbounds <2 x i8*>, <2 x i8*>* %35, i64 0, i64 0
  store <2 x i8*> <i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)>, <2 x i8*>* %35, align 16
  %92 = getelementptr inbounds [2 x i8], [2 x i8]* %36, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %92) #11
  %93 = getelementptr inbounds [2 x i8], [2 x i8]* %36, i64 0, i64 1
  %94 = bitcast <2 x double>* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #11
  %95 = bitcast <2 x double>* %37 to i64*
  store i8 4, i8* %92, align 1
  %96 = insertelement <2 x float> undef, float %7, i32 0
  %97 = insertelement <2 x float> %96, float %8, i32 1
  %98 = fpext <2 x float> %97 to <2 x double>
  store i8 4, i8* %93, align 1
  store <2 x double> %98, <2 x double>* %37, align 16
  %99 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #11
  %100 = bitcast %class.SkEventTracer* %99 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %101 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %100, align 8
  %102 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %101, i64 4
  %103 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %102, align 8
  %104 = call i64 %103(%class.SkEventTracer* %99, i8 signext 88, i8* %78, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 0, i32 2, i8** nonnull %91, i8* nonnull %92, i64* nonnull %95, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %92) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #11
  %105 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %39, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %105, i64 0, i32 0
  store i8* %78, i8** %106, align 8
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i8** %82, align 8
  store i64 %104, i64* %83, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %105, %"struct.skia::tracing_internals::ScopedTracer::Data"** %80, align 8
  br label %107

107:                                              ; preds = %77, %89
  %108 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %109 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %108, align 8
  %110 = icmp eq %class.GrSurfaceProxy* %109, null
  br i1 %110, label %1738, label %111

111:                                              ; preds = %107
  %112 = bitcast %class.GrSurfaceProxy* %109 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %113 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %112, align 8
  %114 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %113, i64 3
  %115 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %114, align 8
  %116 = call %class.GrTextureProxy* %115(%class.GrSurfaceProxy* nonnull %109) #11
  %117 = icmp eq %class.GrTextureProxy* %116, null
  br i1 %117, label %1738, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %0, i64 0, i32 0, i32 0
  %120 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %119) #11
  %121 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %120, i64 0, i32 8
  %122 = load i32, i32* %121, align 8
  %123 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 2
  %124 = load i32, i32* %123, align 8
  %125 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = sub i32 %124, %126
  %128 = icmp sgt i32 %127, %122
  br i1 %128, label %1738, label %129

129:                                              ; preds = %118
  %130 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = sub i32 %131, %133
  %135 = icmp sgt i32 %134, %122
  br i1 %135, label %1738, label %136

136:                                              ; preds = %129
  %137 = fcmp ugt float %7, 0x3F9EB851E0000000
  br i1 %137, label %138, label %142

138:                                              ; preds = %136
  %139 = fmul float %7, 3.000000e+00
  %140 = call float @llvm.ceil.f32(float %139) #11
  %141 = fptosi float %140 to i32
  br label %142

142:                                              ; preds = %136, %138
  %143 = phi i32 [ %141, %138 ], [ 0, %136 ]
  %144 = fcmp ugt float %8, 0x3F9EB851E0000000
  br i1 %144, label %145, label %149

145:                                              ; preds = %142
  %146 = fmul float %8, 3.000000e+00
  %147 = call float @llvm.ceil.f32(float %146) #11
  %148 = fptosi float %147 to i32
  br label %149

149:                                              ; preds = %142, %145
  %150 = phi i32 [ %148, %145 ], [ 0, %142 ]
  %151 = icmp eq i32 %9, 0
  %152 = icmp eq i32 %9, 3
  switch i32 %9, label %231 [
    i32 3, label %153
    i32 0, label %153
  ]

153:                                              ; preds = %149, %149
  %154 = bitcast { i64, i64 }* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #11
  %155 = bitcast { i64, i64 }* %40 to i32*
  %156 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %41, i64 0, i32 1
  %157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %40, i64 0, i32 1
  %158 = bitcast i64* %157 to i32*
  %159 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %41, i64 0, i32 3
  %160 = sext i32 %126 to i64
  %161 = sext i32 %143 to i64
  %162 = sub nsw i64 %160, %161
  %163 = icmp slt i64 %162, 2147483647
  %164 = select i1 %163, i64 %162, i64 2147483647
  %165 = icmp sgt i64 %164, -2147483647
  %166 = select i1 %165, i64 %164, i64 -2147483647
  %167 = sext i32 %133 to i64
  %168 = sext i32 %150 to i64
  %169 = sub nsw i64 %167, %168
  %170 = icmp slt i64 %169, 2147483647
  %171 = select i1 %170, i64 %169, i64 2147483647
  %172 = icmp sgt i64 %171, -2147483647
  %173 = select i1 %172, i64 %171, i64 -2147483647
  %174 = sext i32 %124 to i64
  %175 = add nsw i64 %161, %174
  %176 = icmp slt i64 %175, 2147483647
  %177 = select i1 %176, i64 %175, i64 2147483647
  %178 = icmp sgt i64 %177, -2147483647
  %179 = select i1 %178, i64 %177, i64 -2147483647
  %180 = sext i32 %131 to i64
  %181 = add nsw i64 %168, %180
  %182 = icmp slt i64 %181, 2147483647
  %183 = select i1 %182, i64 %181, i64 2147483647
  %184 = icmp sgt i64 %183, -2147483647
  %185 = select i1 %184, i64 %183, i64 -2147483647
  %186 = shl nsw i64 %173, 32
  %187 = and i64 %166, 4294967295
  %188 = or i64 %186, %187
  %189 = shl nsw i64 %185, 32
  %190 = and i64 %179, 4294967295
  %191 = or i64 %189, %190
  %192 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %40, i64 0, i32 0
  store i64 %188, i64* %192, align 8
  store i64 %191, i64* %157, align 8
  %193 = bitcast %struct.SkIRect* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %193) #11
  %194 = bitcast %struct.SkIRect* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %194, i8 -86, i64 16, i1 false)
  %195 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %42, %struct.SkIRect* nonnull dereferenceable(16) %41, %struct.SkIRect* nonnull dereferenceable(16) %6) #11
  br i1 %195, label %229, label %196

196:                                              ; preds = %153
  br i1 %152, label %197, label %198

197:                                              ; preds = %196
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #11
  br label %1738

198:                                              ; preds = %196
  %199 = load i32, i32* %155, align 8
  %200 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %201 = load i32, i32* %200, align 8
  %202 = icmp slt i32 %199, %201
  br i1 %202, label %206, label %203

203:                                              ; preds = %198
  %204 = add nsw i32 %201, -1
  %205 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  store i32 %204, i32* %205, align 8
  br label %213

206:                                              ; preds = %198
  %207 = load i32, i32* %158, align 8
  %208 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %209 = load i32, i32* %208, align 8
  %210 = icmp sgt i32 %207, %209
  br i1 %210, label %213, label %211

211:                                              ; preds = %206
  %212 = add nsw i32 %209, 1
  store i32 %212, i32* %200, align 8
  br label %213

213:                                              ; preds = %206, %211, %203
  %214 = load i32, i32* %156, align 4
  %215 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = icmp slt i32 %214, %216
  br i1 %217, label %221, label %218

218:                                              ; preds = %213
  %219 = add nsw i32 %216, -1
  %220 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  store i32 %219, i32* %220, align 4
  br label %228

221:                                              ; preds = %213
  %222 = load i32, i32* %159, align 4
  %223 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = icmp sgt i32 %222, %224
  br i1 %225, label %228, label %226

226:                                              ; preds = %221
  %227 = add nsw i32 %224, 1
  store i32 %227, i32* %215, align 4
  br label %228

228:                                              ; preds = %218, %226, %221
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #11
  br label %231

229:                                              ; preds = %153
  %230 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %230, i8* nonnull align 4 %193, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #11
  br i1 %152, label %248, label %231

231:                                              ; preds = %228, %149, %229
  %232 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %233 = load i32, i32* %232, align 8
  %234 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %235 = load i32, i32* %234, align 8
  %236 = sub i32 %233, %235
  %237 = icmp eq i32 %236, 1
  %238 = select i1 %237, float 0.000000e+00, float %7
  %239 = select i1 %237, i32 0, i32 %143
  %240 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = sub i32 %241, %243
  %245 = icmp eq i32 %244, 1
  %246 = select i1 %245, float 0.000000e+00, float %8
  %247 = select i1 %245, i32 0, i32 %150
  br label %248

248:                                              ; preds = %231, %229
  %249 = phi float [ %8, %229 ], [ %246, %231 ]
  %250 = phi float [ %7, %229 ], [ %238, %231 ]
  %251 = phi i32 [ %150, %229 ], [ %247, %231 ]
  %252 = phi i32 [ %143, %229 ], [ %239, %231 ]
  %253 = or i32 %252, %251
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %396

255:                                              ; preds = %248
  %256 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %4, i64 0, i32 0
  %257 = bitcast %class.sk_sp.176* %4 to i64*
  %258 = load i64, i64* %257, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %256, align 8
  %259 = bitcast %class.sk_sp.176* %43 to i64*
  store i64 %258, i64* %259, align 8
  %260 = zext i32 %134 to i64
  %261 = shl nuw i64 %260, 32
  %262 = zext i32 %127 to i64
  %263 = or i64 %261, %262
  %264 = bitcast %class.SkSurfaceProps* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %264) #11
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %44) #11
  %265 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %108, align 8
  %266 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %265, i64 0, i32 15
  %267 = load i8, i8* %266, align 1, !range !2
  %268 = icmp ne i8 %267, 0
  %269 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %270 = load i32, i32* %269, align 8
  %271 = call %class.GrSurfaceDrawContext* @_ZN20GrSurfaceDrawContext4MakeEP18GrRecordingContext11GrColorType5sk_spI12SkColorSpaceE12SkBackingFit7SkISizeRK14SkSurfacePropsi11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %0, i32 %2, %class.sk_sp.176* nonnull %43, i32 %10, i64 %263, %class.SkSurfaceProps* nonnull dereferenceable(8) %44, i32 1, i1 zeroext false, i1 zeroext %268, i32 %270, i1 zeroext true) #11
  %272 = ptrtoint %class.GrSurfaceDrawContext* %271 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %264) #11
  %273 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %43, i64 0, i32 0
  %274 = load %class.SkColorSpace*, %class.SkColorSpace** %273, align 8
  %275 = icmp eq %class.SkColorSpace* %274, null
  br i1 %275, label %282, label %276

276:                                              ; preds = %255
  %277 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %274, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = atomicrmw add i32* %277, i32 -1 acq_rel
  %279 = icmp eq i32 %278, 1
  br i1 %279, label %280, label %282

280:                                              ; preds = %276
  %281 = bitcast %class.SkColorSpace* %274 to i8*
  call void @_ZdlPv(i8* %281) #12
  br label %282

282:                                              ; preds = %255, %276, %280
  %283 = icmp eq %class.GrSurfaceDrawContext* %271, null
  br i1 %283, label %1738, label %284

284:                                              ; preds = %282
  %285 = icmp ult i32 %9, 4
  br i1 %285, label %287, label %286

286:                                              ; preds = %284
  call void @llvm.trap() #11
  unreachable

287:                                              ; preds = %284
  %288 = zext i32 %9 to i64
  %289 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %290 = load i64, i64* %289, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %108, align 8
  %291 = bitcast %class.GrSurfaceProxyView* %45 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %45, i64 0, i32 1
  %293 = load i32, i32* %269, align 8
  store i32 %293, i32* %292, align 8
  %294 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %45, i64 0, i32 2, i32 0
  %295 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %296 = load i16, i16* %295, align 2
  store i16 %296, i16* %294, align 4
  %297 = load i32, i32* %38, align 4
  %298 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #11
  %299 = shl nuw nsw i64 %288, 8
  %300 = or i64 %299, %288
  %301 = or i64 %300, 2863267840
  %302 = bitcast { <2 x float>, <2 x float> }* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %302) #11
  %303 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %304 = load i32, i32* %303, align 8
  %305 = sitofp i32 %304 to float
  %306 = insertelement <2 x float> undef, float %305, i32 0
  %307 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %308 = load i32, i32* %307, align 4
  %309 = sitofp i32 %308 to float
  %310 = insertelement <2 x float> %306, float %309, i32 1
  %311 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %312 = load i32, i32* %311, align 8
  %313 = sitofp i32 %312 to float
  %314 = insertelement <2 x float> undef, float %313, i32 0
  %315 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %316 = load i32, i32* %315, align 4
  %317 = sitofp i32 %316 to float
  %318 = insertelement <2 x float> %314, float %317, i32 1
  %319 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %46, i64 0, i32 0
  store <2 x float> %310, <2 x float>* %319, align 8
  %320 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %46, i64 0, i32 1
  store <2 x float> %318, <2 x float>* %320, align 8
  %321 = bitcast { <2 x float>, <2 x float> }* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %321) #11
  %322 = load i32, i32* %125, align 8
  %323 = sitofp i32 %322 to float
  %324 = insertelement <2 x float> undef, float %323, i32 0
  %325 = load i32, i32* %132, align 4
  %326 = sitofp i32 %325 to float
  %327 = insertelement <2 x float> %324, float %326, i32 1
  %328 = load i32, i32* %123, align 8
  %329 = sitofp i32 %328 to float
  %330 = insertelement <2 x float> undef, float %329, i32 0
  %331 = load i32, i32* %130, align 4
  %332 = sitofp i32 %331 to float
  %333 = insertelement <2 x float> %330, float %332, i32 1
  %334 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %48, i64 0, i32 0
  store <2 x float> %327, <2 x float>* %334, align 8
  %335 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %48, i64 0, i32 1
  store <2 x float> %333, <2 x float>* %335, align 8
  %336 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %119) #11
  %337 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectS8_RK6GrCapsPKf(%class.GrSurfaceProxyView* nonnull %45, i32 %297, %class.SkMatrix* dereferenceable(40) %298, i64 %301, i32 0, %struct.SkRect* nonnull dereferenceable(16) %47, %struct.SkRect* nonnull dereferenceable(16) %49, %class.GrCaps* dereferenceable(232) %336, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0)) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %321) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %302) #11
  %338 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %45, i64 0, i32 0, i32 0
  %339 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %338, align 8
  %340 = icmp eq %class.GrSurfaceProxy* %339, null
  br i1 %340, label %353, label %341

341:                                              ; preds = %287
  %342 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %339, i64 0, i32 1
  %343 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %342, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = atomicrmw add i32* %343, i32 -1 acq_rel
  %345 = icmp eq i32 %344, 1
  br i1 %345, label %346, label %353

346:                                              ; preds = %341
  %347 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %342, i64 -2
  %348 = bitcast %class.SkNVRefCnt* %347 to %class.GrSurfaceProxy*
  %349 = bitcast %class.SkNVRefCnt* %347 to void (%class.GrSurfaceProxy*)***
  %350 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %349, align 8
  %351 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %350, i64 1
  %352 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %351, align 8
  call void %352(%class.GrSurfaceProxy* nonnull %348) #11
  br label %353

353:                                              ; preds = %287, %341, %346
  %354 = bitcast %class.GrSurfaceDrawContext* %271 to %class.GrSurfaceFillContext*
  %355 = bitcast { i64, i64 }* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %355) #11
  %356 = load i32, i32* %123, align 8
  %357 = load i32, i32* %125, align 8
  %358 = sub i32 %356, %357
  %359 = load i32, i32* %130, align 4
  %360 = load i32, i32* %132, align 4
  %361 = sub i32 %359, %360
  %362 = zext i32 %361 to i64
  %363 = shl nuw i64 %362, 32
  %364 = zext i32 %358 to i64
  %365 = or i64 %363, %364
  %366 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %50, i64 0, i32 0
  store i64 0, i64* %366, align 8
  %367 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %50, i64 0, i32 1
  store i64 %365, i64* %367, align 8
  %368 = bitcast { <2 x float>, <2 x float> }* %29 to %struct.SkRect*
  %369 = bitcast { <2 x float>, <2 x float> }* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %369) #11
  %370 = sitofp i32 %357 to float
  %371 = insertelement <2 x float> undef, float %370, i32 0
  %372 = sitofp i32 %360 to float
  %373 = insertelement <2 x float> %371, float %372, i32 1
  %374 = sitofp i32 %356 to float
  %375 = insertelement <2 x float> undef, float %374, i32 0
  %376 = sitofp i32 %359 to float
  %377 = insertelement <2 x float> %375, float %376, i32 1
  %378 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %29, i64 0, i32 0
  store <2 x float> %373, <2 x float>* %378, align 8
  %379 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %29, i64 0, i32 1
  store <2 x float> %377, <2 x float>* %379, align 8
  %380 = bitcast { <2 x float>, <2 x float> }* %28 to %struct.SkRect*
  %381 = bitcast %class.SkMatrix* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %381) #11
  %382 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %27, i64 0, i32 1
  %383 = bitcast { <2 x float>, <2 x float> }* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %383) #11
  %384 = sitofp i32 %358 to float
  %385 = insertelement <2 x float> undef, float %384, i32 0
  %386 = sitofp i32 %361 to float
  %387 = insertelement <2 x float> %385, float %386, i32 1
  %388 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %28, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %388, align 8
  %389 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %28, i64 0, i32 1
  store <2 x float> %387, <2 x float>* %389, align 8
  %390 = bitcast %class.SkMatrix* %27 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %390, align 16, !alias.scope !3
  %391 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %27, i64 0, i32 0, i64 4
  %392 = bitcast float* %391 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %392, align 16, !alias.scope !3
  %393 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %27, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %393, align 16, !alias.scope !3
  store i32 16, i32* %382, align 4, !alias.scope !3
  %394 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %27, %struct.SkRect* nonnull dereferenceable(16) %380, %struct.SkRect* nonnull dereferenceable(16) %368, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %383) #11
  %395 = call %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* nonnull dereferenceable(40) %27, %class.GrFragmentProcessor* %337) #11
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* nonnull %354, %struct.SkIRect* nonnull dereferenceable(16) %51, %class.GrFragmentProcessor* %395) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %381) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %369) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %355) #11
  br label %1738

396:                                              ; preds = %248
  %397 = fcmp ole float %250, 4.000000e+00
  %398 = fcmp ole float %249, 4.000000e+00
  %399 = and i1 %398, %397
  br i1 %399, label %400, label %1034

400:                                              ; preds = %396
  %401 = shl nsw i32 %252, 1
  %402 = or i32 %401, 1
  %403 = shl nsw i32 %251, 1
  %404 = or i32 %403, 1
  %405 = mul i32 %402, %404
  %406 = icmp sgt i32 %252, 0
  %407 = icmp sgt i32 %251, 0
  %408 = and i1 %407, %406
  %409 = icmp slt i32 %405, 29
  %410 = and i1 %408, %409
  br i1 %410, label %411, label %687

411:                                              ; preds = %400
  %412 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %119) #11
  %413 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %412, i64 0, i32 2, i32 0
  %414 = load %class.GrShaderCaps*, %class.GrShaderCaps** %413, align 8
  %415 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %414, i64 0, i32 2
  %416 = bitcast i56* %415 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = and i64 %417, 1048576
  %419 = icmp eq i64 %418, 0
  br i1 %419, label %420, label %687

420:                                              ; preds = %411
  %421 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %422 = load i64, i64* %421, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %108, align 8
  %423 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %424 = load i32, i32* %423, align 8
  %425 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %426 = load i16, i16* %425, align 2
  %427 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %4, i64 0, i32 0
  %428 = bitcast %class.sk_sp.176* %4 to i64*
  %429 = load i64, i64* %428, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %427, align 8
  %430 = bitcast %class.sk_sp.176* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %430)
  %431 = bitcast %class.GrSurfaceProxyView* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %431)
  %432 = bitcast i64* %20 to %struct.SkISize*
  %433 = bitcast i64* %21 to %struct.SkIPoint*
  %434 = bitcast %class.sk_sp.176* %18 to i64*
  store i64 %429, i64* %434, align 8
  %435 = zext i32 %134 to i64
  %436 = shl nuw i64 %435, 32
  %437 = zext i32 %127 to i64
  %438 = or i64 %436, %437
  %439 = bitcast %class.SkSurfaceProps* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %439) #11
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %19) #11
  %440 = inttoptr i64 %422 to %class.GrSurfaceProxy*
  %441 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %440, i64 0, i32 15
  %442 = load i8, i8* %441, align 1, !range !2
  %443 = icmp ne i8 %442, 0
  %444 = call %class.GrSurfaceDrawContext* @_ZN20GrSurfaceDrawContext4MakeEP18GrRecordingContext11GrColorType5sk_spI12SkColorSpaceE12SkBackingFit7SkISizeRK14SkSurfacePropsi11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %0, i32 %2, %class.sk_sp.176* nonnull %18, i32 %10, i64 %438, %class.SkSurfaceProps* nonnull dereferenceable(8) %19, i32 1, i1 zeroext false, i1 zeroext %443, i32 %424, i1 zeroext true) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %439) #11
  %445 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %18, i64 0, i32 0
  %446 = load %class.SkColorSpace*, %class.SkColorSpace** %445, align 8
  %447 = icmp eq %class.SkColorSpace* %446, null
  br i1 %447, label %454, label %448

448:                                              ; preds = %420
  %449 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %446, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %450 = atomicrmw add i32* %449, i32 -1 acq_rel
  %451 = icmp eq i32 %450, 1
  br i1 %451, label %452, label %454

452:                                              ; preds = %448
  %453 = bitcast %class.SkColorSpace* %446 to i8*
  call void @_ZdlPv(i8* %453) #12
  br label %454

454:                                              ; preds = %452, %448, %420
  %455 = icmp eq %class.GrSurfaceDrawContext* %444, null
  br i1 %455, label %671, label %456

456:                                              ; preds = %454
  %457 = bitcast { <2 x float>, <2 x float> }* %26 to %struct.SkRect*
  %458 = bitcast { <2 x float>, <2 x float> }* %25 to %struct.SkRect*
  %459 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %459) #11
  %460 = zext i32 %404 to i64
  %461 = shl nuw i64 %460, 32
  %462 = zext i32 %402 to i64
  %463 = or i64 %461, %462
  store i64 %463, i64* %20, align 8
  %464 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %464) #11
  %465 = zext i32 %251 to i64
  %466 = shl nuw i64 %465, 32
  %467 = zext i32 %252 to i64
  %468 = or i64 %466, %467
  store i64 %468, i64* %21, align 8
  %469 = bitcast %class.GrPaint* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %469) #11
  %470 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %471 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %22, i64 0, i32 2, i32 0, i32 0, i32 0
  %472 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %22, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %469, i8 -86, i64 28, i1 false) #11
  %473 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %22, i64 0, i32 6, i64 0
  %474 = bitcast i8* %473 to i32*
  store i32 -1431655766, i32* %474, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %469, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %472, align 8
  %475 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %22, i64 0, i32 5
  %476 = bitcast %struct.SkRGBA4f* %475 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %476, i8* align 4 bitcast (%struct.SkRGBA4f* @_ZL17SK_PMColor4fWHITE to i8*), i64 16, i1 false) #11
  %477 = icmp ult i32 %9, 4
  br i1 %477, label %479, label %478

478:                                              ; preds = %456
  call void @llvm.trap() #11
  unreachable

479:                                              ; preds = %456
  %480 = trunc i32 %9 to i8
  %481 = bitcast [28 x float]* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %481) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %481, i8 -1, i64 112, i1 false) #11
  %482 = getelementptr inbounds [28 x float], [28 x float]* %23, i64 0, i64 0
  %483 = fmul float %250, %250
  %484 = fmul float %483, 2.000000e+00
  %485 = fmul float %249, %249
  %486 = fmul float %485, 2.000000e+00
  %487 = fdiv float 1.000000e+00, %484
  %488 = fdiv float 1.000000e+00, %486
  %489 = icmp sgt i32 %402, 0
  br i1 %489, label %490, label %495

490:                                              ; preds = %479
  %491 = sdiv i32 %404, 2
  %492 = and i32 %252, 2147483647
  %493 = icmp sgt i32 %404, 0
  %494 = sext i32 %402 to i64
  br label %558

495:                                              ; preds = %566, %479
  %496 = phi float [ 0.000000e+00, %479 ], [ %567, %566 ]
  %497 = fdiv float 1.000000e+00, %496
  %498 = icmp sgt i32 %405, 0
  br i1 %498, label %499, label %594

499:                                              ; preds = %495
  %500 = zext i32 %405 to i64
  %501 = icmp ult i32 %405, 8
  br i1 %501, label %516, label %518

502:                                              ; preds = %531, %518
  %503 = phi i64 [ 0, %518 ], [ %555, %531 ]
  %504 = icmp eq i64 %527, 0
  br i1 %504, label %516, label %505

505:                                              ; preds = %502
  %506 = getelementptr inbounds [28 x float], [28 x float]* %23, i64 0, i64 %503
  %507 = bitcast float* %506 to <4 x float>*
  %508 = load <4 x float>, <4 x float>* %507, align 16
  %509 = getelementptr inbounds float, float* %506, i64 4
  %510 = bitcast float* %509 to <4 x float>*
  %511 = load <4 x float>, <4 x float>* %510, align 16
  %512 = fmul <4 x float> %521, %508
  %513 = fmul <4 x float> %523, %511
  %514 = bitcast float* %506 to <4 x float>*
  store <4 x float> %512, <4 x float>* %514, align 16
  %515 = bitcast float* %509 to <4 x float>*
  store <4 x float> %513, <4 x float>* %515, align 16
  br label %516

516:                                              ; preds = %505, %502, %499
  %517 = phi i64 [ 0, %499 ], [ %519, %502 ], [ %519, %505 ]
  br label %587

518:                                              ; preds = %499
  %519 = and i64 %500, 4294967288
  %520 = insertelement <4 x float> undef, float %497, i32 0
  %521 = shufflevector <4 x float> %520, <4 x float> undef, <4 x i32> zeroinitializer
  %522 = insertelement <4 x float> undef, float %497, i32 0
  %523 = shufflevector <4 x float> %522, <4 x float> undef, <4 x i32> zeroinitializer
  %524 = add nsw i64 %519, -8
  %525 = lshr exact i64 %524, 3
  %526 = add nuw nsw i64 %525, 1
  %527 = and i64 %526, 1
  %528 = icmp eq i64 %524, 0
  br i1 %528, label %502, label %529

529:                                              ; preds = %518
  %530 = sub nuw nsw i64 %526, %527
  br label %531

531:                                              ; preds = %531, %529
  %532 = phi i64 [ 0, %529 ], [ %555, %531 ]
  %533 = phi i64 [ %530, %529 ], [ %556, %531 ]
  %534 = getelementptr inbounds [28 x float], [28 x float]* %23, i64 0, i64 %532
  %535 = bitcast float* %534 to <4 x float>*
  %536 = load <4 x float>, <4 x float>* %535, align 16
  %537 = getelementptr inbounds float, float* %534, i64 4
  %538 = bitcast float* %537 to <4 x float>*
  %539 = load <4 x float>, <4 x float>* %538, align 16
  %540 = fmul <4 x float> %521, %536
  %541 = fmul <4 x float> %523, %539
  %542 = bitcast float* %534 to <4 x float>*
  store <4 x float> %540, <4 x float>* %542, align 16
  %543 = bitcast float* %537 to <4 x float>*
  store <4 x float> %541, <4 x float>* %543, align 16
  %544 = or i64 %532, 8
  %545 = getelementptr inbounds [28 x float], [28 x float]* %23, i64 0, i64 %544
  %546 = bitcast float* %545 to <4 x float>*
  %547 = load <4 x float>, <4 x float>* %546, align 16
  %548 = getelementptr inbounds float, float* %545, i64 4
  %549 = bitcast float* %548 to <4 x float>*
  %550 = load <4 x float>, <4 x float>* %549, align 16
  %551 = fmul <4 x float> %521, %547
  %552 = fmul <4 x float> %523, %550
  %553 = bitcast float* %545 to <4 x float>*
  store <4 x float> %551, <4 x float>* %553, align 16
  %554 = bitcast float* %548 to <4 x float>*
  store <4 x float> %552, <4 x float>* %554, align 16
  %555 = add i64 %532, 16
  %556 = add i64 %533, -2
  %557 = icmp eq i64 %556, 0
  br i1 %557, label %502, label %531, !llvm.loop !8

558:                                              ; preds = %566, %490
  %559 = phi i64 [ 0, %490 ], [ %568, %566 ]
  %560 = phi float [ 0.000000e+00, %490 ], [ %567, %566 ]
  %561 = trunc i64 %559 to i32
  %562 = sub i32 %561, %492
  %563 = sitofp i32 %562 to float
  %564 = fmul float %563, %563
  %565 = fmul float %487, %564
  br i1 %493, label %570, label %566

566:                                              ; preds = %570, %558
  %567 = phi float [ %560, %558 ], [ %584, %570 ]
  %568 = add nuw nsw i64 %559, 1
  %569 = icmp eq i64 %568, %462
  br i1 %569, label %495, label %558

570:                                              ; preds = %558, %570
  %571 = phi i64 [ %585, %570 ], [ 0, %558 ]
  %572 = phi float [ %584, %570 ], [ %560, %558 ]
  %573 = trunc i64 %571 to i32
  %574 = sub i32 %573, %491
  %575 = sitofp i32 %574 to float
  %576 = fmul float %575, %575
  %577 = fmul float %488, %576
  %578 = fadd float %565, %577
  %579 = fsub float -0.000000e+00, %578
  %580 = call float @expf(float %579) #11
  %581 = mul nsw i64 %571, %494
  %582 = add nsw i64 %581, %559
  %583 = getelementptr inbounds [28 x float], [28 x float]* %23, i64 0, i64 %582
  store float %580, float* %583, align 4
  %584 = fadd float %572, %580
  %585 = add nuw nsw i64 %571, 1
  %586 = icmp eq i64 %585, %460
  br i1 %586, label %566, label %570

587:                                              ; preds = %516, %587
  %588 = phi i64 [ %592, %587 ], [ %517, %516 ]
  %589 = getelementptr inbounds [28 x float], [28 x float]* %23, i64 0, i64 %588
  %590 = load float, float* %589, align 4
  %591 = fmul float %497, %590
  store float %591, float* %589, align 4
  %592 = add nuw nsw i64 %588, 1
  %593 = icmp eq i64 %592, %500
  br i1 %593, label %594, label %587, !llvm.loop !10

594:                                              ; preds = %587, %495
  %595 = bitcast %class.GrSurfaceProxyView* %24 to i64*
  store i64 %422, i64* %595, align 8
  %596 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %24, i64 0, i32 1
  store i32 %424, i32* %596, align 8
  %597 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %24, i64 0, i32 2, i32 0
  store i16 %426, i16* %597, align 4
  %598 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %444, i64 0, i32 0, i32 0
  %599 = call %class.GrCaps* @_ZNK16GrSurfaceContext4capsEv(%class.GrSurfaceContext* %598) #11
  %600 = call %class.GrFragmentProcessor* @_ZN25GrMatrixConvolutionEffect4MakeEP18GrRecordingContext18GrSurfaceProxyViewRK7SkIRectRK7SkISizePKfffRK8SkIPointN14GrSamplerState8WrapModeEbRK6GrCaps(%class.GrRecordingContext* %0, %class.GrSurfaceProxyView* nonnull %24, %struct.SkIRect* nonnull dereferenceable(16) %6, %struct.SkISize* nonnull dereferenceable(8) %432, float* nonnull %482, float 1.000000e+00, float 0.000000e+00, %struct.SkIPoint* nonnull dereferenceable(8) %433, i8 zeroext %480, i1 zeroext true, %class.GrCaps* dereferenceable(232) %599) #11
  %601 = ptrtoint %class.GrFragmentProcessor* %600 to i64
  %602 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %24, i64 0, i32 0, i32 0
  %603 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %602, align 8
  %604 = icmp eq %class.GrSurfaceProxy* %603, null
  br i1 %604, label %617, label %605

605:                                              ; preds = %594
  %606 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %603, i64 0, i32 1
  %607 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %606, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %608 = atomicrmw add i32* %607, i32 -1 acq_rel
  %609 = icmp eq i32 %608, 1
  br i1 %609, label %610, label %617

610:                                              ; preds = %605
  %611 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %606, i64 -2
  %612 = bitcast %class.SkNVRefCnt* %611 to %class.GrSurfaceProxy*
  %613 = bitcast %class.SkNVRefCnt* %611 to void (%class.GrSurfaceProxy*)***
  %614 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %613, align 8
  %615 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %614, i64 1
  %616 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %615, align 8
  call void %616(%class.GrSurfaceProxy* nonnull %612) #11
  br label %617

617:                                              ; preds = %610, %605, %594
  %618 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %22, i64 0, i32 1
  %619 = getelementptr inbounds %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123"* %618, i64 0, i32 0, i32 0, i32 0
  %620 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %619, align 8
  %621 = bitcast %"class.std::__1::unique_ptr.123"* %618 to i64*
  store i64 %601, i64* %621, align 8
  %622 = icmp eq %class.GrFragmentProcessor* %620, null
  br i1 %622, label %628, label %623

623:                                              ; preds = %617
  %624 = bitcast %class.GrFragmentProcessor* %620 to void (%class.GrFragmentProcessor*)***
  %625 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %624, align 8
  %626 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %625, i64 1
  %627 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %626, align 8
  call void %627(%class.GrFragmentProcessor* nonnull %620) #11
  br label %628

628:                                              ; preds = %623, %617
  store i8 0, i8* %472, align 8
  call void @_ZN7GrPaint22setPorterDuffXPFactoryE11SkBlendMode(%class.GrPaint* nonnull %22, i32 1) #11
  %629 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #11
  %630 = bitcast { <2 x float>, <2 x float> }* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %630) #11
  %631 = load i32, i32* %123, align 8
  %632 = load i32, i32* %125, align 8
  %633 = sub i32 %631, %632
  %634 = load i32, i32* %130, align 4
  %635 = load i32, i32* %132, align 4
  %636 = sub i32 %634, %635
  %637 = sitofp i32 %633 to float
  %638 = insertelement <2 x float> undef, float %637, i32 0
  %639 = sitofp i32 %636 to float
  %640 = insertelement <2 x float> %638, float %639, i32 1
  %641 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %641, align 8
  %642 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i64 0, i32 1
  store <2 x float> %640, <2 x float>* %642, align 8
  %643 = bitcast { <2 x float>, <2 x float> }* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %643) #11
  %644 = sitofp i32 %632 to float
  %645 = insertelement <2 x float> undef, float %644, i32 0
  %646 = sitofp i32 %635 to float
  %647 = insertelement <2 x float> %645, float %646, i32 1
  %648 = sitofp i32 %631 to float
  %649 = insertelement <2 x float> undef, float %648, i32 0
  %650 = sitofp i32 %634 to float
  %651 = insertelement <2 x float> %649, float %650, i32 1
  %652 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %26, i64 0, i32 0
  store <2 x float> %647, <2 x float>* %652, align 8
  %653 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %26, i64 0, i32 1
  store <2 x float> %651, <2 x float>* %653, align 8
  call void @_ZN20GrSurfaceDrawContext14fillRectToRectEPK6GrClipO7GrPaint4GrAARK8SkMatrixRK6SkRectSB_(%class.GrSurfaceDrawContext* nonnull %444, %class.GrClip* null, %class.GrPaint* nonnull dereferenceable(48) %22, i1 zeroext false, %class.SkMatrix* dereferenceable(40) %629, %struct.SkRect* nonnull dereferenceable(16) %458, %struct.SkRect* nonnull dereferenceable(16) %457) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %643) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %630) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %481) #11
  %654 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %471, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %471, align 8
  %655 = icmp eq %class.GrFragmentProcessor* %654, null
  br i1 %655, label %661, label %656

656:                                              ; preds = %628
  %657 = bitcast %class.GrFragmentProcessor* %654 to void (%class.GrFragmentProcessor*)***
  %658 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %657, align 8
  %659 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %658, i64 1
  %660 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %659, align 8
  call void %660(%class.GrFragmentProcessor* nonnull %654) #11
  br label %661

661:                                              ; preds = %656, %628
  %662 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %470, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %470, align 8
  %663 = icmp eq %class.GrFragmentProcessor* %662, null
  br i1 %663, label %669, label %664

664:                                              ; preds = %661
  %665 = bitcast %class.GrFragmentProcessor* %662 to void (%class.GrFragmentProcessor*)***
  %666 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %665, align 8
  %667 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %666, i64 1
  %668 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %667, align 8
  call void %668(%class.GrFragmentProcessor* nonnull %662) #11
  br label %669

669:                                              ; preds = %661, %664
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %469) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %464) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %459) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %430)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %431)
  %670 = ptrtoint %class.GrSurfaceDrawContext* %444 to i64
  br label %1738

671:                                              ; preds = %454
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %430)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %431)
  %672 = ptrtoint %class.GrSurfaceDrawContext* %444 to i64
  %673 = icmp eq i64 %422, 0
  br i1 %673, label %1738, label %674

674:                                              ; preds = %671
  %675 = inttoptr i64 %422 to %class.GrSurfaceProxy*
  %676 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %675, i64 0, i32 1
  %677 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %676, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %678 = atomicrmw add i32* %677, i32 -1 acq_rel
  %679 = icmp eq i32 %678, 1
  br i1 %679, label %680, label %1738

680:                                              ; preds = %674
  %681 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %676, i64 -2
  %682 = bitcast %class.SkNVRefCnt* %681 to %class.GrSurfaceProxy*
  %683 = bitcast %class.SkNVRefCnt* %681 to void (%class.GrSurfaceProxy*)***
  %684 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %683, align 8
  %685 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %684, i64 1
  %686 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %685, align 8
  call void %686(%class.GrSurfaceProxy* nonnull %682) #11
  br label %1738

687:                                              ; preds = %400, %411
  %688 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %689 = load i64, i64* %688, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %108, align 8
  %690 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %691 = load i32, i32* %690, align 8
  %692 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %693 = load i16, i16* %692, align 2
  %694 = load i32, i32* %38, align 4
  %695 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %4, i64 0, i32 0
  %696 = bitcast %class.sk_sp.176* %4 to i64*
  %697 = load i64, i64* %696, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %695, align 8
  %698 = bitcast %struct.SkIRect* %6 to i64*
  %699 = load i64, i64* %698, align 8
  %700 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %701 = bitcast i32* %700 to i64*
  %702 = load i64, i64* %701, align 8
  %703 = bitcast %struct.SkIRect* %5 to i64*
  %704 = load i64, i64* %703, align 8
  %705 = bitcast i32* %123 to i64*
  %706 = load i64, i64* %705, align 8
  %707 = bitcast %class.GrSurfaceProxyView* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %707)
  %708 = bitcast %struct.SkIRect* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %708)
  %709 = bitcast %class.sk_sp.176* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %709)
  %710 = bitcast %class.GrSurfaceProxyView* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %710)
  %711 = bitcast %struct.SkIRect* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %711)
  %712 = bitcast %class.sk_sp.176* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %712)
  %713 = lshr i64 %704, 32
  %714 = trunc i64 %699 to i32
  %715 = lshr i64 %699, 32
  %716 = trunc i64 %715 to i32
  br i1 %406, label %717, label %940

717:                                              ; preds = %687
  %718 = trunc i64 %713 to i32
  %719 = trunc i64 %704 to i32
  %720 = select i1 %407, i32 0, i32 %10
  %721 = trunc i64 %706 to i32
  %722 = lshr i64 %706, 32
  %723 = trunc i64 %722 to i32
  %724 = icmp eq i32 %251, 0
  br i1 %724, label %828, label %725

725:                                              ; preds = %717
  %726 = sub nsw i32 0, %251
  %727 = shl i64 %704, 32
  %728 = ashr exact i64 %727, 32
  %729 = icmp slt i64 %728, 2147483647
  %730 = select i1 %729, i64 %728, i64 2147483647
  %731 = icmp sgt i64 %730, -2147483647
  %732 = select i1 %731, i64 %730, i64 -2147483647
  %733 = trunc i64 %732 to i32
  %734 = ashr i64 %704, 32
  %735 = sext i32 %726 to i64
  %736 = add nsw i64 %734, %735
  %737 = icmp slt i64 %736, 2147483647
  %738 = select i1 %737, i64 %736, i64 2147483647
  %739 = icmp sgt i64 %738, -2147483647
  %740 = select i1 %739, i64 %738, i64 -2147483647
  %741 = trunc i64 %740 to i32
  %742 = shl i64 %706, 32
  %743 = ashr exact i64 %742, 32
  %744 = icmp slt i64 %743, 2147483647
  %745 = select i1 %744, i64 %743, i64 2147483647
  %746 = icmp sgt i64 %745, -2147483647
  %747 = select i1 %746, i64 %745, i64 -2147483647
  %748 = trunc i64 %747 to i32
  %749 = ashr i64 %706, 32
  %750 = sub nsw i64 %749, %735
  %751 = icmp slt i64 %750, 2147483647
  %752 = select i1 %751, i64 %750, i64 2147483647
  %753 = icmp sgt i64 %752, -2147483647
  %754 = select i1 %753, i64 %752, i64 -2147483647
  %755 = trunc i64 %754 to i32
  %756 = add i32 %9, -1
  %757 = icmp ult i32 %756, 2
  br i1 %757, label %758, label %786

758:                                              ; preds = %725
  %759 = icmp eq i32 %9, 2
  %760 = lshr i64 %702, 32
  %761 = trunc i64 %760 to i32
  %762 = sub i32 %761, %716
  %763 = select i1 %759, i32 %762, i32 0
  %764 = sub nsw i32 %716, %763
  %765 = zext i1 %759 to i32
  %766 = shl nsw i32 %762, %765
  %767 = sitofp i32 %766 to float
  %768 = sub nsw i32 %741, %764
  %769 = sitofp i32 %768 to float
  %770 = fdiv float %769, %767
  %771 = call float @llvm.floor.f32(float %770) #11
  %772 = fptosi float %771 to i32
  %773 = mul nsw i32 %766, %772
  %774 = add nsw i32 %773, %764
  %775 = sub nsw i32 %755, %761
  %776 = sitofp i32 %775 to float
  %777 = fdiv float %776, %767
  %778 = call float @llvm.ceil.f32(float %777) #11
  %779 = fptosi float %778 to i32
  %780 = mul nsw i32 %766, %779
  %781 = add nsw i32 %780, %761
  %782 = icmp sgt i32 %774, %741
  %783 = select i1 %782, i32 %774, i32 %741
  %784 = icmp slt i32 %781, %755
  %785 = select i1 %784, i32 %781, i32 %755
  br label %828

786:                                              ; preds = %725
  %787 = icmp slt i32 %716, %755
  br i1 %787, label %791, label %788

788:                                              ; preds = %786
  br i1 %152, label %1008, label %789

789:                                              ; preds = %788
  %790 = add nsw i32 %716, 1
  br label %803

791:                                              ; preds = %786
  %792 = lshr i64 %702, 32
  %793 = trunc i64 %792 to i32
  %794 = icmp sgt i32 %793, %741
  br i1 %794, label %798, label %795

795:                                              ; preds = %791
  br i1 %152, label %1008, label %796

796:                                              ; preds = %795
  %797 = add nsw i32 %793, -1
  br label %803

798:                                              ; preds = %791
  %799 = icmp sgt i32 %716, %741
  %800 = select i1 %799, i32 %716, i32 %741
  %801 = icmp slt i32 %793, %755
  %802 = select i1 %801, i32 %793, i32 %755
  br label %803

803:                                              ; preds = %798, %796, %789
  %804 = phi i32 [ %800, %798 ], [ %797, %796 ], [ %716, %789 ]
  %805 = phi i32 [ %802, %798 ], [ %793, %796 ], [ %790, %789 ]
  %806 = sub nsw i32 %714, %252
  %807 = trunc i64 %702 to i32
  %808 = zext i1 %151 to i32
  %809 = sub nuw nsw i32 %252, %808
  %810 = add i32 %809, %807
  %811 = add nsw i32 %806, %808
  %812 = icmp slt i32 %811, %748
  br i1 %812, label %816, label %813

813:                                              ; preds = %803
  br i1 %152, label %1008, label %814

814:                                              ; preds = %813
  %815 = add nsw i32 %748, -1
  br label %819

816:                                              ; preds = %803
  %817 = icmp sgt i32 %811, %733
  %818 = select i1 %817, i32 %811, i32 %733
  br label %819

819:                                              ; preds = %816, %814
  %820 = phi i32 [ %818, %816 ], [ %815, %814 ]
  %821 = icmp slt i32 %820, %810
  br i1 %821, label %825, label %822

822:                                              ; preds = %819
  br i1 %152, label %1008, label %823

823:                                              ; preds = %822
  %824 = add nsw i32 %820, 1
  br label %828

825:                                              ; preds = %819
  %826 = icmp slt i32 %810, %748
  %827 = select i1 %826, i32 %810, i32 %748
  br label %828

828:                                              ; preds = %825, %823, %758, %717
  %829 = phi i32 [ %719, %717 ], [ %733, %758 ], [ %820, %825 ], [ %820, %823 ]
  %830 = phi i32 [ %718, %717 ], [ %783, %758 ], [ %804, %825 ], [ %804, %823 ]
  %831 = phi i32 [ %721, %717 ], [ %748, %758 ], [ %827, %825 ], [ %824, %823 ]
  %832 = phi i32 [ %723, %717 ], [ %785, %758 ], [ %805, %825 ], [ %805, %823 ]
  %833 = bitcast %class.GrSurfaceProxyView* %12 to i64*
  store i64 %689, i64* %833, align 8
  %834 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 1
  store i32 %691, i32* %834, align 8
  %835 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 2, i32 0
  store i16 %693, i16* %835, align 4
  %836 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 0
  store i32 %829, i32* %836, align 8
  %837 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 1
  store i32 %830, i32* %837, align 4
  %838 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 2
  store i32 %831, i32* %838, align 8
  %839 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 3
  store i32 %832, i32* %839, align 4
  %840 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %14, i64 0, i32 0
  %841 = inttoptr i64 %697 to %class.SkColorSpace*
  %842 = icmp eq i64 %697, 0
  br i1 %842, label %846, label %843

843:                                              ; preds = %828
  %844 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %841, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %845 = atomicrmw add i32* %844, i32 1 monotonic
  br label %846

846:                                              ; preds = %843, %828
  store %class.SkColorSpace* %841, %class.SkColorSpace** %840, align 8
  %847 = call fastcc %class.GrSurfaceDrawContext* @_ZL17convolve_gaussianP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType7SkIRectS4_N38GrGaussianConvolutionFragmentProcessor9DirectionEif10SkTileMode5sk_spI12SkColorSpaceE12SkBackingFit(%class.GrRecordingContext* %0, %class.GrSurfaceProxyView* nonnull %12, i32 %2, i32 %694, i64 %699, i64 %702, %struct.SkIRect* nonnull byval(%struct.SkIRect) align 8 %13, i32 0, i32 %252, float %250, i32 %9, %class.sk_sp.176* nonnull %14, i32 %720) #11
  %848 = ptrtoint %class.GrSurfaceDrawContext* %847 to i64
  %849 = load %class.SkColorSpace*, %class.SkColorSpace** %840, align 8
  %850 = icmp eq %class.SkColorSpace* %849, null
  br i1 %850, label %857, label %851

851:                                              ; preds = %846
  %852 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %849, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %853 = atomicrmw add i32* %852, i32 -1 acq_rel
  %854 = icmp eq i32 %853, 1
  br i1 %854, label %855, label %857

855:                                              ; preds = %851
  %856 = bitcast %class.SkColorSpace* %849 to i8*
  call void @_ZdlPv(i8* %856) #12
  br label %857

857:                                              ; preds = %855, %851, %846
  %858 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 0, i32 0
  %859 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %858, align 8
  %860 = icmp eq %class.GrSurfaceProxy* %859, null
  br i1 %860, label %873, label %861

861:                                              ; preds = %857
  %862 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %859, i64 0, i32 1
  %863 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %862, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %864 = atomicrmw add i32* %863, i32 -1 acq_rel
  %865 = icmp eq i32 %864, 1
  br i1 %865, label %866, label %873

866:                                              ; preds = %861
  %867 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %862, i64 -2
  %868 = bitcast %class.SkNVRefCnt* %867 to %class.GrSurfaceProxy*
  %869 = bitcast %class.SkNVRefCnt* %867 to void (%class.GrSurfaceProxy*)***
  %870 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %869, align 8
  %871 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %870, i64 1
  %872 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %871, align 8
  call void %872(%class.GrSurfaceProxy* nonnull %868) #11
  br label %873

873:                                              ; preds = %866, %861, %857
  %874 = icmp eq %class.GrSurfaceDrawContext* %847, null
  br i1 %874, label %998, label %875

875:                                              ; preds = %873
  %876 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %847, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %877 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %876, align 8, !noalias !12
  %878 = icmp eq %class.GrSurfaceProxy* %877, null
  br i1 %878, label %882, label %879

879:                                              ; preds = %875
  %880 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %877, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %881 = atomicrmw add i32* %880, i32 1 monotonic, !noalias !12
  br label %882

882:                                              ; preds = %875, %879
  %883 = ptrtoint %class.GrSurfaceProxy* %877 to i64
  %884 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %847, i64 0, i32 0, i32 0, i32 2, i32 1
  %885 = load i32, i32* %884, align 8, !noalias !12
  %886 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %847, i64 0, i32 0, i32 0, i32 2, i32 2, i32 0
  %887 = load i16, i16* %886, align 2, !noalias !12
  %888 = shl i64 %704, 32
  %889 = ashr exact i64 %888, 32
  %890 = sext i32 %829 to i64
  %891 = sub nsw i64 %889, %890
  %892 = icmp slt i64 %891, 2147483647
  %893 = select i1 %892, i64 %891, i64 2147483647
  %894 = icmp sgt i64 %893, -2147483647
  %895 = select i1 %894, i64 %893, i64 -2147483647
  %896 = ashr i64 %704, 32
  %897 = sext i32 %830 to i64
  %898 = sub nsw i64 %896, %897
  %899 = icmp slt i64 %898, 2147483647
  %900 = select i1 %899, i64 %898, i64 2147483647
  %901 = icmp sgt i64 %900, -2147483647
  %902 = select i1 %901, i64 %900, i64 -2147483647
  %903 = sub i64 %706, %704
  %904 = sub nsw i64 %722, %713
  %905 = icmp slt i64 %895, 2147483647
  %906 = select i1 %905, i64 %895, i64 2147483647
  %907 = icmp sgt i64 %906, -2147483647
  %908 = select i1 %907, i64 %906, i64 -2147483647
  %909 = icmp slt i64 %902, 2147483647
  %910 = select i1 %909, i64 %902, i64 2147483647
  %911 = icmp sgt i64 %910, -2147483647
  %912 = select i1 %911, i64 %910, i64 -2147483647
  %913 = shl i64 %903, 32
  %914 = ashr exact i64 %913, 32
  %915 = add nsw i64 %895, %914
  %916 = icmp slt i64 %915, 2147483647
  %917 = select i1 %916, i64 %915, i64 2147483647
  %918 = icmp sgt i64 %917, -2147483647
  %919 = select i1 %918, i64 %917, i64 -2147483647
  %920 = shl i64 %904, 32
  %921 = ashr exact i64 %920, 32
  %922 = add nsw i64 %902, %921
  %923 = icmp slt i64 %922, 2147483647
  %924 = select i1 %923, i64 %922, i64 2147483647
  %925 = icmp sgt i64 %924, -2147483647
  %926 = select i1 %925, i64 %924, i64 -2147483647
  %927 = shl nsw i64 %912, 32
  %928 = and i64 %908, 4294967295
  %929 = or i64 %927, %928
  %930 = shl nsw i64 %926, 32
  %931 = and i64 %919, 4294967295
  %932 = or i64 %930, %931
  %933 = and i64 %912, 4294967295
  %934 = sub i32 %831, %829
  %935 = sub i32 %832, %830
  %936 = zext i32 %935 to i64
  %937 = shl nuw i64 %936, 32
  %938 = zext i32 %934 to i64
  %939 = or i64 %937, %938
  br label %940

940:                                              ; preds = %882, %687
  %941 = phi i64 [ %883, %882 ], [ %689, %687 ]
  %942 = phi i32 [ %885, %882 ], [ %691, %687 ]
  %943 = phi i16 [ %887, %882 ], [ %693, %687 ]
  %944 = phi i64 [ %939, %882 ], [ %702, %687 ]
  %945 = phi i64 [ 0, %882 ], [ %699, %687 ]
  %946 = phi i64 [ 0, %882 ], [ %715, %687 ]
  %947 = phi i64 [ %932, %882 ], [ %706, %687 ]
  %948 = phi i64 [ %929, %882 ], [ %704, %687 ]
  %949 = phi i64 [ %933, %882 ], [ %713, %687 ]
  %950 = phi i64 [ %848, %882 ], [ 0, %687 ]
  %951 = icmp eq i32 %251, 0
  br i1 %951, label %1008, label %952

952:                                              ; preds = %940
  %953 = bitcast %class.GrSurfaceProxyView* %15 to i64*
  store i64 %941, i64* %953, align 8
  %954 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 1
  store i32 %942, i32* %954, align 8
  %955 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 2, i32 0
  store i16 %943, i16* %955, align 4
  %956 = shl nuw i64 %946, 32
  %957 = and i64 %945, 4294967295
  %958 = or i64 %956, %957
  %959 = bitcast %struct.SkIRect* %16 to i64*
  %960 = shl nuw i64 %949, 32
  %961 = and i64 %948, 4294967295
  %962 = or i64 %960, %961
  store i64 %962, i64* %959, align 8
  %963 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %16, i64 0, i32 2
  %964 = bitcast i32* %963 to i64*
  store i64 %947, i64* %964, align 8
  %965 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %17, i64 0, i32 0
  %966 = inttoptr i64 %697 to %class.SkColorSpace*
  %967 = icmp eq i64 %697, 0
  br i1 %967, label %971, label %968

968:                                              ; preds = %952
  %969 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %966, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %970 = atomicrmw add i32* %969, i32 1 monotonic
  br label %971

971:                                              ; preds = %968, %952
  store %class.SkColorSpace* %966, %class.SkColorSpace** %965, align 8
  %972 = call fastcc %class.GrSurfaceDrawContext* @_ZL17convolve_gaussianP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType7SkIRectS4_N38GrGaussianConvolutionFragmentProcessor9DirectionEif10SkTileMode5sk_spI12SkColorSpaceE12SkBackingFit(%class.GrRecordingContext* %0, %class.GrSurfaceProxyView* nonnull %15, i32 %2, i32 %694, i64 %958, i64 %944, %struct.SkIRect* nonnull byval(%struct.SkIRect) align 8 %16, i32 1, i32 %251, float %249, i32 %9, %class.sk_sp.176* nonnull %17, i32 %10) #11
  %973 = ptrtoint %class.GrSurfaceDrawContext* %972 to i64
  %974 = load %class.SkColorSpace*, %class.SkColorSpace** %965, align 8
  %975 = icmp eq %class.SkColorSpace* %974, null
  br i1 %975, label %982, label %976

976:                                              ; preds = %971
  %977 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %974, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %978 = atomicrmw add i32* %977, i32 -1 acq_rel
  %979 = icmp eq i32 %978, 1
  br i1 %979, label %980, label %982

980:                                              ; preds = %976
  %981 = bitcast %class.SkColorSpace* %974 to i8*
  call void @_ZdlPv(i8* %981) #12
  br label %982

982:                                              ; preds = %980, %976, %971
  %983 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 0, i32 0
  %984 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %983, align 8
  %985 = icmp eq %class.GrSurfaceProxy* %984, null
  br i1 %985, label %998, label %986

986:                                              ; preds = %982
  %987 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %984, i64 0, i32 1
  %988 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %987, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %989 = atomicrmw add i32* %988, i32 -1 acq_rel
  %990 = icmp eq i32 %989, 1
  br i1 %990, label %991, label %998

991:                                              ; preds = %986
  %992 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %987, i64 -2
  %993 = bitcast %class.SkNVRefCnt* %992 to %class.GrSurfaceProxy*
  %994 = bitcast %class.SkNVRefCnt* %992 to void (%class.GrSurfaceProxy*)***
  %995 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %994, align 8
  %996 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %995, i64 1
  %997 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %996, align 8
  call void %997(%class.GrSurfaceProxy* nonnull %993) #11
  br label %998

998:                                              ; preds = %991, %986, %982, %873
  %999 = phi i64 [ %950, %982 ], [ %950, %986 ], [ %950, %991 ], [ %848, %873 ]
  %1000 = phi i64 [ %973, %982 ], [ %973, %986 ], [ %973, %991 ], [ 0, %873 ]
  %1001 = icmp eq i64 %999, 0
  br i1 %1001, label %1008, label %1002

1002:                                             ; preds = %998
  %1003 = inttoptr i64 %999 to %class.GrSurfaceDrawContext*
  %1004 = inttoptr i64 %999 to void (%class.GrSurfaceDrawContext*)***
  %1005 = load void (%class.GrSurfaceDrawContext*)**, void (%class.GrSurfaceDrawContext*)*** %1004, align 8
  %1006 = getelementptr inbounds void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %1005, i64 1
  %1007 = load void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %1006, align 8
  call void %1007(%class.GrSurfaceDrawContext* nonnull %1003) #11
  br label %1008

1008:                                             ; preds = %788, %795, %813, %822, %940, %998, %1002
  %1009 = phi i64 [ 0, %998 ], [ 0, %1002 ], [ %941, %940 ], [ %689, %822 ], [ %689, %813 ], [ %689, %795 ], [ %689, %788 ]
  %1010 = phi i64 [ %1000, %998 ], [ %1000, %1002 ], [ %950, %940 ], [ 0, %822 ], [ 0, %813 ], [ 0, %795 ], [ 0, %788 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %707)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %708)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %709)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %710)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %711)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %712)
  %1011 = icmp eq i64 %697, 0
  br i1 %1011, label %1019, label %1012

1012:                                             ; preds = %1008
  %1013 = inttoptr i64 %697 to %class.SkColorSpace*
  %1014 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1013, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1015 = atomicrmw add i32* %1014, i32 -1 acq_rel
  %1016 = icmp eq i32 %1015, 1
  br i1 %1016, label %1017, label %1019

1017:                                             ; preds = %1012
  %1018 = inttoptr i64 %697 to i8*
  call void @_ZdlPv(i8* %1018) #12
  br label %1019

1019:                                             ; preds = %1008, %1012, %1017
  %1020 = icmp eq i64 %1009, 0
  br i1 %1020, label %1738, label %1021

1021:                                             ; preds = %1019
  %1022 = inttoptr i64 %1009 to %class.GrSurfaceProxy*
  %1023 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1022, i64 0, i32 1
  %1024 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1023, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1025 = atomicrmw add i32* %1024, i32 -1 acq_rel
  %1026 = icmp eq i32 %1025, 1
  br i1 %1026, label %1027, label %1738

1027:                                             ; preds = %1021
  %1028 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1023, i64 -2
  %1029 = bitcast %class.SkNVRefCnt* %1028 to %class.GrSurfaceProxy*
  %1030 = bitcast %class.SkNVRefCnt* %1028 to void (%class.GrSurfaceProxy*)***
  %1031 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %1030, align 8
  %1032 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1031, i64 1
  %1033 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1032, align 8
  call void %1033(%class.GrSurfaceProxy* nonnull %1029) #11
  br label %1738

1034:                                             ; preds = %396
  %1035 = bitcast %class.GrColorInfo* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1035) #11
  %1036 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %52, i64 0, i32 0, i32 0
  %1037 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %52, i64 0, i32 1, i32 0
  %1038 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %52, i64 0, i32 2
  %1039 = bitcast %class.GrColorInfo* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1039, i8 -86, i64 24, i1 false)
  %1040 = load i32, i32* %38, align 4
  %1041 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %53, i64 0, i32 0
  %1042 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %4, i64 0, i32 0
  %1043 = load %class.SkColorSpace*, %class.SkColorSpace** %1042, align 8
  %1044 = icmp eq %class.SkColorSpace* %1043, null
  br i1 %1044, label %1048, label %1045

1045:                                             ; preds = %1034
  %1046 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1043, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1047 = atomicrmw add i32* %1046, i32 1 monotonic
  br label %1048

1048:                                             ; preds = %1034, %1045
  store %class.SkColorSpace* %1043, %class.SkColorSpace** %1041, align 8
  call void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nonnull %52, i32 %2, i32 %1040, %class.sk_sp.176* nonnull %53) #11
  %1049 = load %class.SkColorSpace*, %class.SkColorSpace** %1041, align 8
  %1050 = icmp eq %class.SkColorSpace* %1049, null
  br i1 %1050, label %1057, label %1051

1051:                                             ; preds = %1048
  %1052 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1049, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1053 = atomicrmw add i32* %1052, i32 -1 acq_rel
  %1054 = icmp eq i32 %1053, 1
  br i1 %1054, label %1055, label %1057

1055:                                             ; preds = %1051
  %1056 = bitcast %class.SkColorSpace* %1049 to i8*
  call void @_ZdlPv(i8* %1056) #12
  br label %1057

1057:                                             ; preds = %1048, %1051, %1055
  %1058 = bitcast %"class.std::__1::unique_ptr.222"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1058) #11
  %1059 = getelementptr inbounds %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.222"* %54, i64 0, i32 0, i32 0, i32 0
  store %class.GrSurfaceContext* inttoptr (i64 -6148914691236517206 to %class.GrSurfaceContext*), %class.GrSurfaceContext** %1059, align 8
  %1060 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %55, i64 0, i32 0, i32 0
  %1061 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %108, align 8
  %1062 = icmp eq %class.GrSurfaceProxy* %1061, null
  br i1 %1062, label %1066, label %1063

1063:                                             ; preds = %1057
  %1064 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1061, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1065 = atomicrmw add i32* %1064, i32 1 monotonic
  br label %1066

1066:                                             ; preds = %1057, %1063
  store %class.GrSurfaceProxy* %1061, %class.GrSurfaceProxy** %1060, align 8
  %1067 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %55, i64 0, i32 1
  %1068 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %1069 = load i32, i32* %1068, align 8
  store i32 %1069, i32* %1067, align 8
  %1070 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %55, i64 0, i32 2, i32 0
  %1071 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %1072 = load i16, i16* %1071, align 2
  store i16 %1072, i16* %1070, align 4
  %1073 = call %class.GrSurfaceContext* @_ZN16GrSurfaceContext4MakeEP18GrRecordingContext18GrSurfaceProxyViewRK11GrColorInfo(%class.GrRecordingContext* %0, %class.GrSurfaceProxyView* nonnull %55, %class.GrColorInfo* nonnull dereferenceable(24) %52) #11
  store %class.GrSurfaceContext* %1073, %class.GrSurfaceContext** %1059, align 8
  %1074 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %1060, align 8
  %1075 = icmp eq %class.GrSurfaceProxy* %1074, null
  br i1 %1075, label %1088, label %1076

1076:                                             ; preds = %1066
  %1077 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1074, i64 0, i32 1
  %1078 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1077, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1079 = atomicrmw add i32* %1078, i32 -1 acq_rel
  %1080 = icmp eq i32 %1079, 1
  br i1 %1080, label %1081, label %1088

1081:                                             ; preds = %1076
  %1082 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1077, i64 -2
  %1083 = bitcast %class.SkNVRefCnt* %1082 to %class.GrSurfaceProxy*
  %1084 = bitcast %class.SkNVRefCnt* %1082 to void (%class.GrSurfaceProxy*)***
  %1085 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %1084, align 8
  %1086 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1085, i64 1
  %1087 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1086, align 8
  call void %1087(%class.GrSurfaceProxy* nonnull %1083) #11
  br label %1088

1088:                                             ; preds = %1066, %1076, %1081
  %1089 = fcmp ogt float %250, 4.000000e+00
  %1090 = fdiv float 4.000000e+00, %250
  %1091 = select i1 %1089, float %1090, float 1.000000e+00
  %1092 = fcmp ogt float %249, 4.000000e+00
  %1093 = fdiv float 4.000000e+00, %249
  %1094 = select i1 %1092, float %1093, float 1.000000e+00
  %1095 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %1096 = load i32, i32* %1095, align 8
  %1097 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %1098 = load i32, i32* %1097, align 8
  %1099 = sub i32 %1096, %1098
  %1100 = sitofp i32 %1099 to float
  %1101 = fmul float %1091, %1100
  %1102 = call float @llvm.floor.f32(float %1101)
  %1103 = fcmp olt float %1102, 0x41DFFFFFE0000000
  %1104 = select i1 %1103, float %1102, float 0x41DFFFFFE0000000
  %1105 = fcmp ogt float %1104, 0xC1DFFFFFE0000000
  %1106 = select i1 %1105, float %1104, float 0xC1DFFFFFE0000000
  %1107 = fptosi float %1106 to i32
  %1108 = icmp sgt i32 %1107, 1
  %1109 = select i1 %1108, i32 %1107, i32 1
  %1110 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %1111 = load i32, i32* %1110, align 4
  %1112 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %1113 = load i32, i32* %1112, align 4
  %1114 = sub i32 %1111, %1113
  %1115 = sitofp i32 %1114 to float
  %1116 = fmul float %1094, %1115
  %1117 = call float @llvm.floor.f32(float %1116)
  %1118 = fcmp olt float %1117, 0x41DFFFFFE0000000
  %1119 = select i1 %1118, float %1117, float 0x41DFFFFFE0000000
  %1120 = fcmp ogt float %1119, 0xC1DFFFFFE0000000
  %1121 = select i1 %1120, float %1119, float 0xC1DFFFFFE0000000
  %1122 = fptosi float %1121 to i32
  %1123 = icmp sgt i32 %1122, 1
  %1124 = select i1 %1123, i32 %1122, i32 1
  %1125 = sitofp i32 %1109 to float
  %1126 = fdiv float %1125, %1100
  %1127 = sitofp i32 %1124 to float
  %1128 = fdiv float %1127, %1115
  %1129 = fmul float %250, %1126
  %1130 = fmul float %249, %1128
  br i1 %151, label %1137, label %1131

1131:                                             ; preds = %1088
  %1132 = fcmp ogt float %1129, 4.000000e+00
  %1133 = and i1 %152, %1132
  %1134 = zext i1 %1133 to i32
  %1135 = fcmp ogt float %1130, 4.000000e+00
  %1136 = and i1 %152, %1135
  br label %1137

1137:                                             ; preds = %1088, %1131
  %1138 = phi i32 [ %1134, %1131 ], [ 1, %1088 ]
  %1139 = phi i1 [ %1133, %1131 ], [ true, %1088 ]
  %1140 = phi i1 [ %1136, %1131 ], [ true, %1088 ]
  %1141 = zext i1 %1140 to i32
  %1142 = bitcast %"class.std::__1::unique_ptr"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1142) #11
  %1143 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %56, i64 0, i32 0, i32 0, i32 0
  store %class.GrSurfaceDrawContext* inttoptr (i64 -6148914691236517206 to %class.GrSurfaceDrawContext*), %class.GrSurfaceDrawContext** %1143, align 8
  %1144 = load %class.GrSurfaceContext*, %class.GrSurfaceContext** %1059, align 8
  %1145 = getelementptr inbounds %class.GrSurfaceContext, %class.GrSurfaceContext* %1144, i64 0, i32 1
  %1146 = load %class.GrRecordingContext*, %class.GrRecordingContext** %1145, align 8
  %1147 = load i32, i32* %1038, align 8
  %1148 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %57, i64 0, i32 0
  %1149 = load %class.SkColorSpace*, %class.SkColorSpace** %1036, align 8, !noalias !15
  %1150 = icmp eq %class.SkColorSpace* %1149, null
  br i1 %1150, label %1154, label %1151

1151:                                             ; preds = %1137
  %1152 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1153 = atomicrmw add i32* %1152, i32 1 monotonic, !noalias !15
  br label %1154

1154:                                             ; preds = %1137, %1151
  store %class.SkColorSpace* %1149, %class.SkColorSpace** %1148, align 8, !alias.scope !15
  %1155 = shl nuw nsw i32 %1138, 1
  %1156 = add nuw nsw i32 %1155, %1109
  %1157 = shl nuw nsw i32 %1141, 1
  %1158 = add nuw nsw i32 %1157, %1124
  %1159 = bitcast %class.SkSurfaceProps* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1159) #11
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %58) #11
  %1160 = load %class.GrSurfaceContext*, %class.GrSurfaceContext** %1059, align 8
  %1161 = getelementptr inbounds %class.GrSurfaceContext, %class.GrSurfaceContext* %1160, i64 0, i32 2, i32 0, i32 0
  %1162 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %1161, align 8
  %1163 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1162, i64 0, i32 15
  %1164 = load i8, i8* %1163, align 1, !range !2
  %1165 = icmp ne i8 %1164, 0
  %1166 = getelementptr inbounds %class.GrSurfaceContext, %class.GrSurfaceContext* %1160, i64 0, i32 2, i32 1
  %1167 = load i32, i32* %1166, align 8
  %1168 = zext i32 %1158 to i64
  %1169 = shl nuw nsw i64 %1168, 32
  %1170 = zext i32 %1156 to i64
  %1171 = or i64 %1169, %1170
  %1172 = call %class.GrSurfaceDrawContext* @_ZN20GrSurfaceDrawContext4MakeEP18GrRecordingContext11GrColorType5sk_spI12SkColorSpaceE12SkBackingFit7SkISizeRK14SkSurfacePropsi11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %1146, i32 %1147, %class.sk_sp.176* nonnull %57, i32 0, i64 %1171, %class.SkSurfaceProps* nonnull dereferenceable(8) %58, i32 1, i1 zeroext false, i1 zeroext %1165, i32 %1167, i1 zeroext true) #11
  store %class.GrSurfaceDrawContext* %1172, %class.GrSurfaceDrawContext** %1143, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1159) #11
  %1173 = load %class.SkColorSpace*, %class.SkColorSpace** %1148, align 8
  %1174 = icmp eq %class.SkColorSpace* %1173, null
  br i1 %1174, label %1183, label %1175

1175:                                             ; preds = %1154
  %1176 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1177 = atomicrmw add i32* %1176, i32 -1 acq_rel
  %1178 = icmp eq i32 %1177, 1
  br i1 %1178, label %1179, label %1181

1179:                                             ; preds = %1175
  %1180 = bitcast %class.SkColorSpace* %1173 to i8*
  call void @_ZdlPv(i8* %1180) #12
  br label %1181

1181:                                             ; preds = %1179, %1175
  %1182 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %1143, align 8
  br label %1183

1183:                                             ; preds = %1181, %1154
  %1184 = phi %class.GrSurfaceDrawContext* [ %1182, %1181 ], [ %1172, %1154 ]
  %1185 = icmp eq %class.GrSurfaceDrawContext* %1184, null
  br i1 %1185, label %1698, label %1186

1186:                                             ; preds = %1183
  %1187 = bitcast %class.GrSurfaceDrawContext* %1184 to %class.GrSurfaceFillContext*
  %1188 = or i1 %1139, %1140
  %1189 = and i1 %152, %1188
  br i1 %1189, label %1190, label %1194

1190:                                             ; preds = %1186
  %1191 = bitcast %class.GrSurfaceDrawContext* %1184 to %class.GrSurfaceFillContext*
  call void @_ZN20GrSurfaceFillContext13internalClearEPK7SkIRectNSt3__15arrayIfLm4EEEb(%class.GrSurfaceFillContext* nonnull %1191, %struct.SkIRect* null, <2 x float> zeroinitializer, <2 x float> zeroinitializer, i1 zeroext false) #11
  %1192 = bitcast %"class.std::__1::unique_ptr"* %56 to %class.GrSurfaceFillContext**
  %1193 = load %class.GrSurfaceFillContext*, %class.GrSurfaceFillContext** %1192, align 8
  br label %1194

1194:                                             ; preds = %1186, %1190
  %1195 = phi %class.GrSurfaceFillContext* [ %1193, %1190 ], [ %1187, %1186 ]
  %1196 = load %class.GrSurfaceContext*, %class.GrSurfaceContext** %1059, align 8
  %1197 = zext i32 %1138 to i64
  %1198 = zext i1 %1140 to i64
  %1199 = add nuw i32 %1138, %1109
  %1200 = zext i32 %1199 to i64
  %1201 = icmp ult i64 %1200, 2147483647
  %1202 = select i1 %1201, i64 %1200, i64 2147483647
  %1203 = zext i32 %1124 to i64
  %1204 = add nuw nsw i64 %1198, %1203
  %1205 = icmp ult i64 %1204, 2147483647
  %1206 = select i1 %1205, i64 %1204, i64 2147483647
  %1207 = shl nuw nsw i64 %1198, 32
  %1208 = or i64 %1207, %1197
  %1209 = shl nuw nsw i64 %1206, 32
  %1210 = and i64 %1202, 4294967295
  %1211 = or i64 %1209, %1210
  %1212 = bitcast %struct.SkIRect* %6 to i64*
  %1213 = load i64, i64* %1212, align 8
  %1214 = bitcast i32* %1095 to i64*
  %1215 = load i64, i64* %1214, align 8
  %1216 = call zeroext i1 @_ZN16GrSurfaceContext11rescaleIntoEP20GrSurfaceFillContext7SkIRectS2_N7SkImage12RescaleGammaENS3_11RescaleModeE(%class.GrSurfaceContext* %1196, %class.GrSurfaceFillContext* %1195, i64 %1208, i64 %1211, i64 %1213, i64 %1215, i1 zeroext false, i32 1) #11
  br i1 %1216, label %1217, label %1698

1217:                                             ; preds = %1194
  br i1 %151, label %1218, label %1338

1218:                                             ; preds = %1217
  %1219 = bitcast %class.anon* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1219) #11
  %1220 = getelementptr inbounds %class.anon, %class.anon* %59, i64 0, i32 0
  %1221 = getelementptr inbounds %class.anon, %class.anon* %59, i64 0, i32 1
  %1222 = getelementptr inbounds %class.anon, %class.anon* %59, i64 0, i32 2
  store %"class.std::__1::unique_ptr"* %56, %"class.std::__1::unique_ptr"** %1220, align 8
  store %"class.std::__1::unique_ptr.222"* %54, %"class.std::__1::unique_ptr.222"** %1221, align 8
  store i32* %38, i32** %1222, align 8
  %1223 = load i32, i32* %1097, align 8
  %1224 = sitofp i32 %1223 to float
  %1225 = load i32, i32* %1112, align 4
  %1226 = sitofp i32 %1225 to float
  %1227 = load i32, i32* %1095, align 8
  %1228 = add nsw i32 %1227, -1
  %1229 = sitofp i32 %1228 to float
  %1230 = load i32, i32* %1110, align 4
  %1231 = add nsw i32 %1230, -1
  %1232 = sitofp i32 %1231 to float
  %1233 = sub i32 %1227, %1223
  %1234 = sub i32 %1230, %1225
  %1235 = icmp ult i64 %1203, 2147483646
  %1236 = select i1 %1235, i64 %1203, i64 2147483646
  %1237 = shl nuw nsw i64 %1236, 32
  %1238 = add nuw nsw i64 %1237, 4294967296
  %1239 = or i64 %1238, 1
  %1240 = fptosi float %1224 to i32
  %1241 = sext i32 %1240 to i64
  %1242 = icmp slt i64 %1241, 2147483646
  %1243 = select i1 %1242, i64 %1241, i64 2147483646
  %1244 = icmp sgt i64 %1243, -2147483648
  %1245 = select i1 %1244, i64 %1243, i64 -2147483648
  %1246 = add nsw i64 %1245, 1
  %1247 = sext i32 %1225 to i64
  %1248 = sext i32 %1234 to i64
  %1249 = add nsw i64 %1248, %1247
  %1250 = icmp slt i64 %1249, 2147483647
  %1251 = select i1 %1250, i64 %1249, i64 2147483647
  %1252 = icmp sgt i64 %1251, -2147483647
  %1253 = select i1 %1252, i64 %1251, i64 -2147483647
  %1254 = zext i32 %1225 to i64
  %1255 = shl nuw i64 %1254, 32
  %1256 = zext i32 %1240 to i64
  %1257 = or i64 %1255, %1256
  %1258 = shl nsw i64 %1253, 32
  %1259 = and i64 %1246, 4294967295
  %1260 = or i64 %1258, %1259
  call fastcc void @"_ZZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFitENK3$_0clES8_S8_"(%class.anon* nonnull %59, i64 4294967296, i64 %1239, i64 %1257, i64 %1260)
  %1261 = add nuw i32 %1109, 1
  %1262 = zext i32 %1261 to i64
  %1263 = icmp ult i64 %1262, 2147483647
  %1264 = select i1 %1263, i64 %1262, i64 2147483647
  %1265 = or i64 %1264, 4294967296
  %1266 = fptosi float %1226 to i32
  %1267 = sext i32 %1223 to i64
  %1268 = sext i32 %1233 to i64
  %1269 = add nsw i64 %1268, %1267
  %1270 = icmp slt i64 %1269, 2147483647
  %1271 = select i1 %1270, i64 %1269, i64 2147483647
  %1272 = icmp sgt i64 %1271, -2147483647
  %1273 = select i1 %1272, i64 %1271, i64 -2147483647
  %1274 = sext i32 %1266 to i64
  %1275 = icmp slt i64 %1274, 2147483646
  %1276 = select i1 %1275, i64 %1274, i64 2147483646
  %1277 = icmp sgt i64 %1276, -2147483648
  %1278 = select i1 %1277, i64 %1276, i64 -2147483648
  %1279 = zext i32 %1266 to i64
  %1280 = shl nuw i64 %1279, 32
  %1281 = zext i32 %1223 to i64
  %1282 = or i64 %1280, %1281
  %1283 = shl nsw i64 %1278, 32
  %1284 = add i64 %1283, 4294967296
  %1285 = and i64 %1273, 4294967295
  %1286 = or i64 %1284, %1285
  call fastcc void @"_ZZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFitENK3$_0clES8_S8_"(%class.anon* nonnull %59, i64 1, i64 %1265, i64 %1282, i64 %1286)
  %1287 = add nuw i32 %1109, 2
  %1288 = zext i32 %1287 to i64
  %1289 = icmp ult i64 %1288, 2147483647
  %1290 = select i1 %1289, i64 %1288, i64 2147483647
  %1291 = or i64 %1262, 4294967296
  %1292 = or i64 %1238, %1290
  %1293 = fptosi float %1229 to i32
  %1294 = sext i32 %1293 to i64
  %1295 = icmp slt i64 %1294, 2147483646
  %1296 = select i1 %1295, i64 %1294, i64 2147483646
  %1297 = icmp sgt i64 %1296, -2147483648
  %1298 = select i1 %1297, i64 %1296, i64 -2147483648
  %1299 = add nsw i64 %1298, 1
  %1300 = zext i32 %1293 to i64
  %1301 = or i64 %1255, %1300
  %1302 = and i64 %1299, 4294967295
  %1303 = or i64 %1302, %1258
  call fastcc void @"_ZZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFitENK3$_0clES8_S8_"(%class.anon* nonnull %59, i64 %1291, i64 %1292, i64 %1301, i64 %1303)
  %1304 = add nuw nsw i32 %1124, 1
  %1305 = add nuw i32 %1124, 2
  %1306 = zext i32 %1305 to i64
  %1307 = icmp ult i64 %1306, 2147483647
  %1308 = select i1 %1307, i64 %1306, i64 2147483647
  %1309 = zext i32 %1304 to i64
  %1310 = shl nuw nsw i64 %1309, 32
  %1311 = or i64 %1310, 1
  %1312 = shl nuw nsw i64 %1308, 32
  %1313 = or i64 %1312, %1264
  %1314 = fptosi float %1232 to i32
  %1315 = sext i32 %1314 to i64
  %1316 = icmp slt i64 %1315, 2147483646
  %1317 = select i1 %1316, i64 %1315, i64 2147483646
  %1318 = icmp sgt i64 %1317, -2147483648
  %1319 = select i1 %1318, i64 %1317, i64 -2147483648
  %1320 = zext i32 %1314 to i64
  %1321 = shl nuw i64 %1320, 32
  %1322 = or i64 %1321, %1281
  %1323 = shl nsw i64 %1319, 32
  %1324 = add i64 %1323, 4294967296
  %1325 = or i64 %1324, %1285
  call fastcc void @"_ZZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFitENK3$_0clES8_S8_"(%class.anon* nonnull %59, i64 %1311, i64 %1313, i64 %1322, i64 %1325)
  %1326 = or i64 %1280, %1256
  %1327 = or i64 %1284, %1259
  call fastcc void @"_ZZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFitENK3$_0clES8_S8_"(%class.anon* nonnull %59, i64 0, i64 4294967297, i64 %1326, i64 %1327)
  %1328 = or i64 %1290, 4294967296
  %1329 = or i64 %1280, %1300
  %1330 = or i64 %1302, %1284
  call fastcc void @"_ZZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFitENK3$_0clES8_S8_"(%class.anon* nonnull %59, i64 %1262, i64 %1328, i64 %1329, i64 %1330)
  %1331 = or i64 %1310, %1262
  %1332 = or i64 %1312, %1290
  %1333 = or i64 %1321, %1300
  %1334 = or i64 %1324, %1302
  call fastcc void @"_ZZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFitENK3$_0clES8_S8_"(%class.anon* nonnull %59, i64 %1331, i64 %1332, i64 %1333, i64 %1334)
  %1335 = or i64 %1312, 1
  %1336 = or i64 %1321, %1256
  %1337 = or i64 %1324, %1259
  call fastcc void @"_ZZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFitENK3$_0clES8_S8_"(%class.anon* nonnull %59, i64 %1310, i64 %1335, i64 %1336, i64 %1337)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1219) #11
  br label %1338

1338:                                             ; preds = %1218, %1217
  %1339 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %1143, align 8
  %1340 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1339, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1341 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %1340, align 8, !noalias !18
  %1342 = icmp eq %class.GrSurfaceProxy* %1341, null
  br i1 %1342, label %1346, label %1343

1343:                                             ; preds = %1338
  %1344 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1341, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1345 = atomicrmw add i32* %1344, i32 1 monotonic, !noalias !18
  br label %1346

1346:                                             ; preds = %1338, %1343
  %1347 = ptrtoint %class.GrSurfaceProxy* %1341 to i64
  %1348 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1339, i64 0, i32 0, i32 0, i32 2, i32 1
  %1349 = load i32, i32* %1348, align 8, !noalias !18
  %1350 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1339, i64 0, i32 0, i32 0, i32 2, i32 2, i32 0
  %1351 = load i16, i16* %1350, align 2, !noalias !18
  %1352 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %108, align 8
  %1353 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  store i64 %1347, i64* %1353, align 8
  %1354 = icmp eq %class.GrSurfaceProxy* %1352, null
  br i1 %1354, label %1367, label %1355

1355:                                             ; preds = %1346
  %1356 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1352, i64 0, i32 1
  %1357 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1356, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1358 = atomicrmw add i32* %1357, i32 -1 acq_rel
  %1359 = icmp eq i32 %1358, 1
  br i1 %1359, label %1360, label %1367

1360:                                             ; preds = %1355
  %1361 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1356, i64 -2
  %1362 = bitcast %class.SkNVRefCnt* %1361 to %class.GrSurfaceProxy*
  %1363 = bitcast %class.SkNVRefCnt* %1361 to void (%class.GrSurfaceProxy*)***
  %1364 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %1363, align 8
  %1365 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1364, i64 1
  %1366 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1365, align 8
  call void %1366(%class.GrSurfaceProxy* nonnull %1362) #11
  br label %1367

1367:                                             ; preds = %1360, %1355, %1346
  store i32 %1349, i32* %1068, align 8
  store i16 %1351, i16* %1071, align 2
  %1368 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %1143, align 8
  store %class.GrSurfaceDrawContext* null, %class.GrSurfaceDrawContext** %1143, align 8
  %1369 = icmp eq %class.GrSurfaceDrawContext* %1368, null
  br i1 %1369, label %1375, label %1370

1370:                                             ; preds = %1367
  %1371 = bitcast %class.GrSurfaceDrawContext* %1368 to void (%class.GrSurfaceDrawContext*)***
  %1372 = load void (%class.GrSurfaceDrawContext*)**, void (%class.GrSurfaceDrawContext*)*** %1371, align 8
  %1373 = getelementptr inbounds void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %1372, i64 1
  %1374 = load void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %1373, align 8
  call void %1374(%class.GrSurfaceDrawContext* nonnull %1368) #11
  br label %1375

1375:                                             ; preds = %1367, %1370
  %1376 = load %class.GrSurfaceContext*, %class.GrSurfaceContext** %1059, align 8
  store %class.GrSurfaceContext* null, %class.GrSurfaceContext** %1059, align 8
  %1377 = icmp eq %class.GrSurfaceContext* %1376, null
  br i1 %1377, label %1383, label %1378

1378:                                             ; preds = %1375
  %1379 = bitcast %class.GrSurfaceContext* %1376 to void (%class.GrSurfaceContext*)***
  %1380 = load void (%class.GrSurfaceContext*)**, void (%class.GrSurfaceContext*)*** %1379, align 8
  %1381 = getelementptr inbounds void (%class.GrSurfaceContext*)*, void (%class.GrSurfaceContext*)** %1380, i64 1
  %1382 = load void (%class.GrSurfaceContext*)*, void (%class.GrSurfaceContext*)** %1381, align 8
  call void %1382(%class.GrSurfaceContext* nonnull %1376) #11
  br label %1383

1383:                                             ; preds = %1375, %1378
  %1384 = bitcast { <2 x float>, <2 x float> }* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1384) #11
  %1385 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %60, i64 0, i32 0, i64 0
  %1386 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %61, i64 0, i32 1
  %1387 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %60, i64 0, i32 1, i64 0
  %1388 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %61, i64 0, i32 3
  %1389 = load i32, i32* %1097, align 8
  %1390 = load i32, i32* %1112, align 4
  %1391 = sub nsw i32 0, %1389
  %1392 = sub nsw i32 0, %1390
  %1393 = load i32, i32* %125, align 8
  %1394 = sext i32 %1393 to i64
  %1395 = sext i32 %1391 to i64
  %1396 = add nsw i64 %1394, %1395
  %1397 = icmp slt i64 %1396, 2147483647
  %1398 = select i1 %1397, i64 %1396, i64 2147483647
  %1399 = icmp sgt i64 %1398, -2147483647
  %1400 = select i1 %1399, i64 %1398, i64 -2147483647
  %1401 = load i32, i32* %132, align 4
  %1402 = sext i32 %1401 to i64
  %1403 = sext i32 %1392 to i64
  %1404 = add nsw i64 %1402, %1403
  %1405 = icmp slt i64 %1404, 2147483647
  %1406 = select i1 %1405, i64 %1404, i64 2147483647
  %1407 = icmp sgt i64 %1406, -2147483647
  %1408 = select i1 %1407, i64 %1406, i64 -2147483647
  %1409 = load i32, i32* %123, align 8
  %1410 = sext i32 %1409 to i64
  %1411 = add nsw i64 %1410, %1395
  %1412 = icmp slt i64 %1411, 2147483647
  %1413 = select i1 %1412, i64 %1411, i64 2147483647
  %1414 = icmp sgt i64 %1413, -2147483647
  %1415 = select i1 %1414, i64 %1413, i64 -2147483647
  %1416 = load i32, i32* %130, align 4
  %1417 = sext i32 %1416 to i64
  %1418 = add nsw i64 %1417, %1403
  %1419 = icmp slt i64 %1418, 2147483647
  %1420 = select i1 %1419, i64 %1418, i64 2147483647
  %1421 = icmp sgt i64 %1420, -2147483647
  %1422 = select i1 %1421, i64 %1420, i64 -2147483647
  %1423 = trunc i64 %1400 to i32
  %1424 = trunc i64 %1408 to i32
  %1425 = sitofp i32 %1423 to float
  %1426 = sitofp i32 %1424 to float
  %1427 = trunc i64 %1415 to i32
  %1428 = sitofp i32 %1427 to float
  %1429 = trunc i64 %1422 to i32
  %1430 = sitofp i32 %1429 to float
  %1431 = fmul float %1126, %1425
  %1432 = fmul float %1128, %1426
  %1433 = fmul float %1126, %1428
  %1434 = fmul float %1128, %1430
  %1435 = uitofp i1 %1139 to float
  %1436 = uitofp i1 %1140 to float
  %1437 = fadd float %1431, %1435
  store float %1437, float* %1385, align 8
  %1438 = fadd float %1432, %1436
  store float %1438, float* %1386, align 4
  %1439 = fadd float %1433, %1435
  store float %1439, float* %1387, align 8
  %1440 = fadd float %1434, %1436
  store float %1440, float* %1388, align 4
  %1441 = call float @llvm.floor.f32(float %1437) #11
  %1442 = fcmp olt float %1441, 0x41DFFFFFE0000000
  %1443 = select i1 %1442, float %1441, float 0x41DFFFFFE0000000
  %1444 = fcmp ogt float %1443, 0xC1DFFFFFE0000000
  %1445 = select i1 %1444, float %1443, float 0xC1DFFFFFE0000000
  %1446 = fptosi float %1445 to i32
  %1447 = call float @llvm.floor.f32(float %1438) #11
  %1448 = fcmp olt float %1447, 0x41DFFFFFE0000000
  %1449 = select i1 %1448, float %1447, float 0x41DFFFFFE0000000
  %1450 = fcmp ogt float %1449, 0xC1DFFFFFE0000000
  %1451 = select i1 %1450, float %1449, float 0xC1DFFFFFE0000000
  %1452 = fptosi float %1451 to i32
  %1453 = call float @llvm.ceil.f32(float %1439) #11
  %1454 = fcmp olt float %1453, 0x41DFFFFFE0000000
  %1455 = select i1 %1454, float %1453, float 0x41DFFFFFE0000000
  %1456 = fcmp ogt float %1455, 0xC1DFFFFFE0000000
  %1457 = select i1 %1456, float %1455, float 0xC1DFFFFFE0000000
  %1458 = fptosi float %1457 to i32
  %1459 = call float @llvm.ceil.f32(float %1440) #11
  %1460 = fcmp olt float %1459, 0x41DFFFFFE0000000
  %1461 = select i1 %1460, float %1459, float 0x41DFFFFFE0000000
  %1462 = fcmp ogt float %1461, 0xC1DFFFFFE0000000
  %1463 = select i1 %1462, float %1461, float 0xC1DFFFFFE0000000
  %1464 = fptosi float %1463 to i32
  %1465 = zext i32 %1452 to i64
  %1466 = shl nuw i64 %1465, 32
  %1467 = zext i32 %1464 to i64
  %1468 = shl nuw i64 %1467, 32
  %1469 = zext i32 %1458 to i64
  %1470 = or i64 %1468, %1469
  %1471 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %108, align 8
  %1472 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1471, i64 0, i32 6
  %1473 = bitcast %struct.SkISize* %1472 to i64*
  %1474 = load i64, i64* %1473, align 8
  %1475 = ptrtoint %class.GrSurfaceProxy* %1471 to i64
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %108, align 8
  %1476 = bitcast %class.GrSurfaceProxyView* %62 to i64*
  store i64 %1475, i64* %1476, align 8
  %1477 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %62, i64 0, i32 1
  %1478 = load i32, i32* %1068, align 8
  store i32 %1478, i32* %1477, align 8
  %1479 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %62, i64 0, i32 2, i32 0
  %1480 = load i16, i16* %1071, align 2
  store i16 %1480, i16* %1479, align 4
  %1481 = load i32, i32* %38, align 4
  %1482 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %63, i64 0, i32 0
  %1483 = load %class.SkColorSpace*, %class.SkColorSpace** %1042, align 8
  %1484 = icmp eq %class.SkColorSpace* %1483, null
  br i1 %1484, label %1488, label %1485

1485:                                             ; preds = %1383
  %1486 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1483, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1487 = atomicrmw add i32* %1486, i32 1 monotonic
  br label %1488

1488:                                             ; preds = %1383, %1485
  store %class.SkColorSpace* %1483, %class.SkColorSpace** %1482, align 8
  %1489 = bitcast %struct.SkIRect* %64 to i64*
  %1490 = zext i32 %1446 to i64
  %1491 = or i64 %1466, %1490
  store i64 %1491, i64* %1489, align 8
  %1492 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %64, i64 0, i32 2
  %1493 = bitcast i32* %1492 to i64*
  store i64 %1470, i64* %1493, align 8
  %1494 = bitcast %struct.SkIRect* %65 to i64*
  store i64 0, i64* %1494, align 8
  %1495 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %65, i64 0, i32 2
  %1496 = bitcast i32* %1495 to i64*
  store i64 %1474, i64* %1496, align 8
  %1497 = call %class.GrSurfaceDrawContext* @_ZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFit(%class.GrRecordingContext* %0, %class.GrSurfaceProxyView* nonnull %62, i32 %2, i32 %1481, %class.sk_sp.176* nonnull %63, %struct.SkIRect* nonnull byval(%struct.SkIRect) align 8 %64, %struct.SkIRect* nonnull byval(%struct.SkIRect) align 8 %65, float %1129, float %1130, i32 %9, i32 %10)
  %1498 = load %class.SkColorSpace*, %class.SkColorSpace** %1482, align 8
  %1499 = icmp eq %class.SkColorSpace* %1498, null
  br i1 %1499, label %1506, label %1500

1500:                                             ; preds = %1488
  %1501 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1498, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1502 = atomicrmw add i32* %1501, i32 -1 acq_rel
  %1503 = icmp eq i32 %1502, 1
  br i1 %1503, label %1504, label %1506

1504:                                             ; preds = %1500
  %1505 = bitcast %class.SkColorSpace* %1498 to i8*
  call void @_ZdlPv(i8* %1505) #12
  br label %1506

1506:                                             ; preds = %1488, %1500, %1504
  %1507 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %62, i64 0, i32 0, i32 0
  %1508 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %1507, align 8
  %1509 = icmp eq %class.GrSurfaceProxy* %1508, null
  br i1 %1509, label %1522, label %1510

1510:                                             ; preds = %1506
  %1511 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1508, i64 0, i32 1
  %1512 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1511, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1513 = atomicrmw add i32* %1512, i32 -1 acq_rel
  %1514 = icmp eq i32 %1513, 1
  br i1 %1514, label %1515, label %1522

1515:                                             ; preds = %1510
  %1516 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1511, i64 -2
  %1517 = bitcast %class.SkNVRefCnt* %1516 to %class.GrSurfaceProxy*
  %1518 = bitcast %class.SkNVRefCnt* %1516 to void (%class.GrSurfaceProxy*)***
  %1519 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %1518, align 8
  %1520 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1519, i64 1
  %1521 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1520, align 8
  call void %1521(%class.GrSurfaceProxy* nonnull %1517) #11
  br label %1522

1522:                                             ; preds = %1506, %1510, %1515
  %1523 = icmp eq %class.GrSurfaceDrawContext* %1497, null
  br i1 %1523, label %1696, label %1524

1524:                                             ; preds = %1522
  %1525 = sub nsw i32 0, %1446
  %1526 = sitofp i32 %1525 to float
  %1527 = sub nsw i32 0, %1452
  %1528 = sitofp i32 %1527 to float
  %1529 = load float, float* %1385, align 8
  %1530 = fadd float %1529, %1526
  store float %1530, float* %1385, align 8
  %1531 = load float, float* %1386, align 4
  %1532 = fadd float %1531, %1528
  store float %1532, float* %1386, align 4
  %1533 = load float, float* %1387, align 8
  %1534 = fadd float %1533, %1526
  store float %1534, float* %1387, align 8
  %1535 = load float, float* %1388, align 4
  %1536 = fadd float %1535, %1528
  store float %1536, float* %1388, align 4
  %1537 = load i32, i32* %123, align 8
  %1538 = load i32, i32* %125, align 8
  %1539 = sub i32 %1537, %1538
  %1540 = load i32, i32* %130, align 4
  %1541 = load i32, i32* %132, align 4
  %1542 = sub i32 %1540, %1541
  %1543 = zext i32 %1542 to i64
  %1544 = shl nuw i64 %1543, 32
  %1545 = zext i32 %1539 to i64
  %1546 = or i64 %1544, %1545
  %1547 = bitcast %class.sk_sp.176* %4 to i64*
  %1548 = load i64, i64* %1547, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %1042, align 8
  %1549 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1497, i64 0, i32 0, i32 0
  %1550 = bitcast %class.sk_sp.176* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1550)
  %1551 = bitcast %class.GrSurfaceProxyView* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1551)
  %1552 = bitcast { <2 x float>, <2 x float> }* %34 to %struct.SkRect*
  %1553 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1497, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1554 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %1553, align 8, !noalias !21
  %1555 = icmp eq %class.GrSurfaceProxy* %1554, null
  br i1 %1555, label %1678, label %1556

1556:                                             ; preds = %1524
  %1557 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1554, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1558 = atomicrmw add i32* %1557, i32 1 monotonic, !noalias !21
  %1559 = ptrtoint %class.GrSurfaceProxy* %1554 to i64
  %1560 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1497, i64 0, i32 0, i32 0, i32 2, i32 1
  %1561 = load i32, i32* %1560, align 8, !noalias !21
  %1562 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1497, i64 0, i32 0, i32 0, i32 2, i32 2, i32 0
  %1563 = load i16, i16* %1562, align 2, !noalias !21
  %1564 = bitcast %class.GrSurfaceProxy* %1554 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %1565 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %1564, align 8
  %1566 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %1565, i64 3
  %1567 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %1566, align 8
  %1568 = call %class.GrTextureProxy* %1567(%class.GrSurfaceProxy* nonnull %1554) #11
  %1569 = icmp eq %class.GrTextureProxy* %1568, null
  br i1 %1569, label %1664, label %1570

1570:                                             ; preds = %1556
  %1571 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1497, i64 0, i32 0, i32 0, i32 3, i32 2
  %1572 = load i32, i32* %1571, align 8
  %1573 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1497, i64 0, i32 0, i32 0, i32 3, i32 3
  %1574 = load i32, i32* %1573, align 4
  %1575 = bitcast %class.GrSurfaceDrawContext* %1497 to void (%class.GrSurfaceContext*)***
  %1576 = load void (%class.GrSurfaceContext*)**, void (%class.GrSurfaceContext*)*** %1575, align 8
  %1577 = getelementptr inbounds void (%class.GrSurfaceContext*)*, void (%class.GrSurfaceContext*)** %1576, i64 1
  %1578 = load void (%class.GrSurfaceContext*)*, void (%class.GrSurfaceContext*)** %1577, align 8
  call void %1578(%class.GrSurfaceContext* nonnull %1549) #11
  %1579 = bitcast %class.sk_sp.176* %30 to i64*
  store i64 %1548, i64* %1579, align 8
  %1580 = bitcast %class.SkSurfaceProps* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1580) #11
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %31) #11
  %1581 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1554, i64 0, i32 15
  %1582 = load i8, i8* %1581, align 1, !range !2
  %1583 = icmp ne i8 %1582, 0
  %1584 = call %class.GrSurfaceDrawContext* @_ZN20GrSurfaceDrawContext4MakeEP18GrRecordingContext11GrColorType5sk_spI12SkColorSpaceE12SkBackingFit7SkISizeRK14SkSurfacePropsi11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %0, i32 %1572, %class.sk_sp.176* nonnull %30, i32 %10, i64 %1546, %class.SkSurfaceProps* nonnull dereferenceable(8) %31, i32 1, i1 zeroext false, i1 zeroext %1583, i32 %1561, i1 zeroext true) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1580) #11
  %1585 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %30, i64 0, i32 0
  %1586 = load %class.SkColorSpace*, %class.SkColorSpace** %1585, align 8
  %1587 = icmp eq %class.SkColorSpace* %1586, null
  br i1 %1587, label %1594, label %1588

1588:                                             ; preds = %1570
  %1589 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1586, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1590 = atomicrmw add i32* %1589, i32 -1 acq_rel
  %1591 = icmp eq i32 %1590, 1
  br i1 %1591, label %1592, label %1594

1592:                                             ; preds = %1588
  %1593 = bitcast %class.SkColorSpace* %1586 to i8*
  call void @_ZdlPv(i8* %1593) #12
  br label %1594

1594:                                             ; preds = %1592, %1588, %1570
  %1595 = icmp eq %class.GrSurfaceDrawContext* %1584, null
  br i1 %1595, label %1664, label %1596

1596:                                             ; preds = %1594
  %1597 = bitcast %class.GrPaint* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1597) #11
  %1598 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %1599 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %32, i64 0, i32 2, i32 0, i32 0, i32 0
  %1600 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %32, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1597, i8 -86, i64 28, i1 false) #11
  %1601 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %32, i64 0, i32 6, i64 0
  %1602 = bitcast i8* %1601 to i32*
  store i32 -1431655766, i32* %1602, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1597, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %1600, align 8
  %1603 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %32, i64 0, i32 5
  %1604 = bitcast %struct.SkRGBA4f* %1603 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1604, i8* align 4 bitcast (%struct.SkRGBA4f* @_ZL17SK_PMColor4fWHITE to i8*), i64 16, i1 false) #11
  %1605 = bitcast %class.GrSurfaceProxyView* %33 to i64*
  store i64 %1559, i64* %1605, align 8
  %1606 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %33, i64 0, i32 1
  store i32 %1561, i32* %1606, align 8
  %1607 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %33, i64 0, i32 2, i32 0
  store i16 %1563, i16* %1607, align 4
  %1608 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #11
  %1609 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %119) #11
  %1610 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectS8_RK6GrCapsPKf(%class.GrSurfaceProxyView* nonnull %33, i32 %1574, %class.SkMatrix* dereferenceable(40) %1608, i64 4294967296, i32 0, %struct.SkRect* nonnull dereferenceable(16) %61, %struct.SkRect* nonnull dereferenceable(16) %61, %class.GrCaps* dereferenceable(232) %1609, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0)) #11
  %1611 = ptrtoint %class.GrFragmentProcessor* %1610 to i64
  %1612 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %33, i64 0, i32 0, i32 0
  %1613 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %1612, align 8
  %1614 = icmp eq %class.GrSurfaceProxy* %1613, null
  br i1 %1614, label %1627, label %1615

1615:                                             ; preds = %1596
  %1616 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1613, i64 0, i32 1
  %1617 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1616, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1618 = atomicrmw add i32* %1617, i32 -1 acq_rel
  %1619 = icmp eq i32 %1618, 1
  br i1 %1619, label %1620, label %1627

1620:                                             ; preds = %1615
  %1621 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1616, i64 -2
  %1622 = bitcast %class.SkNVRefCnt* %1621 to %class.GrSurfaceProxy*
  %1623 = bitcast %class.SkNVRefCnt* %1621 to void (%class.GrSurfaceProxy*)***
  %1624 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %1623, align 8
  %1625 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1624, i64 1
  %1626 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1625, align 8
  call void %1626(%class.GrSurfaceProxy* nonnull %1622) #11
  br label %1627

1627:                                             ; preds = %1620, %1615, %1596
  %1628 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %32, i64 0, i32 1
  %1629 = getelementptr inbounds %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123"* %1628, i64 0, i32 0, i32 0, i32 0
  %1630 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %1629, align 8
  %1631 = bitcast %"class.std::__1::unique_ptr.123"* %1628 to i64*
  store i64 %1611, i64* %1631, align 8
  %1632 = icmp eq %class.GrFragmentProcessor* %1630, null
  br i1 %1632, label %1638, label %1633

1633:                                             ; preds = %1627
  %1634 = bitcast %class.GrFragmentProcessor* %1630 to void (%class.GrFragmentProcessor*)***
  %1635 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %1634, align 8
  %1636 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %1635, i64 1
  %1637 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %1636, align 8
  call void %1637(%class.GrFragmentProcessor* nonnull %1630) #11
  br label %1638

1638:                                             ; preds = %1633, %1627
  store i8 0, i8* %1600, align 8
  call void @_ZN7GrPaint22setPorterDuffXPFactoryE11SkBlendMode(%class.GrPaint* nonnull %32, i32 1) #11
  %1639 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #11
  %1640 = bitcast { <2 x float>, <2 x float> }* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1640) #11
  %1641 = sitofp i32 %1539 to float
  %1642 = insertelement <2 x float> undef, float %1641, i32 0
  %1643 = sitofp i32 %1542 to float
  %1644 = insertelement <2 x float> %1642, float %1643, i32 1
  %1645 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %34, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %1645, align 8
  %1646 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %34, i64 0, i32 1
  store <2 x float> %1644, <2 x float>* %1646, align 8
  call void @_ZN20GrSurfaceDrawContext14fillRectToRectEPK6GrClipO7GrPaint4GrAARK8SkMatrixRK6SkRectSB_(%class.GrSurfaceDrawContext* nonnull %1584, %class.GrClip* null, %class.GrPaint* nonnull dereferenceable(48) %32, i1 zeroext false, %class.SkMatrix* dereferenceable(40) %1639, %struct.SkRect* nonnull dereferenceable(16) %1552, %struct.SkRect* nonnull dereferenceable(16) %61) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1640) #11
  %1647 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %1599, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %1599, align 8
  %1648 = icmp eq %class.GrFragmentProcessor* %1647, null
  br i1 %1648, label %1654, label %1649

1649:                                             ; preds = %1638
  %1650 = bitcast %class.GrFragmentProcessor* %1647 to void (%class.GrFragmentProcessor*)***
  %1651 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %1650, align 8
  %1652 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %1651, i64 1
  %1653 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %1652, align 8
  call void %1653(%class.GrFragmentProcessor* nonnull %1647) #11
  br label %1654

1654:                                             ; preds = %1649, %1638
  %1655 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %1598, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %1598, align 8
  %1656 = icmp eq %class.GrFragmentProcessor* %1655, null
  br i1 %1656, label %1662, label %1657

1657:                                             ; preds = %1654
  %1658 = bitcast %class.GrFragmentProcessor* %1655 to void (%class.GrFragmentProcessor*)***
  %1659 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %1658, align 8
  %1660 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %1659, i64 1
  %1661 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %1660, align 8
  call void %1661(%class.GrFragmentProcessor* nonnull %1655) #11
  br label %1662

1662:                                             ; preds = %1654, %1657
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1597) #11
  %1663 = ptrtoint %class.GrSurfaceDrawContext* %1584 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1550)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1551)
  br label %1696

1664:                                             ; preds = %1594, %1556
  %1665 = phi i64 [ %1548, %1556 ], [ 0, %1594 ]
  %1666 = phi %class.GrSurfaceContext* [ %1549, %1556 ], [ null, %1594 ]
  %1667 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1554, i64 0, i32 1
  %1668 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1667, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1669 = atomicrmw add i32* %1668, i32 -1 acq_rel
  %1670 = icmp eq i32 %1669, 1
  br i1 %1670, label %1671, label %1678

1671:                                             ; preds = %1664
  %1672 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1667, i64 -2
  %1673 = bitcast %class.SkNVRefCnt* %1672 to %class.GrSurfaceProxy*
  %1674 = bitcast %class.SkNVRefCnt* %1672 to void (%class.GrSurfaceProxy*)***
  %1675 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %1674, align 8
  %1676 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1675, i64 1
  %1677 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1676, align 8
  call void %1677(%class.GrSurfaceProxy* nonnull %1673) #11
  br label %1678

1678:                                             ; preds = %1671, %1664, %1524
  %1679 = phi i64 [ %1548, %1524 ], [ %1665, %1671 ], [ %1665, %1664 ]
  %1680 = phi %class.GrSurfaceContext* [ %1549, %1524 ], [ %1666, %1671 ], [ %1666, %1664 ]
  %1681 = icmp eq %class.GrSurfaceContext* %1680, null
  br i1 %1681, label %1687, label %1682

1682:                                             ; preds = %1678
  %1683 = bitcast %class.GrSurfaceContext* %1680 to void (%class.GrSurfaceContext*)***
  %1684 = load void (%class.GrSurfaceContext*)**, void (%class.GrSurfaceContext*)*** %1683, align 8
  %1685 = getelementptr inbounds void (%class.GrSurfaceContext*)*, void (%class.GrSurfaceContext*)** %1684, i64 1
  %1686 = load void (%class.GrSurfaceContext*)*, void (%class.GrSurfaceContext*)** %1685, align 8
  call void %1686(%class.GrSurfaceContext* nonnull %1680) #11
  br label %1687

1687:                                             ; preds = %1678, %1682
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1550)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1551)
  %1688 = icmp eq i64 %1679, 0
  br i1 %1688, label %1696, label %1689

1689:                                             ; preds = %1687
  %1690 = inttoptr i64 %1679 to %class.SkColorSpace*
  %1691 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1690, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1692 = atomicrmw add i32* %1691, i32 -1 acq_rel
  %1693 = icmp eq i32 %1692, 1
  br i1 %1693, label %1694, label %1696

1694:                                             ; preds = %1689
  %1695 = inttoptr i64 %1679 to i8*
  call void @_ZdlPv(i8* %1695) #12
  br label %1696

1696:                                             ; preds = %1662, %1522, %1694, %1689, %1687
  %1697 = phi i64 [ 0, %1687 ], [ 0, %1689 ], [ 0, %1694 ], [ 0, %1522 ], [ %1663, %1662 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1384) #11
  br label %1698

1698:                                             ; preds = %1183, %1194, %1696
  %1699 = phi i64 [ %1697, %1696 ], [ 0, %1183 ], [ 0, %1194 ]
  %1700 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %1143, align 8
  store %class.GrSurfaceDrawContext* null, %class.GrSurfaceDrawContext** %1143, align 8
  %1701 = icmp eq %class.GrSurfaceDrawContext* %1700, null
  br i1 %1701, label %1707, label %1702

1702:                                             ; preds = %1698
  %1703 = bitcast %class.GrSurfaceDrawContext* %1700 to void (%class.GrSurfaceDrawContext*)***
  %1704 = load void (%class.GrSurfaceDrawContext*)**, void (%class.GrSurfaceDrawContext*)*** %1703, align 8
  %1705 = getelementptr inbounds void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %1704, i64 1
  %1706 = load void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %1705, align 8
  call void %1706(%class.GrSurfaceDrawContext* nonnull %1700) #11
  br label %1707

1707:                                             ; preds = %1698, %1702
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1142) #11
  %1708 = load %class.GrSurfaceContext*, %class.GrSurfaceContext** %1059, align 8
  store %class.GrSurfaceContext* null, %class.GrSurfaceContext** %1059, align 8
  %1709 = icmp eq %class.GrSurfaceContext* %1708, null
  br i1 %1709, label %1715, label %1710

1710:                                             ; preds = %1707
  %1711 = bitcast %class.GrSurfaceContext* %1708 to void (%class.GrSurfaceContext*)***
  %1712 = load void (%class.GrSurfaceContext*)**, void (%class.GrSurfaceContext*)*** %1711, align 8
  %1713 = getelementptr inbounds void (%class.GrSurfaceContext*)*, void (%class.GrSurfaceContext*)** %1712, i64 1
  %1714 = load void (%class.GrSurfaceContext*)*, void (%class.GrSurfaceContext*)** %1713, align 8
  call void %1714(%class.GrSurfaceContext* nonnull %1708) #11
  br label %1715

1715:                                             ; preds = %1707, %1710
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1058) #11
  %1716 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %1037, align 8
  %1717 = icmp eq %class.GrColorSpaceXform* %1716, null
  br i1 %1717, label %1728, label %1718

1718:                                             ; preds = %1715
  %1719 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %1716, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1720 = atomicrmw add i32* %1719, i32 -1 acq_rel
  %1721 = icmp eq i32 %1720, 1
  br i1 %1721, label %1722, label %1728

1722:                                             ; preds = %1718
  %1723 = bitcast %class.GrColorSpaceXform* %1716 to %class.SkRefCntBase*
  %1724 = bitcast %class.GrColorSpaceXform* %1716 to void (%class.SkRefCntBase*)***
  %1725 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1724, align 8
  %1726 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1725, i64 2
  %1727 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1726, align 8
  call void %1727(%class.SkRefCntBase* nonnull %1723) #11
  br label %1728

1728:                                             ; preds = %1722, %1718, %1715
  %1729 = load %class.SkColorSpace*, %class.SkColorSpace** %1036, align 8
  %1730 = icmp eq %class.SkColorSpace* %1729, null
  br i1 %1730, label %1737, label %1731

1731:                                             ; preds = %1728
  %1732 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1729, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1733 = atomicrmw add i32* %1732, i32 -1 acq_rel
  %1734 = icmp eq i32 %1733, 1
  br i1 %1734, label %1735, label %1737

1735:                                             ; preds = %1731
  %1736 = bitcast %class.SkColorSpace* %1729 to i8*
  call void @_ZdlPv(i8* %1736) #12
  br label %1737

1737:                                             ; preds = %1728, %1731, %1735
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1035) #11
  br label %1738

1738:                                             ; preds = %669, %282, %107, %1027, %1021, %1019, %680, %674, %671, %353, %118, %129, %111, %197, %1737
  %1739 = phi i64 [ %1699, %1737 ], [ 0, %197 ], [ 0, %111 ], [ 0, %129 ], [ 0, %118 ], [ %272, %353 ], [ %672, %671 ], [ %672, %674 ], [ %672, %680 ], [ %1010, %1019 ], [ %1010, %1021 ], [ %1010, %1027 ], [ 0, %107 ], [ 0, %282 ], [ %670, %669 ]
  %1740 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %80, align 8
  %1741 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %1740, null
  br i1 %1741, label %1755, label %1742

1742:                                             ; preds = %1738
  %1743 = load i8*, i8** %81, align 8
  %1744 = load i8, i8* %1743, align 1
  %1745 = icmp eq i8 %1744, 0
  br i1 %1745, label %1755, label %1746

1746:                                             ; preds = %1742
  %1747 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #11
  %1748 = load i8*, i8** %81, align 8
  %1749 = load i8*, i8** %82, align 8
  %1750 = load i64, i64* %83, align 8
  %1751 = bitcast %class.SkEventTracer* %1747 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %1752 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %1751, align 8
  %1753 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %1752, i64 5
  %1754 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %1753, align 8
  call void %1754(%class.SkEventTracer* %1747, i8* %1748, i8* %1749, i64 %1750) #11
  br label %1755

1755:                                             ; preds = %1738, %1742, %1746
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #11
  %1756 = inttoptr i64 %1739 to %class.GrSurfaceDrawContext*
  ret %class.GrSurfaceDrawContext* %1756
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %class.GrSurfaceDrawContext* @_ZN20GrSurfaceDrawContext4MakeEP18GrRecordingContext11GrColorType5sk_spI12SkColorSpaceE12SkBackingFit7SkISizeRK14SkSurfacePropsi11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext*, i32, %class.sk_sp.176*, i32, i64, %class.SkSurfaceProps* dereferenceable(8), i32, i1 zeroext, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps*) unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectS8_RK6GrCapsPKf(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %class.GrCaps* dereferenceable(232), float*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

declare void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo*, i32, i32, %class.sk_sp.176*) unnamed_addr #2

declare %class.GrSurfaceContext* @_ZN16GrSurfaceContext4MakeEP18GrRecordingContext18GrSurfaceProxyViewRK11GrColorInfo(%class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrColorInfo* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #3

declare zeroext i1 @_ZN16GrSurfaceContext11rescaleIntoEP20GrSurfaceFillContext7SkIRectS2_N7SkImage12RescaleGammaENS3_11RescaleModeE(%class.GrSurfaceContext*, %class.GrSurfaceFillContext*, i64, i64, i64, i64, i1 zeroext, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFitENK3$_0clES8_S8_"(%class.anon* nocapture readonly, i64, i64, i64, i64) unnamed_addr #4 align 2 {
  %6 = alloca %class.GrSurfaceProxyView, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %11 = alloca %class.sk_sp.178, align 8
  %12 = trunc i64 %1 to i32
  %13 = lshr i64 %1, 32
  %14 = trunc i64 %13 to i32
  %15 = trunc i64 %2 to i32
  %16 = lshr i64 %2, 32
  %17 = trunc i64 %16 to i32
  %18 = trunc i64 %3 to i32
  %19 = lshr i64 %3, 32
  %20 = trunc i64 %19 to i32
  %21 = trunc i64 %4 to i32
  %22 = lshr i64 %4, 32
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %25 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %26, align 8
  %28 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 1
  %29 = load %"class.std::__1::unique_ptr.222"*, %"class.std::__1::unique_ptr.222"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.222"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %class.GrSurfaceContext*, %class.GrSurfaceContext** %30, align 8
  %32 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %6, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %class.GrSurfaceContext, %class.GrSurfaceContext* %31, i64 0, i32 2, i32 0, i32 0
  %34 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %33, align 8, !noalias !24
  %35 = icmp eq %class.GrSurfaceProxy* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %5
  %37 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %34, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic, !noalias !24
  br label %39

39:                                               ; preds = %5, %36
  store %class.GrSurfaceProxy* %34, %class.GrSurfaceProxy** %32, align 8, !alias.scope !24
  %40 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %6, i64 0, i32 1
  %41 = getelementptr inbounds %class.GrSurfaceContext, %class.GrSurfaceContext* %31, i64 0, i32 2, i32 1
  %42 = load i32, i32* %41, align 8, !noalias !24
  store i32 %42, i32* %40, align 8, !alias.scope !24
  %43 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %6, i64 0, i32 2, i32 0
  %44 = getelementptr inbounds %class.GrSurfaceContext, %class.GrSurfaceContext* %31, i64 0, i32 2, i32 2, i32 0
  %45 = load i16, i16* %44, align 2, !noalias !24
  store i16 %45, i16* %43, align 4, !alias.scope !24
  %46 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %47 = load i32*, i32** %46, align 8
  %48 = load i32, i32* %47, align 4
  %49 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #11
  %50 = sitofp i32 %18 to float
  %51 = insertelement <2 x float> undef, float %50, i32 0
  %52 = sitofp i32 %20 to float
  %53 = insertelement <2 x float> %51, float %52, i32 1
  %54 = sitofp i32 %21 to float
  %55 = insertelement <2 x float> undef, float %54, i32 0
  %56 = sitofp i32 %23 to float
  %57 = insertelement <2 x float> %55, float %56, i32 1
  %58 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %53, <2 x float>* %58, align 8
  %59 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %57, <2 x float>* %59, align 8
  %60 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #11
  %61 = sitofp i32 %12 to float
  %62 = insertelement <2 x float> undef, float %61, i32 0
  %63 = sitofp i32 %14 to float
  %64 = insertelement <2 x float> %62, float %63, i32 1
  %65 = sitofp i32 %15 to float
  %66 = insertelement <2 x float> undef, float %65, i32 0
  %67 = sitofp i32 %17 to float
  %68 = insertelement <2 x float> %66, float %67, i32 1
  %69 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> %64, <2 x float>* %69, align 8
  %70 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %68, <2 x float>* %70, align 8
  %71 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #11
  %72 = getelementptr inbounds %class.sk_sp.178, %class.sk_sp.178* %11, i64 0, i32 0
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %72, align 8
  call void @_ZN20GrSurfaceDrawContext11drawTextureEPK6GrClip18GrSurfaceProxyView11SkAlphaType12SkFilterMode12SkMipmapMode11SkBlendModeRK8SkRGBA4fILS4_2EERK6SkRectSE_4GrAA13GrQuadAAFlagsN8SkCanvas17SrcRectConstraintERK8SkMatrix5sk_spI17GrColorSpaceXformE(%class.GrSurfaceDrawContext* %27, %class.GrClip* null, %class.GrSurfaceProxyView* nonnull %6, i32 %48, i32 1, i32 0, i32 1, %struct.SkRGBA4f* nonnull dereferenceable(16) @_ZL17SK_PMColor4fWHITE, %struct.SkRect* nonnull dereferenceable(16) %8, %struct.SkRect* nonnull dereferenceable(16) %10, i1 zeroext false, i32 0, i32 1, %class.SkMatrix* dereferenceable(40) %71, %class.sk_sp.178* nonnull %11) #11
  %73 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %72, align 8
  %74 = icmp eq %class.GrColorSpaceXform* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %39
  %76 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %73, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = bitcast %class.GrColorSpaceXform* %73 to %class.SkRefCntBase*
  %81 = bitcast %class.GrColorSpaceXform* %73 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8
  call void %84(%class.SkRefCntBase* nonnull %80) #11
  br label %85

85:                                               ; preds = %39, %75, %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #11
  %86 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %32, align 8
  %87 = icmp eq %class.GrSurfaceProxy* %86, null
  br i1 %87, label %100, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %86, i64 0, i32 1
  %90 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %100

93:                                               ; preds = %88
  %94 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %89, i64 -2
  %95 = bitcast %class.SkNVRefCnt* %94 to %class.GrSurfaceProxy*
  %96 = bitcast %class.SkNVRefCnt* %94 to void (%class.GrSurfaceProxy*)***
  %97 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %96, align 8
  %98 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %97, i64 1
  %99 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %98, align 8
  call void %99(%class.GrSurfaceProxy* nonnull %95) #11
  br label %100

100:                                              ; preds = %85, %88, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14SkGpuBlurUtils25ComputeBlurredRRectParamsERK7SkRRectS2_ffPS0_P7SkISizePfS6_S6_S6_(%class.SkRRect* nocapture readonly dereferenceable(52), %class.SkRRect* nocapture readonly dereferenceable(52), float, float, %class.SkRRect*, %struct.SkISize* nocapture, float* nocapture, float* nocapture, float* nocapture, float* nocapture) local_unnamed_addr #0 {
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRect*
  %13 = alloca [4 x %struct.SkPoint], align 16
  %14 = fadd float %3, 0xBFC5555560000000
  %15 = tail call float @llvm.ceil.f32(float %14)
  %16 = fcmp olt float %15, 0x41DFFFFFE0000000
  %17 = select i1 %16, float %15, float 0x41DFFFFFE0000000
  %18 = fcmp ogt float %17, 0xC1DFFFFFE0000000
  %19 = select i1 %18, float %17, float 0xC1DFFFFFE0000000
  %20 = fptosi float %19 to i32
  %21 = mul nsw i32 %20, 3
  %22 = fmul float %2, 3.000000e+00
  %23 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 0
  %24 = bitcast %struct.SkPoint* %23 to i64*
  %25 = load i64, i64* %24, align 4
  %26 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 1
  %27 = bitcast %struct.SkPoint* %26 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 2
  %30 = bitcast %struct.SkPoint* %29 to i64*
  %31 = load i64, i64* %30, align 4
  %32 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 3
  %33 = bitcast %struct.SkPoint* %32 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = trunc i64 %25 to i32
  %36 = bitcast i32 %35 to float
  %37 = trunc i64 %34 to i32
  %38 = bitcast i32 %37 to float
  %39 = fcmp olt float %36, %38
  %40 = select i1 %39, float %38, float %36
  %41 = tail call float @llvm.ceil.f32(float %40)
  %42 = fcmp olt float %41, 0x41DFFFFFE0000000
  %43 = select i1 %42, float %41, float 0x41DFFFFFE0000000
  %44 = fcmp ogt float %43, 0xC1DFFFFFE0000000
  %45 = select i1 %44, float %43, float 0xC1DFFFFFE0000000
  %46 = fptosi float %45 to i32
  %47 = lshr i64 %25, 32
  %48 = trunc i64 %47 to i32
  %49 = bitcast i32 %48 to float
  %50 = lshr i64 %28, 32
  %51 = trunc i64 %50 to i32
  %52 = bitcast i32 %51 to float
  %53 = fcmp olt float %49, %52
  %54 = select i1 %53, float %52, float %49
  %55 = tail call float @llvm.ceil.f32(float %54)
  %56 = fcmp olt float %55, 0x41DFFFFFE0000000
  %57 = select i1 %56, float %55, float 0x41DFFFFFE0000000
  %58 = fcmp ogt float %57, 0xC1DFFFFFE0000000
  %59 = select i1 %58, float %57, float 0xC1DFFFFFE0000000
  %60 = fptosi float %59 to i32
  %61 = trunc i64 %28 to i32
  %62 = bitcast i32 %61 to float
  %63 = trunc i64 %31 to i32
  %64 = bitcast i32 %63 to float
  %65 = fcmp olt float %62, %64
  %66 = select i1 %65, float %64, float %62
  %67 = tail call float @llvm.ceil.f32(float %66)
  %68 = fcmp olt float %67, 0x41DFFFFFE0000000
  %69 = select i1 %68, float %67, float 0x41DFFFFFE0000000
  %70 = fcmp ogt float %69, 0xC1DFFFFFE0000000
  %71 = select i1 %70, float %69, float 0xC1DFFFFFE0000000
  %72 = fptosi float %71 to i32
  %73 = lshr i64 %34, 32
  %74 = trunc i64 %73 to i32
  %75 = bitcast i32 %74 to float
  %76 = lshr i64 %31, 32
  %77 = trunc i64 %76 to i32
  %78 = bitcast i32 %77 to float
  %79 = fcmp olt float %75, %78
  %80 = select i1 %79, float %78, float %75
  %81 = tail call float @llvm.ceil.f32(float %80)
  %82 = fcmp olt float %81, 0x41DFFFFFE0000000
  %83 = select i1 %82, float %81, float 0x41DFFFFFE0000000
  %84 = fcmp ogt float %83, 0xC1DFFFFFE0000000
  %85 = select i1 %84, float %83, float 0xC1DFFFFFE0000000
  %86 = fptosi float %85 to i32
  %87 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = sitofp i32 %46 to float
  %90 = fadd float %88, %89
  %91 = uitofp i32 %21 to float
  %92 = fadd float %90, %91
  %93 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 2
  %94 = load float, float* %93, align 4
  %95 = sitofp i32 %72 to float
  %96 = fsub float %94, %95
  %97 = fsub float %96, %91
  %98 = fcmp ult float %92, %97
  br i1 %98, label %99, label %233

99:                                               ; preds = %10
  %100 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 1
  %101 = load float, float* %100, align 4
  %102 = sitofp i32 %60 to float
  %103 = fadd float %101, %102
  %104 = fadd float %103, %91
  %105 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 3
  %106 = load float, float* %105, align 4
  %107 = sitofp i32 %86 to float
  %108 = fsub float %106, %107
  %109 = fsub float %108, %91
  %110 = fcmp ult float %104, %109
  br i1 %110, label %111, label %233

111:                                              ; preds = %99
  %112 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 1, i64 0
  %113 = bitcast %struct.SkPoint* %112 to i64*
  %114 = load i64, i64* %113, align 4
  %115 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 1, i64 1
  %116 = bitcast %struct.SkPoint* %115 to i64*
  %117 = load i64, i64* %116, align 4
  %118 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 1, i64 2
  %119 = bitcast %struct.SkPoint* %118 to i64*
  %120 = load i64, i64* %119, align 4
  %121 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 1, i64 3
  %122 = bitcast %struct.SkPoint* %121 to i64*
  %123 = load i64, i64* %122, align 4
  %124 = trunc i64 %114 to i32
  %125 = bitcast i32 %124 to float
  %126 = trunc i64 %123 to i32
  %127 = bitcast i32 %126 to float
  %128 = fcmp olt float %125, %127
  %129 = select i1 %128, float %127, float %125
  %130 = lshr i64 %114, 32
  %131 = trunc i64 %130 to i32
  %132 = bitcast i32 %131 to float
  %133 = lshr i64 %117, 32
  %134 = trunc i64 %133 to i32
  %135 = bitcast i32 %134 to float
  %136 = fcmp olt float %132, %135
  %137 = select i1 %136, float %135, float %132
  %138 = trunc i64 %117 to i32
  %139 = bitcast i32 %138 to float
  %140 = trunc i64 %120 to i32
  %141 = bitcast i32 %140 to float
  %142 = fcmp olt float %139, %141
  %143 = select i1 %142, float %141, float %139
  %144 = lshr i64 %123, 32
  %145 = trunc i64 %144 to i32
  %146 = bitcast i32 %145 to float
  %147 = lshr i64 %120, 32
  %148 = trunc i64 %147 to i32
  %149 = bitcast i32 %148 to float
  %150 = fcmp olt float %146, %149
  %151 = select i1 %150, float %149, float %146
  %152 = mul i32 %20, 6
  %153 = or i32 %152, 1
  %154 = add i32 %153, %46
  %155 = add i32 %154, %72
  %156 = add i32 %153, %60
  %157 = add i32 %156, %86
  %158 = add i32 %155, %152
  %159 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %5, i64 0, i32 0
  store i32 %158, i32* %159, align 4
  %160 = add i32 %157, %152
  %161 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %5, i64 0, i32 1
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 0, i32 0
  %163 = load float, float* %162, align 4
  %164 = fsub float %163, %22
  %165 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 0, i32 1
  %166 = load float, float* %165, align 4
  %167 = fsub float %166, %22
  %168 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 0, i32 2
  %169 = load float, float* %168, align 4
  %170 = fadd float %22, %169
  %171 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 0, i32 3
  %172 = load float, float* %171, align 4
  %173 = fadd float %22, %172
  store float %164, float* %6, align 4
  %174 = fmul float %22, 2.000000e+00
  %175 = fadd float %174, %164
  %176 = fadd float %129, %175
  %177 = getelementptr inbounds float, float* %6, i64 1
  store float %176, float* %177, align 4
  %178 = fsub float %170, %174
  %179 = fsub float %178, %143
  %180 = getelementptr inbounds float, float* %6, i64 2
  store float %179, float* %180, align 4
  %181 = getelementptr inbounds float, float* %6, i64 3
  store float %170, float* %181, align 4
  store float %167, float* %7, align 4
  %182 = fadd float %174, %167
  %183 = fadd float %137, %182
  %184 = getelementptr inbounds float, float* %7, i64 1
  store float %183, float* %184, align 4
  %185 = fsub float %173, %174
  %186 = fsub float %185, %151
  %187 = getelementptr inbounds float, float* %7, i64 2
  store float %186, float* %187, align 4
  %188 = getelementptr inbounds float, float* %7, i64 3
  store float %173, float* %188, align 4
  store float 0.000000e+00, float* %8, align 4
  %189 = fmul float %91, 2.000000e+00
  %190 = fadd float %189, %89
  %191 = getelementptr inbounds float, float* %8, i64 1
  store float %190, float* %191, align 4
  %192 = fadd float %190, 1.000000e+00
  %193 = getelementptr inbounds float, float* %8, i64 2
  store float %192, float* %193, align 4
  %194 = load i32, i32* %159, align 4
  %195 = sitofp i32 %194 to float
  %196 = getelementptr inbounds float, float* %8, i64 3
  store float %195, float* %196, align 4
  store float 0.000000e+00, float* %9, align 4
  %197 = fadd float %189, %102
  %198 = getelementptr inbounds float, float* %9, i64 1
  store float %197, float* %198, align 4
  %199 = fadd float %197, 1.000000e+00
  %200 = getelementptr inbounds float, float* %9, i64 2
  store float %199, float* %200, align 4
  %201 = load i32, i32* %161, align 4
  %202 = sitofp i32 %201 to float
  %203 = getelementptr inbounds float, float* %9, i64 3
  store float %202, float* %203, align 4
  %204 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %204) #11
  %205 = sitofp i32 %155 to float
  %206 = sitofp i32 %157 to float
  %207 = insertelement <2 x float> undef, float %91, i32 0
  %208 = shufflevector <2 x float> %207, <2 x float> undef, <2 x i32> zeroinitializer
  %209 = fadd float %91, %205
  %210 = insertelement <2 x float> undef, float %209, i32 0
  %211 = fadd float %91, %206
  %212 = insertelement <2 x float> %210, float %211, i32 1
  %213 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  store <2 x float> %208, <2 x float>* %213, align 8
  %214 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  store <2 x float> %212, <2 x float>* %214, align 8
  %215 = bitcast [4 x %struct.SkPoint]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %215) #11
  %216 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 0
  %217 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 0, i32 0
  %218 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 0, i32 1
  %219 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 1, i32 0
  %220 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 1, i32 1
  %221 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 2, i32 0
  %222 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 2, i32 1
  %223 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 3, i32 0
  %224 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 3, i32 1
  %225 = tail call float @llvm.ceil.f32(float %36)
  %226 = tail call float @llvm.ceil.f32(float %49)
  store float %225, float* %217, align 16
  store float %226, float* %218, align 4
  %227 = tail call float @llvm.ceil.f32(float %62)
  %228 = tail call float @llvm.ceil.f32(float %52)
  store float %227, float* %219, align 8
  store float %228, float* %220, align 4
  %229 = tail call float @llvm.ceil.f32(float %64)
  %230 = tail call float @llvm.ceil.f32(float %78)
  store float %229, float* %221, align 16
  store float %230, float* %222, align 4
  %231 = tail call float @llvm.ceil.f32(float %38)
  %232 = tail call float @llvm.ceil.f32(float %75)
  store float %231, float* %223, align 8
  store float %232, float* %224, align 4
  call void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect* %4, %struct.SkRect* nonnull dereferenceable(16) %12, %struct.SkPoint* nonnull %216) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %215) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204) #11
  br label %233

233:                                              ; preds = %10, %99, %111
  %234 = phi i1 [ true, %111 ], [ false, %99 ], [ false, %10 ]
  ret i1 %234
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #3

declare void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14SkGpuBlurUtils19CreateIntegralTableEfP8SkBitmap(float, %class.SkBitmap*) local_unnamed_addr #5 {
  %3 = alloca %struct.SkImageInfo, align 16
  %4 = tail call float @llvm.ceil.f32(float %0)
  %5 = fcmp olt float %4, 0x41DFFFFFE0000000
  %6 = select i1 %5, float %4, float 0x41DFFFFFE0000000
  %7 = fcmp ogt float %6, 0xC1DFFFFFE0000000
  %8 = select i1 %7, float %6, float 0xC1DFFFFFE0000000
  %9 = fptosi float %8 to i32
  %10 = shl i32 %9, 1
  %11 = add i32 %10, -1
  %12 = tail call i32 @llvm.ctlz.i32(i32 %11, i1 true) #11, !range !27
  %13 = sub nuw nsw i32 32, %12
  %14 = shl i32 1, %13
  %15 = icmp sgt i32 %14, 32
  %16 = select i1 %15, i32 %14, i32 32
  %17 = icmp eq %class.SkBitmap* %1, null
  br i1 %17, label %81, label %18

18:                                               ; preds = %2
  %19 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = zext i32 %16 to i64
  %21 = or i64 %20, 4294967296
  %22 = bitcast %struct.SkImageInfo* %3 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %22, align 16, !alias.scope !28
  %23 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1
  %24 = bitcast %struct.SkISize* %23 to i64*
  store i64 %21, i64* %24, align 16, !alias.scope !28
  %25 = zext i32 %16 to i64
  %26 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0
  %27 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %26) #11
  %28 = sext i32 %27 to i64
  %29 = mul nsw i64 %28, %25
  %30 = icmp ult i64 %29, 2147483648
  %31 = select i1 %30, i64 %29, i64 0
  %32 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %1, %struct.SkImageInfo* nonnull dereferenceable(24) %3, i64 %31) #11
  %33 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %33, align 16
  %35 = icmp eq %class.SkColorSpace* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %18
  %37 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = bitcast %class.SkColorSpace* %34 to i8*
  call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %18, %36, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  br i1 %32, label %43, label %81

43:                                               ; preds = %42
  %44 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 0
  %45 = load i8*, i8** %44, align 8
  store i8 -1, i8* %45, align 1
  %46 = sitofp i32 %16 to float
  %47 = fdiv float 1.000000e+00, %46
  %48 = add nsw i32 %16, -1
  %49 = zext i32 %48 to i64
  br label %56

50:                                               ; preds = %56
  %51 = load i8*, i8** %44, align 8
  %52 = sext i32 %48 to i64
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  store i8 0, i8* %53, align 1
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* nonnull %1) #11
  %54 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %55 = load i32, i32* %54, align 4
  br label %81

56:                                               ; preds = %43, %56
  %57 = phi i64 [ 1, %43 ], [ %79, %56 ]
  %58 = trunc i64 %57 to i32
  %59 = sitofp i32 %58 to float
  %60 = fadd float %59, 5.000000e-01
  %61 = fmul float %47, %60
  %62 = fmul float %61, 6.000000e+00
  %63 = fsub float 3.000000e+00, %62
  %64 = fmul float %63, 0x3FE6A09E60000000
  %65 = call float @erff(float %64) #11
  %66 = fadd float %65, 1.000000e+00
  %67 = fmul float %66, 5.000000e-01
  %68 = fmul float %67, 2.550000e+02
  %69 = fadd float %68, 5.000000e-01
  %70 = call float @llvm.floor.f32(float %69)
  %71 = fcmp olt float %70, 0x41DFFFFFE0000000
  %72 = select i1 %71, float %70, float 0x41DFFFFFE0000000
  %73 = fcmp ogt float %72, 0xC1DFFFFFE0000000
  %74 = select i1 %73, float %72, float 0xC1DFFFFFE0000000
  %75 = fptosi float %74 to i32
  %76 = trunc i32 %75 to i8
  %77 = load i8*, i8** %44, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 %57
  store i8 %76, i8* %78, align 1
  %79 = add nuw nsw i64 %57, 1
  %80 = icmp ult i64 %79, %49
  br i1 %80, label %56, label %50

81:                                               ; preds = %42, %2, %50
  %82 = phi i32 [ %55, %50 ], [ %16, %2 ], [ 0, %42 ]
  ret i32 %82
}

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkGpuBlurUtils23Compute1DGaussianKernelEPffi(float* nocapture, float, i32) local_unnamed_addr #5 {
  %4 = fcmp ugt float %1, 0x3F9EB851E0000000
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  store float 1.000000e+00, float* %0, align 4
  br label %97

6:                                                ; preds = %3
  %7 = fmul float %1, 2.000000e+00
  %8 = fmul float %7, %1
  %9 = fdiv float 1.000000e+00, %8
  %10 = shl nsw i32 %2, 1
  %11 = or i32 %10, 1
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %97

13:                                               ; preds = %6
  %14 = zext i32 %11 to i64
  br label %76

15:                                               ; preds = %76
  %16 = fdiv float 1.000000e+00, %87
  br i1 %12, label %17, label %97

17:                                               ; preds = %15
  %18 = zext i32 %11 to i64
  %19 = icmp ult i32 %11, 8
  br i1 %19, label %34, label %36

20:                                               ; preds = %49, %36
  %21 = phi i64 [ 0, %36 ], [ %73, %49 ]
  %22 = icmp eq i64 %45, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds float, float* %0, i64 %21
  %25 = bitcast float* %24 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 4
  %27 = getelementptr inbounds float, float* %24, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 4
  %30 = fmul <4 x float> %39, %26
  %31 = fmul <4 x float> %41, %29
  %32 = bitcast float* %24 to <4 x float>*
  store <4 x float> %30, <4 x float>* %32, align 4
  %33 = bitcast float* %27 to <4 x float>*
  store <4 x float> %31, <4 x float>* %33, align 4
  br label %34

34:                                               ; preds = %23, %20, %17
  %35 = phi i64 [ 0, %17 ], [ %37, %20 ], [ %37, %23 ]
  br label %90

36:                                               ; preds = %17
  %37 = and i64 %18, 4294967288
  %38 = insertelement <4 x float> undef, float %16, i32 0
  %39 = shufflevector <4 x float> %38, <4 x float> undef, <4 x i32> zeroinitializer
  %40 = insertelement <4 x float> undef, float %16, i32 0
  %41 = shufflevector <4 x float> %40, <4 x float> undef, <4 x i32> zeroinitializer
  %42 = add nsw i64 %37, -8
  %43 = lshr exact i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 1
  %46 = icmp eq i64 %42, 0
  br i1 %46, label %20, label %47

47:                                               ; preds = %36
  %48 = sub nuw nsw i64 %44, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 0, %47 ], [ %73, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %74, %49 ]
  %52 = getelementptr inbounds float, float* %0, i64 %50
  %53 = bitcast float* %52 to <4 x float>*
  %54 = load <4 x float>, <4 x float>* %53, align 4
  %55 = getelementptr inbounds float, float* %52, i64 4
  %56 = bitcast float* %55 to <4 x float>*
  %57 = load <4 x float>, <4 x float>* %56, align 4
  %58 = fmul <4 x float> %39, %54
  %59 = fmul <4 x float> %41, %57
  %60 = bitcast float* %52 to <4 x float>*
  store <4 x float> %58, <4 x float>* %60, align 4
  %61 = bitcast float* %55 to <4 x float>*
  store <4 x float> %59, <4 x float>* %61, align 4
  %62 = or i64 %50, 8
  %63 = getelementptr inbounds float, float* %0, i64 %62
  %64 = bitcast float* %63 to <4 x float>*
  %65 = load <4 x float>, <4 x float>* %64, align 4
  %66 = getelementptr inbounds float, float* %63, i64 4
  %67 = bitcast float* %66 to <4 x float>*
  %68 = load <4 x float>, <4 x float>* %67, align 4
  %69 = fmul <4 x float> %39, %65
  %70 = fmul <4 x float> %41, %68
  %71 = bitcast float* %63 to <4 x float>*
  store <4 x float> %69, <4 x float>* %71, align 4
  %72 = bitcast float* %66 to <4 x float>*
  store <4 x float> %70, <4 x float>* %72, align 4
  %73 = add i64 %50, 16
  %74 = add i64 %51, -2
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %20, label %49, !llvm.loop !33

76:                                               ; preds = %76, %13
  %77 = phi i64 [ 0, %13 ], [ %88, %76 ]
  %78 = phi float [ 0.000000e+00, %13 ], [ %87, %76 ]
  %79 = trunc i64 %77 to i32
  %80 = sub nsw i32 %79, %2
  %81 = sitofp i32 %80 to float
  %82 = fmul float %81, %81
  %83 = fmul float %9, %82
  %84 = fsub float -0.000000e+00, %83
  %85 = tail call float @expf(float %84) #11
  %86 = getelementptr inbounds float, float* %0, i64 %77
  store float %85, float* %86, align 4
  %87 = fadd float %78, %85
  %88 = add nuw nsw i64 %77, 1
  %89 = icmp eq i64 %88, %14
  br i1 %89, label %15, label %76

90:                                               ; preds = %34, %90
  %91 = phi i64 [ %95, %90 ], [ %35, %34 ]
  %92 = getelementptr inbounds float, float* %0, i64 %91
  %93 = load float, float* %92, align 4
  %94 = fmul float %16, %93
  store float %94, float* %92, align 4
  %95 = add nuw nsw i64 %91, 1
  %96 = icmp eq i64 %95, %18
  br i1 %96, label %97, label %90, !llvm.loop !34

97:                                               ; preds = %90, %6, %15, %5
  ret void
}

; Function Attrs: nofree nounwind
declare float @expf(float) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkGpuBlurUtils29Compute1DLinearGaussianKernelEPfS0_fi(float* nocapture, float* nocapture, float, i32) local_unnamed_addr #5 {
  %5 = shl nsw i32 %3, 1
  %6 = or i32 %5, 1
  %7 = sext i32 %6 to i64
  %8 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %7, i64 4)
  %9 = extractvalue { i64, i1 } %8, 1
  %10 = extractvalue { i64, i1 } %8, 0
  %11 = select i1 %9, i64 -1, i64 %10
  %12 = tail call i8* @_Znam(i64 %11) #12
  %13 = bitcast i8* %12 to float*
  %14 = fcmp ugt float %2, 0x3F9EB851E0000000
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  store float 1.000000e+00, float* %13, align 4
  br label %103

16:                                               ; preds = %4
  %17 = fmul float %2, 2.000000e+00
  %18 = fmul float %17, %2
  %19 = fdiv float 1.000000e+00, %18
  %20 = icmp sgt i32 %6, 0
  br i1 %20, label %21, label %103

21:                                               ; preds = %16
  %22 = zext i32 %6 to i64
  br label %82

23:                                               ; preds = %82
  %24 = fdiv float 1.000000e+00, %93
  %25 = icmp ult i32 %6, 8
  br i1 %25, label %40, label %42

26:                                               ; preds = %55, %42
  %27 = phi i64 [ 0, %42 ], [ %79, %55 ]
  %28 = icmp eq i64 %51, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds float, float* %13, i64 %27
  %31 = bitcast float* %30 to <4 x float>*
  %32 = load <4 x float>, <4 x float>* %31, align 4
  %33 = getelementptr inbounds float, float* %30, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %35 = load <4 x float>, <4 x float>* %34, align 4
  %36 = fmul <4 x float> %45, %32
  %37 = fmul <4 x float> %47, %35
  %38 = bitcast float* %30 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4
  %39 = bitcast float* %33 to <4 x float>*
  store <4 x float> %37, <4 x float>* %39, align 4
  br label %40

40:                                               ; preds = %29, %26, %23
  %41 = phi i64 [ 0, %23 ], [ %43, %26 ], [ %43, %29 ]
  br label %96

42:                                               ; preds = %23
  %43 = and i64 %22, 4294967288
  %44 = insertelement <4 x float> undef, float %24, i32 0
  %45 = shufflevector <4 x float> %44, <4 x float> undef, <4 x i32> zeroinitializer
  %46 = insertelement <4 x float> undef, float %24, i32 0
  %47 = shufflevector <4 x float> %46, <4 x float> undef, <4 x i32> zeroinitializer
  %48 = add nsw i64 %43, -8
  %49 = lshr exact i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %48, 0
  br i1 %52, label %26, label %53

53:                                               ; preds = %42
  %54 = sub nuw nsw i64 %50, %51
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ 0, %53 ], [ %79, %55 ]
  %57 = phi i64 [ %54, %53 ], [ %80, %55 ]
  %58 = getelementptr inbounds float, float* %13, i64 %56
  %59 = bitcast float* %58 to <4 x float>*
  %60 = load <4 x float>, <4 x float>* %59, align 4
  %61 = getelementptr inbounds float, float* %58, i64 4
  %62 = bitcast float* %61 to <4 x float>*
  %63 = load <4 x float>, <4 x float>* %62, align 4
  %64 = fmul <4 x float> %45, %60
  %65 = fmul <4 x float> %47, %63
  %66 = bitcast float* %58 to <4 x float>*
  store <4 x float> %64, <4 x float>* %66, align 4
  %67 = bitcast float* %61 to <4 x float>*
  store <4 x float> %65, <4 x float>* %67, align 4
  %68 = or i64 %56, 8
  %69 = getelementptr inbounds float, float* %13, i64 %68
  %70 = bitcast float* %69 to <4 x float>*
  %71 = load <4 x float>, <4 x float>* %70, align 4
  %72 = getelementptr inbounds float, float* %69, i64 4
  %73 = bitcast float* %72 to <4 x float>*
  %74 = load <4 x float>, <4 x float>* %73, align 4
  %75 = fmul <4 x float> %45, %71
  %76 = fmul <4 x float> %47, %74
  %77 = bitcast float* %69 to <4 x float>*
  store <4 x float> %75, <4 x float>* %77, align 4
  %78 = bitcast float* %72 to <4 x float>*
  store <4 x float> %76, <4 x float>* %78, align 4
  %79 = add i64 %56, 16
  %80 = add i64 %57, -2
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %26, label %55, !llvm.loop !35

82:                                               ; preds = %82, %21
  %83 = phi i64 [ 0, %21 ], [ %94, %82 ]
  %84 = phi float [ 0.000000e+00, %21 ], [ %93, %82 ]
  %85 = trunc i64 %83 to i32
  %86 = sub nsw i32 %85, %3
  %87 = sitofp i32 %86 to float
  %88 = fmul float %87, %87
  %89 = fmul float %19, %88
  %90 = fsub float -0.000000e+00, %89
  %91 = tail call float @expf(float %90) #11
  %92 = getelementptr inbounds float, float* %13, i64 %83
  store float %91, float* %92, align 4
  %93 = fadd float %84, %91
  %94 = add nuw nsw i64 %83, 1
  %95 = icmp eq i64 %94, %22
  br i1 %95, label %23, label %82

96:                                               ; preds = %40, %96
  %97 = phi i64 [ %101, %96 ], [ %41, %40 ]
  %98 = getelementptr inbounds float, float* %13, i64 %97
  %99 = load float, float* %98, align 4
  %100 = fmul float %24, %99
  store float %100, float* %98, align 4
  %101 = add nuw nsw i64 %97, 1
  %102 = icmp eq i64 %101, %22
  br i1 %102, label %103, label %96, !llvm.loop !36

103:                                              ; preds = %96, %15, %16
  %104 = add nsw i32 %3, 1
  %105 = sdiv i32 %104, 2
  %106 = add nsw i32 %105, -1
  %107 = and i32 %3, 1
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %131, label %109

109:                                              ; preds = %103
  %110 = sext i32 %105 to i64
  %111 = getelementptr inbounds float, float* %0, i64 %110
  %112 = getelementptr inbounds float, float* %1, i64 %110
  %113 = sext i32 %3 to i64
  %114 = getelementptr inbounds float, float* %13, i64 %113
  %115 = load float, float* %114, align 4
  %116 = fmul float %115, 5.000000e-01
  %117 = sext i32 %104 to i64
  %118 = getelementptr inbounds float, float* %13, i64 %117
  %119 = load float, float* %118, align 4
  %120 = fadd float %116, %119
  store float %120, float* %111, align 4
  %121 = fdiv float %119, %120
  store float %121, float* %112, align 4
  %122 = bitcast float* %111 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = sext i32 %106 to i64
  %125 = getelementptr inbounds float, float* %0, i64 %124
  %126 = bitcast float* %125 to i32*
  store i32 %123, i32* %126, align 4
  %127 = load float, float* %112, align 4
  %128 = fsub float -0.000000e+00, %127
  %129 = getelementptr inbounds float, float* %1, i64 %124
  store float %128, float* %129, align 4
  %130 = add nsw i32 %105, -2
  br label %140

131:                                              ; preds = %103
  %132 = sext i32 %3 to i64
  %133 = getelementptr inbounds float, float* %13, i64 %132
  %134 = bitcast float* %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = sext i32 %105 to i64
  %137 = getelementptr inbounds float, float* %0, i64 %136
  %138 = bitcast float* %137 to i32*
  store i32 %135, i32* %138, align 4
  %139 = getelementptr inbounds float, float* %1, i64 %136
  store float 0.000000e+00, float* %139, align 4
  br label %140

140:                                              ; preds = %131, %109
  %141 = phi i32 [ %130, %109 ], [ %106, %131 ]
  %142 = phi i32 [ %104, %109 ], [ %3, %131 ]
  %143 = icmp slt i32 %105, %3
  br i1 %143, label %144, label %150

144:                                              ; preds = %140
  %145 = sext i32 %105 to i64
  %146 = add i32 %142, 1
  %147 = sext i32 %146 to i64
  %148 = sext i32 %3 to i64
  %149 = sext i32 %141 to i64
  br label %151

150:                                              ; preds = %151, %140
  tail call void @_ZdaPv(i8* nonnull %12) #12
  ret void

151:                                              ; preds = %151, %144
  %152 = phi i64 [ %149, %144 ], [ %177, %151 ]
  %153 = phi i64 [ %147, %144 ], [ %176, %151 ]
  %154 = phi i64 [ %145, %144 ], [ %155, %151 ]
  %155 = add nsw i64 %154, 1
  %156 = getelementptr inbounds float, float* %0, i64 %155
  %157 = getelementptr inbounds float, float* %1, i64 %155
  %158 = getelementptr inbounds float, float* %13, i64 %153
  %159 = load float, float* %158, align 4
  %160 = add nsw i64 %153, 1
  %161 = getelementptr inbounds float, float* %13, i64 %160
  %162 = load float, float* %161, align 4
  %163 = fadd float %159, %162
  store float %163, float* %156, align 4
  %164 = fdiv float %162, %163
  %165 = trunc i64 %153 to i32
  %166 = sub i32 %165, %3
  %167 = sitofp i32 %166 to float
  %168 = fadd float %164, %167
  store float %168, float* %157, align 4
  %169 = bitcast float* %156 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds float, float* %0, i64 %152
  %172 = bitcast float* %171 to i32*
  store i32 %170, i32* %172, align 4
  %173 = load float, float* %157, align 4
  %174 = fsub float -0.000000e+00, %173
  %175 = getelementptr inbounds float, float* %1, i64 %152
  store float %174, float* %175, align 4
  %176 = add nsw i64 %153, 2
  %177 = add nsw i64 %152, -1
  %178 = icmp eq i64 %155, %148
  br i1 %178, label %150, label %151
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* dereferenceable(40), %class.GrFragmentProcessor*) local_unnamed_addr #2

declare void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext*, %struct.SkIRect* dereferenceable(16), %class.GrFragmentProcessor*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN25GrMatrixConvolutionEffect4MakeEP18GrRecordingContext18GrSurfaceProxyViewRK7SkIRectRK7SkISizePKfffRK8SkIPointN14GrSamplerState8WrapModeEbRK6GrCaps(%class.GrRecordingContext*, %class.GrSurfaceProxyView*, %struct.SkIRect* dereferenceable(16), %struct.SkISize* dereferenceable(8), float*, float, float, %struct.SkIPoint* dereferenceable(8), i8 zeroext, i1 zeroext, %class.GrCaps* dereferenceable(232)) local_unnamed_addr #2

declare %class.GrCaps* @_ZNK16GrSurfaceContext4capsEv(%class.GrSurfaceContext*) local_unnamed_addr #2

declare void @_ZN7GrPaint22setPorterDuffXPFactoryE11SkBlendMode(%class.GrPaint*, i32) local_unnamed_addr #2

declare void @_ZN20GrSurfaceDrawContext14fillRectToRectEPK6GrClipO7GrPaint4GrAARK8SkMatrixRK6SkRectSB_(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrPaint* dereferenceable(48), i1 zeroext, %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %class.GrSurfaceDrawContext* @_ZL17convolve_gaussianP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType7SkIRectS4_N38GrGaussianConvolutionFragmentProcessor9DirectionEif10SkTileMode5sk_spI12SkColorSpaceE12SkBackingFit(%class.GrRecordingContext*, %class.GrSurfaceProxyView*, i32, i32, i64, i64, %struct.SkIRect* readonly byval(%struct.SkIRect) align 8, i32, i32, float, i32, %class.sk_sp.176* nocapture, i32) unnamed_addr #0 {
  %14 = alloca { i64, i64 }, align 8
  %15 = alloca { i64, i64 }, align 8
  %16 = alloca %class.GrSurfaceProxyView, align 8
  %17 = alloca { i64, i64 }, align 8
  %18 = alloca { i64, i64 }, align 8
  %19 = alloca %class.GrSurfaceProxyView, align 8
  %20 = alloca { i64, i64 }, align 8
  %21 = alloca %class.GrSurfaceProxyView, align 8
  %22 = alloca { i64, i64 }, align 8
  %23 = alloca %class.GrSurfaceProxyView, align 8
  %24 = alloca { i64, i64 }, align 8
  %25 = alloca %class.GrSurfaceProxyView, align 8
  %26 = alloca %class.sk_sp.176, align 8
  %27 = alloca %class.SkSurfaceProps, align 4
  %28 = alloca { i64, i64 }, align 8
  %29 = bitcast { i64, i64 }* %28 to %struct.SkIRect*
  %30 = alloca %class.GrSurfaceProxyView, align 8
  %31 = alloca %struct.SkIRect, align 8
  %32 = alloca %struct.SkIRect, align 8
  %33 = alloca %struct.SkIRect, align 8
  %34 = alloca %struct.SkIRect, align 8
  %35 = alloca %struct.SkIRect, align 8
  %36 = trunc i64 %4 to i32
  %37 = lshr i64 %4, 32
  %38 = trunc i64 %37 to i32
  %39 = trunc i64 %5 to i32
  %40 = lshr i64 %5, 32
  %41 = trunc i64 %40 to i32
  %42 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %11, i64 0, i32 0
  %43 = bitcast %class.sk_sp.176* %11 to i64*
  %44 = load i64, i64* %43, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %42, align 8
  %45 = bitcast %class.sk_sp.176* %26 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = sub i32 %47, %49
  %51 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sub i32 %52, %54
  %56 = zext i32 %55 to i64
  %57 = shl nuw i64 %56, 32
  %58 = zext i32 %50 to i64
  %59 = or i64 %57, %58
  %60 = bitcast %class.SkSurfaceProps* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %27) #11
  %61 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %62 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %61, align 8
  %63 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %62, i64 0, i32 15
  %64 = load i8, i8* %63, align 1, !range !2
  %65 = icmp ne i8 %64, 0
  %66 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = call %class.GrSurfaceDrawContext* @_ZN20GrSurfaceDrawContext4MakeEP18GrRecordingContext11GrColorType5sk_spI12SkColorSpaceE12SkBackingFit7SkISizeRK14SkSurfacePropsi11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %0, i32 %2, %class.sk_sp.176* nonnull %26, i32 %12, i64 %59, %class.SkSurfaceProps* nonnull dereferenceable(8) %27, i32 1, i1 zeroext false, i1 zeroext %65, i32 %67, i1 zeroext true) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  %69 = getelementptr inbounds %class.sk_sp.176, %class.sk_sp.176* %26, i64 0, i32 0
  %70 = load %class.SkColorSpace*, %class.SkColorSpace** %69, align 8
  %71 = icmp eq %class.SkColorSpace* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %13
  %73 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = bitcast %class.SkColorSpace* %70 to i8*
  call void @_ZdlPv(i8* %77) #12
  br label %78

78:                                               ; preds = %13, %72, %76
  %79 = icmp eq %class.GrSurfaceDrawContext* %68, null
  br i1 %79, label %813, label %80

80:                                               ; preds = %78
  %81 = load i32, i32* %48, align 8
  %82 = load i32, i32* %53, align 4
  %83 = zext i32 %82 to i64
  %84 = shl nuw i64 %83, 32
  %85 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %61, align 8
  %86 = call i64 @_ZNK14GrSurfaceProxy22backingStoreDimensionsEv(%class.GrSurfaceProxy* %85) #11
  %87 = lshr i64 %86, 32
  %88 = trunc i64 %87 to i32
  %89 = trunc i64 %86 to i32
  %90 = shl i64 %86, 32
  %91 = icmp slt i64 %90, 4294967296
  %92 = icmp slt i64 %86, 4294967296
  %93 = or i1 %92, %91
  br i1 %93, label %143, label %94

94:                                               ; preds = %80
  %95 = or i64 %90, %86
  %96 = ashr i64 %95, 32
  %97 = add nsw i64 %96, 2147483648
  %98 = icmp ugt i64 %97, 4294967295
  br i1 %98, label %143, label %99

99:                                               ; preds = %94
  %100 = shl i64 %5, 32
  %101 = ashr exact i64 %100, 32
  %102 = shl i64 %4, 32
  %103 = ashr exact i64 %102, 32
  %104 = sub nsw i64 %101, %103
  %105 = ashr i64 %5, 32
  %106 = ashr i64 %4, 32
  %107 = sub nsw i64 %105, %106
  %108 = icmp slt i64 %104, 1
  %109 = icmp slt i64 %107, 1
  %110 = or i1 %109, %108
  br i1 %110, label %143, label %111

111:                                              ; preds = %99
  %112 = or i64 %104, %107
  %113 = add nsw i64 %112, 2147483648
  %114 = icmp ugt i64 %113, 4294967295
  %115 = icmp sgt i32 %36, 0
  %116 = or i1 %115, %114
  %117 = icmp sgt i32 %38, 0
  %118 = or i1 %117, %116
  %119 = icmp slt i32 %39, %89
  %120 = or i1 %118, %119
  %121 = icmp sge i32 %41, %88
  %122 = xor i1 %120, true
  %123 = and i1 %121, %122
  br i1 %123, label %124, label %143

124:                                              ; preds = %111
  %125 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %0, i64 0, i32 0, i32 0
  %126 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %125) #11
  %127 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %126, i64 0, i32 2, i32 0
  %128 = load %class.GrShaderCaps*, %class.GrShaderCaps** %127, align 8
  %129 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %128, i64 0, i32 2
  %130 = bitcast i56* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = and i64 %131, 1048576
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %143

134:                                              ; preds = %124
  %135 = icmp eq i32 %10, 3
  br i1 %135, label %136, label %143

136:                                              ; preds = %134
  %137 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %125) #11
  %138 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %137, i64 0, i32 3
  %139 = bitcast i48* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = and i64 %140, 8388608
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %184, label %146

143:                                              ; preds = %124, %80, %94, %99, %134, %111
  %144 = phi i1 [ false, %124 ], [ false, %111 ], [ true, %134 ], [ false, %99 ], [ false, %94 ], [ false, %80 ]
  switch i32 %10, label %146 [
    i32 3, label %145
    i32 0, label %145
  ]

145:                                              ; preds = %143, %143
  br i1 %144, label %146, label %184

146:                                              ; preds = %136, %143, %145
  %147 = bitcast { i64, i64 }* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #11
  %148 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i64 0, i32 1
  %149 = load i32, i32* %46, align 8
  %150 = sub i32 %149, %81
  %151 = load i32, i32* %51, align 4
  %152 = sub i32 %151, %82
  %153 = zext i32 %152 to i64
  %154 = shl nuw i64 %153, 32
  %155 = zext i32 %150 to i64
  %156 = or i64 %154, %155
  %157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i64 0, i32 0
  store i64 0, i64* %157, align 8
  store i64 %156, i64* %148, align 8
  %158 = bitcast %class.GrSurfaceDrawContext* %68 to %class.GrSurfaceFillContext*
  %159 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %160 = load i64, i64* %159, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %61, align 8
  %161 = bitcast %class.GrSurfaceProxyView* %30 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %30, i64 0, i32 1
  %163 = load i32, i32* %66, align 8
  store i32 %163, i32* %162, align 8
  %164 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %30, i64 0, i32 2, i32 0
  %165 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 4
  %167 = zext i32 %81 to i64
  %168 = or i64 %84, %167
  call fastcc void @_ZL20convolve_gaussian_1dP20GrSurfaceFillContext18GrSurfaceProxyView7SkIRect8SkIPointRKS2_11SkAlphaTypeN38GrGaussianConvolutionFragmentProcessor9DirectionEif10SkTileMode(%class.GrSurfaceFillContext* nonnull %158, %class.GrSurfaceProxyView* nonnull %30, i64 %4, i64 %5, i64 %168, %struct.SkIRect* nonnull dereferenceable(16) %29, i32 %3, i32 %7, i32 %8, float %9, i32 %10)
  %169 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %30, i64 0, i32 0, i32 0
  %170 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %169, align 8
  %171 = icmp eq %class.GrSurfaceProxy* %170, null
  br i1 %171, label %811, label %172

172:                                              ; preds = %146
  %173 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %170, i64 0, i32 1
  %174 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = atomicrmw add i32* %174, i32 -1 acq_rel
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %177, label %811

177:                                              ; preds = %172
  %178 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %173, i64 -2
  %179 = bitcast %class.SkNVRefCnt* %178 to %class.GrSurfaceProxy*
  %180 = bitcast %class.SkNVRefCnt* %178 to void (%class.GrSurfaceProxy*)***
  %181 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %180, align 8
  %182 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %181, i64 1
  %183 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %182, align 8
  call void %183(%class.GrSurfaceProxy* nonnull %179) #11
  br label %811

184:                                              ; preds = %136, %145
  %185 = bitcast %struct.SkIRect* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #11
  %186 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %31, i64 0, i32 0
  %187 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %31, i64 0, i32 1
  %188 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %31, i64 0, i32 2
  %189 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %31, i64 0, i32 3
  %190 = bitcast %struct.SkIRect* %32 to i8*
  %191 = bitcast %struct.SkIRect* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %191, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %190) #11
  %192 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %32, i64 0, i32 0
  %193 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %32, i64 0, i32 1
  %194 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %32, i64 0, i32 2
  %195 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %32, i64 0, i32 3
  %196 = bitcast %struct.SkIRect* %33 to i8*
  %197 = bitcast %struct.SkIRect* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %196) #11
  %198 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 0
  %199 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 1
  %200 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 2
  %201 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 3
  %202 = bitcast %struct.SkIRect* %34 to i8*
  %203 = bitcast %struct.SkIRect* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %202) #11
  %204 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %34, i64 0, i32 0
  %205 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %34, i64 0, i32 1
  %206 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %34, i64 0, i32 2
  %207 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %34, i64 0, i32 3
  %208 = bitcast %struct.SkIRect* %35 to i8*
  %209 = bitcast %struct.SkIRect* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %208) #11
  %210 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %35, i64 0, i32 0
  %211 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %35, i64 0, i32 1
  %212 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %35, i64 0, i32 2
  %213 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %35, i64 0, i32 3
  %214 = icmp eq i32 %7, 0
  %215 = bitcast %struct.SkIRect* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %215, i8 -86, i64 16, i1 false)
  br i1 %214, label %216, label %240

216:                                              ; preds = %184
  %217 = load i32, i32* %46, align 8
  store i32 %81, i32* %204, align 8
  store i32 %82, i32* %205, align 4
  store i32 %217, i32* %206, align 8
  store i32 %38, i32* %207, align 4
  %218 = load i32, i32* %51, align 4
  store i32 %81, i32* %210, align 8
  store i32 %41, i32* %211, align 4
  store i32 %217, i32* %212, align 8
  store i32 %218, i32* %213, align 4
  %219 = icmp sgt i32 %82, %38
  %220 = select i1 %219, i32 %82, i32 %38
  %221 = icmp slt i32 %218, %41
  %222 = select i1 %221, i32 %218, i32 %41
  %223 = add nsw i32 %36, %8
  %224 = sub nsw i32 %39, %8
  store i32 %223, i32* %186, align 8
  store i32 %220, i32* %187, align 4
  store i32 %224, i32* %188, align 8
  store i32 %222, i32* %189, align 4
  %225 = sext i32 %224 to i64
  %226 = sext i32 %223 to i64
  %227 = sub nsw i64 %225, %226
  %228 = sext i32 %222 to i64
  %229 = sext i32 %220 to i64
  %230 = sub nsw i64 %228, %229
  %231 = icmp slt i64 %227, 1
  %232 = icmp slt i64 %230, 1
  %233 = or i1 %231, %232
  br i1 %233, label %238, label %234

234:                                              ; preds = %216
  %235 = or i64 %230, %227
  %236 = add nsw i64 %235, 2147483648
  %237 = icmp ugt i64 %236, 4294967295
  br i1 %237, label %238, label %239

238:                                              ; preds = %216, %234
  store i32 %81, i32* %192, align 8
  store i32 %220, i32* %193, align 4
  store i32 %217, i32* %194, align 8
  store i32 %222, i32* %195, align 4
  br label %264

239:                                              ; preds = %234
  store i32 %81, i32* %192, align 8
  store i32 %220, i32* %193, align 4
  store i32 %223, i32* %194, align 8
  store i32 %222, i32* %195, align 4
  store i32 %224, i32* %198, align 8
  store i32 %220, i32* %199, align 4
  store i32 %217, i32* %200, align 8
  store i32 %222, i32* %201, align 4
  br label %264

240:                                              ; preds = %184
  %241 = load i32, i32* %51, align 4
  store i32 %81, i32* %204, align 8
  store i32 %82, i32* %205, align 4
  store i32 %36, i32* %206, align 8
  store i32 %241, i32* %207, align 4
  %242 = load i32, i32* %46, align 8
  store i32 %39, i32* %210, align 8
  store i32 %82, i32* %211, align 4
  store i32 %242, i32* %212, align 8
  store i32 %241, i32* %213, align 4
  %243 = icmp sgt i32 %81, %36
  %244 = select i1 %243, i32 %81, i32 %36
  %245 = icmp slt i32 %242, %39
  %246 = select i1 %245, i32 %242, i32 %39
  %247 = add nsw i32 %38, %8
  %248 = sub nsw i32 %41, %8
  store i32 %244, i32* %186, align 8
  store i32 %247, i32* %187, align 4
  store i32 %246, i32* %188, align 8
  store i32 %248, i32* %189, align 4
  %249 = sext i32 %246 to i64
  %250 = sext i32 %244 to i64
  %251 = sub nsw i64 %249, %250
  %252 = sext i32 %248 to i64
  %253 = sext i32 %247 to i64
  %254 = sub nsw i64 %252, %253
  %255 = icmp slt i64 %251, 1
  %256 = icmp slt i64 %254, 1
  %257 = or i1 %256, %255
  br i1 %257, label %262, label %258

258:                                              ; preds = %240
  %259 = or i64 %251, %254
  %260 = add nsw i64 %259, 2147483648
  %261 = icmp ugt i64 %260, 4294967295
  br i1 %261, label %262, label %263

262:                                              ; preds = %240, %258
  store i32 %244, i32* %192, align 8
  store i32 %82, i32* %193, align 4
  store i32 %246, i32* %194, align 8
  store i32 %241, i32* %195, align 4
  br label %264

263:                                              ; preds = %258
  store i32 %244, i32* %192, align 8
  store i32 %82, i32* %193, align 4
  store i32 %246, i32* %194, align 8
  store i32 %247, i32* %195, align 4
  store i32 %244, i32* %198, align 8
  store i32 %248, i32* %199, align 4
  store i32 %246, i32* %200, align 8
  store i32 %241, i32* %201, align 4
  br label %264

264:                                              ; preds = %262, %263, %238, %239
  %265 = phi i64 [ %254, %262 ], [ %254, %263 ], [ %230, %238 ], [ %230, %239 ]
  %266 = phi i64 [ %251, %262 ], [ %251, %263 ], [ %227, %238 ], [ %227, %239 ]
  %267 = phi i32 [ %241, %262 ], [ %241, %263 ], [ %38, %238 ], [ %38, %239 ]
  %268 = phi i32 [ %36, %262 ], [ %36, %263 ], [ %217, %238 ], [ %217, %239 ]
  %269 = phi i32 [ %247, %262 ], [ %247, %263 ], [ %220, %238 ], [ %220, %239 ]
  %270 = phi i32 [ %248, %262 ], [ %248, %263 ], [ %222, %238 ], [ %222, %239 ]
  %271 = phi i32 [ %244, %262 ], [ %244, %263 ], [ %223, %238 ], [ %223, %239 ]
  %272 = phi i32 [ %246, %262 ], [ %246, %263 ], [ %224, %238 ], [ %224, %239 ]
  %273 = icmp slt i64 %266, 1
  %274 = icmp slt i64 %265, 1
  %275 = or i1 %273, %274
  br i1 %275, label %297, label %276

276:                                              ; preds = %264
  %277 = or i64 %265, %266
  %278 = add nsw i64 %277, 2147483648
  %279 = icmp ugt i64 %278, 4294967295
  br i1 %279, label %297, label %280

280:                                              ; preds = %276
  %281 = sub i32 %272, %271
  %282 = sub i32 %270, %269
  %283 = mul nsw i32 %282, %281
  %284 = icmp slt i32 %283, 65536
  br i1 %284, label %285, label %297

285:                                              ; preds = %280
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %32, %struct.SkIRect* nonnull dereferenceable(16) %31) #11
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %32, %struct.SkIRect* nonnull dereferenceable(16) %33) #11
  %286 = bitcast %struct.SkIRect* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %286, i8 0, i64 16, i1 false)
  %287 = icmp eq i32 %10, 0
  %288 = bitcast %struct.SkIRect* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %288, i8 0, i64 16, i1 false)
  br i1 %287, label %294, label %289

289:                                              ; preds = %285
  %290 = load i32, i32* %206, align 8
  %291 = load i32, i32* %204, align 8
  %292 = load i32, i32* %207, align 4
  %293 = load i32, i32* %205, align 4
  br label %297

294:                                              ; preds = %285
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %32, %struct.SkIRect* nonnull dereferenceable(16) %34) #11
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %32, %struct.SkIRect* nonnull dereferenceable(16) %35) #11
  %295 = bitcast %struct.SkIRect* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 0, i64 16, i1 false)
  %296 = bitcast %struct.SkIRect* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %296, i8 0, i64 16, i1 false)
  br label %297

297:                                              ; preds = %289, %264, %294, %280, %276
  %298 = phi i32 [ %293, %289 ], [ %82, %264 ], [ 0, %294 ], [ %82, %280 ], [ %82, %276 ]
  %299 = phi i32 [ %292, %289 ], [ %267, %264 ], [ 0, %294 ], [ %267, %280 ], [ %267, %276 ]
  %300 = phi i32 [ %291, %289 ], [ %81, %264 ], [ 0, %294 ], [ %81, %280 ], [ %81, %276 ]
  %301 = phi i32 [ %290, %289 ], [ %268, %264 ], [ 0, %294 ], [ %268, %280 ], [ %268, %276 ]
  %302 = sext i32 %301 to i64
  %303 = sext i32 %300 to i64
  %304 = sub nsw i64 %302, %303
  %305 = sext i32 %299 to i64
  %306 = sext i32 %298 to i64
  %307 = sub nsw i64 %305, %306
  %308 = icmp slt i64 %304, 1
  %309 = icmp slt i64 %307, 1
  %310 = or i1 %308, %309
  br i1 %310, label %437, label %311

311:                                              ; preds = %297
  %312 = or i64 %307, %304
  %313 = add nsw i64 %312, 2147483648
  %314 = icmp ugt i64 %313, 4294967295
  br i1 %314, label %437, label %315

315:                                              ; preds = %311
  %316 = icmp eq i32 %10, 3
  %317 = bitcast %struct.SkIRect* %34 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast i32* %206 to i64*
  %320 = load i64, i64* %319, align 8
  br i1 %316, label %321, label %364

321:                                              ; preds = %315
  %322 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %322)
  %323 = bitcast { i64, i64 }* %14 to %struct.SkIRect*
  %324 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %325 = sub nsw i32 0, %81
  %326 = sub nsw i32 0, %82
  %327 = bitcast { i64, i64 }* %14 to i32*
  %328 = shl i64 %318, 32
  %329 = ashr exact i64 %328, 32
  %330 = sext i32 %325 to i64
  %331 = add nsw i64 %329, %330
  %332 = icmp slt i64 %331, 2147483647
  %333 = select i1 %332, i64 %331, i64 2147483647
  %334 = icmp sgt i64 %333, -2147483647
  %335 = select i1 %334, i64 %333, i64 -2147483647
  %336 = trunc i64 %335 to i32
  store i32 %336, i32* %327, align 8
  %337 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %323, i64 0, i32 1
  %338 = ashr i64 %318, 32
  %339 = sext i32 %326 to i64
  %340 = add nsw i64 %338, %339
  %341 = icmp slt i64 %340, 2147483647
  %342 = select i1 %341, i64 %340, i64 2147483647
  %343 = icmp sgt i64 %342, -2147483647
  %344 = select i1 %343, i64 %342, i64 -2147483647
  %345 = trunc i64 %344 to i32
  store i32 %345, i32* %337, align 4
  %346 = bitcast i64* %324 to i32*
  %347 = shl i64 %320, 32
  %348 = ashr exact i64 %347, 32
  %349 = add nsw i64 %348, %330
  %350 = icmp slt i64 %349, 2147483647
  %351 = select i1 %350, i64 %349, i64 2147483647
  %352 = icmp sgt i64 %351, -2147483647
  %353 = select i1 %352, i64 %351, i64 -2147483647
  %354 = trunc i64 %353 to i32
  store i32 %354, i32* %346, align 8
  %355 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %323, i64 0, i32 3
  %356 = ashr i64 %320, 32
  %357 = add nsw i64 %356, %339
  %358 = icmp slt i64 %357, 2147483647
  %359 = select i1 %358, i64 %357, i64 2147483647
  %360 = icmp sgt i64 %359, -2147483647
  %361 = select i1 %360, i64 %359, i64 -2147483647
  %362 = trunc i64 %361 to i32
  store i32 %362, i32* %355, align 4
  %363 = bitcast %class.GrSurfaceDrawContext* %68 to %class.GrSurfaceFillContext*
  call void @_ZN20GrSurfaceFillContext13internalClearEPK7SkIRectNSt3__15arrayIfLm4EEEb(%class.GrSurfaceFillContext* nonnull %363, %struct.SkIRect* nonnull %323, <2 x float> zeroinitializer, <2 x float> zeroinitializer, i1 zeroext true) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %322)
  br label %437

364:                                              ; preds = %315
  %365 = bitcast { i64, i64 }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %365)
  %366 = bitcast %class.GrSurfaceProxyView* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %366)
  %367 = bitcast { i64, i64 }* %15 to %struct.SkIRect*
  %368 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  %369 = sub nsw i32 0, %81
  %370 = sub nsw i32 0, %82
  %371 = bitcast { i64, i64 }* %15 to i32*
  %372 = shl i64 %318, 32
  %373 = ashr exact i64 %372, 32
  %374 = sext i32 %369 to i64
  %375 = add nsw i64 %373, %374
  %376 = icmp slt i64 %375, 2147483647
  %377 = select i1 %376, i64 %375, i64 2147483647
  %378 = icmp sgt i64 %377, -2147483647
  %379 = select i1 %378, i64 %377, i64 -2147483647
  %380 = trunc i64 %379 to i32
  store i32 %380, i32* %371, align 8
  %381 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %367, i64 0, i32 1
  %382 = ashr i64 %318, 32
  %383 = sext i32 %370 to i64
  %384 = add nsw i64 %382, %383
  %385 = icmp slt i64 %384, 2147483647
  %386 = select i1 %385, i64 %384, i64 2147483647
  %387 = icmp sgt i64 %386, -2147483647
  %388 = select i1 %387, i64 %386, i64 -2147483647
  %389 = trunc i64 %388 to i32
  store i32 %389, i32* %381, align 4
  %390 = bitcast i64* %368 to i32*
  %391 = shl i64 %320, 32
  %392 = ashr exact i64 %391, 32
  %393 = add nsw i64 %392, %374
  %394 = icmp slt i64 %393, 2147483647
  %395 = select i1 %394, i64 %393, i64 2147483647
  %396 = icmp sgt i64 %395, -2147483647
  %397 = select i1 %396, i64 %395, i64 -2147483647
  %398 = trunc i64 %397 to i32
  store i32 %398, i32* %390, align 8
  %399 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %367, i64 0, i32 3
  %400 = ashr i64 %320, 32
  %401 = add nsw i64 %400, %383
  %402 = icmp slt i64 %401, 2147483647
  %403 = select i1 %402, i64 %401, i64 2147483647
  %404 = icmp sgt i64 %403, -2147483647
  %405 = select i1 %404, i64 %403, i64 -2147483647
  %406 = trunc i64 %405 to i32
  store i32 %406, i32* %399, align 4
  %407 = bitcast %class.GrSurfaceDrawContext* %68 to %class.GrSurfaceFillContext*
  %408 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 0, i32 0
  %409 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %61, align 8
  %410 = icmp eq %class.GrSurfaceProxy* %409, null
  br i1 %410, label %414, label %411

411:                                              ; preds = %364
  %412 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %409, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = atomicrmw add i32* %412, i32 1 monotonic
  br label %414

414:                                              ; preds = %411, %364
  store %class.GrSurfaceProxy* %409, %class.GrSurfaceProxy** %408, align 8
  %415 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 1
  %416 = load i32, i32* %66, align 8
  store i32 %416, i32* %415, align 8
  %417 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 2, i32 0
  %418 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %419 = load i16, i16* %418, align 2
  store i16 %419, i16* %417, align 4
  %420 = zext i32 %81 to i64
  %421 = or i64 %84, %420
  call fastcc void @_ZL20convolve_gaussian_1dP20GrSurfaceFillContext18GrSurfaceProxyView7SkIRect8SkIPointRKS2_11SkAlphaTypeN38GrGaussianConvolutionFragmentProcessor9DirectionEif10SkTileMode(%class.GrSurfaceFillContext* nonnull %407, %class.GrSurfaceProxyView* nonnull %16, i64 %4, i64 %5, i64 %421, %struct.SkIRect* nonnull dereferenceable(16) %367, i32 %3, i32 %7, i32 %8, float %9, i32 %10) #11
  %422 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %408, align 8
  %423 = icmp eq %class.GrSurfaceProxy* %422, null
  br i1 %423, label %436, label %424

424:                                              ; preds = %414
  %425 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %422, i64 0, i32 1
  %426 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %425, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %427 = atomicrmw add i32* %426, i32 -1 acq_rel
  %428 = icmp eq i32 %427, 1
  br i1 %428, label %429, label %436

429:                                              ; preds = %424
  %430 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %425, i64 -2
  %431 = bitcast %class.SkNVRefCnt* %430 to %class.GrSurfaceProxy*
  %432 = bitcast %class.SkNVRefCnt* %430 to void (%class.GrSurfaceProxy*)***
  %433 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %432, align 8
  %434 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %433, i64 1
  %435 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %434, align 8
  call void %435(%class.GrSurfaceProxy* nonnull %431) #11
  br label %436

436:                                              ; preds = %414, %424, %429
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %365)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %366)
  br label %437

437:                                              ; preds = %297, %321, %436, %311
  %438 = load i32, i32* %212, align 8
  %439 = sext i32 %438 to i64
  %440 = load i32, i32* %210, align 8
  %441 = sext i32 %440 to i64
  %442 = sub nsw i64 %439, %441
  %443 = load i32, i32* %213, align 4
  %444 = sext i32 %443 to i64
  %445 = load i32, i32* %211, align 4
  %446 = sext i32 %445 to i64
  %447 = sub nsw i64 %444, %446
  %448 = icmp slt i64 %442, 1
  %449 = icmp slt i64 %447, 1
  %450 = or i1 %448, %449
  br i1 %450, label %577, label %451

451:                                              ; preds = %437
  %452 = or i64 %447, %442
  %453 = add nsw i64 %452, 2147483648
  %454 = icmp ugt i64 %453, 4294967295
  br i1 %454, label %577, label %455

455:                                              ; preds = %451
  %456 = icmp eq i32 %10, 3
  %457 = bitcast %struct.SkIRect* %35 to i64*
  %458 = load i64, i64* %457, align 8
  %459 = bitcast i32* %212 to i64*
  %460 = load i64, i64* %459, align 8
  br i1 %456, label %461, label %504

461:                                              ; preds = %455
  %462 = bitcast { i64, i64 }* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %462)
  %463 = bitcast { i64, i64 }* %17 to %struct.SkIRect*
  %464 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 1
  %465 = sub nsw i32 0, %81
  %466 = sub nsw i32 0, %82
  %467 = bitcast { i64, i64 }* %17 to i32*
  %468 = shl i64 %458, 32
  %469 = ashr exact i64 %468, 32
  %470 = sext i32 %465 to i64
  %471 = add nsw i64 %469, %470
  %472 = icmp slt i64 %471, 2147483647
  %473 = select i1 %472, i64 %471, i64 2147483647
  %474 = icmp sgt i64 %473, -2147483647
  %475 = select i1 %474, i64 %473, i64 -2147483647
  %476 = trunc i64 %475 to i32
  store i32 %476, i32* %467, align 8
  %477 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %463, i64 0, i32 1
  %478 = ashr i64 %458, 32
  %479 = sext i32 %466 to i64
  %480 = add nsw i64 %478, %479
  %481 = icmp slt i64 %480, 2147483647
  %482 = select i1 %481, i64 %480, i64 2147483647
  %483 = icmp sgt i64 %482, -2147483647
  %484 = select i1 %483, i64 %482, i64 -2147483647
  %485 = trunc i64 %484 to i32
  store i32 %485, i32* %477, align 4
  %486 = bitcast i64* %464 to i32*
  %487 = shl i64 %460, 32
  %488 = ashr exact i64 %487, 32
  %489 = add nsw i64 %488, %470
  %490 = icmp slt i64 %489, 2147483647
  %491 = select i1 %490, i64 %489, i64 2147483647
  %492 = icmp sgt i64 %491, -2147483647
  %493 = select i1 %492, i64 %491, i64 -2147483647
  %494 = trunc i64 %493 to i32
  store i32 %494, i32* %486, align 8
  %495 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %463, i64 0, i32 3
  %496 = ashr i64 %460, 32
  %497 = add nsw i64 %496, %479
  %498 = icmp slt i64 %497, 2147483647
  %499 = select i1 %498, i64 %497, i64 2147483647
  %500 = icmp sgt i64 %499, -2147483647
  %501 = select i1 %500, i64 %499, i64 -2147483647
  %502 = trunc i64 %501 to i32
  store i32 %502, i32* %495, align 4
  %503 = bitcast %class.GrSurfaceDrawContext* %68 to %class.GrSurfaceFillContext*
  call void @_ZN20GrSurfaceFillContext13internalClearEPK7SkIRectNSt3__15arrayIfLm4EEEb(%class.GrSurfaceFillContext* nonnull %503, %struct.SkIRect* nonnull %463, <2 x float> zeroinitializer, <2 x float> zeroinitializer, i1 zeroext true) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %462)
  br label %577

504:                                              ; preds = %455
  %505 = bitcast { i64, i64 }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %505)
  %506 = bitcast %class.GrSurfaceProxyView* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %506)
  %507 = bitcast { i64, i64 }* %18 to %struct.SkIRect*
  %508 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 1
  %509 = sub nsw i32 0, %81
  %510 = sub nsw i32 0, %82
  %511 = bitcast { i64, i64 }* %18 to i32*
  %512 = shl i64 %458, 32
  %513 = ashr exact i64 %512, 32
  %514 = sext i32 %509 to i64
  %515 = add nsw i64 %513, %514
  %516 = icmp slt i64 %515, 2147483647
  %517 = select i1 %516, i64 %515, i64 2147483647
  %518 = icmp sgt i64 %517, -2147483647
  %519 = select i1 %518, i64 %517, i64 -2147483647
  %520 = trunc i64 %519 to i32
  store i32 %520, i32* %511, align 8
  %521 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %507, i64 0, i32 1
  %522 = ashr i64 %458, 32
  %523 = sext i32 %510 to i64
  %524 = add nsw i64 %522, %523
  %525 = icmp slt i64 %524, 2147483647
  %526 = select i1 %525, i64 %524, i64 2147483647
  %527 = icmp sgt i64 %526, -2147483647
  %528 = select i1 %527, i64 %526, i64 -2147483647
  %529 = trunc i64 %528 to i32
  store i32 %529, i32* %521, align 4
  %530 = bitcast i64* %508 to i32*
  %531 = shl i64 %460, 32
  %532 = ashr exact i64 %531, 32
  %533 = add nsw i64 %532, %514
  %534 = icmp slt i64 %533, 2147483647
  %535 = select i1 %534, i64 %533, i64 2147483647
  %536 = icmp sgt i64 %535, -2147483647
  %537 = select i1 %536, i64 %535, i64 -2147483647
  %538 = trunc i64 %537 to i32
  store i32 %538, i32* %530, align 8
  %539 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %507, i64 0, i32 3
  %540 = ashr i64 %460, 32
  %541 = add nsw i64 %540, %523
  %542 = icmp slt i64 %541, 2147483647
  %543 = select i1 %542, i64 %541, i64 2147483647
  %544 = icmp sgt i64 %543, -2147483647
  %545 = select i1 %544, i64 %543, i64 -2147483647
  %546 = trunc i64 %545 to i32
  store i32 %546, i32* %539, align 4
  %547 = bitcast %class.GrSurfaceDrawContext* %68 to %class.GrSurfaceFillContext*
  %548 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 0, i32 0
  %549 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %61, align 8
  %550 = icmp eq %class.GrSurfaceProxy* %549, null
  br i1 %550, label %554, label %551

551:                                              ; preds = %504
  %552 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %549, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = atomicrmw add i32* %552, i32 1 monotonic
  br label %554

554:                                              ; preds = %551, %504
  store %class.GrSurfaceProxy* %549, %class.GrSurfaceProxy** %548, align 8
  %555 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 1
  %556 = load i32, i32* %66, align 8
  store i32 %556, i32* %555, align 8
  %557 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 2, i32 0
  %558 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %559 = load i16, i16* %558, align 2
  store i16 %559, i16* %557, align 4
  %560 = zext i32 %81 to i64
  %561 = or i64 %84, %560
  call fastcc void @_ZL20convolve_gaussian_1dP20GrSurfaceFillContext18GrSurfaceProxyView7SkIRect8SkIPointRKS2_11SkAlphaTypeN38GrGaussianConvolutionFragmentProcessor9DirectionEif10SkTileMode(%class.GrSurfaceFillContext* nonnull %547, %class.GrSurfaceProxyView* nonnull %19, i64 %4, i64 %5, i64 %561, %struct.SkIRect* nonnull dereferenceable(16) %507, i32 %3, i32 %7, i32 %8, float %9, i32 %10) #11
  %562 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %548, align 8
  %563 = icmp eq %class.GrSurfaceProxy* %562, null
  br i1 %563, label %576, label %564

564:                                              ; preds = %554
  %565 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %562, i64 0, i32 1
  %566 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %565, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = atomicrmw add i32* %566, i32 -1 acq_rel
  %568 = icmp eq i32 %567, 1
  br i1 %568, label %569, label %576

569:                                              ; preds = %564
  %570 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %565, i64 -2
  %571 = bitcast %class.SkNVRefCnt* %570 to %class.GrSurfaceProxy*
  %572 = bitcast %class.SkNVRefCnt* %570 to void (%class.GrSurfaceProxy*)***
  %573 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %572, align 8
  %574 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %573, i64 1
  %575 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %574, align 8
  call void %575(%class.GrSurfaceProxy* nonnull %571) #11
  br label %576

576:                                              ; preds = %554, %564, %569
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %505)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %506)
  br label %577

577:                                              ; preds = %437, %461, %576, %451
  %578 = load i32, i32* %188, align 8
  %579 = sext i32 %578 to i64
  %580 = load i32, i32* %186, align 8
  %581 = sext i32 %580 to i64
  %582 = sub nsw i64 %579, %581
  %583 = load i32, i32* %189, align 4
  %584 = sext i32 %583 to i64
  %585 = load i32, i32* %187, align 4
  %586 = sext i32 %585 to i64
  %587 = sub nsw i64 %584, %586
  %588 = icmp slt i64 %582, 1
  %589 = icmp slt i64 %587, 1
  %590 = or i1 %588, %589
  br i1 %590, label %595, label %591

591:                                              ; preds = %577
  %592 = or i64 %587, %582
  %593 = add nsw i64 %592, 2147483648
  %594 = icmp ugt i64 %593, 4294967295
  br label %595

595:                                              ; preds = %577, %591
  %596 = phi i1 [ %594, %591 ], [ true, %577 ]
  %597 = bitcast %struct.SkIRect* %32 to i64*
  %598 = load i64, i64* %597, align 8
  %599 = bitcast i32* %194 to i64*
  %600 = load i64, i64* %599, align 8
  %601 = bitcast { i64, i64 }* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %601)
  %602 = bitcast %class.GrSurfaceProxyView* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %602)
  %603 = bitcast { i64, i64 }* %20 to %struct.SkIRect*
  %604 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 1
  %605 = sub nsw i32 0, %81
  %606 = sub nsw i32 0, %82
  %607 = bitcast { i64, i64 }* %20 to i32*
  %608 = shl i64 %598, 32
  %609 = ashr exact i64 %608, 32
  %610 = sext i32 %605 to i64
  %611 = add nsw i64 %609, %610
  %612 = icmp slt i64 %611, 2147483647
  %613 = select i1 %612, i64 %611, i64 2147483647
  %614 = icmp sgt i64 %613, -2147483647
  %615 = select i1 %614, i64 %613, i64 -2147483647
  %616 = trunc i64 %615 to i32
  store i32 %616, i32* %607, align 8
  %617 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %603, i64 0, i32 1
  %618 = ashr i64 %598, 32
  %619 = sext i32 %606 to i64
  %620 = add nsw i64 %618, %619
  %621 = icmp slt i64 %620, 2147483647
  %622 = select i1 %621, i64 %620, i64 2147483647
  %623 = icmp sgt i64 %622, -2147483647
  %624 = select i1 %623, i64 %622, i64 -2147483647
  %625 = trunc i64 %624 to i32
  store i32 %625, i32* %617, align 4
  %626 = bitcast i64* %604 to i32*
  %627 = shl i64 %600, 32
  %628 = ashr exact i64 %627, 32
  %629 = add nsw i64 %628, %610
  %630 = icmp slt i64 %629, 2147483647
  %631 = select i1 %630, i64 %629, i64 2147483647
  %632 = icmp sgt i64 %631, -2147483647
  %633 = select i1 %632, i64 %631, i64 -2147483647
  %634 = trunc i64 %633 to i32
  store i32 %634, i32* %626, align 8
  %635 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %603, i64 0, i32 3
  %636 = ashr i64 %600, 32
  %637 = add nsw i64 %636, %619
  %638 = icmp slt i64 %637, 2147483647
  %639 = select i1 %638, i64 %637, i64 2147483647
  %640 = icmp sgt i64 %639, -2147483647
  %641 = select i1 %640, i64 %639, i64 -2147483647
  %642 = trunc i64 %641 to i32
  store i32 %642, i32* %635, align 4
  %643 = bitcast %class.GrSurfaceDrawContext* %68 to %class.GrSurfaceFillContext*
  %644 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %21, i64 0, i32 0, i32 0
  %645 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %61, align 8
  %646 = icmp eq %class.GrSurfaceProxy* %645, null
  br i1 %646, label %650, label %647

647:                                              ; preds = %595
  %648 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %645, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %649 = atomicrmw add i32* %648, i32 1 monotonic
  br label %650

650:                                              ; preds = %647, %595
  store %class.GrSurfaceProxy* %645, %class.GrSurfaceProxy** %644, align 8
  %651 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %21, i64 0, i32 1
  %652 = load i32, i32* %66, align 8
  store i32 %652, i32* %651, align 8
  %653 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %21, i64 0, i32 2, i32 0
  %654 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %655 = load i16, i16* %654, align 2
  store i16 %655, i16* %653, align 4
  %656 = zext i32 %81 to i64
  %657 = or i64 %84, %656
  call fastcc void @_ZL20convolve_gaussian_1dP20GrSurfaceFillContext18GrSurfaceProxyView7SkIRect8SkIPointRKS2_11SkAlphaTypeN38GrGaussianConvolutionFragmentProcessor9DirectionEif10SkTileMode(%class.GrSurfaceFillContext* nonnull %643, %class.GrSurfaceProxyView* nonnull %21, i64 %4, i64 %5, i64 %657, %struct.SkIRect* nonnull dereferenceable(16) %603, i32 %3, i32 %7, i32 %8, float %9, i32 %10) #11
  %658 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %644, align 8
  %659 = icmp eq %class.GrSurfaceProxy* %658, null
  br i1 %659, label %672, label %660

660:                                              ; preds = %650
  %661 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %658, i64 0, i32 1
  %662 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %661, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %663 = atomicrmw add i32* %662, i32 -1 acq_rel
  %664 = icmp eq i32 %663, 1
  br i1 %664, label %665, label %672

665:                                              ; preds = %660
  %666 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %661, i64 -2
  %667 = bitcast %class.SkNVRefCnt* %666 to %class.GrSurfaceProxy*
  %668 = bitcast %class.SkNVRefCnt* %666 to void (%class.GrSurfaceProxy*)***
  %669 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %668, align 8
  %670 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %669, i64 1
  %671 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %670, align 8
  call void %671(%class.GrSurfaceProxy* nonnull %667) #11
  br label %672

672:                                              ; preds = %650, %660, %665
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %601)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %602)
  br i1 %596, label %810, label %673

673:                                              ; preds = %672
  %674 = bitcast %struct.SkIRect* %33 to i64*
  %675 = load i64, i64* %674, align 8
  %676 = bitcast i32* %200 to i64*
  %677 = load i64, i64* %676, align 8
  %678 = bitcast { i64, i64 }* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %678)
  %679 = bitcast %class.GrSurfaceProxyView* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %679)
  %680 = bitcast { i64, i64 }* %22 to %struct.SkIRect*
  %681 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 1
  %682 = bitcast { i64, i64 }* %22 to i32*
  %683 = shl i64 %675, 32
  %684 = ashr exact i64 %683, 32
  %685 = add nsw i64 %684, %610
  %686 = icmp slt i64 %685, 2147483647
  %687 = select i1 %686, i64 %685, i64 2147483647
  %688 = icmp sgt i64 %687, -2147483647
  %689 = select i1 %688, i64 %687, i64 -2147483647
  %690 = trunc i64 %689 to i32
  store i32 %690, i32* %682, align 8
  %691 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %680, i64 0, i32 1
  %692 = ashr i64 %675, 32
  %693 = add nsw i64 %692, %619
  %694 = icmp slt i64 %693, 2147483647
  %695 = select i1 %694, i64 %693, i64 2147483647
  %696 = icmp sgt i64 %695, -2147483647
  %697 = select i1 %696, i64 %695, i64 -2147483647
  %698 = trunc i64 %697 to i32
  store i32 %698, i32* %691, align 4
  %699 = bitcast i64* %681 to i32*
  %700 = shl i64 %677, 32
  %701 = ashr exact i64 %700, 32
  %702 = add nsw i64 %701, %610
  %703 = icmp slt i64 %702, 2147483647
  %704 = select i1 %703, i64 %702, i64 2147483647
  %705 = icmp sgt i64 %704, -2147483647
  %706 = select i1 %705, i64 %704, i64 -2147483647
  %707 = trunc i64 %706 to i32
  store i32 %707, i32* %699, align 8
  %708 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %680, i64 0, i32 3
  %709 = ashr i64 %677, 32
  %710 = add nsw i64 %709, %619
  %711 = icmp slt i64 %710, 2147483647
  %712 = select i1 %711, i64 %710, i64 2147483647
  %713 = icmp sgt i64 %712, -2147483647
  %714 = select i1 %713, i64 %712, i64 -2147483647
  %715 = trunc i64 %714 to i32
  store i32 %715, i32* %708, align 4
  %716 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %23, i64 0, i32 0, i32 0
  %717 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %61, align 8
  %718 = icmp eq %class.GrSurfaceProxy* %717, null
  br i1 %718, label %722, label %719

719:                                              ; preds = %673
  %720 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %717, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %721 = atomicrmw add i32* %720, i32 1 monotonic
  br label %722

722:                                              ; preds = %719, %673
  store %class.GrSurfaceProxy* %717, %class.GrSurfaceProxy** %716, align 8
  %723 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %23, i64 0, i32 1
  %724 = load i32, i32* %66, align 8
  store i32 %724, i32* %723, align 8
  %725 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %23, i64 0, i32 2, i32 0
  %726 = load i16, i16* %654, align 2
  store i16 %726, i16* %725, align 4
  call fastcc void @_ZL20convolve_gaussian_1dP20GrSurfaceFillContext18GrSurfaceProxyView7SkIRect8SkIPointRKS2_11SkAlphaTypeN38GrGaussianConvolutionFragmentProcessor9DirectionEif10SkTileMode(%class.GrSurfaceFillContext* nonnull %643, %class.GrSurfaceProxyView* nonnull %23, i64 %4, i64 %5, i64 %657, %struct.SkIRect* nonnull dereferenceable(16) %680, i32 %3, i32 %7, i32 %8, float %9, i32 %10) #11
  %727 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %716, align 8
  %728 = icmp eq %class.GrSurfaceProxy* %727, null
  br i1 %728, label %741, label %729

729:                                              ; preds = %722
  %730 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %727, i64 0, i32 1
  %731 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %730, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %732 = atomicrmw add i32* %731, i32 -1 acq_rel
  %733 = icmp eq i32 %732, 1
  br i1 %733, label %734, label %741

734:                                              ; preds = %729
  %735 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %730, i64 -2
  %736 = bitcast %class.SkNVRefCnt* %735 to %class.GrSurfaceProxy*
  %737 = bitcast %class.SkNVRefCnt* %735 to void (%class.GrSurfaceProxy*)***
  %738 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %737, align 8
  %739 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %738, i64 1
  %740 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %739, align 8
  call void %740(%class.GrSurfaceProxy* nonnull %736) #11
  br label %741

741:                                              ; preds = %722, %729, %734
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %678)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %679)
  %742 = bitcast %struct.SkIRect* %31 to i64*
  %743 = load i64, i64* %742, align 8
  %744 = bitcast i32* %188 to i64*
  %745 = load i64, i64* %744, align 8
  %746 = bitcast { i64, i64 }* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %746)
  %747 = bitcast %class.GrSurfaceProxyView* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %747)
  %748 = bitcast { i64, i64 }* %24 to %struct.SkIRect*
  %749 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i64 0, i32 1
  %750 = bitcast { i64, i64 }* %24 to i32*
  %751 = shl i64 %743, 32
  %752 = ashr exact i64 %751, 32
  %753 = add nsw i64 %752, %610
  %754 = icmp slt i64 %753, 2147483647
  %755 = select i1 %754, i64 %753, i64 2147483647
  %756 = icmp sgt i64 %755, -2147483647
  %757 = select i1 %756, i64 %755, i64 -2147483647
  %758 = trunc i64 %757 to i32
  store i32 %758, i32* %750, align 8
  %759 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %748, i64 0, i32 1
  %760 = ashr i64 %743, 32
  %761 = add nsw i64 %760, %619
  %762 = icmp slt i64 %761, 2147483647
  %763 = select i1 %762, i64 %761, i64 2147483647
  %764 = icmp sgt i64 %763, -2147483647
  %765 = select i1 %764, i64 %763, i64 -2147483647
  %766 = trunc i64 %765 to i32
  store i32 %766, i32* %759, align 4
  %767 = bitcast i64* %749 to i32*
  %768 = shl i64 %745, 32
  %769 = ashr exact i64 %768, 32
  %770 = add nsw i64 %769, %610
  %771 = icmp slt i64 %770, 2147483647
  %772 = select i1 %771, i64 %770, i64 2147483647
  %773 = icmp sgt i64 %772, -2147483647
  %774 = select i1 %773, i64 %772, i64 -2147483647
  %775 = trunc i64 %774 to i32
  store i32 %775, i32* %767, align 8
  %776 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %748, i64 0, i32 3
  %777 = ashr i64 %745, 32
  %778 = add nsw i64 %777, %619
  %779 = icmp slt i64 %778, 2147483647
  %780 = select i1 %779, i64 %778, i64 2147483647
  %781 = icmp sgt i64 %780, -2147483647
  %782 = select i1 %781, i64 %780, i64 -2147483647
  %783 = trunc i64 %782 to i32
  store i32 %783, i32* %776, align 4
  %784 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %25, i64 0, i32 0, i32 0
  %785 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %61, align 8
  %786 = icmp eq %class.GrSurfaceProxy* %785, null
  br i1 %786, label %790, label %787

787:                                              ; preds = %741
  %788 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %785, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %789 = atomicrmw add i32* %788, i32 1 monotonic
  br label %790

790:                                              ; preds = %787, %741
  store %class.GrSurfaceProxy* %785, %class.GrSurfaceProxy** %784, align 8
  %791 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %25, i64 0, i32 1
  %792 = load i32, i32* %66, align 8
  store i32 %792, i32* %791, align 8
  %793 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %25, i64 0, i32 2, i32 0
  %794 = load i16, i16* %654, align 2
  store i16 %794, i16* %793, align 4
  call fastcc void @_ZL20convolve_gaussian_1dP20GrSurfaceFillContext18GrSurfaceProxyView7SkIRect8SkIPointRKS2_11SkAlphaTypeN38GrGaussianConvolutionFragmentProcessor9DirectionEif10SkTileMode(%class.GrSurfaceFillContext* nonnull %643, %class.GrSurfaceProxyView* nonnull %25, i64 %4, i64 %5, i64 %657, %struct.SkIRect* nonnull dereferenceable(16) %748, i32 %3, i32 %7, i32 %8, float %9, i32 %10) #11
  %795 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %784, align 8
  %796 = icmp eq %class.GrSurfaceProxy* %795, null
  br i1 %796, label %809, label %797

797:                                              ; preds = %790
  %798 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %795, i64 0, i32 1
  %799 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %798, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %800 = atomicrmw add i32* %799, i32 -1 acq_rel
  %801 = icmp eq i32 %800, 1
  br i1 %801, label %802, label %809

802:                                              ; preds = %797
  %803 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %798, i64 -2
  %804 = bitcast %class.SkNVRefCnt* %803 to %class.GrSurfaceProxy*
  %805 = bitcast %class.SkNVRefCnt* %803 to void (%class.GrSurfaceProxy*)***
  %806 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %805, align 8
  %807 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %806, i64 1
  %808 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %807, align 8
  call void %808(%class.GrSurfaceProxy* nonnull %804) #11
  br label %809

809:                                              ; preds = %790, %797, %802
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %746)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %747)
  br label %810

810:                                              ; preds = %672, %809
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %202) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %196) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %190) #11
  br label %811

811:                                              ; preds = %177, %172, %146, %810
  %812 = phi i8* [ %185, %810 ], [ %147, %146 ], [ %147, %172 ], [ %147, %177 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %812) #11
  br label %813

813:                                              ; preds = %811, %78
  %814 = phi %class.GrSurfaceDrawContext* [ null, %78 ], [ %68, %811 ]
  ret %class.GrSurfaceDrawContext* %814
}

declare i64 @_ZNK14GrSurfaceProxy22backingStoreDimensionsEv(%class.GrSurfaceProxy*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL20convolve_gaussian_1dP20GrSurfaceFillContext18GrSurfaceProxyView7SkIRect8SkIPointRKS2_11SkAlphaTypeN38GrGaussianConvolutionFragmentProcessor9DirectionEif10SkTileMode(%class.GrSurfaceFillContext*, %class.GrSurfaceProxyView* nocapture, i64, i64, i64, %struct.SkIRect* dereferenceable(16), i32, i32, i32, float, i32) unnamed_addr #5 {
  %12 = alloca %class.SkMatrix, align 16
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = alloca { i64, i64 }, align 8
  %16 = alloca { i64, i64 }, align 8
  %17 = bitcast { i64, i64 }* %16 to %struct.SkIRect*
  %18 = alloca %class.GrSurfaceProxyView, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  store i64 %2, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  store i64 %3, i64* %20, align 8
  %21 = icmp ult i32 %10, 4
  br i1 %21, label %23, label %22

22:                                               ; preds = %11
  tail call void @llvm.trap() #11
  unreachable

23:                                               ; preds = %11
  %24 = bitcast { i64, i64 }* %15 to %struct.SkIRect*
  %25 = trunc i32 %10 to i8
  %26 = bitcast { i64, i64 }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #11
  %27 = bitcast { i64, i64 }* %16 to i32*
  %28 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 1
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 1
  %30 = bitcast i64* %29 to i32*
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 3
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  %35 = shl i64 %4, 32
  %36 = ashr exact i64 %35, 32
  %37 = add nsw i64 %36, %34
  %38 = icmp slt i64 %37, 2147483647
  %39 = select i1 %38, i64 %37, i64 2147483647
  %40 = icmp sgt i64 %39, -2147483647
  %41 = select i1 %40, i64 %39, i64 -2147483647
  %42 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = ashr i64 %4, 32
  %46 = add nsw i64 %45, %44
  %47 = icmp slt i64 %46, 2147483647
  %48 = select i1 %47, i64 %46, i64 2147483647
  %49 = icmp sgt i64 %48, -2147483647
  %50 = select i1 %49, i64 %48, i64 -2147483647
  %51 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = add nsw i64 %36, %53
  %55 = icmp slt i64 %54, 2147483647
  %56 = select i1 %55, i64 %54, i64 2147483647
  %57 = icmp sgt i64 %56, -2147483647
  %58 = select i1 %57, i64 %56, i64 -2147483647
  %59 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = add nsw i64 %45, %61
  %63 = icmp slt i64 %62, 2147483647
  %64 = select i1 %63, i64 %62, i64 2147483647
  %65 = icmp sgt i64 %64, -2147483647
  %66 = select i1 %65, i64 %64, i64 -2147483647
  %67 = shl nsw i64 %50, 32
  %68 = and i64 %41, 4294967295
  %69 = or i64 %67, %68
  %70 = shl nsw i64 %66, 32
  %71 = and i64 %58, 4294967295
  %72 = or i64 %70, %71
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 0
  store i64 %69, i64* %73, align 8
  store i64 %72, i64* %29, align 8
  %74 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %75 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %76 = load i64, i64* %75, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %74, align 8
  %77 = bitcast %class.GrSurfaceProxyView* %18 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 1
  %79 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  store i32 %80, i32* %78, align 8
  %81 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 2, i32 0
  %82 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %83 = load i16, i16* %82, align 2
  store i16 %83, i16* %81, align 4
  %84 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %0, i64 0, i32 0
  %85 = tail call %class.GrCaps* @_ZNK16GrSurfaceContext4capsEv(%class.GrSurfaceContext* %84) #11
  %86 = call %class.GrFragmentProcessor* @_ZN38GrGaussianConvolutionFragmentProcessor4MakeE18GrSurfaceProxyView11SkAlphaTypeNS_9DirectionEifN14GrSamplerState8WrapModeERK7SkIRectPS6_RK6GrCaps(%class.GrSurfaceProxyView* nonnull %18, i32 %6, i32 %7, i32 %8, float %9, i8 zeroext %25, %struct.SkIRect* nonnull dereferenceable(16) %24, %struct.SkIRect* nonnull %17, %class.GrCaps* dereferenceable(232) %85) #11
  %87 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 0, i32 0
  %88 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %87, align 8
  %89 = icmp eq %class.GrSurfaceProxy* %88, null
  br i1 %89, label %102, label %90

90:                                               ; preds = %23
  %91 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %88, i64 0, i32 1
  %92 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %102

95:                                               ; preds = %90
  %96 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %91, i64 -2
  %97 = bitcast %class.SkNVRefCnt* %96 to %class.GrSurfaceProxy*
  %98 = bitcast %class.SkNVRefCnt* %96 to void (%class.GrSurfaceProxy*)***
  %99 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %99, i64 1
  %101 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %100, align 8
  call void %101(%class.GrSurfaceProxy* nonnull %97) #11
  br label %102

102:                                              ; preds = %95, %90, %23
  %103 = bitcast { <2 x float>, <2 x float> }* %14 to %struct.SkRect*
  %104 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #11
  %105 = load i32, i32* %27, align 8
  %106 = sitofp i32 %105 to float
  %107 = insertelement <2 x float> undef, float %106, i32 0
  %108 = load i32, i32* %28, align 4
  %109 = sitofp i32 %108 to float
  %110 = insertelement <2 x float> %107, float %109, i32 1
  %111 = load i32, i32* %30, align 8
  %112 = sitofp i32 %111 to float
  %113 = insertelement <2 x float> undef, float %112, i32 0
  %114 = load i32, i32* %31, align 4
  %115 = sitofp i32 %114 to float
  %116 = insertelement <2 x float> %113, float %115, i32 1
  %117 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  store <2 x float> %110, <2 x float>* %117, align 8
  %118 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  store <2 x float> %116, <2 x float>* %118, align 8
  %119 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %120 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %120) #11
  %121 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 1
  %122 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #11
  %123 = load i32, i32* %32, align 4
  %124 = sitofp i32 %123 to float
  %125 = insertelement <2 x float> undef, float %124, i32 0
  %126 = load i32, i32* %42, align 4
  %127 = sitofp i32 %126 to float
  %128 = insertelement <2 x float> %125, float %127, i32 1
  %129 = load i32, i32* %51, align 4
  %130 = sitofp i32 %129 to float
  %131 = insertelement <2 x float> undef, float %130, i32 0
  %132 = load i32, i32* %59, align 4
  %133 = sitofp i32 %132 to float
  %134 = insertelement <2 x float> %131, float %133, i32 1
  %135 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  store <2 x float> %128, <2 x float>* %135, align 8
  %136 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  store <2 x float> %134, <2 x float>* %136, align 8
  %137 = bitcast %class.SkMatrix* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %137, align 16, !alias.scope !37
  %138 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 4
  %139 = bitcast float* %138 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %139, align 16, !alias.scope !37
  %140 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %140, align 16, !alias.scope !37
  store i32 16, i32* %121, align 4, !alias.scope !37
  %141 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %12, %struct.SkRect* nonnull dereferenceable(16) %119, %struct.SkRect* nonnull dereferenceable(16) %103, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #11
  %142 = call %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* nonnull dereferenceable(40) %12, %class.GrFragmentProcessor* %86) #11
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* %0, %struct.SkIRect* dereferenceable(16) %5, %class.GrFragmentProcessor* %142) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %120) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #11
  ret void
}

declare void @_ZN7SkIRect4joinERKS_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN38GrGaussianConvolutionFragmentProcessor4MakeE18GrSurfaceProxyView11SkAlphaTypeNS_9DirectionEifN14GrSamplerState8WrapModeERK7SkIRectPS6_RK6GrCaps(%class.GrSurfaceProxyView*, i32, i32, i32, float, i8 zeroext, %struct.SkIRect* dereferenceable(16), %struct.SkIRect*, %class.GrCaps* dereferenceable(232)) local_unnamed_addr #2

declare void @_ZN20GrSurfaceFillContext13internalClearEPK7SkIRectNSt3__15arrayIfLm4EEEb(%class.GrSurfaceFillContext*, %struct.SkIRect*, <2 x float>, <2 x float>, i1 zeroext) local_unnamed_addr #2

declare void @_ZN20GrSurfaceDrawContext11drawTextureEPK6GrClip18GrSurfaceProxyView11SkAlphaType12SkFilterMode12SkMipmapMode11SkBlendModeRK8SkRGBA4fILS4_2EERK6SkRectSE_4GrAA13GrQuadAAFlagsN8SkCanvas17SrcRectConstraintERK8SkMatrix5sk_spI17GrColorSpaceXformE(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrSurfaceProxyView*, i32, i32, i32, i32, %struct.SkRGBA4f* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext, i32, i32, %class.SkMatrix* dereferenceable(40), %class.sk_sp.178*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

; Function Attrs: nounwind
declare float @erff(float) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!5 = distinct !{!5, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!6 = distinct !{!6, !7, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!7 = distinct !{!7, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11, !9}
!11 = !{!"llvm.loop.unroll.runtime.disable"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!14 = distinct !{!14, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK11GrColorInfo13refColorSpaceEv: argument 0"}
!17 = distinct !{!17, !"_ZNK11GrColorInfo13refColorSpaceEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!20 = distinct !{!20, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!23 = distinct !{!23, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!26 = distinct !{!26, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!27 = !{i32 0, i32 33}
!28 = !{!29, !31}
!29 = distinct !{!29, !30, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!30 = distinct !{!30, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!31 = distinct !{!31, !32, !"_ZN11SkImageInfo6MakeA8Eii: argument 0"}
!32 = distinct !{!32, !"_ZN11SkImageInfo6MakeA8Eii"}
!33 = distinct !{!33, !9}
!34 = distinct !{!34, !11, !9}
!35 = distinct !{!35, !9}
!36 = distinct !{!36, !11, !9}
!37 = !{!38, !40}
!38 = distinct !{!38, !39, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!39 = distinct !{!39, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!40 = distinct !{!40, !41, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!41 = distinct !{!41, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
