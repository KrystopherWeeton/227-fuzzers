; ModuleID = '../../gpu/command_buffer/common/mailbox_holder.cc'
source_filename = "../../gpu/command_buffer/common/mailbox_holder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }

@_ZN3gpu13MailboxHolderC1Ev = hidden unnamed_addr alias void (%"struct.gpu::MailboxHolder"*), void (%"struct.gpu::MailboxHolder"*)* @_ZN3gpu13MailboxHolderC2Ev
@_ZN3gpu13MailboxHolderC1ERKNS_7MailboxERKNS_9SyncTokenEj = hidden unnamed_addr alias void (%"struct.gpu::MailboxHolder"*, %"struct.gpu::Mailbox"*, %"struct.gpu::SyncToken"*, i32), void (%"struct.gpu::MailboxHolder"*, %"struct.gpu::Mailbox"*, %"struct.gpu::SyncToken"*, i32)* @_ZN3gpu13MailboxHolderC2ERKNS_7MailboxERKNS_9SyncTokenEj

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13MailboxHolderC2Ev(%"struct.gpu::MailboxHolder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %0, i64 0, i32 0
  tail call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* %2) #3
  %3 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %0, i64 0, i32 1
  tail call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* %3) #3
  %4 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  ret void
}

declare void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"*) unnamed_addr #1

declare void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13MailboxHolderC2ERKNS_7MailboxERKNS_9SyncTokenEj(%"struct.gpu::MailboxHolder"*, %"struct.gpu::Mailbox"* nocapture readonly dereferenceable(16), %"struct.gpu::SyncToken"* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %0, i64 0, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 %6, i64 16, i1 false)
  %7 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %0, i64 0, i32 1
  tail call void @_ZN3gpu9SyncTokenC1ERKS0_(%"struct.gpu::SyncToken"* %7, %"struct.gpu::SyncToken"* dereferenceable(24) %2) #3
  %8 = getelementptr inbounds %"struct.gpu::MailboxHolder", %"struct.gpu::MailboxHolder"* %0, i64 0, i32 2
  store i32 %3, i32* %8, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3gpu9SyncTokenC1ERKS0_(%"struct.gpu::SyncToken"*, %"struct.gpu::SyncToken"* dereferenceable(24)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
