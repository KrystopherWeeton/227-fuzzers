; ModuleID = '../../third_party/skia/src/codec/SkJpegUtility.cpp'
source_filename = "../../third_party/skia/src/codec/SkJpegUtility.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.skjpeg_source_mgr = type { %struct.jpeg_source_mgr, %class.SkStream*, [1024 x i8] }
%struct.jpeg_source_mgr = type { i8*, i64, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i64)*, i32 (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*)* }
%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, i16, i16, i32, i8, i32, %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.jpeg_error_mgr = type { {}*, void (%struct.jpeg_common_struct*, i32)*, {}*, void (%struct.jpeg_common_struct*, i8*)*, {}*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_marker_struct = type { %struct.jpeg_marker_struct*, i8, i32, i32, i8* }
%struct.jpeg_decomp_master = type opaque
%struct.jpeg_d_main_controller = type opaque
%struct.jpeg_d_coef_controller = type opaque
%struct.jpeg_d_post_controller = type opaque
%struct.jpeg_input_controller = type opaque
%struct.jpeg_marker_reader = type opaque
%struct.jpeg_entropy_decoder = type opaque
%struct.jpeg_inverse_dct = type opaque
%struct.jpeg_upsampler = type opaque
%struct.jpeg_color_deconverter = type opaque
%struct.jpeg_color_quantizer = type opaque
%class.SkStream = type { i32 (...)** }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }

@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/src/codec/SkJpegUtility.cpp\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"JPEG error with no jmp_buf set.\00", align 1

@_ZN17skjpeg_source_mgrC1EP8SkStream = hidden unnamed_addr alias void (%struct.skjpeg_source_mgr*, %class.SkStream*), void (%struct.skjpeg_source_mgr*, %class.SkStream*)* @_ZN17skjpeg_source_mgrC2EP8SkStream

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_Z15skjpeg_err_exitP18jpeg_common_struct(%struct.jpeg_common_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %3 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %3, i64 0, i32 2
  %5 = bitcast {}** %4 to void (%struct.jpeg_common_struct*)**
  %6 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %5, align 8
  tail call void %6(%struct.jpeg_common_struct* %0) #7
  %7 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %3, i64 1, i32 4
  %8 = getelementptr inbounds {}*, {}** %7, i64 1
  %9 = bitcast {}** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 4294967294
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %1
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 21, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)) #8
  unreachable

14:                                               ; preds = %1
  %15 = bitcast {}** %7 to [1 x %struct.__jmp_buf_tag]***
  %16 = load [1 x %struct.__jmp_buf_tag]**, [1 x %struct.__jmp_buf_tag]*** %15, align 8
  %17 = lshr i64 %10, 1
  %18 = and i64 %17, 2147483647
  %19 = add nsw i64 %18, -1
  %20 = getelementptr inbounds [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %16, i64 %19
  %21 = load [1 x %struct.__jmp_buf_tag]*, [1 x %struct.__jmp_buf_tag]** %20, align 8
  %22 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %21, i64 0, i64 0
  tail call void @longjmp(%struct.__jmp_buf_tag* %22, i32 1) #8
  unreachable
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @longjmp(%struct.__jmp_buf_tag*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17skjpeg_source_mgrC2EP8SkStream(%struct.skjpeg_source_mgr* nocapture, %class.SkStream*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %struct.skjpeg_source_mgr, %struct.skjpeg_source_mgr* %0, i64 0, i32 1
  store %class.SkStream* %1, %class.SkStream** %3, align 8
  %4 = bitcast %class.SkStream* %1 to i1 (%class.SkStream*)***
  %5 = load i1 (%class.SkStream*)**, i1 (%class.SkStream*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %5, i64 10
  %7 = load i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkStream* %1) #7
  br i1 %8, label %9, label %33

9:                                                ; preds = %2
  %10 = bitcast %class.SkStream* %1 to i8* (%class.SkStream*)***
  %11 = load i8* (%class.SkStream*)**, i8* (%class.SkStream*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %11, i64 12
  %13 = load i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %12, align 8
  %14 = tail call i8* %13(%class.SkStream* %1) #7
  %15 = icmp eq i8* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.skjpeg_source_mgr, %struct.skjpeg_source_mgr* %0, i64 0, i32 0, i32 2
  store void (%struct.jpeg_decompress_struct*)* @_ZL18sk_init_mem_sourceP22jpeg_decompress_struct, void (%struct.jpeg_decompress_struct*)** %17, align 8
  %18 = getelementptr inbounds %struct.skjpeg_source_mgr, %struct.skjpeg_source_mgr* %0, i64 0, i32 0, i32 3
  store i32 (%struct.jpeg_decompress_struct*)* @_ZL24sk_fill_mem_input_bufferP22jpeg_decompress_struct, i32 (%struct.jpeg_decompress_struct*)** %18, align 8
  %19 = getelementptr inbounds %struct.skjpeg_source_mgr, %struct.skjpeg_source_mgr* %0, i64 0, i32 0, i32 4
  store void (%struct.jpeg_decompress_struct*, i64)* @_ZL22sk_skip_mem_input_dataP22jpeg_decompress_structl, void (%struct.jpeg_decompress_struct*, i64)** %19, align 8
  %20 = getelementptr inbounds %struct.skjpeg_source_mgr, %struct.skjpeg_source_mgr* %0, i64 0, i32 0, i32 5
  store i32 (%struct.jpeg_decompress_struct*, i32)* @jpeg_resync_to_restart, i32 (%struct.jpeg_decompress_struct*, i32)** %20, align 8
  %21 = getelementptr inbounds %struct.skjpeg_source_mgr, %struct.skjpeg_source_mgr* %0, i64 0, i32 0, i32 6
  store void (%struct.jpeg_decompress_struct*)* @_ZL14sk_term_sourceP22jpeg_decompress_struct, void (%struct.jpeg_decompress_struct*)** %21, align 8
  %22 = bitcast %class.SkStream* %1 to i64 (%class.SkStream*)***
  %23 = load i64 (%class.SkStream*)**, i64 (%class.SkStream*)*** %22, align 8
  %24 = getelementptr inbounds i64 (%class.SkStream*)*, i64 (%class.SkStream*)** %23, i64 11
  %25 = load i64 (%class.SkStream*)*, i64 (%class.SkStream*)** %24, align 8
  %26 = tail call i64 %25(%class.SkStream* %1) #7
  %27 = getelementptr inbounds %struct.skjpeg_source_mgr, %struct.skjpeg_source_mgr* %0, i64 0, i32 0, i32 1
  store i64 %26, i64* %27, align 8
  %28 = load i8* (%class.SkStream*)**, i8* (%class.SkStream*)*** %10, align 8
  %29 = getelementptr inbounds i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %28, i64 12
  %30 = load i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %29, align 8
  %31 = tail call i8* %30(%class.SkStream* %1) #7
  %32 = getelementptr inbounds %struct.skjpeg_source_mgr, %struct.skjpeg_source_mgr* %0, i64 0, i32 0, i32 0
  store i8* %31, i8** %32, align 8
  br label %39

33:                                               ; preds = %9, %2
  %34 = getelementptr inbounds %struct.skjpeg_source_mgr, %struct.skjpeg_source_mgr* %0, i64 0, i32 0, i32 2
  store void (%struct.jpeg_decompress_struct*)* @_ZL23sk_init_buffered_sourceP22jpeg_decompress_struct, void (%struct.jpeg_decompress_struct*)** %34, align 8
  %35 = getelementptr inbounds %struct.skjpeg_source_mgr, %struct.skjpeg_source_mgr* %0, i64 0, i32 0, i32 3
  store i32 (%struct.jpeg_decompress_struct*)* @_ZL29sk_fill_buffered_input_bufferP22jpeg_decompress_struct, i32 (%struct.jpeg_decompress_struct*)** %35, align 8
  %36 = getelementptr inbounds %struct.skjpeg_source_mgr, %struct.skjpeg_source_mgr* %0, i64 0, i32 0, i32 4
  store void (%struct.jpeg_decompress_struct*, i64)* @_ZL27sk_skip_buffered_input_dataP22jpeg_decompress_structl, void (%struct.jpeg_decompress_struct*, i64)** %36, align 8
  %37 = getelementptr inbounds %struct.skjpeg_source_mgr, %struct.skjpeg_source_mgr* %0, i64 0, i32 0, i32 5
  store i32 (%struct.jpeg_decompress_struct*, i32)* @jpeg_resync_to_restart, i32 (%struct.jpeg_decompress_struct*, i32)** %37, align 8
  %38 = getelementptr inbounds %struct.skjpeg_source_mgr, %struct.skjpeg_source_mgr* %0, i64 0, i32 0, i32 6
  store void (%struct.jpeg_decompress_struct*)* @_ZL14sk_term_sourceP22jpeg_decompress_struct, void (%struct.jpeg_decompress_struct*)** %38, align 8
  br label %39

39:                                               ; preds = %33, %16
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZL18sk_init_mem_sourceP22jpeg_decompress_struct(%struct.jpeg_decompress_struct* nocapture) #4 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL24sk_fill_mem_input_bufferP22jpeg_decompress_struct(%struct.jpeg_decompress_struct* nocapture readnone) #4 {
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL22sk_skip_mem_input_dataP22jpeg_decompress_structl(%struct.jpeg_decompress_struct* nocapture readonly, i64) #5 {
  %3 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %4 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %4, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  %8 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %4, i64 0, i32 0
  br i1 %7, label %9, label %10

9:                                                ; preds = %2
  store i8* null, i8** %8, align 8
  br label %14

10:                                               ; preds = %2
  %11 = load i8*, i8** %8, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %1
  store i8* %12, i8** %8, align 8
  %13 = sub i64 %6, %1
  br label %14

14:                                               ; preds = %10, %9
  %15 = phi i64 [ %13, %10 ], [ 0, %9 ]
  store i64 %15, i64* %5, align 8
  ret void
}

declare i32 @jpeg_resync_to_restart(%struct.jpeg_decompress_struct*, i32) #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZL14sk_term_sourceP22jpeg_decompress_struct(%struct.jpeg_decompress_struct* nocapture) #4 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL23sk_init_buffered_sourceP22jpeg_decompress_struct(%struct.jpeg_decompress_struct* nocapture readonly) #5 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %3 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 1, i32 1
  %5 = bitcast %struct.jpeg_source_mgr* %3 to i64**
  store i64* %4, i64** %5, align 8
  %6 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL29sk_fill_buffered_input_bufferP22jpeg_decompress_struct(%struct.jpeg_decompress_struct* nocapture readonly) #3 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %3 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 1
  %5 = bitcast %struct.jpeg_source_mgr* %4 to %class.SkStream**
  %6 = load %class.SkStream*, %class.SkStream** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 1, i32 1
  %8 = bitcast i64* %7 to i8*
  %9 = bitcast %class.SkStream* %6 to i64 (%class.SkStream*, i8*, i64)***
  %10 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %9, align 8
  %11 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %10, i64 2
  %12 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %11, align 8
  %13 = tail call i64 %12(%class.SkStream* %6, i8* %8, i64 1024) #7
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 0
  store i8* null, i8** %16, align 8
  br label %19

17:                                               ; preds = %1
  %18 = bitcast %struct.jpeg_source_mgr* %3 to i64**
  store i64* %7, i64** %18, align 8
  br label %19

19:                                               ; preds = %17, %15
  %20 = phi i32 [ 1, %17 ], [ 0, %15 ]
  %21 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 1
  store i64 %13, i64* %21, align 8
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL27sk_skip_buffered_input_dataP22jpeg_decompress_structl(%struct.jpeg_decompress_struct*, i64) #3 {
  %3 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %4 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %4, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %27

8:                                                ; preds = %2
  %9 = sub i64 %1, %6
  %10 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %4, i64 1
  %11 = bitcast %struct.jpeg_source_mgr* %10 to %class.SkStream**
  %12 = load %class.SkStream*, %class.SkStream** %11, align 8
  %13 = bitcast %class.SkStream* %12 to i64 (%class.SkStream*, i8*, i64)***
  %14 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %13, align 8
  %15 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %14, i64 2
  %16 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %15, align 8
  %17 = tail call i64 %16(%class.SkStream* %12, i8* null, i64 %9) #7
  %18 = icmp eq i64 %9, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %8
  %20 = bitcast %struct.jpeg_decompress_struct* %0 to void (%struct.jpeg_common_struct*)***
  %21 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %20, align 8
  %22 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %21, align 8
  %23 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %22(%struct.jpeg_common_struct* %23) #7
  br label %32

24:                                               ; preds = %8
  %25 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %4, i64 1, i32 1
  %26 = bitcast %struct.jpeg_source_mgr* %4 to i64**
  store i64* %25, i64** %26, align 8
  store i64 0, i64* %5, align 8
  br label %32

27:                                               ; preds = %2
  %28 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %4, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %1
  store i8* %30, i8** %28, align 8
  %31 = sub i64 %6, %1
  store i64 %31, i64* %5, align 8
  br label %32

32:                                               ; preds = %27, %24, %19
  ret void
}

attributes #0 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
