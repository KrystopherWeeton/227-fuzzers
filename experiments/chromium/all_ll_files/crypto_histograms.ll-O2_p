; ModuleID = '../../third_party/blink/renderer/modules/crypto/crypto_histograms.cc'
source_filename = "../../third_party/blink/renderer/modules/crypto/crypto_histograms.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.25", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.42", %"class.blink::Member.48", %"class.blink::Member.50", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.4" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.2" }
%"class.WTF::HashTable.2" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.4" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.5" }
%"class.blink::HeapHashMap.5" = type { %"class.WTF::HashMap.8" }
%"class.WTF::HashMap.8" = type { %"class.WTF::HashTable.9" }
%"class.WTF::HashTable.9" = type <{ %"struct.WTF::KeyValuePair.11"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.11" = type { i8*, %"class.blink::Member.57" }
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.59" }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.22", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.14 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.14 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.22" = type { %"class.WTF::HashTable.23" }
%"class.WTF::HashTable.23" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.29"*, i32, i32 }
%"class.blink::Member.29" = type opaque
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.35", i32, i32 }
%"class.blink::HeapHashMap.35" = type { %"class.WTF::HashMap.38" }
%"class.WTF::HashMap.38" = type { %"class.WTF::HashTable.39" }
%"class.WTF::HashTable.39" = type <{ %"struct.WTF::KeyValuePair.41"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.41" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::WebCryptoAlgorithm" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebCryptoHmacImportParams" = type { %"class.blink::WebCryptoAlgorithmParamsWithHash", i8, i32 }
%"class.blink::WebCryptoAlgorithmParamsWithHash" = type { %"class.blink::WebCryptoAlgorithmParams", %"class.blink::WebCryptoAlgorithm" }
%"class.blink::WebCryptoAlgorithmParams" = type { i32 (...)** }
%"class.blink::WebCryptoHmacKeyGenParams" = type { %"class.blink::WebCryptoAlgorithmParamsWithHash", i8, i32 }
%"class.blink::WebCryptoRsaHashedKeyGenParams" = type { %"class.blink::WebCryptoAlgorithmParams", i32, %"class.blink::WebVector", %"class.blink::WebCryptoAlgorithm" }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i8* }
%"class.blink::WebCryptoRsaHashedImportParams" = type { %"class.blink::WebCryptoAlgorithmParamsWithHash" }
%"class.blink::WebCryptoEcdsaParams" = type { %"class.blink::WebCryptoAlgorithmParamsWithHash" }
%"class.blink::WebCryptoHkdfParams" = type { %"class.blink::WebCryptoAlgorithmParamsWithHash", %"class.blink::WebVector", %"class.blink::WebVector" }
%"class.blink::WebCryptoPbkdf2Params" = type <{ %"class.blink::WebCryptoAlgorithmParamsWithHash", %"class.blink::WebVector", i32, [4 x i8] }>
%"class.blink::WebCryptoKey" = type { %"class.blink::WebPrivatePtr.55" }
%"class.blink::WebPrivatePtr.55" = type { i8* }
%"class.blink::WebCryptoKeyAlgorithm" = type { %"class.blink::WebPrivatePtr.56" }
%"class.blink::WebPrivatePtr.56" = type { i8* }
%"class.blink::WebCryptoHmacKeyAlgorithmParams" = type <{ %"class.blink::WebCryptoKeyAlgorithmParams", %"class.blink::WebCryptoAlgorithm", i32, [4 x i8] }>
%"class.blink::WebCryptoKeyAlgorithmParams" = type { i32 (...)** }
%"class.blink::WebCryptoRsaHashedKeyAlgorithmParams" = type { %"class.blink::WebCryptoKeyAlgorithmParams", i32, %"class.blink::WebVector", %"class.blink::WebCryptoAlgorithm" }

@switch.table._ZN5blink12HistogramKeyEPNS_16ExecutionContextERKNS_12WebCryptoKeyE = private unnamed_addr constant [18 x i32] [i32 723, i32 724, i32 725, i32 726, i32 727, i32 728, i32 729, i32 730, i32 731, i32 732, i32 733, i32 734, i32 735, i32 736, i32 737, i32 738, i32 3170, i32 3171], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HistogramAlgorithmEPNS_16ExecutionContextERKNS_18WebCryptoAlgorithmE(%"class.blink::ExecutionContext"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::ExecutionContext"* %0, null
  %4 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 3
  %5 = bitcast %"class.blink::UseCounter"* %4 to void (%"class.blink::UseCounter"*, i32)***
  br label %6

6:                                                ; preds = %24, %2
  %7 = phi %"class.blink::WebCryptoAlgorithm"* [ %1, %2 ], [ %25, %24 ]
  %8 = tail call i32 @_ZNK5blink18WebCryptoAlgorithm2IdEv(%"class.blink::WebCryptoAlgorithm"* %7) #2
  %9 = icmp ult i32 %8, 18
  %10 = xor i1 %9, true
  %11 = or i1 %10, %3
  br i1 %11, label %19, label %12

12:                                               ; preds = %6
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds [18 x i32], [18 x i32]* @switch.table._ZN5blink12HistogramKeyEPNS_16ExecutionContextERKNS_12WebCryptoKeyE, i64 0, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %5, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %4, i32 %15) #2
  br label %19

19:                                               ; preds = %6, %12
  %20 = tail call i32 @_ZNK5blink18WebCryptoAlgorithm10ParamsTypeEv(%"class.blink::WebCryptoAlgorithm"* %7) #2
  switch i32 %20, label %44 [
    i32 3, label %21
    i32 4, label %26
    i32 5, label %29
    i32 6, label %32
    i32 11, label %35
    i32 16, label %38
    i32 17, label %41
  ]

21:                                               ; preds = %19
  %22 = tail call %"class.blink::WebCryptoHmacImportParams"* @_ZNK5blink18WebCryptoAlgorithm16HmacImportParamsEv(%"class.blink::WebCryptoAlgorithm"* %7) #2
  %23 = getelementptr inbounds %"class.blink::WebCryptoHmacImportParams", %"class.blink::WebCryptoHmacImportParams"* %22, i64 0, i32 0, i32 1
  br label %24

24:                                               ; preds = %21, %26, %29, %32, %35, %38, %41
  %25 = phi %"class.blink::WebCryptoAlgorithm"* [ %23, %21 ], [ %28, %26 ], [ %31, %29 ], [ %34, %32 ], [ %37, %35 ], [ %40, %38 ], [ %43, %41 ]
  br label %6

26:                                               ; preds = %19
  %27 = tail call %"class.blink::WebCryptoHmacKeyGenParams"* @_ZNK5blink18WebCryptoAlgorithm16HmacKeyGenParamsEv(%"class.blink::WebCryptoAlgorithm"* %7) #2
  %28 = getelementptr inbounds %"class.blink::WebCryptoHmacKeyGenParams", %"class.blink::WebCryptoHmacKeyGenParams"* %27, i64 0, i32 0, i32 1
  br label %24

29:                                               ; preds = %19
  %30 = tail call %"class.blink::WebCryptoRsaHashedKeyGenParams"* @_ZNK5blink18WebCryptoAlgorithm21RsaHashedKeyGenParamsEv(%"class.blink::WebCryptoAlgorithm"* %7) #2
  %31 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyGenParams", %"class.blink::WebCryptoRsaHashedKeyGenParams"* %30, i64 0, i32 3
  br label %24

32:                                               ; preds = %19
  %33 = tail call %"class.blink::WebCryptoRsaHashedImportParams"* @_ZNK5blink18WebCryptoAlgorithm21RsaHashedImportParamsEv(%"class.blink::WebCryptoAlgorithm"* %7) #2
  %34 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedImportParams", %"class.blink::WebCryptoRsaHashedImportParams"* %33, i64 0, i32 0, i32 1
  br label %24

35:                                               ; preds = %19
  %36 = tail call %"class.blink::WebCryptoEcdsaParams"* @_ZNK5blink18WebCryptoAlgorithm11EcdsaParamsEv(%"class.blink::WebCryptoAlgorithm"* %7) #2
  %37 = getelementptr inbounds %"class.blink::WebCryptoEcdsaParams", %"class.blink::WebCryptoEcdsaParams"* %36, i64 0, i32 0, i32 1
  br label %24

38:                                               ; preds = %19
  %39 = tail call %"class.blink::WebCryptoHkdfParams"* @_ZNK5blink18WebCryptoAlgorithm10HkdfParamsEv(%"class.blink::WebCryptoAlgorithm"* %7) #2
  %40 = getelementptr inbounds %"class.blink::WebCryptoHkdfParams", %"class.blink::WebCryptoHkdfParams"* %39, i64 0, i32 0, i32 1
  br label %24

41:                                               ; preds = %19
  %42 = tail call %"class.blink::WebCryptoPbkdf2Params"* @_ZNK5blink18WebCryptoAlgorithm12Pbkdf2ParamsEv(%"class.blink::WebCryptoAlgorithm"* %7) #2
  %43 = getelementptr inbounds %"class.blink::WebCryptoPbkdf2Params", %"class.blink::WebCryptoPbkdf2Params"* %42, i64 0, i32 0, i32 1
  br label %24

44:                                               ; preds = %19
  ret void
}

declare i32 @_ZNK5blink18WebCryptoAlgorithm2IdEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #1

declare i32 @_ZNK5blink18WebCryptoAlgorithm10ParamsTypeEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #1

declare %"class.blink::WebCryptoHmacImportParams"* @_ZNK5blink18WebCryptoAlgorithm16HmacImportParamsEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #1

declare %"class.blink::WebCryptoHmacKeyGenParams"* @_ZNK5blink18WebCryptoAlgorithm16HmacKeyGenParamsEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #1

declare %"class.blink::WebCryptoRsaHashedKeyGenParams"* @_ZNK5blink18WebCryptoAlgorithm21RsaHashedKeyGenParamsEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #1

declare %"class.blink::WebCryptoRsaHashedImportParams"* @_ZNK5blink18WebCryptoAlgorithm21RsaHashedImportParamsEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #1

declare %"class.blink::WebCryptoEcdsaParams"* @_ZNK5blink18WebCryptoAlgorithm11EcdsaParamsEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #1

declare %"class.blink::WebCryptoHkdfParams"* @_ZNK5blink18WebCryptoAlgorithm10HkdfParamsEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #1

declare %"class.blink::WebCryptoPbkdf2Params"* @_ZNK5blink18WebCryptoAlgorithm12Pbkdf2ParamsEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12HistogramKeyEPNS_16ExecutionContextERKNS_12WebCryptoKeyE(%"class.blink::ExecutionContext"*, %"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(8) %"class.blink::WebCryptoKeyAlgorithm"* @_ZNK5blink12WebCryptoKey9AlgorithmEv(%"class.blink::WebCryptoKey"* %1) #2
  %4 = tail call i32 @_ZNK5blink21WebCryptoKeyAlgorithm2IdEv(%"class.blink::WebCryptoKeyAlgorithm"* %3) #2
  %5 = icmp ult i32 %4, 18
  br i1 %5, label %6, label %17

6:                                                ; preds = %2
  %7 = icmp eq %"class.blink::ExecutionContext"* %0, null
  %8 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 3
  br i1 %7, label %17, label %9

9:                                                ; preds = %6
  %10 = sext i32 %4 to i64
  %11 = getelementptr inbounds [18 x i32], [18 x i32]* @switch.table._ZN5blink12HistogramKeyEPNS_16ExecutionContextERKNS_12WebCryptoKeyE, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.blink::UseCounter"* %8 to void (%"class.blink::UseCounter"*, i32)***
  %14 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %14, i64 3
  %16 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, align 8
  tail call void %16(%"class.blink::UseCounter"* nonnull %8, i32 %12) #2
  br label %17

17:                                               ; preds = %2, %6, %9
  %18 = tail call i32 @_ZNK5blink21WebCryptoKeyAlgorithm10ParamsTypeEv(%"class.blink::WebCryptoKeyAlgorithm"* %3) #2
  switch i32 %18, label %27 [
    i32 1, label %19
    i32 3, label %22
  ]

19:                                               ; preds = %17
  %20 = tail call %"class.blink::WebCryptoHmacKeyAlgorithmParams"* @_ZNK5blink21WebCryptoKeyAlgorithm10HmacParamsEv(%"class.blink::WebCryptoKeyAlgorithm"* %3) #2
  %21 = getelementptr inbounds %"class.blink::WebCryptoHmacKeyAlgorithmParams", %"class.blink::WebCryptoHmacKeyAlgorithmParams"* %20, i64 0, i32 1
  br label %25

22:                                               ; preds = %17
  %23 = tail call %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams"* @_ZNK5blink21WebCryptoKeyAlgorithm15RsaHashedParamsEv(%"class.blink::WebCryptoKeyAlgorithm"* %3) #2
  %24 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams", %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams"* %23, i64 0, i32 3
  br label %25

25:                                               ; preds = %19, %22
  %26 = phi %"class.blink::WebCryptoAlgorithm"* [ %24, %22 ], [ %21, %19 ]
  tail call void @_ZN5blink18HistogramAlgorithmEPNS_16ExecutionContextERKNS_18WebCryptoAlgorithmE(%"class.blink::ExecutionContext"* %0, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %26)
  br label %27

27:                                               ; preds = %25, %17
  ret void
}

declare dereferenceable(8) %"class.blink::WebCryptoKeyAlgorithm"* @_ZNK5blink12WebCryptoKey9AlgorithmEv(%"class.blink::WebCryptoKey"*) local_unnamed_addr #1

declare i32 @_ZNK5blink21WebCryptoKeyAlgorithm2IdEv(%"class.blink::WebCryptoKeyAlgorithm"*) local_unnamed_addr #1

declare i32 @_ZNK5blink21WebCryptoKeyAlgorithm10ParamsTypeEv(%"class.blink::WebCryptoKeyAlgorithm"*) local_unnamed_addr #1

declare %"class.blink::WebCryptoHmacKeyAlgorithmParams"* @_ZNK5blink21WebCryptoKeyAlgorithm10HmacParamsEv(%"class.blink::WebCryptoKeyAlgorithm"*) local_unnamed_addr #1

declare %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams"* @_ZNK5blink21WebCryptoKeyAlgorithm15RsaHashedParamsEv(%"class.blink::WebCryptoKeyAlgorithm"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24HistogramAlgorithmAndKeyEPNS_16ExecutionContextERKNS_18WebCryptoAlgorithmERKNS_12WebCryptoKeyE(%"class.blink::ExecutionContext"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #0 {
  tail call void @_ZN5blink18HistogramAlgorithmEPNS_16ExecutionContextERKNS_18WebCryptoAlgorithmE(%"class.blink::ExecutionContext"* %0, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %1)
  tail call void @_ZN5blink12HistogramKeyEPNS_16ExecutionContextERKNS_12WebCryptoKeyE(%"class.blink::ExecutionContext"* %0, %"class.blink::WebCryptoKey"* dereferenceable(8) %2)
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
