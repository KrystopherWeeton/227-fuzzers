; ModuleID = '../../third_party/pdfium/core/fxcodec/tiff/tiff_decoder.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/tiff/tiff_decoder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%class.CTiffContext = type { %"class.fxcodec::ProgressiveDecoderIface::Context", %"class.fxcrt::RetainPtr", i32, %"class.std::__1::unique_ptr.1" }
%"class.fxcodec::ProgressiveDecoderIface::Context" = type { i32 (...)** }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %struct.tiff* }
%struct.tiff = type { i8*, i32, i32, i32, i64, i64, i64*, i16, i16, %struct.TIFFDirectory, %struct.TIFFDirectory, %union.anon.4, i16, i32, i16, i32, i64, i64, i16, i64, i32, i32, i64, i32, i32 (%struct.tiff*)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*, i32*, i32*)*, i8*, i64, i64, i8*, i64, i64, i64, i8*, i64, i8*, i64, i32 (i8*, i8**, i64*)*, void (i8*, i8*, i64)*, i8*, i64 (i8*, i8*, i64)*, i64 (i8*, i8*, i64)*, i64 (i8*, i64, i32)*, i32 (i8*)*, i64 (i8*)*, void (%struct.tiff*, i8*, i64)*, %struct._TIFFField**, i64, %struct._TIFFField*, %struct.TIFFTagMethods, %struct.client_info*, %struct._TIFFFieldArray*, i64 }
%struct.TIFFDirectory = type { [4 x i64], i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, double*, double*, float, float, i16, i16, float, float, [2 x i16], [3 x i16*], [2 x i16], i16, i16*, i32, i32, i64*, i64*, i32, %struct.TIFFDirEntry, %struct.TIFFDirEntry, i16, i64*, [2 x i16], i16, [3 x i16*], float*, i32, i8*, i32, %struct.TIFFTagValue*, i8 }
%struct.TIFFDirEntry = type { i16, i16, i64, %union.anon, i8 }
%union.anon = type { i64 }
%struct.TIFFTagValue = type { %struct._TIFFField*, i32, i8* }
%union.anon.4 = type { %struct.TIFFHeaderBig }
%struct.TIFFHeaderBig = type { i16, i16, i16, i16, i64 }
%struct._TIFFField = type { i32, i16, i16, i32, i32, i32, i32, i16, i8, i8, i8*, %struct._TIFFFieldArray* }
%struct.TIFFTagMethods = type { i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, void (%struct.tiff*, %struct._IO_FILE*, i64)* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.client_info = type { %struct.client_info*, i8*, i8* }
%struct._TIFFFieldArray = type { i32, i32, i32, %struct._TIFFField* }
%"class.fxcodec::CFX_DIBAttribute" = type { i32, i32, i16, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.42" }
%"struct.std::__1::pair.42" = type { i32, i8* }
%"class.fxcrt::RetainPtr.12" = type { %"class.std::__1::unique_ptr.13" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr.12", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i32* }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.21", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { i8* }

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN12CTiffContextD2Ev = comdat any

$_ZN12CTiffContextD0Ev = comdat any

$_ZTV12CTiffContext = comdat any

@_TIFFwarningHandler = hidden local_unnamed_addr global void (i8*, i8*, %struct.__va_list_tag*)* null, align 8
@_TIFFerrorHandler = hidden local_unnamed_addr global void (i8*, i8*, %struct.__va_list_tag*)* null, align 8
@.str = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"No space for scanline buffer\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"Tiff Image\00", align 1
@_ZTV12CTiffContext = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CTiffContext*)* @_ZN12CTiffContextD2Ev to i8*), i8* bitcast (void (%class.CTiffContext*)* @_ZN12CTiffContextD0Ev to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_TIFFcalloc(i64, i64) local_unnamed_addr #0 {
  %3 = tail call i8* @FXMEM_DefaultCalloc(i64 %0, i64 %1) #10
  ret i8* %3
}

declare i8* @FXMEM_DefaultCalloc(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_TIFFmalloc(i64) local_unnamed_addr #0 {
  %2 = tail call i8* @FXMEM_DefaultAlloc(i64 %0) #10
  ret i8* %2
}

declare i8* @FXMEM_DefaultAlloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_TIFFfree(i8*) local_unnamed_addr #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @FXMEM_DefaultFree(i8* nonnull %0) #10
  br label %4

4:                                                ; preds = %1, %3
  ret void
}

declare void @FXMEM_DefaultFree(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_TIFFrealloc(i8*, i64) local_unnamed_addr #0 {
  %3 = tail call i8* @FXMEM_DefaultRealloc(i8* %0, i64 %1) #10
  ret i8* %3
}

declare i8* @FXMEM_DefaultRealloc(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_TIFFmemset(i8* nocapture, i32, i64) local_unnamed_addr #0 {
  %4 = trunc i32 %1 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 %4, i64 %2, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_TIFFmemcpy(i8* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 %2, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_TIFFmemcmp(i8* nocapture readonly, i8* nocapture readonly, i64) local_unnamed_addr #3 {
  %4 = tail call i32 @memcmp(i8* %0, i8* %1, i64 %2) #11
  ret i32 %4
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CTiffContext11InitDecoderERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEE(%class.CTiffContext*, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %3, align 8
  %5 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %5, align 8
  %7 = icmp eq %class.IFX_SeekableReadStream* %4, %6
  br i1 %7, label %47, label %8

8:                                                ; preds = %2
  %9 = icmp eq %class.IFX_SeekableReadStream* %6, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %8
  %11 = bitcast %class.IFX_SeekableReadStream* %6 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr i8, i8* %12, i64 -32
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %class.IFX_SeekableReadStream* %6 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %3, align 8
  br label %23

23:                                               ; preds = %10, %8
  %24 = phi %class.IFX_SeekableReadStream* [ %22, %10 ], [ %4, %8 ]
  store %class.IFX_SeekableReadStream* %6, %class.IFX_SeekableReadStream** %3, align 8
  %25 = icmp eq %class.IFX_SeekableReadStream* %24, null
  br i1 %25, label %47, label %26

26:                                               ; preds = %23
  %27 = bitcast %class.IFX_SeekableReadStream* %24 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr i8, i8* %28, i64 -32
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %class.IFX_SeekableReadStream* %24 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = getelementptr inbounds i8, i8* %33, i64 8
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = add nsw i64 %36, -1
  store i64 %37, i64* %35, align 8
  %38 = icmp ne i64 %37, 0
  %39 = icmp eq i8* %33, null
  %40 = or i1 %39, %38
  br i1 %40, label %47, label %41

41:                                               ; preds = %26
  %42 = bitcast i8* %33 to %"class.fxcrt::Retainable"*
  %43 = bitcast i8* %33 to void (%"class.fxcrt::Retainable"*)***
  %44 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %44, i64 1
  %46 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %45, align 8
  tail call void %46(%"class.fxcrt::Retainable"* nonnull %42) #10
  br label %47

47:                                               ; preds = %2, %23, %26, %41
  %48 = bitcast %class.CTiffContext* %0 to i8*
  %49 = tail call %struct.tiff* @TIFFClientOpen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8* %48, i64 (i8*, i8*, i64)* nonnull @_ZN12_GLOBAL__N_19tiff_readEPvS0_l, i64 (i8*, i8*, i64)* nonnull @_ZN12_GLOBAL__N_110tiff_writeEPvS0_l, i64 (i8*, i64, i32)* nonnull @_ZN12_GLOBAL__N_19tiff_seekEPvmi, i32 (i8*)* nonnull @_ZN12_GLOBAL__N_110tiff_closeEPv, i64 (i8*)* nonnull @_ZN12_GLOBAL__N_113tiff_get_sizeEPv, i32 (i8*, i8**, i64*)* nonnull @_ZN12_GLOBAL__N_18tiff_mapEPvPS0_Pm, void (i8*, i8*, i64)* nonnull @_ZN12_GLOBAL__N_110tiff_unmapEPvS0_m) #10
  %50 = icmp eq %struct.tiff* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = ptrtoint %class.CTiffContext* %0 to i64
  %53 = trunc i64 %52 to i32
  %54 = getelementptr inbounds %struct.tiff, %struct.tiff* %49, i64 0, i32 1
  store i32 %53, i32* %54, align 8
  br label %55

55:                                               ; preds = %47, %51
  %56 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %struct.tiff*, %struct.tiff** %56, align 8
  store %struct.tiff* %49, %struct.tiff** %56, align 8
  %58 = icmp eq %struct.tiff* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  tail call void @TIFFClose(%struct.tiff* nonnull %57) #10
  %60 = load %struct.tiff*, %struct.tiff** %56, align 8
  br label %61

61:                                               ; preds = %55, %59
  %62 = phi %struct.tiff* [ %49, %55 ], [ %60, %59 ]
  %63 = icmp ne %struct.tiff* %62, null
  ret i1 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CTiffContext13LoadFrameInfoEiPiS0_S0_S0_PN7fxcodec16CFX_DIBAttributeE(%class.CTiffContext* nocapture readonly, i32, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #0 align 2 {
  %8 = alloca i8*, align 8
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca i16, align 2
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %struct.tiff*, %struct.tiff** %19, align 8
  %21 = trunc i32 %1 to i16
  %22 = tail call i32 @TIFFSetDirectory(%struct.tiff* %20, i16 zeroext %21) #10
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %716, label %24

24:                                               ; preds = %7
  %25 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #10
  store i32 0, i32* %14, align 4
  %26 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #10
  store i32 0, i32* %15, align 4
  %27 = bitcast i16* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %27) #10
  store i16 0, i16* %16, align 2
  %28 = bitcast i16* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %28) #10
  store i16 0, i16* %17, align 2
  %29 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #10
  store i32 0, i32* %18, align 4
  %30 = load %struct.tiff*, %struct.tiff** %19, align 8
  %31 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %30, i32 256, i32* nonnull %14) #10
  %32 = load %struct.tiff*, %struct.tiff** %19, align 8
  %33 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %32, i32 257, i32* nonnull %15) #10
  %34 = load %struct.tiff*, %struct.tiff** %19, align 8
  %35 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %34, i32 277, i16* nonnull %16) #10
  %36 = load %struct.tiff*, %struct.tiff** %19, align 8
  %37 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %36, i32 258, i16* nonnull %17) #10
  %38 = load %struct.tiff*, %struct.tiff** %19, align 8
  %39 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %38, i32 278, i32* nonnull %18) #10
  %40 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 2
  store i16 1, i16* %40, align 8
  %41 = load %struct.tiff*, %struct.tiff** %19, align 8
  %42 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %41, i32 296, i16* %40) #10
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %24
  %45 = load i16, i16* %40, align 8
  %46 = add i16 %45, -1
  store i16 %46, i16* %40, align 8
  br label %47

47:                                               ; preds = %24, %44
  %48 = load %struct.tiff*, %struct.tiff** %19, align 8
  %49 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %49) #10
  store i16 0, i16* %11, align 2
  %50 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %48, i32 274, i16* nonnull %11) #10
  %51 = load i16, i16* %11, align 2
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %128, label %53

53:                                               ; preds = %47
  %54 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 1, i64 2) #10
  %55 = bitcast i8* %54 to i16*
  %56 = load i16, i16* %11, align 2
  store i16 %56, i16* %55, align 2
  %57 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3
  %58 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node"**
  %60 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node"* %60, null
  br i1 %61, label %90, label %62

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %64

64:                                               ; preds = %86, %62
  %65 = phi %"class.std::__1::__tree_node"* [ %89, %86 ], [ %60, %62 ]
  %66 = phi %"class.std::__1::__tree_node_base"** [ %88, %86 ], [ %63, %62 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %65, i64 0, i32 1, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp ugt i32 %68, 274
  br i1 %69, label %70, label %76

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %65, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, null
  br i1 %73, label %74, label %86

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %65, i64 0, i32 0, i32 0
  br label %92

76:                                               ; preds = %64
  %77 = icmp eq i32 %68, 274
  br i1 %77, label %84, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %65, i64 0, i32 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %65, i64 0, i32 0, i32 0
  br label %92

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %65, i64 0, i32 0, i32 0
  br label %92

86:                                               ; preds = %78, %70
  %87 = phi %"class.std::__1::__tree_node_base"* [ %72, %70 ], [ %80, %78 ]
  %88 = phi %"class.std::__1::__tree_node_base"** [ %71, %70 ], [ %79, %78 ]
  %89 = bitcast %"class.std::__1::__tree_node_base"* %87 to %"class.std::__1::__tree_node"*
  br label %64

90:                                               ; preds = %53
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  br label %92

92:                                               ; preds = %90, %84, %82, %74
  %93 = phi %"class.std::__1::__tree_end_node"* [ %58, %90 ], [ %75, %74 ], [ %83, %82 ], [ %85, %84 ]
  %94 = phi %"class.std::__1::__tree_node_base"** [ %91, %90 ], [ %71, %74 ], [ %79, %82 ], [ %66, %84 ]
  %95 = bitcast %"class.std::__1::__tree_node_base"** %94 to %"class.std::__1::__tree_node"**
  %96 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node"* %96, null
  br i1 %97, label %98, label %125

98:                                               ; preds = %92
  %99 = call i8* @_Znwm(i64 48) #12, !noalias !2
  %100 = getelementptr inbounds i8, i8* %99, i64 32
  %101 = bitcast i8* %100 to i32*
  store i32 274, i32* %101, align 8, !noalias !2
  %102 = getelementptr inbounds i8, i8* %99, i64 40
  %103 = bitcast i8* %102 to i8**
  store i8* null, i8** %103, align 8, !noalias !2
  %104 = bitcast i8* %99 to %"class.std::__1::__tree_node"*
  %105 = bitcast i8* %99 to %"class.std::__1::__tree_node_base"*
  %106 = getelementptr inbounds i8, i8* %99, i64 16
  %107 = bitcast i8* %106 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %93, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_node_base"** %94 to i8**
  store i8* %99, i8** %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %57, i64 0, i32 0, i32 0
  %110 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 0, i32 0
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node_base"* %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %98
  %115 = ptrtoint %"class.std::__1::__tree_node_base"* %112 to i64
  %116 = bitcast %"class.std::__1::map"* %57 to i64*
  store i64 %115, i64* %116, align 8
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  br label %118

118:                                              ; preds = %114, %98
  %119 = phi %"class.std::__1::__tree_node_base"* [ %105, %98 ], [ %117, %114 ]
  %120 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %121, %"class.std::__1::__tree_node_base"* %119) #10
  %122 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, 1
  store i64 %124, i64* %122, align 8
  br label %125

125:                                              ; preds = %118, %92
  %126 = phi %"class.std::__1::__tree_node"* [ %104, %118 ], [ %96, %92 ]
  %127 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %126, i64 0, i32 1, i32 0, i32 1
  store i8* %54, i8** %127, align 8
  br label %128

128:                                              ; preds = %47, %125
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %49) #10
  %129 = load %struct.tiff*, %struct.tiff** %19, align 8
  %130 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %130) #10
  store float 0.000000e+00, float* %10, align 4
  %131 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %129, i32 282, float* nonnull %10) #10
  %132 = load float, float* %10, align 4
  %133 = fcmp une float %132, 0.000000e+00
  br i1 %133, label %134, label %207

134:                                              ; preds = %128
  %135 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 1, i64 4) #10
  %136 = bitcast float* %10 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = bitcast i8* %135 to i32*
  store i32 %137, i32* %138, align 4
  %139 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3
  %140 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %141 = bitcast %"class.std::__1::__tree_end_node"* %140 to %"class.std::__1::__tree_node"**
  %142 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node"* %142, null
  br i1 %143, label %172, label %144

144:                                              ; preds = %134
  %145 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %146

146:                                              ; preds = %168, %144
  %147 = phi %"class.std::__1::__tree_node"* [ %171, %168 ], [ %142, %144 ]
  %148 = phi %"class.std::__1::__tree_node_base"** [ %170, %168 ], [ %145, %144 ]
  %149 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %147, i64 0, i32 1, i32 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = icmp ugt i32 %150, 282
  br i1 %151, label %152, label %158

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %147, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %154, null
  br i1 %155, label %156, label %168

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %147, i64 0, i32 0, i32 0
  br label %174

158:                                              ; preds = %146
  %159 = icmp eq i32 %150, 282
  br i1 %159, label %166, label %160

160:                                              ; preds = %158
  %161 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %147, i64 0, i32 0, i32 1
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, null
  br i1 %163, label %164, label %168

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %147, i64 0, i32 0, i32 0
  br label %174

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %147, i64 0, i32 0, i32 0
  br label %174

168:                                              ; preds = %160, %152
  %169 = phi %"class.std::__1::__tree_node_base"* [ %154, %152 ], [ %162, %160 ]
  %170 = phi %"class.std::__1::__tree_node_base"** [ %153, %152 ], [ %161, %160 ]
  %171 = bitcast %"class.std::__1::__tree_node_base"* %169 to %"class.std::__1::__tree_node"*
  br label %146

172:                                              ; preds = %134
  %173 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 0, i32 0
  br label %174

174:                                              ; preds = %172, %166, %164, %156
  %175 = phi %"class.std::__1::__tree_end_node"* [ %140, %172 ], [ %157, %156 ], [ %165, %164 ], [ %167, %166 ]
  %176 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %153, %156 ], [ %161, %164 ], [ %148, %166 ]
  %177 = bitcast %"class.std::__1::__tree_node_base"** %176 to %"class.std::__1::__tree_node"**
  %178 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %177, align 8
  %179 = icmp eq %"class.std::__1::__tree_node"* %178, null
  br i1 %179, label %180, label %208

180:                                              ; preds = %174
  %181 = call i8* @_Znwm(i64 48) #12, !noalias !5
  %182 = getelementptr inbounds i8, i8* %181, i64 32
  %183 = bitcast i8* %182 to i32*
  store i32 282, i32* %183, align 8, !noalias !5
  %184 = getelementptr inbounds i8, i8* %181, i64 40
  %185 = bitcast i8* %184 to i8**
  store i8* null, i8** %185, align 8, !noalias !5
  %186 = bitcast i8* %181 to %"class.std::__1::__tree_node"*
  %187 = bitcast i8* %181 to %"class.std::__1::__tree_node_base"*
  %188 = getelementptr inbounds i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %181, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %175, %"class.std::__1::__tree_end_node"** %189, align 8
  %190 = bitcast %"class.std::__1::__tree_node_base"** %176 to i8**
  store i8* %181, i8** %190, align 8
  %191 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %139, i64 0, i32 0, i32 0
  %192 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %191, align 8
  %193 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %192, i64 0, i32 0
  %194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %193, align 8
  %195 = icmp eq %"class.std::__1::__tree_node_base"* %194, null
  br i1 %195, label %200, label %196

196:                                              ; preds = %180
  %197 = ptrtoint %"class.std::__1::__tree_node_base"* %194 to i64
  %198 = bitcast %"class.std::__1::map"* %139 to i64*
  store i64 %197, i64* %198, align 8
  %199 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %176, align 8
  br label %200

200:                                              ; preds = %196, %180
  %201 = phi %"class.std::__1::__tree_node_base"* [ %187, %180 ], [ %199, %196 ]
  %202 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %203 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %202, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %203, %"class.std::__1::__tree_node_base"* %201) #10
  %204 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %205 = load i64, i64* %204, align 8
  %206 = add i64 %205, 1
  store i64 %206, i64* %204, align 8
  br label %208

207:                                              ; preds = %128
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #10
  br label %289

208:                                              ; preds = %200, %174
  %209 = phi %"class.std::__1::__tree_node"* [ %186, %200 ], [ %178, %174 ]
  %210 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %209, i64 0, i32 1, i32 0, i32 1
  store i8* %135, i8** %210, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #10
  %211 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %141, align 8
  %212 = icmp eq %"class.std::__1::__tree_node"* %211, null
  br i1 %212, label %241, label %213

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %215

215:                                              ; preds = %237, %213
  %216 = phi %"class.std::__1::__tree_node"* [ %240, %237 ], [ %211, %213 ]
  %217 = phi %"class.std::__1::__tree_node_base"** [ %239, %237 ], [ %214, %213 ]
  %218 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %216, i64 0, i32 1, i32 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = icmp ugt i32 %219, 282
  br i1 %220, label %221, label %227

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %216, i64 0, i32 0, i32 0, i32 0
  %223 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %222, align 8
  %224 = icmp eq %"class.std::__1::__tree_node_base"* %223, null
  br i1 %224, label %225, label %237

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %216, i64 0, i32 0, i32 0
  br label %243

227:                                              ; preds = %215
  %228 = icmp eq i32 %219, 282
  br i1 %228, label %235, label %229

229:                                              ; preds = %227
  %230 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %216, i64 0, i32 0, i32 1
  %231 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %230, align 8
  %232 = icmp eq %"class.std::__1::__tree_node_base"* %231, null
  br i1 %232, label %233, label %237

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %216, i64 0, i32 0, i32 0
  br label %243

235:                                              ; preds = %227
  %236 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %216, i64 0, i32 0, i32 0
  br label %243

237:                                              ; preds = %229, %221
  %238 = phi %"class.std::__1::__tree_node_base"* [ %223, %221 ], [ %231, %229 ]
  %239 = phi %"class.std::__1::__tree_node_base"** [ %222, %221 ], [ %230, %229 ]
  %240 = bitcast %"class.std::__1::__tree_node_base"* %238 to %"class.std::__1::__tree_node"*
  br label %215

241:                                              ; preds = %208
  %242 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 0, i32 0
  br label %243

243:                                              ; preds = %241, %235, %233, %225
  %244 = phi %"class.std::__1::__tree_end_node"* [ %140, %241 ], [ %226, %225 ], [ %234, %233 ], [ %236, %235 ]
  %245 = phi %"class.std::__1::__tree_node_base"** [ %242, %241 ], [ %222, %225 ], [ %230, %233 ], [ %217, %235 ]
  %246 = bitcast %"class.std::__1::__tree_node_base"** %245 to %"class.std::__1::__tree_node"**
  %247 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %246, align 8
  %248 = icmp eq %"class.std::__1::__tree_node"* %247, null
  br i1 %248, label %249, label %276

249:                                              ; preds = %243
  %250 = call i8* @_Znwm(i64 48) #12, !noalias !8
  %251 = getelementptr inbounds i8, i8* %250, i64 32
  %252 = bitcast i8* %251 to i32*
  store i32 282, i32* %252, align 8, !noalias !8
  %253 = getelementptr inbounds i8, i8* %250, i64 40
  %254 = bitcast i8* %253 to i8**
  store i8* null, i8** %254, align 8, !noalias !8
  %255 = bitcast i8* %250 to %"class.std::__1::__tree_node"*
  %256 = bitcast i8* %250 to %"class.std::__1::__tree_node_base"*
  %257 = getelementptr inbounds i8, i8* %250, i64 16
  %258 = bitcast i8* %257 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %250, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %244, %"class.std::__1::__tree_end_node"** %258, align 8
  %259 = bitcast %"class.std::__1::__tree_node_base"** %245 to i8**
  store i8* %250, i8** %259, align 8
  %260 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %139, i64 0, i32 0, i32 0
  %261 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %260, align 8
  %262 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %261, i64 0, i32 0
  %263 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %262, align 8
  %264 = icmp eq %"class.std::__1::__tree_node_base"* %263, null
  br i1 %264, label %269, label %265

265:                                              ; preds = %249
  %266 = ptrtoint %"class.std::__1::__tree_node_base"* %263 to i64
  %267 = bitcast %"class.std::__1::map"* %139 to i64*
  store i64 %266, i64* %267, align 8
  %268 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %245, align 8
  br label %269

269:                                              ; preds = %265, %249
  %270 = phi %"class.std::__1::__tree_node_base"* [ %256, %249 ], [ %268, %265 ]
  %271 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %272 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %271, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %272, %"class.std::__1::__tree_node_base"* %270) #10
  %273 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %274 = load i64, i64* %273, align 8
  %275 = add i64 %274, 1
  store i64 %275, i64* %273, align 8
  br label %276

276:                                              ; preds = %243, %269
  %277 = phi %"class.std::__1::__tree_node"* [ %255, %269 ], [ %247, %243 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %277, i64 0, i32 1, i32 0, i32 1
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %286, label %281

281:                                              ; preds = %276
  %282 = bitcast i8* %279 to float*
  %283 = load float, float* %282, align 4
  %284 = fadd float %283, 5.000000e-01
  %285 = fptosi float %284 to i32
  br label %286

286:                                              ; preds = %276, %281
  %287 = phi i32 [ %285, %281 ], [ 0, %276 ]
  %288 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 0
  store i32 %287, i32* %288, align 8
  br label %289

289:                                              ; preds = %207, %286
  %290 = load %struct.tiff*, %struct.tiff** %19, align 8
  %291 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %291) #10
  store float 0.000000e+00, float* %9, align 4
  %292 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %290, i32 283, float* nonnull %9) #10
  %293 = load float, float* %9, align 4
  %294 = fcmp une float %293, 0.000000e+00
  br i1 %294, label %295, label %368

295:                                              ; preds = %289
  %296 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 1, i64 4) #10
  %297 = bitcast float* %9 to i32*
  %298 = load i32, i32* %297, align 4
  %299 = bitcast i8* %296 to i32*
  store i32 %298, i32* %299, align 4
  %300 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3
  %301 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %302 = bitcast %"class.std::__1::__tree_end_node"* %301 to %"class.std::__1::__tree_node"**
  %303 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %302, align 8
  %304 = icmp eq %"class.std::__1::__tree_node"* %303, null
  br i1 %304, label %333, label %305

305:                                              ; preds = %295
  %306 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %307

307:                                              ; preds = %329, %305
  %308 = phi %"class.std::__1::__tree_node"* [ %332, %329 ], [ %303, %305 ]
  %309 = phi %"class.std::__1::__tree_node_base"** [ %331, %329 ], [ %306, %305 ]
  %310 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %308, i64 0, i32 1, i32 0, i32 0
  %311 = load i32, i32* %310, align 4
  %312 = icmp ugt i32 %311, 283
  br i1 %312, label %313, label %319

313:                                              ; preds = %307
  %314 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %308, i64 0, i32 0, i32 0, i32 0
  %315 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %314, align 8
  %316 = icmp eq %"class.std::__1::__tree_node_base"* %315, null
  br i1 %316, label %317, label %329

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %308, i64 0, i32 0, i32 0
  br label %335

319:                                              ; preds = %307
  %320 = icmp eq i32 %311, 283
  br i1 %320, label %327, label %321

321:                                              ; preds = %319
  %322 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %308, i64 0, i32 0, i32 1
  %323 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %322, align 8
  %324 = icmp eq %"class.std::__1::__tree_node_base"* %323, null
  br i1 %324, label %325, label %329

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %308, i64 0, i32 0, i32 0
  br label %335

327:                                              ; preds = %319
  %328 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %308, i64 0, i32 0, i32 0
  br label %335

329:                                              ; preds = %321, %313
  %330 = phi %"class.std::__1::__tree_node_base"* [ %315, %313 ], [ %323, %321 ]
  %331 = phi %"class.std::__1::__tree_node_base"** [ %314, %313 ], [ %322, %321 ]
  %332 = bitcast %"class.std::__1::__tree_node_base"* %330 to %"class.std::__1::__tree_node"*
  br label %307

333:                                              ; preds = %295
  %334 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %301, i64 0, i32 0
  br label %335

335:                                              ; preds = %333, %327, %325, %317
  %336 = phi %"class.std::__1::__tree_end_node"* [ %301, %333 ], [ %318, %317 ], [ %326, %325 ], [ %328, %327 ]
  %337 = phi %"class.std::__1::__tree_node_base"** [ %334, %333 ], [ %314, %317 ], [ %322, %325 ], [ %309, %327 ]
  %338 = bitcast %"class.std::__1::__tree_node_base"** %337 to %"class.std::__1::__tree_node"**
  %339 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %338, align 8
  %340 = icmp eq %"class.std::__1::__tree_node"* %339, null
  br i1 %340, label %341, label %369

341:                                              ; preds = %335
  %342 = call i8* @_Znwm(i64 48) #12, !noalias !11
  %343 = getelementptr inbounds i8, i8* %342, i64 32
  %344 = bitcast i8* %343 to i32*
  store i32 283, i32* %344, align 8, !noalias !11
  %345 = getelementptr inbounds i8, i8* %342, i64 40
  %346 = bitcast i8* %345 to i8**
  store i8* null, i8** %346, align 8, !noalias !11
  %347 = bitcast i8* %342 to %"class.std::__1::__tree_node"*
  %348 = bitcast i8* %342 to %"class.std::__1::__tree_node_base"*
  %349 = getelementptr inbounds i8, i8* %342, i64 16
  %350 = bitcast i8* %349 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %342, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %336, %"class.std::__1::__tree_end_node"** %350, align 8
  %351 = bitcast %"class.std::__1::__tree_node_base"** %337 to i8**
  store i8* %342, i8** %351, align 8
  %352 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %300, i64 0, i32 0, i32 0
  %353 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %352, align 8
  %354 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %353, i64 0, i32 0
  %355 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %354, align 8
  %356 = icmp eq %"class.std::__1::__tree_node_base"* %355, null
  br i1 %356, label %361, label %357

357:                                              ; preds = %341
  %358 = ptrtoint %"class.std::__1::__tree_node_base"* %355 to i64
  %359 = bitcast %"class.std::__1::map"* %300 to i64*
  store i64 %358, i64* %359, align 8
  %360 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %337, align 8
  br label %361

361:                                              ; preds = %357, %341
  %362 = phi %"class.std::__1::__tree_node_base"* [ %348, %341 ], [ %360, %357 ]
  %363 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %364 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %363, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %364, %"class.std::__1::__tree_node_base"* %362) #10
  %365 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %366 = load i64, i64* %365, align 8
  %367 = add i64 %366, 1
  store i64 %367, i64* %365, align 8
  br label %369

368:                                              ; preds = %289
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %291) #10
  br label %450

369:                                              ; preds = %361, %335
  %370 = phi %"class.std::__1::__tree_node"* [ %347, %361 ], [ %339, %335 ]
  %371 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %370, i64 0, i32 1, i32 0, i32 1
  store i8* %296, i8** %371, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %291) #10
  %372 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %302, align 8
  %373 = icmp eq %"class.std::__1::__tree_node"* %372, null
  br i1 %373, label %402, label %374

374:                                              ; preds = %369
  %375 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %376

376:                                              ; preds = %398, %374
  %377 = phi %"class.std::__1::__tree_node"* [ %401, %398 ], [ %372, %374 ]
  %378 = phi %"class.std::__1::__tree_node_base"** [ %400, %398 ], [ %375, %374 ]
  %379 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %377, i64 0, i32 1, i32 0, i32 0
  %380 = load i32, i32* %379, align 4
  %381 = icmp ugt i32 %380, 283
  br i1 %381, label %382, label %388

382:                                              ; preds = %376
  %383 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %377, i64 0, i32 0, i32 0, i32 0
  %384 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %383, align 8
  %385 = icmp eq %"class.std::__1::__tree_node_base"* %384, null
  br i1 %385, label %386, label %398

386:                                              ; preds = %382
  %387 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %377, i64 0, i32 0, i32 0
  br label %404

388:                                              ; preds = %376
  %389 = icmp eq i32 %380, 283
  br i1 %389, label %396, label %390

390:                                              ; preds = %388
  %391 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %377, i64 0, i32 0, i32 1
  %392 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %391, align 8
  %393 = icmp eq %"class.std::__1::__tree_node_base"* %392, null
  br i1 %393, label %394, label %398

394:                                              ; preds = %390
  %395 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %377, i64 0, i32 0, i32 0
  br label %404

396:                                              ; preds = %388
  %397 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %377, i64 0, i32 0, i32 0
  br label %404

398:                                              ; preds = %390, %382
  %399 = phi %"class.std::__1::__tree_node_base"* [ %384, %382 ], [ %392, %390 ]
  %400 = phi %"class.std::__1::__tree_node_base"** [ %383, %382 ], [ %391, %390 ]
  %401 = bitcast %"class.std::__1::__tree_node_base"* %399 to %"class.std::__1::__tree_node"*
  br label %376

402:                                              ; preds = %369
  %403 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %301, i64 0, i32 0
  br label %404

404:                                              ; preds = %402, %396, %394, %386
  %405 = phi %"class.std::__1::__tree_end_node"* [ %301, %402 ], [ %387, %386 ], [ %395, %394 ], [ %397, %396 ]
  %406 = phi %"class.std::__1::__tree_node_base"** [ %403, %402 ], [ %383, %386 ], [ %391, %394 ], [ %378, %396 ]
  %407 = bitcast %"class.std::__1::__tree_node_base"** %406 to %"class.std::__1::__tree_node"**
  %408 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %407, align 8
  %409 = icmp eq %"class.std::__1::__tree_node"* %408, null
  br i1 %409, label %410, label %437

410:                                              ; preds = %404
  %411 = call i8* @_Znwm(i64 48) #12, !noalias !14
  %412 = getelementptr inbounds i8, i8* %411, i64 32
  %413 = bitcast i8* %412 to i32*
  store i32 283, i32* %413, align 8, !noalias !14
  %414 = getelementptr inbounds i8, i8* %411, i64 40
  %415 = bitcast i8* %414 to i8**
  store i8* null, i8** %415, align 8, !noalias !14
  %416 = bitcast i8* %411 to %"class.std::__1::__tree_node"*
  %417 = bitcast i8* %411 to %"class.std::__1::__tree_node_base"*
  %418 = getelementptr inbounds i8, i8* %411, i64 16
  %419 = bitcast i8* %418 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %411, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %405, %"class.std::__1::__tree_end_node"** %419, align 8
  %420 = bitcast %"class.std::__1::__tree_node_base"** %406 to i8**
  store i8* %411, i8** %420, align 8
  %421 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %300, i64 0, i32 0, i32 0
  %422 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %421, align 8
  %423 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %422, i64 0, i32 0
  %424 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %423, align 8
  %425 = icmp eq %"class.std::__1::__tree_node_base"* %424, null
  br i1 %425, label %430, label %426

426:                                              ; preds = %410
  %427 = ptrtoint %"class.std::__1::__tree_node_base"* %424 to i64
  %428 = bitcast %"class.std::__1::map"* %300 to i64*
  store i64 %427, i64* %428, align 8
  %429 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %406, align 8
  br label %430

430:                                              ; preds = %426, %410
  %431 = phi %"class.std::__1::__tree_node_base"* [ %417, %410 ], [ %429, %426 ]
  %432 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %433 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %432, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %433, %"class.std::__1::__tree_node_base"* %431) #10
  %434 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %435 = load i64, i64* %434, align 8
  %436 = add i64 %435, 1
  store i64 %436, i64* %434, align 8
  br label %437

437:                                              ; preds = %404, %430
  %438 = phi %"class.std::__1::__tree_node"* [ %416, %430 ], [ %408, %404 ]
  %439 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %438, i64 0, i32 1, i32 0, i32 1
  %440 = load i8*, i8** %439, align 8
  %441 = icmp eq i8* %440, null
  br i1 %441, label %447, label %442

442:                                              ; preds = %437
  %443 = bitcast i8* %440 to float*
  %444 = load float, float* %443, align 4
  %445 = fadd float %444, 5.000000e-01
  %446 = fptosi float %445 to i32
  br label %447

447:                                              ; preds = %437, %442
  %448 = phi i32 [ %446, %442 ], [ 0, %437 ]
  %449 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 1
  store i32 %448, i32* %449, align 4
  br label %450

450:                                              ; preds = %368, %447
  %451 = load %struct.tiff*, %struct.tiff** %19, align 8
  %452 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %452) #10
  store i8* null, i8** %8, align 8
  %453 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %451, i32 270, i8** nonnull %8) #10
  %454 = load i8*, i8** %8, align 8
  %455 = icmp eq i8* %454, null
  br i1 %455, label %533, label %456

456:                                              ; preds = %450
  %457 = call i64 @strlen(i8* nonnull %454) #11
  %458 = add i64 %457, 1
  %459 = call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %458, i64 1) #10
  %460 = load i8*, i8** %8, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %459, i8* align 1 %460, i64 %457, i1 false) #10
  %461 = getelementptr inbounds i8, i8* %459, i64 %457
  store i8 0, i8* %461, align 1
  %462 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3
  %463 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %464 = bitcast %"class.std::__1::__tree_end_node"* %463 to %"class.std::__1::__tree_node"**
  %465 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %464, align 8
  %466 = icmp eq %"class.std::__1::__tree_node"* %465, null
  br i1 %466, label %495, label %467

467:                                              ; preds = %456
  %468 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %469

469:                                              ; preds = %491, %467
  %470 = phi %"class.std::__1::__tree_node"* [ %494, %491 ], [ %465, %467 ]
  %471 = phi %"class.std::__1::__tree_node_base"** [ %493, %491 ], [ %468, %467 ]
  %472 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %470, i64 0, i32 1, i32 0, i32 0
  %473 = load i32, i32* %472, align 4
  %474 = icmp ugt i32 %473, 270
  br i1 %474, label %475, label %481

475:                                              ; preds = %469
  %476 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %470, i64 0, i32 0, i32 0, i32 0
  %477 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %476, align 8
  %478 = icmp eq %"class.std::__1::__tree_node_base"* %477, null
  br i1 %478, label %479, label %491

479:                                              ; preds = %475
  %480 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %470, i64 0, i32 0, i32 0
  br label %497

481:                                              ; preds = %469
  %482 = icmp eq i32 %473, 270
  br i1 %482, label %489, label %483

483:                                              ; preds = %481
  %484 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %470, i64 0, i32 0, i32 1
  %485 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %484, align 8
  %486 = icmp eq %"class.std::__1::__tree_node_base"* %485, null
  br i1 %486, label %487, label %491

487:                                              ; preds = %483
  %488 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %470, i64 0, i32 0, i32 0
  br label %497

489:                                              ; preds = %481
  %490 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %470, i64 0, i32 0, i32 0
  br label %497

491:                                              ; preds = %483, %475
  %492 = phi %"class.std::__1::__tree_node_base"* [ %477, %475 ], [ %485, %483 ]
  %493 = phi %"class.std::__1::__tree_node_base"** [ %476, %475 ], [ %484, %483 ]
  %494 = bitcast %"class.std::__1::__tree_node_base"* %492 to %"class.std::__1::__tree_node"*
  br label %469

495:                                              ; preds = %456
  %496 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %463, i64 0, i32 0
  br label %497

497:                                              ; preds = %495, %489, %487, %479
  %498 = phi %"class.std::__1::__tree_end_node"* [ %463, %495 ], [ %480, %479 ], [ %488, %487 ], [ %490, %489 ]
  %499 = phi %"class.std::__1::__tree_node_base"** [ %496, %495 ], [ %476, %479 ], [ %484, %487 ], [ %471, %489 ]
  %500 = bitcast %"class.std::__1::__tree_node_base"** %499 to %"class.std::__1::__tree_node"**
  %501 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %500, align 8
  %502 = icmp eq %"class.std::__1::__tree_node"* %501, null
  br i1 %502, label %503, label %530

503:                                              ; preds = %497
  %504 = call i8* @_Znwm(i64 48) #12, !noalias !17
  %505 = getelementptr inbounds i8, i8* %504, i64 32
  %506 = bitcast i8* %505 to i32*
  store i32 270, i32* %506, align 8, !noalias !17
  %507 = getelementptr inbounds i8, i8* %504, i64 40
  %508 = bitcast i8* %507 to i8**
  store i8* null, i8** %508, align 8, !noalias !17
  %509 = bitcast i8* %504 to %"class.std::__1::__tree_node"*
  %510 = bitcast i8* %504 to %"class.std::__1::__tree_node_base"*
  %511 = getelementptr inbounds i8, i8* %504, i64 16
  %512 = bitcast i8* %511 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %504, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %498, %"class.std::__1::__tree_end_node"** %512, align 8
  %513 = bitcast %"class.std::__1::__tree_node_base"** %499 to i8**
  store i8* %504, i8** %513, align 8
  %514 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %462, i64 0, i32 0, i32 0
  %515 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %514, align 8
  %516 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %515, i64 0, i32 0
  %517 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %516, align 8
  %518 = icmp eq %"class.std::__1::__tree_node_base"* %517, null
  br i1 %518, label %523, label %519

519:                                              ; preds = %503
  %520 = ptrtoint %"class.std::__1::__tree_node_base"* %517 to i64
  %521 = bitcast %"class.std::__1::map"* %462 to i64*
  store i64 %520, i64* %521, align 8
  %522 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %499, align 8
  br label %523

523:                                              ; preds = %519, %503
  %524 = phi %"class.std::__1::__tree_node_base"* [ %510, %503 ], [ %522, %519 ]
  %525 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %526 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %525, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %526, %"class.std::__1::__tree_node_base"* %524) #10
  %527 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %528 = load i64, i64* %527, align 8
  %529 = add i64 %528, 1
  store i64 %529, i64* %527, align 8
  br label %530

530:                                              ; preds = %497, %523
  %531 = phi %"class.std::__1::__tree_node"* [ %509, %523 ], [ %501, %497 ]
  %532 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %531, i64 0, i32 1, i32 0, i32 1
  store i8* %459, i8** %532, align 8
  br label %533

533:                                              ; preds = %450, %530
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %452) #10
  %534 = load %struct.tiff*, %struct.tiff** %19, align 8
  %535 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %535) #10
  store i8* null, i8** %12, align 8
  %536 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %534, i32 271, i8** nonnull %12) #10
  %537 = load i8*, i8** %12, align 8
  %538 = icmp eq i8* %537, null
  br i1 %538, label %616, label %539

539:                                              ; preds = %533
  %540 = call i64 @strlen(i8* nonnull %537) #11
  %541 = add i64 %540, 1
  %542 = call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %541, i64 1) #10
  %543 = load i8*, i8** %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %542, i8* align 1 %543, i64 %540, i1 false) #10
  %544 = getelementptr inbounds i8, i8* %542, i64 %540
  store i8 0, i8* %544, align 1
  %545 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3
  %546 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %547 = bitcast %"class.std::__1::__tree_end_node"* %546 to %"class.std::__1::__tree_node"**
  %548 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %547, align 8
  %549 = icmp eq %"class.std::__1::__tree_node"* %548, null
  br i1 %549, label %578, label %550

550:                                              ; preds = %539
  %551 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %552

552:                                              ; preds = %574, %550
  %553 = phi %"class.std::__1::__tree_node"* [ %577, %574 ], [ %548, %550 ]
  %554 = phi %"class.std::__1::__tree_node_base"** [ %576, %574 ], [ %551, %550 ]
  %555 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %553, i64 0, i32 1, i32 0, i32 0
  %556 = load i32, i32* %555, align 4
  %557 = icmp ugt i32 %556, 271
  br i1 %557, label %558, label %564

558:                                              ; preds = %552
  %559 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %553, i64 0, i32 0, i32 0, i32 0
  %560 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %559, align 8
  %561 = icmp eq %"class.std::__1::__tree_node_base"* %560, null
  br i1 %561, label %562, label %574

562:                                              ; preds = %558
  %563 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %553, i64 0, i32 0, i32 0
  br label %580

564:                                              ; preds = %552
  %565 = icmp eq i32 %556, 271
  br i1 %565, label %572, label %566

566:                                              ; preds = %564
  %567 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %553, i64 0, i32 0, i32 1
  %568 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %567, align 8
  %569 = icmp eq %"class.std::__1::__tree_node_base"* %568, null
  br i1 %569, label %570, label %574

570:                                              ; preds = %566
  %571 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %553, i64 0, i32 0, i32 0
  br label %580

572:                                              ; preds = %564
  %573 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %553, i64 0, i32 0, i32 0
  br label %580

574:                                              ; preds = %566, %558
  %575 = phi %"class.std::__1::__tree_node_base"* [ %560, %558 ], [ %568, %566 ]
  %576 = phi %"class.std::__1::__tree_node_base"** [ %559, %558 ], [ %567, %566 ]
  %577 = bitcast %"class.std::__1::__tree_node_base"* %575 to %"class.std::__1::__tree_node"*
  br label %552

578:                                              ; preds = %539
  %579 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %546, i64 0, i32 0
  br label %580

580:                                              ; preds = %578, %572, %570, %562
  %581 = phi %"class.std::__1::__tree_end_node"* [ %546, %578 ], [ %563, %562 ], [ %571, %570 ], [ %573, %572 ]
  %582 = phi %"class.std::__1::__tree_node_base"** [ %579, %578 ], [ %559, %562 ], [ %567, %570 ], [ %554, %572 ]
  %583 = bitcast %"class.std::__1::__tree_node_base"** %582 to %"class.std::__1::__tree_node"**
  %584 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %583, align 8
  %585 = icmp eq %"class.std::__1::__tree_node"* %584, null
  br i1 %585, label %586, label %613

586:                                              ; preds = %580
  %587 = call i8* @_Znwm(i64 48) #12, !noalias !20
  %588 = getelementptr inbounds i8, i8* %587, i64 32
  %589 = bitcast i8* %588 to i32*
  store i32 271, i32* %589, align 8, !noalias !20
  %590 = getelementptr inbounds i8, i8* %587, i64 40
  %591 = bitcast i8* %590 to i8**
  store i8* null, i8** %591, align 8, !noalias !20
  %592 = bitcast i8* %587 to %"class.std::__1::__tree_node"*
  %593 = bitcast i8* %587 to %"class.std::__1::__tree_node_base"*
  %594 = getelementptr inbounds i8, i8* %587, i64 16
  %595 = bitcast i8* %594 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %587, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %581, %"class.std::__1::__tree_end_node"** %595, align 8
  %596 = bitcast %"class.std::__1::__tree_node_base"** %582 to i8**
  store i8* %587, i8** %596, align 8
  %597 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %545, i64 0, i32 0, i32 0
  %598 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %597, align 8
  %599 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %598, i64 0, i32 0
  %600 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %599, align 8
  %601 = icmp eq %"class.std::__1::__tree_node_base"* %600, null
  br i1 %601, label %606, label %602

602:                                              ; preds = %586
  %603 = ptrtoint %"class.std::__1::__tree_node_base"* %600 to i64
  %604 = bitcast %"class.std::__1::map"* %545 to i64*
  store i64 %603, i64* %604, align 8
  %605 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %582, align 8
  br label %606

606:                                              ; preds = %602, %586
  %607 = phi %"class.std::__1::__tree_node_base"* [ %593, %586 ], [ %605, %602 ]
  %608 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %609 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %608, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %609, %"class.std::__1::__tree_node_base"* %607) #10
  %610 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %611 = load i64, i64* %610, align 8
  %612 = add i64 %611, 1
  store i64 %612, i64* %610, align 8
  br label %613

613:                                              ; preds = %580, %606
  %614 = phi %"class.std::__1::__tree_node"* [ %592, %606 ], [ %584, %580 ]
  %615 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %614, i64 0, i32 1, i32 0, i32 1
  store i8* %542, i8** %615, align 8
  br label %616

616:                                              ; preds = %533, %613
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %535) #10
  %617 = load %struct.tiff*, %struct.tiff** %19, align 8
  %618 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %618) #10
  store i8* null, i8** %13, align 8
  %619 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %617, i32 272, i8** nonnull %13) #10
  %620 = load i8*, i8** %13, align 8
  %621 = icmp eq i8* %620, null
  br i1 %621, label %699, label %622

622:                                              ; preds = %616
  %623 = call i64 @strlen(i8* nonnull %620) #11
  %624 = add i64 %623, 1
  %625 = call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %624, i64 1) #10
  %626 = load i8*, i8** %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %625, i8* align 1 %626, i64 %623, i1 false) #10
  %627 = getelementptr inbounds i8, i8* %625, i64 %623
  store i8 0, i8* %627, align 1
  %628 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3
  %629 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %630 = bitcast %"class.std::__1::__tree_end_node"* %629 to %"class.std::__1::__tree_node"**
  %631 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %630, align 8
  %632 = icmp eq %"class.std::__1::__tree_node"* %631, null
  br i1 %632, label %661, label %633

633:                                              ; preds = %622
  %634 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %635

635:                                              ; preds = %657, %633
  %636 = phi %"class.std::__1::__tree_node"* [ %660, %657 ], [ %631, %633 ]
  %637 = phi %"class.std::__1::__tree_node_base"** [ %659, %657 ], [ %634, %633 ]
  %638 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %636, i64 0, i32 1, i32 0, i32 0
  %639 = load i32, i32* %638, align 4
  %640 = icmp ugt i32 %639, 272
  br i1 %640, label %641, label %647

641:                                              ; preds = %635
  %642 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %636, i64 0, i32 0, i32 0, i32 0
  %643 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %642, align 8
  %644 = icmp eq %"class.std::__1::__tree_node_base"* %643, null
  br i1 %644, label %645, label %657

645:                                              ; preds = %641
  %646 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %636, i64 0, i32 0, i32 0
  br label %663

647:                                              ; preds = %635
  %648 = icmp eq i32 %639, 272
  br i1 %648, label %655, label %649

649:                                              ; preds = %647
  %650 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %636, i64 0, i32 0, i32 1
  %651 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %650, align 8
  %652 = icmp eq %"class.std::__1::__tree_node_base"* %651, null
  br i1 %652, label %653, label %657

653:                                              ; preds = %649
  %654 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %636, i64 0, i32 0, i32 0
  br label %663

655:                                              ; preds = %647
  %656 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %636, i64 0, i32 0, i32 0
  br label %663

657:                                              ; preds = %649, %641
  %658 = phi %"class.std::__1::__tree_node_base"* [ %643, %641 ], [ %651, %649 ]
  %659 = phi %"class.std::__1::__tree_node_base"** [ %642, %641 ], [ %650, %649 ]
  %660 = bitcast %"class.std::__1::__tree_node_base"* %658 to %"class.std::__1::__tree_node"*
  br label %635

661:                                              ; preds = %622
  %662 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %629, i64 0, i32 0
  br label %663

663:                                              ; preds = %661, %655, %653, %645
  %664 = phi %"class.std::__1::__tree_end_node"* [ %629, %661 ], [ %646, %645 ], [ %654, %653 ], [ %656, %655 ]
  %665 = phi %"class.std::__1::__tree_node_base"** [ %662, %661 ], [ %642, %645 ], [ %650, %653 ], [ %637, %655 ]
  %666 = bitcast %"class.std::__1::__tree_node_base"** %665 to %"class.std::__1::__tree_node"**
  %667 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %666, align 8
  %668 = icmp eq %"class.std::__1::__tree_node"* %667, null
  br i1 %668, label %669, label %696

669:                                              ; preds = %663
  %670 = call i8* @_Znwm(i64 48) #12, !noalias !23
  %671 = getelementptr inbounds i8, i8* %670, i64 32
  %672 = bitcast i8* %671 to i32*
  store i32 272, i32* %672, align 8, !noalias !23
  %673 = getelementptr inbounds i8, i8* %670, i64 40
  %674 = bitcast i8* %673 to i8**
  store i8* null, i8** %674, align 8, !noalias !23
  %675 = bitcast i8* %670 to %"class.std::__1::__tree_node"*
  %676 = bitcast i8* %670 to %"class.std::__1::__tree_node_base"*
  %677 = getelementptr inbounds i8, i8* %670, i64 16
  %678 = bitcast i8* %677 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %670, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %664, %"class.std::__1::__tree_end_node"** %678, align 8
  %679 = bitcast %"class.std::__1::__tree_node_base"** %665 to i8**
  store i8* %670, i8** %679, align 8
  %680 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %628, i64 0, i32 0, i32 0
  %681 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %680, align 8
  %682 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %681, i64 0, i32 0
  %683 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %682, align 8
  %684 = icmp eq %"class.std::__1::__tree_node_base"* %683, null
  br i1 %684, label %689, label %685

685:                                              ; preds = %669
  %686 = ptrtoint %"class.std::__1::__tree_node_base"* %683 to i64
  %687 = bitcast %"class.std::__1::map"* %628 to i64*
  store i64 %686, i64* %687, align 8
  %688 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %665, align 8
  br label %689

689:                                              ; preds = %685, %669
  %690 = phi %"class.std::__1::__tree_node_base"* [ %676, %669 ], [ %688, %685 ]
  %691 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %692 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %691, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %692, %"class.std::__1::__tree_node_base"* %690) #10
  %693 = getelementptr inbounds %"class.fxcodec::CFX_DIBAttribute", %"class.fxcodec::CFX_DIBAttribute"* %6, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %694 = load i64, i64* %693, align 8
  %695 = add i64 %694, 1
  store i64 %695, i64* %693, align 8
  br label %696

696:                                              ; preds = %663, %689
  %697 = phi %"class.std::__1::__tree_node"* [ %675, %689 ], [ %667, %663 ]
  %698 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %697, i64 0, i32 1, i32 0, i32 1
  store i8* %625, i8** %698, align 8
  br label %699

699:                                              ; preds = %616, %696
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %618) #10
  %700 = load i32, i32* %14, align 4
  %701 = load i32, i32* %15, align 4
  %702 = or i32 %701, %700
  %703 = icmp sgt i32 %702, -1
  br i1 %703, label %704, label %714

704:                                              ; preds = %699
  store i32 %700, i32* %2, align 4
  store i32 %701, i32* %3, align 4
  %705 = load i16, i16* %16, align 2
  %706 = zext i16 %705 to i32
  store i32 %706, i32* %4, align 4
  %707 = load i16, i16* %17, align 2
  %708 = zext i16 %707 to i32
  store i32 %708, i32* %5, align 4
  %709 = load i32, i32* %18, align 4
  %710 = icmp ugt i32 %709, %701
  br i1 %710, label %711, label %714

711:                                              ; preds = %704
  store i32 %701, i32* %18, align 4
  %712 = load %struct.tiff*, %struct.tiff** %19, align 8
  %713 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %712, i32 278, i32 %701) #10
  br label %714

714:                                              ; preds = %704, %711, %699
  %715 = phi i1 [ false, %699 ], [ true, %711 ], [ true, %704 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #10
  br label %716

716:                                              ; preds = %7, %714
  %717 = phi i1 [ %715, %714 ], [ false, %7 ]
  ret i1 %717
}

declare i32 @TIFFSetDirectory(%struct.tiff*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @TIFFGetField(%struct.tiff*, i32, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @TIFFSetField(%struct.tiff*, i32, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12CTiffContext9IsSupportERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CTiffContext* nocapture readonly, %"class.fxcrt::RetainPtr.12"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %struct.tiff*, %struct.tiff** %5, align 8
  %7 = tail call i32 @TIFFIsTiled(%struct.tiff* %6) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %36

9:                                                ; preds = %2
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10) #10
  store i16 0, i16* %3, align 2
  %11 = load %struct.tiff*, %struct.tiff** %5, align 8
  %12 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %11, i32 262, i16* nonnull %3) #10
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %34, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.fxcrt::RetainPtr.12", %"class.fxcrt::RetainPtr.12"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %15, align 8
  %17 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %16, i64 0, i32 0, i32 1
  %18 = load i16, i16* %17, align 8
  %19 = trunc i16 %18 to i8
  switch i8 %19, label %34 [
    i8 1, label %20
    i8 8, label %20
    i8 24, label %23
  ]

20:                                               ; preds = %14, %14
  %21 = load i16, i16* %3, align 2
  %22 = icmp eq i16 %21, 3
  br i1 %22, label %26, label %34

23:                                               ; preds = %14
  %24 = load i16, i16* %3, align 2
  %25 = icmp eq i16 %24, 2
  br i1 %25, label %26, label %34

26:                                               ; preds = %20, %23
  %27 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %27) #10
  store i16 0, i16* %4, align 2
  %28 = load %struct.tiff*, %struct.tiff** %5, align 8
  %29 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %28, i32 284, i16* nonnull %4) #10
  %30 = icmp ne i32 %29, 0
  %31 = load i16, i16* %4, align 2
  %32 = icmp ne i16 %31, 2
  %33 = and i1 %30, %32
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %27) #10
  br label %34

34:                                               ; preds = %14, %23, %20, %9, %26
  %35 = phi i1 [ %33, %26 ], [ false, %9 ], [ false, %20 ], [ false, %23 ], [ false, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10) #10
  br label %36

36:                                               ; preds = %2, %34
  %37 = phi i1 [ %35, %34 ], [ false, %2 ]
  ret i1 %37
}

declare i32 @TIFFIsTiled(%struct.tiff*) local_unnamed_addr #1

declare i32 @TIFFGetFieldDefaulted(%struct.tiff*, i32, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CTiffContext10SetPaletteERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEt(%class.CTiffContext* nocapture readonly, %"class.fxcrt::RetainPtr.12"* nocapture readonly dereferenceable(8), i16 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i16*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  store i16* null, i16** %4, align 8
  %8 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  store i16* null, i16** %5, align 8
  %9 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  store i16* null, i16** %6, align 8
  %10 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %struct.tiff*, %struct.tiff** %10, align 8
  %12 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %11, i32 320, i16** nonnull %4, i16** nonnull %5, i16** nonnull %6) #10
  %13 = zext i16 %2 to i32
  %14 = zext i16 %2 to i64
  %15 = shl nsw i64 -1, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %3
  %19 = shl i64 %15, 32
  %20 = ashr exact i64 %19, 32
  %21 = xor i64 %20, -1
  br label %28

22:                                               ; preds = %28, %3
  %23 = icmp eq i16 %2, 31
  br i1 %23, label %44, label %24

24:                                               ; preds = %22
  %25 = shl i32 1, %13
  %26 = getelementptr inbounds %"class.fxcrt::RetainPtr.12", %"class.fxcrt::RetainPtr.12"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = sext i32 %25 to i64
  br label %45

28:                                               ; preds = %18, %28
  %29 = phi i64 [ %21, %18 ], [ %42, %28 ]
  %30 = load i16*, i16** %4, align 8
  %31 = getelementptr inbounds i16, i16* %30, i64 %29
  %32 = load i16, i16* %31, align 2
  %33 = lshr i16 %32, 8
  store i16 %33, i16* %31, align 2
  %34 = load i16*, i16** %5, align 8
  %35 = getelementptr inbounds i16, i16* %34, i64 %29
  %36 = load i16, i16* %35, align 2
  %37 = lshr i16 %36, 8
  store i16 %37, i16* %35, align 2
  %38 = load i16*, i16** %6, align 8
  %39 = getelementptr inbounds i16, i16* %38, i64 %29
  %40 = load i16, i16* %39, align 2
  %41 = lshr i16 %40, 8
  store i16 %41, i16* %39, align 2
  %42 = add nsw i64 %29, -1
  %43 = icmp sgt i64 %29, 0
  br i1 %43, label %28, label %22

44:                                               ; preds = %45, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void

45:                                               ; preds = %24, %45
  %46 = phi i64 [ 0, %24 ], [ %68, %45 ]
  %47 = load i16*, i16** %4, align 8
  %48 = getelementptr inbounds i16, i16* %47, i64 %46
  %49 = load i16, i16* %48, align 2
  %50 = and i16 %49, 255
  %51 = zext i16 %50 to i32
  %52 = load i16*, i16** %5, align 8
  %53 = getelementptr inbounds i16, i16* %52, i64 %46
  %54 = load i16, i16* %53, align 2
  %55 = load i16*, i16** %6, align 8
  %56 = getelementptr inbounds i16, i16* %55, i64 %46
  %57 = load i16, i16* %56, align 2
  %58 = and i16 %57, 255
  %59 = shl i16 %54, 8
  %60 = or i16 %58, %59
  %61 = zext i16 %60 to i32
  %62 = shl nuw nsw i32 %51, 16
  %63 = or i32 %62, %61
  %64 = or i32 %63, -16777216
  %65 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %26, align 8
  %66 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %65, i64 0, i32 0
  %67 = trunc i64 %46 to i32
  call void @_ZN11CFX_DIBBase14SetPaletteArgbEij(%class.CFX_DIBBase* %66, i32 %67, i32 %64) #10
  %68 = add nuw nsw i64 %46, 1
  %69 = icmp slt i64 %68, %27
  br i1 %69, label %45, label %44
}

declare void @_ZN11CFX_DIBBase14SetPaletteArgbEij(%class.CFX_DIBBase*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CTiffContext13Decode1bppRGBERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiitt(%class.CTiffContext* nocapture readonly, %"class.fxcrt::RetainPtr.12"* nocapture readonly dereferenceable(8), i32, i32, i16 zeroext, i16 zeroext) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.fxcrt::RetainPtr.12", %"class.fxcrt::RetainPtr.12"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %9 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 1
  %10 = load i16, i16* %9, align 8
  %11 = and i16 %10, 255
  %12 = icmp eq i16 %11, 1
  %13 = icmp eq i16 %5, 1
  %14 = and i1 %13, %12
  %15 = icmp eq i16 %4, 1
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %148

17:                                               ; preds = %6
  %18 = tail call zeroext i1 @_ZNK12CTiffContext9IsSupportERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CTiffContext* %0, %"class.fxcrt::RetainPtr.12"* dereferenceable(8) %1)
  br i1 %18, label %19, label %148

19:                                               ; preds = %17
  tail call void @_ZN12CTiffContext10SetPaletteERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEt(%class.CTiffContext* %0, %"class.fxcrt::RetainPtr.12"* dereferenceable(8) %1, i16 zeroext 1)
  %20 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %struct.tiff*, %struct.tiff** %20, align 8
  %22 = tail call i64 @TIFFScanlineSize(%struct.tiff* %21) #10
  %23 = trunc i64 %22 to i32
  %24 = shl i64 %22, 32
  %25 = ashr exact i64 %24, 32
  %26 = tail call i8* @FXMEM_DefaultAlloc(i64 %25) #10
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %31

28:                                               ; preds = %19
  %29 = load %struct.tiff*, %struct.tiff** %20, align 8
  %30 = tail call i8* @TIFFFileName(%struct.tiff* %29) #10
  tail call void (i8*, i8*, ...) @TIFFError(i8* %30, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #10
  br label %148

31:                                               ; preds = %19
  %32 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %33 = bitcast %class.CFX_DIBitmap* %32 to i8* (%class.CFX_DIBitmap*)***
  %34 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %33, align 8
  %35 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %34, i64 2
  %36 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %35, align 8
  %37 = tail call i8* %36(%class.CFX_DIBitmap* %32) #10
  %38 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %39 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %38, i64 0, i32 0, i32 4
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %2, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %31
  %43 = icmp sgt i32 %23, 0
  %44 = and i64 %22, 4294967295
  %45 = add nsw i64 %44, -1
  %46 = getelementptr i8, i8* %26, i64 %44
  %47 = getelementptr i8, i8* %37, i64 %44
  %48 = icmp ult i64 %44, 32
  %49 = trunc i64 %45 to i32
  %50 = icmp ugt i64 %45, 4294967295
  %51 = and i64 %22, 31
  %52 = sub nsw i64 %44, %51
  %53 = icmp eq i64 %51, 0
  br label %55

54:                                               ; preds = %114, %31
  tail call void @FXMEM_DefaultFree(i8* nonnull %26) #10
  br label %148

55:                                               ; preds = %114, %42
  %56 = phi i32 [ 0, %42 ], [ %115, %114 ]
  %57 = mul i32 %40, %56
  %58 = zext i32 %57 to i64
  %59 = getelementptr i8, i8* %37, i64 %58
  %60 = getelementptr i8, i8* %47, i64 %58
  %61 = mul i32 %40, %56
  %62 = load %struct.tiff*, %struct.tiff** %20, align 8
  %63 = tail call i32 @TIFFReadScanline(%struct.tiff* %62, i8* nonnull %26, i32 %56, i16 zeroext 0) #10
  br i1 %43, label %64, label %114

64:                                               ; preds = %55
  %65 = mul i32 %56, %40
  br i1 %48, label %66, label %88

66:                                               ; preds = %113, %92, %88, %64
  %67 = phi i64 [ 0, %92 ], [ 0, %88 ], [ 0, %64 ], [ %52, %113 ]
  %68 = sub i64 %22, %67
  %69 = xor i64 %67, -1
  %70 = add nsw i64 %44, %69
  %71 = and i64 %68, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %85, label %73

73:                                               ; preds = %66, %73
  %74 = phi i64 [ %82, %73 ], [ %67, %66 ]
  %75 = phi i64 [ %83, %73 ], [ %71, %66 ]
  %76 = getelementptr inbounds i8, i8* %26, i64 %74
  %77 = load i8, i8* %76, align 1
  %78 = trunc i64 %74 to i32
  %79 = add i32 %65, %78
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %37, i64 %80
  store i8 %77, i8* %81, align 1
  %82 = add nuw nsw i64 %74, 1
  %83 = add i64 %75, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %73, !llvm.loop !26

85:                                               ; preds = %73, %66
  %86 = phi i64 [ %67, %66 ], [ %82, %73 ]
  %87 = icmp ult i64 %70, 3
  br i1 %87, label %114, label %117

88:                                               ; preds = %64
  %89 = xor i32 %61, -1
  %90 = icmp ult i32 %89, %49
  %91 = or i1 %90, %50
  br i1 %91, label %66, label %92

92:                                               ; preds = %88
  %93 = icmp ult i8* %26, %60
  %94 = icmp ult i8* %59, %46
  %95 = and i1 %93, %94
  br i1 %95, label %66, label %96

96:                                               ; preds = %92, %96
  %97 = phi i64 [ %111, %96 ], [ 0, %92 ]
  %98 = getelementptr inbounds i8, i8* %26, i64 %97
  %99 = bitcast i8* %98 to <16 x i8>*
  %100 = load <16 x i8>, <16 x i8>* %99, align 1, !alias.scope !28, !noalias !31
  %101 = getelementptr inbounds i8, i8* %98, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !alias.scope !28, !noalias !31
  %104 = trunc i64 %97 to i32
  %105 = add i32 %65, %104
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %37, i64 %106
  %108 = bitcast i8* %107 to <16 x i8>*
  store <16 x i8> %100, <16 x i8>* %108, align 1, !alias.scope !31
  %109 = getelementptr inbounds i8, i8* %107, i64 16
  %110 = bitcast i8* %109 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %110, align 1, !alias.scope !31
  %111 = add i64 %97, 32
  %112 = icmp eq i64 %111, %52
  br i1 %112, label %113, label %96, !llvm.loop !33

113:                                              ; preds = %96
  br i1 %53, label %114, label %66

114:                                              ; preds = %85, %117, %113, %55
  %115 = add nuw nsw i32 %56, 1
  %116 = icmp eq i32 %115, %2
  br i1 %116, label %54, label %55

117:                                              ; preds = %85, %117
  %118 = phi i64 [ %146, %117 ], [ %86, %85 ]
  %119 = getelementptr inbounds i8, i8* %26, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = trunc i64 %118 to i32
  %122 = add i32 %65, %121
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %37, i64 %123
  store i8 %120, i8* %124, align 1
  %125 = add nuw nsw i64 %118, 1
  %126 = getelementptr inbounds i8, i8* %26, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = trunc i64 %125 to i32
  %129 = add i32 %65, %128
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* %37, i64 %130
  store i8 %127, i8* %131, align 1
  %132 = add nuw nsw i64 %118, 2
  %133 = getelementptr inbounds i8, i8* %26, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = trunc i64 %132 to i32
  %136 = add i32 %65, %135
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %37, i64 %137
  store i8 %134, i8* %138, align 1
  %139 = add nuw nsw i64 %118, 3
  %140 = getelementptr inbounds i8, i8* %26, i64 %139
  %141 = load i8, i8* %140, align 1
  %142 = trunc i64 %139 to i32
  %143 = add i32 %65, %142
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds i8, i8* %37, i64 %144
  store i8 %141, i8* %145, align 1
  %146 = add nuw nsw i64 %118, 4
  %147 = icmp eq i64 %146, %44
  br i1 %147, label %114, label %117, !llvm.loop !35

148:                                              ; preds = %28, %54, %17, %6
  %149 = phi i1 [ false, %6 ], [ false, %17 ], [ true, %54 ], [ false, %28 ]
  ret i1 %149
}

declare i64 @TIFFScanlineSize(%struct.tiff*) local_unnamed_addr #1

declare void @TIFFError(i8*, i8*, ...) local_unnamed_addr #1

declare i8* @TIFFFileName(%struct.tiff*) local_unnamed_addr #1

declare i32 @TIFFReadScanline(%struct.tiff*, i8*, i32, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CTiffContext13Decode8bppRGBERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiitt(%class.CTiffContext* nocapture readonly, %"class.fxcrt::RetainPtr.12"* nocapture readonly dereferenceable(8), i32, i32, i16 zeroext, i16 zeroext) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.fxcrt::RetainPtr.12", %"class.fxcrt::RetainPtr.12"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %9 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 1
  %10 = load i16, i16* %9, align 8
  %11 = and i16 %10, 255
  %12 = icmp eq i16 %11, 8
  %13 = icmp eq i16 %5, 1
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %81

15:                                               ; preds = %6
  switch i16 %4, label %81 [
    i16 4, label %16
    i16 8, label %16
  ]

16:                                               ; preds = %15, %15
  %17 = tail call zeroext i1 @_ZNK12CTiffContext9IsSupportERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CTiffContext* %0, %"class.fxcrt::RetainPtr.12"* dereferenceable(8) %1)
  br i1 %17, label %18, label %81

18:                                               ; preds = %16
  tail call void @_ZN12CTiffContext10SetPaletteERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEt(%class.CTiffContext* %0, %"class.fxcrt::RetainPtr.12"* dereferenceable(8) %1, i16 zeroext %4)
  %19 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %struct.tiff*, %struct.tiff** %19, align 8
  %21 = tail call i64 @TIFFScanlineSize(%struct.tiff* %20) #10
  %22 = trunc i64 %21 to i32
  %23 = shl i64 %21, 32
  %24 = ashr exact i64 %23, 32
  %25 = tail call i8* @FXMEM_DefaultAlloc(i64 %24) #10
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %18
  %28 = load %struct.tiff*, %struct.tiff** %19, align 8
  %29 = tail call i8* @TIFFFileName(%struct.tiff* %28) #10
  tail call void (i8*, i8*, ...) @TIFFError(i8* %29, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #10
  br label %81

30:                                               ; preds = %18
  %31 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %32 = bitcast %class.CFX_DIBitmap* %31 to i8* (%class.CFX_DIBitmap*)***
  %33 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %32, align 8
  %34 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %33, i64 2
  %35 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %34, align 8
  %36 = tail call i8* %35(%class.CFX_DIBitmap* %31) #10
  %37 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %38 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %37, i64 0, i32 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %2, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %30
  %42 = icmp sgt i32 %22, 0
  %43 = and i64 %21, 4294967295
  br label %45

44:                                               ; preds = %51, %30
  tail call void @FXMEM_DefaultFree(i8* nonnull %25) #10
  br label %81

45:                                               ; preds = %51, %41
  %46 = phi i32 [ 0, %41 ], [ %52, %51 ]
  %47 = load %struct.tiff*, %struct.tiff** %19, align 8
  %48 = tail call i32 @TIFFReadScanline(%struct.tiff* %47, i8* nonnull %25, i32 %46, i16 zeroext 0) #10
  br i1 %42, label %49, label %51

49:                                               ; preds = %45
  %50 = mul i32 %46, %39
  br label %54

51:                                               ; preds = %78, %45
  %52 = add nuw nsw i32 %46, 1
  %53 = icmp eq i32 %52, %2
  br i1 %53, label %44, label %45

54:                                               ; preds = %78, %49
  %55 = phi i64 [ 0, %49 ], [ %79, %78 ]
  switch i16 %4, label %78 [
    i16 4, label %56
    i16 8, label %68
  ]

56:                                               ; preds = %54
  %57 = getelementptr inbounds i8, i8* %25, i64 %55
  %58 = load i8, i8* %57, align 1
  %59 = lshr i8 %58, 4
  %60 = trunc i64 %55 to i32
  %61 = shl i32 %60, 1
  %62 = add i32 %61, %50
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %36, i64 %63
  store i8 %59, i8* %64, align 1
  %65 = load i8, i8* %57, align 1
  %66 = and i8 %65, 15
  %67 = add i32 %62, 1
  br label %73

68:                                               ; preds = %54
  %69 = getelementptr inbounds i8, i8* %25, i64 %55
  %70 = load i8, i8* %69, align 1
  %71 = trunc i64 %55 to i32
  %72 = add i32 %50, %71
  br label %73

73:                                               ; preds = %68, %56
  %74 = phi i32 [ %67, %56 ], [ %72, %68 ]
  %75 = phi i8 [ %66, %56 ], [ %70, %68 ]
  %76 = zext i32 %74 to i64
  %77 = getelementptr inbounds i8, i8* %36, i64 %76
  store i8 %75, i8* %77, align 1
  br label %78

78:                                               ; preds = %73, %54
  %79 = add nuw nsw i64 %55, 1
  %80 = icmp eq i64 %79, %43
  br i1 %80, label %51, label %54

81:                                               ; preds = %27, %44, %16, %6, %15
  %82 = phi i1 [ false, %15 ], [ false, %6 ], [ false, %16 ], [ true, %44 ], [ false, %27 ]
  ret i1 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CTiffContext14Decode24bppRGBERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiitt(%class.CTiffContext* nocapture readonly, %"class.fxcrt::RetainPtr.12"* nocapture readonly dereferenceable(8), i32, i32, i16 zeroext, i16 zeroext) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.fxcrt::RetainPtr.12", %"class.fxcrt::RetainPtr.12"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %9 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 1
  %10 = load i16, i16* %9, align 8
  %11 = and i16 %10, 255
  %12 = icmp eq i16 %11, 24
  br i1 %12, label %13, label %74

13:                                               ; preds = %6
  %14 = tail call zeroext i1 @_ZNK12CTiffContext9IsSupportERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CTiffContext* %0, %"class.fxcrt::RetainPtr.12"* dereferenceable(8) %1)
  br i1 %14, label %15, label %74

15:                                               ; preds = %13
  %16 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %struct.tiff*, %struct.tiff** %16, align 8
  %18 = tail call i64 @TIFFScanlineSize(%struct.tiff* %17) #10
  %19 = trunc i64 %18 to i32
  %20 = shl i64 %18, 32
  %21 = ashr exact i64 %20, 32
  %22 = tail call i8* @FXMEM_DefaultAlloc(i64 %21) #10
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %15
  %25 = load %struct.tiff*, %struct.tiff** %16, align 8
  %26 = tail call i8* @TIFFFileName(%struct.tiff* %25) #10
  tail call void (i8*, i8*, ...) @TIFFError(i8* %26, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #10
  br label %74

27:                                               ; preds = %15
  %28 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %29 = bitcast %class.CFX_DIBitmap* %28 to i8* (%class.CFX_DIBitmap*)***
  %30 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %29, align 8
  %31 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %30, i64 2
  %32 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %31, align 8
  %33 = tail call i8* %32(%class.CFX_DIBitmap* %28) #10
  %34 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %35 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %34, i64 0, i32 0, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %2, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %27
  %39 = add nsw i32 %19, -2
  %40 = icmp sgt i32 %39, 0
  %41 = sext i32 %39 to i64
  br label %43

42:                                               ; preds = %49, %27
  tail call void @FXMEM_DefaultFree(i8* nonnull %22) #10
  br label %74

43:                                               ; preds = %49, %38
  %44 = phi i32 [ 0, %38 ], [ %50, %49 ]
  %45 = load %struct.tiff*, %struct.tiff** %16, align 8
  %46 = tail call i32 @TIFFReadScanline(%struct.tiff* %45, i8* nonnull %22, i32 %44, i16 zeroext 0) #10
  br i1 %40, label %47, label %49

47:                                               ; preds = %43
  %48 = mul i32 %44, %36
  br label %52

49:                                               ; preds = %52, %43
  %50 = add nuw nsw i32 %44, 1
  %51 = icmp eq i32 %50, %2
  br i1 %51, label %42, label %43

52:                                               ; preds = %47, %52
  %53 = phi i64 [ 0, %47 ], [ %72, %52 ]
  %54 = add nuw nsw i64 %53, 2
  %55 = getelementptr inbounds i8, i8* %22, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = trunc i64 %53 to i32
  %58 = add i32 %48, %57
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %33, i64 %59
  store i8 %56, i8* %60, align 1
  %61 = add nuw nsw i64 %53, 1
  %62 = getelementptr inbounds i8, i8* %22, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = add i32 %58, 1
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %33, i64 %65
  store i8 %63, i8* %66, align 1
  %67 = getelementptr inbounds i8, i8* %22, i64 %53
  %68 = load i8, i8* %67, align 1
  %69 = add i32 %58, 2
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %33, i64 %70
  store i8 %68, i8* %71, align 1
  %72 = add nuw nsw i64 %53, 3
  %73 = icmp slt i64 %72, %41
  br i1 %73, label %52, label %49

74:                                               ; preds = %24, %42, %13, %6
  %75 = phi i1 [ false, %6 ], [ false, %13 ], [ true, %42 ], [ false, %24 ]
  ret i1 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CTiffContext6DecodeERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CTiffContext* nocapture readonly, %"class.fxcrt::RetainPtr.12"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = getelementptr inbounds %"class.fxcrt::RetainPtr.12", %"class.fxcrt::RetainPtr.12"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %8, align 8
  %10 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %9, i64 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %9, i64 0, i32 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #10
  store i32 0, i32* %3, align 4
  %15 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #10
  store i32 0, i32* %4, align 4
  %16 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %struct.tiff*, %struct.tiff** %16, align 8
  %18 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %17, i32 256, i32* nonnull %3) #10
  %19 = load %struct.tiff*, %struct.tiff** %16, align 8
  %20 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %19, i32 257, i32* nonnull %4) #10
  %21 = load i32, i32* %3, align 4
  %22 = icmp eq i32 %11, %21
  %23 = load i32, i32* %4, align 4
  %24 = icmp eq i32 %13, %23
  %25 = and i1 %22, %24
  br i1 %25, label %26, label %134

26:                                               ; preds = %2
  %27 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %8, align 8
  %28 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %27, i64 0, i32 0, i32 1
  %29 = load i16, i16* %28, align 8
  %30 = and i16 %29, 255
  %31 = icmp eq i16 %30, 32
  br i1 %31, label %32, label %103

32:                                               ; preds = %26
  %33 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %33) #10
  store i16 1, i16* %5, align 2
  %34 = load %struct.tiff*, %struct.tiff** %16, align 8
  %35 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %34, i32 274, i16* nonnull %5) #10
  %36 = load %struct.tiff*, %struct.tiff** %16, align 8
  %37 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %8, align 8
  %38 = bitcast %class.CFX_DIBitmap* %37 to i8* (%class.CFX_DIBitmap*)***
  %39 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %38, align 8
  %40 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %39, i64 2
  %41 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %40, align 8
  %42 = call i8* %41(%class.CFX_DIBitmap* %37) #10
  %43 = bitcast i8* %42 to i32*
  %44 = load i16, i16* %5, align 2
  %45 = zext i16 %44 to i32
  %46 = call i32 @TIFFReadRGBAImageOriented(%struct.tiff* %36, i32 %11, i32 %13, i32* %43, i32 %45, i32 1) #10
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %102, label %48

48:                                               ; preds = %32
  %49 = icmp eq i32 %13, 0
  br i1 %49, label %131, label %50

50:                                               ; preds = %48
  %51 = icmp sgt i32 %11, 0
  %52 = add i32 %11, -1
  %53 = and i32 %11, 3
  %54 = icmp ult i32 %52, 3
  %55 = sub i32 %11, %53
  %56 = icmp eq i32 %53, 0
  br label %57

57:                                               ; preds = %99, %50
  %58 = phi i32 [ 0, %50 ], [ %100, %99 ]
  %59 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %8, align 8
  %60 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %59, i64 0, i32 0
  %61 = bitcast %class.CFX_DIBitmap* %59 to i8* (%class.CFX_DIBBase*, i32)***
  %62 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %61, align 8
  %63 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %62, i64 3
  %64 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %63, align 8
  %65 = call i8* %64(%class.CFX_DIBBase* %60, i32 %58) #10
  br i1 %51, label %66, label %99

66:                                               ; preds = %57
  br i1 %54, label %88, label %67

67:                                               ; preds = %66, %67
  %68 = phi i8* [ %85, %67 ], [ %65, %66 ]
  %69 = phi i32 [ %86, %67 ], [ %55, %66 ]
  %70 = load i8, i8* %68, align 1
  %71 = getelementptr inbounds i8, i8* %68, i64 2
  %72 = load i8, i8* %71, align 1
  store i8 %72, i8* %68, align 1
  store i8 %70, i8* %71, align 1
  %73 = getelementptr inbounds i8, i8* %68, i64 4
  %74 = load i8, i8* %73, align 1
  %75 = getelementptr inbounds i8, i8* %68, i64 6
  %76 = load i8, i8* %75, align 1
  store i8 %76, i8* %73, align 1
  store i8 %74, i8* %75, align 1
  %77 = getelementptr inbounds i8, i8* %68, i64 8
  %78 = load i8, i8* %77, align 1
  %79 = getelementptr inbounds i8, i8* %68, i64 10
  %80 = load i8, i8* %79, align 1
  store i8 %80, i8* %77, align 1
  store i8 %78, i8* %79, align 1
  %81 = getelementptr inbounds i8, i8* %68, i64 12
  %82 = load i8, i8* %81, align 1
  %83 = getelementptr inbounds i8, i8* %68, i64 14
  %84 = load i8, i8* %83, align 1
  store i8 %84, i8* %81, align 1
  store i8 %82, i8* %83, align 1
  %85 = getelementptr inbounds i8, i8* %68, i64 16
  %86 = add i32 %69, -4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %67

88:                                               ; preds = %67, %66
  %89 = phi i8* [ %65, %66 ], [ %85, %67 ]
  br i1 %56, label %99, label %90

90:                                               ; preds = %88, %90
  %91 = phi i8* [ %96, %90 ], [ %89, %88 ]
  %92 = phi i32 [ %97, %90 ], [ %53, %88 ]
  %93 = load i8, i8* %91, align 1
  %94 = getelementptr inbounds i8, i8* %91, i64 2
  %95 = load i8, i8* %94, align 1
  store i8 %95, i8* %91, align 1
  store i8 %93, i8* %94, align 1
  %96 = getelementptr inbounds i8, i8* %91, i64 4
  %97 = add i32 %92, -1
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %90, !llvm.loop !36

99:                                               ; preds = %88, %90, %57
  %100 = add nuw i32 %58, 1
  %101 = icmp eq i32 %100, %13
  br i1 %101, label %131, label %57

102:                                              ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %33) #10
  br label %103

103:                                              ; preds = %102, %26
  %104 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %104) #10
  store i16 0, i16* %6, align 2
  %105 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %105) #10
  store i16 0, i16* %7, align 2
  %106 = load %struct.tiff*, %struct.tiff** %16, align 8
  %107 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %106, i32 277, i16* nonnull %6) #10
  %108 = load %struct.tiff*, %struct.tiff** %16, align 8
  %109 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %108, i32 258, i16* nonnull %7) #10
  %110 = load i16, i16* %7, align 2
  %111 = zext i16 %110 to i32
  %112 = load i16, i16* %6, align 2
  %113 = zext i16 %112 to i32
  %114 = mul nuw i32 %113, %111
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %119

116:                                              ; preds = %103
  %117 = load i32, i32* %4, align 4
  %118 = call zeroext i1 @_ZN12CTiffContext13Decode1bppRGBERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiitt(%class.CTiffContext* %0, %"class.fxcrt::RetainPtr.12"* dereferenceable(8) %1, i32 %117, i32 undef, i16 zeroext %110, i16 zeroext %112)
  br label %129

119:                                              ; preds = %103
  %120 = icmp ult i32 %114, 9
  br i1 %120, label %121, label %124

121:                                              ; preds = %119
  %122 = load i32, i32* %4, align 4
  %123 = call zeroext i1 @_ZN12CTiffContext13Decode8bppRGBERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiitt(%class.CTiffContext* %0, %"class.fxcrt::RetainPtr.12"* dereferenceable(8) %1, i32 %122, i32 undef, i16 zeroext %110, i16 zeroext %112)
  br label %129

124:                                              ; preds = %119
  %125 = icmp ult i32 %114, 25
  br i1 %125, label %126, label %129

126:                                              ; preds = %124
  %127 = load i32, i32* %4, align 4
  %128 = call zeroext i1 @_ZN12CTiffContext14Decode24bppRGBERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiitt(%class.CTiffContext* %0, %"class.fxcrt::RetainPtr.12"* dereferenceable(8) %1, i32 %127, i32 undef, i16 zeroext undef, i16 zeroext undef)
  br label %129

129:                                              ; preds = %116, %121, %126, %124
  %130 = phi i1 [ %118, %116 ], [ %123, %121 ], [ %128, %126 ], [ false, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %105) #10
  br label %131

131:                                              ; preds = %99, %48, %129
  %132 = phi i8* [ %104, %129 ], [ %33, %48 ], [ %33, %99 ]
  %133 = phi i1 [ %130, %129 ], [ true, %48 ], [ true, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %132) #10
  br label %134

134:                                              ; preds = %131, %2
  %135 = phi i1 [ false, %2 ], [ %133, %131 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #10
  ret i1 %135
}

declare i32 @TIFFReadRGBAImageOriented(%struct.tiff*, i32, i32, i32*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec11TiffDecoder13CreateDecoderERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEE(%"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #12
  %3 = bitcast i8* %2 to %class.CTiffContext*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2, i8 0, i64 32, i1 false) #10
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV12CTiffContext, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to i64*
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 16
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 24
  %10 = bitcast i8* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = ptrtoint i8* %2 to i64
  %12 = tail call zeroext i1 @_ZN12CTiffContext11InitDecoderERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEE(%class.CTiffContext* nonnull %3, %"class.fxcrt::RetainPtr"* dereferenceable(8) %0)
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast i8* %2 to void (%class.CTiffContext*)***
  %15 = load void (%class.CTiffContext*)**, void (%class.CTiffContext*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.CTiffContext*)*, void (%class.CTiffContext*)** %15, i64 1
  %17 = load void (%class.CTiffContext*)*, void (%class.CTiffContext*)** %16, align 8
  tail call void %17(%class.CTiffContext* nonnull %3) #10
  br label %18

18:                                               ; preds = %1, %13
  %19 = phi i64 [ 0, %13 ], [ %11, %1 ]
  %20 = inttoptr i64 %19 to %"class.fxcodec::ProgressiveDecoderIface::Context"*
  ret %"class.fxcodec::ProgressiveDecoderIface::Context"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec11TiffDecoder13LoadFrameInfoEPNS_23ProgressiveDecoderIface7ContextEiPiS4_S4_S4_PNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"* nocapture readonly, i32, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #0 align 2 {
  %8 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %0 to %class.CTiffContext*
  %9 = tail call zeroext i1 @_ZN12CTiffContext13LoadFrameInfoEiPiS0_S0_S0_PN7fxcodec16CFX_DIBAttributeE(%class.CTiffContext* %8, i32 %1, i32* %2, i32* %3, i32* %4, i32* %5, %"class.fxcodec::CFX_DIBAttribute"* %6)
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec11TiffDecoder6DecodeEPNS_23ProgressiveDecoderIface7ContextERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%"class.fxcodec::ProgressiveDecoderIface::Context"* nocapture readonly, %"class.fxcrt::RetainPtr.12"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %0 to %class.CTiffContext*
  %4 = tail call zeroext i1 @_ZN12CTiffContext6DecodeERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CTiffContext* %3, %"class.fxcrt::RetainPtr.12"* dereferenceable(8) %1)
  ret i1 %4
}

declare %struct.tiff* @TIFFClientOpen(i8*, i8*, i8*, i64 (i8*, i8*, i64)*, i64 (i8*, i8*, i64)*, i64 (i8*, i64, i32)*, i32 (i8*)*, i64 (i8*)*, i32 (i8*, i8**, i64*)*, void (i8*, i8*, i64)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN12_GLOBAL__N_19tiff_readEPvS0_l(i8* nocapture, i8*, i64) #0 {
  %4 = getelementptr inbounds i8, i8* %0, i64 16
  %5 = bitcast i8* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %7, i64 %2) #10
  %9 = extractvalue { i64, i1 } %8, 1
  %10 = extractvalue { i64, i1 } %8, 0
  %11 = icmp ugt i64 %10, 4294967295
  %12 = or i1 %9, %11
  %13 = trunc i64 %10 to i32
  br i1 %12, label %158, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds i8, i8* %0, i64 8
  %16 = bitcast i8* %15 to %class.IFX_SeekableReadStream**
  %17 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %16, align 8, !noalias !37
  %18 = icmp eq %class.IFX_SeekableReadStream* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = bitcast %class.IFX_SeekableReadStream* %17 to i8**
  %21 = load i8*, i8** %20, align 8, !noalias !37
  %22 = getelementptr i8, i8* %21, i64 -32
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !37
  %25 = bitcast %class.IFX_SeekableReadStream* %17 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 %24
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !37
  %30 = add nsw i64 %29, 1
  store i64 %30, i64* %28, align 8, !noalias !37
  br label %31

31:                                               ; preds = %14, %19
  %32 = bitcast %class.IFX_SeekableReadStream* %17 to i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)***
  %33 = load i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)**, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*** %32, align 8
  %34 = getelementptr inbounds i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)** %33, i64 4
  %35 = load i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)** %34, align 8
  %36 = tail call zeroext i1 %35(%class.IFX_SeekableReadStream* %17, i8* %1, i64 %7, i64 %2) #10
  br i1 %18, label %58, label %37

37:                                               ; preds = %31
  %38 = bitcast %class.IFX_SeekableReadStream* %17 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr i8, i8* %39, i64 -32
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %class.IFX_SeekableReadStream* %17 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  %45 = getelementptr inbounds i8, i8* %44, i64 8
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %47, -1
  store i64 %48, i64* %46, align 8
  %49 = icmp ne i64 %48, 0
  %50 = icmp eq i8* %44, null
  %51 = or i1 %50, %49
  br i1 %51, label %58, label %52

52:                                               ; preds = %37
  %53 = bitcast i8* %44 to %"class.fxcrt::Retainable"*
  %54 = bitcast i8* %44 to void (%"class.fxcrt::Retainable"*)***
  %55 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %55, i64 1
  %57 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %56, align 8
  tail call void %57(%"class.fxcrt::Retainable"* nonnull %53) #10
  br label %58

58:                                               ; preds = %31, %37, %52
  br i1 %36, label %59, label %158

59:                                               ; preds = %58
  store i32 %13, i32* %5, align 8
  %60 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %16, align 8, !noalias !40
  %61 = icmp eq %class.IFX_SeekableReadStream* %60, null
  %62 = bitcast %class.IFX_SeekableReadStream* %60 to i8**
  br i1 %61, label %63, label %65

63:                                               ; preds = %59
  %64 = bitcast %class.IFX_SeekableReadStream* %60 to i8*
  br label %76

65:                                               ; preds = %59
  %66 = load i8*, i8** %62, align 8, !noalias !40
  %67 = getelementptr i8, i8* %66, i64 -32
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8, !noalias !40
  %70 = bitcast %class.IFX_SeekableReadStream* %60 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 %69
  %72 = getelementptr inbounds i8, i8* %71, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8, !noalias !40
  %75 = add nsw i64 %74, 1
  store i64 %75, i64* %73, align 8, !noalias !40
  br label %76

76:                                               ; preds = %63, %65
  %77 = phi i8* [ %64, %63 ], [ %70, %65 ]
  %78 = load i8*, i8** %62, align 8
  %79 = getelementptr i8, i8* %78, i64 -40
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds i8, i8* %77, i64 %81
  %83 = bitcast i8* %82 to %class.IFX_StreamWithSize*
  %84 = bitcast i8* %82 to i64 (%class.IFX_StreamWithSize*)***
  %85 = load i64 (%class.IFX_StreamWithSize*)**, i64 (%class.IFX_StreamWithSize*)*** %84, align 8
  %86 = load i64 (%class.IFX_StreamWithSize*)*, i64 (%class.IFX_StreamWithSize*)** %85, align 8
  %87 = tail call i64 %86(%class.IFX_StreamWithSize* %83) #10
  %88 = icmp sgt i64 %10, %87
  br i1 %61, label %108, label %89

89:                                               ; preds = %76
  %90 = load i8*, i8** %62, align 8
  %91 = getelementptr i8, i8* %90, i64 -32
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds i8, i8* %77, i64 %93
  %95 = getelementptr inbounds i8, i8* %94, i64 8
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = add nsw i64 %97, -1
  store i64 %98, i64* %96, align 8
  %99 = icmp ne i64 %98, 0
  %100 = icmp eq i8* %94, null
  %101 = or i1 %100, %99
  br i1 %101, label %108, label %102

102:                                              ; preds = %89
  %103 = bitcast i8* %94 to %"class.fxcrt::Retainable"*
  %104 = bitcast i8* %94 to void (%"class.fxcrt::Retainable"*)***
  %105 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %105, i64 1
  %107 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %106, align 8
  tail call void %107(%"class.fxcrt::Retainable"* nonnull %103) #10
  br label %108

108:                                              ; preds = %76, %89, %102
  br i1 %88, label %109, label %158

109:                                              ; preds = %108
  %110 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %16, align 8, !noalias !43
  %111 = icmp eq %class.IFX_SeekableReadStream* %110, null
  %112 = bitcast %class.IFX_SeekableReadStream* %110 to i8**
  br i1 %111, label %113, label %115

113:                                              ; preds = %109
  %114 = bitcast %class.IFX_SeekableReadStream* %110 to i8*
  br label %126

115:                                              ; preds = %109
  %116 = load i8*, i8** %112, align 8, !noalias !43
  %117 = getelementptr i8, i8* %116, i64 -32
  %118 = bitcast i8* %117 to i64*
  %119 = load i64, i64* %118, align 8, !noalias !43
  %120 = bitcast %class.IFX_SeekableReadStream* %110 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %119
  %122 = getelementptr inbounds i8, i8* %121, i64 8
  %123 = bitcast i8* %122 to i64*
  %124 = load i64, i64* %123, align 8, !noalias !43
  %125 = add nsw i64 %124, 1
  store i64 %125, i64* %123, align 8, !noalias !43
  br label %126

126:                                              ; preds = %113, %115
  %127 = phi i8* [ %114, %113 ], [ %120, %115 ]
  %128 = load i8*, i8** %112, align 8
  %129 = getelementptr i8, i8* %128, i64 -40
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds i8, i8* %127, i64 %131
  %133 = bitcast i8* %132 to %class.IFX_StreamWithSize*
  %134 = bitcast i8* %132 to i64 (%class.IFX_StreamWithSize*)***
  %135 = load i64 (%class.IFX_StreamWithSize*)**, i64 (%class.IFX_StreamWithSize*)*** %134, align 8
  %136 = load i64 (%class.IFX_StreamWithSize*)*, i64 (%class.IFX_StreamWithSize*)** %135, align 8
  %137 = tail call i64 %136(%class.IFX_StreamWithSize* %133) #10
  %138 = sub nsw i64 %137, %7
  br i1 %111, label %158, label %139

139:                                              ; preds = %126
  %140 = load i8*, i8** %112, align 8
  %141 = getelementptr i8, i8* %140, i64 -32
  %142 = bitcast i8* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds i8, i8* %127, i64 %143
  %145 = getelementptr inbounds i8, i8* %144, i64 8
  %146 = bitcast i8* %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = add nsw i64 %147, -1
  store i64 %148, i64* %146, align 8
  %149 = icmp ne i64 %148, 0
  %150 = icmp eq i8* %144, null
  %151 = or i1 %150, %149
  br i1 %151, label %158, label %152

152:                                              ; preds = %139
  %153 = bitcast i8* %144 to %"class.fxcrt::Retainable"*
  %154 = bitcast i8* %144 to void (%"class.fxcrt::Retainable"*)***
  %155 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %155, i64 1
  %157 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %156, align 8
  tail call void %157(%"class.fxcrt::Retainable"* nonnull %153) #10
  br label %158

158:                                              ; preds = %3, %152, %139, %126, %58, %108
  %159 = phi i64 [ 0, %3 ], [ 0, %58 ], [ %2, %108 ], [ %138, %126 ], [ %138, %139 ], [ %138, %152 ]
  ret i64 %159
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZN12_GLOBAL__N_110tiff_writeEPvS0_l(i8* nocapture readnone, i8* nocapture readnone, i64) #5 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN12_GLOBAL__N_19tiff_seekEPvmi(i8* nocapture, i64, i32) #0 {
  %4 = icmp sgt i64 %1, -1
  br i1 %4, label %5, label %183

5:                                                ; preds = %3
  switch i32 %2, label %183 [
    i32 0, label %6
    i32 1, label %63
    i32 2, label %76
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to %class.IFX_SeekableReadStream**
  %9 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %8, align 8, !noalias !46
  %10 = icmp eq %class.IFX_SeekableReadStream* %9, null
  %11 = bitcast %class.IFX_SeekableReadStream* %9 to i8**
  br i1 %10, label %12, label %14

12:                                               ; preds = %6
  %13 = bitcast %class.IFX_SeekableReadStream* %9 to i8*
  br label %25

14:                                               ; preds = %6
  %15 = load i8*, i8** %11, align 8, !noalias !46
  %16 = getelementptr i8, i8* %15, i64 -32
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !46
  %19 = bitcast %class.IFX_SeekableReadStream* %9 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8, !noalias !46
  %24 = add nsw i64 %23, 1
  store i64 %24, i64* %22, align 8, !noalias !46
  br label %25

25:                                               ; preds = %12, %14
  %26 = phi i8* [ %13, %12 ], [ %19, %14 ]
  %27 = load i8*, i8** %11, align 8
  %28 = getelementptr i8, i8* %27, i64 -40
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 %30
  %32 = bitcast i8* %31 to %class.IFX_StreamWithSize*
  %33 = bitcast i8* %31 to i64 (%class.IFX_StreamWithSize*)***
  %34 = load i64 (%class.IFX_StreamWithSize*)**, i64 (%class.IFX_StreamWithSize*)*** %33, align 8
  %35 = load i64 (%class.IFX_StreamWithSize*)*, i64 (%class.IFX_StreamWithSize*)** %34, align 8
  %36 = tail call i64 %35(%class.IFX_StreamWithSize* %32) #10
  %37 = icmp slt i64 %36, %1
  br i1 %10, label %57, label %38

38:                                               ; preds = %25
  %39 = load i8*, i8** %11, align 8
  %40 = getelementptr i8, i8* %39, i64 -32
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %26, i64 %42
  %44 = getelementptr inbounds i8, i8* %43, i64 8
  %45 = bitcast i8* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = add nsw i64 %46, -1
  store i64 %47, i64* %45, align 8
  %48 = icmp ne i64 %47, 0
  %49 = icmp eq i8* %43, null
  %50 = or i1 %49, %48
  br i1 %50, label %57, label %51

51:                                               ; preds = %38
  %52 = bitcast i8* %43 to %"class.fxcrt::Retainable"*
  %53 = bitcast i8* %43 to void (%"class.fxcrt::Retainable"*)***
  %54 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %54, i64 1
  %56 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %55, align 8
  tail call void %56(%"class.fxcrt::Retainable"* nonnull %52) #10
  br label %57

57:                                               ; preds = %25, %38, %51
  br i1 %37, label %183, label %58

58:                                               ; preds = %57
  %59 = trunc i64 %1 to i32
  %60 = getelementptr inbounds i8, i8* %0, i64 16
  %61 = bitcast i8* %60 to i32*
  store i32 %59, i32* %61, align 8
  %62 = and i64 %1, 4294967295
  br label %183

63:                                               ; preds = %5
  %64 = getelementptr inbounds i8, i8* %0, i64 16
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %67, i64 %1) #10
  %69 = extractvalue { i64, i1 } %68, 1
  %70 = extractvalue { i64, i1 } %68, 0
  %71 = icmp ugt i64 %70, 4294967295
  %72 = or i1 %69, %71
  br i1 %72, label %183, label %73

73:                                               ; preds = %63
  %74 = trunc i64 %70 to i32
  store i32 %74, i32* %65, align 8
  %75 = and i64 %70, 4294967295
  br label %183

76:                                               ; preds = %5
  %77 = getelementptr inbounds i8, i8* %0, i64 8
  %78 = bitcast i8* %77 to %class.IFX_SeekableReadStream**
  %79 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %78, align 8, !noalias !49
  %80 = icmp eq %class.IFX_SeekableReadStream* %79, null
  %81 = bitcast %class.IFX_SeekableReadStream* %79 to i8**
  br i1 %80, label %82, label %84

82:                                               ; preds = %76
  %83 = bitcast %class.IFX_SeekableReadStream* %79 to i8*
  br label %95

84:                                               ; preds = %76
  %85 = load i8*, i8** %81, align 8, !noalias !49
  %86 = getelementptr i8, i8* %85, i64 -32
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8, !noalias !49
  %89 = bitcast %class.IFX_SeekableReadStream* %79 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 %88
  %91 = getelementptr inbounds i8, i8* %90, i64 8
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 8, !noalias !49
  %94 = add nsw i64 %93, 1
  store i64 %94, i64* %92, align 8, !noalias !49
  br label %95

95:                                               ; preds = %82, %84
  %96 = phi i8* [ %83, %82 ], [ %89, %84 ]
  %97 = load i8*, i8** %81, align 8
  %98 = getelementptr i8, i8* %97, i64 -40
  %99 = bitcast i8* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds i8, i8* %96, i64 %100
  %102 = bitcast i8* %101 to %class.IFX_StreamWithSize*
  %103 = bitcast i8* %101 to i64 (%class.IFX_StreamWithSize*)***
  %104 = load i64 (%class.IFX_StreamWithSize*)**, i64 (%class.IFX_StreamWithSize*)*** %103, align 8
  %105 = load i64 (%class.IFX_StreamWithSize*)*, i64 (%class.IFX_StreamWithSize*)** %104, align 8
  %106 = tail call i64 %105(%class.IFX_StreamWithSize* %102) #10
  %107 = icmp slt i64 %106, %1
  br i1 %80, label %127, label %108

108:                                              ; preds = %95
  %109 = load i8*, i8** %81, align 8
  %110 = getelementptr i8, i8* %109, i64 -32
  %111 = bitcast i8* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds i8, i8* %96, i64 %112
  %114 = getelementptr inbounds i8, i8* %113, i64 8
  %115 = bitcast i8* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = add nsw i64 %116, -1
  store i64 %117, i64* %115, align 8
  %118 = icmp ne i64 %117, 0
  %119 = icmp eq i8* %113, null
  %120 = or i1 %119, %118
  br i1 %120, label %127, label %121

121:                                              ; preds = %108
  %122 = bitcast i8* %113 to %"class.fxcrt::Retainable"*
  %123 = bitcast i8* %113 to void (%"class.fxcrt::Retainable"*)***
  %124 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %124, i64 1
  %126 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %125, align 8
  tail call void %126(%"class.fxcrt::Retainable"* nonnull %122) #10
  br label %127

127:                                              ; preds = %95, %108, %121
  br i1 %107, label %183, label %128

128:                                              ; preds = %127
  %129 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %78, align 8, !noalias !52
  %130 = icmp eq %class.IFX_SeekableReadStream* %129, null
  %131 = bitcast %class.IFX_SeekableReadStream* %129 to i8**
  br i1 %130, label %132, label %134

132:                                              ; preds = %128
  %133 = bitcast %class.IFX_SeekableReadStream* %129 to i8*
  br label %145

134:                                              ; preds = %128
  %135 = load i8*, i8** %131, align 8, !noalias !52
  %136 = getelementptr i8, i8* %135, i64 -32
  %137 = bitcast i8* %136 to i64*
  %138 = load i64, i64* %137, align 8, !noalias !52
  %139 = bitcast %class.IFX_SeekableReadStream* %129 to i8*
  %140 = getelementptr inbounds i8, i8* %139, i64 %138
  %141 = getelementptr inbounds i8, i8* %140, i64 8
  %142 = bitcast i8* %141 to i64*
  %143 = load i64, i64* %142, align 8, !noalias !52
  %144 = add nsw i64 %143, 1
  store i64 %144, i64* %142, align 8, !noalias !52
  br label %145

145:                                              ; preds = %132, %134
  %146 = phi i8* [ %133, %132 ], [ %139, %134 ]
  %147 = load i8*, i8** %131, align 8
  %148 = getelementptr i8, i8* %147, i64 -40
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds i8, i8* %146, i64 %150
  %152 = bitcast i8* %151 to %class.IFX_StreamWithSize*
  %153 = bitcast i8* %151 to i64 (%class.IFX_StreamWithSize*)***
  %154 = load i64 (%class.IFX_StreamWithSize*)**, i64 (%class.IFX_StreamWithSize*)*** %153, align 8
  %155 = load i64 (%class.IFX_StreamWithSize*)*, i64 (%class.IFX_StreamWithSize*)** %154, align 8
  %156 = tail call i64 %155(%class.IFX_StreamWithSize* %152) #10
  %157 = sub nsw i64 %156, %1
  %158 = trunc i64 %157 to i32
  %159 = getelementptr inbounds i8, i8* %0, i64 16
  %160 = bitcast i8* %159 to i32*
  store i32 %158, i32* %160, align 8
  br i1 %130, label %180, label %161

161:                                              ; preds = %145
  %162 = load i8*, i8** %131, align 8
  %163 = getelementptr i8, i8* %162, i64 -32
  %164 = bitcast i8* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds i8, i8* %146, i64 %165
  %167 = getelementptr inbounds i8, i8* %166, i64 8
  %168 = bitcast i8* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = add nsw i64 %169, -1
  store i64 %170, i64* %168, align 8
  %171 = icmp ne i64 %170, 0
  %172 = icmp eq i8* %166, null
  %173 = or i1 %172, %171
  br i1 %173, label %180, label %174

174:                                              ; preds = %161
  %175 = bitcast i8* %166 to %"class.fxcrt::Retainable"*
  %176 = bitcast i8* %166 to void (%"class.fxcrt::Retainable"*)***
  %177 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %177, i64 1
  %179 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %178, align 8
  tail call void %179(%"class.fxcrt::Retainable"* nonnull %175) #10
  br label %180

180:                                              ; preds = %145, %161, %174
  %181 = load i32, i32* %160, align 8
  %182 = zext i32 %181 to i64
  br label %183

183:                                              ; preds = %63, %73, %58, %180, %57, %127, %5, %3
  %184 = phi i64 [ -1, %3 ], [ %182, %180 ], [ %62, %58 ], [ -1, %57 ], [ -1, %127 ], [ -1, %5 ], [ %75, %73 ], [ -1, %63 ]
  ret i64 %184
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_110tiff_closeEPv(i8* nocapture readnone) #5 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN12_GLOBAL__N_113tiff_get_sizeEPv(i8* nocapture readonly) #0 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = bitcast i8* %2 to %class.IFX_SeekableReadStream**
  %4 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %3, align 8, !noalias !55
  %5 = icmp eq %class.IFX_SeekableReadStream* %4, null
  %6 = bitcast %class.IFX_SeekableReadStream* %4 to i8**
  br i1 %5, label %7, label %9

7:                                                ; preds = %1
  %8 = bitcast %class.IFX_SeekableReadStream* %4 to i8*
  br label %20

9:                                                ; preds = %1
  %10 = load i8*, i8** %6, align 8, !noalias !55
  %11 = getelementptr i8, i8* %10, i64 -32
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !55
  %14 = bitcast %class.IFX_SeekableReadStream* %4 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !55
  %19 = add nsw i64 %18, 1
  store i64 %19, i64* %17, align 8, !noalias !55
  br label %20

20:                                               ; preds = %7, %9
  %21 = phi i8* [ %8, %7 ], [ %14, %9 ]
  %22 = load i8*, i8** %6, align 8
  %23 = getelementptr i8, i8* %22, i64 -40
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %21, i64 %25
  %27 = bitcast i8* %26 to %class.IFX_StreamWithSize*
  %28 = bitcast i8* %26 to i64 (%class.IFX_StreamWithSize*)***
  %29 = load i64 (%class.IFX_StreamWithSize*)**, i64 (%class.IFX_StreamWithSize*)*** %28, align 8
  %30 = load i64 (%class.IFX_StreamWithSize*)*, i64 (%class.IFX_StreamWithSize*)** %29, align 8
  %31 = tail call i64 %30(%class.IFX_StreamWithSize* %27) #10
  br i1 %5, label %51, label %32

32:                                               ; preds = %20
  %33 = load i8*, i8** %6, align 8
  %34 = getelementptr i8, i8* %33, i64 -32
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %21, i64 %36
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add nsw i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = icmp ne i64 %41, 0
  %43 = icmp eq i8* %37, null
  %44 = or i1 %43, %42
  br i1 %44, label %51, label %45

45:                                               ; preds = %32
  %46 = bitcast i8* %37 to %"class.fxcrt::Retainable"*
  %47 = bitcast i8* %37 to void (%"class.fxcrt::Retainable"*)***
  %48 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, i64 1
  %50 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, align 8
  tail call void %50(%"class.fxcrt::Retainable"* nonnull %46) #10
  br label %51

51:                                               ; preds = %20, %32, %45
  ret i64 %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_18tiff_mapEPvPS0_Pm(i8* nocapture readnone, i8** nocapture readnone, i64* nocapture readnone) #5 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN12_GLOBAL__N_110tiff_unmapEPvS0_m(i8* nocapture, i8* nocapture, i64) #5 {
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !58
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !58
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !58
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @TIFFClose(%struct.tiff*) local_unnamed_addr #1

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12CTiffContextD2Ev(%class.CTiffContext*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV12CTiffContext, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %struct.tiff*, %struct.tiff** %3, align 8
  store %struct.tiff* null, %struct.tiff** %3, align 8
  %5 = icmp eq %struct.tiff* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @TIFFClose(%struct.tiff* nonnull %4) #10
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %8, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %8, align 8
  %10 = icmp eq %class.IFX_SeekableReadStream* %9, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = bitcast %class.IFX_SeekableReadStream* %9 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr i8, i8* %13, i64 -32
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %class.IFX_SeekableReadStream* %9 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %16
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add nsw i64 %21, -1
  store i64 %22, i64* %20, align 8
  %23 = icmp ne i64 %22, 0
  %24 = icmp eq i8* %18, null
  %25 = or i1 %24, %23
  br i1 %25, label %32, label %26

26:                                               ; preds = %11
  %27 = bitcast i8* %18 to %"class.fxcrt::Retainable"*
  %28 = bitcast i8* %18 to void (%"class.fxcrt::Retainable"*)***
  %29 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, i64 1
  %31 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %30, align 8
  tail call void %31(%"class.fxcrt::Retainable"* nonnull %27) #10
  br label %32

32:                                               ; preds = %7, %11, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12CTiffContextD0Ev(%class.CTiffContext*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV12CTiffContext, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %struct.tiff*, %struct.tiff** %3, align 8
  store %struct.tiff* null, %struct.tiff** %3, align 8
  %5 = icmp eq %struct.tiff* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @TIFFClose(%struct.tiff* nonnull %4) #10
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %class.CTiffContext, %class.CTiffContext* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %8, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %8, align 8
  %10 = icmp eq %class.IFX_SeekableReadStream* %9, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = bitcast %class.IFX_SeekableReadStream* %9 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr i8, i8* %13, i64 -32
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %class.IFX_SeekableReadStream* %9 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %16
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add nsw i64 %21, -1
  store i64 %22, i64* %20, align 8
  %23 = icmp ne i64 %22, 0
  %24 = icmp eq i8* %18, null
  %25 = or i1 %24, %23
  br i1 %25, label %32, label %26

26:                                               ; preds = %11
  %27 = bitcast i8* %18 to %"class.fxcrt::Retainable"*
  %28 = bitcast i8* %18 to void (%"class.fxcrt::Retainable"*)***
  %29 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, i64 1
  %31 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %30, align 8
  tail call void %31(%"class.fxcrt::Retainable"* nonnull %27) #10
  br label %32

32:                                               ; preds = %7, %11, %26
  %33 = bitcast %class.CTiffContext* %0 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISM_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISM_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISM_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISM_EEEEEEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISL_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISL_EEEEEEDpOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISM_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISM_EEEEEEDpOT_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISL_EEEEEEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISL_EEEEEEDpOT_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISM_EEEEEEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISM_EEEEEEDpOT_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISM_EEEEEEDpOT_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISM_EEEEEEDpOT_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISM_EEEEEEDpOT_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__16__treeINS_12__value_typeIjPvEENS_19__map_value_compareIjS3_NS_4lessIjEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_S2_EENS_22__tree_node_destructorINS8_ISM_EEEEEEDpOT_"}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !34}
!34 = !{!"llvm.loop.isvectorized", i32 1}
!35 = distinct !{!35, !34}
!36 = distinct !{!36, !27}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK12CTiffContext5io_inEv: argument 0"}
!39 = distinct !{!39, !"_ZNK12CTiffContext5io_inEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK12CTiffContext5io_inEv: argument 0"}
!42 = distinct !{!42, !"_ZNK12CTiffContext5io_inEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK12CTiffContext5io_inEv: argument 0"}
!45 = distinct !{!45, !"_ZNK12CTiffContext5io_inEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK12CTiffContext5io_inEv: argument 0"}
!48 = distinct !{!48, !"_ZNK12CTiffContext5io_inEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK12CTiffContext5io_inEv: argument 0"}
!51 = distinct !{!51, !"_ZNK12CTiffContext5io_inEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK12CTiffContext5io_inEv: argument 0"}
!54 = distinct !{!54, !"_ZNK12CTiffContext5io_inEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK12CTiffContext5io_inEv: argument 0"}
!57 = distinct !{!57, !"_ZNK12CTiffContext5io_inEv"}
!58 = !{i8 0, i8 2}
