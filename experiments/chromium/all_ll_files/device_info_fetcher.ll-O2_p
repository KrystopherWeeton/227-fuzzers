; ModuleID = '../../chrome/browser/enterprise/signals/device_info_fetcher.cc'
source_filename = "../../chrome/browser/enterprise/signals/device_info_fetcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.enterprise_signals::DeviceInfo" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.enterprise_signals::DeviceInfoFetcher" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.enterprise_signals::DeviceInfoFetcherLinux" = type { %"class.enterprise_signals::DeviceInfoFetcher" }

@_ZTVN18enterprise_signals17DeviceInfoFetcherE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.enterprise_signals::DeviceInfoFetcher"*)* @_ZN18enterprise_signals17DeviceInfoFetcherD2Ev to i8*), i8* bitcast (void (%"class.enterprise_signals::DeviceInfoFetcher"*)* @_ZN18enterprise_signals17DeviceInfoFetcherD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN18enterprise_signals10DeviceInfoC1Ev = hidden unnamed_addr alias void (%"struct.enterprise_signals::DeviceInfo"*), void (%"struct.enterprise_signals::DeviceInfo"*)* @_ZN18enterprise_signals10DeviceInfoC2Ev
@_ZN18enterprise_signals10DeviceInfoD1Ev = hidden unnamed_addr alias void (%"struct.enterprise_signals::DeviceInfo"*), void (%"struct.enterprise_signals::DeviceInfo"*)* @_ZN18enterprise_signals10DeviceInfoD2Ev
@_ZN18enterprise_signals10DeviceInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.enterprise_signals::DeviceInfo"*, %"struct.enterprise_signals::DeviceInfo"*), void (%"struct.enterprise_signals::DeviceInfo"*, %"struct.enterprise_signals::DeviceInfo"*)* @_ZN18enterprise_signals10DeviceInfoC2ERKS0_
@_ZN18enterprise_signals10DeviceInfoC1EOS0_ = hidden unnamed_addr alias void (%"struct.enterprise_signals::DeviceInfo"*, %"struct.enterprise_signals::DeviceInfo"*), void (%"struct.enterprise_signals::DeviceInfo"*, %"struct.enterprise_signals::DeviceInfo"*)* @_ZN18enterprise_signals10DeviceInfoC2EOS0_
@_ZN18enterprise_signals17DeviceInfoFetcherD1Ev = hidden unnamed_addr alias void (%"class.enterprise_signals::DeviceInfoFetcher"*), void (%"class.enterprise_signals::DeviceInfoFetcher"*)* @_ZN18enterprise_signals17DeviceInfoFetcherD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18enterprise_signals10DeviceInfoC2Ev(%"struct.enterprise_signals::DeviceInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 7
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = bitcast %"struct.enterprise_signals::DeviceInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 120, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18enterprise_signals10DeviceInfoD2Ev(%"struct.enterprise_signals::DeviceInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 7, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 4
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 3
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #11
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 2
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #11
  br label %55

55:                                               ; preds = %46, %52
  %56 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 1
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #11
  br label %64

64:                                               ; preds = %55, %61
  %65 = bitcast %"struct.enterprise_signals::DeviceInfo"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %64, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18enterprise_signals10DeviceInfoC2ERKS0_(%"struct.enterprise_signals::DeviceInfo"*, %"struct.enterprise_signals::DeviceInfo"* nocapture readonly dereferenceable(152)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.enterprise_signals::DeviceInfo"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.enterprise_signals::DeviceInfo"* %0 to i8*
  %9 = bitcast %"struct.enterprise_signals::DeviceInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #10
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #10
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #10
  br label %31

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %17, i8* %28, i64 %30) #10
  br label %31

31:                                               ; preds = %23, %26
  %32 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 2
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #10
  br label %46

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %32, i8* %43, i64 %45) #10
  br label %46

46:                                               ; preds = %38, %41
  %47 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 3
  %48 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 3
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %55 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #10
  br label %61

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %47, i8* %58, i64 %60) #10
  br label %61

61:                                               ; preds = %53, %56
  %62 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 4
  %63 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 4
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %61
  %69 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %70 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 24, i1 false) #10
  br label %76

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %62, i8* %73, i64 %75) #10
  br label %76

76:                                               ; preds = %68, %71
  %77 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 5
  %78 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 5
  %79 = bitcast i32* %78 to i64*
  %80 = bitcast i32* %77 to i64*
  %81 = load i64, i64* %79, align 8
  store i64 %81, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 7
  %83 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 7
  %84 = bitcast %"class.std::__1::vector"* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #10
  %85 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 7, i32 0, i32 1
  %86 = bitcast %"class.std::__1::basic_string"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.std::__1::vector"* %83 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %87, %89
  %91 = sdiv exact i64 %90, 24
  %92 = icmp eq i64 %90, 0
  br i1 %92, label %134, label %93

93:                                               ; preds = %76
  %94 = icmp ugt i64 %91, 768614336404564650
  br i1 %94, label %95, label %97

95:                                               ; preds = %93
  %96 = bitcast %"class.std::__1::vector"* %82 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %96) #12
  unreachable

97:                                               ; preds = %93
  %98 = tail call i8* @_Znwm(i64 %90) #11
  %99 = bitcast i8* %98 to %"class.std::__1::basic_string"*
  %100 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 7, i32 0, i32 1
  %101 = bitcast %"class.std::__1::basic_string"** %100 to i8**
  store i8* %98, i8** %101, align 8
  %102 = bitcast %"class.std::__1::vector"* %82 to i8**
  store i8* %98, i8** %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 %91
  %104 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %103, %"class.std::__1::basic_string"** %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %83, i64 0, i32 0, i32 0
  %106 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %105, align 8
  %107 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %85, align 8
  %108 = bitcast %"class.std::__1::basic_string"** %100 to i64*
  %109 = ptrtoint i8* %98 to i64
  %110 = icmp eq %"class.std::__1::basic_string"* %106, %107
  br i1 %110, label %132, label %111

111:                                              ; preds = %97, %126
  %112 = phi %"class.std::__1::basic_string"* [ %128, %126 ], [ %99, %97 ]
  %113 = phi %"class.std::__1::basic_string"* [ %127, %126 ], [ %106, %97 ]
  %114 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %111
  %119 = bitcast %"class.std::__1::basic_string"* %112 to i8*
  %120 = bitcast %"class.std::__1::basic_string"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #10
  br label %126

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %112, i8* %123, i64 %125) #10
  br label %126

126:                                              ; preds = %121, %118
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 1
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %112, i64 1
  %129 = icmp eq %"class.std::__1::basic_string"* %127, %107
  br i1 %129, label %130, label %111

130:                                              ; preds = %126
  %131 = ptrtoint %"class.std::__1::basic_string"* %128 to i64
  br label %132

132:                                              ; preds = %130, %97
  %133 = phi i64 [ %109, %97 ], [ %131, %130 ]
  store i64 %133, i64* %108, align 8
  br label %134

134:                                              ; preds = %76, %132
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18enterprise_signals10DeviceInfoC2EOS0_(%"struct.enterprise_signals::DeviceInfo"* nocapture, %"struct.enterprise_signals::DeviceInfo"* nocapture dereferenceable(152)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.enterprise_signals::DeviceInfo"* %0 to i8*
  %4 = bitcast %"struct.enterprise_signals::DeviceInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #10
  %5 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #10
  %9 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #10
  %13 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 3
  %15 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #10
  %17 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 4
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  %21 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 5
  %23 = bitcast i32* %22 to i64*
  %24 = bitcast i32* %21 to i64*
  %25 = load i64, i64* %23, align 8
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 7
  %27 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 7
  %28 = bitcast %"class.std::__1::vector"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #10
  %29 = bitcast %"class.std::__1::vector"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector"* %26 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 7, i32 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 7, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %1, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"class.std::__1::basic_string"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.enterprise_signals::DeviceInfo", %"struct.enterprise_signals::DeviceInfo"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string"** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = bitcast %"class.std::__1::vector"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN18enterprise_signals17DeviceInfoFetcherC2Ev(%"class.enterprise_signals::DeviceInfoFetcher"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.enterprise_signals::DeviceInfoFetcher", %"class.enterprise_signals::DeviceInfoFetcher"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN18enterprise_signals17DeviceInfoFetcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN18enterprise_signals17DeviceInfoFetcherD2Ev(%"class.enterprise_signals::DeviceInfoFetcher"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN18enterprise_signals17DeviceInfoFetcherD0Ev(%"class.enterprise_signals::DeviceInfoFetcher"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.enterprise_signals::DeviceInfoFetcher"* @_ZN18enterprise_signals17DeviceInfoFetcher14CreateInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 8) #11
  %2 = bitcast i8* %1 to %"class.enterprise_signals::DeviceInfoFetcherLinux"*
  tail call void @_ZN18enterprise_signals22DeviceInfoFetcherLinuxC1Ev(%"class.enterprise_signals::DeviceInfoFetcherLinux"* nonnull %2) #10
  %3 = bitcast i8* %1 to %"class.enterprise_signals::DeviceInfoFetcher"*
  ret %"class.enterprise_signals::DeviceInfoFetcher"* %3
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN18enterprise_signals22DeviceInfoFetcherLinuxC1Ev(%"class.enterprise_signals::DeviceInfoFetcherLinux"*) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
