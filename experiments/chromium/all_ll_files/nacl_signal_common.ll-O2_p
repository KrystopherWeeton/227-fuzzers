; ModuleID = '../../native_client/src/trusted/service_runtime/nacl_signal_common.c'
source_filename = "../../native_client/src/trusted/service_runtime/nacl_signal_common.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.NaClAppThread = type { %struct.NaClThreadContext, %struct.NaClMutex, %struct.NaClApp*, i32, i32, %struct.NaClThread, %struct.NaClMutex, i32, %struct.NaClAppThreadSuspendedRegisters*, i32, i64, i8*, i32, i32, i32, %struct.NaClListNode, i32, %struct.NaClCondVar }
%struct.NaClThreadContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i16, i16, i64, i32, i32 }
%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClSyscallTableEntry = type { i32 (%struct.NaClAppThread*)* }
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDescEffector = type opaque
%struct.NaClDynamicRegion = type opaque
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.NaClValidationCache = type opaque
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClDesc = type opaque
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type opaque
%struct.NaClThread = type { i64 }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClAppThreadSuspendedRegisters = type opaque
%struct.NaClListNode = type { %struct.NaClListNode*, %struct.NaClListNode* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.NaClSignalContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.NaClExceptionFrame = type { i64, %struct.NaClExceptionContext, %struct.NaClExceptionPortableContext }
%struct.NaClExceptionContext = type { i32, i32, i32, i32, i32, [11 x i32], %struct.NaClUserRegisterStateX8664 }
%struct.NaClUserRegisterStateX8664 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32 }
%struct.NaClExceptionPortableContext = type { i32, i32, i32 }

@.str = private unnamed_addr constant [43 x i8] c"\0A** Signal %d from untrusted code: pc=%lx\0A\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"\0A** Signal %d from trusted code: pc=%lx\0A\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"NACL_CRASH_TEST\00", align 1
@.str.3 = private unnamed_addr constant [52 x i8] c"[CRASH_TEST] Causing crash in NaCl trusted code...\0A\00", align 1

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @NaClSignalErrorMessage(i8* nocapture readonly) local_unnamed_addr #0 {
  %2 = tail call i64 @strlen(i8* %0) #9
  %3 = trunc i64 %2 to i32
  %4 = icmp sgt i32 %3, 0
  %5 = add i64 %2, 2147483648
  %6 = icmp ult i64 %5, 4294967296
  %7 = and i1 %4, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = tail call i64 @write(i32 2, i8* %0, i64 %2) #10
  br label %10

10:                                               ; preds = %1, %8
  %11 = phi i64 [ %9, %8 ], [ 0, %1 ]
  ret i64 %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree
declare i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @NaClSignalContextIsUntrusted(%struct.NaClAppThread* nocapture readonly, %struct.NaClSignalContext* nocapture readonly) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %4 = load %struct.NaClApp*, %struct.NaClApp** %3, align 8
  %5 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 16
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %4, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %21, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %4, i64 0, i32 0
  %12 = load i8, i8* %11, align 8
  %13 = zext i8 %12 to i64
  %14 = shl i64 1, %13
  %15 = add i64 %14, %8
  %16 = icmp ugt i64 %15, %6
  br i1 %16, label %17, label %21

17:                                               ; preds = %10
  %18 = and i64 %6, 4294901760
  %19 = icmp ne i64 %18, 65536
  %20 = zext i1 %19 to i32
  br label %21

21:                                               ; preds = %10, %2, %17
  %22 = phi i32 [ %20, %17 ], [ 0, %10 ], [ 0, %2 ]
  ret i32 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @NaClSignalCheckSandboxInvariants(%struct.NaClSignalContext* nocapture readonly, %struct.NaClAppThread* nocapture readonly) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %0, i64 0, i32 15
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %1, i64 0, i32 0, i32 15
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %30

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %1, i64 0, i32 2
  %10 = load %struct.NaClApp*, %struct.NaClApp** %9, align 8
  %11 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %0, i64 0, i32 7
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %10, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %14, %12
  br i1 %15, label %30, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %10, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = zext i8 %18 to i64
  %20 = shl i64 1, %19
  %21 = add i64 %20, %14
  %22 = icmp ugt i64 %21, %12
  br i1 %22, label %23, label %30

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %0, i64 0, i32 6
  %25 = load i64, i64* %24, align 8
  %26 = icmp ule i64 %14, %25
  %27 = icmp ugt i64 %21, %25
  %28 = and i1 %26, %27
  %29 = zext i1 %28 to i32
  ret i32 %29

30:                                               ; preds = %16, %2, %8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClSignalHandleUntrusted(i32, %struct.NaClSignalContext* nocapture readonly, i32) local_unnamed_addr #5 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 128, i1 false)
  %6 = icmp eq i32 %2, 0
  %7 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 16
  %8 = load i64, i64* %7, align 8
  br i1 %6, label %22, label %9

9:                                                ; preds = %3
  %10 = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* nonnull %5, i64 128, i32 1, i64 128, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 %0, i64 %8) #10
  %11 = call i64 @strlen(i8* nonnull %5) #9
  %12 = trunc i64 %11 to i32
  %13 = icmp sgt i32 %12, 0
  %14 = add i64 %11, 2147483648
  %15 = icmp ult i64 %14, 4294967296
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  %18 = call i64 @write(i32 2, i8* nonnull %5, i64 %11) #10
  br label %19

19:                                               ; preds = %9, %17
  %20 = sub nsw i32 0, %0
  %21 = and i32 %20, 255
  call void @NaClExit(i32 %21) #10
  br label %32

22:                                               ; preds = %3
  %23 = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* nonnull %5, i64 128, i32 1, i64 128, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 %0, i64 %8) #10
  %24 = call i64 @strlen(i8* nonnull %5) #9
  %25 = trunc i64 %24 to i32
  %26 = icmp sgt i32 %25, 0
  %27 = add i64 %24, 2147483648
  %28 = icmp ult i64 %27, 4294967296
  %29 = and i1 %26, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %22
  %31 = call i64 @write(i32 2, i8* nonnull %5, i64 %24) #10
  br label %32

32:                                               ; preds = %30, %22, %19
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree
declare i32 @__snprintf_chk(i8*, i64, i32, i64, i8*, ...) local_unnamed_addr #3

declare void @NaClExit(i32) local_unnamed_addr #6

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @NaClSignalTestCrashOnStartup() local_unnamed_addr #0 {
  %1 = tail call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #10
  %2 = icmp eq i8* %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = tail call i64 @write(i32 2, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.3, i64 0, i64 0), i64 51) #10
  store volatile i32 0, i32* inttoptr (i64 1 to i32*), align 4
  br label %5

5:                                                ; preds = %0, %3
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @NaClSignalSetUpExceptionFrame(%struct.NaClExceptionFrame*, %struct.NaClSignalContext* readonly, i32) local_unnamed_addr #8 {
  %4 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 0
  store volatile i32 220, i32* %4, align 8
  %5 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 1
  store volatile i32 208, i32* %5, align 4
  %6 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 2
  store volatile i32 12, i32* %6, align 8
  %7 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 3
  store volatile i32 62, i32* %7, align 4
  %8 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 4
  store volatile i32 144, i32* %8, align 8
  %9 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 5, i64 0
  store volatile i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 5, i64 1
  store volatile i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 5, i64 2
  store volatile i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 5, i64 3
  store volatile i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 5, i64 4
  store volatile i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 5, i64 5
  store volatile i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 5, i64 6
  store volatile i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 5, i64 7
  store volatile i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 5, i64 8
  store volatile i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 5, i64 9
  store volatile i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 5, i64 10
  store volatile i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 0
  store volatile i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 1
  store volatile i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 2
  store volatile i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 3
  store volatile i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 7
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 4
  store volatile i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 6
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 5
  store volatile i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 4
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 6
  store volatile i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 5
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 7
  store volatile i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 8
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 8
  store volatile i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 9
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 9
  store volatile i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 10
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 10
  store volatile i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 11
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 11
  store volatile i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 12
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 12
  store volatile i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 13
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 13
  store volatile i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 14
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 14
  store volatile i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 15
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 15
  store volatile i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 16
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 16
  store volatile i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 17
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 1, i32 6, i32 17
  store volatile i32 %72, i32* %73, align 8
  %74 = load i64, i64* %68, align 8
  %75 = trunc i64 %74 to i32
  %76 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 2, i32 0
  store volatile i32 %75, i32* %76, align 8
  %77 = load i64, i64* %32, align 8
  %78 = trunc i64 %77 to i32
  %79 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 2, i32 1
  store volatile i32 %78, i32* %79, align 4
  %80 = load i64, i64* %35, align 8
  %81 = trunc i64 %80 to i32
  %82 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 2, i32 2
  store volatile i32 %81, i32* %82, align 8
  %83 = getelementptr inbounds %struct.NaClExceptionFrame, %struct.NaClExceptionFrame* %0, i64 0, i32 0
  store volatile i64 0, i64* %83, align 8
  ret void
}

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
