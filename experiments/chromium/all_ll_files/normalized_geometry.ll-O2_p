; ModuleID = '../../ui/views/layout/normalized_geometry.cc'
source_filename = "../../ui/views/layout/normalized_geometry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.6 = type { i32 }
%"class.views::NormalizedSizeBounds" = type { %"class.views::SizeBound", %"class.views::SizeBound" }
%"class.views::SizeBound" = type { %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.6 }
%"class.views::NormalizedSize" = type { i32, i32 }
%"class.views::NormalizedPoint" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.views::NormalizedInsets" = type { %"class.views::Inset1D", %"class.views::Inset1D" }
%"class.views::Inset1D" = type { i32, i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.views::NormalizedRect" = type { %"class.views::NormalizedPoint", %"class.views::NormalizedSize" }
%"class.views::Span" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.views::SizeBounds" = type { %"class.views::SizeBound", %"class.views::SizeBound" }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }

@.str = private unnamed_addr constant [7 x i8] c"%d, %d\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"%d x %d\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"main: [\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"], cross: [\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.ref.tmp.5 = private unnamed_addr constant { { i8, %union.anon.6 } } { { i8, %union.anon.6 } { i8 1, %union.anon.6 zeroinitializer } }, align 4
@.str.6 = private unnamed_addr constant [4 x i8] c" x \00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c") [\00", align 1

@_ZN5views20NormalizedSizeBoundsC1Ev = hidden unnamed_addr alias void (%"class.views::NormalizedSizeBounds"*), void (%"class.views::NormalizedSizeBounds"*)* @_ZN5views20NormalizedSizeBoundsC2Ev
@_ZN5views20NormalizedSizeBoundsC1ENS_9SizeBoundES1_ = hidden unnamed_addr alias void (%"class.views::NormalizedSizeBounds"*, %"class.views::SizeBound"*, %"class.views::SizeBound"*), void (%"class.views::NormalizedSizeBounds"*, %"class.views::SizeBound"*, %"class.views::SizeBound"*)* @_ZN5views20NormalizedSizeBoundsC2ENS_9SizeBoundES1_
@_ZN5views20NormalizedSizeBoundsC1ERKS0_ = hidden unnamed_addr alias void (%"class.views::NormalizedSizeBounds"*, %"class.views::NormalizedSizeBounds"*), void (%"class.views::NormalizedSizeBounds"*, %"class.views::NormalizedSizeBounds"*)* @_ZN5views20NormalizedSizeBoundsC2ERKS0_
@_ZN5views20NormalizedSizeBoundsC1ERKNS_14NormalizedSizeE = hidden unnamed_addr alias void (%"class.views::NormalizedSizeBounds"*, %"class.views::NormalizedSize"*), void (%"class.views::NormalizedSizeBounds"*, %"class.views::NormalizedSize"*)* @_ZN5views20NormalizedSizeBoundsC2ERKNS_14NormalizedSizeE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views15NormalizedPoint8SetPointEii(%"class.views::NormalizedPoint"* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views15NormalizedPoint6OffsetEii(%"class.views::NormalizedPoint"* nocapture, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, %1
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, %2
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views15NormalizedPointeqERKS0_(%"class.views::NormalizedPoint"*, %"class.views::NormalizedPoint"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %1, i64 0, i32 0
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %9, align 4
  %13 = icmp eq i32 %11, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views15NormalizedPointneERKS0_(%"class.views::NormalizedPoint"* nocapture readonly, %"class.views::NormalizedPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %1, i64 0, i32 0
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %9, align 4
  %13 = icmp ne i32 %11, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ true, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views15NormalizedPointltERKS0_(%"class.views::NormalizedPoint"*, %"class.views::NormalizedPoint"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %1, i64 0, i32 1
  %7 = load i32, i32* %3, align 4
  %8 = load i32, i32* %5, align 4
  %9 = icmp slt i32 %7, %8
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = icmp slt i32 %8, %7
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = load i32, i32* %4, align 4
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %13, %14
  br label %16

16:                                               ; preds = %2, %10, %12
  %17 = phi i1 [ %15, %12 ], [ true, %2 ], [ false, %10 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views15NormalizedPoint8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.views::NormalizedPoint"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 %4, i32 %6) #10
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN5views14NormalizedSize7SetSizeEii(%"class.views::NormalizedSize"* nocapture, i32, i32) local_unnamed_addr #7 align 2 {
  %4 = icmp sgt i32 %1, 0
  %5 = select i1 %4, i32 %1, i32 0
  %6 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 0
  store i32 %5, i32* %6, align 4
  %7 = icmp sgt i32 %2, 0
  %8 = select i1 %7, i32 %2, i32 0
  %9 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 1
  store i32 %8, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14NormalizedSize7EnlargeEii(%"class.views::NormalizedSize"* nocapture, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, %1
  %7 = icmp sgt i32 %6, 0
  %8 = select i1 %7, i32 %6, i32 0
  store i32 %8, i32* %4, align 4
  %9 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, %2
  %12 = icmp sgt i32 %11, 0
  %13 = select i1 %12, i32 %11, i32 0
  store i32 %13, i32* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views14NormalizedSize8SetToMaxEii(%"class.views::NormalizedSize"* nocapture, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %1
  %7 = select i1 %6, i32 %1, i32 %5
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, %2
  %11 = select i1 %10, i32 %2, i32 %9
  store i32 %11, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14NormalizedSize8SetToMinEii(%"class.views::NormalizedSize"* nocapture, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %1, 0
  %7 = select i1 %6, i32 %1, i32 0
  %8 = icmp slt i32 %5, %7
  %9 = select i1 %8, i32 %5, i32 %7
  store i32 %9, i32* %4, align 4
  %10 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %2, 0
  %13 = select i1 %12, i32 %2, i32 0
  %14 = icmp slt i32 %11, %13
  %15 = select i1 %14, i32 %11, i32 %13
  store i32 %15, i32* %10, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views14NormalizedSize8SetToMaxERKS0_(%"class.views::NormalizedSize"* nocapture, %"class.views::NormalizedSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %4
  %10 = select i1 %9, i32 %4, i32 %8
  store i32 %10, i32* %7, align 4
  %11 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, %6
  %14 = select i1 %13, i32 %6, i32 %12
  store i32 %14, i32* %11, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views14NormalizedSize8SetToMinERKS0_(%"class.views::NormalizedSize"* nocapture, %"class.views::NormalizedSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %4, 0
  %10 = select i1 %9, i32 %4, i32 0
  %11 = icmp slt i32 %8, %10
  %12 = select i1 %11, i32 %8, i32 %10
  store i32 %12, i32* %7, align 4
  %13 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %6, 0
  %16 = select i1 %15, i32 %6, i32 0
  %17 = icmp slt i32 %14, %16
  %18 = select i1 %17, i32 %14, i32 %16
  store i32 %18, i32* %13, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views14NormalizedSizeeqERKS0_(%"class.views::NormalizedSize"*, %"class.views::NormalizedSize"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 0
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %9, align 4
  %13 = icmp eq i32 %11, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views14NormalizedSizeneERKS0_(%"class.views::NormalizedSize"* nocapture readonly, %"class.views::NormalizedSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 0
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %9, align 4
  %13 = icmp ne i32 %11, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ true, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views14NormalizedSizeltERKS0_(%"class.views::NormalizedSize"*, %"class.views::NormalizedSize"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 1
  %7 = load i32, i32* %3, align 4
  %8 = load i32, i32* %5, align 4
  %9 = icmp slt i32 %7, %8
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = icmp slt i32 %8, %7
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = load i32, i32* %4, align 4
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %13, %14
  br label %16

16:                                               ; preds = %2, %10, %12
  %17 = phi i1 [ %15, %12 ], [ true, %2 ], [ false, %10 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views14NormalizedSize8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.views::NormalizedSize"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i32 %4, i32 %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views16NormalizedInsetseqERKS0_(%"class.views::NormalizedInsets"*, %"class.views::NormalizedInsets"* dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5views7Inset1DeqERKS0_(%"class.views::Inset1D"* %3, %"class.views::Inset1D"* dereferenceable(8) %4) #10
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %0, i64 0, i32 1
  %9 = tail call zeroext i1 @_ZNK5views7Inset1DeqERKS0_(%"class.views::Inset1D"* %8, %"class.views::Inset1D"* dereferenceable(8) %7) #10
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ false, %2 ], [ %9, %6 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views16NormalizedInsetsneERKS0_(%"class.views::NormalizedInsets"*, %"class.views::NormalizedInsets"* dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5views7Inset1DeqERKS0_(%"class.views::Inset1D"* %3, %"class.views::Inset1D"* dereferenceable(8) %4) #10
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %0, i64 0, i32 1
  %9 = tail call zeroext i1 @_ZNK5views7Inset1DeqERKS0_(%"class.views::Inset1D"* %8, %"class.views::Inset1D"* dereferenceable(8) %7) #10
  %10 = xor i1 %9, true
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i1 [ true, %2 ], [ %10, %6 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views16NormalizedInsetsltERKS0_(%"class.views::NormalizedInsets"*, %"class.views::NormalizedInsets"* dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 1
  %7 = tail call zeroext i1 @_ZNK5views7Inset1DltERKS0_(%"class.views::Inset1D"* %3, %"class.views::Inset1D"* dereferenceable(8) %5) #10
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = tail call zeroext i1 @_ZNK5views7Inset1DltERKS0_(%"class.views::Inset1D"* %5, %"class.views::Inset1D"* dereferenceable(8) %3) #10
  br i1 %9, label %14, label %10

10:                                               ; preds = %8
  %11 = tail call zeroext i1 @_ZNK5views7Inset1DltERKS0_(%"class.views::Inset1D"* %4, %"class.views::Inset1D"* dereferenceable(8) %6) #10
  br i1 %11, label %14, label %12

12:                                               ; preds = %10
  %13 = tail call zeroext i1 @_ZNK5views7Inset1DltERKS0_(%"class.views::Inset1D"* %6, %"class.views::Inset1D"* dereferenceable(8) %4) #10
  br label %14

14:                                               ; preds = %2, %8, %10, %12
  %15 = phi i1 [ true, %2 ], [ false, %8 ], [ true, %10 ], [ false, %12 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views16NormalizedInsets8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.views::NormalizedInsets"*) local_unnamed_addr #5 align 2 {
  %3 = alloca [5 x %"class.base::BasicStringPiece"], align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast [5 x %"class.base::BasicStringPiece"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #10
  %7 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0
  %8 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0, i32 1
  store i64 7, i64* %9, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 0
  call void @_ZNK5views7Inset1D8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.views::Inset1D"* %11) #10
  %12 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 1, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = select i1 %16, i8* %18, i8* %10
  store i8* %19, i8** %12, align 8
  %20 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 1, i32 1
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %15 to i64
  %24 = select i1 %16, i64 %22, i64 %23
  store i64 %24, i64* %20, align 8
  %25 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i8** %25, align 8
  %26 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 2, i32 1
  store i64 11, i64* %26, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 1
  call void @_ZNK5views7Inset1D8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.views::Inset1D"* %28) #10
  %29 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 3, i32 0
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %27
  store i8* %36, i8** %29, align 8
  %37 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 3, i32 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %32 to i64
  %41 = select i1 %33, i64 %39, i64 %40
  store i64 %41, i64* %37, align 8
  %42 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 4, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8** %42, align 8
  %43 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 4, i32 1
  store i64 1, i64* %43, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret %0, i64 5, %"class.base::BasicStringPiece"* nonnull %7) #10
  %44 = load i8, i8* %31, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %2
  %47 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %2, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %49 = load i8, i8* %14, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  %52 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %48, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #10
  ret void
}

declare void @_ZNK5views7Inset1D8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.views::Inset1D"*) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views20NormalizedSizeBoundsC2Ev(%"class.views::NormalizedSizeBounds"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views20NormalizedSizeBoundsC2ENS_9SizeBoundES1_(%"class.views::NormalizedSizeBounds"* nocapture, %"class.views::SizeBound"* nocapture readonly, %"class.views::SizeBound"* nocapture readonly) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.views::SizeBound"* %1 to i64*
  %5 = bitcast %"class.views::NormalizedSizeBounds"* %0 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  %7 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1
  %8 = bitcast %"class.views::SizeBound"* %2 to i64*
  %9 = bitcast %"class.views::SizeBound"* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views20NormalizedSizeBoundsC2ERKS0_(%"class.views::NormalizedSizeBounds"* nocapture, %"class.views::NormalizedSizeBounds"* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.views::NormalizedSizeBounds"* %1 to i64*
  %4 = bitcast %"class.views::NormalizedSizeBounds"* %0 to i64*
  %5 = load i64, i64* %3, align 4
  store i64 %5, i64* %4, align 4
  %6 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 1
  %8 = bitcast %"class.views::SizeBound"* %7 to i64*
  %9 = bitcast %"class.views::SizeBound"* %6 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views20NormalizedSizeBoundsC2ERKNS_14NormalizedSizeE(%"class.views::NormalizedSizeBounds"* nocapture, %"class.views::NormalizedSize"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %5, align 4
  %6 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %4, i32* %6, align 4
  %7 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %9, align 4
  %10 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %8, i32* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20NormalizedSizeBounds6ExpandEii(%"class.views::NormalizedSizeBounds"*, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = alloca %"class.views::SizeBound", align 4
  %5 = alloca %"class.views::SizeBound", align 4
  %6 = alloca %"class.views::SizeBound", align 4
  %7 = alloca %"class.views::SizeBound", align 4
  %8 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  store i8 1, i8* %10, align 4
  %11 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %1, i32* %11, align 4
  call void @_ZN5viewsplERKNS_9SizeBoundES2_(%"class.views::SizeBound"* nonnull sret %4, %"class.views::SizeBound"* dereferenceable(8) %9, %"class.views::SizeBound"* nonnull dereferenceable(8) %5) #10
  %12 = load i8, i8* %8, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14, %3
  br label %19

19:                                               ; preds = %14, %18
  %20 = phi %"class.views::SizeBound"* [ %4, %18 ], [ bitcast ({ { i8, %union.anon.6 } }* @.ref.tmp.5 to %"class.views::SizeBound"*), %14 ]
  %21 = bitcast %"class.views::SizeBound"* %20 to i64*
  %22 = bitcast %"class.views::NormalizedSizeBounds"* %0 to i64*
  %23 = load i64, i64* %21, align 4
  store i64 %23, i64* %22, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  %24 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  store i8 1, i8* %26, align 4
  %27 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %2, i32* %27, align 4
  call void @_ZN5viewsplERKNS_9SizeBoundES2_(%"class.views::SizeBound"* nonnull sret %6, %"class.views::SizeBound"* dereferenceable(8) %25, %"class.views::SizeBound"* nonnull dereferenceable(8) %7) #10
  %28 = load i8, i8* %24, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30, %19
  br label %35

35:                                               ; preds = %30, %34
  %36 = phi %"class.views::SizeBound"* [ %6, %34 ], [ bitcast ({ { i8, %union.anon.6 } }* @.ref.tmp.5 to %"class.views::SizeBound"*), %30 ]
  %37 = bitcast %"class.views::SizeBound"* %36 to i64*
  %38 = bitcast %"class.views::SizeBound"* %25 to i64*
  %39 = load i64, i64* %37, align 4
  store i64 %39, i64* %38, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  ret void
}

declare void @_ZN5viewsplERKNS_9SizeBoundES2_(%"class.views::SizeBound"* sret, %"class.views::SizeBound"* dereferenceable(8), %"class.views::SizeBound"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20NormalizedSizeBounds5InsetERKNS_16NormalizedInsetsE(%"class.views::NormalizedSizeBounds"*, %"class.views::NormalizedInsets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = alloca %"class.views::SizeBound", align 4
  %4 = alloca %"class.views::SizeBound", align 4
  %5 = alloca %"class.views::SizeBound", align 4
  %6 = alloca %"class.views::SizeBound", align 4
  %7 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %8, %10
  %12 = sub nsw i32 0, %11
  %13 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %14, %16
  %18 = sub nsw i32 0, %17
  %19 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 0
  %21 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  store i8 1, i8* %21, align 4
  %22 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %12, i32* %22, align 4
  call void @_ZN5viewsplERKNS_9SizeBoundES2_(%"class.views::SizeBound"* nonnull sret %3, %"class.views::SizeBound"* dereferenceable(8) %20, %"class.views::SizeBound"* nonnull dereferenceable(8) %4) #10
  %23 = load i8, i8* %19, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25, %2
  br label %30

30:                                               ; preds = %29, %25
  %31 = phi %"class.views::SizeBound"* [ %3, %29 ], [ bitcast ({ { i8, %union.anon.6 } }* @.ref.tmp.5 to %"class.views::SizeBound"*), %25 ]
  %32 = bitcast %"class.views::SizeBound"* %31 to i64*
  %33 = bitcast %"class.views::NormalizedSizeBounds"* %0 to i64*
  %34 = load i64, i64* %32, align 4
  store i64 %34, i64* %33, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %35 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  store i8 1, i8* %37, align 4
  %38 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %18, i32* %38, align 4
  call void @_ZN5viewsplERKNS_9SizeBoundES2_(%"class.views::SizeBound"* nonnull sret %5, %"class.views::SizeBound"* dereferenceable(8) %36, %"class.views::SizeBound"* nonnull dereferenceable(8) %6) #10
  %39 = load i8, i8* %35, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.views::SizeBound", %"class.views::SizeBound"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %41, %30
  br label %46

46:                                               ; preds = %41, %45
  %47 = phi %"class.views::SizeBound"* [ %5, %45 ], [ bitcast ({ { i8, %union.anon.6 } }* @.ref.tmp.5 to %"class.views::SizeBound"*), %41 ]
  %48 = bitcast %"class.views::SizeBound"* %47 to i64*
  %49 = bitcast %"class.views::SizeBound"* %36 to i64*
  %50 = load i64, i64* %48, align 4
  store i64 %50, i64* %49, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views20NormalizedSizeBoundseqERKS0_(%"class.views::NormalizedSizeBounds"*, %"class.views::NormalizedSizeBounds"* dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp ne i8 %4, 0
  %6 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = xor i1 %5, %8
  %10 = xor i1 %5, true
  %11 = or i1 %9, %10
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = icmp eq i8 %7, 0
  br i1 %13, label %14, label %15, !prof !3

14:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %22, label %42

21:                                               ; preds = %2
  br i1 %9, label %42, label %22

22:                                               ; preds = %21, %15
  %23 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp ne i8 %24, 0
  %26 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp ne i8 %27, 0
  %29 = xor i1 %25, %28
  %30 = xor i1 %25, true
  %31 = or i1 %29, %30
  %32 = xor i1 %29, true
  br i1 %31, label %42, label %33

33:                                               ; preds = %22
  %34 = icmp eq i8 %27, 0
  br i1 %34, label %35, label %36, !prof !3

35:                                               ; preds = %33
  tail call void @llvm.trap() #10
  unreachable

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %38, %40
  br label %42

42:                                               ; preds = %15, %21, %22, %36
  %43 = phi i1 [ false, %21 ], [ false, %15 ], [ %32, %22 ], [ %41, %36 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views20NormalizedSizeBoundsneERKS0_(%"class.views::NormalizedSizeBounds"* nocapture readonly, %"class.views::NormalizedSizeBounds"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp ne i8 %4, 0
  %6 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = xor i1 %5, %8
  %10 = xor i1 %5, true
  %11 = or i1 %9, %10
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = icmp eq i8 %7, 0
  br i1 %13, label %14, label %15, !prof !3

14:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %22, label %42

21:                                               ; preds = %2
  br i1 %9, label %42, label %22

22:                                               ; preds = %21, %15
  %23 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp ne i8 %24, 0
  %26 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp ne i8 %27, 0
  %29 = xor i1 %25, %28
  %30 = xor i1 %25, true
  %31 = or i1 %29, %30
  %32 = xor i1 %29, true
  br i1 %31, label %42, label %33

33:                                               ; preds = %22
  %34 = icmp eq i8 %27, 0
  br i1 %34, label %35, label %36, !prof !3

35:                                               ; preds = %33
  tail call void @llvm.trap() #10
  unreachable

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %38, %40
  br label %42

42:                                               ; preds = %15, %21, %22, %36
  %43 = phi i1 [ false, %21 ], [ false, %15 ], [ %32, %22 ], [ %41, %36 ]
  %44 = xor i1 %43, true
  ret i1 %44
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views20NormalizedSizeBoundsltERKS0_(%"class.views::NormalizedSizeBounds"*, %"class.views::NormalizedSizeBounds"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %5, label %16, label %9

9:                                                ; preds = %2
  br i1 %8, label %33, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %33, label %17

16:                                               ; preds = %2
  br i1 %8, label %19, label %33

17:                                               ; preds = %10
  %18 = icmp slt i32 %14, %12
  br i1 %18, label %33, label %19

19:                                               ; preds = %17, %16
  %20 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %29, %31
  br label %33

33:                                               ; preds = %9, %10, %16, %17, %19, %23, %27
  %34 = phi i1 [ true, %10 ], [ false, %17 ], [ %32, %27 ], [ false, %19 ], [ true, %23 ], [ true, %9 ], [ false, %16 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views20NormalizedSizeBounds8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.views::NormalizedSizeBounds"*) local_unnamed_addr #5 align 2 {
  %3 = alloca [3 x %"class.base::BasicStringPiece"], align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast [3 x %"class.base::BasicStringPiece"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #10
  %7 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 0
  call void @_ZNK5views9SizeBound8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.views::SizeBound"* %9) #10
  %10 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = select i1 %14, i8* %16, i8* %8
  store i8* %17, i8** %10, align 8
  %18 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  store i64 %22, i64* %18, align 8
  %23 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8** %23, align 8
  %24 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 1, i32 1
  store i64 3, i64* %24, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %1, i64 0, i32 1
  call void @_ZNK5views9SizeBound8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.views::SizeBound"* %26) #10
  %27 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 2, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = select i1 %31, i8* %33, i8* %25
  store i8* %34, i8** %27, align 8
  %35 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 2, i32 1
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %30 to i64
  %39 = select i1 %31, i64 %37, i64 %38
  store i64 %39, i64* %35, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret %0, i64 3, %"class.base::BasicStringPiece"* nonnull %7) #10
  %40 = load i8, i8* %29, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %2
  %43 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %43) #11
  br label %44

44:                                               ; preds = %2, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  %45 = load i8, i8* %12, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  %48 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #10
  ret void
}

declare void @_ZNK5views9SizeBound8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.views::SizeBound"*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5views14NormalizedRect11GetMainSpanEv(%"class.views::NormalizedRect"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = shl nuw i64 %6, 32
  %8 = zext i32 %3 to i64
  %9 = or i64 %7, %8
  ret i64 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views14NormalizedRect11SetMainSpanERKNS_4SpanE(%"class.views::NormalizedRect"* nocapture, %"class.views::Span"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.views::Span", %"class.views::Span"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 0
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"class.views::Span", %"class.views::Span"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 0
  store i32 %7, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14NormalizedRect9AlignMainERKNS_4SpanENS_15LayoutAlignmentERKNS_7Inset1DE(%"class.views::NormalizedRect"* nocapture, %"class.views::Span"* dereferenceable(8), i32, %"class.views::Inset1D"* dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.views::Span"*
  %7 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = bitcast i64* %5 to i32*
  %9 = getelementptr inbounds %"class.views::Span", %"class.views::Span"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = shl nuw i64 %14, 32
  %16 = zext i32 %11 to i64
  %17 = or i64 %15, %16
  store i64 %17, i64* %5, align 8
  call void @_ZN5views4Span5AlignERKS0_NS_15LayoutAlignmentERKNS_7Inset1DE(%"class.views::Span"* nonnull %6, %"class.views::Span"* dereferenceable(8) %1, i32 %2, %"class.views::Inset1D"* dereferenceable(8) %3) #10
  %18 = load i32, i32* %8, align 8
  store i32 %18, i32* %10, align 4
  %19 = load i32, i32* %9, align 4
  store i32 %19, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

declare void @_ZN5views4Span5AlignERKS0_NS_15LayoutAlignmentERKNS_7Inset1DE(%"class.views::Span"*, %"class.views::Span"* dereferenceable(8), i32, %"class.views::Inset1D"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5views14NormalizedRect12GetCrossSpanEv(%"class.views::NormalizedRect"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = shl nuw i64 %6, 32
  %8 = zext i32 %3 to i64
  %9 = or i64 %7, %8
  ret i64 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views14NormalizedRect12SetCrossSpanERKNS_4SpanE(%"class.views::NormalizedRect"* nocapture, %"class.views::Span"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.views::Span", %"class.views::Span"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 1
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"class.views::Span", %"class.views::Span"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 1
  store i32 %7, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14NormalizedRect10AlignCrossERKNS_4SpanENS_15LayoutAlignmentERKNS_7Inset1DE(%"class.views::NormalizedRect"* nocapture, %"class.views::Span"* dereferenceable(8), i32, %"class.views::Inset1D"* dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.views::Span"*
  %7 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = bitcast i64* %5 to i32*
  %9 = getelementptr inbounds %"class.views::Span", %"class.views::Span"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = shl nuw i64 %14, 32
  %16 = zext i32 %11 to i64
  %17 = or i64 %15, %16
  store i64 %17, i64* %5, align 8
  call void @_ZN5views4Span5AlignERKS0_NS_15LayoutAlignmentERKNS_7Inset1DE(%"class.views::Span"* nonnull %6, %"class.views::Span"* dereferenceable(8) %1, i32 %2, %"class.views::Inset1D"* dereferenceable(8) %3) #10
  %18 = load i32, i32* %8, align 8
  store i32 %18, i32* %10, align 4
  %19 = load i32, i32* %9, align 4
  store i32 %19, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views14NormalizedRect7SetRectEiiii(%"class.views::NormalizedRect"* nocapture, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 0
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 1
  store i32 %2, i32* %7, align 4
  %8 = icmp sgt i32 %3, 0
  %9 = select i1 %8, i32 %3, i32 0
  %10 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 0
  store i32 %9, i32* %10, align 4
  %11 = icmp sgt i32 %4, 0
  %12 = select i1 %11, i32 %4, i32 0
  %13 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 1
  store i32 %12, i32* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN5views14NormalizedRect11SetByBoundsEiiii(%"class.views::NormalizedRect"* nocapture, i32, i32, i32, i32) local_unnamed_addr #7 align 2 {
  %6 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 0
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 1
  store i32 %2, i32* %7, align 4
  %8 = sub nsw i32 %3, %1
  %9 = icmp sgt i32 %8, 0
  %10 = sub nsw i32 %4, %2
  %11 = icmp sgt i32 %10, 0
  %12 = select i1 %9, i32 %8, i32 0
  %13 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 0
  store i32 %12, i32* %13, align 4
  %14 = select i1 %11, i32 %10, i32 0
  %15 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 1
  store i32 %14, i32* %15, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views14NormalizedRect5InsetERKNS_16NormalizedInsetsE(%"class.views::NormalizedRect"* nocapture, %"class.views::NormalizedInsets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, %4
  store i32 %13, i32* %11, align 4
  %14 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, %6
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %8, %4
  %20 = sub i32 %18, %19
  %21 = icmp sgt i32 %20, 0
  %22 = select i1 %21, i32 %20, i32 0
  store i32 %22, i32* %17, align 4
  %23 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = add i32 %10, %6
  %26 = sub i32 %24, %25
  %27 = icmp sgt i32 %26, 0
  %28 = select i1 %27, i32 %26, i32 0
  store i32 %28, i32* %23, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views14NormalizedRect5InsetEiiii(%"class.views::NormalizedRect"* nocapture, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, %1
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, %2
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %3, %1
  %15 = sub i32 %13, %14
  %16 = icmp sgt i32 %15, 0
  %17 = select i1 %16, i32 %15, i32 0
  store i32 %17, i32* %12, align 4
  %18 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %4, %2
  %21 = sub i32 %19, %20
  %22 = icmp sgt i32 %21, 0
  %23 = select i1 %22, i32 %21, i32 0
  store i32 %23, i32* %18, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views14NormalizedRect5InsetEii(%"class.views::NormalizedRect"* nocapture, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, %1
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, %2
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = shl i32 %1, 1
  %13 = sub i32 %11, %12
  %14 = icmp sgt i32 %13, 0
  %15 = select i1 %14, i32 %13, i32 0
  store i32 %15, i32* %10, align 4
  %16 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = shl i32 %2, 1
  %19 = sub i32 %17, %18
  %20 = icmp sgt i32 %19, 0
  %21 = select i1 %20, i32 %19, i32 0
  store i32 %21, i32* %16, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views14NormalizedRect6OffsetEii(%"class.views::NormalizedRect"* nocapture, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, %1
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, %2
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views14NormalizedRecteqERKS0_(%"class.views::NormalizedRect"*, %"class.views::NormalizedRect"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %9, align 4
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 1, i32 0
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %21, align 4
  %25 = icmp eq i32 %23, %24
  br label %26

26:                                               ; preds = %2, %8, %14, %20
  %27 = phi i1 [ false, %8 ], [ false, %14 ], [ %25, %20 ], [ false, %2 ]
  ret i1 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views14NormalizedRectneERKS0_(%"class.views::NormalizedRect"* nocapture readonly, %"class.views::NormalizedRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %9, align 4
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 1, i32 0
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %21, align 4
  %25 = icmp ne i32 %23, %24
  br label %26

26:                                               ; preds = %2, %8, %14, %20
  %27 = phi i1 [ true, %8 ], [ true, %14 ], [ %25, %20 ], [ true, %2 ]
  ret i1 %27
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views14NormalizedRectltERKS0_(%"class.views::NormalizedRect"*, %"class.views::NormalizedRect"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 0, i32 1
  %7 = load i32, i32* %3, align 4
  %8 = load i32, i32* %5, align 4
  %9 = icmp slt i32 %7, %8
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = icmp slt i32 %8, %7
  br i1 %11, label %32, label %12

12:                                               ; preds = %10
  %13 = load i32, i32* %4, align 4
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %32, label %16

16:                                               ; preds = %12
  %17 = icmp slt i32 %14, %13
  br i1 %17, label %32, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %0, i64 0, i32 1, i32 1
  %21 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 1, i32 1
  %23 = load i32, i32* %19, align 4
  %24 = load i32, i32* %21, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %32, label %26

26:                                               ; preds = %18
  %27 = icmp slt i32 %24, %23
  br i1 %27, label %32, label %28

28:                                               ; preds = %26
  %29 = load i32, i32* %20, align 4
  %30 = load i32, i32* %22, align 4
  %31 = icmp slt i32 %29, %30
  br label %32

32:                                               ; preds = %2, %10, %12, %16, %18, %26, %28
  %33 = phi i1 [ true, %12 ], [ false, %16 ], [ %31, %28 ], [ false, %26 ], [ true, %18 ], [ true, %2 ], [ false, %10 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views14NormalizedRect8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.views::NormalizedRect"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = alloca [5 x %"class.base::BasicStringPiece"], align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast [5 x %"class.base::BasicStringPiece"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #10
  %7 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0
  %8 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0, i32 1
  store i64 1, i64* %9, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4, !noalias !4
  %13 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4, !noalias !4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 %12, i32 %14) #10
  %15 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 1, i32 0
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = select i1 %19, i8* %21, i8* %10
  store i8* %22, i8** %15, align 8
  %23 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 1, i32 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %18 to i64
  %27 = select i1 %19, i64 %25, i64 %26
  store i64 %27, i64* %23, align 8
  %28 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 2, i32 1
  store i64 3, i64* %29, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 1, i32 0
  %32 = load i32, i32* %31, align 4, !noalias !7
  %33 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 1, i32 1
  %34 = load i32, i32* %33, align 4, !noalias !7
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i32 %32, i32 %34) #10
  %35 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 3, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = select i1 %39, i8* %41, i8* %30
  store i8* %42, i8** %35, align 8
  %43 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 3, i32 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %38 to i64
  %47 = select i1 %39, i64 %45, i64 %46
  store i64 %47, i64* %43, align 8
  %48 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 4, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8** %48, align 8
  %49 = getelementptr inbounds [5 x %"class.base::BasicStringPiece"], [5 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 4, i32 1
  store i64 1, i64* %49, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret %0, i64 5, %"class.base::BasicStringPiece"* nonnull %7) #10
  %50 = load i8, i8* %37, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %2
  %53 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %2, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  %55 = load i8, i8* %17, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %54
  %58 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %58) #11
  br label %59

59:                                               ; preds = %54, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5views9NormalizeENS_17LayoutOrientationERKN3gfx5PointE(i32, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 {
  %3 = icmp eq i32 %0, 0
  %4 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = select i1 %3, i32 %7, i32 %5
  %9 = select i1 %3, i32 %5, i32 %7
  %10 = zext i32 %8 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i32 %9 to i64
  %13 = or i64 %11, %12
  ret i64 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5views11DenormalizeENS_17LayoutOrientationERKNS_15NormalizedPointE(i32, %"class.views::NormalizedPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 {
  %3 = icmp eq i32 %0, 0
  %4 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.views::NormalizedPoint", %"class.views::NormalizedPoint"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = select i1 %3, i32 %7, i32 %5
  %9 = select i1 %3, i32 %5, i32 %7
  %10 = zext i32 %8 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i32 %9 to i64
  %13 = or i64 %11, %12
  ret i64 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5views9NormalizeENS_17LayoutOrientationERKN3gfx4SizeE(i32, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 {
  %3 = icmp eq i32 %0, 0
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = select i1 %3, i32 %7, i32 %5
  %9 = select i1 %3, i32 %5, i32 %7
  %10 = zext i32 %8 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i32 %9 to i64
  %13 = or i64 %11, %12
  ret i64 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5views11DenormalizeENS_17LayoutOrientationERKNS_14NormalizedSizeE(i32, %"class.views::NormalizedSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 {
  %3 = icmp eq i32 %0, 0
  %4 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.views::NormalizedSize", %"class.views::NormalizedSize"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = select i1 %3, i32 %7, i32 %5
  %9 = select i1 %3, i32 %5, i32 %7
  %10 = icmp sgt i32 %8, 0
  %11 = select i1 %10, i32 %8, i32 0
  %12 = icmp sgt i32 %9, 0
  %13 = select i1 %12, i32 %9, i32 0
  %14 = zext i32 %13 to i64
  %15 = shl nuw nsw i64 %14, 32
  %16 = zext i32 %11 to i64
  %17 = or i64 %15, %16
  ret i64 %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views9NormalizeENS_17LayoutOrientationERKNS_10SizeBoundsE(%"class.views::NormalizedSizeBounds"* noalias nocapture sret, i32, %"class.views::SizeBounds"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 {
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %"class.views::SizeBounds", %"class.views::SizeBounds"* %2, i64 0, i32 1
  %6 = bitcast %"class.views::SizeBound"* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = bitcast %"class.views::SizeBounds"* %2 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = select i1 %4, i64 %9, i64 %7
  %11 = select i1 %4, i64 %7, i64 %9
  %12 = bitcast %"class.views::NormalizedSizeBounds"* %0 to i64*
  store i64 %10, i64* %12, align 4
  %13 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %0, i64 0, i32 1
  %14 = bitcast %"class.views::SizeBound"* %13 to i64*
  store i64 %11, i64* %14, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views11DenormalizeENS_17LayoutOrientationERKNS_20NormalizedSizeBoundsE(%"class.views::SizeBounds"* noalias nocapture sret, i32, %"class.views::NormalizedSizeBounds"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 {
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %"class.views::NormalizedSizeBounds", %"class.views::NormalizedSizeBounds"* %2, i64 0, i32 1
  %6 = bitcast %"class.views::SizeBound"* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = bitcast %"class.views::NormalizedSizeBounds"* %2 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = select i1 %4, i64 %9, i64 %7
  %11 = select i1 %4, i64 %7, i64 %9
  %12 = bitcast %"class.views::SizeBounds"* %0 to i64*
  store i64 %10, i64* %12, align 4
  %13 = getelementptr inbounds %"class.views::SizeBounds", %"class.views::SizeBounds"* %0, i64 0, i32 1
  %14 = bitcast %"class.views::SizeBound"* %13 to i64*
  store i64 %11, i64* %14, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN5views9NormalizeENS_17LayoutOrientationERKN3gfx6InsetsE(i32, %"class.gfx::Insets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 {
  %3 = icmp eq i32 %0, 0
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 2
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 0
  %11 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 2
  %13 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 3
  br label %14

14:                                               ; preds = %9, %4
  %15 = phi i32* [ %8, %4 ], [ %13, %9 ]
  %16 = phi i32* [ %6, %4 ], [ %11, %9 ]
  %17 = phi i32* [ %7, %4 ], [ %12, %9 ]
  %18 = phi i32* [ %5, %4 ], [ %10, %9 ]
  %19 = load i32, i32* %18, align 4
  %20 = load i32, i32* %17, align 4
  %21 = load i32, i32* %16, align 4
  %22 = load i32, i32* %15, align 4
  %23 = zext i32 %20 to i64
  %24 = shl nuw i64 %23, 32
  %25 = zext i32 %19 to i64
  %26 = or i64 %24, %25
  %27 = insertvalue { i64, i64 } undef, i64 %26, 0
  %28 = zext i32 %22 to i64
  %29 = shl nuw i64 %28, 32
  %30 = zext i32 %21 to i64
  %31 = or i64 %29, %30
  %32 = insertvalue { i64, i64 } %27, i64 %31, 1
  ret { i64, i64 } %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN5views11DenormalizeENS_17LayoutOrientationERKNS_16NormalizedInsetsE(i32, %"class.views::NormalizedInsets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 {
  %3 = icmp eq i32 %0, 0
  br i1 %3, label %4, label %41

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %6, 0
  %14 = icmp sgt i32 %10, 0
  %15 = and i1 %13, %14
  %16 = sub nuw nsw i32 2147483647, %6
  %17 = icmp ult i32 %16, %10
  %18 = and i1 %17, %15
  br i1 %18, label %26, label %19

19:                                               ; preds = %4
  %20 = and i32 %10, %6
  %21 = icmp slt i32 %20, 0
  %22 = sub nsw i32 -2147483648, %6
  %23 = icmp sgt i32 %22, %10
  %24 = and i1 %23, %21
  %25 = select i1 %24, i32 %22, i32 %10
  br label %26

26:                                               ; preds = %19, %4
  %27 = phi i32 [ %25, %19 ], [ %16, %4 ]
  %28 = icmp sgt i32 %8, 0
  %29 = icmp sgt i32 %12, 0
  %30 = and i1 %28, %29
  %31 = sub nuw nsw i32 2147483647, %8
  %32 = icmp ult i32 %31, %12
  %33 = and i1 %32, %30
  br i1 %33, label %78, label %34

34:                                               ; preds = %26
  %35 = and i32 %12, %8
  %36 = icmp slt i32 %35, 0
  %37 = sub nsw i32 -2147483648, %8
  %38 = icmp sgt i32 %37, %12
  %39 = and i1 %38, %36
  %40 = select i1 %39, i32 %37, i32 %12
  br label %78

41:                                               ; preds = %2
  %42 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 1, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.views::NormalizedInsets", %"class.views::NormalizedInsets"* %1, i64 0, i32 1, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp sgt i32 %43, 0
  %51 = icmp sgt i32 %47, 0
  %52 = and i1 %50, %51
  %53 = sub nuw nsw i32 2147483647, %43
  %54 = icmp ult i32 %53, %47
  %55 = and i1 %54, %52
  br i1 %55, label %63, label %56

56:                                               ; preds = %41
  %57 = and i32 %47, %43
  %58 = icmp slt i32 %57, 0
  %59 = sub nsw i32 -2147483648, %43
  %60 = icmp sgt i32 %59, %47
  %61 = and i1 %60, %58
  %62 = select i1 %61, i32 %59, i32 %47
  br label %63

63:                                               ; preds = %56, %41
  %64 = phi i32 [ %62, %56 ], [ %53, %41 ]
  %65 = icmp sgt i32 %45, 0
  %66 = icmp sgt i32 %49, 0
  %67 = and i1 %65, %66
  %68 = sub nuw nsw i32 2147483647, %45
  %69 = icmp ult i32 %68, %49
  %70 = and i1 %69, %67
  br i1 %70, label %78, label %71

71:                                               ; preds = %63
  %72 = and i32 %49, %45
  %73 = icmp slt i32 %72, 0
  %74 = sub nsw i32 -2147483648, %45
  %75 = icmp sgt i32 %74, %49
  %76 = and i1 %75, %73
  %77 = select i1 %76, i32 %74, i32 %49
  br label %78

78:                                               ; preds = %71, %63, %34, %26
  %79 = phi i32 [ %40, %34 ], [ %31, %26 ], [ %77, %71 ], [ %68, %63 ]
  %80 = phi i32 [ %27, %34 ], [ %27, %26 ], [ %64, %71 ], [ %64, %63 ]
  %81 = phi i32 [ %8, %34 ], [ %8, %26 ], [ %45, %71 ], [ %45, %63 ]
  %82 = phi i32 [ %6, %34 ], [ %6, %26 ], [ %43, %71 ], [ %43, %63 ]
  %83 = zext i32 %81 to i64
  %84 = shl nuw i64 %83, 32
  %85 = zext i32 %82 to i64
  %86 = or i64 %84, %85
  %87 = insertvalue { i64, i64 } undef, i64 %86, 0
  %88 = zext i32 %79 to i64
  %89 = shl nuw i64 %88, 32
  %90 = zext i32 %80 to i64
  %91 = or i64 %89, %90
  %92 = insertvalue { i64, i64 } %87, i64 %91, 1
  ret { i64, i64 } %92
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN5views9NormalizeENS_17LayoutOrientationERKN3gfx4RectE(i32, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 {
  %3 = icmp eq i32 %0, 0
  %4 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = select i1 %3, i32 %7, i32 %5
  %9 = select i1 %3, i32 %5, i32 %7
  %10 = zext i32 %8 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i32 %9 to i64
  %13 = or i64 %11, %12
  %14 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = select i1 %3, i32 %17, i32 %15
  %19 = select i1 %3, i32 %15, i32 %17
  %20 = zext i32 %18 to i64
  %21 = shl nuw i64 %20, 32
  %22 = zext i32 %19 to i64
  %23 = or i64 %21, %22
  %24 = insertvalue { i64, i64 } undef, i64 %13, 0
  %25 = insertvalue { i64, i64 } %24, i64 %23, 1
  ret { i64, i64 } %25
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN5views11DenormalizeENS_17LayoutOrientationERKNS_14NormalizedRectE(i32, %"class.views::NormalizedRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 {
  %3 = icmp eq i32 %0, 0
  %4 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = select i1 %3, i32 %7, i32 %5
  %9 = select i1 %3, i32 %5, i32 %7
  %10 = zext i32 %8 to i64
  %11 = shl nuw i64 %10, 32
  %12 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.views::NormalizedRect", %"class.views::NormalizedRect"* %1, i64 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = select i1 %3, i32 %13, i32 %15
  %17 = select i1 %3, i32 %15, i32 %13
  %18 = icmp sgt i32 %16, 0
  %19 = select i1 %18, i32 %16, i32 0
  %20 = icmp sgt i32 %17, 0
  %21 = select i1 %20, i32 %17, i32 0
  %22 = zext i32 %9 to i64
  %23 = or i64 %11, %22
  %24 = icmp sgt i32 %9, 0
  %25 = sub nuw nsw i32 2147483647, %9
  %26 = icmp ult i32 %25, %19
  %27 = and i1 %24, %26
  %28 = select i1 %27, i32 %25, i32 %19
  %29 = icmp sgt i32 %8, 0
  %30 = sub nuw nsw i32 2147483647, %8
  %31 = icmp ult i32 %30, %21
  %32 = and i1 %29, %31
  %33 = select i1 %32, i32 %30, i32 %21
  %34 = icmp sgt i32 %28, 0
  %35 = select i1 %34, i32 %28, i32 0
  %36 = icmp sgt i32 %33, 0
  %37 = select i1 %36, i32 %33, i32 0
  %38 = insertvalue { i64, i64 } undef, i64 %23, 0
  %39 = zext i32 %37 to i64
  %40 = shl nuw nsw i64 %39, 32
  %41 = zext i32 %35 to i64
  %42 = or i64 %40, %41
  %43 = insertvalue { i64, i64 } %38, i64 %42, 1
  ret { i64, i64 } %43
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5views11GetMainAxisENS_17LayoutOrientationERKN3gfx4SizeE(i32, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 {
  %3 = icmp eq i32 %0, 0
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = select i1 %3, i32 %5, i32 %7
  ret i32 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5views12GetCrossAxisENS_17LayoutOrientationERKN3gfx4SizeE(i32, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 {
  %3 = icmp eq i32 %0, 0
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = select i1 %3, i32 %5, i32 %7
  ret i32 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views11GetMainAxisENS_17LayoutOrientationERKNS_10SizeBoundsE(%"class.views::SizeBound"* noalias nocapture sret, i32, %"class.views::SizeBounds"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 {
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %"class.views::SizeBounds", %"class.views::SizeBounds"* %2, i64 0, i32 1
  %6 = bitcast %"class.views::SizeBound"* %5 to i64*
  %7 = bitcast %"class.views::SizeBounds"* %2 to i64*
  %8 = bitcast %"class.views::SizeBound"* %0 to i64*
  %9 = load i64, i64* %7, align 4
  %10 = load i64, i64* %6, align 4
  %11 = select i1 %4, i64 %9, i64 %10
  store i64 %11, i64* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views12GetCrossAxisENS_17LayoutOrientationERKNS_10SizeBoundsE(%"class.views::SizeBound"* noalias nocapture sret, i32, %"class.views::SizeBounds"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 {
  %4 = icmp eq i32 %1, 0
  %5 = bitcast %"class.views::SizeBounds"* %2 to i64*
  %6 = getelementptr inbounds %"class.views::SizeBounds", %"class.views::SizeBounds"* %2, i64 0, i32 1
  %7 = bitcast %"class.views::SizeBound"* %6 to i64*
  %8 = bitcast %"class.views::SizeBound"* %0 to i64*
  %9 = load i64, i64* %7, align 4
  %10 = load i64, i64* %5, align 4
  %11 = select i1 %4, i64 %9, i64 %10
  store i64 %11, i64* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views11SetMainAxisEPN3gfx4SizeENS_17LayoutOrientationEi(%"class.gfx::Size"* nocapture, i32, i32) local_unnamed_addr #0 {
  switch i32 %1, label %12 [
    i32 0, label %4
    i32 1, label %8
  ]

4:                                                ; preds = %3
  %5 = icmp sgt i32 %2, 0
  %6 = select i1 %5, i32 %2, i32 0
  %7 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  store i32 %6, i32* %7, align 4
  br label %12

8:                                                ; preds = %3
  %9 = icmp sgt i32 %2, 0
  %10 = select i1 %9, i32 %2, i32 0
  %11 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  store i32 %10, i32* %11, align 4
  br label %12

12:                                               ; preds = %3, %8, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views12SetCrossAxisEPN3gfx4SizeENS_17LayoutOrientationEi(%"class.gfx::Size"* nocapture, i32, i32) local_unnamed_addr #0 {
  switch i32 %1, label %12 [
    i32 0, label %4
    i32 1, label %8
  ]

4:                                                ; preds = %3
  %5 = icmp sgt i32 %2, 0
  %6 = select i1 %5, i32 %2, i32 0
  %7 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  store i32 %6, i32* %7, align 4
  br label %12

8:                                                ; preds = %3
  %9 = icmp sgt i32 %2, 0
  %10 = select i1 %9, i32 %2, i32 0
  %11 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  store i32 %10, i32* %11, align 4
  br label %12

12:                                               ; preds = %3, %8, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views11SetMainAxisEPNS_10SizeBoundsENS_17LayoutOrientationENS_9SizeBoundE(%"class.views::SizeBounds"* nocapture, i32, %"class.views::SizeBound"* nocapture readonly) local_unnamed_addr #1 {
  switch i32 %1, label %13 [
    i32 0, label %4
    i32 1, label %8
  ]

4:                                                ; preds = %3
  %5 = bitcast %"class.views::SizeBound"* %2 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = bitcast %"class.views::SizeBounds"* %0 to i64*
  store i64 %6, i64* %7, align 4
  br label %13

8:                                                ; preds = %3
  %9 = bitcast %"class.views::SizeBound"* %2 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = getelementptr inbounds %"class.views::SizeBounds", %"class.views::SizeBounds"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast i8* %11 to i64*
  store i64 %10, i64* %12, align 4
  br label %13

13:                                               ; preds = %3, %8, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views12SetCrossAxisEPNS_10SizeBoundsENS_17LayoutOrientationENS_9SizeBoundE(%"class.views::SizeBounds"* nocapture, i32, %"class.views::SizeBound"* nocapture readonly) local_unnamed_addr #1 {
  switch i32 %1, label %13 [
    i32 0, label %4
    i32 1, label %9
  ]

4:                                                ; preds = %3
  %5 = bitcast %"class.views::SizeBound"* %2 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = getelementptr inbounds %"class.views::SizeBounds", %"class.views::SizeBounds"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast i8* %7 to i64*
  store i64 %6, i64* %8, align 4
  br label %13

9:                                                ; preds = %3
  %10 = bitcast %"class.views::SizeBound"* %2 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = bitcast %"class.views::SizeBounds"* %0 to i64*
  store i64 %11, i64* %12, align 4
  br label %13

13:                                               ; preds = %3, %9, %4
  ret void
}

declare zeroext i1 @_ZNK5views7Inset1DeqERKS0_(%"class.views::Inset1D"*, %"class.views::Inset1D"* dereferenceable(8)) local_unnamed_addr #6

declare zeroext i1 @_ZNK5views7Inset1DltERKS0_(%"class.views::Inset1D"*, %"class.views::Inset1D"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK5views15NormalizedPoint8ToStringEv: argument 0"}
!6 = distinct !{!6, !"_ZNK5views15NormalizedPoint8ToStringEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5views14NormalizedSize8ToStringEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5views14NormalizedSize8ToStringEv"}
