; ModuleID = '../../third_party/skia/src/codec/SkBmpBaseCodec.cpp'
source_filename = "../../third_party/skia/src/codec/SkBmpBaseCodec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkBmpBaseCodec = type { %class.SkBmpCodec, %"class.std::__1::unique_ptr.22" }
%class.SkBmpCodec = type { %class.SkCodec.base, i16, i32, i64, %"class.std::__1::unique_ptr.16" }
%class.SkCodec.base = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.3", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8 }>
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.SkStream* }
%class.SkStream = type { i32 (...)** }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.9, i32, i32 }
%class.sk_sp.9 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.10, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.10 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.0, [8 x i8] }
%struct.anon.0 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i32* }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i8* }
%class.SkCodec = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.3", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8, [6 x i8] }>
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.26", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.26" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.27", %class.sk_sp, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.27" = type { [4 x %class.SkPixmap] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkCodec::FrameInfo" = type { i32, i32, i8, i32, i8, i32, i32, %struct.SkIRect }
%class.SkFrameHolder = type opaque
%class.SkSampler = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZNK7SkCodec21onGetScaledDimensionsEf = comdat any

$_ZN7SkCodec21onDimensionsSupportedERK7SkISize = comdat any

$_ZNK10SkBmpCodec18onGetEncodedFormatEv = comdat any

$_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ = comdat any

$_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps = comdat any

$_ZNK7SkCodec16onGetValidSubsetEP7SkIRect = comdat any

$_ZNK10SkBmpCodec18onGetScanlineOrderEv = comdat any

$_ZNK7SkCodec14usesColorXformEv = comdat any

$_ZN7SkCodec15onGetFrameCountEv = comdat any

$_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE = comdat any

$_ZN7SkCodec20onGetRepetitionCountEv = comdat any

$_ZNK7SkCodec14getFrameHolderEv = comdat any

$_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE = comdat any

$_ZN7SkCodec19onIncrementalDecodeEPi = comdat any

$_ZN7SkCodec10getSamplerEb = comdat any

$_ZNK10SkBmpCodec7onInIcoEv = comdat any

@_ZTV14SkBmpBaseCodec = hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBmpBaseCodec*)* @_ZN14SkBmpBaseCodecD2Ev to i8*), i8* bitcast (void (%class.SkBmpBaseCodec*)* @_ZN14SkBmpBaseCodecD0Ev to i8*), i8* bitcast (i64 (%class.SkCodec*, float)* @_ZNK7SkCodec21onGetScaledDimensionsEf to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkISize*)* @_ZN7SkCodec21onDimensionsSupportedERK7SkISize to i8*), i8* bitcast (i32 (%class.SkBmpCodec*)* @_ZNK10SkBmpCodec18onGetEncodedFormatEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)* @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkIRect*)* @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkBmpCodec*)* @_ZN10SkBmpCodec8onRewindEv to i8*), i8* bitcast (i32 (%class.SkBmpCodec*)* @_ZNK10SkBmpCodec18onGetScanlineOrderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, i32)* @_ZNK7SkCodec16onOutputScanlineEi to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)* @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb to i8*), i8* bitcast (i1 (%class.SkCodec*)* @_ZNK7SkCodec14usesColorXformEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec15onGetFrameCountEv to i8*), i8* bitcast (i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)* @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec20onGetRepetitionCountEv to i8*), i8* bitcast (%class.SkFrameHolder* (%class.SkCodec*)* @_ZNK7SkCodec14getFrameHolderEv to i8*), i8* bitcast (i32 (%class.SkBmpCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN10SkBmpCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, i32*)* @_ZN7SkCodec19onIncrementalDecodeEPi to i8*), i8* bitcast (i1 (%class.SkBmpCodec*, i32)* @_ZN10SkBmpCodec15onSkipScanlinesEi to i8*), i8* bitcast (i32 (%class.SkBmpCodec*, i8*, i32, i64)* @_ZN10SkBmpCodec14onGetScanlinesEPvim to i8*), i8* bitcast (%class.SkSampler* (%class.SkCodec*, i1)* @_ZN7SkCodec10getSamplerEb to i8*), i8* bitcast (i1 (%class.SkBmpCodec*)* @_ZNK10SkBmpCodec7onInIcoEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.SkBmpCodec*, i32)* @_ZN10SkBmpCodec8skipRowsEi to i8*)] }, align 8
@_ZTV10SkBmpCodec = external unnamed_addr constant { [30 x i8*] }, align 8

@_ZN14SkBmpBaseCodecD1Ev = hidden unnamed_addr alias void (%class.SkBmpBaseCodec*), void (%class.SkBmpBaseCodec*)* @_ZN14SkBmpBaseCodecD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBmpBaseCodecD2Ev(%class.SkBmpBaseCodec*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBmpBaseCodec, %class.SkBmpBaseCodec* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV14SkBmpBaseCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkBmpBaseCodec, %class.SkBmpBaseCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7sk_freePv(i8* nonnull %4) #6
  br label %7

7:                                                ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV10SkBmpCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %8 = getelementptr inbounds %class.SkBmpBaseCodec, %class.SkBmpBaseCodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* null, i32** %8, align 8
  %10 = icmp eq i32* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = bitcast i32* %9 to i8*
  tail call void @_ZdaPv(i8* %12) #7
  br label %13

13:                                               ; preds = %7, %11
  %14 = bitcast %class.SkBmpBaseCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecD2Ev(%class.SkCodec* %14) #6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN14SkBmpBaseCodecD0Ev(%class.SkBmpBaseCodec* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBmpBaseCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtN7SkCodec15SkScanlineOrderE(%class.SkBmpBaseCodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, i16 zeroext, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkBmpBaseCodec, %class.SkBmpBaseCodec* %0, i64 0, i32 0
  tail call void @_ZN10SkBmpCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtN7SkCodec15SkScanlineOrderE(%class.SkBmpCodec* %6, %struct.SkEncodedInfo* dereferenceable(32) %1, %class.SkStream* %2, i16 zeroext %3, i32 %4) #6
  %7 = getelementptr inbounds %class.SkBmpBaseCodec, %class.SkBmpBaseCodec* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV14SkBmpBaseCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkBmpBaseCodec, %class.SkBmpBaseCodec* %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkBmpBaseCodec, %class.SkBmpBaseCodec* %0, i64 0, i32 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %10, i32 0) #6
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.std::__1::unique_ptr.22"* %8 to i64*
  store i64 %12, i64* %13, align 8
  ret void
}

declare void @_ZN10SkBmpCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEtN7SkCodec15SkScanlineOrderE(%class.SkBmpCodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, i16 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK7SkCodec21onGetScaledDimensionsEf(%class.SkCodec*, float) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %4 to i64
  %10 = or i64 %8, %9
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7SkCodec21onDimensionsSupportedERK7SkISize(%class.SkCodec*, %struct.SkISize* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK10SkBmpCodec18onGetEncodedFormatEv(%class.SkBmpCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkCodec*, %class.SkYUVAPixmaps* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect(%class.SkCodec*, %struct.SkIRect*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN10SkBmpCodec8onRewindEv(%class.SkBmpCodec*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK10SkBmpCodec18onGetScanlineOrderEv(%class.SkBmpCodec*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBmpCodec, %class.SkBmpCodec* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK7SkCodec16onOutputScanlineEi(%class.SkCodec*, i32) unnamed_addr #3

declare zeroext i1 @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i1 zeroext, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14usesColorXformEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetFrameCountEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE(%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec20onGetRepetitionCountEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkFrameHolder* @_ZNK7SkCodec14getFrameHolderEv(%class.SkCodec*) unnamed_addr #0 comdat align 2 {
  ret %class.SkFrameHolder* null
}

declare i32 @_ZN10SkBmpCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkBmpCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec19onIncrementalDecodeEPi(%class.SkCodec*, i32*) unnamed_addr #0 comdat align 2 {
  ret i32 9
}

declare zeroext i1 @_ZN10SkBmpCodec15onSkipScanlinesEi(%class.SkBmpCodec*, i32) unnamed_addr #3

declare i32 @_ZN10SkBmpCodec14onGetScanlinesEPvim(%class.SkBmpCodec*, i8*, i32, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkSampler* @_ZN7SkCodec10getSamplerEb(%class.SkCodec*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret %class.SkSampler* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK10SkBmpCodec7onInIcoEv(%class.SkBmpCodec*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN10SkBmpCodec8skipRowsEi(%class.SkBmpCodec*, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7SkCodecD2Ev(%class.SkCodec*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
