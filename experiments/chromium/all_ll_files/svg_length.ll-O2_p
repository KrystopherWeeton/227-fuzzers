; ModuleID = '../../third_party/blink/renderer/core/svg/svg_length.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_length.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<blink::QualifiedName, blink::SVGLengthMode, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, WTF::HashTraits<blink::SVGLengthMode>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<blink::QualifiedName, blink::SVGLengthMode, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, WTF::HashTraits<blink::SVGLengthMode>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.203 }
%class.scoped_refptr.203 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.204", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.204" = type { %"class.base::RefCounted.205" }
%"class.base::RefCounted.205" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.174 }
%class.scoped_refptr.174 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.175" }
%"struct.std::__1::atomic.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i32 }
%"class.WTF::StaticSingleton.213" = type { %"class.WTF::StaticSingleton<WTF::HashSet<blink::QualifiedName, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashSet<blink::QualifiedName, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%struct.anon = type { i8, i8 }
%"class.WTF::StaticSingleton.221" = type { %"class.WTF::StaticSingleton<const blink::Persistent<blink::CSSParserContext> >::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::Persistent<blink::CSSParserContext> >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.125", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.165", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.110", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::Worklist.41"* }
%"class.blink::Worklist.41" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::Worklist.48"* }
%"class.blink::Worklist.48" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist.55"* }
%"class.blink::Worklist.55" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist.62"* }
%"class.blink::Worklist.62" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.90", %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.104", [4 x i8] }>
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92", %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i64 }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { float }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.113", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.133" }
%"class.WTF::VectorBuffer.133" = type { %"class.WTF::VectorBufferBase.134" }
%"class.WTF::VectorBufferBase.134" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.147" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.41"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.48"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.55"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.62"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.169" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.165" = type { %"struct.std::__1::__atomic_base.166" }
%"struct.std::__1::__atomic_base.166" = type { %"struct.std::__1::__cxx_atomic_impl.167" }
%"struct.std::__1::__cxx_atomic_impl.167" = type { %"struct.std::__1::__cxx_atomic_base_impl.168" }
%"struct.std::__1::__cxx_atomic_base_impl.168" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.258" }
%"struct.std::__1::atomic.258" = type { %"struct.std::__1::__atomic_base.259" }
%"struct.std::__1::__atomic_base.259" = type { %"struct.std::__1::__atomic_base.260" }
%"struct.std::__1::__atomic_base.260" = type { %"struct.std::__1::__cxx_atomic_impl.261" }
%"struct.std::__1::__cxx_atomic_impl.261" = type { %"struct.std::__1::__cxx_atomic_base_impl.262" }
%"struct.std::__1::__cxx_atomic_base_impl.262" = type { i32 }
%"class.blink::SVGLength" = type <{ %"class.blink::SVGListablePropertyBase", %"class.blink::Member", i8, [7 x i8] }>
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SVGListPropertyBase"* }
%"class.blink::SVGListPropertyBase" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase.0" }
%"class.blink::MemberBase.0" = type { %"class.blink::CSSPrimitiveValue"* }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSNumericLiteralValue" = type { %"class.blink::CSSPrimitiveValue", double }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.188, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.197", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.182" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::KURL"* }
%class.scoped_refptr.188 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.194" }
%"class.blink::MemberBase.194" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::WeakMember.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::PersistentBase.227" = type { %"class.blink::CSSParserContext"*, %"class.blink::PersistentNodePtr" }
%"class.blink::CSSMathExpressionNode" = type <{ i32 (...)**, i32, i8, i8, i8, i8 }>
%"class.blink::SVGLengthContext" = type { %"class.blink::SVGElement"* }
%"class.blink::SVGElement" = type opaque
%"struct.WTF::KeyValuePair.212" = type <{ %"class.blink::QualifiedName", i32, [4 x i8] }>
%"class.WTF::HashTable.209" = type <{ %"struct.WTF::KeyValuePair.212"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashTable.218" = type <{ %"class.blink::QualifiedName"*, i32, i32, i32, [4 x i8] }>
%"struct.blink::SMILAnimationEffectParameters" = type { i8, i8, i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN5blink9SVGLengthD0Ev = comdat any

$_ZNK5blink9SVGLength7GetTypeEv = comdat any

$_ZN5blink15SVGPropertyBaseD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16CSSParserContextELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_17CSSPrimitiveValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE13AllocateTableEj = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS7_SC_SD_EES2_EEbRKT0_ = comdat any

$_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6LookupERKS2_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZNK3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EEbRKT0_ = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink9SVGLengthE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SVGPropertyBase"*)* @_ZN5blink15SVGPropertyBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGLength"*)* @_ZN5blink9SVGLengthD0Ev to i8*), i8* bitcast (%"class.blink::SVGPropertyBase"* (%"class.blink::SVGLength"*, %"class.WTF::String"*)* @_ZNK5blink9SVGLength17CloneForAnimationERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGLength"*)* @_ZNK5blink9SVGLength13ValueAsStringEv to i8*), i8* bitcast (void (%"class.blink::SVGLength"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZN5blink9SVGLength3AddEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE to i8*), i8* bitcast (void (%"class.blink::SVGLength"*, %"struct.blink::SMILAnimationEffectParameters"*, float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZN5blink9SVGLength22CalculateAnimatedValueERKNS_29SMILAnimationEffectParametersEfjPKNS_15SVGPropertyBaseES6_S6_PKNS_10SVGElementE to i8*), i8* bitcast (float (%"class.blink::SVGLength"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZNK5blink9SVGLength17CalculateDistanceEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE to i8*), i8* bitcast (i32 (%"class.blink::SVGLength"*)* @_ZNK5blink9SVGLength7GetTypeEv to i8*), i8* bitcast (void (%"class.blink::SVGLength"*, %"class.blink::Visitor"*)* @_ZNK5blink9SVGLength5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map = internal global i64 0, align 8
@_ZN5blink9svg_names6kXAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kYAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kCxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kCyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kDxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kDyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kFrAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kFxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kFyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kRAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kRxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kRyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names10kWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kX1AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kX2AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kY1AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kY2AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kRefXAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kRefYAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kMarkerWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kMarkerHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names15kTextLengthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kStartOffsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set = internal global %"class.WTF::StaticSingleton.213" zeroinitializer, align 8
@_ZGVZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set = internal global i64 0, align 8
@_ZN5blink12_GLOBAL__N_123g_initial_lengths_tableE = internal unnamed_addr constant [7 x %struct.anon] [%struct.anon { i8 0, i8 18 }, %struct.anon { i8 -10, i8 2 }, %struct.anon { i8 0, i8 2 }, %struct.anon { i8 50, i8 2 }, %struct.anon { i8 100, i8 2 }, %struct.anon { i8 120, i8 2 }, %struct.anon { i8 3, i8 18 }], align 1
@_ZZN5blink12_GLOBAL__N_128GetSVGAttributeParserContextEvE20s_svg_parser_context = internal global %"class.WTF::StaticSingleton.221" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_128GetSVGAttributeParserContextEvE20s_svg_parser_context = internal global i64 0, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserContext]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGPropertyBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.3 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink13QualifiedNameENS2_13SVGLengthModeEEEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::QualifiedName, blink::SVGLengthMode>]\00", align 1
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.5 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::QualifiedName]\00", align 1

@_ZN5blink9SVGLengthC1ENS_13SVGLengthModeE = hidden unnamed_addr alias void (%"class.blink::SVGLength"*, i32), void (%"class.blink::SVGLength"*, i32)* @_ZN5blink9SVGLengthC2ENS_13SVGLengthModeE
@_ZN5blink9SVGLengthC1ENS0_7InitialENS_13SVGLengthModeE = hidden unnamed_addr alias void (%"class.blink::SVGLength"*, i32, i32), void (%"class.blink::SVGLength"*, i32, i32)* @_ZN5blink9SVGLengthC2ENS0_7InitialENS_13SVGLengthModeE
@_ZN5blink9SVGLengthC1ERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE = hidden unnamed_addr alias void (%"class.blink::SVGLength"*, %"class.blink::CSSPrimitiveValue"*, i32), void (%"class.blink::SVGLength"*, %"class.blink::CSSPrimitiveValue"*, i32)* @_ZN5blink9SVGLengthC2ERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9SVGLengthC2ENS_13SVGLengthModeE(%"class.blink::SVGLength"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double 0.000000e+00, i32 18) #9
  %4 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::SVGListPropertyBase"* null, %"class.blink::SVGListPropertyBase"** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9SVGLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSPrimitiveValue"* %4, %"class.blink::CSSPrimitiveValue"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %9 = trunc i32 %1 to i8
  %10 = load i8, i8* %8, align 8
  %11 = and i8 %9, 3
  %12 = and i8 %10, -4
  %13 = or i8 %12, %11
  store i8 %13, i8* %8, align 8
  ret void
}

declare %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9SVGLengthC2ERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE(%"class.blink::SVGLength"* nocapture, %"class.blink::CSSPrimitiveValue"* dereferenceable(3), i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::SVGListPropertyBase"* null, %"class.blink::SVGListPropertyBase"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9SVGLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSPrimitiveValue"* %1, %"class.blink::CSSPrimitiveValue"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %8 = trunc i32 %2 to i8
  %9 = load i8, i8* %7, align 8
  %10 = and i8 %8, 3
  %11 = and i8 %9, -4
  %12 = or i8 %11, %10
  store i8 %12, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9SVGLengthC2ENS0_7InitialENS_13SVGLengthModeE(%"class.blink::SVGLength"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @_ZN5blink12_GLOBAL__N_123g_initial_lengths_tableE, i64 0, i64 %4, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = sitofp i8 %6 to double
  %8 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @_ZN5blink12_GLOBAL__N_123g_initial_lengths_tableE, i64 0, i64 %4, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %7, i32 %10) #9
  %12 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::SVGListPropertyBase"* null, %"class.blink::SVGListPropertyBase"** %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9SVGLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSPrimitiveValue"* %12, %"class.blink::CSSPrimitiveValue"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %17 = trunc i32 %2 to i8
  %18 = load i8, i8* %16, align 8
  %19 = and i8 %17, 3
  %20 = and i8 %18, -4
  %21 = or i8 %20, %19
  store i8 %21, i8* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9SVGLength5TraceEPNS_7VisitorE(%"class.blink::SVGLength"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSPrimitiveValue"*
  %9 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17CSSPrimitiveValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %14

14:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGLength"* @_ZNK5blink9SVGLength5CloneEv(%"class.blink::SVGLength"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast %"class.blink::CSSPrimitiveValue"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8
  %7 = and i8 %6, 3
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #9
  %9 = bitcast i8* %8 to %"class.blink::SVGLength"*
  %10 = bitcast i8* %8 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"class.blink::SVGListPropertyBase"**
  store %"class.blink::SVGListPropertyBase"* null, %"class.blink::SVGListPropertyBase"** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9SVGLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 16
  %14 = bitcast i8* %13 to i64*
  store i64 %4, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 24
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, -4
  %18 = or i8 %17, %7
  store i8 %18, i8* %15, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  ret %"class.blink::SVGLength"* %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGPropertyBase"* @_ZNK5blink9SVGLength17CloneForAnimationERKN3WTF6StringE(%"class.blink::SVGLength"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8
  %5 = and i8 %4, 3
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #9
  %7 = bitcast i8* %6 to %"class.blink::SVGLength"*
  %8 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double 0.000000e+00, i32 18) #9
  %9 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %8, i64 0, i32 0
  %10 = bitcast i8* %6 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %6, i64 8
  %12 = bitcast i8* %11 to %"class.blink::SVGListPropertyBase"**
  store %"class.blink::SVGListPropertyBase"* null, %"class.blink::SVGListPropertyBase"** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9SVGLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = bitcast i8* %13 to %"class.blink::CSSPrimitiveValue"**
  store %"class.blink::CSSPrimitiveValue"* %9, %"class.blink::CSSPrimitiveValue"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 24
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, -4
  %18 = or i8 %17, %5
  store i8 %18, i8* %15, align 8
  %19 = getelementptr inbounds i8, i8* %6, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  %23 = tail call i32 @_ZN5blink9SVGLength16SetValueAsStringERKN3WTF6StringE(%"class.blink::SVGLength"* %7, %"class.WTF::String"* dereferenceable(8) %1)
  %24 = bitcast i8* %6 to %"class.blink::SVGPropertyBase"*
  ret %"class.blink::SVGPropertyBase"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9SVGLength16SetValueAsStringERKN3WTF6StringE(%"class.blink::SVGLength"* nocapture, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double 0.000000e+00, i32 18) #9
  %8 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1
  %9 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %7 to i64
  %10 = bitcast %"class.blink::Member"* %8 to i64*
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %97, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %7, i64 0, i32 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %14) #9
  br label %97

16:                                               ; preds = %2
  %17 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_128GetSVGAttributeParserContextEvE20s_svg_parser_context to i8*) acquire, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %57, !prof !2

19:                                               ; preds = %16
  %20 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_128GetSVGAttributeParserContextEvE20s_svg_parser_context) #9
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %57, label %22

22:                                               ; preds = %19
  %23 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #9
  %24 = bitcast i8* %23 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ENS_13CSSParserModeENS_17SecureContextModeENS0_15SelectorProfileEPKNS_8DocumentE(%"class.blink::CSSParserContext"* %24, i8 zeroext 2, i32 0, i8 zeroext 0, %"class.blink::Document"* null) #9
  %25 = getelementptr inbounds i8, i8* %23, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  store i8* %23, i8** bitcast (%"class.WTF::StaticSingleton.221"* @_ZZN5blink12_GLOBAL__N_128GetSVGAttributeParserContextEvE20s_svg_parser_context to i8**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.221", %"class.WTF::StaticSingleton.221"* @_ZZN5blink12_GLOBAL__N_128GetSVGAttributeParserContextEvE20s_svg_parser_context, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %29 = ptrtoint i8* %23 to i64
  switch i64 %29, label %30 [
    i64 0, label %56
    i64 -1, label %56
  ]

30:                                               ; preds = %22
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #9
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !3

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #9
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %46, label %49, !prof !3

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %47) #9
  %48 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  br label %49

49:                                               ; preds = %46, %37
  %50 = phi %"class.blink::PersistentNode"* [ %48, %46 ], [ %44, %37 ]
  %51 = bitcast %"class.blink::PersistentNode"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  store i64 %52, i64* %53, align 8
  %54 = bitcast %"class.blink::PersistentNode"* %50 to %"class.blink::PersistentBase.227"**
  store %"class.blink::PersistentBase.227"* bitcast (%"class.WTF::StaticSingleton.221"* @_ZZN5blink12_GLOBAL__N_128GetSVGAttributeParserContextEvE20s_svg_parser_context to %"class.blink::PersistentBase.227"*), %"class.blink::PersistentBase.227"** %54, align 8
  %55 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %50, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16CSSParserContextELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %55, align 8
  store %"class.blink::PersistentNode"* %50, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.221", %"class.WTF::StaticSingleton.221"* @_ZZN5blink12_GLOBAL__N_128GetSVGAttributeParserContextEvE20s_svg_parser_context, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %56

56:                                               ; preds = %49, %22, %22
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_128GetSVGAttributeParserContextEvE20s_svg_parser_context) #9
  br label %57

57:                                               ; preds = %16, %19, %56
  %58 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** bitcast (%"class.WTF::StaticSingleton.221"* @_ZZN5blink12_GLOBAL__N_128GetSVGAttributeParserContextEvE20s_svg_parser_context to %"class.blink::CSSParserContext"**), align 8
  %59 = tail call %"class.blink::CSSValue"* @_ZN5blink9CSSParser16ParseSingleValueENS_13CSSPropertyIDERKN3WTF6StringEPKNS_16CSSParserContextE(i32 442, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::CSSParserContext"* %58) #9
  %60 = icmp eq %"class.blink::CSSValue"* %59, null
  br i1 %60, label %97, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %59, i64 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp ugt i8 %63, 1
  br i1 %64, label %97, label %65

65:                                               ; preds = %61
  %66 = icmp eq i8 %63, 1
  br i1 %66, label %67, label %74

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %59, i64 2, i32 2
  %69 = bitcast i8* %68 to %"class.blink::CSSMathExpressionNode"**
  %70 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %70, i64 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = icmp ult i32 %72, 4
  br i1 %73, label %88, label %97

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %59, i64 0, i32 0
  %76 = load i8, i8* %75, align 8
  %77 = and i8 %76, 127
  %78 = zext i8 %77 to i32
  %79 = add nsw i32 %78, -3
  %80 = icmp ult i32 %79, 16
  %81 = icmp eq i8 %77, 32
  %82 = or i1 %81, %80
  %83 = add nsw i32 %78, -1
  %84 = icmp ult i32 %83, 2
  %85 = or i1 %84, %82
  %86 = icmp ne i8 %77, 32
  %87 = and i1 %86, %85
  br i1 %87, label %88, label %97

88:                                               ; preds = %74, %67
  %89 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1
  %90 = ptrtoint %"class.blink::CSSValue"* %59 to i64
  %91 = bitcast %"class.blink::Member"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %59, i64 0, i32 0
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #9
  br label %97

97:                                               ; preds = %61, %74, %67, %57, %94, %88, %13, %6
  %98 = phi i32 [ 0, %6 ], [ 0, %13 ], [ 0, %88 ], [ 0, %94 ], [ 8, %61 ], [ 8, %57 ], [ 8, %67 ], [ 8, %74 ]
  ret i32 %98
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9SVGLengtheqERKS0_(%"class.blink::SVGLength"* nocapture readonly, %"class.blink::SVGLength"* nocapture readonly dereferenceable(32)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8
  %5 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 8
  %7 = xor i8 %6, %4
  %8 = and i8 %7, 3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %1, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %13, align 8
  %15 = icmp eq %"class.blink::CSSPrimitiveValue"* %12, %14
  br label %16

16:                                               ; preds = %10, %2
  %17 = phi i1 [ false, %2 ], [ %15, %10 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink9SVGLength5ValueERKNS_16SVGLengthContextE(%"class.blink::SVGLength"* nocapture readonly, %"class.blink::SVGLengthContext"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %4, i64 0, i32 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 1
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 8
  %11 = and i8 %10, 3
  %12 = zext i8 %11 to i32
  %13 = tail call float @_ZNK5blink16SVGLengthContext12ResolveValueERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* %1, %"class.blink::CSSPrimitiveValue"* dereferenceable(3) %4, i32 %12) #9
  br label %34

14:                                               ; preds = %2
  %15 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %4) #9
  %16 = fcmp ult double %15, 0x47EFFFFFE0000000
  br i1 %16, label %17, label %21

17:                                               ; preds = %14
  %18 = fcmp ole double %15, 0xC7EFFFFFE0000000
  %19 = select i1 %18, double 0xC7EFFFFFE0000000, double %15
  %20 = fptrunc double %19 to float
  br label %21

21:                                               ; preds = %14, %17
  %22 = phi float [ %20, %17 ], [ 0x47EFFFFFE0000000, %14 ]
  %23 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %24 = load i8, i8* %23, align 8
  %25 = and i8 %24, 3
  %26 = zext i8 %25 to i32
  %27 = bitcast %"class.blink::CSSPrimitiveValue"** %3 to %"class.blink::CSSNumericLiteralValue"**
  %28 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = and i8 %30, 127
  %32 = zext i8 %31 to i32
  %33 = tail call float @_ZNK5blink16SVGLengthContext23ConvertValueToUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"* %1, float %22, i32 %26, i32 %32) #9
  br label %34

34:                                               ; preds = %21, %8
  %35 = phi float [ %13, %8 ], [ %33, %21 ]
  ret float %35
}

declare float @_ZNK5blink16SVGLengthContext12ResolveValueERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"*, %"class.blink::CSSPrimitiveValue"* dereferenceable(3), i32) local_unnamed_addr #1

declare float @_ZNK5blink16SVGLengthContext23ConvertValueToUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"*, float, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9SVGLength16SetValueAsNumberEf(%"class.blink::SVGLength"* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = fpext float %1 to double
  %4 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %3, i32 18) #9
  %5 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1
  %6 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %4 to i64
  %7 = bitcast %"class.blink::Member"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #9
  br label %13

13:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9SVGLength8SetValueEfRKNS_16SVGLengthContextE(%"class.blink::SVGLength"* nocapture, float, %"class.blink::SVGLengthContext"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %5, i64 0, i32 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 1
  br i1 %8, label %9, label %20

9:                                                ; preds = %3
  %10 = fpext float %1 to double
  %11 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %10, i32 18) #9
  %12 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1
  %13 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %11 to i64
  %14 = bitcast %"class.blink::Member"* %12 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %46, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %11, i64 0, i32 0, i32 0, i32 0
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #9
  br label %46

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 3
  %24 = zext i8 %23 to i32
  %25 = bitcast %"class.blink::CSSPrimitiveValue"** %4 to %"class.blink::CSSNumericLiteralValue"**
  %26 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %5, i64 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = and i8 %27, 127
  %29 = zext i8 %28 to i32
  %30 = tail call float @_ZNK5blink16SVGLengthContext25ConvertValueFromUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"* %2, float %1, i32 %24, i32 %29) #9
  %31 = fpext float %30 to double
  %32 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %25, align 8
  %33 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 8
  %35 = and i8 %34, 127
  %36 = zext i8 %35 to i32
  %37 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %31, i32 %36) #9
  %38 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1
  %39 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %37 to i64
  %40 = bitcast %"class.blink::Member"* %38 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %20
  %44 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %37, i64 0, i32 0, i32 0, i32 0
  %45 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %44) #9
  br label %46

46:                                               ; preds = %43, %20, %17, %9
  ret void
}

declare float @_ZNK5blink16SVGLengthContext25ConvertValueFromUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"*, float, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9SVGLength24SetValueInSpecifiedUnitsEf(%"class.blink::SVGLength"* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = fpext float %1 to double
  %4 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.blink::CSSPrimitiveValue"** %4 to %"class.blink::CSSNumericLiteralValue"**
  %6 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = and i8 %8, 127
  %10 = zext i8 %9 to i32
  %11 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %3, i32 %10) #9
  %12 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1
  %13 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %11 to i64
  %14 = bitcast %"class.blink::Member"* %12 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %11, i64 0, i32 0, i32 0, i32 0
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #9
  br label %20

20:                                               ; preds = %2, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9SVGLength10IsRelativeEv(%"class.blink::SVGLength"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* %3) #9
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %2, align 8
  %7 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %6, i64 0, i32 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 1
  br i1 %9, label %25, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %6, i64 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 127
  %14 = zext i8 %13 to i32
  %15 = add nsw i32 %14, -2
  %16 = icmp ult i32 %15, 16
  br i1 %16, label %20, label %17

17:                                               ; preds = %20, %10
  %18 = and i32 %14, 124
  %19 = icmp eq i32 %18, 12
  br label %25

20:                                               ; preds = %10
  %21 = trunc i32 %15 to i16
  %22 = lshr i16 -16377, %21
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %17, label %25

25:                                               ; preds = %1, %5, %17, %20
  %26 = phi i1 [ true, %20 ], [ true, %1 ], [ false, %5 ], [ %19, %17 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9SVGLength11SetUnitTypeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLength"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %4, align 8
  %6 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %5) #9
  %7 = fcmp ult double %6, 0x47EFFFFFE0000000
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = fcmp ole double %6, 0xC7EFFFFFE0000000
  %10 = select i1 %9, double 0xC7EFFFFFE0000000, double %6
  %11 = fptrunc double %10 to float
  %12 = fpext float %11 to double
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi double [ %12, %8 ], [ 0x47EFFFFFE0000000, %2 ]
  %15 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %14, i32 %1) #9
  %16 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %15 to i64
  %17 = bitcast %"class.blink::Member"* %3 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %15, i64 0, i32 0, i32 0, i32 0
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #9
  br label %23

23:                                               ; preds = %13, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink9SVGLength17ValueAsPercentageEv(%"class.blink::SVGLength"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* %3) #9
  %5 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %2, align 8
  %6 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %5) #9
  %7 = fcmp ult double %6, 0x47EFFFFFE0000000
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = fcmp ole double %6, 0xC7EFFFFFE0000000
  %10 = select i1 %9, double 0xC7EFFFFFE0000000, double %6
  %11 = fptrunc double %10 to float
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi float [ %11, %8 ], [ 0x47EFFFFFE0000000, %1 ]
  %14 = fdiv float %13, 1.000000e+02
  %15 = select i1 %4, float %14, float %13
  ret float %15
}

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink9SVGLength17ScaleByPercentageEf(%"class.blink::SVGLength"* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %3, align 8
  %5 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %4) #9
  %6 = fcmp ult double %5, 0x47EFFFFFE0000000
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = fcmp ole double %5, 0xC7EFFFFFE0000000
  %9 = select i1 %8, double 0xC7EFFFFFE0000000, double %5
  %10 = fptrunc double %9 to float
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi float [ %10, %7 ], [ 0x47EFFFFFE0000000, %2 ]
  %13 = fmul float %12, %1
  %14 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %3, align 8
  %15 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* %14) #9
  %16 = fdiv float %13, 1.000000e+02
  %17 = select i1 %15, float %16, float %13
  ret float %17
}

declare %"class.blink::CSSValue"* @_ZN5blink9CSSParser16ParseSingleValueENS_13CSSPropertyIDERKN3WTF6StringEPKNS_16CSSParserContextE(i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9SVGLength13ValueAsStringEv(%"class.blink::SVGLength"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %2, align 8
  %4 = tail call %"class.WTF::StringImpl"* @_ZNK5blink17CSSPrimitiveValue13CustomCSSTextEv(%"class.blink::CSSPrimitiveValue"* %3) #9
  ret %"class.WTF::StringImpl"* %4
}

declare %"class.WTF::StringImpl"* @_ZNK5blink17CSSPrimitiveValue13CustomCSSTextEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9SVGLength22NewValueSpecifiedUnitsENS_17CSSPrimitiveValue8UnitTypeEf(%"class.blink::SVGLength"* nocapture, i32, float) local_unnamed_addr #0 align 2 {
  %4 = fpext float %2 to double
  %5 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %4, i32 %1) #9
  %6 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1
  %7 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %5 to i64
  %8 = bitcast %"class.blink::Member"* %6 to i64*
  store atomic i64 %7, i64* %8 monotonic, align 8
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %5, i64 0, i32 0, i32 0, i32 0
  %13 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #9
  br label %14

14:                                               ; preds = %3, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9SVGLength23ConvertToSpecifiedUnitsENS_17CSSPrimitiveValue8UnitTypeERKNS_16SVGLengthContextE(%"class.blink::SVGLength"* nocapture, i32, %"class.blink::SVGLengthContext"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %5, i64 0, i32 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %11 = load i8, i8* %10, align 8
  %12 = and i8 %11, 3
  %13 = zext i8 %12 to i32
  %14 = tail call float @_ZNK5blink16SVGLengthContext12ResolveValueERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* %2, %"class.blink::CSSPrimitiveValue"* dereferenceable(3) %5, i32 %13) #9
  br label %35

15:                                               ; preds = %3
  %16 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %5) #9
  %17 = fcmp ult double %16, 0x47EFFFFFE0000000
  br i1 %17, label %18, label %22

18:                                               ; preds = %15
  %19 = fcmp ole double %16, 0xC7EFFFFFE0000000
  %20 = select i1 %19, double 0xC7EFFFFFE0000000, double %16
  %21 = fptrunc double %20 to float
  br label %22

22:                                               ; preds = %18, %15
  %23 = phi float [ %21, %18 ], [ 0x47EFFFFFE0000000, %15 ]
  %24 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %25 = load i8, i8* %24, align 8
  %26 = and i8 %25, 3
  %27 = zext i8 %26 to i32
  %28 = bitcast %"class.blink::CSSPrimitiveValue"** %4 to %"class.blink::CSSNumericLiteralValue"**
  %29 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 127
  %33 = zext i8 %32 to i32
  %34 = tail call float @_ZNK5blink16SVGLengthContext23ConvertValueToUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"* %2, float %23, i32 %27, i32 %33) #9
  br label %35

35:                                               ; preds = %9, %22
  %36 = phi float [ %14, %9 ], [ %34, %22 ]
  %37 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 3
  %40 = zext i8 %39 to i32
  %41 = tail call float @_ZNK5blink16SVGLengthContext25ConvertValueFromUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"* %2, float %36, i32 %40, i32 %1) #9
  %42 = fpext float %41 to double
  %43 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %42, i32 %1) #9
  %44 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1
  %45 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %43 to i64
  %46 = bitcast %"class.blink::Member"* %44 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %35
  %50 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %43, i64 0, i32 0, i32 0, i32 0
  %51 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %50) #9
  br label %52

52:                                               ; preds = %35, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to i8*) acquire, align 8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %32, !prof !2

28:                                               ; preds = %1
  %29 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map) #9
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %28
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map) #9
  br label %32

32:                                               ; preds = %28, %31, %1
  %33 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %300

35:                                               ; preds = %32
  %36 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kXAttrE, align 8
  %37 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #9
  store i32 0, i32* %2, align 4
  %38 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %36, i32* nonnull dereferenceable(4) %2) #9
  %39 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %38, 1
  %40 = and i8 %39, 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35
  %43 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %38, 0
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %43, i64 0, i32 1
  %45 = load i32, i32* %2, align 4
  store i32 %45, i32* %44, align 4
  br label %46

46:                                               ; preds = %35, %42
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #9
  %47 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kYAttrE, align 8
  %48 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #9
  store i32 1, i32* %3, align 4
  %49 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %47, i32* nonnull dereferenceable(4) %3) #9
  %50 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %49, 1
  %51 = and i8 %50, 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %46
  %54 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %49, 0
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %54, i64 0, i32 1
  %56 = load i32, i32* %3, align 4
  store i32 %56, i32* %55, align 4
  br label %57

57:                                               ; preds = %46, %53
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #9
  %58 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kCxAttrE, align 8
  %59 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #9
  store i32 0, i32* %4, align 4
  %60 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %58, i32* nonnull dereferenceable(4) %4) #9
  %61 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %60, 1
  %62 = and i8 %61, 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %57
  %65 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %60, 0
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %65, i64 0, i32 1
  %67 = load i32, i32* %4, align 4
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %57, %64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #9
  %69 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kCyAttrE, align 8
  %70 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #9
  store i32 1, i32* %5, align 4
  %71 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %69, i32* nonnull dereferenceable(4) %5) #9
  %72 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %71, 1
  %73 = and i8 %72, 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %68
  %76 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %71, 0
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %76, i64 0, i32 1
  %78 = load i32, i32* %5, align 4
  store i32 %78, i32* %77, align 4
  br label %79

79:                                               ; preds = %68, %75
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #9
  %80 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kDxAttrE, align 8
  %81 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81) #9
  store i32 0, i32* %6, align 4
  %82 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %80, i32* nonnull dereferenceable(4) %6) #9
  %83 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %82, 1
  %84 = and i8 %83, 1
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %79
  %87 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %82, 0
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %87, i64 0, i32 1
  %89 = load i32, i32* %6, align 4
  store i32 %89, i32* %88, align 4
  br label %90

90:                                               ; preds = %79, %86
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81) #9
  %91 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kDyAttrE, align 8
  %92 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #9
  store i32 1, i32* %7, align 4
  %93 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %91, i32* nonnull dereferenceable(4) %7) #9
  %94 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %93, 1
  %95 = and i8 %94, 1
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %90
  %98 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %93, 0
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %98, i64 0, i32 1
  %100 = load i32, i32* %7, align 4
  store i32 %100, i32* %99, align 4
  br label %101

101:                                              ; preds = %90, %97
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #9
  %102 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kFrAttrE, align 8
  %103 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %103) #9
  store i32 2, i32* %8, align 4
  %104 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %102, i32* nonnull dereferenceable(4) %8) #9
  %105 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %104, 1
  %106 = and i8 %105, 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %101
  %109 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %104, 0
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %109, i64 0, i32 1
  %111 = load i32, i32* %8, align 4
  store i32 %111, i32* %110, align 4
  br label %112

112:                                              ; preds = %101, %108
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %103) #9
  %113 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kFxAttrE, align 8
  %114 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #9
  store i32 0, i32* %9, align 4
  %115 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %113, i32* nonnull dereferenceable(4) %9) #9
  %116 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %115, 1
  %117 = and i8 %116, 1
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %123

119:                                              ; preds = %112
  %120 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %115, 0
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %120, i64 0, i32 1
  %122 = load i32, i32* %9, align 4
  store i32 %122, i32* %121, align 4
  br label %123

123:                                              ; preds = %112, %119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #9
  %124 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kFyAttrE, align 8
  %125 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #9
  store i32 1, i32* %10, align 4
  %126 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %124, i32* nonnull dereferenceable(4) %10) #9
  %127 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %126, 1
  %128 = and i8 %127, 1
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %123
  %131 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %126, 0
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %131, i64 0, i32 1
  %133 = load i32, i32* %10, align 4
  store i32 %133, i32* %132, align 4
  br label %134

134:                                              ; preds = %123, %130
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #9
  %135 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kRAttrE, align 8
  %136 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %136) #9
  store i32 2, i32* %11, align 4
  %137 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %135, i32* nonnull dereferenceable(4) %11) #9
  %138 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %137, 1
  %139 = and i8 %138, 1
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %145

141:                                              ; preds = %134
  %142 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %137, 0
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %142, i64 0, i32 1
  %144 = load i32, i32* %11, align 4
  store i32 %144, i32* %143, align 4
  br label %145

145:                                              ; preds = %134, %141
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %136) #9
  %146 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kRxAttrE, align 8
  %147 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %147) #9
  store i32 0, i32* %12, align 4
  %148 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %146, i32* nonnull dereferenceable(4) %12) #9
  %149 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %148, 1
  %150 = and i8 %149, 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %156

152:                                              ; preds = %145
  %153 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %148, 0
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %153, i64 0, i32 1
  %155 = load i32, i32* %12, align 4
  store i32 %155, i32* %154, align 4
  br label %156

156:                                              ; preds = %145, %152
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %147) #9
  %157 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kRyAttrE, align 8
  %158 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158) #9
  store i32 1, i32* %13, align 4
  %159 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %157, i32* nonnull dereferenceable(4) %13) #9
  %160 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %159, 1
  %161 = and i8 %160, 1
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %167

163:                                              ; preds = %156
  %164 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %159, 0
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %164, i64 0, i32 1
  %166 = load i32, i32* %13, align 4
  store i32 %166, i32* %165, align 4
  br label %167

167:                                              ; preds = %156, %163
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158) #9
  %168 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kWidthAttrE, align 8
  %169 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %169) #9
  store i32 0, i32* %14, align 4
  %170 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %168, i32* nonnull dereferenceable(4) %14) #9
  %171 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %170, 1
  %172 = and i8 %171, 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %174, label %178

174:                                              ; preds = %167
  %175 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %170, 0
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %175, i64 0, i32 1
  %177 = load i32, i32* %14, align 4
  store i32 %177, i32* %176, align 4
  br label %178

178:                                              ; preds = %167, %174
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169) #9
  %179 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kHeightAttrE, align 8
  %180 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %180) #9
  store i32 1, i32* %15, align 4
  %181 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %179, i32* nonnull dereferenceable(4) %15) #9
  %182 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %181, 1
  %183 = and i8 %182, 1
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %185, label %189

185:                                              ; preds = %178
  %186 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %181, 0
  %187 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %186, i64 0, i32 1
  %188 = load i32, i32* %15, align 4
  store i32 %188, i32* %187, align 4
  br label %189

189:                                              ; preds = %178, %185
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %180) #9
  %190 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kX1AttrE, align 8
  %191 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %191) #9
  store i32 0, i32* %16, align 4
  %192 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %190, i32* nonnull dereferenceable(4) %16) #9
  %193 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %192, 1
  %194 = and i8 %193, 1
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %196, label %200

196:                                              ; preds = %189
  %197 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %192, 0
  %198 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %197, i64 0, i32 1
  %199 = load i32, i32* %16, align 4
  store i32 %199, i32* %198, align 4
  br label %200

200:                                              ; preds = %189, %196
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %191) #9
  %201 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kX2AttrE, align 8
  %202 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %202) #9
  store i32 0, i32* %17, align 4
  %203 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %201, i32* nonnull dereferenceable(4) %17) #9
  %204 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %203, 1
  %205 = and i8 %204, 1
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %207, label %211

207:                                              ; preds = %200
  %208 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %203, 0
  %209 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %208, i64 0, i32 1
  %210 = load i32, i32* %17, align 4
  store i32 %210, i32* %209, align 4
  br label %211

211:                                              ; preds = %200, %207
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %202) #9
  %212 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kY1AttrE, align 8
  %213 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %213) #9
  store i32 1, i32* %18, align 4
  %214 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %212, i32* nonnull dereferenceable(4) %18) #9
  %215 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %214, 1
  %216 = and i8 %215, 1
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %222

218:                                              ; preds = %211
  %219 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %214, 0
  %220 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %219, i64 0, i32 1
  %221 = load i32, i32* %18, align 4
  store i32 %221, i32* %220, align 4
  br label %222

222:                                              ; preds = %211, %218
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %213) #9
  %223 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kY2AttrE, align 8
  %224 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %224) #9
  store i32 1, i32* %19, align 4
  %225 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %223, i32* nonnull dereferenceable(4) %19) #9
  %226 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %225, 1
  %227 = and i8 %226, 1
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %229, label %233

229:                                              ; preds = %222
  %230 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %225, 0
  %231 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %230, i64 0, i32 1
  %232 = load i32, i32* %19, align 4
  store i32 %232, i32* %231, align 4
  br label %233

233:                                              ; preds = %222, %229
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %224) #9
  %234 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kRefXAttrE, align 8
  %235 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %235) #9
  store i32 0, i32* %20, align 4
  %236 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %234, i32* nonnull dereferenceable(4) %20) #9
  %237 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %236, 1
  %238 = and i8 %237, 1
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %240, label %244

240:                                              ; preds = %233
  %241 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %236, 0
  %242 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %241, i64 0, i32 1
  %243 = load i32, i32* %20, align 4
  store i32 %243, i32* %242, align 4
  br label %244

244:                                              ; preds = %233, %240
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %235) #9
  %245 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kRefYAttrE, align 8
  %246 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %246) #9
  store i32 1, i32* %21, align 4
  %247 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %245, i32* nonnull dereferenceable(4) %21) #9
  %248 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %247, 1
  %249 = and i8 %248, 1
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %251, label %255

251:                                              ; preds = %244
  %252 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %247, 0
  %253 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %252, i64 0, i32 1
  %254 = load i32, i32* %21, align 4
  store i32 %254, i32* %253, align 4
  br label %255

255:                                              ; preds = %244, %251
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %246) #9
  %256 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names16kMarkerWidthAttrE, align 8
  %257 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %257) #9
  store i32 0, i32* %22, align 4
  %258 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %256, i32* nonnull dereferenceable(4) %22) #9
  %259 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %258, 1
  %260 = and i8 %259, 1
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %262, label %266

262:                                              ; preds = %255
  %263 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %258, 0
  %264 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %263, i64 0, i32 1
  %265 = load i32, i32* %22, align 4
  store i32 %265, i32* %264, align 4
  br label %266

266:                                              ; preds = %255, %262
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %257) #9
  %267 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names17kMarkerHeightAttrE, align 8
  %268 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %268) #9
  store i32 1, i32* %23, align 4
  %269 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %267, i32* nonnull dereferenceable(4) %23) #9
  %270 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %269, 1
  %271 = and i8 %270, 1
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %273, label %277

273:                                              ; preds = %266
  %274 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %269, 0
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %274, i64 0, i32 1
  %276 = load i32, i32* %23, align 4
  store i32 %276, i32* %275, align 4
  br label %277

277:                                              ; preds = %266, %273
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %268) #9
  %278 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names15kTextLengthAttrE, align 8
  %279 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %279) #9
  store i32 0, i32* %24, align 4
  %280 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %278, i32* nonnull dereferenceable(4) %24) #9
  %281 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %280, 1
  %282 = and i8 %281, 1
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %284, label %288

284:                                              ; preds = %277
  %285 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %280, 0
  %286 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %285, i64 0, i32 1
  %287 = load i32, i32* %24, align 4
  store i32 %287, i32* %286, align 4
  br label %288

288:                                              ; preds = %277, %284
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %279) #9
  %289 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names16kStartOffsetAttrE, align 8
  %290 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %290) #9
  store i32 0, i32* %25, align 4
  %291 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %289, i32* nonnull dereferenceable(4) %25) #9
  %292 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %291, 1
  %293 = and i8 %292, 1
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %295, label %299

295:                                              ; preds = %288
  %296 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %291, 0
  %297 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %296, i64 0, i32 1
  %298 = load i32, i32* %25, align 4
  store i32 %298, i32* %297, align 4
  br label %299

299:                                              ; preds = %288, %295
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %290) #9
  br label %300

300:                                              ; preds = %299, %32
  %301 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS7_SC_SD_EES2_EEbRKT0_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %0) #9
  br i1 %301, label %302, label %308

302:                                              ; preds = %300
  %303 = call %"struct.WTF::KeyValuePair.212"* @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.209"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameEE17s_length_mode_map to %"class.WTF::HashTable.209"*), %"class.blink::QualifiedName"* dereferenceable(8) %0) #9
  %304 = icmp eq %"struct.WTF::KeyValuePair.212"* %303, null
  br i1 %304, label %308, label %305

305:                                              ; preds = %302
  %306 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %303, i64 0, i32 1
  %307 = load i32, i32* %306, align 4
  br label %308

308:                                              ; preds = %305, %302, %300
  %309 = phi i32 [ 2, %300 ], [ %307, %305 ], [ -128, %302 ]
  ret i32 %309
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca [9 x %"class.blink::QualifiedName"], align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %145, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set) #9
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %145, label %8

8:                                                ; preds = %5
  %9 = bitcast [9 x %"class.blink::QualifiedName"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #9
  %10 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 0
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kFrAttrE, align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %13, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %15 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %13, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 16777216
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #9
  br label %23

23:                                               ; preds = %21, %16, %8
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kRAttrE, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 1, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %26, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %28 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %26, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 16777216
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %35) #9
  br label %36

36:                                               ; preds = %34, %29, %23
  %37 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kRxAttrE, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 2, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %41 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, null
  br i1 %41, label %49, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 16777216
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #9
  br label %49

49:                                               ; preds = %47, %42, %36
  %50 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kRyAttrE, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 3, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %52, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %54 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %52, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 16777216
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %61) #9
  br label %62

62:                                               ; preds = %60, %55, %49
  %63 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kWidthAttrE, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 4, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %65, %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %65, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 16777216
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %74) #9
  br label %75

75:                                               ; preds = %73, %68, %62
  %76 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kHeightAttrE, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %79 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 5, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %78, %"class.blink::QualifiedName::QualifiedNameImpl"** %79, align 8
  %80 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %78, null
  br i1 %80, label %88, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 16777216
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %87) #9
  br label %88

88:                                               ; preds = %86, %81, %75
  %89 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names16kMarkerWidthAttrE, align 8
  %90 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %92 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 6, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %91, %"class.blink::QualifiedName::QualifiedNameImpl"** %92, align 8
  %93 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %91, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %91, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 16777216
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %91, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %100) #9
  br label %101

101:                                              ; preds = %99, %94, %88
  %102 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names17kMarkerHeightAttrE, align 8
  %103 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %103, align 8
  %105 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 7, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %104, %"class.blink::QualifiedName::QualifiedNameImpl"** %105, align 8
  %106 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %104, null
  br i1 %106, label %114, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %104, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = and i32 %109, 16777216
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %104, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %113) #9
  br label %114

114:                                              ; preds = %112, %107, %101
  %115 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names15kTextLengthAttrE, align 8
  %116 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %116, align 8
  %118 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 8, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %117, %"class.blink::QualifiedName::QualifiedNameImpl"** %118, align 8
  %119 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %117, null
  br i1 %119, label %127, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %117, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = and i32 %122, 16777216
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %117, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %126) #9
  br label %127

127:                                              ; preds = %114, %120, %125
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.213", %"class.WTF::StaticSingleton.213"* @_ZZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #9
  tail call void @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.218"* bitcast (%"class.WTF::StaticSingleton.213"* @_ZZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set to %"class.WTF::HashTable.218"*), i32 9) #9
  %128 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.218"* bitcast (%"class.WTF::StaticSingleton.213"* @_ZZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set to %"class.WTF::HashTable.218"*), %"class.blink::QualifiedName"* nonnull dereferenceable(8) %10, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %10) #9
  %129 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 1
  %130 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.218"* bitcast (%"class.WTF::StaticSingleton.213"* @_ZZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set to %"class.WTF::HashTable.218"*), %"class.blink::QualifiedName"* dereferenceable(8) %129, %"class.blink::QualifiedName"* dereferenceable(8) %129) #9
  %131 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 2
  %132 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.218"* bitcast (%"class.WTF::StaticSingleton.213"* @_ZZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set to %"class.WTF::HashTable.218"*), %"class.blink::QualifiedName"* dereferenceable(8) %131, %"class.blink::QualifiedName"* dereferenceable(8) %131) #9
  %133 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 3
  %134 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.218"* bitcast (%"class.WTF::StaticSingleton.213"* @_ZZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set to %"class.WTF::HashTable.218"*), %"class.blink::QualifiedName"* dereferenceable(8) %133, %"class.blink::QualifiedName"* dereferenceable(8) %133) #9
  %135 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 4
  %136 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.218"* bitcast (%"class.WTF::StaticSingleton.213"* @_ZZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set to %"class.WTF::HashTable.218"*), %"class.blink::QualifiedName"* dereferenceable(8) %135, %"class.blink::QualifiedName"* dereferenceable(8) %135) #9
  %137 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 5
  %138 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.218"* bitcast (%"class.WTF::StaticSingleton.213"* @_ZZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set to %"class.WTF::HashTable.218"*), %"class.blink::QualifiedName"* dereferenceable(8) %137, %"class.blink::QualifiedName"* dereferenceable(8) %137) #9
  %139 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 6
  %140 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.218"* bitcast (%"class.WTF::StaticSingleton.213"* @_ZZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set to %"class.WTF::HashTable.218"*), %"class.blink::QualifiedName"* dereferenceable(8) %139, %"class.blink::QualifiedName"* dereferenceable(8) %139) #9
  %141 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 7
  %142 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.218"* bitcast (%"class.WTF::StaticSingleton.213"* @_ZZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set to %"class.WTF::HashTable.218"*), %"class.blink::QualifiedName"* dereferenceable(8) %141, %"class.blink::QualifiedName"* dereferenceable(8) %141) #9
  %143 = getelementptr inbounds [9 x %"class.blink::QualifiedName"], [9 x %"class.blink::QualifiedName"]* %2, i64 0, i64 8
  %144 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.218"* bitcast (%"class.WTF::StaticSingleton.213"* @_ZZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set to %"class.WTF::HashTable.218"*), %"class.blink::QualifiedName"* dereferenceable(8) %143, %"class.blink::QualifiedName"* dereferenceable(8) %143) #9
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %143) #9
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %141) #9
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %139) #9
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %137) #9
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %135) #9
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %133) #9
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %131) #9
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %129) #9
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #9
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set) #9
  br label %145

145:                                              ; preds = %5, %127, %1
  %146 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EEbRKT0_(%"class.WTF::HashTable.218"* bitcast (%"class.WTF::StaticSingleton.213"* @_ZZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameEE24s_no_negative_values_set to %"class.WTF::HashTable.218"*), %"class.blink::QualifiedName"* dereferenceable(8) %0) #9
  ret i1 %146
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9SVGLength3AddEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE(%"class.blink::SVGLength"* nocapture, %"class.blink::SVGPropertyBase"* nocapture readonly, %"class.blink::SVGElement"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::SVGLengthContext", align 8
  %5 = bitcast %"class.blink::SVGLengthContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %4, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %6, align 8
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %4, %"class.blink::SVGElement"* %2) #9
  %7 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %8, i64 0, i32 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 1
  br i1 %11, label %12, label %18

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 8
  %15 = and i8 %14, 3
  %16 = zext i8 %15 to i32
  %17 = call float @_ZNK5blink16SVGLengthContext12ResolveValueERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %4, %"class.blink::CSSPrimitiveValue"* dereferenceable(3) %8, i32 %16) #9
  br label %38

18:                                               ; preds = %3
  %19 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %8) #9
  %20 = fcmp ult double %19, 0x47EFFFFFE0000000
  br i1 %20, label %21, label %25

21:                                               ; preds = %18
  %22 = fcmp ole double %19, 0xC7EFFFFFE0000000
  %23 = select i1 %22, double 0xC7EFFFFFE0000000, double %19
  %24 = fptrunc double %23 to float
  br label %25

25:                                               ; preds = %21, %18
  %26 = phi float [ %24, %21 ], [ 0x47EFFFFFE0000000, %18 ]
  %27 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 3
  %30 = zext i8 %29 to i32
  %31 = bitcast %"class.blink::CSSPrimitiveValue"** %7 to %"class.blink::CSSNumericLiteralValue"**
  %32 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 8
  %35 = and i8 %34, 127
  %36 = zext i8 %35 to i32
  %37 = call float @_ZNK5blink16SVGLengthContext23ConvertValueToUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"* nonnull %4, float %26, i32 %30, i32 %36) #9
  br label %38

38:                                               ; preds = %12, %25
  %39 = phi float [ %17, %12 ], [ %37, %25 ]
  %40 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %1, i64 2
  %41 = bitcast %"class.blink::SVGPropertyBase"* %40 to %"class.blink::CSSPrimitiveValue"**
  %42 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %42, i64 0, i32 0, i32 2
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 1
  br i1 %45, label %46, label %53

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %1, i64 3
  %48 = bitcast %"class.blink::SVGPropertyBase"* %47 to i8*
  %49 = load i8, i8* %48, align 8
  %50 = and i8 %49, 3
  %51 = zext i8 %50 to i32
  %52 = call float @_ZNK5blink16SVGLengthContext12ResolveValueERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %4, %"class.blink::CSSPrimitiveValue"* dereferenceable(3) %42, i32 %51) #9
  br label %74

53:                                               ; preds = %38
  %54 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %42) #9
  %55 = fcmp ult double %54, 0x47EFFFFFE0000000
  br i1 %55, label %56, label %60

56:                                               ; preds = %53
  %57 = fcmp ole double %54, 0xC7EFFFFFE0000000
  %58 = select i1 %57, double 0xC7EFFFFFE0000000, double %54
  %59 = fptrunc double %58 to float
  br label %60

60:                                               ; preds = %56, %53
  %61 = phi float [ %59, %56 ], [ 0x47EFFFFFE0000000, %53 ]
  %62 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %1, i64 3
  %63 = bitcast %"class.blink::SVGPropertyBase"* %62 to i8*
  %64 = load i8, i8* %63, align 8
  %65 = and i8 %64, 3
  %66 = zext i8 %65 to i32
  %67 = bitcast %"class.blink::SVGPropertyBase"* %40 to %"class.blink::CSSNumericLiteralValue"**
  %68 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load i8, i8* %69, align 8
  %71 = and i8 %70, 127
  %72 = zext i8 %71 to i32
  %73 = call float @_ZNK5blink16SVGLengthContext23ConvertValueToUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"* nonnull %4, float %61, i32 %66, i32 %72) #9
  br label %74

74:                                               ; preds = %46, %60
  %75 = phi float [ %52, %46 ], [ %73, %60 ]
  %76 = fadd float %39, %75
  call void @_ZN5blink9SVGLength8SetValueEfRKNS_16SVGLengthContextE(%"class.blink::SVGLength"* %0, float %76, %"class.blink::SVGLengthContext"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

declare void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"*, %"class.blink::SVGElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9SVGLength22CalculateAnimatedValueERKNS_29SMILAnimationEffectParametersEfjPKNS_15SVGPropertyBaseES6_S6_PKNS_10SVGElementE(%"class.blink::SVGLength"* nocapture, %"struct.blink::SMILAnimationEffectParameters"* nocapture readonly dereferenceable(3), float, i32, %"class.blink::SVGPropertyBase"* nocapture readonly, %"class.blink::SVGPropertyBase"* nocapture readonly, %"class.blink::SVGPropertyBase"* nocapture readonly, %"class.blink::SVGElement"*) unnamed_addr #0 align 2 {
  %9 = alloca %"class.blink::SVGLengthContext", align 8
  %10 = bitcast %"class.blink::SVGLengthContext"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %9, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %11, align 8
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %9, %"class.blink::SVGElement"* %7) #9
  %12 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %4, i64 2
  %13 = bitcast %"class.blink::SVGPropertyBase"* %12 to %"class.blink::CSSPrimitiveValue"**
  %14 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %14, i64 0, i32 0, i32 2
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 1
  br i1 %17, label %18, label %25

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %4, i64 3
  %20 = bitcast %"class.blink::SVGPropertyBase"* %19 to i8*
  %21 = load i8, i8* %20, align 8
  %22 = and i8 %21, 3
  %23 = zext i8 %22 to i32
  %24 = call float @_ZNK5blink16SVGLengthContext12ResolveValueERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %9, %"class.blink::CSSPrimitiveValue"* dereferenceable(3) %14, i32 %23) #9
  br label %46

25:                                               ; preds = %8
  %26 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %14) #9
  %27 = fcmp ult double %26, 0x47EFFFFFE0000000
  br i1 %27, label %28, label %32

28:                                               ; preds = %25
  %29 = fcmp ole double %26, 0xC7EFFFFFE0000000
  %30 = select i1 %29, double 0xC7EFFFFFE0000000, double %26
  %31 = fptrunc double %30 to float
  br label %32

32:                                               ; preds = %28, %25
  %33 = phi float [ %31, %28 ], [ 0x47EFFFFFE0000000, %25 ]
  %34 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %4, i64 3
  %35 = bitcast %"class.blink::SVGPropertyBase"* %34 to i8*
  %36 = load i8, i8* %35, align 8
  %37 = and i8 %36, 3
  %38 = zext i8 %37 to i32
  %39 = bitcast %"class.blink::SVGPropertyBase"* %12 to %"class.blink::CSSNumericLiteralValue"**
  %40 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8
  %43 = and i8 %42, 127
  %44 = zext i8 %43 to i32
  %45 = call float @_ZNK5blink16SVGLengthContext23ConvertValueToUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"* nonnull %9, float %33, i32 %38, i32 %44) #9
  br label %46

46:                                               ; preds = %18, %32
  %47 = phi float [ %24, %18 ], [ %45, %32 ]
  %48 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %5, i64 2
  %49 = bitcast %"class.blink::SVGPropertyBase"* %48 to %"class.blink::CSSPrimitiveValue"**
  %50 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %50, i64 0, i32 0, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 1
  br i1 %53, label %54, label %61

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %5, i64 3
  %56 = bitcast %"class.blink::SVGPropertyBase"* %55 to i8*
  %57 = load i8, i8* %56, align 8
  %58 = and i8 %57, 3
  %59 = zext i8 %58 to i32
  %60 = call float @_ZNK5blink16SVGLengthContext12ResolveValueERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %9, %"class.blink::CSSPrimitiveValue"* dereferenceable(3) %50, i32 %59) #9
  br label %82

61:                                               ; preds = %46
  %62 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %50) #9
  %63 = fcmp ult double %62, 0x47EFFFFFE0000000
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = fcmp ole double %62, 0xC7EFFFFFE0000000
  %66 = select i1 %65, double 0xC7EFFFFFE0000000, double %62
  %67 = fptrunc double %66 to float
  br label %68

68:                                               ; preds = %64, %61
  %69 = phi float [ %67, %64 ], [ 0x47EFFFFFE0000000, %61 ]
  %70 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %5, i64 3
  %71 = bitcast %"class.blink::SVGPropertyBase"* %70 to i8*
  %72 = load i8, i8* %71, align 8
  %73 = and i8 %72, 3
  %74 = zext i8 %73 to i32
  %75 = bitcast %"class.blink::SVGPropertyBase"* %48 to %"class.blink::CSSNumericLiteralValue"**
  %76 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load i8, i8* %77, align 8
  %79 = and i8 %78, 127
  %80 = zext i8 %79 to i32
  %81 = call float @_ZNK5blink16SVGLengthContext23ConvertValueToUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"* nonnull %9, float %69, i32 %74, i32 %80) #9
  br label %82

82:                                               ; preds = %54, %68
  %83 = phi float [ %60, %54 ], [ %81, %68 ]
  %84 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %6, i64 2
  %85 = bitcast %"class.blink::SVGPropertyBase"* %84 to %"class.blink::CSSPrimitiveValue"**
  %86 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %86, i64 0, i32 0, i32 2
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, 1
  br i1 %89, label %90, label %97

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %6, i64 3
  %92 = bitcast %"class.blink::SVGPropertyBase"* %91 to i8*
  %93 = load i8, i8* %92, align 8
  %94 = and i8 %93, 3
  %95 = zext i8 %94 to i32
  %96 = call float @_ZNK5blink16SVGLengthContext12ResolveValueERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %9, %"class.blink::CSSPrimitiveValue"* dereferenceable(3) %86, i32 %95) #9
  br label %118

97:                                               ; preds = %82
  %98 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %86) #9
  %99 = fcmp ult double %98, 0x47EFFFFFE0000000
  br i1 %99, label %100, label %104

100:                                              ; preds = %97
  %101 = fcmp ole double %98, 0xC7EFFFFFE0000000
  %102 = select i1 %101, double 0xC7EFFFFFE0000000, double %98
  %103 = fptrunc double %102 to float
  br label %104

104:                                              ; preds = %100, %97
  %105 = phi float [ %103, %100 ], [ 0x47EFFFFFE0000000, %97 ]
  %106 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %6, i64 3
  %107 = bitcast %"class.blink::SVGPropertyBase"* %106 to i8*
  %108 = load i8, i8* %107, align 8
  %109 = and i8 %108, 3
  %110 = zext i8 %109 to i32
  %111 = bitcast %"class.blink::SVGPropertyBase"* %84 to %"class.blink::CSSNumericLiteralValue"**
  %112 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load i8, i8* %113, align 8
  %115 = and i8 %114, 127
  %116 = zext i8 %115 to i32
  %117 = call float @_ZNK5blink16SVGLengthContext23ConvertValueToUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"* nonnull %9, float %105, i32 %110, i32 %116) #9
  br label %118

118:                                              ; preds = %90, %104
  %119 = phi float [ %96, %90 ], [ %117, %104 ]
  %120 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 0
  %121 = load i8, i8* %120, align 1, !range !4
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %118
  %124 = fcmp olt float %2, 5.000000e-01
  %125 = select i1 %124, float %47, float %83
  br label %130

126:                                              ; preds = %118
  %127 = fsub float %83, %47
  %128 = fmul float %127, %2
  %129 = fadd float %47, %128
  br label %130

130:                                              ; preds = %126, %123
  %131 = phi float [ %125, %123 ], [ %129, %126 ]
  %132 = icmp eq i32 %3, 0
  br i1 %132, label %141, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 2
  %135 = load i8, i8* %134, align 1, !range !4
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %141, label %137

137:                                              ; preds = %133
  %138 = uitofp i32 %3 to float
  %139 = fmul float %119, %138
  %140 = fadd float %139, %131
  br label %141

141:                                              ; preds = %130, %133, %137
  %142 = phi float [ %140, %137 ], [ %131, %133 ], [ %131, %130 ]
  %143 = fcmp olt float %2, 5.000000e-01
  br i1 %143, label %144, label %153

144:                                              ; preds = %141
  %145 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %13, align 8
  %146 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %145, i64 0, i32 0, i32 2
  %147 = load i8, i8* %146, align 1
  %148 = icmp eq i8 %147, 1
  br i1 %148, label %162, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %145, i64 0, i32 0, i32 0
  %151 = load i8, i8* %150, align 8
  %152 = and i8 %151, 127
  br label %162

153:                                              ; preds = %141
  %154 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %49, align 8
  %155 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %154, i64 0, i32 0, i32 2
  %156 = load i8, i8* %155, align 1
  %157 = icmp eq i8 %156, 1
  br i1 %157, label %162, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %154, i64 0, i32 0, i32 0
  %160 = load i8, i8* %159, align 8
  %161 = and i8 %160, 127
  br label %162

162:                                              ; preds = %153, %158, %144, %149
  %163 = phi i8 [ 18, %144 ], [ %152, %149 ], [ 18, %153 ], [ %161, %158 ]
  %164 = zext i8 %163 to i32
  %165 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 1
  %166 = load i8, i8* %165, align 1, !range !4
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %203, label %168

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %170 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %170, i64 0, i32 0, i32 2
  %172 = load i8, i8* %171, align 1
  %173 = icmp eq i8 %172, 1
  br i1 %173, label %174, label %180

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %176 = load i8, i8* %175, align 8
  %177 = and i8 %176, 3
  %178 = zext i8 %177 to i32
  %179 = call float @_ZNK5blink16SVGLengthContext12ResolveValueERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %9, %"class.blink::CSSPrimitiveValue"* dereferenceable(3) %170, i32 %178) #9
  br label %200

180:                                              ; preds = %168
  %181 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %170) #9
  %182 = fcmp ult double %181, 0x47EFFFFFE0000000
  br i1 %182, label %183, label %187

183:                                              ; preds = %180
  %184 = fcmp ole double %181, 0xC7EFFFFFE0000000
  %185 = select i1 %184, double 0xC7EFFFFFE0000000, double %181
  %186 = fptrunc double %185 to float
  br label %187

187:                                              ; preds = %183, %180
  %188 = phi float [ %186, %183 ], [ 0x47EFFFFFE0000000, %180 ]
  %189 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %190 = load i8, i8* %189, align 8
  %191 = and i8 %190, 3
  %192 = zext i8 %191 to i32
  %193 = bitcast %"class.blink::CSSPrimitiveValue"** %169 to %"class.blink::CSSNumericLiteralValue"**
  %194 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %194, i64 0, i32 0, i32 0, i32 0
  %196 = load i8, i8* %195, align 8
  %197 = and i8 %196, 127
  %198 = zext i8 %197 to i32
  %199 = call float @_ZNK5blink16SVGLengthContext23ConvertValueToUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"* nonnull %9, float %188, i32 %192, i32 %198) #9
  br label %200

200:                                              ; preds = %174, %187
  %201 = phi float [ %179, %174 ], [ %199, %187 ]
  %202 = fadd float %142, %201
  br label %203

203:                                              ; preds = %162, %200
  %204 = phi float [ %202, %200 ], [ %142, %162 ]
  %205 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %206 = load i8, i8* %205, align 8
  %207 = and i8 %206, 3
  %208 = zext i8 %207 to i32
  %209 = call float @_ZNK5blink16SVGLengthContext25ConvertValueFromUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"* nonnull %9, float %204, i32 %208, i32 %164) #9
  %210 = fpext float %209 to double
  %211 = call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %210, i32 %164) #9
  %212 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1
  %213 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %211 to i64
  %214 = bitcast %"class.blink::Member"* %212 to i64*
  store atomic i64 %213, i64* %214 monotonic, align 8
  %215 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %220, label %217

217:                                              ; preds = %203
  %218 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %211, i64 0, i32 0, i32 0, i32 0
  %219 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %218) #9
  br label %220

220:                                              ; preds = %203, %217
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink9SVGLength17CalculateDistanceEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE(%"class.blink::SVGLength"* nocapture readonly, %"class.blink::SVGPropertyBase"* nocapture readonly, %"class.blink::SVGElement"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::SVGLengthContext", align 8
  %5 = bitcast %"class.blink::SVGLengthContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %4, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %6, align 8
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %4, %"class.blink::SVGElement"* %2) #9
  %7 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %1, i64 2
  %8 = bitcast %"class.blink::SVGPropertyBase"* %7 to %"class.blink::CSSPrimitiveValue"**
  %9 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %9, i64 0, i32 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %1, i64 3
  %15 = bitcast %"class.blink::SVGPropertyBase"* %14 to i8*
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, 3
  %18 = zext i8 %17 to i32
  %19 = call float @_ZNK5blink16SVGLengthContext12ResolveValueERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %4, %"class.blink::CSSPrimitiveValue"* dereferenceable(3) %9, i32 %18) #9
  br label %41

20:                                               ; preds = %3
  %21 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %9) #9
  %22 = fcmp ult double %21, 0x47EFFFFFE0000000
  br i1 %22, label %23, label %27

23:                                               ; preds = %20
  %24 = fcmp ole double %21, 0xC7EFFFFFE0000000
  %25 = select i1 %24, double 0xC7EFFFFFE0000000, double %21
  %26 = fptrunc double %25 to float
  br label %27

27:                                               ; preds = %23, %20
  %28 = phi float [ %26, %23 ], [ 0x47EFFFFFE0000000, %20 ]
  %29 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %1, i64 3
  %30 = bitcast %"class.blink::SVGPropertyBase"* %29 to i8*
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 3
  %33 = zext i8 %32 to i32
  %34 = bitcast %"class.blink::SVGPropertyBase"* %7 to %"class.blink::CSSNumericLiteralValue"**
  %35 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load i8, i8* %36, align 8
  %38 = and i8 %37, 127
  %39 = zext i8 %38 to i32
  %40 = call float @_ZNK5blink16SVGLengthContext23ConvertValueToUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"* nonnull %4, float %28, i32 %33, i32 %39) #9
  br label %41

41:                                               ; preds = %13, %27
  %42 = phi float [ %19, %13 ], [ %40, %27 ]
  %43 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %44, i64 0, i32 0, i32 2
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %50 = load i8, i8* %49, align 8
  %51 = and i8 %50, 3
  %52 = zext i8 %51 to i32
  %53 = call float @_ZNK5blink16SVGLengthContext12ResolveValueERKNS_17CSSPrimitiveValueENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %4, %"class.blink::CSSPrimitiveValue"* dereferenceable(3) %44, i32 %52) #9
  br label %74

54:                                               ; preds = %41
  %55 = call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %44) #9
  %56 = fcmp ult double %55, 0x47EFFFFFE0000000
  br i1 %56, label %57, label %61

57:                                               ; preds = %54
  %58 = fcmp ole double %55, 0xC7EFFFFFE0000000
  %59 = select i1 %58, double 0xC7EFFFFFE0000000, double %55
  %60 = fptrunc double %59 to float
  br label %61

61:                                               ; preds = %57, %54
  %62 = phi float [ %60, %57 ], [ 0x47EFFFFFE0000000, %54 ]
  %63 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 2
  %64 = load i8, i8* %63, align 8
  %65 = and i8 %64, 3
  %66 = zext i8 %65 to i32
  %67 = bitcast %"class.blink::CSSPrimitiveValue"** %43 to %"class.blink::CSSNumericLiteralValue"**
  %68 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load i8, i8* %69, align 8
  %71 = and i8 %70, 127
  %72 = zext i8 %71 to i32
  %73 = call float @_ZNK5blink16SVGLengthContext23ConvertValueToUserUnitsEfNS_13SVGLengthModeENS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::SVGLengthContext"* nonnull %4, float %62, i32 %66, i32 %72) #9
  br label %74

74:                                               ; preds = %48, %61
  %75 = phi float [ %53, %48 ], [ %73, %61 ]
  %76 = fsub float %42, %75
  %77 = call float @llvm.fabs.f32(float %76)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret float %77
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9SVGLength10SetInitialEj(%"class.blink::SVGLength"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @_ZN5blink12_GLOBAL__N_123g_initial_lengths_tableE, i64 0, i64 %3, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = sitofp i8 %5 to double
  %7 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @_ZN5blink12_GLOBAL__N_123g_initial_lengths_tableE, i64 0, i64 %3, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %6, i32 %9) #9
  %11 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %10 to i64
  %12 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1
  %13 = bitcast %"class.blink::Member"* %12 to i64*
  store atomic i64 %11, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %10, i64 0, i32 0, i32 0, i32 0
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #9
  br label %19

19:                                               ; preds = %2, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9SVGLength24IsNegativeNumericLiteralEv(%"class.blink::SVGLength"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %3, i64 0, i32 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %3) #9
  %9 = fcmp olt double %8, 0.000000e+00
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi i1 [ %9, %7 ], [ false, %1 ]
  ret i1 %11
}

declare double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9SVGLengthD0Ev(%"class.blink::SVGLength"*) unnamed_addr #7 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9SVGLength7GetTypeEv(%"class.blink::SVGLength"*) unnamed_addr #0 comdat align 2 {
  ret i32 7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15SVGPropertyBaseD2Ev(%"class.blink::SVGPropertyBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink16CSSParserContextC1ENS_13CSSParserModeENS_17SecureContextModeENS0_15SelectorProfileEPKNS_8DocumentE(%"class.blink::CSSParserContext"*, i8 zeroext, i32, i8 zeroext, %"class.blink::Document"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.175"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.175"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.175"*) local_unnamed_addr #1

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #9
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #9
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #9
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16CSSParserContextELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::CSSParserContext"**
  %5 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::CSSParserContext"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %5, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17CSSPrimitiveValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.175"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.175"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SVGPropertyBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::SVGPropertyBase"*)***
  %4 = load void (%"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGPropertyBase"*)*** %3, align 8
  %5 = load void (%"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGPropertyBase"*)** %4, align 8
  tail call void %5(%"class.blink::SVGPropertyBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.209"*, %"class.blink::QualifiedName"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair.212", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.212"*, %"struct.WTF::KeyValuePair.212"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.212"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.212"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.209"* %0, %"struct.WTF::KeyValuePair.212"* null)
  %10 = load %"struct.WTF::KeyValuePair.212"*, %"struct.WTF::KeyValuePair.212"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.212"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 16777215
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %18) #9
  %25 = load i32, i32* %19, align 4
  %26 = and i32 %24, 16777215
  %27 = and i32 %25, -16777216
  %28 = or i32 %27, %26
  store i32 %28, i32* %19, align 4
  br label %29

29:                                               ; preds = %11, %23
  %30 = phi i32 [ %21, %11 ], [ %26, %23 ]
  %31 = and i32 %30, %15
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %12, i64 %32
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %38
  br i1 %39, label %109, label %40

40:                                               ; preds = %29
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %42 = xor i32 %30, -1
  %43 = lshr i32 %30, 23
  %44 = add nsw i32 %43, %42
  %45 = shl i32 %44, 12
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 7
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 2
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 20
  %52 = xor i32 %51, %50
  %53 = or i32 %52, 1
  %54 = zext i32 %53 to i64
  br label %55

55:                                               ; preds = %40, %66
  %56 = phi %"struct.WTF::KeyValuePair.212"* [ %33, %40 ], [ %72, %66 ]
  %57 = phi %"struct.WTF::KeyValuePair.212"* [ null, %40 ], [ %67, %66 ]
  %58 = phi i64 [ %32, %40 ], [ %71, %66 ]
  %59 = phi i64 [ 0, %40 ], [ %69, %66 ]
  %60 = bitcast %"struct.WTF::KeyValuePair.212"* %56 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %66, label %63

63:                                               ; preds = %55
  %64 = bitcast i8* %61 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %65 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %64
  br i1 %65, label %152, label %66

66:                                               ; preds = %55, %63
  %67 = phi %"struct.WTF::KeyValuePair.212"* [ %57, %63 ], [ %56, %55 ]
  %68 = icmp eq i64 %59, 0
  %69 = select i1 %68, i64 %54, i64 %59
  %70 = add i64 %69, %58
  %71 = and i64 %70, %16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %12, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %38
  br i1 %75, label %76, label %55

76:                                               ; preds = %66
  %77 = icmp eq %"struct.WTF::KeyValuePair.212"* %67, null
  br i1 %77, label %109, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.212"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #9
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8, !alias.scope !5
  %81 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, null
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %4, i64 0, i32 1
  store i32 -128, i32* %83, align 8, !alias.scope !5
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %67, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* null, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  br label %100

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 1
  %87 = load i32, i32* %86, align 4, !noalias !5
  %88 = and i32 %87, 16777216
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %91) #9, !noalias !5
  br label %92

92:                                               ; preds = %90, %85
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %4, i64 0, i32 1
  store i32 -128, i32* %93, align 8, !alias.scope !5
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %67, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %94, align 8
  %95 = load i32, i32* %86, align 4
  %96 = and i32 %95, 16777216
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %99) #9
  br label %100

100:                                              ; preds = %82, %92, %98
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %67, i64 0, i32 1
  store i32 -128, i32* %101, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %4, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %102) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #9
  %103 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, 2147483647
  %106 = and i32 %105, 2147483647
  %107 = and i32 %104, -2147483648
  %108 = or i32 %106, %107
  store i32 %108, i32* %103, align 8
  br label %109

109:                                              ; preds = %29, %76, %100
  %110 = phi %"struct.WTF::KeyValuePair.212"* [ %67, %100 ], [ %72, %76 ], [ %33, %29 ]
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %112 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %111, null
  br i1 %112, label %120, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, 16777216
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %119) #9
  br label %120

120:                                              ; preds = %118, %113, %109
  %121 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %111 to i64
  %122 = bitcast %"struct.WTF::KeyValuePair.212"* %110 to i64*
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %110, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %123, align 8
  store i64 %121, i64* %122, align 8
  %125 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %124, null
  br i1 %125, label %138, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = and i32 %128, 16777216
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %138

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %132) #9
  %133 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %131
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %124) #9
  %137 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %124 to i8*
  call void @free(i8* %137) #9
  br label %138

138:                                              ; preds = %120, %126, %131, %136
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %110, i64 0, i32 1
  %140 = load i32, i32* %2, align 4
  store i32 %140, i32* %139, align 4
  %141 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 2
  %142 = load i32, i32* %141, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %141, align 4
  %144 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, %143
  %147 = shl i32 %146, 1
  %148 = load i32, i32* %13, align 8
  %149 = icmp ult i32 %147, %148
  br i1 %149, label %152, label %150

150:                                              ; preds = %138
  %151 = call %"struct.WTF::KeyValuePair.212"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.209"* %0, %"struct.WTF::KeyValuePair.212"* %110)
  br label %152

152:                                              ; preds = %63, %138, %150
  %153 = phi i8 [ 1, %138 ], [ 1, %150 ], [ 0, %63 ]
  %154 = phi %"struct.WTF::KeyValuePair.212"* [ %110, %138 ], [ %151, %150 ], [ %56, %63 ]
  %155 = insertvalue { %"struct.WTF::KeyValuePair.212"*, i8 } undef, %"struct.WTF::KeyValuePair.212"* %154, 0
  %156 = insertvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %155, i8 %153, 1
  ret { %"struct.WTF::KeyValuePair.212"*, i8 } %156
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.212"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.209"*, %"struct.WTF::KeyValuePair.212"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair.212"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE13AllocateTableEj(i32 %32) #9
  %34 = call %"struct.WTF::KeyValuePair.212"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.209"* %0, %"struct.WTF::KeyValuePair.212"* %33, i32 %32, %"struct.WTF::KeyValuePair.212"* %1) #9
  ret %"struct.WTF::KeyValuePair.212"* %34
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.212"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE13AllocateTableEj(i32) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.WTF::KeyValuePair.212", align 8
  %3 = zext i32 %0 to i64
  %4 = shl nuw nsw i64 %3, 4
  %5 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %4, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink13QualifiedNameENS2_13SVGLengthModeEEEEEPKcv, i64 0, i64 0)) #9
  %6 = bitcast i8* %5 to %"struct.WTF::KeyValuePair.212"*
  %7 = icmp eq i32 %0, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.WTF::KeyValuePair.212"* %2 to i8*
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %2, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %2, i64 0, i32 0
  br label %16

15:                                               ; preds = %37, %1
  ret %"struct.WTF::KeyValuePair.212"* %6

16:                                               ; preds = %37, %8
  %17 = phi i64 [ 0, %8 ], [ %39, %37 ]
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %6, i64 %17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8, !noalias !8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %19, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8, !alias.scope !8
  %20 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  store i32 -128, i32* %13, align 8, !alias.scope !8
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* null, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  br label %37

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 1
  %25 = load i32, i32* %24, align 4, !noalias !8
  %26 = and i32 %25, 16777216
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %29) #9, !noalias !8
  br label %30

30:                                               ; preds = %28, %23
  store i32 -128, i32* %13, align 8, !alias.scope !8
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %19, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %32 = load i32, i32* %24, align 4
  %33 = and i32 %32, 16777216
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %36) #9
  br label %37

37:                                               ; preds = %21, %30, %35
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %6, i64 %17, i32 1
  store i32 -128, i32* %38, align 8
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  %39 = add nuw nsw i64 %17, 1
  %40 = icmp eq i64 %39, %3
  br i1 %40, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.212"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.209"*, %"struct.WTF::KeyValuePair.212"*, i32, %"struct.WTF::KeyValuePair.212"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.209", align 8
  %6 = bitcast %"class.WTF::HashTable.209"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.209"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.212"* %1, %"struct.WTF::KeyValuePair.212"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.212"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.209"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.209"* %5 to i64*
  br label %30

21:                                               ; preds = %4
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair.212"*, %"struct.WTF::KeyValuePair.212"** %15, align 8
  %25 = ptrtoint %"struct.WTF::KeyValuePair.212"* %24 to i64
  br label %60

26:                                               ; preds = %99
  %27 = bitcast %"class.WTF::HashTable.209"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::HashTable.209"* %0 to i64*
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64* [ %20, %16 ], [ %27, %26 ]
  %32 = phi i64* [ %18, %16 ], [ %29, %26 ]
  %33 = phi i64 [ %17, %16 ], [ %28, %26 ]
  %34 = phi i64 [ %19, %16 ], [ %100, %26 ]
  %35 = phi %"struct.WTF::KeyValuePair.212"* [ null, %16 ], [ %103, %26 ]
  %36 = phi i32 [ 0, %16 ], [ %101, %26 ]
  store atomic i64 %33, i64* %32 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %34, i64* %31, align 8
  store i32 %36, i32* %8, align 8
  %37 = inttoptr i64 %34 to %"struct.WTF::KeyValuePair.212"*
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %56, label %39

39:                                               ; preds = %30
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %39
  %42 = zext i32 %36 to i64
  br label %43

43:                                               ; preds = %51, %41
  %44 = phi i64 [ 0, %41 ], [ %52, %51 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %37, i64 %44
  %46 = bitcast %"struct.WTF::KeyValuePair.212"* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %45, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %50) #9
  br label %51

51:                                               ; preds = %49, %43
  %52 = add nuw nsw i64 %44, 1
  %53 = icmp eq i64 %52, %42
  br i1 %53, label %54, label %43

54:                                               ; preds = %51, %39
  %55 = inttoptr i64 %34 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %55) #9
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %56

56:                                               ; preds = %30, %54
  %57 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, -2147483648
  store i32 %59, i32* %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair.212"* %35

60:                                               ; preds = %21, %99
  %61 = phi i64 [ %25, %21 ], [ %100, %99 ]
  %62 = phi i32 [ %13, %21 ], [ %101, %99 ]
  %63 = phi %"struct.WTF::KeyValuePair.212"* [ %24, %21 ], [ %102, %99 ]
  %64 = phi %"struct.WTF::KeyValuePair.212"* [ null, %21 ], [ %103, %99 ]
  %65 = phi i32 [ 0, %21 ], [ %104, %99 ]
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %63, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %71 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %69, %70
  %72 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %69, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %73 = or i1 %72, %71
  br i1 %73, label %99, label %74

74:                                               ; preds = %60
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %67, i64 0, i32 0
  %76 = call { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.209"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %75) #9
  %77 = extractvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %76, 0
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %77, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %78) #9
  %79 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %77, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %79, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8
  %81 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %79, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 16777216
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %88) #9
  br label %89

89:                                               ; preds = %74, %82, %87
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %77, i64 0, i32 1
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %63, i64 %66, i32 1
  %92 = load i32, i32* %91, align 8
  store i32 %92, i32* %90, align 8
  %93 = load %"struct.WTF::KeyValuePair.212"*, %"struct.WTF::KeyValuePair.212"** %15, align 8
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %93, i64 %66
  %95 = icmp eq %"struct.WTF::KeyValuePair.212"* %94, %3
  %96 = select i1 %95, %"struct.WTF::KeyValuePair.212"* %77, %"struct.WTF::KeyValuePair.212"* %64
  %97 = load i32, i32* %12, align 8
  %98 = ptrtoint %"struct.WTF::KeyValuePair.212"* %93 to i64
  br label %99

99:                                               ; preds = %60, %89
  %100 = phi i64 [ %61, %60 ], [ %98, %89 ]
  %101 = phi i32 [ %62, %60 ], [ %97, %89 ]
  %102 = phi %"struct.WTF::KeyValuePair.212"* [ %63, %60 ], [ %93, %89 ]
  %103 = phi %"struct.WTF::KeyValuePair.212"* [ %64, %60 ], [ %96, %89 ]
  %104 = add i32 %65, 1
  %105 = icmp eq i32 %104, %101
  br i1 %105, label %26, label %60
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.212"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.209"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.212"*, %"struct.WTF::KeyValuePair.212"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #9
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %4, i64 %24
  %26 = ptrtoint %"struct.WTF::KeyValuePair.212"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"struct.WTF::KeyValuePair.212"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"struct.WTF::KeyValuePair.212"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair.212"* %52, null
  %54 = ptrtoint %"struct.WTF::KeyValuePair.212"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"struct.WTF::KeyValuePair.212"* [ null, %33 ], [ %69, %68 ]
  %58 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %59 = phi %"struct.WTF::KeyValuePair.212"* [ %25, %33 ], [ %74, %68 ]
  %60 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %61 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %62 = bitcast %"struct.WTF::KeyValuePair.212"* %59 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  br i1 %64, label %68, label %65

65:                                               ; preds = %56
  %66 = bitcast i8* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %34, %66
  br i1 %67, label %79, label %68

68:                                               ; preds = %65, %56
  %69 = phi %"struct.WTF::KeyValuePair.212"* [ %57, %65 ], [ %59, %56 ]
  %70 = icmp eq i64 %61, 0
  %71 = select i1 %70, i64 %47, i64 %61
  %72 = add i64 %71, %60
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %4, i64 %73
  %75 = ptrtoint %"struct.WTF::KeyValuePair.212"* %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %74, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %65, %50
  %80 = phi i64 [ %55, %50 ], [ %58, %65 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %65 ]
  %82 = inttoptr i64 %80 to %"struct.WTF::KeyValuePair.212"*
  %83 = insertvalue { %"struct.WTF::KeyValuePair.212"*, i8 } undef, %"struct.WTF::KeyValuePair.212"* %82, 0
  %84 = insertvalue { %"struct.WTF::KeyValuePair.212"*, i8 } %83, i8 %81, 1
  ret { %"struct.WTF::KeyValuePair.212"*, i8 } %84
}

declare i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS7_SC_SD_EES2_EEbRKT0_(%"class.WTF::HashTable.209"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.212"*, %"struct.WTF::KeyValuePair.212"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.212"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #9
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %68, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"struct.WTF::KeyValuePair.212"* [ %27, %34 ], [ %64, %59 ]
  %51 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair.212"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %68, label %49

68:                                               ; preds = %49, %59, %2, %23
  %69 = phi %"struct.WTF::KeyValuePair.212"* [ null, %2 ], [ null, %23 ], [ %50, %49 ], [ null, %59 ]
  %70 = icmp ne %"struct.WTF::KeyValuePair.212"* %69, null
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.212"* @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_13SVGLengthModeEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.209"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.212"*, %"struct.WTF::KeyValuePair.212"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.212"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.209", %"class.WTF::HashTable.209"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #9
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %68, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"struct.WTF::KeyValuePair.212"* [ %27, %34 ], [ %64, %59 ]
  %51 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair.212"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.212", %"struct.WTF::KeyValuePair.212"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %68, label %49

68:                                               ; preds = %49, %59, %2, %23
  %69 = phi %"struct.WTF::KeyValuePair.212"* [ null, %2 ], [ null, %23 ], [ %50, %49 ], [ null, %59 ]
  ret %"struct.WTF::KeyValuePair.212"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.218"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0)) #9
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv, i64 0, i64 0)) #9
  %30 = bitcast i8* %29 to %"class.blink::QualifiedName"*
  %31 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %31, i64 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %45, %26
  %34 = phi i64 [ 0, %26 ], [ %46, %45 ]
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 %34, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %37 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 16777216
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %44) #9
  br label %45

45:                                               ; preds = %43, %38, %33
  %46 = add nuw nsw i64 %34, 1
  %47 = icmp eq i64 %46, %27
  br i1 %47, label %48, label %33

48:                                               ; preds = %45
  %49 = call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.218"* %0, %"class.blink::QualifiedName"* %30, i32 %17, %"class.blink::QualifiedName"* null) #9
  br label %50

50:                                               ; preds = %48, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.218"*, %"class.blink::QualifiedName"*, i32, %"class.blink::QualifiedName"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.218", align 8
  %6 = bitcast %"class.WTF::HashTable.218"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.218"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.blink::QualifiedName"* %1, %"class.blink::QualifiedName"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.blink::QualifiedName"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.218"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.218"* %5 to i64*
  br label %30

21:                                               ; preds = %4
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %15, align 8
  %25 = ptrtoint %"class.blink::QualifiedName"* %24 to i64
  br label %59

26:                                               ; preds = %93
  %27 = bitcast %"class.WTF::HashTable.218"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::HashTable.218"* %0 to i64*
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64* [ %20, %16 ], [ %27, %26 ]
  %32 = phi i64* [ %18, %16 ], [ %29, %26 ]
  %33 = phi i64 [ %17, %16 ], [ %28, %26 ]
  %34 = phi i64 [ %19, %16 ], [ %94, %26 ]
  %35 = phi %"class.blink::QualifiedName"* [ null, %16 ], [ %97, %26 ]
  %36 = phi i32 [ 0, %16 ], [ %95, %26 ]
  store atomic i64 %33, i64* %32 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %34, i64* %31, align 8
  store i32 %36, i32* %8, align 8
  %37 = inttoptr i64 %34 to %"class.blink::QualifiedName"*
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %30
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %53, label %41

41:                                               ; preds = %39
  %42 = zext i32 %36 to i64
  br label %43

43:                                               ; preds = %50, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %50 ]
  %45 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %37, i64 %44
  %46 = bitcast %"class.blink::QualifiedName"* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %50, label %49

49:                                               ; preds = %43
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %45) #9
  br label %50

50:                                               ; preds = %49, %43
  %51 = add nuw nsw i64 %44, 1
  %52 = icmp eq i64 %51, %42
  br i1 %52, label %53, label %43

53:                                               ; preds = %50, %39
  %54 = inttoptr i64 %34 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #9
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %55

55:                                               ; preds = %30, %53
  %56 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, -2147483648
  store i32 %58, i32* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"class.blink::QualifiedName"* %35

59:                                               ; preds = %21, %93
  %60 = phi i64 [ %25, %21 ], [ %94, %93 ]
  %61 = phi i32 [ %13, %21 ], [ %95, %93 ]
  %62 = phi %"class.blink::QualifiedName"* [ %24, %21 ], [ %96, %93 ]
  %63 = phi %"class.blink::QualifiedName"* [ null, %21 ], [ %97, %93 ]
  %64 = phi i32 [ 0, %21 ], [ %98, %93 ]
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %62, i64 %65
  %67 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %70 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %68, %69
  %71 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %68, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %72 = or i1 %71, %70
  br i1 %72, label %93, label %73

73:                                               ; preds = %59
  %74 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.218"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %66) #9
  %75 = extractvalue { %"class.blink::QualifiedName"*, i8 } %74, 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %75) #9
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %75, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %76, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %76, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 16777216
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %85) #9
  br label %86

86:                                               ; preds = %73, %79, %84
  %87 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %15, align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %87, i64 %65
  %89 = icmp eq %"class.blink::QualifiedName"* %88, %3
  %90 = select i1 %89, %"class.blink::QualifiedName"* %75, %"class.blink::QualifiedName"* %63
  %91 = load i32, i32* %12, align 8
  %92 = ptrtoint %"class.blink::QualifiedName"* %87 to i64
  br label %93

93:                                               ; preds = %59, %86
  %94 = phi i64 [ %60, %59 ], [ %92, %86 ]
  %95 = phi i32 [ %61, %59 ], [ %91, %86 ]
  %96 = phi %"class.blink::QualifiedName"* [ %62, %59 ], [ %87, %86 ]
  %97 = phi %"class.blink::QualifiedName"* [ %63, %59 ], [ %90, %86 ]
  %98 = add i32 %64, 1
  %99 = icmp eq i32 %98, %95
  br i1 %99, label %26, label %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.218"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #9
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %24
  %26 = ptrtoint %"class.blink::QualifiedName"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"class.blink::QualifiedName"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"class.blink::QualifiedName"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"class.blink::QualifiedName"* %52, null
  %54 = ptrtoint %"class.blink::QualifiedName"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"class.blink::QualifiedName"* [ null, %33 ], [ %69, %68 ]
  %58 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %29, %33 ], [ %77, %68 ]
  %59 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %60 = phi %"class.blink::QualifiedName"* [ %25, %33 ], [ %74, %68 ]
  %61 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %62 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %63 = bitcast %"class.blink::QualifiedName"* %60 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, inttoptr (i64 -1 to i8*)
  br i1 %65, label %68, label %66

66:                                               ; preds = %56
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, %34
  br i1 %67, label %79, label %68

68:                                               ; preds = %66, %56
  %69 = phi %"class.blink::QualifiedName"* [ %57, %66 ], [ %60, %56 ]
  %70 = icmp eq i64 %62, 0
  %71 = select i1 %70, i64 %47, i64 %62
  %72 = add i64 %71, %61
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %73
  %75 = ptrtoint %"class.blink::QualifiedName"* %74 to i64
  %76 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %74, i64 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %66, %50
  %80 = phi i64 [ %55, %50 ], [ %59, %66 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %66 ]
  %82 = inttoptr i64 %80 to %"class.blink::QualifiedName"*
  %83 = insertvalue { %"class.blink::QualifiedName"*, i8 } undef, %"class.blink::QualifiedName"* %82, 0
  %84 = insertvalue { %"class.blink::QualifiedName"*, i8 } %83, i8 %81, 1
  ret { %"class.blink::QualifiedName"*, i8 } %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.218"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = icmp eq %"class.blink::QualifiedName"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.218"* %0, %"class.blink::QualifiedName"* null)
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::QualifiedName"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 16777215
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %17) #9
  %24 = load i32, i32* %18, align 4
  %25 = and i32 %23, 16777215
  %26 = and i32 %24, -16777216
  %27 = or i32 %26, %25
  store i32 %27, i32* %18, align 4
  br label %28

28:                                               ; preds = %10, %22
  %29 = phi i32 [ %20, %10 ], [ %25, %22 ]
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 %31
  %33 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %33, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %37
  br i1 %38, label %94, label %39

39:                                               ; preds = %28
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %41 = xor i32 %29, -1
  %42 = lshr i32 %29, 23
  %43 = add nsw i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %39, %65
  %55 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %35, %39 ], [ %73, %65 ]
  %56 = phi %"class.blink::QualifiedName"* [ %32, %39 ], [ %71, %65 ]
  %57 = phi %"class.blink::QualifiedName"* [ null, %39 ], [ %66, %65 ]
  %58 = phi i64 [ %31, %39 ], [ %70, %65 ]
  %59 = phi i64 [ 0, %39 ], [ %68, %65 ]
  %60 = bitcast %"class.blink::QualifiedName"* %56 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %65, label %63

63:                                               ; preds = %54
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %55, %40
  br i1 %64, label %136, label %65

65:                                               ; preds = %54, %63
  %66 = phi %"class.blink::QualifiedName"* [ %57, %63 ], [ %56, %54 ]
  %67 = icmp eq i64 %59, 0
  %68 = select i1 %67, i64 %53, i64 %59
  %69 = add i64 %68, %58
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 %70
  %72 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %74 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %73, %37
  br i1 %74, label %75, label %54

75:                                               ; preds = %65
  %76 = icmp eq %"class.blink::QualifiedName"* %66, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %79 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, null
  br i1 %79, label %87, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 16777216
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %86) #9
  br label %87

87:                                               ; preds = %77, %80, %85
  %88 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, 2147483647
  %91 = and i32 %90, 2147483647
  %92 = and i32 %89, -2147483648
  %93 = or i32 %91, %92
  store i32 %93, i32* %88, align 8
  br label %94

94:                                               ; preds = %28, %75, %87
  %95 = phi %"class.blink::QualifiedName"* [ %66, %87 ], [ %71, %75 ], [ %32, %28 ]
  %96 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = and i32 %101, 16777216
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %105) #9
  br label %106

106:                                              ; preds = %104, %99, %94
  %107 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %97 to i64
  %108 = bitcast %"class.blink::QualifiedName"* %95 to i64*
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %95, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  store i64 %107, i64* %108, align 8
  %111 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %110, null
  br i1 %111, label %124, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 16777216
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %124

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %118) #9
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %117
  tail call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %110) #9
  %123 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %110 to i8*
  tail call void @free(i8* %123) #9
  br label %124

124:                                              ; preds = %106, %112, %117, %122
  %125 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %125, align 4
  %128 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = add i32 %129, %127
  %131 = shl i32 %130, 1
  %132 = load i32, i32* %12, align 8
  %133 = icmp ult i32 %131, %132
  br i1 %133, label %136, label %134

134:                                              ; preds = %124
  %135 = tail call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.218"* %0, %"class.blink::QualifiedName"* %95)
  br label %136

136:                                              ; preds = %63, %124, %134
  %137 = phi i8 [ 1, %124 ], [ 1, %134 ], [ 0, %63 ]
  %138 = phi %"class.blink::QualifiedName"* [ %95, %124 ], [ %135, %134 ], [ %56, %63 ]
  %139 = insertvalue { %"class.blink::QualifiedName"*, i8 } undef, %"class.blink::QualifiedName"* %138, 0
  %140 = insertvalue { %"class.blink::QualifiedName"*, i8 } %139, i8 %137, 1
  ret { %"class.blink::QualifiedName"*, i8 } %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.218"*, %"class.blink::QualifiedName"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv, i64 0, i64 0)) #9
  %36 = bitcast i8* %35 to %"class.blink::QualifiedName"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %31
  %39 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %39, i64 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %53, %38
  %42 = phi i64 [ 0, %38 ], [ %54, %53 ]
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %36, i64 %42, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %43, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %45 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %43, null
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 16777216
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %52) #9
  br label %53

53:                                               ; preds = %51, %46, %41
  %54 = add nuw nsw i64 %42, 1
  %55 = icmp eq i64 %54, %33
  br i1 %55, label %56, label %41

56:                                               ; preds = %53, %31
  %57 = call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.218"* %0, %"class.blink::QualifiedName"* %36, i32 %32, %"class.blink::QualifiedName"* %1) #9
  ret %"class.blink::QualifiedName"* %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EEbRKT0_(%"class.WTF::HashTable.218"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = icmp eq %"class.blink::QualifiedName"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.218", %"class.WTF::HashTable.218"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #9
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %68, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %30, %34 ], [ %66, %59 ]
  %51 = phi %"class.blink::QualifiedName"* [ %27, %34 ], [ %64, %59 ]
  %52 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %53 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %54 = bitcast %"class.blink::QualifiedName"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp ne i8* %55, inttoptr (i64 -1 to i8*)
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %50, %35
  %58 = and i1 %57, %56
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %53, 0
  %61 = select i1 %60, i64 %48, i64 %53
  %62 = add i64 %61, %52
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %63
  %65 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %68, label %49

68:                                               ; preds = %49, %59, %2, %23
  %69 = phi %"class.blink::QualifiedName"* [ null, %2 ], [ null, %23 ], [ %51, %49 ], [ null, %59 ]
  %70 = icmp ne %"class.blink::QualifiedName"* %69, null
  ret i1 %70
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_13SVGLengthModeEEEE10EmptyValueEv: argument 0"}
!7 = distinct !{!7, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_13SVGLengthModeEEEE10EmptyValueEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_13SVGLengthModeEEEE10EmptyValueEv: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_13SVGLengthModeEEEE10EmptyValueEv"}
