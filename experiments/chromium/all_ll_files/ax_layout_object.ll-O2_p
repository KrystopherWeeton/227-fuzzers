; ModuleID = '../../third_party/blink/renderer/modules/accessibility/ax_layout_object.cc'
source_filename = "../../third_party/blink/renderer/modules/accessibility/ax_layout_object.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1785", i64 }
%"class.std::__1::vector.1785" = type { %"class.std::__1::__vector_base.1786" }
%"class.std::__1::__vector_base.1786" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1787" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::AXLayoutObject" = type { %"class.blink::AXNodeObject", %"class.blink::LayoutObject"* }
%"class.blink::AXNodeObject" = type { %"class.blink::AXObject", i32, i32, %"class.blink::Member.318" }
%"class.blink::AXObject" = type { i32 (...)**, i32, %"class.blink::Member.3255", %"class.blink::HeapVector.3257", i8, i32, %"class.blink::LayoutRect", i32, i32, i8, %"class.blink::Member.3255", i32, i32, %"class.blink::FloatRect", %"class.blink::Member.3264" }
%"class.blink::HeapVector.3257" = type { %"class.WTF::Vector.3260" }
%"class.WTF::Vector.3260" = type { %"class.WTF::VectorBuffer.3261" }
%"class.WTF::VectorBuffer.3261" = type { %"class.WTF::VectorBufferBase.3262" }
%"class.WTF::VectorBufferBase.3262" = type { %"class.blink::Member.3255"*, i32, i32 }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::Member.3255" = type { %"class.blink::MemberBase.3256" }
%"class.blink::MemberBase.3256" = type { %"class.blink::AXObject"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.3264" = type { %"class.blink::MemberBase.3265" }
%"class.blink::MemberBase.3265" = type { %"class.blink::AXObjectCacheImpl"* }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.929", %"class.WTF::Vector.929", i8, i32, %"class.blink::Member.936", %"class.blink::Member.938", %"class.blink::Member.940", %"class.blink::Member.942", %"class.blink::Member.944", %"class.blink::Member.946", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.954", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.960", %"class.blink::Member.962", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.965", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.990", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.999", double, double, i64, i64, %"class.blink::HeapHashSet.1001", %"class.blink::HeapHashSet.1008", i16, i8, %"class.blink::Member.1015", %"class.blink::Member.1017", %"class.blink::Member.1343", %"class.blink::Member.1345", %"class.blink::TextLinkColors", %"class.blink::Member.1347", i8, [7 x i8], %"class.blink::HeapHashMap.1349", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1356", %"class.blink::Member.1361", %"class.blink::Member.1363", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1365", %"class.blink::HeapVector.1367", %"class.std::__1::unique_ptr.1375", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1381", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1394", %"class.WTF::Vector.1396", i8, i8, %"class.std::__1::unique_ptr.1401", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1407", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1415", i8, i32, %"class.blink::Member.1417", %"class.blink::Member.1419", %"class.blink::Member.1421", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1423", %"class.WTF::HashMap.1425", %"class.blink::Member.1430", %"class.blink::Member.1432", %"class.blink::Member.1434", %"class.blink::Member.1436", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1438", i8, i32, %"class.blink::Member.1445", %"class.blink::Member.1447", i32, %"class.blink::Member.1449", %"class.blink::Member.1451", %"class.blink::Member.1453", %"class.std::__1::unique_ptr.1455", i64, %"class.std::__1::unique_ptr.1461", i32, i32, %"class.blink::Member.1472", %"class.blink::Member.1474", %"class.blink::Member.1476", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1478", %"class.WTF::Vector.1502", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1507", %"class.blink::Member.1514", %"class.std::__1::unique_ptr.1516", %"class.blink::Member.1522", i8, i8, %"class.WTF::String", %"class.blink::Member.1524", i8, [7 x i8], %"class.blink::HeapHashMap.1526", %"class.blink::HeapObserverSet", %"class.blink::Member.1540", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1542", i32, i8, i8, %"class.blink::WeakMember.1544", %"class.blink::Member.1545" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.922" }
%"class.blink::HeapHashMap.922" = type { %"class.WTF::HashMap.925" }
%"class.WTF::HashMap.925" = type { %"class.WTF::HashTable.926" }
%"class.WTF::HashTable.926" = type <{ %"struct.WTF::KeyValuePair.928"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.928" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.929" = type { %"class.WTF::VectorBuffer.930" }
%"class.WTF::VectorBuffer.930" = type { %"class.WTF::VectorBufferBase.931" }
%"class.WTF::VectorBufferBase.931" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.932 }
%class.scoped_refptr.932 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.933", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.933" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1569", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1636", i32, i8, [3 x i8], %"class.blink::HeapVector.1638", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1646", %"class.blink::Member.1648", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1657", %"class.blink::Member.1780", %"class.blink::Member.1782", i8, [7 x i8] }>
%"class.blink::Supplementable.1569" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1570" }
%"class.blink::HeapHashMap.1570" = type { %"class.WTF::HashMap.1573" }
%"class.WTF::HashMap.1573" = type { %"class.WTF::HashTable.1574" }
%"class.WTF::HashTable.1574" = type <{ %"struct.WTF::KeyValuePair.1576"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1576" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1585" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1577" }
%"class.blink::HeapObserverSet.1577" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1578" }
%"class.blink::HeapHashSet.1578" = type { %"class.WTF::HashSet.1581" }
%"class.WTF::HashSet.1581" = type { %"class.WTF::HashTable.1582" }
%"class.WTF::HashTable.1582" = type <{ %"class.blink::WeakMember.1584"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1584" = type opaque
%"class.blink::Supplementable.1585" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1586" }
%"class.blink::HeapHashMap.1586" = type { %"class.WTF::HashMap.1589" }
%"class.WTF::HashMap.1589" = type { %"class.WTF::HashTable.1590" }
%"class.WTF::HashTable.1590" = type <{ %"struct.WTF::KeyValuePair.1592"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1592" = type { i8*, %"class.blink::Member.3822" }
%"class.blink::Member.3822" = type { %"class.blink::MemberBase.3823" }
%"class.blink::MemberBase.3823" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3824" }
%"class.blink::Member.3824" = type { %"class.blink::MemberBase.3825" }
%"class.blink::MemberBase.3825" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1593, %"class.std::__1::unique_ptr.1602", %"class.std::__1::unique_ptr.1602", %"class.std::__1::unique_ptr.1626", %"class.std::__1::unique_ptr.1626", %"class.blink::Member.938", i32, [4 x i8], %"class.WTF::HashSet.1632", i32, i32 }
%class.scoped_refptr.1593 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1594", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1596", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1601 }
%"class.WTF::RefCounted.1594" = type { %"class.base::RefCounted.1595" }
%"class.base::RefCounted.1595" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1596" = type { %"class.absl::optional_internal::optional_data.1597" }
%"class.absl::optional_internal::optional_data.1597" = type { %"class.absl::optional_internal::optional_data_base.1598" }
%"class.absl::optional_internal::optional_data_base.1598" = type { %"class.absl::optional_internal::optional_data_dtor_base.1599" }
%"class.absl::optional_internal::optional_data_dtor_base.1599" = type { i8, %union.anon.1600 }
%union.anon.1600 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1601 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1602" = type { %"class.std::__1::__compressed_pair.1603" }
%"class.std::__1::__compressed_pair.1603" = type { %"struct.std::__1::__compressed_pair_elem.1604" }
%"struct.std::__1::__compressed_pair_elem.1604" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1613", %"class.std::__1::map.1622"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1596" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1605", %"class.std::__1::__compressed_pair.1610" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1605" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"struct.std::__1::__compressed_pair_elem.1606" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1610" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1613" = type { %"class.std::__1::__tree.1614" }
%"class.std::__1::__tree.1614" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1615", %"class.std::__1::__compressed_pair.1619" }
%"class.std::__1::__compressed_pair.1615" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"class.std::__1::__compressed_pair.1619" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1622" = type opaque
%"class.std::__1::unique_ptr.1626" = type { %"class.std::__1::__compressed_pair.1627" }
%"class.std::__1::__compressed_pair.1627" = type { %"struct.std::__1::__compressed_pair_elem.1628" }
%"struct.std::__1::__compressed_pair_elem.1628" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1632" = type { %"class.WTF::HashTable.1633" }
%"class.WTF::HashTable.1633" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1638" = type { %"class.WTF::Vector.1641" }
%"class.WTF::Vector.1641" = type { %"class.WTF::VectorBuffer.1642" }
%"class.WTF::VectorBuffer.1642" = type { %"class.WTF::VectorBufferBase.1643" }
%"class.WTF::VectorBufferBase.1643" = type { %"class.blink::Member.1644"*, i32, i32 }
%"class.blink::Member.1644" = type opaque
%"class.blink::Member.1646" = type { %"class.blink::MemberBase.1647" }
%"class.blink::MemberBase.1647" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1650", i32, i32 }
%"class.blink::HeapHashMap.1650" = type { %"class.WTF::HashMap.1653" }
%"class.WTF::HashMap.1653" = type { %"class.WTF::HashTable.1654" }
%"class.WTF::HashTable.1654" = type <{ %"struct.WTF::KeyValuePair.1656"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1656" = type opaque
%"class.std::__1::unique_ptr.1657" = type { %"class.std::__1::__compressed_pair.1658" }
%"class.std::__1::__compressed_pair.1658" = type { %"struct.std::__1::__compressed_pair_elem.1659" }
%"struct.std::__1::__compressed_pair_elem.1659" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1660" }
%"class.std::__1::unique_ptr.1660" = type { %"class.std::__1::__compressed_pair.1661" }
%"class.std::__1::__compressed_pair.1661" = type { %"struct.std::__1::__compressed_pair_elem.1662" }
%"struct.std::__1::__compressed_pair_elem.1662" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1663" }
%"class.WTF::Vector.1663" = type { %"class.WTF::VectorBuffer.1664" }
%"class.WTF::VectorBuffer.1664" = type { %"class.WTF::VectorBufferBase.1665" }
%"class.WTF::VectorBufferBase.1665" = type { %"class.mojo::StructPtr.1666"*, i32, i32 }
%"class.mojo::StructPtr.1666" = type { %"class.std::__1::unique_ptr.1667" }
%"class.std::__1::unique_ptr.1667" = type { %"class.std::__1::__compressed_pair.1668" }
%"class.std::__1::__compressed_pair.1668" = type { %"struct.std::__1::__compressed_pair_elem.1669" }
%"struct.std::__1::__compressed_pair_elem.1669" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1670", %"class.WTF::HashMap.1677", %"class.WTF::HashMap.1682", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.455", i32, %"class.mojo::StructPtr.1687", %"class.WTF::Vector.455" }
%"class.mojo::StructPtr.1670" = type { %"class.std::__1::unique_ptr.1671" }
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1677" = type { %"class.WTF::HashTable.1678" }
%"class.WTF::HashTable.1678" = type <{ %"struct.WTF::KeyValuePair.1681"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1681" = type opaque
%"class.WTF::HashMap.1682" = type { %"class.WTF::HashTable.1683" }
%"class.WTF::HashTable.1683" = type <{ %"struct.WTF::KeyValuePair.1686"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1686" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1687" = type { %"class.std::__1::unique_ptr.1688" }
%"class.std::__1::unique_ptr.1688" = type { %"class.std::__1::__compressed_pair.1689" }
%"class.std::__1::__compressed_pair.1689" = type { %"struct.std::__1::__compressed_pair_elem.1690" }
%"struct.std::__1::__compressed_pair_elem.1690" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.455", i8, i8, [6 x i8] }>
%"class.WTF::Vector.455" = type { %"class.WTF::VectorBuffer.456" }
%"class.WTF::VectorBuffer.456" = type { %"class.WTF::VectorBufferBase.457" }
%"class.WTF::VectorBufferBase.457" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1771" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1702", i32 }>
%"class.std::__1::unique_ptr.1702" = type { %"class.std::__1::__compressed_pair.1703" }
%"class.std::__1::__compressed_pair.1703" = type { %"struct.std::__1::__compressed_pair_elem.1704" }
%"struct.std::__1::__compressed_pair_elem.1704" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1705", %"class.absl::optional.1706", %"class.absl::optional.1711", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1724", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1746", %"class.std::__1::map.1757", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1766", i8, %class.scoped_refptr.1716, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1767" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1705" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1706" = type { %"class.absl::optional_internal::optional_data.1707" }
%"class.absl::optional_internal::optional_data.1707" = type { %"class.absl::optional_internal::optional_data_base.1708" }
%"class.absl::optional_internal::optional_data_base.1708" = type { %"class.absl::optional_internal::optional_data_dtor_base.1709" }
%"class.absl::optional_internal::optional_data_dtor_base.1709" = type { i8, %union.anon.1710 }
%union.anon.1710 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1711" = type { %"class.absl::optional_internal::optional_data.1712" }
%"class.absl::optional_internal::optional_data.1712" = type { %"class.absl::optional_internal::optional_data_base.1713" }
%"class.absl::optional_internal::optional_data_base.1713" = type { %"class.absl::optional_internal::optional_data_dtor_base.1714" }
%"class.absl::optional_internal::optional_data_dtor_base.1714" = type { i8, %union.anon.1715 }
%union.anon.1715 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1716, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1717" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1717" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.988 }
%class.scoped_refptr.988 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1722 }
%class.scoped_refptr.1722 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1784", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1716, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1784" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1723 }
%class.scoped_refptr.1723 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1724" = type { %"class.std::__1::__compressed_pair.1725" }
%"class.std::__1::__compressed_pair.1725" = type { %"struct.std::__1::__compressed_pair_elem.1726" }
%"struct.std::__1::__compressed_pair_elem.1726" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1727", %class.scoped_refptr.1728 }
%"class.base::RepeatingCallback.1727" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1728 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1729", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1729" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1733", %"class.std::__1::unique_ptr.1739", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1745" }
%"class.std::__1::unique_ptr.1733" = type { %"class.std::__1::__compressed_pair.1734" }
%"class.std::__1::__compressed_pair.1734" = type { %"struct.std::__1::__compressed_pair_elem.1735" }
%"struct.std::__1::__compressed_pair_elem.1735" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1739" = type { %"class.std::__1::__compressed_pair.1740" }
%"class.std::__1::__compressed_pair.1740" = type { %"struct.std::__1::__compressed_pair_elem.1741" }
%"struct.std::__1::__compressed_pair_elem.1741" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1745" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1746" = type { %"class.std::__1::__tree.1747" }
%"class.std::__1::__tree.1747" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1748", %"class.std::__1::__compressed_pair.1752" }
%"class.std::__1::__compressed_pair.1748" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"class.std::__1::__compressed_pair.1752" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1757" = type { %"class.std::__1::__tree.1758" }
%"class.std::__1::__tree.1758" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1759", %"class.std::__1::__compressed_pair.1763" }
%"class.std::__1::__compressed_pair.1759" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"class.std::__1::__compressed_pair.1763" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1766" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1716 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.987" }>
%"class.base::RefCountedThreadSafe.987" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1767" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1771" = type { %"class.std::__1::__compressed_pair.1772" }
%"class.std::__1::__compressed_pair.1772" = type { %"struct.std::__1::__compressed_pair_elem.1773" }
%"struct.std::__1::__compressed_pair_elem.1773" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1780" = type { %"class.blink::MemberBase.1781" }
%"class.blink::MemberBase.1781" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1782" = type { %"class.blink::MemberBase.1783" }
%"class.blink::MemberBase.1783" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.948" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.blink::KURL"* }
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.964 }
%class.scoped_refptr.964 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.965" = type { %"class.WTF::VectorBuffer.966" }
%"class.WTF::VectorBuffer.966" = type { %"class.WTF::VectorBufferBase.967" }
%"class.WTF::VectorBufferBase.967" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.968 }
%class.scoped_refptr.968 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.969", i32, i32, %"class.blink::Persistent.971" }
%"class.WTF::RefCounted.969" = type { %"class.base::RefCounted.970" }
%"class.base::RefCounted.970" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.971" = type { %"class.blink::PersistentBase.972" }
%"class.blink::PersistentBase.972" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.975" }
%"class.blink::HeapHashMap.975" = type { %"class.WTF::HashMap.978" }
%"class.WTF::HashMap.978" = type { %"class.WTF::HashTable.979" }
%"class.WTF::HashTable.979" = type <{ %"struct.WTF::KeyValuePair.981"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.981" = type { %"class.blink::WeakMember.982", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.992" }
%"class.blink::HeapHashMap.992" = type { %"class.WTF::HashMap.995" }
%"class.WTF::HashMap.995" = type { %"class.WTF::HashTable.996" }
%"class.WTF::HashTable.996" = type <{ %"struct.WTF::KeyValuePair.998"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.998" = type opaque
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1001" = type { %"class.WTF::HashSet.1004" }
%"class.WTF::HashSet.1004" = type { %"class.WTF::HashTable.1005" }
%"class.WTF::HashTable.1005" = type <{ %"class.blink::WeakMember.1007"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1007" = type opaque
%"class.blink::HeapHashSet.1008" = type { %"class.WTF::HashSet.1011" }
%"class.WTF::HashSet.1011" = type { %"class.WTF::HashTable.1012" }
%"class.WTF::HashTable.1012" = type <{ %"class.blink::WeakMember.1014"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1014" = type opaque
%"class.blink::Member.1015" = type { %"class.blink::MemberBase.1016" }
%"class.blink::MemberBase.1016" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1017" = type { %"class.blink::MemberBase.1018" }
%"class.blink::MemberBase.1018" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.1021", %"class.blink::Member.1048", %"class.blink::HeapHashMap.1050", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1057", %"class.blink::HeapHashSet.1057", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1063", %"class.blink::Member.1075", %"class.blink::Member.1103", %"class.blink::Member.1105", %"class.blink::Member.1111", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1267", %"class.blink::Member.1273", %"class.blink::HeapHashMap.1275", %"class.blink::HeapHashMap.1282", %"class.std::__1::unique_ptr.1289", i32, %"class.blink::HeapVector.1295", %"class.blink::HeapVector.1295", %"class.blink::HeapVector.1033", %"class.blink::HeapHashSet.1303", %"class.blink::HeapHashMap.1310", %"class.blink::Member.1317", %"class.blink::HeapHashMap.1328", %class.scoped_refptr.1335, %class.scoped_refptr.259, %"class.blink::Member.449", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1336", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1021" = type { %"class.blink::MemberBase.1022" }
%"class.blink::MemberBase.1022" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1025", %"class.blink::HeapVector.1033", i8 }>
%"class.blink::HeapVector.1025" = type { %"class.WTF::Vector.1028" }
%"class.WTF::Vector.1028" = type { %"class.WTF::VectorBuffer.1029" }
%"class.WTF::VectorBuffer.1029" = type { %"class.WTF::VectorBufferBase.1030" }
%"class.WTF::VectorBufferBase.1030" = type { %"class.blink::Member.1031"*, i32, i32 }
%"class.blink::Member.1031" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1044", %"class.blink::Member.1046", %"class.blink::Member.1046", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1044" = type <{ %"class.blink::Member.1046"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1046" = type { %"class.blink::MemberBase.1047" }
%"class.blink::MemberBase.1047" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1046", %"class.blink::Member.1046" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1050" = type { %"class.WTF::HashMap.1053" }
%"class.WTF::HashMap.1053" = type { %"class.WTF::HashTable.1054" }
%"class.WTF::HashTable.1054" = type <{ %"struct.WTF::KeyValuePair.1056"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1056" = type opaque
%"class.blink::HeapHashSet.1057" = type { %"class.WTF::HashSet.1060" }
%"class.WTF::HashSet.1060" = type { %"class.WTF::HashTable.1061" }
%"class.WTF::HashTable.1061" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1065", %"class.blink::Member.1067" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.710" }
%"class.blink::HeapHashMap.710" = type { %"class.WTF::HashMap.713" }
%"class.WTF::HashMap.713" = type { %"class.WTF::HashTable.714" }
%"class.WTF::HashTable.714" = type <{ %"struct.WTF::KeyValuePair.716"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.716" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1071", %"class.blink::Member.1073" }
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1560", %"class.blink::Member.1067", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.840] }
%"class.blink::HeapVector.1560" = type { %"class.WTF::Vector.1563" }
%"class.WTF::Vector.1563" = type { %"class.WTF::VectorBuffer.1564" }
%"class.WTF::VectorBuffer.1564" = type { %"class.WTF::VectorBufferBase.1565" }
%"class.WTF::VectorBufferBase.1565" = type { %"class.blink::Member.1073"*, i32, i32 }
%class.sk_sp.840 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.841, i32, %"class.absl::optional.842", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.841 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.842" = type { %"class.absl::optional_internal::optional_data.843" }
%"class.absl::optional_internal::optional_data.843" = type { %"class.absl::optional_internal::optional_data_base.844" }
%"class.absl::optional_internal::optional_data_base.844" = type { %"class.absl::optional_internal::optional_data_dtor_base.845" }
%"class.absl::optional_internal::optional_data_dtor_base.845" = type { i8, %union.anon.846 }
%union.anon.846 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1048", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1079" }
%"class.blink::HeapHashMap.1079" = type { %"class.WTF::HashMap.1082" }
%"class.WTF::HashMap.1082" = type { %"class.WTF::HashTable.1083" }
%"class.WTF::HashTable.1083" = type <{ %"struct.WTF::KeyValuePair.1085"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1085" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.754", %"class.std::__1::unique_ptr.756" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.471", %"class.blink::DataRef.475", %"class.blink::DataRef.670", %"class.blink::DataRef.737", %"class.blink::DataRef.741", %"class.blink::DataRef.745", %"class.blink::DataRef.749", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1792", [4 x i8] }>
%"class.WTF::RefCounted.1792" = type { %"class.base::RefCounted.1793" }
%"class.base::RefCounted.1793" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type <{ %"class.blink::Member.445", i32, i32, %"class.WTF::AtomicString", %"class.blink::Member.453", %"class.WTF::AtomicString", %"class.blink::Member.453", i8, [7 x i8], %"class.WTF::Vector.455", %"class.WTF::Vector.460", %"class.WTF::Vector.465", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::CounterStyle"* }
%"class.WTF::Vector.460" = type { %"class.WTF::VectorBuffer.461" }
%"class.WTF::VectorBuffer.461" = type { %"class.WTF::VectorBufferBase.462" }
%"class.WTF::VectorBufferBase.462" = type { i32*, i32, i32 }
%"class.WTF::Vector.465" = type { %"class.WTF::VectorBuffer.466" }
%"class.WTF::VectorBuffer.466" = type { %"class.WTF::VectorBufferBase.467" }
%"class.WTF::VectorBufferBase.467" = type { %"struct.std::__1::pair.468"*, i32, i32 }
%"struct.std::__1::pair.468" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.471" = type { %class.scoped_refptr.472 }
%class.scoped_refptr.472 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.473", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.473" = type { %"class.base::RefCounted.474" }
%"class.base::RefCounted.474" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.475" = type { %class.scoped_refptr.476 }
%class.scoped_refptr.476 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.477", [4 x i8], %"class.blink::DataRef.479", %"class.blink::DataRef.545", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.664", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.477" = type { %"class.base::RefCounted.478" }
%"class.base::RefCounted.478" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.479" = type { %class.scoped_refptr.480 }
%class.scoped_refptr.480 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.481", [4 x i8], %"class.blink::DataRef.483", %"class.blink::Persistent.521", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.481" = type { %"class.base::RefCounted.482" }
%"class.base::RefCounted.482" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.483" = type { %class.scoped_refptr.484 }
%class.scoped_refptr.484 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.485", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.503, %class.scoped_refptr.506, %class.scoped_refptr.509, %class.scoped_refptr.512, %class.scoped_refptr.513, %class.scoped_refptr.514, %"class.blink::Persistent.521", %"class.blink::Persistent.536", %"class.absl::optional.540", %"class.absl::optional.540", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.485" = type { %"class.base::RefCounted.486" }
%"class.base::RefCounted.486" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.487", %"class.std::__1::unique_ptr.492" }
%"class.WTF::Vector.487" = type { %"class.WTF::VectorBuffer.488" }
%"class.WTF::VectorBuffer.488" = type { %"class.WTF::VectorBufferBase.489" }
%"class.WTF::VectorBufferBase.489" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.495", %"class.WTF::Vector.487", i32, i32 }
%"class.WTF::Vector.495" = type { %"class.WTF::VectorBuffer.496" }
%"class.WTF::VectorBuffer.496" = type { %"class.WTF::VectorBufferBase.497" }
%"class.WTF::VectorBufferBase.497" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.503 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.504", [4 x i8] }>
%"class.WTF::RefCounted.504" = type { %"class.base::RefCounted.505" }
%"class.base::RefCounted.505" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.506 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.507", [4 x i8] }>
%"class.WTF::RefCounted.507" = type { %"class.base::RefCounted.508" }
%"class.base::RefCounted.508" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.509 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.510" }>
%"class.WTF::RefCounted.510" = type { %"class.base::RefCounted.511" }
%"class.base::RefCounted.511" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.512 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.513 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.514 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.515", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.515" = type { %"class.base::RefCounted.516" }
%"class.base::RefCounted.516" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.517" }
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.519" }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.536" = type { %"class.blink::PersistentBase.537" }
%"class.blink::PersistentBase.537" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.506, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.540" = type { %"class.absl::optional_internal::optional_data.541" }
%"class.absl::optional_internal::optional_data.541" = type { %"class.absl::optional_internal::optional_data_base.542" }
%"class.absl::optional_internal::optional_data_base.542" = type { %"class.absl::optional_internal::optional_data_dtor_base.543" }
%"class.absl::optional_internal::optional_data_dtor_base.543" = type { i8, [3 x i8], %union.anon.544 }
%union.anon.544 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.521" = type { %"class.blink::PersistentBase.522" }
%"class.blink::PersistentBase.522" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.525" }
%"class.blink::HeapVector.525" = type { %"class.WTF::Vector.528" }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { %"class.blink::Member.531"*, i32, i32 }
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.545" = type { %class.scoped_refptr.546 }
%class.scoped_refptr.546 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.547", %"class.blink::DataRef.549", %"class.blink::DataRef.553", %"class.blink::DataRef.562", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.581", %"class.std::__1::unique_ptr.592", %"class.std::__1::unique_ptr.630", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.652", %"class.WTF::Vector.455", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.547" = type { %"class.base::RefCounted.548" }
%"class.base::RefCounted.548" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.549" = type { %class.scoped_refptr.550 }
%class.scoped_refptr.550 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.551", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.551" = type { %"class.base::RefCounted.552" }
%"class.base::RefCounted.552" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.553" = type { %class.scoped_refptr.554 }
%class.scoped_refptr.554 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.555", [4 x i8], %"class.WTF::Vector.557", i8, [7 x i8] }>
%"class.WTF::RefCounted.555" = type { %"class.base::RefCounted.556" }
%"class.base::RefCounted.556" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.557" = type { %"class.WTF::VectorBuffer.558" }
%"class.WTF::VectorBuffer.558" = type { %"class.WTF::VectorBufferBase.559" }
%"class.WTF::VectorBufferBase.559" = type { i32*, i32, i32 }
%"class.blink::DataRef.562" = type { %class.scoped_refptr.563 }
%class.scoped_refptr.563 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.564", [4 x i8], %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.566", %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.576", %"class.WTF::Vector.487", %"class.WTF::Vector.487", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.564" = type { %"class.base::RefCounted.565" }
%"class.base::RefCounted.565" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.566" = type { %"class.WTF::HashTable.567" }
%"class.WTF::HashTable.567" = type <{ %"struct.WTF::KeyValuePair.570"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.570" = type { %"class.WTF::String", %"class.WTF::Vector.3826" }
%"class.WTF::Vector.3826" = type { %"class.WTF::VectorBuffer.3827" }
%"class.WTF::VectorBuffer.3827" = type { %"class.WTF::VectorBufferBase.3828" }
%"class.WTF::VectorBufferBase.3828" = type { i64*, i32, i32 }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.575"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.575" = type { i64, %"class.WTF::Vector.455" }
%"class.WTF::HashMap.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"struct.WTF::KeyValuePair.580"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.580" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.581" = type { %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.584" }
%"class.WTF::HashMap.584" = type { %"class.WTF::HashTable.585" }
%"class.WTF::HashTable.585" = type <{ %"struct.WTF::KeyValuePair.588"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.588" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2807", %"class.absl::optional.2807", %"class.absl::optional.2807" }
%"class.absl::optional.2807" = type { %"class.absl::optional_internal::optional_data.2808" }
%"class.absl::optional_internal::optional_data.2808" = type { %"class.absl::optional_internal::optional_data_base.2809" }
%"class.absl::optional_internal::optional_data_base.2809" = type { %"class.absl::optional_internal::optional_data_dtor_base.2810" }
%"class.absl::optional_internal::optional_data_dtor_base.2810" = type { i8, %union.anon.2811 }
%union.anon.2811 = type { i32 }
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.607", %"class.WTF::Vector.595", %"class.WTF::Vector.612", %"class.WTF::Vector.617", %"class.WTF::Vector.622" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.595", %"class.WTF::Vector.595", %"class.WTF::Vector.600" }
%"class.WTF::Vector.600" = type { %"class.WTF::VectorBuffer.601" }
%"class.WTF::VectorBuffer.601" = type { %"class.WTF::VectorBufferBase.602" }
%"class.WTF::VectorBufferBase.602" = type { %class.scoped_refptr.603*, i32, i32 }
%class.scoped_refptr.603 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.604" }
%"class.base::RefCountedThreadSafe.604" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.607" = type { %"class.WTF::VectorBuffer.608" }
%"class.WTF::VectorBuffer.608" = type { %"class.WTF::VectorBufferBase.609" }
%"class.WTF::VectorBufferBase.609" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.595" = type { %"class.WTF::VectorBuffer.596" }
%"class.WTF::VectorBuffer.596" = type { %"class.WTF::VectorBufferBase.597" }
%"class.WTF::VectorBufferBase.597" = type { double*, i32, i32 }
%"class.WTF::Vector.612" = type { %"class.WTF::VectorBuffer.613" }
%"class.WTF::VectorBuffer.613" = type { %"class.WTF::VectorBufferBase.614" }
%"class.WTF::VectorBufferBase.614" = type { i32*, i32, i32 }
%"class.WTF::Vector.617" = type { %"class.WTF::VectorBuffer.618" }
%"class.WTF::VectorBuffer.618" = type { %"class.WTF::VectorBufferBase.619" }
%"class.WTF::VectorBufferBase.619" = type { i32*, i32, i32 }
%"class.WTF::Vector.622" = type { %"class.WTF::VectorBuffer.623" }
%"class.WTF::VectorBuffer.623" = type { %"class.WTF::VectorBufferBase.624" }
%"class.WTF::VectorBufferBase.624" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.633" }
%"class.WTF::Vector.633" = type { %"class.WTF::VectorBuffer.634" }
%"class.WTF::VectorBuffer.634" = type { %"class.WTF::VectorBufferBase.635" }
%"class.WTF::VectorBufferBase.635" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.644" }
%"class.WTF::Vector.644" = type { %"class.WTF::VectorBuffer.645" }
%"class.WTF::VectorBuffer.645" = type { %"class.WTF::VectorBufferBase.646" }
%"class.WTF::VectorBufferBase.646" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3831 }
%class.scoped_refptr.3831 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3832", %"class.WTF::Vector.455", %"class.WTF::Vector.3834", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3832" = type { %"class.base::RefCounted.3833" }
%"class.base::RefCounted.3833" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3834" = type { %"class.WTF::VectorBuffer.3835" }
%"class.WTF::VectorBuffer.3835" = type { %"class.WTF::VectorBufferBase.3836" }
%"class.WTF::VectorBufferBase.3836" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3837 }
%union.anon.3837 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.658" }
%"class.WTF::Vector.658" = type { %"class.WTF::VectorBuffer.659" }
%"class.WTF::VectorBuffer.659" = type { %"class.WTF::VectorBufferBase.660" }
%"class.WTF::VectorBufferBase.660" = type { %class.scoped_refptr.661*, i32, i32 }
%class.scoped_refptr.661 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.510", [4 x i8] }>
%"class.blink::Persistent.664" = type { %"class.blink::PersistentBase.665" }
%"class.blink::PersistentBase.665" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.668" }
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.670" = type { %class.scoped_refptr.671 }
%class.scoped_refptr.671 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.672", [4 x i8], %"class.blink::DataRef.674", %"class.blink::DataRef.678", %"class.blink::DataRef.699", %"class.blink::DataRef.717", %"class.blink::DataRef.729", %"class.blink::DataRef.733", %class.scoped_refptr.703, i32, [4 x i8] }>
%"class.WTF::RefCounted.672" = type { %"class.base::RefCounted.673" }
%"class.base::RefCounted.673" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.674" = type { %class.scoped_refptr.675 }
%class.scoped_refptr.675 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.676", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.676" = type { %"class.base::RefCounted.677" }
%"class.base::RefCounted.677" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.678" = type { %class.scoped_refptr.679 }
%class.scoped_refptr.679 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.680", %class.scoped_refptr.682, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.680" = type { %"class.base::RefCounted.681" }
%"class.base::RefCounted.681" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.682 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.683", %"class.std::__1::unique_ptr.689", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.507" }>
%"class.std::__1::unique_ptr.683" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.692, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.692 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.693, %class.SkTDArray.694, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.693 = type { i8*, i32, i32 }
%class.SkTDArray.694 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.695 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.695 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.699" = type { %class.scoped_refptr.700 }
%class.scoped_refptr.700 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.701", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.701" = type { %"class.base::RefCounted.702" }
%"class.base::RefCounted.702" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.703, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.717" = type { %class.scoped_refptr.718 }
%class.scoped_refptr.718 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.719", [4 x i8], %class.scoped_refptr.721, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.719" = type { %"class.base::RefCounted.720" }
%"class.base::RefCounted.720" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.721 = type { %"class.base::RefCountedData.722"* }
%"class.base::RefCountedData.722" = type { %"class.base::RefCountedThreadSafe.723", %"class.WTF::Vector.724" }
%"class.base::RefCountedThreadSafe.723" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.724" = type { %"class.WTF::VectorBuffer.725" }
%"class.WTF::VectorBuffer.725" = type { %"class.WTF::VectorBufferBase.726" }
%"class.WTF::VectorBufferBase.726" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.729" = type { %class.scoped_refptr.730 }
%class.scoped_refptr.730 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.731", %class.scoped_refptr.703, %class.scoped_refptr.703, %class.scoped_refptr.703 }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.733" = type { %class.scoped_refptr.734 }
%class.scoped_refptr.734 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.735", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.735" = type { %"class.base::RefCounted.736" }
%"class.base::RefCounted.736" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.703 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.704", %"class.blink::Persistent.706", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.704" = type { %"class.base::RefCounted.705" }
%"class.base::RefCounted.705" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.706" = type { %"class.blink::PersistentBase.707" }
%"class.blink::PersistentBase.707" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.737" = type { %class.scoped_refptr.738 }
%class.scoped_refptr.738 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.739", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.739" = type { %"class.base::RefCounted.740" }
%"class.base::RefCounted.740" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.741" = type { %class.scoped_refptr.742 }
%class.scoped_refptr.742 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.743", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.743" = type { %"class.base::RefCounted.744" }
%"class.base::RefCounted.744" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.745" = type { %class.scoped_refptr.746 }
%class.scoped_refptr.746 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.747", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.747" = type { %"class.base::RefCounted.748" }
%"class.base::RefCounted.748" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.749" = type { %class.scoped_refptr.750 }
%class.scoped_refptr.750 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.751", %class.scoped_refptr.753 }
%"class.WTF::RefCounted.751" = type { %"class.base::RefCounted.752" }
%"class.base::RefCounted.752" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.753 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.920", %"class.blink::StyleVariables", %class.scoped_refptr.753 }
%"class.WTF::RefCounted.920" = type { %"class.base::RefCounted.921" }
%"class.base::RefCounted.921" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.754" = type { %"class.base::RefCounted.755" }
%"class.base::RefCounted.755" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.759" }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.WTF::Vector.762"* }
%"class.WTF::Vector.762" = type { %"class.WTF::VectorBuffer.3841" }
%"class.WTF::VectorBuffer.3841" = type { %"class.WTF::VectorBufferBase.3842", [32 x i8] }
%"class.WTF::VectorBufferBase.3842" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1086", %"class.std::__1::unique_ptr.1097" }
%"class.blink::HeapVector.1086" = type { %"class.WTF::Vector.1089" }
%"class.WTF::Vector.1089" = type { %"class.WTF::VectorBuffer.1090" }
%"class.WTF::VectorBuffer.1090" = type { %"class.WTF::VectorBufferBase.1091" }
%"class.WTF::VectorBufferBase.1091" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1092" }
%"class.WTF::Vector.1092" = type { %"class.WTF::VectorBuffer.1093" }
%"class.WTF::VectorBuffer.1093" = type { %"class.WTF::VectorBufferBase.462", [16 x i8] }
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1109", i8, [7 x i8] }>
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1133", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1115", %"class.WTF::HashMap.1115", %"class.WTF::HashMap.1115", %"class.WTF::HashMap.1120", %class.scoped_refptr.1125, %class.scoped_refptr.1132, %class.scoped_refptr.1131, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1115" = type { %"class.WTF::HashTable.1116" }
%"class.WTF::HashTable.1116" = type <{ %"struct.WTF::KeyValuePair.1119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1119" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3913 }
%class.scoped_refptr.3913 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1126", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1128", %"union.blink::InvalidationSet::Backing.1129", %"union.blink::InvalidationSet::Backing.1130", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1126" = type { %"class.base::RefCounted.1127" }
%"class.base::RefCounted.1127" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1128" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1129" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1130" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1120" = type { %"class.WTF::HashTable.1121" }
%"class.WTF::HashTable.1121" = type <{ %"struct.WTF::KeyValuePair.1124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1124" = type opaque
%class.scoped_refptr.1125 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1131, %class.scoped_refptr.1131 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1126", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1128", %"union.blink::InvalidationSet::Backing.1129", %"union.blink::InvalidationSet::Backing.1130", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1132 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1131 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1137", %"class.blink::HeapHashMap.1137", %"class.blink::HeapHashMap.1137", %"class.blink::HeapHashMap.1137", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::HeapVector.1144", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1178", %"class.blink::HeapVector.1186", %"class.blink::HeapVector.1194", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1219", %"class.blink::HeapVector.1227", %"class.blink::HeapVector.1236", %"class.WTF::Vector.1243", i32, %"class.blink::Member.1249" }
%"class.blink::HeapHashMap.1137" = type { %"class.WTF::HashMap.1140" }
%"class.WTF::HashMap.1140" = type { %"class.WTF::HashTable.1141" }
%"class.WTF::HashTable.1141" = type <{ %"struct.WTF::KeyValuePair.1143"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1143" = type { %"class.WTF::AtomicString", %"class.blink::Member.3923" }
%"class.blink::Member.3923" = type { %"class.blink::MemberBase.3924" }
%"class.blink::MemberBase.3924" = type { %"class.blink::HeapVector.1144"* }
%"class.blink::HeapVector.1144" = type { %"class.WTF::Vector.1147" }
%"class.WTF::Vector.1147" = type { %"class.WTF::VectorBuffer.1148" }
%"class.WTF::VectorBuffer.1148" = type { %"class.WTF::VectorBufferBase.1149" }
%"class.WTF::VectorBufferBase.1149" = type { %"class.blink::Member.1150"*, i32, i32 }
%"class.blink::Member.1150" = type { %"class.blink::MemberBase.1151" }
%"class.blink::MemberBase.1151" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1154", i64, [4 x i32] }
%"class.blink::Member.1154" = type { %"class.blink::MemberBase.1155" }
%"class.blink::MemberBase.1155" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1173" }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1178" = type { %"class.WTF::Vector.1181" }
%"class.WTF::Vector.1181" = type { %"class.WTF::VectorBuffer.1182" }
%"class.WTF::VectorBuffer.1182" = type { %"class.WTF::VectorBufferBase.1183" }
%"class.WTF::VectorBufferBase.1183" = type { %"class.blink::Member.1184"*, i32, i32 }
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.3919" }
%"class.blink::MemberBase.3919" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1186" = type { %"class.WTF::Vector.1189" }
%"class.WTF::Vector.1189" = type { %"class.WTF::VectorBuffer.1190" }
%"class.WTF::VectorBuffer.1190" = type { %"class.WTF::VectorBufferBase.1191" }
%"class.WTF::VectorBufferBase.1191" = type { %"class.blink::Member.1192"*, i32, i32 }
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.3920" }
%"class.blink::MemberBase.3920" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1194" = type { %"class.WTF::Vector.1197" }
%"class.WTF::Vector.1197" = type { %"class.WTF::VectorBuffer.1198" }
%"class.WTF::VectorBuffer.1198" = type { %"class.WTF::VectorBufferBase.1199" }
%"class.WTF::VectorBufferBase.1199" = type { %"class.blink::Member.1200"*, i32, i32 }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1202", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1202" = type { %"class.WTF::Vector.1205" }
%"class.WTF::Vector.1205" = type { %"class.WTF::VectorBuffer.1206" }
%"class.WTF::VectorBuffer.1206" = type { %"class.WTF::VectorBufferBase.1207" }
%"class.WTF::VectorBufferBase.1207" = type { %"class.blink::Member.1208"*, i32, i32 }
%"class.blink::Member.1208" = type opaque
%"class.blink::HeapVector.1211" = type { %"class.WTF::Vector.1214" }
%"class.WTF::Vector.1214" = type { %"class.WTF::VectorBuffer.1215" }
%"class.WTF::VectorBuffer.1215" = type { %"class.WTF::VectorBufferBase.1216" }
%"class.WTF::VectorBufferBase.1216" = type { %"class.blink::Member.1217"*, i32, i32 }
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.3921" }
%"class.blink::MemberBase.3921" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1219" = type { %"class.WTF::Vector.1222" }
%"class.WTF::Vector.1222" = type { %"class.WTF::VectorBuffer.1223" }
%"class.WTF::VectorBuffer.1223" = type { %"class.WTF::VectorBufferBase.1224" }
%"class.WTF::VectorBufferBase.1224" = type { %"class.blink::Member.1225"*, i32, i32 }
%"class.blink::Member.1225" = type { %"class.blink::MemberBase.3922" }
%"class.blink::MemberBase.3922" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::HeapVector.1227" = type { %"class.WTF::Vector.1230" }
%"class.WTF::Vector.1230" = type { %"class.WTF::VectorBuffer.1231" }
%"class.WTF::VectorBuffer.1231" = type { %"class.WTF::VectorBufferBase.1232" }
%"class.WTF::VectorBufferBase.1232" = type { %"class.blink::Member.1233"*, i32, i32 }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.449" }
%"class.blink::HeapVector.1236" = type { %"class.WTF::Vector.1239" }
%"class.WTF::Vector.1239" = type { %"class.WTF::VectorBuffer.1240" }
%"class.WTF::VectorBuffer.1240" = type { %"class.WTF::VectorBufferBase.1241" }
%"class.WTF::VectorBufferBase.1241" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1154", i32, i32 }
%"class.WTF::Vector.1243" = type { %"class.WTF::VectorBuffer.1244" }
%"class.WTF::VectorBuffer.1244" = type { %"class.WTF::VectorBufferBase.1245" }
%"class.WTF::VectorBufferBase.1245" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1246, i8, [7 x i8] }>
%class.scoped_refptr.1246 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1253", %"class.blink::HeapHashMap.1253", %"class.blink::HeapHashMap.1253", %"class.blink::HeapHashMap.1253" }
%"class.blink::HeapHashMap.1253" = type { %"class.WTF::HashMap.1256" }
%"class.WTF::HashMap.1256" = type { %"class.WTF::HashTable.1257" }
%"class.WTF::HashTable.1257" = type <{ %"struct.WTF::KeyValuePair.1259"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1259" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1260" }
%"class.blink::HeapHashMap.1260" = type { %"class.WTF::HashMap.1263" }
%"class.WTF::HashMap.1263" = type { %"class.WTF::HashTable.1264" }
%"class.WTF::HashTable.1264" = type <{ %"struct.WTF::KeyValuePair.1266"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1266" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3914", %"class.WTF::Vector.3914" }
%"class.WTF::Vector.3914" = type { %"class.WTF::VectorBuffer.3915" }
%"class.WTF::VectorBuffer.3915" = type { %"class.WTF::VectorBufferBase.3916" }
%"class.WTF::VectorBufferBase.3916" = type { %class.scoped_refptr.3913*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1267" = type { %"class.WTF::HashSet.1270" }
%"class.WTF::HashSet.1270" = type { %"class.WTF::HashTable.1271" }
%"class.WTF::HashTable.1271" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1275" = type { %"class.WTF::HashMap.1278" }
%"class.WTF::HashMap.1278" = type { %"class.WTF::HashTable.1279" }
%"class.WTF::HashTable.1279" = type <{ %"struct.WTF::KeyValuePair.1281"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1281" = type opaque
%"class.blink::HeapHashMap.1282" = type { %"class.WTF::HashMap.1285" }
%"class.WTF::HashMap.1285" = type { %"class.WTF::HashTable.1286" }
%"class.WTF::HashTable.1286" = type <{ %"struct.WTF::KeyValuePair.1288"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1288" = type opaque
%"class.std::__1::unique_ptr.1289" = type { %"class.std::__1::__compressed_pair.1290" }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.1291" }
%"struct.std::__1::__compressed_pair_elem.1291" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1295" = type { %"class.WTF::Vector.1298" }
%"class.WTF::Vector.1298" = type { %"class.WTF::VectorBuffer.1299" }
%"class.WTF::VectorBuffer.1299" = type { %"class.WTF::VectorBufferBase.1300" }
%"class.WTF::VectorBufferBase.1300" = type { %"struct.std::__1::pair.1301"*, i32, i32 }
%"struct.std::__1::pair.1301" = type opaque
%"class.blink::HeapVector.1033" = type { %"class.WTF::Vector.1036" }
%"class.WTF::Vector.1036" = type { %"class.WTF::VectorBuffer.1037" }
%"class.WTF::VectorBuffer.1037" = type { %"class.WTF::VectorBufferBase.1038" }
%"class.WTF::VectorBufferBase.1038" = type { %"struct.std::__1::pair.1039"*, i32, i32 }
%"struct.std::__1::pair.1039" = type opaque
%"class.blink::HeapHashSet.1303" = type { %"class.WTF::HashSet.1306" }
%"class.WTF::HashSet.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"class.blink::WeakMember.1309"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1309" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1310" = type { %"class.WTF::HashMap.1313" }
%"class.WTF::HashMap.1313" = type { %"class.WTF::HashTable.1314" }
%"class.WTF::HashTable.1314" = type <{ %"struct.WTF::KeyValuePair.1316"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1316" = type { %"class.WTF::AtomicString", %"class.blink::Member.1200" }
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type { %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::HeapHashMap.1321" }
%"class.blink::HeapHashMap.1321" = type { %"class.WTF::HashMap.1324" }
%"class.WTF::HashMap.1324" = type { %"class.WTF::HashTable.1325" }
%"class.WTF::HashTable.1325" = type <{ %"struct.WTF::KeyValuePair.1327"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1327" = type opaque
%"class.blink::HeapHashMap.1328" = type { %"class.WTF::HashMap.1331" }
%"class.WTF::HashMap.1331" = type { %"class.WTF::HashTable.1332" }
%"class.WTF::HashTable.1332" = type <{ %"struct.WTF::KeyValuePair.1334"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1334" = type opaque
%class.scoped_refptr.1335 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1336" = type { %"class.WTF::HashSet.1339" }
%"class.WTF::HashSet.1339" = type { %"class.WTF::HashTable.1340" }
%"class.WTF::HashTable.1340" = type <{ %"class.blink::Member.1342"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1342" = type opaque
%"class.blink::Member.1343" = type { %"class.blink::MemberBase.1344" }
%"class.blink::MemberBase.1344" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1345" = type { %"class.blink::MemberBase.1346" }
%"class.blink::MemberBase.1346" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1349" = type { %"class.WTF::HashMap.1352" }
%"class.WTF::HashMap.1352" = type { %"class.WTF::HashTable.1353" }
%"class.WTF::HashTable.1353" = type <{ %"struct.WTF::KeyValuePair.1355"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1355" = type opaque
%"class.WTF::Vector.1356" = type { %"class.WTF::VectorBuffer.1357" }
%"class.WTF::VectorBuffer.1357" = type { %"class.WTF::VectorBufferBase.1358" }
%"class.WTF::VectorBufferBase.1358" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1361" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1363" = type { %"class.blink::MemberBase.1364" }
%"class.blink::MemberBase.1364" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1367" = type { %"class.WTF::Vector.1370" }
%"class.WTF::Vector.1370" = type { %"class.WTF::VectorBuffer.1371" }
%"class.WTF::VectorBuffer.1371" = type { %"class.WTF::VectorBufferBase.1372" }
%"class.WTF::VectorBufferBase.1372" = type { %"class.blink::Member.1373"*, i32, i32 }
%"class.blink::Member.1373" = type opaque
%"class.std::__1::unique_ptr.1375" = type { %"class.std::__1::__compressed_pair.1376" }
%"class.std::__1::__compressed_pair.1376" = type { %"struct.std::__1::__compressed_pair_elem.1377" }
%"struct.std::__1::__compressed_pair_elem.1377" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1381" = type { %"class.WTF::HashSet.1384" }
%"class.WTF::HashSet.1384" = type { %"class.WTF::HashTable.1385" }
%"class.WTF::HashTable.1385" = type <{ %"class.blink::WeakMember.1387"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1387" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1388", i32, [4 x i8] }>
%"class.WTF::Vector.1388" = type { %"class.WTF::VectorBuffer.1389" }
%"class.WTF::VectorBuffer.1389" = type { %"class.WTF::VectorBufferBase.1390" }
%"class.WTF::VectorBufferBase.1390" = type { %"struct.std::__1::pair.1391"*, i32, i32 }
%"struct.std::__1::pair.1391" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type { %"class.blink::Member.326", %"class.blink::HeapHashSet.3218", %"class.blink::HeapHashSet.3225", %"class.blink::HeapHashSet.3218", %"class.blink::FloatPoint" }
%"class.blink::HeapHashSet.3225" = type { %"class.WTF::HashSet.3228" }
%"class.WTF::HashSet.3228" = type { %"class.WTF::HashTable.3229" }
%"class.WTF::HashTable.3229" = type <{ %"class.blink::Member.3231"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3231" = type { %"class.blink::MemberBase.3232" }
%"class.blink::MemberBase.3232" = type { %"class.blink::SVGElement"* }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet.3233", %"class.blink::HeapHashMap.3240", %"class.blink::Member.3247", %"class.blink::Member.3249" }
%"class.blink::HeapHashSet.3233" = type { %"class.WTF::HashSet.3236" }
%"class.WTF::HashSet.3236" = type { %"class.WTF::HashTable.3237" }
%"class.WTF::HashTable.3237" = type <{ %"class.blink::WeakMember.3239"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3239" = type opaque
%"class.blink::HeapHashMap.3240" = type { %"class.WTF::HashMap.3243" }
%"class.WTF::HashMap.3243" = type { %"class.WTF::HashTable.3244" }
%"class.WTF::HashTable.3244" = type <{ %"struct.WTF::KeyValuePair.3246"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3246" = type opaque
%"class.blink::Member.3247" = type { %"class.blink::MemberBase.3248" }
%"class.blink::MemberBase.3248" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.3249" = type { %"class.blink::MemberBase.3250" }
%"class.blink::MemberBase.3250" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::HeapHashSet.3218" = type { %"class.WTF::HashSet.3221" }
%"class.WTF::HashSet.3221" = type { %"class.WTF::HashTable.3222" }
%"class.WTF::HashTable.3222" = type <{ %"class.blink::Member.3224"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3224" = type opaque
%"class.WTF::Vector.1396" = type { %"class.WTF::VectorBuffer.1397" }
%"class.WTF::VectorBuffer.1397" = type { %"class.WTF::VectorBufferBase.1398" }
%"class.WTF::VectorBufferBase.1398" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1401" = type { %"class.std::__1::__compressed_pair.1402" }
%"class.std::__1::__compressed_pair.1402" = type { %"struct.std::__1::__compressed_pair_elem.1403" }
%"struct.std::__1::__compressed_pair_elem.1403" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1895", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2128", %"class.std::__1::unique_ptr.2134", %"class.std::__1::unique_ptr.2140", %class.scoped_refptr.1891, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2146", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1854", %"class.std::__1::unique_ptr.1864" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1810, %"class.WTF::Vector.1811", %"class.std::__1::unique_ptr.1816", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1837, %"class.blink::Persistent.1838" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.770" }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.773", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.900", i8, %"class.absl::optional.906", %class.scoped_refptr.882, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.911" }
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.3148", %"class.blink::Persistent.3154", %"class.std::__1::unique_ptr.3178", %"class.blink::CullRect", %"class.std::__1::unique_ptr.3194" }
%"class.std::__1::unique_ptr.3148" = type { %"class.std::__1::__compressed_pair.3149" }
%"class.std::__1::__compressed_pair.3149" = type { %"struct.std::__1::__compressed_pair_elem.3150" }
%"struct.std::__1::__compressed_pair_elem.3150" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.3154" = type { %"class.blink::PersistentBase.3155" }
%"class.blink::PersistentBase.3155" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.3160", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.3173" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2165", %"class.blink::Member.2167", %"class.blink::Member.2169", %"class.blink::Member.2171", %"class.WTF::Vector.929", i16, %class.scoped_refptr.986 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2165" = type { %"class.blink::MemberBase.2166" }
%"class.blink::MemberBase.2166" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2167" = type { %"class.blink::MemberBase.2168" }
%"class.blink::MemberBase.2168" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2169" = type { %"class.blink::MemberBase.2170" }
%"class.blink::MemberBase.2170" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2171" = type { %"class.blink::MemberBase.2172" }
%"class.blink::MemberBase.2172" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%class.scoped_refptr.986 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.3158", %"class.blink::Member.1944", %"class.blink::Member.1944", i8, [7 x i8] }>
%"class.blink::Member.3158" = type { %"class.blink::MemberBase.3159" }
%"class.blink::MemberBase.3159" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1944" = type { %"class.blink::MemberBase.1945" }
%"class.blink::MemberBase.1945" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2163", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2173", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2163" = type { %"class.blink::MemberBase.2164" }
%"class.blink::MemberBase.2164" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2173" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2174", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.986, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2174" = type { %"class.blink::MemberBase.1945" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.2163", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.3160" = type { %"class.std::__1::__compressed_pair.3161" }
%"class.std::__1::__compressed_pair.3161" = type { %"struct.std::__1::__compressed_pair_elem.3162" }
%"struct.std::__1::__compressed_pair_elem.3162" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.3163", %"class.absl::optional.821", i8, i8, %"class.WTF::Vector.2010" }
%"class.WTF::HashMap.3163" = type { %"class.WTF::HashTable.3164" }
%"class.WTF::HashTable.3164" = type <{ %"struct.WTF::KeyValuePair.3167"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3167" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.821" = type { %"class.absl::optional_internal::optional_data.822" }
%"class.absl::optional_internal::optional_data.822" = type { %"class.absl::optional_internal::optional_data_base.823" }
%"class.absl::optional_internal::optional_data_base.823" = type { %"class.absl::optional_internal::optional_data_dtor_base.824" }
%"class.absl::optional_internal::optional_data_dtor_base.824" = type { i8, %union.anon.825 }
%union.anon.825 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.826" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.2010" = type { %"class.WTF::VectorBuffer.2011" }
%"class.WTF::VectorBuffer.2011" = type { %"class.WTF::VectorBufferBase.2012" }
%"class.WTF::VectorBufferBase.2012" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3171" }
%"class.blink::Member.3171" = type { %"class.blink::MemberBase.3172" }
%"class.blink::MemberBase.3172" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3171" }
%"class.absl::optional.3173" = type { %"class.absl::optional_internal::optional_data.3174" }
%"class.absl::optional_internal::optional_data.3174" = type { %"class.absl::optional_internal::optional_data_base.3175" }
%"class.absl::optional_internal::optional_data_base.3175" = type { %"class.absl::optional_internal::optional_data_dtor_base.3176" }
%"class.absl::optional_internal::optional_data_dtor_base.3176" = type { i8, %union.anon.3177 }
%union.anon.3177 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.3178" = type { %"class.std::__1::__compressed_pair.3179" }
%"class.std::__1::__compressed_pair.3179" = type { %"struct.std::__1::__compressed_pair_elem.3180" }
%"struct.std::__1::__compressed_pair_elem.3180" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.3181", %"class.WTF::Vector.3181", %"class.WTF::HashMap.3186", %"class.WTF::Vector.3181", i8, [7 x i8] }>
%"class.WTF::HashMap.3186" = type { %"class.WTF::HashTable.3187" }
%"class.WTF::HashTable.3187" = type <{ %"struct.WTF::KeyValuePair.3190"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3190" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.3181" }
%"class.WTF::Vector.3181" = type { %"class.WTF::VectorBuffer.3182" }
%"class.WTF::VectorBuffer.3182" = type { %"class.WTF::VectorBufferBase.3183" }
%"class.WTF::VectorBufferBase.3183" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.3194" = type { %"class.std::__1::__compressed_pair.3195" }
%"class.std::__1::__compressed_pair.3195" = type { %"struct.std::__1::__compressed_pair_elem.3196" }
%"struct.std::__1::__compressed_pair_elem.3196" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.3197", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.3203", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.3209", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.3197" = type { %"class.std::__1::__compressed_pair.3198" }
%"class.std::__1::__compressed_pair.3198" = type { %"struct.std::__1::__compressed_pair_elem.3199" }
%"struct.std::__1::__compressed_pair_elem.3199" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.3203" = type { %"class.std::__1::__compressed_pair.3204" }
%"class.std::__1::__compressed_pair.3204" = type { %"struct.std::__1::__compressed_pair_elem.3205" }
%"struct.std::__1::__compressed_pair_elem.3205" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.3209" = type { %"class.blink::PersistentBase.3210" }
%"class.blink::PersistentBase.3210" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.782, %class.scoped_refptr.817, %class.scoped_refptr.831, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.832, %class.scoped_refptr.872, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.873, %class.scoped_refptr.896 }
%class.scoped_refptr.782 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.799" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.783", i8, i8, %class.scoped_refptr.785, i32, i32 }
%"class.WTF::RefCounted.783" = type { %"class.base::RefCounted.784" }
%"class.base::RefCounted.784" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.785 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.792, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.793", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.786" }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.792 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.818", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.818" = type { %"class.WTF::RefCounted.819", i8, i8, %class.scoped_refptr.792, i32, i32 }
%"class.WTF::RefCounted.819" = type { %"class.base::RefCounted.820" }
%"class.base::RefCounted.820" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.821" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.793" = type { %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.802", %"class.std::__1::unique_ptr.808", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.817 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.831 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.832 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.833" }
%"class.blink::PaintPropertyNode.833" = type { %"class.WTF::RefCounted.834", i8, i8, %class.scoped_refptr.836, i32, i32 }
%"class.WTF::RefCounted.834" = type { %"class.base::RefCounted.835" }
%"class.base::RefCounted.835" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.836 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.785, %class.scoped_refptr.837, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.859", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.837 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.874" }
%"class.blink::PaintPropertyNode.874" = type { %"class.WTF::RefCounted.875", i8, i8, %class.scoped_refptr.837, i32, i32 }
%"class.WTF::RefCounted.875" = type { %"class.base::RefCounted.876" }
%"class.base::RefCounted.876" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.838" }
%"class.std::__1::vector.838" = type { %"class.std::__1::__vector_base.839" }
%"class.std::__1::__vector_base.839" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.854" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.840, [20 x float], i32, [4 x i8], %"class.std::__1::vector.847", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.847" = type { %"class.std::__1::__vector_base.848" }
%"class.std::__1::__vector_base.848" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.849" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.865" }
%"class.std::__1::vector.865" = type { %"class.std::__1::__vector_base.866" }
%"class.std::__1::__vector_base.866" = type { i32*, i32*, %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { i32* }
%class.scoped_refptr.872 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.885" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.785, %"class.absl::optional.877", %class.scoped_refptr.882, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.877" = type { %"class.absl::optional_internal::optional_data.878" }
%"class.absl::optional_internal::optional_data.878" = type { %"class.absl::optional_internal::optional_data_base.879" }
%"class.absl::optional_internal::optional_data_base.879" = type { %"class.absl::optional_internal::optional_data_dtor_base.880" }
%"class.absl::optional_internal::optional_data_dtor_base.880" = type { i8, [3 x i8], %union.anon.881 }
%union.anon.881 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.888", i32, [4 x i8] }>
%"class.WTF::Vector.888" = type { %"class.WTF::VectorBuffer.889" }
%"class.WTF::VectorBuffer.889" = type { %"class.WTF::VectorBufferBase.890" }
%"class.WTF::VectorBufferBase.890" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.896 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.785, %class.scoped_refptr.837, %class.scoped_refptr.836 }
%"class.absl::optional.906" = type { %"class.absl::optional_internal::optional_data.907" }
%"class.absl::optional_internal::optional_data.907" = type { %"class.absl::optional_internal::optional_data_base.908" }
%"class.absl::optional_internal::optional_data_base.908" = type { %"class.absl::optional_internal::optional_data_dtor_base.909" }
%"class.absl::optional_internal::optional_data_dtor_base.909" = type { i8, %union.anon.910 }
%union.anon.910 = type { %"class.blink::IntRect" }
%class.scoped_refptr.882 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.883", [4 x i8] }
%"class.WTF::RefCounted.883" = type { %"class.base::RefCounted.884" }
%"class.base::RefCounted.884" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1810 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.2798", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.2970, %union.anon.2988, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.2798" = type { %"class.base::RefCounted.2799" }
%"class.base::RefCounted.2799" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.2800, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2800 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.2801 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2801 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.2835 }
%class.scoped_refptr.2835 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2836", [4 x i8], %"class.std::__1::unique_ptr.2838", i64, %"class.WTF::Vector.2842", %"class.WTF::Vector.2847", %"class.WTF::Vector.2877", %"class.WTF::Vector.2895", %class.scoped_refptr.1593, %"class.WTF::HashMap.2901", %"class.WTF::Vector.2906", %"class.WTF::Vector.2842", %"class.WTF::Vector.2912", %"class.WTF::HashMap.2917", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2836" = type { %"class.base::RefCountedThreadSafe.2837" }
%"class.base::RefCountedThreadSafe.2837" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2838" = type { %"class.std::__1::__compressed_pair.2839" }
%"class.std::__1::__compressed_pair.2839" = type { %"struct.std::__1::__compressed_pair_elem.2840" }
%"struct.std::__1::__compressed_pair_elem.2840" = type { i8* }
%"class.WTF::Vector.2847" = type { %"class.WTF::VectorBuffer.2848" }
%"class.WTF::VectorBuffer.2848" = type { %"class.WTF::VectorBufferBase.2849", [8 x i8] }
%"class.WTF::VectorBufferBase.2849" = type { %class.scoped_refptr.2850*, i32, i32 }
%class.scoped_refptr.2850 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.2851", i8, %class.scoped_refptr.2853, %"class.blink::WeakPersistent.2867", i32, i8, %"class.std::__1::unique_ptr.2869" }
%"class.WTF::ThreadSafeRefCounted.2851" = type { %"class.base::RefCountedThreadSafe.2852" }
%"class.base::RefCountedThreadSafe.2852" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.2853 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.2854", i64, %"class.WTF::Vector.2856", %"class.WTF::Vector.2861" }
%"class.WTF::RefCounted.2854" = type { %"class.base::RefCounted.2855" }
%"class.base::RefCounted.2855" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2856" = type { %"class.WTF::VectorBuffer.2857" }
%"class.WTF::VectorBuffer.2857" = type { %"class.WTF::VectorBufferBase.2858" }
%"class.WTF::VectorBufferBase.2858" = type { i8*, i32, i32 }
%"class.WTF::Vector.2861" = type { %"class.WTF::VectorBuffer.2862" }
%"class.WTF::VectorBuffer.2862" = type { %"class.WTF::VectorBufferBase.2863" }
%"class.WTF::VectorBufferBase.2863" = type { %"class.std::__1::unique_ptr.2864"*, i32, i32 }
%"class.std::__1::unique_ptr.2864" = type opaque
%"class.blink::WeakPersistent.2867" = type { %"class.blink::PersistentBase.2868" }
%"class.blink::PersistentBase.2868" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.2869" = type { %"class.std::__1::__compressed_pair.2870" }
%"class.std::__1::__compressed_pair.2870" = type { %"struct.std::__1::__compressed_pair_elem.2871" }
%"struct.std::__1::__compressed_pair_elem.2871" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"class.WTF::Vector.2877" = type { %"class.WTF::VectorBuffer.2878" }
%"class.WTF::VectorBuffer.2878" = type { %"class.WTF::VectorBufferBase.2879" }
%"class.WTF::VectorBufferBase.2879" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2881", %"class.std::__1::unique_ptr.2887" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2880 }
%class.scoped_refptr.2880 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2881" = type { %"class.std::__1::__compressed_pair.2882" }
%"class.std::__1::__compressed_pair.2882" = type { %"struct.std::__1::__compressed_pair_elem.2883" }
%"struct.std::__1::__compressed_pair_elem.2883" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2887" = type { %"class.std::__1::__compressed_pair.2888" }
%"class.std::__1::__compressed_pair.2888" = type { %"struct.std::__1::__compressed_pair_elem.2889" }
%"struct.std::__1::__compressed_pair_elem.2889" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2895" = type { %"class.WTF::VectorBuffer.2896" }
%"class.WTF::VectorBuffer.2896" = type { %"class.WTF::VectorBufferBase.2897" }
%"class.WTF::VectorBufferBase.2897" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2898", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2898" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2901" = type { %"class.WTF::HashTable.2902" }
%"class.WTF::HashTable.2902" = type <{ %"struct.WTF::KeyValuePair.2905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2905" = type opaque
%"class.WTF::Vector.2906" = type { %"class.WTF::VectorBuffer.2907" }
%"class.WTF::VectorBuffer.2907" = type { %"class.WTF::VectorBufferBase.2908" }
%"class.WTF::VectorBufferBase.2908" = type { %"class.mojo::ScopedHandleBase.2909"*, i32, i32 }
%"class.mojo::ScopedHandleBase.2909" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.2842" = type { %"class.WTF::VectorBuffer.2843" }
%"class.WTF::VectorBuffer.2843" = type { %"class.WTF::VectorBufferBase.2844", [16 x i8] }
%"class.WTF::VectorBufferBase.2844" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2912" = type { %"class.WTF::VectorBuffer.2913" }
%"class.WTF::VectorBuffer.2913" = type { %"class.WTF::VectorBufferBase.2914" }
%"class.WTF::VectorBufferBase.2914" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.WTF::HashMap.2917" = type { %"class.WTF::HashTable.2918" }
%"class.WTF::HashTable.2918" = type <{ %"struct.WTF::KeyValuePair.2921"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2921" = type { i8**, %"class.std::__1::unique_ptr.3845" }
%"class.std::__1::unique_ptr.3845" = type { %"class.std::__1::__compressed_pair.3846" }
%"class.std::__1::__compressed_pair.3846" = type { %"struct.std::__1::__compressed_pair_elem.3847" }
%"struct.std::__1::__compressed_pair_elem.3847" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.2922" }
%"class.std::__1::unique_ptr.2922" = type { %"class.std::__1::__compressed_pair.2923" }
%"class.std::__1::__compressed_pair.2923" = type { %"struct.std::__1::__compressed_pair_elem.2924" }
%"struct.std::__1::__compressed_pair_elem.2924" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.2925, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.2942" }
%class.scoped_refptr.2925 = type { %"class.base::RefCountedData.2926"* }
%"class.base::RefCountedData.2926" = type { %"class.base::RefCountedThreadSafe.2927", %"class.WTF::Vector.2928" }
%"class.base::RefCountedThreadSafe.2927" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.2928" = type { %"class.WTF::VectorBuffer.2929" }
%"class.WTF::VectorBuffer.2929" = type { %"class.WTF::VectorBufferBase.2930" }
%"class.WTF::VectorBufferBase.2930" = type { %class.scoped_refptr.2931*, i32, i32 }
%class.scoped_refptr.2931 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.2932", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.2934" }
%"class.WTF::RefCounted.2932" = type { %"class.base::RefCounted.2933" }
%"class.base::RefCounted.2933" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.2934" = type { %"class.std::__1::__compressed_pair.2935" }
%"class.std::__1::__compressed_pair.2935" = type { %"struct.std::__1::__compressed_pair_elem.2936" }
%"struct.std::__1::__compressed_pair_elem.2936" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2942" = type { %"class.std::__1::__compressed_pair.2943" }
%"class.std::__1::__compressed_pair.2943" = type { %"struct.std::__1::__compressed_pair_elem.2944" }
%"struct.std::__1::__compressed_pair_elem.2944" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.2945", %"class.WTF::Vector.2958", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.2945" = type { %"class.WTF::VectorBuffer.2946" }
%"class.WTF::VectorBuffer.2946" = type { %"class.WTF::VectorBufferBase.2947", [320 x i8] }
%"class.WTF::VectorBufferBase.2947" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.2948", %"class.WTF::Vector.2948", %class.scoped_refptr.2953, i8, [7 x i8] }>
%"class.WTF::Vector.2948" = type { %"class.WTF::VectorBuffer.2949" }
%"class.WTF::VectorBuffer.2949" = type { %"class.WTF::VectorBufferBase.2950", [8 x i8] }
%"class.WTF::VectorBufferBase.2950" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2953 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.2954", %"class.WTF::Vector.2928", %"class.WTF::Vector.2928" }
%"class.WTF::RefCounted.2954" = type { %"class.base::RefCounted.2955" }
%"class.base::RefCounted.2955" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2958" = type { %"class.WTF::VectorBuffer.2959" }
%"class.WTF::VectorBuffer.2959" = type { %"class.WTF::VectorBufferBase.2960", [288 x i8] }
%"class.WTF::VectorBufferBase.2960" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.2948", %"class.WTF::Vector.2948" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.2961 }
%class.scoped_refptr.2961 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.2970 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.2971", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.2973, %"class.std::__1::unique_ptr.2976" }
%"class.WTF::RefCounted.2971" = type { %"class.base::RefCounted.2972" }
%"class.base::RefCounted.2972" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2973 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.2974", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.2974" = type { %"class.base::RefCounted.2975" }
%"class.base::RefCounted.2975" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2976" = type { %"class.std::__1::__compressed_pair.2977" }
%"class.std::__1::__compressed_pair.2977" = type { %"struct.std::__1::__compressed_pair_elem.2978" }
%"struct.std::__1::__compressed_pair_elem.2978" = type { %"class.WTF::Vector.2979"* }
%"class.WTF::Vector.2979" = type { %"class.WTF::VectorBuffer.2980" }
%"class.WTF::VectorBuffer.2980" = type { %"class.WTF::VectorBufferBase.2981" }
%"class.WTF::VectorBufferBase.2981" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.2982 }
%union.anon.2982 = type { %"class.blink::LineBoxList" }
%union.anon.2988 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.2802", %class.scoped_refptr.2989, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.2990, %"class.blink::NGExclusionSpace", %class.scoped_refptr.2835, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.2991", %"class.absl::optional.3007" }
%"class.absl::optional.2802" = type { %"class.absl::optional_internal::optional_data.2803" }
%"class.absl::optional_internal::optional_data.2803" = type { %"class.absl::optional_internal::optional_data_base.2804" }
%"class.absl::optional_internal::optional_data_base.2804" = type { %"class.absl::optional_internal::optional_data_dtor_base.2805" }
%"class.absl::optional_internal::optional_data_dtor_base.2805" = type { i8, %union.anon.2806 }
%union.anon.2806 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.2989 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.3012", [4 x i8], %union.anon.3014, %class.scoped_refptr.2989, i32, [4 x i8] }>
%"class.WTF::RefCounted.3012" = type { %"class.base::RefCounted.3013" }
%"class.base::RefCounted.3013" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.3014 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.2990 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2991" = type { %"class.std::__1::__compressed_pair.2992" }
%"class.std::__1::__compressed_pair.2992" = type { %"struct.std::__1::__compressed_pair_elem.2993" }
%"struct.std::__1::__compressed_pair_elem.2993" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.2994", %"class.WTF::Vector.2999", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2994" = type { %"class.WTF::VectorBuffer.2995" }
%"class.WTF::VectorBuffer.2995" = type { %"class.WTF::VectorBufferBase.2996" }
%"class.WTF::VectorBufferBase.2996" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2999" = type { %"class.WTF::VectorBuffer.3000" }
%"class.WTF::VectorBuffer.3000" = type { %"class.WTF::VectorBufferBase.3001" }
%"class.WTF::VectorBufferBase.3001" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.3007" = type { %"class.absl::optional_internal::optional_data.3008" }
%"class.absl::optional_internal::optional_data.3008" = type { %"class.absl::optional_internal::optional_data_base.3009" }
%"class.absl::optional_internal::optional_data_base.3009" = type { %"class.absl::optional_internal::optional_data_dtor_base.3010" }
%"class.absl::optional_internal::optional_data_dtor_base.3010" = type { i8, %union.anon.3011 }
%union.anon.3011 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1811" = type { %"class.WTF::VectorBuffer.1812" }
%"class.WTF::VectorBuffer.1812" = type { %"class.WTF::VectorBufferBase.1813", [8 x i8] }
%"class.WTF::VectorBufferBase.1813" = type { %class.scoped_refptr.1810*, i32, i32 }
%"class.std::__1::unique_ptr.1816" = type { %"class.std::__1::__compressed_pair.1817" }
%"class.std::__1::__compressed_pair.1817" = type { %"struct.std::__1::__compressed_pair_elem.1818" }
%"struct.std::__1::__compressed_pair_elem.1818" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1819", %"class.absl::optional.1824", %"class.absl::optional.1829" }
%"class.absl::optional.1819" = type { %"class.absl::optional_internal::optional_data.1820" }
%"class.absl::optional_internal::optional_data.1820" = type { %"class.absl::optional_internal::optional_data_base.1821" }
%"class.absl::optional_internal::optional_data_base.1821" = type { %"class.absl::optional_internal::optional_data_dtor_base.1822" }
%"class.absl::optional_internal::optional_data_dtor_base.1822" = type { i8, %union.anon.1823 }
%union.anon.1823 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1824" = type { %"class.absl::optional_internal::optional_data.1825" }
%"class.absl::optional_internal::optional_data.1825" = type { %"class.absl::optional_internal::optional_data_base.1826" }
%"class.absl::optional_internal::optional_data_base.1826" = type { %"class.absl::optional_internal::optional_data_dtor_base.1827" }
%"class.absl::optional_internal::optional_data_dtor_base.1827" = type { i8, [3 x i8], %union.anon.1828 }
%union.anon.1828 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1829" = type { %"class.absl::optional_internal::optional_data.1830" }
%"class.absl::optional_internal::optional_data.1830" = type { %"class.absl::optional_internal::optional_data_base.1831" }
%"class.absl::optional_internal::optional_data_base.1831" = type { %"class.absl::optional_internal::optional_data_dtor_base.1832" }
%"class.absl::optional_internal::optional_data_dtor_base.1832" = type { i8, %union.anon.1833 }
%union.anon.1833 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1837 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1794", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1794" = type { %"class.std::__1::__compressed_pair.1795" }
%"class.std::__1::__compressed_pair.1795" = type { %"struct.std::__1::__compressed_pair_elem.1796" }
%"struct.std::__1::__compressed_pair_elem.1796" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1797", %"class.absl::optional.1802" }
%"class.absl::optional.1797" = type { %"class.absl::optional_internal::optional_data.1798" }
%"class.absl::optional_internal::optional_data.1798" = type { %"class.absl::optional_internal::optional_data_base.1799" }
%"class.absl::optional_internal::optional_data_base.1799" = type { %"class.absl::optional_internal::optional_data_dtor_base.1800" }
%"class.absl::optional_internal::optional_data_dtor_base.1800" = type { i8, %union.anon.1801 }
%union.anon.1801 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1802" = type { %"class.absl::optional_internal::optional_data.1803" }
%"class.absl::optional_internal::optional_data.1803" = type { %"class.absl::optional_internal::optional_data_base.1804" }
%"class.absl::optional_internal::optional_data_base.1804" = type { %"class.absl::optional_internal::optional_data_dtor_base.1805" }
%"class.absl::optional_internal::optional_data_dtor_base.1805" = type { i8, %union.anon.1806 }
%union.anon.1806 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1838" = type { %"class.blink::PersistentBase.1839" }
%"class.blink::PersistentBase.1839" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1842", %"struct.blink::PhysicalRect", %"class.blink::Member.1852" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1842" = type { %"class.std::__1::__compressed_pair.1843" }
%"class.std::__1::__compressed_pair.1843" = type { %"struct.std::__1::__compressed_pair_elem.1844" }
%"struct.std::__1::__compressed_pair_elem.1844" = type { %"class.WTF::HashSet.1845"* }
%"class.WTF::HashSet.1845" = type { %"class.WTF::HashTable.1846" }
%"class.WTF::HashTable.1846" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1852" = type { %"class.blink::MemberBase.1853" }
%"class.blink::MemberBase.1853" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1854" = type { %"class.blink::PersistentBase.1855" }
%"class.blink::PersistentBase.1855" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1858", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1858" = type { %"class.std::__1::__compressed_pair.1859" }
%"class.std::__1::__compressed_pair.1859" = type { %"struct.std::__1::__compressed_pair_elem.1860" }
%"struct.std::__1::__compressed_pair_elem.1860" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.2788", %"class.WTF::HashMap.2793", %"class.WTF::String" }
%"class.WTF::Vector.2788" = type { %"class.WTF::VectorBuffer.2789" }
%"class.WTF::VectorBuffer.2789" = type { %"class.WTF::VectorBufferBase.2790" }
%"class.WTF::VectorBufferBase.2790" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.2793" = type { %"class.WTF::HashTable.2794" }
%"class.WTF::HashTable.2794" = type <{ %"struct.WTF::KeyValuePair.2797"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2797" = type opaque
%"class.std::__1::unique_ptr.1864" = type { %"class.std::__1::__compressed_pair.1865" }
%"class.std::__1::__compressed_pair.1865" = type { %"struct.std::__1::__compressed_pair_elem.1866" }
%"struct.std::__1::__compressed_pair_elem.1866" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1867", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1867" = type { %"class.WTF::HashTable.1870", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1870" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1873", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1873" = type { %"class.std::__1::__compressed_pair.1874" }
%"class.std::__1::__compressed_pair.1874" = type { %"struct.std::__1::__compressed_pair_elem.1875" }
%"struct.std::__1::__compressed_pair_elem.1875" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1876, %"class.std::__1::unique_ptr.1877", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1794", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1876 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2786", i16, %class.scoped_refptr.1876 }
%"class.WTF::ThreadSafeRefCounted.2786" = type { %"class.base::RefCountedThreadSafe.2787" }
%"class.base::RefCountedThreadSafe.2787" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1877" = type { %"class.std::__1::__compressed_pair.1878" }
%"class.std::__1::__compressed_pair.1878" = type { %"struct.std::__1::__compressed_pair_elem.1879" }
%"struct.std::__1::__compressed_pair_elem.1879" = type { %"class.WTF::Vector.1880"* }
%"class.WTF::Vector.1880" = type { %"class.WTF::VectorBuffer.1881" }
%"class.WTF::VectorBuffer.1881" = type { %"class.WTF::VectorBufferBase.1882" }
%"class.WTF::VectorBufferBase.1882" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1891, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1895" = type { %"class.blink::MemberBase.1896" }
%"class.blink::MemberBase.1896" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1899", %"class.blink::Member.1904", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1906", i8, i32, %"class.blink::Color", %"class.absl::optional.1909", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1914", %"class.blink::Member.1916", %"class.blink::Member.1916", %"class.std::__1::unique_ptr.1919", i32, [4 x i8], %"class.WTF::HashSet.1922", %"class.blink::Member.1929", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1931", %"class.blink::HeapHashSet.1938", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1946", i8, %"class.blink::Member.1952", i8, i8, i32, %"class.blink::HeapLinkedHashSet.1954", %"class.blink::HeapLinkedHashSet.1968", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1982", i8, %"class.std::__1::unique_ptr.1988", %"class.std::__1::unique_ptr.2069", %"class.WTF::Vector.2075", i32, %class.scoped_refptr.2080, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2090", %"class.blink::Member.2092", %"class.blink::Member.2094", %"class.blink::HeapHashSet.2096", %"class.blink::HeapHashSet.2103", %"class.std::__1::unique_ptr.2110", %"class.std::__1::unique_ptr.2117", %"class.WTF::Vector.929" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1899" = type { %"class.WTF::HashTable.1900" }
%"class.WTF::HashTable.1900" = type <{ %class.scoped_refptr.1903*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1903 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1904" = type { %"class.blink::MemberBase.1905" }
%"class.blink::MemberBase.1905" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2346", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2354", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2368", %"class.blink::FrameLoader", %"class.blink::Member.2389", %"class.blink::Member.343", %"class.blink::Member.2390", %"class.blink::Member.2392", %"class.blink::Member.2408", %"class.blink::Member.2410", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2412", %class.scoped_refptr.2636, %"class.blink::Member.2637", %"class.blink::Member.2639", %"class.blink::Member.2641", %"class.blink::Member.2643", %"class.blink::Member.2645", %"class.blink::Member.2649", %"class.blink::Member.2651", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2655", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2661", %"class.std::__1::unique_ptr.2662", %"class.absl::optional.2334", i32, [4 x i8], %"class.std::__1::unique_ptr.2668", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2676", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2681", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2686", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2689", %"class.blink::Member.2691", %"class.blink::Member.2693", %"class.blink::Member.2695", %"class.mojo::StructPtr.2698", %"class.blink::Member.2707", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2709", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2179", %"class.blink::Member.2181", %"class.blink::Member.2183", i8, i32, i8, i32, %"class.blink::Member.2316", %"class.blink::Member.2206", %"class.blink::FrameLifecycle", %"class.blink::Member.2177", %"class.blink::Member.2177", %"class.blink::Member.2177", %"class.blink::Member.2177", %"class.blink::Member.2177", %"class.blink::Member.2177", %"class.blink::Member.1904", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2327", i8, %"class.base::UnguessableToken", %"class.absl::optional.2329", %"class.absl::optional.2334", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2177", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2179" = type { %"class.blink::MemberBase.2180" }
%"class.blink::MemberBase.2180" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.3024", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2177", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.3050", %"class.blink::Member.3054", %"class.blink::Member.3056", %"class.blink::Member.3058", %"class.blink::Member.3060", %"class.blink::Member.3062", %"class.blink::Member.3064", %"class.blink::Member.3066", %"class.blink::HeapObserverSet.3068", %"class.blink::Member.3076", %"class.blink::Member.3078", %"class.blink::Member.3080", %"class.blink::Member.3082", %"class.blink::Member.3084", %"class.blink::Member.3086", %"class.blink::Member.3088", %"class.blink::Member.3090", %"class.blink::Member.3092", %"class.blink::Member.3094", %"class.blink::Member.3096", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.3121", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.3128", %"class.blink::Member.2179", %"class.blink::Member.2179", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.3136", %"class.std::__1::unique_ptr.3142", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.3024" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.3025" }
%"class.blink::HeapHashMap.3025" = type { %"class.WTF::HashMap.3028" }
%"class.WTF::HashMap.3028" = type { %"class.WTF::HashTable.3029" }
%"class.WTF::HashTable.3029" = type <{ %"struct.WTF::KeyValuePair.3031"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3031" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.3032" }
%"class.std::__1::unique_ptr.3032" = type { %"class.std::__1::__compressed_pair.3033" }
%"class.std::__1::__compressed_pair.3033" = type { %"struct.std::__1::__compressed_pair_elem.3034" }
%"struct.std::__1::__compressed_pair_elem.3034" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.3035", %"class.WTF::HashMap.3035", %"class.WTF::HashMap.3035", %"class.WTF::HashMap.3035", %"class.WTF::HashMap.3035", %"class.WTF::HashMap.3035", %"class.WTF::HashMap.3035", %"class.std::__1::unique_ptr.3040" }
%"class.WTF::HashMap.3035" = type { %"class.WTF::HashTable.3036" }
%"class.WTF::HashTable.3036" = type <{ %"struct.WTF::KeyValuePair.3039"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3039" = type opaque
%"class.std::__1::unique_ptr.3040" = type { %"class.std::__1::__compressed_pair.3041" }
%"class.std::__1::__compressed_pair.3041" = type { %"struct.std::__1::__compressed_pair_elem.3042" }
%"struct.std::__1::__compressed_pair_elem.3042" = type { %"class.WTF::Vector.3043"* }
%"class.WTF::Vector.3043" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.3050" = type { %"class.blink::MemberBase.3051" }
%"class.blink::MemberBase.3051" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2179", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.3054" = type { %"class.blink::MemberBase.3055" }
%"class.blink::MemberBase.3055" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.3056" = type { %"class.blink::MemberBase.3057" }
%"class.blink::MemberBase.3057" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.3058" = type { %"class.blink::MemberBase.3059" }
%"class.blink::MemberBase.3059" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.3060" = type { %"class.blink::MemberBase.3061" }
%"class.blink::MemberBase.3061" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.3062" = type { %"class.blink::MemberBase.3063" }
%"class.blink::MemberBase.3063" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.3064" = type { %"class.blink::MemberBase.3065" }
%"class.blink::MemberBase.3065" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.3066" = type { %"class.blink::MemberBase.3067" }
%"class.blink::MemberBase.3067" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.3068" = type { i32, [4 x i8], %"class.blink::HeapHashSet.3069" }
%"class.blink::HeapHashSet.3069" = type { %"class.WTF::HashSet.3072" }
%"class.WTF::HashSet.3072" = type { %"class.WTF::HashTable.3073" }
%"class.WTF::HashTable.3073" = type <{ %"class.blink::WeakMember.3075"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3075" = type opaque
%"class.blink::Member.3076" = type { %"class.blink::MemberBase.3077" }
%"class.blink::MemberBase.3077" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.3078" = type { %"class.blink::MemberBase.3079" }
%"class.blink::MemberBase.3079" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.3080" = type { %"class.blink::MemberBase.3081" }
%"class.blink::MemberBase.3081" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.3082" = type { %"class.blink::MemberBase.3083" }
%"class.blink::MemberBase.3083" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.3084" = type { %"class.blink::MemberBase.3085" }
%"class.blink::MemberBase.3085" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.3086" = type { %"class.blink::MemberBase.3087" }
%"class.blink::MemberBase.3087" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.3088" = type { %"class.blink::MemberBase.3089" }
%"class.blink::MemberBase.3089" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.3090" = type { %"class.blink::MemberBase.3091" }
%"class.blink::MemberBase.3091" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.3092" = type { %"class.blink::MemberBase.3093" }
%"class.blink::MemberBase.3093" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.3094" = type { %"class.blink::MemberBase.3095" }
%"class.blink::MemberBase.3095" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.3096" = type { %"class.blink::MemberBase.3097" }
%"class.blink::MemberBase.3097" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.3098" }
%"class.WTF::Deque.3098" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.3101" }
%"class.WTF::VectorBuffer.3101" = type { %"class.WTF::VectorBufferBase.3102" }
%"class.WTF::VectorBufferBase.3102" = type { %"class.std::__1::unique_ptr.3103"*, i32, i32 }
%"class.std::__1::unique_ptr.3103" = type { %"class.std::__1::__compressed_pair.3104" }
%"class.std::__1::__compressed_pair.3104" = type { %"struct.std::__1::__compressed_pair_elem.3105" }
%"struct.std::__1::__compressed_pair_elem.3105" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.3109", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.3109" = type { %"class.std::__1::__bitset.3110" }
%"class.std::__1::__bitset.3110" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.3111" }
%"class.absl::optional.3111" = type { %"class.absl::optional_internal::optional_data.3112" }
%"class.absl::optional_internal::optional_data.3112" = type { %"class.absl::optional_internal::optional_data_base.3113" }
%"class.absl::optional_internal::optional_data_base.3113" = type { %"class.absl::optional_internal::optional_data_dtor_base.3114" }
%"class.absl::optional_internal::optional_data_dtor_base.3114" = type { i8, %union.anon.3115 }
%union.anon.3115 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.3116", i64, %"class.absl::optional.1706", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.3116" = type { %"class.absl::optional_internal::optional_data.3117" }
%"class.absl::optional_internal::optional_data.3117" = type { %"class.absl::optional_internal::optional_data_base.3118" }
%"class.absl::optional_internal::optional_data_base.3118" = type { %"class.absl::optional_internal::optional_data_dtor_base.3119" }
%"class.absl::optional_internal::optional_data_dtor_base.3119" = type { i8, %union.anon.3120 }
%union.anon.3120 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.3121" = type { %"class.std::__1::unique_ptr.3122" }
%"class.std::__1::unique_ptr.3122" = type { %"class.std::__1::__compressed_pair.3123" }
%"class.std::__1::__compressed_pair.3123" = type { %"struct.std::__1::__compressed_pair_elem.3124" }
%"struct.std::__1::__compressed_pair_elem.3124" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.3128" = type { %"class.WTF::HashSet.3131" }
%"class.WTF::HashSet.3131" = type { %"class.WTF::HashTable.3132" }
%"class.WTF::HashTable.3132" = type <{ %"class.blink::WeakMember.3134"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3134" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.3135" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.3135" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.3136" = type { %"class.std::__1::__compressed_pair.3137" }
%"class.std::__1::__compressed_pair.3137" = type { %"struct.std::__1::__compressed_pair_elem.3138" }
%"struct.std::__1::__compressed_pair_elem.3138" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3142" = type { %"class.std::__1::__compressed_pair.3143" }
%"class.std::__1::__compressed_pair.3143" = type { %"struct.std::__1::__compressed_pair_elem.3144" }
%"struct.std::__1::__compressed_pair_elem.3144" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.2181" = type { %"class.blink::MemberBase.2182" }
%"class.blink::MemberBase.2182" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2183" = type { %"class.blink::MemberBase.2184" }
%"class.blink::MemberBase.2184" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2177", %"class.blink::Member.2206", %"class.blink::Member.2208", %"class.blink::Member.2210", i8, %"class.WTF::Vector.2212" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2199" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2187" }
%"class.blink::HeapVector.2187" = type { %"class.WTF::Vector.2190" }
%"class.WTF::Vector.2190" = type { %"class.WTF::VectorBuffer.2191" }
%"class.WTF::VectorBuffer.2191" = type { %"class.WTF::VectorBufferBase.2192", [32 x i8] }
%"class.WTF::VectorBufferBase.2192" = type { %"struct.std::__1::pair.2193"*, i32, i32 }
%"struct.std::__1::pair.2193" = type { %"class.WTF::AtomicString", %"class.blink::Member.2194" }
%"class.blink::Member.2194" = type { %"class.blink::MemberBase.2195" }
%"class.blink::MemberBase.2195" = type { %"class.blink::HeapVector.2196"* }
%"class.blink::HeapVector.2196" = type opaque
%"class.std::__1::unique_ptr.2199" = type { %"class.std::__1::__compressed_pair.2200" }
%"class.std::__1::__compressed_pair.2200" = type { %"struct.std::__1::__compressed_pair_elem.2201" }
%"struct.std::__1::__compressed_pair_elem.2201" = type { %"class.WTF::Vector.2202"* }
%"class.WTF::Vector.2202" = type opaque
%"class.blink::Member.2208" = type { %"class.blink::MemberBase.2209" }
%"class.blink::MemberBase.2209" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2210" = type { %"class.blink::MemberBase.2211" }
%"class.blink::MemberBase.2211" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2212" = type { %"class.WTF::VectorBuffer.2213" }
%"class.WTF::VectorBuffer.2213" = type { %"class.WTF::VectorBufferBase.2214" }
%"class.WTF::VectorBufferBase.2214" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2308" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2215, %"class.std::__1::unique_ptr.1702", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1716, i32 }>
%class.scoped_refptr.2215 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1716, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2274", %"class.absl::optional.2279", %"class.absl::optional.2232", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2299", i8, [7 x i8], %class.scoped_refptr.1716, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1729" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1716, %"class.std::__1::unique_ptr.2216", %"class.absl::optional.2226", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2232", %"class.std::__1::unique_ptr.2237", i8, i64, %class.scoped_refptr.2271, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2272", %"class.base::WeakPtrFactory.2273" }
%"class.std::__1::unique_ptr.2216" = type { %"class.std::__1::__compressed_pair.2217" }
%"class.std::__1::__compressed_pair.2217" = type { %"struct.std::__1::__compressed_pair_elem.2218" }
%"struct.std::__1::__compressed_pair_elem.2218" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1716, i8, %"class.mojo::ScopedHandleBase.2219", %class.scoped_refptr.2220, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2221", i8*, %"class.base::WeakPtrFactory.2222" }
%"class.mojo::ScopedHandleBase.2219" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2220 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.2221" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2222" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2226" = type { %"class.absl::optional_internal::optional_data.2227" }
%"class.absl::optional_internal::optional_data.2227" = type { %"class.absl::optional_internal::optional_data_base.2228" }
%"class.absl::optional_internal::optional_data_base.2228" = type { %"class.absl::optional_internal::optional_data_dtor_base.2229" }
%"class.absl::optional_internal::optional_data_dtor_base.2229" = type { i8, %union.anon.2230 }
%union.anon.2230 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2231", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2231" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2237" = type { %"class.std::__1::__compressed_pair.2238" }
%"class.std::__1::__compressed_pair.2238" = type { %"struct.std::__1::__compressed_pair_elem.2239" }
%"struct.std::__1::__compressed_pair_elem.2239" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2240", i8, i64, %class.scoped_refptr.2241, %class.scoped_refptr.2266 }
%"class.base::RepeatingCallback.2240" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2241 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2242", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2244", %"class.std::__1::map.2255", i8, [7 x i8] }>
%"class.base::RefCounted.2242" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2243 }
%class.scoped_refptr.2243 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2244" = type { %"class.std::__1::__tree.2245" }
%"class.std::__1::__tree.2245" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2246", %"class.std::__1::__compressed_pair.2250" }
%"class.std::__1::__compressed_pair.2246" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"class.std::__1::__compressed_pair.2250" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2255" = type { %"class.std::__1::__tree.2256" }
%"class.std::__1::__tree.2256" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2257", %"class.std::__1::__compressed_pair.2261" }
%"class.std::__1::__compressed_pair.2257" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"class.std::__1::__compressed_pair.2261" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2266 = type { %"class.base::RefCountedData.2267"* }
%"class.base::RefCountedData.2267" = type opaque
%class.scoped_refptr.2271 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2272" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2273" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2274" = type { %"class.absl::optional_internal::optional_data.2275" }
%"class.absl::optional_internal::optional_data.2275" = type { %"class.absl::optional_internal::optional_data_base.2276" }
%"class.absl::optional_internal::optional_data_base.2276" = type { %"class.absl::optional_internal::optional_data_dtor_base.2277" }
%"class.absl::optional_internal::optional_data_dtor_base.2277" = type { i8, %union.anon.2278 }
%union.anon.2278 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2279" = type { %"class.absl::optional_internal::optional_data.2280" }
%"class.absl::optional_internal::optional_data.2280" = type { %"class.absl::optional_internal::optional_data_base.2281" }
%"class.absl::optional_internal::optional_data_base.2281" = type { %"class.absl::optional_internal::optional_data_dtor_base.2282" }
%"class.absl::optional_internal::optional_data_dtor_base.2282" = type { i8, [7 x i8], %union.anon.2283 }
%union.anon.2283 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2232" = type { %"class.absl::optional_internal::optional_data.2233" }
%"class.absl::optional_internal::optional_data.2233" = type { %"class.absl::optional_internal::optional_data_base.2234" }
%"class.absl::optional_internal::optional_data_base.2234" = type { %"class.absl::optional_internal::optional_data_dtor_base.2235" }
%"class.absl::optional_internal::optional_data_dtor_base.2235" = type { i8, %union.anon.2236 }
%union.anon.2236 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2284 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2284 = type { %"class.std::__1::map.2287" }
%"class.std::__1::map.2287" = type { %"class.std::__1::__tree.2288" }
%"class.std::__1::__tree.2288" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2289", %"class.std::__1::__compressed_pair.2293" }
%"class.std::__1::__compressed_pair.2289" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"class.std::__1::__compressed_pair.2293" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2298"*, i64 }
%"class.std::__1::unique_ptr.2298" = type opaque
%"class.std::__1::map.2299" = type { %"class.std::__1::__tree.2300" }
%"class.std::__1::__tree.2300" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2301", %"class.std::__1::__compressed_pair.2305" }
%"class.std::__1::__compressed_pair.2301" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"class.std::__1::__compressed_pair.2305" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::unique_ptr.2308" = type { %"class.std::__1::__compressed_pair.2309" }
%"class.std::__1::__compressed_pair.2309" = type { %"struct.std::__1::__compressed_pair_elem.2310" }
%"struct.std::__1::__compressed_pair_elem.2310" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2316" = type { %"class.blink::MemberBase.2317" }
%"class.blink::MemberBase.2317" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2206" = type { %"class.blink::MemberBase.2207" }
%"class.blink::MemberBase.2207" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2177" = type { %"class.blink::MemberBase.2178" }
%"class.blink::MemberBase.2178" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2177", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2318" }
%"class.base::internal::flat_tree.2318" = type { %"class.std::__1::vector.2319" }
%"class.std::__1::vector.2319" = type { %"class.std::__1::__vector_base.2320" }
%"class.std::__1::__vector_base.2320" = type { %"struct.std::__1::pair.2321"*, %"struct.std::__1::pair.2321"*, %"class.std::__1::__compressed_pair.2322" }
%"struct.std::__1::pair.2321" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2322" = type { %"struct.std::__1::__compressed_pair_elem.2323" }
%"struct.std::__1::__compressed_pair_elem.2323" = type { %"struct.std::__1::pair.2321"* }
%"class.blink::Member.2327" = type { %"class.blink::MemberBase.2328" }
%"class.blink::MemberBase.2328" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2329" = type { %"class.absl::optional_internal::optional_data.2330" }
%"class.absl::optional_internal::optional_data.2330" = type { %"class.absl::optional_internal::optional_data_base.2331" }
%"class.absl::optional_internal::optional_data_base.2331" = type { %"class.absl::optional_internal::optional_data_dtor_base.2332" }
%"class.absl::optional_internal::optional_data_dtor_base.2332" = type { i8, %union.anon.2333 }
%union.anon.2333 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2339" }
%"class.blink::HeapHashSet.2339" = type { %"class.WTF::HashSet.2342" }
%"class.WTF::HashSet.2342" = type { %"class.WTF::HashTable.2343" }
%"class.WTF::HashTable.2343" = type <{ %"class.blink::WeakMember.2345"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2345" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2346" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2347" }
%"class.blink::HeapHashMap.2347" = type { %"class.WTF::HashMap.2350" }
%"class.WTF::HashMap.2350" = type { %"class.WTF::HashTable.2351" }
%"class.WTF::HashTable.2351" = type <{ %"struct.WTF::KeyValuePair.2353"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2353" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2354" = type { %"class.std::__1::__compressed_pair.2355" }
%"class.std::__1::__compressed_pair.2355" = type { %"struct.std::__1::__compressed_pair_elem.2356" }
%"struct.std::__1::__compressed_pair_elem.2356" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2357", %"class.base::WeakPtrFactory.2362" }
%"class.WTF::HashMap.2357" = type { %"class.WTF::HashTable.2358" }
%"class.WTF::HashTable.2358" = type <{ %"struct.WTF::KeyValuePair.2361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2361" = type opaque
%"class.base::WeakPtrFactory.2362" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2366" }
%"class.blink::Member.2366" = type { %"class.blink::MemberBase.2367" }
%"class.blink::MemberBase.2367" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3380" }
%"class.blink::WeakMember.3380" = type { %"class.blink::MemberBase.3381" }
%"class.blink::MemberBase.3381" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3853", i64, %"class.std::__1::map.3854", i8*, i64, %"class.base::WeakPtrFactory.3863" }
%"class.base::RepeatingCallback.3853" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3854" = type { %"class.std::__1::__tree.3855" }
%"class.std::__1::__tree.3855" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3856", %"class.std::__1::__compressed_pair.3860" }
%"class.std::__1::__compressed_pair.3856" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"class.std::__1::__compressed_pair.3860" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3863" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2368" = type { %"class.WTF::HashSet.2371" }
%"class.WTF::HashSet.2371" = type { %"class.WTF::HashTable.2372" }
%"class.WTF::HashTable.2372" = type <{ %"class.blink::WeakMember.2374"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2374" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1904", %"class.blink::Member.2375", %"class.blink::Member.2377", %"class.std::__1::unique_ptr.2379", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2385" }
%"class.blink::Member.2375" = type { %"class.blink::MemberBase.2376" }
%"class.blink::MemberBase.2376" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type { %"class.blink::Member.1904", double, double, i8, i8, double, i64, i64, %"class.WTF::HashMap.3017" }
%"class.WTF::HashMap.3017" = type { %"class.WTF::HashTable.3018" }
%"class.WTF::HashTable.3018" = type <{ %"struct.WTF::KeyValuePair.3021"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3021" = type opaque
%"class.blink::Member.2377" = type { %"class.blink::MemberBase.2378" }
%"class.blink::MemberBase.2378" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2379" = type { %"class.std::__1::__compressed_pair.2380" }
%"class.std::__1::__compressed_pair.2380" = type { %"struct.std::__1::__compressed_pair_elem.2381" }
%"struct.std::__1::__compressed_pair_elem.2381" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2385" = type { %"class.WTF::HashTable.2386" }
%"class.WTF::HashTable.2386" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2389" = type { %"class.blink::MemberBase.1908" }
%"class.blink::MemberBase.1908" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2390" = type { %"class.blink::MemberBase.2391" }
%"class.blink::MemberBase.2391" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2392" = type { %"class.blink::MemberBase.2393" }
%"class.blink::MemberBase.2393" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1904", %"class.blink::Member.2396", %"class.blink::Member.2398", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2400", %"class.blink::Member.2406" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.989" }
%"class.blink::WeakMember.989" = type { %"class.blink::MemberBase.327" }
%"class.blink::Member.2396" = type { %"class.blink::MemberBase.2397" }
%"class.blink::MemberBase.2397" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2398" = type { %"class.blink::MemberBase.2399" }
%"class.blink::MemberBase.2399" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2400" = type { %"class.std::__1::__compressed_pair.2401" }
%"class.std::__1::__compressed_pair.2401" = type { %"struct.std::__1::__compressed_pair_elem.2402" }
%"struct.std::__1::__compressed_pair_elem.2402" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2406" = type { %"class.blink::MemberBase.2407" }
%"class.blink::MemberBase.2407" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2408" = type { %"class.blink::MemberBase.2409" }
%"class.blink::MemberBase.2409" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2410" = type { %"class.blink::MemberBase.2411" }
%"class.blink::MemberBase.2411" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2412" = type { %"class.blink::MemberBase.2413" }
%"class.blink::MemberBase.2413" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2416", %"class.blink::HeapListHashSet.2427", %"class.blink::HeapListHashSet.2438", %"class.blink::HeapListHashSet.2449", %"class.blink::HeapListHashSet.2460", %"class.blink::HeapListHashSet.2471", %"class.blink::HeapListHashSet.2482", %"class.blink::HeapListHashSet.2493", %"class.blink::HeapListHashSet.2504", %"class.blink::HeapListHashSet.2515", %"class.blink::HeapListHashSet.2526", %"class.blink::HeapListHashSet.2537", %"class.blink::HeapListHashSet.2548", %"class.blink::HeapListHashSet.2559", %"class.blink::HeapListHashSet.2570", %"class.blink::HeapListHashSet.2581", %"class.blink::HeapListHashSet.2592", %"class.blink::HeapListHashSet.2603", %"class.blink::HeapListHashSet.2614", %"class.blink::HeapListHashSet.2625" }
%"class.blink::HeapListHashSet.2416" = type { %"class.WTF::ListHashSet.base.2426", [7 x i8] }
%"class.WTF::ListHashSet.base.2426" = type <{ %"class.WTF::HashTable.2421", %"class.blink::Member.2423", %"class.blink::Member.2423", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2421" = type <{ %"class.blink::Member.2423"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2423" = type { %"class.blink::MemberBase.2424" }
%"class.blink::MemberBase.2424" = type { %"class.blink::HeapListHashSetNode.2425"* }
%"class.blink::HeapListHashSetNode.2425" = type { %"class.blink::Member.2639", %"class.blink::Member.2423", %"class.blink::Member.2423" }
%"class.blink::HeapListHashSet.2427" = type { %"class.WTF::ListHashSet.base.2437", [7 x i8] }
%"class.WTF::ListHashSet.base.2437" = type <{ %"class.WTF::HashTable.2432", %"class.blink::Member.2434", %"class.blink::Member.2434", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2432" = type <{ %"class.blink::Member.2434"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2434" = type { %"class.blink::MemberBase.2435" }
%"class.blink::MemberBase.2435" = type { %"class.blink::HeapListHashSetNode.2436"* }
%"class.blink::HeapListHashSetNode.2436" = type { %"class.blink::Member.2782", %"class.blink::Member.2434", %"class.blink::Member.2434" }
%"class.blink::Member.2782" = type { %"class.blink::MemberBase.2783" }
%"class.blink::MemberBase.2783" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2438" = type { %"class.WTF::ListHashSet.base.2448", [7 x i8] }
%"class.WTF::ListHashSet.base.2448" = type <{ %"class.WTF::HashTable.2443", %"class.blink::Member.2445", %"class.blink::Member.2445", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2443" = type <{ %"class.blink::Member.2445"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2445" = type { %"class.blink::MemberBase.2446" }
%"class.blink::MemberBase.2446" = type { %"class.blink::HeapListHashSetNode.2447"* }
%"class.blink::HeapListHashSetNode.2447" = type { %"class.blink::Member.2778", %"class.blink::Member.2445", %"class.blink::Member.2445" }
%"class.blink::Member.2778" = type { %"class.blink::MemberBase.2779" }
%"class.blink::MemberBase.2779" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2449" = type { %"class.WTF::ListHashSet.base.2459", [7 x i8] }
%"class.WTF::ListHashSet.base.2459" = type <{ %"class.WTF::HashTable.2454", %"class.blink::Member.2456", %"class.blink::Member.2456", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2454" = type <{ %"class.blink::Member.2456"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2456" = type { %"class.blink::MemberBase.2457" }
%"class.blink::MemberBase.2457" = type { %"class.blink::HeapListHashSetNode.2458"* }
%"class.blink::HeapListHashSetNode.2458" = type { %"class.blink::Member.2774", %"class.blink::Member.2456", %"class.blink::Member.2456" }
%"class.blink::Member.2774" = type { %"class.blink::MemberBase.2775" }
%"class.blink::MemberBase.2775" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2460" = type { %"class.WTF::ListHashSet.base.2470", [7 x i8] }
%"class.WTF::ListHashSet.base.2470" = type <{ %"class.WTF::HashTable.2465", %"class.blink::Member.2467", %"class.blink::Member.2467", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2465" = type <{ %"class.blink::Member.2467"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2467" = type { %"class.blink::MemberBase.2468" }
%"class.blink::MemberBase.2468" = type { %"class.blink::HeapListHashSetNode.2469"* }
%"class.blink::HeapListHashSetNode.2469" = type { %"class.blink::Member.2770", %"class.blink::Member.2467", %"class.blink::Member.2467" }
%"class.blink::Member.2770" = type { %"class.blink::MemberBase.2771" }
%"class.blink::MemberBase.2771" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2471" = type { %"class.WTF::ListHashSet.base.2481", [7 x i8] }
%"class.WTF::ListHashSet.base.2481" = type <{ %"class.WTF::HashTable.2476", %"class.blink::Member.2478", %"class.blink::Member.2478", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2476" = type <{ %"class.blink::Member.2478"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2478" = type { %"class.blink::MemberBase.2479" }
%"class.blink::MemberBase.2479" = type { %"class.blink::HeapListHashSetNode.2480"* }
%"class.blink::HeapListHashSetNode.2480" = type { %"class.blink::Member.2766", %"class.blink::Member.2478", %"class.blink::Member.2478" }
%"class.blink::Member.2766" = type { %"class.blink::MemberBase.2767" }
%"class.blink::MemberBase.2767" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2482" = type { %"class.WTF::ListHashSet.base.2492", [7 x i8] }
%"class.WTF::ListHashSet.base.2492" = type <{ %"class.WTF::HashTable.2487", %"class.blink::Member.2489", %"class.blink::Member.2489", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2487" = type <{ %"class.blink::Member.2489"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2489" = type { %"class.blink::MemberBase.2490" }
%"class.blink::MemberBase.2490" = type { %"class.blink::HeapListHashSetNode.2491"* }
%"class.blink::HeapListHashSetNode.2491" = type { %"class.blink::Member.2762", %"class.blink::Member.2489", %"class.blink::Member.2489" }
%"class.blink::Member.2762" = type { %"class.blink::MemberBase.2763" }
%"class.blink::MemberBase.2763" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2493" = type { %"class.WTF::ListHashSet.base.2503", [7 x i8] }
%"class.WTF::ListHashSet.base.2503" = type <{ %"class.WTF::HashTable.2498", %"class.blink::Member.2500", %"class.blink::Member.2500", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2498" = type <{ %"class.blink::Member.2500"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2500" = type { %"class.blink::MemberBase.2501" }
%"class.blink::MemberBase.2501" = type { %"class.blink::HeapListHashSetNode.2502"* }
%"class.blink::HeapListHashSetNode.2502" = type { %"class.blink::Member.2758", %"class.blink::Member.2500", %"class.blink::Member.2500" }
%"class.blink::Member.2758" = type { %"class.blink::MemberBase.2759" }
%"class.blink::MemberBase.2759" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2504" = type { %"class.WTF::ListHashSet.base.2514", [7 x i8] }
%"class.WTF::ListHashSet.base.2514" = type <{ %"class.WTF::HashTable.2509", %"class.blink::Member.2511", %"class.blink::Member.2511", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2509" = type <{ %"class.blink::Member.2511"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2511" = type { %"class.blink::MemberBase.2512" }
%"class.blink::MemberBase.2512" = type { %"class.blink::HeapListHashSetNode.2513"* }
%"class.blink::HeapListHashSetNode.2513" = type { %"class.blink::Member.2754", %"class.blink::Member.2511", %"class.blink::Member.2511" }
%"class.blink::Member.2754" = type { %"class.blink::MemberBase.2755" }
%"class.blink::MemberBase.2755" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2515" = type { %"class.WTF::ListHashSet.base.2525", [7 x i8] }
%"class.WTF::ListHashSet.base.2525" = type <{ %"class.WTF::HashTable.2520", %"class.blink::Member.2522", %"class.blink::Member.2522", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2520" = type <{ %"class.blink::Member.2522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2522" = type { %"class.blink::MemberBase.2523" }
%"class.blink::MemberBase.2523" = type { %"class.blink::HeapListHashSetNode.2524"* }
%"class.blink::HeapListHashSetNode.2524" = type { %"class.blink::Member.2750", %"class.blink::Member.2522", %"class.blink::Member.2522" }
%"class.blink::Member.2750" = type { %"class.blink::MemberBase.2751" }
%"class.blink::MemberBase.2751" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2526" = type { %"class.WTF::ListHashSet.base.2536", [7 x i8] }
%"class.WTF::ListHashSet.base.2536" = type <{ %"class.WTF::HashTable.2531", %"class.blink::Member.2533", %"class.blink::Member.2533", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2531" = type <{ %"class.blink::Member.2533"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2533" = type { %"class.blink::MemberBase.2534" }
%"class.blink::MemberBase.2534" = type { %"class.blink::HeapListHashSetNode.2535"* }
%"class.blink::HeapListHashSetNode.2535" = type { %"class.blink::Member.2643", %"class.blink::Member.2533", %"class.blink::Member.2533" }
%"class.blink::HeapListHashSet.2537" = type { %"class.WTF::ListHashSet.base.2547", [7 x i8] }
%"class.WTF::ListHashSet.base.2547" = type <{ %"class.WTF::HashTable.2542", %"class.blink::Member.2544", %"class.blink::Member.2544", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2542" = type <{ %"class.blink::Member.2544"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2544" = type { %"class.blink::MemberBase.2545" }
%"class.blink::MemberBase.2545" = type { %"class.blink::HeapListHashSetNode.2546"* }
%"class.blink::HeapListHashSetNode.2546" = type { %"class.blink::Member.2744", %"class.blink::Member.2544", %"class.blink::Member.2544" }
%"class.blink::Member.2744" = type { %"class.blink::MemberBase.2745" }
%"class.blink::MemberBase.2745" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2548" = type { %"class.WTF::ListHashSet.base.2558", [7 x i8] }
%"class.WTF::ListHashSet.base.2558" = type <{ %"class.WTF::HashTable.2553", %"class.blink::Member.2555", %"class.blink::Member.2555", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2553" = type <{ %"class.blink::Member.2555"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2555" = type { %"class.blink::MemberBase.2556" }
%"class.blink::MemberBase.2556" = type { %"class.blink::HeapListHashSetNode.2557"* }
%"class.blink::HeapListHashSetNode.2557" = type { %"class.blink::Member.2740", %"class.blink::Member.2555", %"class.blink::Member.2555" }
%"class.blink::Member.2740" = type { %"class.blink::MemberBase.2741" }
%"class.blink::MemberBase.2741" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2559" = type { %"class.WTF::ListHashSet.base.2569", [7 x i8] }
%"class.WTF::ListHashSet.base.2569" = type <{ %"class.WTF::HashTable.2564", %"class.blink::Member.2566", %"class.blink::Member.2566", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2564" = type <{ %"class.blink::Member.2566"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2566" = type { %"class.blink::MemberBase.2567" }
%"class.blink::MemberBase.2567" = type { %"class.blink::HeapListHashSetNode.2568"* }
%"class.blink::HeapListHashSetNode.2568" = type { %"class.blink::Member.2736", %"class.blink::Member.2566", %"class.blink::Member.2566" }
%"class.blink::Member.2736" = type { %"class.blink::MemberBase.2737" }
%"class.blink::MemberBase.2737" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2570" = type { %"class.WTF::ListHashSet.base.2580", [7 x i8] }
%"class.WTF::ListHashSet.base.2580" = type <{ %"class.WTF::HashTable.2575", %"class.blink::Member.2577", %"class.blink::Member.2577", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2575" = type <{ %"class.blink::Member.2577"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2577" = type { %"class.blink::MemberBase.2578" }
%"class.blink::MemberBase.2578" = type { %"class.blink::HeapListHashSetNode.2579"* }
%"class.blink::HeapListHashSetNode.2579" = type { %"class.blink::Member.2732", %"class.blink::Member.2577", %"class.blink::Member.2577" }
%"class.blink::Member.2732" = type { %"class.blink::MemberBase.2733" }
%"class.blink::MemberBase.2733" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2581" = type { %"class.WTF::ListHashSet.base.2591", [7 x i8] }
%"class.WTF::ListHashSet.base.2591" = type <{ %"class.WTF::HashTable.2586", %"class.blink::Member.2588", %"class.blink::Member.2588", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2586" = type <{ %"class.blink::Member.2588"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2588" = type { %"class.blink::MemberBase.2589" }
%"class.blink::MemberBase.2589" = type { %"class.blink::HeapListHashSetNode.2590"* }
%"class.blink::HeapListHashSetNode.2590" = type { %"class.blink::Member.2728", %"class.blink::Member.2588", %"class.blink::Member.2588" }
%"class.blink::Member.2728" = type { %"class.blink::MemberBase.2729" }
%"class.blink::MemberBase.2729" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2592" = type { %"class.WTF::ListHashSet.base.2602", [7 x i8] }
%"class.WTF::ListHashSet.base.2602" = type <{ %"class.WTF::HashTable.2597", %"class.blink::Member.2599", %"class.blink::Member.2599", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2597" = type <{ %"class.blink::Member.2599"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2599" = type { %"class.blink::MemberBase.2600" }
%"class.blink::MemberBase.2600" = type { %"class.blink::HeapListHashSetNode.2601"* }
%"class.blink::HeapListHashSetNode.2601" = type { %"class.blink::Member.2724", %"class.blink::Member.2599", %"class.blink::Member.2599" }
%"class.blink::Member.2724" = type { %"class.blink::MemberBase.2725" }
%"class.blink::MemberBase.2725" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2603" = type { %"class.WTF::ListHashSet.base.2613", [7 x i8] }
%"class.WTF::ListHashSet.base.2613" = type <{ %"class.WTF::HashTable.2608", %"class.blink::Member.2610", %"class.blink::Member.2610", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2608" = type <{ %"class.blink::Member.2610"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2610" = type { %"class.blink::MemberBase.2611" }
%"class.blink::MemberBase.2611" = type { %"class.blink::HeapListHashSetNode.2612"* }
%"class.blink::HeapListHashSetNode.2612" = type { %"class.blink::Member.2720", %"class.blink::Member.2610", %"class.blink::Member.2610" }
%"class.blink::Member.2720" = type { %"class.blink::MemberBase.2721" }
%"class.blink::MemberBase.2721" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2614" = type { %"class.WTF::ListHashSet.base.2624", [7 x i8] }
%"class.WTF::ListHashSet.base.2624" = type <{ %"class.WTF::HashTable.2619", %"class.blink::Member.2621", %"class.blink::Member.2621", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2619" = type <{ %"class.blink::Member.2621"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2621" = type { %"class.blink::MemberBase.2622" }
%"class.blink::MemberBase.2622" = type { %"class.blink::HeapListHashSetNode.2623"* }
%"class.blink::HeapListHashSetNode.2623" = type { %"class.blink::Member.2645", %"class.blink::Member.2621", %"class.blink::Member.2621" }
%"class.blink::HeapListHashSet.2625" = type { %"class.WTF::ListHashSet.base.2635", [7 x i8] }
%"class.WTF::ListHashSet.base.2635" = type <{ %"class.WTF::HashTable.2630", %"class.blink::Member.2632", %"class.blink::Member.2632", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2630" = type <{ %"class.blink::Member.2632"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2632" = type { %"class.blink::MemberBase.2633" }
%"class.blink::MemberBase.2633" = type { %"class.blink::HeapListHashSetNode.2634"* }
%"class.blink::HeapListHashSetNode.2634" = type { %"class.blink::Member.2637", %"class.blink::Member.2632", %"class.blink::Member.2632" }
%class.scoped_refptr.2636 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2637" = type { %"class.blink::MemberBase.2638" }
%"class.blink::MemberBase.2638" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2639" = type { %"class.blink::MemberBase.2640" }
%"class.blink::MemberBase.2640" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2641" = type { %"class.blink::MemberBase.2642" }
%"class.blink::MemberBase.2642" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2643" = type { %"class.blink::MemberBase.2644" }
%"class.blink::MemberBase.2644" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2645" = type { %"class.blink::MemberBase.2646" }
%"class.blink::MemberBase.2646" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2649" = type { %"class.blink::MemberBase.2650" }
%"class.blink::MemberBase.2650" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2651" = type { %"class.blink::MemberBase.2652" }
%"class.blink::MemberBase.2652" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2653" }
%"class.blink::Member.2653" = type { %"class.blink::MemberBase.2654" }
%"class.blink::MemberBase.2654" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3866" }
%"class.mojo::Remote.3866" = type { %"class.mojo::internal::InterfacePtrState.3867" }
%"class.mojo::internal::InterfacePtrState.3867" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3868" }
%"class.std::__1::unique_ptr.3868" = type { %"class.std::__1::__compressed_pair.3869" }
%"class.std::__1::__compressed_pair.3869" = type { %"struct.std::__1::__compressed_pair_elem.3870" }
%"struct.std::__1::__compressed_pair_elem.3870" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2655" = type { %"class.std::__1::__compressed_pair.2656" }
%"class.std::__1::__compressed_pair.2656" = type { %"struct.std::__1::__compressed_pair_elem.2657" }
%"struct.std::__1::__compressed_pair_elem.2657" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2661" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2662" = type { %"class.std::__1::__compressed_pair.2663" }
%"class.std::__1::__compressed_pair.2663" = type { %"struct.std::__1::__compressed_pair_elem.2664" }
%"struct.std::__1::__compressed_pair_elem.2664" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2334" = type { %"class.absl::optional_internal::optional_data.2335" }
%"class.absl::optional_internal::optional_data.2335" = type { %"class.absl::optional_internal::optional_data_base.2336" }
%"class.absl::optional_internal::optional_data_base.2336" = type { %"class.absl::optional_internal::optional_data_dtor_base.2337" }
%"class.absl::optional_internal::optional_data_dtor_base.2337" = type { i8, %union.anon.2338 }
%union.anon.2338 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2668" = type { %"class.std::__1::__compressed_pair.2669" }
%"class.std::__1::__compressed_pair.2669" = type { %"struct.std::__1::__compressed_pair_elem.2670" }
%"struct.std::__1::__compressed_pair_elem.2670" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2674" }
%"class.blink::Member.2674" = type { %"class.blink::MemberBase.2675" }
%"class.blink::MemberBase.2675" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3876" }
%"class.mojo::AssociatedRemote.3876" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3877" }
%"class.mojo::internal::AssociatedInterfacePtrState.3877" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3878" }
%"class.std::__1::unique_ptr.3878" = type { %"class.std::__1::__compressed_pair.3879" }
%"class.std::__1::__compressed_pair.3879" = type { %"struct.std::__1::__compressed_pair_elem.3880" }
%"struct.std::__1::__compressed_pair_elem.3880" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2676" = type { %"class.blink::Member.2677" }
%"class.blink::Member.2677" = type { %"class.blink::MemberBase.2678" }
%"class.blink::MemberBase.2678" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3886" }
%"class.mojo::AssociatedRemote.3886" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3887" }
%"class.mojo::internal::AssociatedInterfacePtrState.3887" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3888" }
%"class.std::__1::unique_ptr.3888" = type { %"class.std::__1::__compressed_pair.3889" }
%"class.std::__1::__compressed_pair.3889" = type { %"struct.std::__1::__compressed_pair_elem.3890" }
%"struct.std::__1::__compressed_pair_elem.3890" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2679" }
%"class.blink::Member.2679" = type { %"class.blink::MemberBase.2680" }
%"class.blink::MemberBase.2680" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3896", %"class.blink::Member.1904", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3896" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3897" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1702" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3897" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2681" = type { %"class.blink::Member.2682" }
%"class.blink::Member.2682" = type { %"class.blink::MemberBase.2683" }
%"class.blink::MemberBase.2683" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3900", %"class.blink::Member.1904", %"class.mojo::AssociatedReceiver.3901" }
%"class.blink::ThreadState::PrefinalizerRegistration.3900" = type { i8 }
%"class.mojo::AssociatedReceiver.3901" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3902" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3902" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2684" }
%"class.blink::Member.2684" = type { %"class.blink::MemberBase.2685" }
%"class.blink::MemberBase.2685" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3905", %"class.blink::Member.1904", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3905" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2215, %"class.std::__1::unique_ptr.1702", %"class.base::WeakPtrFactory.3906" }
%"class.base::WeakPtrFactory.3906" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2686" = type { %"class.blink::Member.2687" }
%"class.blink::Member.2687" = type { %"class.blink::MemberBase.2688" }
%"class.blink::MemberBase.2688" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3909", %"class.blink::Member.1904", %"class.mojo::AssociatedReceiver.3910" }
%"class.blink::ThreadState::PrefinalizerRegistration.3909" = type { i8 }
%"class.mojo::AssociatedReceiver.3910" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3911" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3911" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2689" = type { %"class.blink::MemberBase.2690" }
%"class.blink::MemberBase.2690" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2691" = type { %"class.blink::MemberBase.2692" }
%"class.blink::MemberBase.2692" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2693" = type { %"class.blink::MemberBase.2694" }
%"class.blink::MemberBase.2694" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2695" = type { %"class.blink::MemberBase.2696" }
%"class.blink::MemberBase.2696" = type { %"class.blink::HeapHashMap.2697"* }
%"class.blink::HeapHashMap.2697" = type opaque
%"class.mojo::StructPtr.2698" = type { %"class.std::__1::unique_ptr.2699" }
%"class.std::__1::unique_ptr.2699" = type { %"class.std::__1::__compressed_pair.2700" }
%"class.std::__1::__compressed_pair.2700" = type { %"struct.std::__1::__compressed_pair_elem.2701" }
%"struct.std::__1::__compressed_pair_elem.2701" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2702", %"class.mojo::InlinedStructPtr.2703" }
%"class.mojo::InlinedStructPtr.2702" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2703" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2707" = type { %"class.blink::MemberBase.2708" }
%"class.blink::MemberBase.2708" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2709" = type { %"class.absl::optional_internal::optional_data.2710" }
%"class.absl::optional_internal::optional_data.2710" = type { %"class.absl::optional_internal::optional_data_base.2711" }
%"class.absl::optional_internal::optional_data_base.2711" = type { %"class.absl::optional_internal::optional_data_dtor_base.2712" }
%"class.absl::optional_internal::optional_data_dtor_base.2712" = type { i8, %union.anon.2713 }
%union.anon.2713 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1906" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1907", { i64, i64 } }
%"class.blink::WeakMember.1907" = type { %"class.blink::MemberBase.1908" }
%"class.absl::optional.1909" = type { %"class.absl::optional_internal::optional_data.1910" }
%"class.absl::optional_internal::optional_data.1910" = type { %"class.absl::optional_internal::optional_data_base.1911" }
%"class.absl::optional_internal::optional_data_base.1911" = type { %"class.absl::optional_internal::optional_data_dtor_base.1912" }
%"class.absl::optional_internal::optional_data_dtor_base.1912" = type { i8, %union.anon.1913 }
%union.anon.1913 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1914" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::HeapHashSet.1918"* }
%"class.blink::HeapHashSet.1918" = type opaque
%"class.std::__1::unique_ptr.1919" = type { %"class.std::__1::__compressed_pair.1920" }
%"class.std::__1::__compressed_pair.1920" = type { %"struct.std::__1::__compressed_pair_elem.1921" }
%"struct.std::__1::__compressed_pair_elem.1921" = type { %"class.WTF::HashSet.1922"* }
%"class.WTF::HashSet.1922" = type { %"class.WTF::HashTable.1923" }
%"class.WTF::HashTable.1923" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1929" = type { %"class.blink::MemberBase.1930" }
%"class.blink::MemberBase.1930" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1931" = type { %"class.WTF::HashSet.1934" }
%"class.WTF::HashSet.1934" = type { %"class.WTF::HashTable.1935" }
%"class.WTF::HashTable.1935" = type <{ %"class.blink::Member.1937"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1937" = type opaque
%"class.blink::HeapHashSet.1938" = type { %"class.WTF::HashSet.1941" }
%"class.WTF::HashSet.1941" = type { %"class.WTF::HashTable.1942" }
%"class.WTF::HashTable.1942" = type <{ %"class.blink::Member.1944"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1946" = type { %"class.std::__1::__compressed_pair.1947" }
%"class.std::__1::__compressed_pair.1947" = type { %"struct.std::__1::__compressed_pair_elem.1948" }
%"struct.std::__1::__compressed_pair_elem.1948" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1952" = type { %"class.blink::MemberBase.1953" }
%"class.blink::MemberBase.1953" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.1954" = type { %"class.WTF::LinkedHashSet.1957" }
%"class.WTF::LinkedHashSet.1957" = type { %"class.WTF::HashMap.1958", %"class.WTF::VectorBackedLinkedList.1962" }
%"class.WTF::HashMap.1958" = type { %"class.WTF::HashTable.1959" }
%"class.WTF::HashTable.1959" = type <{ %"struct.WTF::KeyValuePair.1961"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1961" = type opaque
%"class.WTF::VectorBackedLinkedList.1962" = type { %"class.WTF::Vector.1963", i32, i32 }
%"class.WTF::Vector.1963" = type { %"class.WTF::VectorBuffer.1964" }
%"class.WTF::VectorBuffer.1964" = type { %"class.WTF::VectorBufferBase.1965" }
%"class.WTF::VectorBufferBase.1965" = type { %"class.WTF::VectorBackedLinkedListNode.1966"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1966" = type opaque
%"class.blink::HeapLinkedHashSet.1968" = type { %"class.WTF::LinkedHashSet.1971" }
%"class.WTF::LinkedHashSet.1971" = type { %"class.WTF::HashMap.1972", %"class.WTF::VectorBackedLinkedList.1976" }
%"class.WTF::HashMap.1972" = type { %"class.WTF::HashTable.1973" }
%"class.WTF::HashTable.1973" = type <{ %"struct.WTF::KeyValuePair.1975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1975" = type opaque
%"class.WTF::VectorBackedLinkedList.1976" = type { %"class.WTF::Vector.1977", i32, i32 }
%"class.WTF::Vector.1977" = type { %"class.WTF::VectorBuffer.1978" }
%"class.WTF::VectorBuffer.1978" = type { %"class.WTF::VectorBufferBase.1979" }
%"class.WTF::VectorBufferBase.1979" = type { %"class.WTF::VectorBackedLinkedListNode.1980"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1980" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1982" = type { %"class.std::__1::__compressed_pair.1983" }
%"class.std::__1::__compressed_pair.1983" = type { %"struct.std::__1::__compressed_pair_elem.1984" }
%"struct.std::__1::__compressed_pair_elem.1984" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1988" = type { %"class.std::__1::__compressed_pair.1989" }
%"class.std::__1::__compressed_pair.1989" = type { %"struct.std::__1::__compressed_pair_elem.1990" }
%"struct.std::__1::__compressed_pair_elem.1990" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1991, %class.scoped_refptr.1991, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2046", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2051", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1991 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1992", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1999" }
%"class.WTF::RefCounted.1992" = type { %"class.base::RefCounted.1993" }
%"class.base::RefCounted.1993" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1994", i32, [4 x i8] }>
%"class.WTF::Vector.1994" = type { %"class.WTF::VectorBuffer.1995" }
%"class.WTF::VectorBuffer.1995" = type { %"class.WTF::VectorBufferBase.1996" }
%"class.WTF::VectorBufferBase.1996" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1999" = type { %"class.WTF::VectorBuffer.2000" }
%"class.WTF::VectorBuffer.2000" = type { %"class.WTF::VectorBufferBase.2001" }
%"class.WTF::VectorBufferBase.2001" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2002", %"class.std::__1::unique_ptr.2018", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2002" = type { %"class.std::__1::__compressed_pair.2003" }
%"class.std::__1::__compressed_pair.2003" = type { %"struct.std::__1::__compressed_pair_elem.2004" }
%"struct.std::__1::__compressed_pair_elem.2004" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2005", %"class.WTF::Vector.2010", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2005" = type { %"class.WTF::VectorBuffer.2006" }
%"class.WTF::VectorBuffer.2006" = type { %"class.WTF::VectorBufferBase.2007" }
%"class.WTF::VectorBufferBase.2007" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.2018" = type { %"class.std::__1::__compressed_pair.2019" }
%"class.std::__1::__compressed_pair.2019" = type { %"struct.std::__1::__compressed_pair_elem.2020" }
%"struct.std::__1::__compressed_pair_elem.2020" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2021", %"class.absl::optional.2021" }
%"class.absl::optional.2021" = type { %"class.absl::optional_internal::optional_data.2022" }
%"class.absl::optional_internal::optional_data.2022" = type { %"class.absl::optional_internal::optional_data_base.2023" }
%"class.absl::optional_internal::optional_data_base.2023" = type { %"class.absl::optional_internal::optional_data_dtor_base.2024" }
%"class.absl::optional_internal::optional_data_dtor_base.2024" = type { i8, [3 x i8], %union.anon.2025 }
%union.anon.2025 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1999"*, %"class.absl::optional.2031", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2031" = type { %"class.absl::optional_internal::optional_data.2032" }
%"class.absl::optional_internal::optional_data.2032" = type { %"class.absl::optional_internal::optional_data_base.2033" }
%"class.absl::optional_internal::optional_data_base.2033" = type { %"class.absl::optional_internal::optional_data_dtor_base.2034" }
%"class.absl::optional_internal::optional_data_dtor_base.2034" = type { i8, %union.anon.2035 }
%union.anon.2035 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2036", %"class.WTF::Vector.2041" }
%"class.WTF::Vector.2036" = type { %"class.WTF::VectorBuffer.2037" }
%"class.WTF::VectorBuffer.2037" = type { %"class.WTF::VectorBufferBase.2038", [128 x i8] }
%"class.WTF::VectorBufferBase.2038" = type { i32*, i32, i32 }
%"class.WTF::Vector.2041" = type { %"class.WTF::VectorBuffer.2042" }
%"class.WTF::VectorBuffer.2042" = type { %"class.WTF::VectorBufferBase.2043", [128 x i8] }
%"class.WTF::VectorBufferBase.2043" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2046" = type { %"class.WTF::VectorBuffer.2047" }
%"class.WTF::VectorBuffer.2047" = type { %"class.WTF::VectorBufferBase.2048" }
%"class.WTF::VectorBufferBase.2048" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2051" = type { %"class.WTF::HashTable.2052" }
%"class.WTF::HashTable.2052" = type <{ %"struct.WTF::KeyValuePair.2055"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2055" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2056", %"class.WTF::Vector.2061" }
%"class.WTF::HashMap.2056" = type { %"class.WTF::HashTable.2057" }
%"class.WTF::HashTable.2057" = type <{ %"struct.WTF::KeyValuePair.2060"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2060" = type opaque
%"class.WTF::Vector.2061" = type { %"class.WTF::VectorBuffer.2062" }
%"class.WTF::VectorBuffer.2062" = type { %"class.WTF::VectorBufferBase.2063" }
%"class.WTF::VectorBufferBase.2063" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2069" = type { %"class.std::__1::__compressed_pair.2070" }
%"class.std::__1::__compressed_pair.2070" = type { %"struct.std::__1::__compressed_pair_elem.2071" }
%"struct.std::__1::__compressed_pair_elem.2071" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2075" = type { %"class.WTF::VectorBuffer.2076" }
%"class.WTF::VectorBuffer.2076" = type { %"class.WTF::VectorBufferBase.2077" }
%"class.WTF::VectorBufferBase.2077" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2080 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type { %"class.WTF::RefCounted.2081", i64, %"class.ukm::UkmRecorder"*, %"class.base::TickClock"*, i8*, %"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord", %"struct.std::__1::array", %"struct.blink::LocalFrameUkmAggregator::SampleToRecord", i32, i32, i32, i8, i32, i32 }
%"class.WTF::RefCounted.2081" = type { %"class.base::RefCounted.2082" }
%"class.base::RefCounted.2082" = type { %"class.base::subtle::RefCountedBase" }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord" = type { %"class.std::__1::unique_ptr.2083", %"class.std::__1::unique_ptr.2083", %"class.std::__1::unique_ptr.2083", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.2083" = type { %"class.std::__1::__compressed_pair.2084" }
%"class.std::__1::__compressed_pair.2084" = type { %"struct.std::__1::__compressed_pair_elem.2085" }
%"struct.std::__1::__compressed_pair_elem.2085" = type { %"class.blink::CustomCountHistogram"* }
%"class.blink::CustomCountHistogram" = type { %"class.base::HistogramBase"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::array" = type { [26 x %"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord"] }
%"struct.blink::LocalFrameUkmAggregator::SampleToRecord" = type <{ %"class.base::TimeDelta", %"struct.std::__1::array.2089", %"struct.std::__1::array.2089", i16, [6 x i8] }>
%"struct.std::__1::array.2089" = type { [26 x %"class.base::TimeDelta"] }
%"class.blink::Member.2090" = type { %"class.blink::MemberBase.2091" }
%"class.blink::MemberBase.2091" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2092" = type { %"class.blink::MemberBase.2093" }
%"class.blink::MemberBase.2093" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2094" = type { %"class.blink::MemberBase.2095" }
%"class.blink::MemberBase.2095" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2096" = type { %"class.WTF::HashSet.2099" }
%"class.WTF::HashSet.2099" = type { %"class.WTF::HashTable.2100" }
%"class.WTF::HashTable.2100" = type <{ %"class.blink::WeakMember.2102"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2102" = type opaque
%"class.blink::HeapHashSet.2103" = type { %"class.WTF::HashSet.2106" }
%"class.WTF::HashSet.2106" = type { %"class.WTF::HashTable.2107" }
%"class.WTF::HashTable.2107" = type <{ %"class.blink::WeakMember.2109"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2109" = type opaque
%"class.std::__1::unique_ptr.2110" = type { %"class.std::__1::__compressed_pair.2111" }
%"class.std::__1::__compressed_pair.2111" = type { %"struct.std::__1::__compressed_pair_elem.2112" }
%"struct.std::__1::__compressed_pair_elem.2112" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2113" }
%"class.base::time_internal::TimeBase.2113" = type { i64 }
%"class.std::__1::unique_ptr.2117" = type { %"class.std::__1::__compressed_pair.2118" }
%"class.std::__1::__compressed_pair.2118" = type { %"struct.std::__1::__compressed_pair_elem.2119" }
%"struct.std::__1::__compressed_pair_elem.2119" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2120", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2120" = type { %"class.absl::optional_internal::optional_data.2121" }
%"class.absl::optional_internal::optional_data.2121" = type { %"class.absl::optional_internal::optional_data_base.2122" }
%"class.absl::optional_internal::optional_data_base.2122" = type { %"class.absl::optional_internal::optional_data_dtor_base.2123" }
%"class.absl::optional_internal::optional_data_dtor_base.2123" = type { i8, %union.anon.2124 }
%union.anon.2124 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2128" = type { %"class.std::__1::__compressed_pair.2129" }
%"class.std::__1::__compressed_pair.2129" = type { %"struct.std::__1::__compressed_pair_elem.2130" }
%"struct.std::__1::__compressed_pair_elem.2130" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2134" = type { %"class.std::__1::__compressed_pair.2135" }
%"class.std::__1::__compressed_pair.2135" = type { %"struct.std::__1::__compressed_pair_elem.2136" }
%"struct.std::__1::__compressed_pair_elem.2136" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2140" = type { %"class.std::__1::__compressed_pair.2141" }
%"class.std::__1::__compressed_pair.2141" = type { %"struct.std::__1::__compressed_pair_elem.2142" }
%"struct.std::__1::__compressed_pair_elem.2142" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1891 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2146" = type { %"class.blink::PersistentBase.2147" }
%"class.blink::PersistentBase.2147" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2150", i64 }
%"class.blink::HeapVector.2150" = type { %"class.WTF::Vector.2153" }
%"class.WTF::Vector.2153" = type { %"class.WTF::VectorBuffer.2154" }
%"class.WTF::VectorBuffer.2154" = type { %"class.WTF::VectorBufferBase.2155", [368 x i8] }
%"class.WTF::VectorBufferBase.2155" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1944", i8, %"class.blink::Member.2156", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2156" = type { %"class.blink::MemberBase.2157" }
%"class.blink::MemberBase.2157" = type { %"class.blink::HeapLinkedHashSet.2158"* }
%"class.blink::HeapLinkedHashSet.2158" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1407" = type { %"class.WTF::Vector.1410" }
%"class.WTF::Vector.1410" = type { %"class.WTF::VectorBuffer.1411" }
%"class.WTF::VectorBuffer.1411" = type { %"class.WTF::VectorBufferBase.1412" }
%"class.WTF::VectorBufferBase.1412" = type { %"class.blink::Member.1413"*, i32, i32 }
%"class.blink::Member.1413" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1415" = type { %"class.blink::MemberBase.1416" }
%"class.blink::MemberBase.1416" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1417" = type { %"class.blink::MemberBase.1418" }
%"class.blink::MemberBase.1418" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1419" = type { %"class.blink::MemberBase.1420" }
%"class.blink::MemberBase.1420" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1425" = type { %"class.WTF::HashTable.1426" }
%"class.WTF::HashTable.1426" = type <{ %"struct.WTF::KeyValuePair.1429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1429" = type opaque
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1432" = type { %"class.blink::MemberBase.1433" }
%"class.blink::MemberBase.1433" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1434" = type { %"class.blink::MemberBase.1435" }
%"class.blink::MemberBase.1435" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1436" = type { %"class.blink::MemberBase.1437" }
%"class.blink::MemberBase.1437" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.989", { i64, i64 } }
%"class.blink::HeapHashSet.1438" = type { %"class.WTF::HashSet.1441" }
%"class.WTF::HashSet.1441" = type { %"class.WTF::HashTable.1442" }
%"class.WTF::HashTable.1442" = type <{ %"class.blink::Member.1444"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1444" = type opaque
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1455" = type { %"class.std::__1::__compressed_pair.1456" }
%"class.std::__1::__compressed_pair.1456" = type { %"struct.std::__1::__compressed_pair_elem.1457" }
%"struct.std::__1::__compressed_pair_elem.1457" = type { %"class.ukm::UkmRecorder"* }
%"class.std::__1::unique_ptr.1461" = type { %"class.std::__1::__compressed_pair.1462" }
%"class.std::__1::__compressed_pair.1462" = type { %"struct.std::__1::__compressed_pair_elem.1463" }
%"struct.std::__1::__compressed_pair_elem.1463" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1464", %"class.WTF::HashMap.1464", %"class.WTF::HashMap.1464", %"class.WTF::HashMap.1464", %"class.WTF::HashMap.1464", %"class.WTF::HashMap.1464", %"class.WTF::HashMap.1464", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1464" = type { %"class.WTF::HashTable.1465" }
%"class.WTF::HashTable.1465" = type <{ %"struct.WTF::KeyValuePair.1468"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1468" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1476" = type { %"class.blink::MemberBase.1477" }
%"class.blink::MemberBase.1477" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1478" = type { %"class.blink::MemberBase.1479" }
%"class.blink::MemberBase.1479" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member.1482", %"class.blink::Member.1482", i32, i8, [3 x i8] }>
%"class.blink::Member.1482" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.blink::Member.1485", %"class.blink::UntracedMember", %"class.blink::HeapLinkedHashSet", %"class.WTF::Vector.1497", double, %"class.WTF::Vector.724", i32, i8, [3 x i8] }>
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1484" }
%"class.blink::WeakMember.1484" = type { %"class.blink::MemberBase.939" }
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::IntersectionObserverDelegate"* }
%"class.blink::IntersectionObserverDelegate" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1489", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"struct.WTF::KeyValuePair.1492"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1492" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1493", i32, i32 }
%"class.WTF::Vector.1493" = type { %"class.WTF::VectorBuffer.1494" }
%"class.WTF::VectorBuffer.1494" = type { %"class.WTF::VectorBufferBase.1495" }
%"class.WTF::VectorBufferBase.1495" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::Vector.1497" = type { %"class.WTF::VectorBuffer.1498" }
%"class.WTF::VectorBuffer.1498" = type { %"class.WTF::VectorBufferBase.1499" }
%"class.WTF::VectorBufferBase.1499" = type { float*, i32, i32 }
%"class.WTF::Vector.1502" = type { %"class.WTF::VectorBuffer.1503" }
%"class.WTF::VectorBuffer.1503" = type { %"class.WTF::VectorBufferBase.1504" }
%"class.WTF::VectorBufferBase.1504" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1507" = type { %"class.WTF::HashMap.1510" }
%"class.WTF::HashMap.1510" = type { %"class.WTF::HashTable.1511" }
%"class.WTF::HashTable.1511" = type <{ %"struct.WTF::KeyValuePair.1513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1513" = type opaque
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1516" = type { %"class.std::__1::__compressed_pair.1517" }
%"class.std::__1::__compressed_pair.1517" = type { %"struct.std::__1::__compressed_pair_elem.1518" }
%"struct.std::__1::__compressed_pair_elem.1518" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1522" = type { %"class.blink::MemberBase.1523" }
%"class.blink::MemberBase.1523" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1524" = type { %"class.blink::MemberBase.1525" }
%"class.blink::MemberBase.1525" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1526" = type { %"class.WTF::HashMap.1529" }
%"class.WTF::HashMap.1529" = type { %"class.WTF::HashTable.1530" }
%"class.WTF::HashTable.1530" = type <{ %"struct.WTF::KeyValuePair.1532"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1532" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1533" }
%"class.blink::HeapHashSet.1533" = type { %"class.WTF::HashSet.1536" }
%"class.WTF::HashSet.1536" = type { %"class.WTF::HashTable.1537" }
%"class.WTF::HashTable.1537" = type <{ %"class.blink::WeakMember.1539"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1539" = type opaque
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1549", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1556", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1549" = type { %"class.WTF::HashSet.1552" }
%"class.WTF::HashSet.1552" = type { %"class.WTF::HashTable.1553" }
%"class.WTF::HashTable.1553" = type <{ %"class.blink::Member.1555"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1555" = type opaque
%"class.blink::HeapTaskRunnerTimer.1556" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1557", { i64, i64 } }
%"class.blink::WeakMember.1557" = type { %"class.blink::MemberBase.1543" }
%"class.blink::WeakMember.1544" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1545" = type { %"class.blink::MemberBase.1546" }
%"class.blink::MemberBase.1546" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::AXObjectCacheImpl" = type { %"class.blink::AXObjectCacheBase", %"class.blink::mojom::blink::PermissionObserver", %"class.blink::Member.326", %"class.ui::AXMode", [4 x i8], %"class.blink::HeapHashMap.3266", %"class.blink::HeapHashMap.3273", %"class.WTF::HashMap.3280", %"class.blink::HeapHashMap.3285", %"class.WTF::HashMap.3292", i32, [4 x i8], %"class.WTF::HashSet.3297", i32, %"class.blink::WeakMember.3301", %"class.std::__1::unique_ptr.3302", %"class.blink::HeapVector.3308", i32, %"class.blink::HeapMojoRemote.3316", %"class.blink::HeapMojoReceiver.3319", %"class.blink::HeapHashSet.3322", %"class.blink::HeapVector.3328", %"class.blink::HeapHashSet.3336", i32, i8, [3 x i8], %"class.WTF::HashMap.3342", %"class.WTF::HashSet.3297", %"class.WTF::HashSet.3297", i32, i32, %"class.WTF::HashCountedSet", i8, [7 x i8], %"class.WTF::HashSet.3297" }
%"class.blink::AXObjectCacheBase" = type { %"class.blink::AXObjectCache" }
%"class.blink::mojom::blink::PermissionObserver" = type { i32 (...)** }
%"class.ui::AXMode" = type { i32 }
%"class.blink::HeapHashMap.3266" = type { %"class.WTF::HashMap.3269" }
%"class.WTF::HashMap.3269" = type { %"class.WTF::HashTable.3270" }
%"class.WTF::HashTable.3270" = type <{ %"struct.WTF::KeyValuePair.3272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3272" = type { i32, %"class.blink::Member.3255" }
%"class.blink::HeapHashMap.3273" = type { %"class.WTF::HashMap.3276" }
%"class.WTF::HashMap.3276" = type { %"class.WTF::HashTable.3277" }
%"class.WTF::HashTable.3277" = type <{ %"struct.WTF::KeyValuePair.3279"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3279" = type opaque
%"class.WTF::HashMap.3280" = type { %"class.WTF::HashTable.3281" }
%"class.WTF::HashTable.3281" = type <{ %"struct.WTF::KeyValuePair.3284"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3284" = type opaque
%"class.blink::HeapHashMap.3285" = type { %"class.WTF::HashMap.3288" }
%"class.WTF::HashMap.3288" = type { %"class.WTF::HashTable.3289" }
%"class.WTF::HashTable.3289" = type <{ %"struct.WTF::KeyValuePair.3291"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3291" = type opaque
%"class.WTF::HashMap.3292" = type { %"class.WTF::HashTable.3293" }
%"class.WTF::HashTable.3293" = type <{ %"struct.WTF::KeyValuePair.3296"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3296" = type opaque
%"class.blink::WeakMember.3301" = type { %"class.blink::MemberBase.3256" }
%"class.std::__1::unique_ptr.3302" = type { %"class.std::__1::__compressed_pair.3303" }
%"class.std::__1::__compressed_pair.3303" = type { %"struct.std::__1::__compressed_pair_elem.3304" }
%"struct.std::__1::__compressed_pair_elem.3304" = type { %"class.blink::AXRelationCache"* }
%"class.blink::AXRelationCache" = type opaque
%"class.blink::HeapVector.3308" = type { %"class.WTF::Vector.3311" }
%"class.WTF::Vector.3311" = type { %"class.WTF::VectorBuffer.3312" }
%"class.WTF::VectorBuffer.3312" = type { %"class.WTF::VectorBufferBase.3313" }
%"class.WTF::VectorBufferBase.3313" = type { %"class.blink::Member.3314"*, i32, i32 }
%"class.blink::Member.3314" = type opaque
%"class.blink::HeapMojoRemote.3316" = type { %"class.blink::Member.3317" }
%"class.blink::Member.3317" = type { %"class.blink::MemberBase.3318" }
%"class.blink::MemberBase.3318" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver.3319" = type { %"class.blink::Member.3320" }
%"class.blink::Member.3320" = type { %"class.blink::MemberBase.3321" }
%"class.blink::MemberBase.3321" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapHashSet.3322" = type { %"class.WTF::HashSet.3325" }
%"class.WTF::HashSet.3325" = type { %"class.WTF::HashTable.3326" }
%"class.WTF::HashTable.3326" = type <{ %"class.blink::WeakMember.989"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.3328" = type { %"class.WTF::Vector.3331" }
%"class.WTF::Vector.3331" = type { %"class.WTF::VectorBuffer.3332" }
%"class.WTF::VectorBuffer.3332" = type { %"class.WTF::VectorBufferBase.3333" }
%"class.WTF::VectorBufferBase.3333" = type { %"class.blink::Member.3334"*, i32, i32 }
%"class.blink::Member.3334" = type opaque
%"class.blink::HeapHashSet.3336" = type { %"class.WTF::HashSet.3339" }
%"class.WTF::HashSet.3339" = type { %"class.WTF::HashTable.3340" }
%"class.WTF::HashTable.3340" = type <{ %"class.blink::WeakMember.1544"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.3342" = type { %"class.WTF::HashTable.3343" }
%"class.WTF::HashTable.3343" = type <{ %"struct.WTF::KeyValuePair.3346"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3346" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.3347" }
%"class.WTF::HashMap.3347" = type { %"class.WTF::HashTable.3348" }
%"class.WTF::HashTable.3348" = type <{ %"struct.WTF::KeyValuePair.3351"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3351" = type { %"class.blink::BlinkAXEventIntent", i32, [4 x i8] }
%"class.blink::BlinkAXEventIntent" = type <{ i32 (...)**, %"struct.ui::AXEventIntent", i8, i8, [6 x i8] }>
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.WTF::HashSet.3297" = type { %"class.WTF::HashTable.3298" }
%"class.WTF::HashTable.3298" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable.3926", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.3927", %"class.blink::Member.3929", %"class.blink::Member.3648", %"class.blink::Member.3931", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.3369", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.3363", %"class.blink::Member.3365", %"class.blink::Member.3367", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.3363" = type { %"class.blink::MemberBase.3364" }
%"class.blink::MemberBase.3364" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.3365" = type { %"class.blink::MemberBase.3366" }
%"class.blink::MemberBase.3366" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.3367" = type { %"class.blink::MemberBase.3368" }
%"class.blink::MemberBase.3368" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.3369" = type { %"class.blink::MemberBase.3370" }
%"class.blink::MemberBase.3370" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable.3926" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.3927" = type { %"class.blink::MemberBase.3928" }
%"class.blink::MemberBase.3928" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type opaque
%"class.blink::Member.3929" = type { %"class.blink::MemberBase.3930" }
%"class.blink::MemberBase.3930" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.3648" = type { %"class.blink::MemberBase.3649" }
%"class.blink::MemberBase.3649" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3652", %"class.blink::Member.343", %"class.blink::Member.3653", %"class.blink::Member.3653", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.3666", %"class.std::__1::unique_ptr.3667", %"class.std::__1::unique_ptr.3667", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.3673" }
%"class.blink::ThreadState::PrefinalizerRegistration.3652" = type { i8 }
%"class.blink::Member.3653" = type { %"class.blink::MemberBase.3654" }
%"class.blink::MemberBase.3654" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.3657", float, i8, %class.scoped_refptr.3659, %"class.WTF::HashCountedSet.3660", %"class.WTF::HashCountedSet.3660" }
%"class.blink::Member.3657" = type { %"class.blink::MemberBase.3658" }
%"class.blink::MemberBase.3658" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.3659 = type { %"class.blink::Image"* }
%"class.WTF::HashCountedSet.3660" = type { %"class.WTF::HashMap.3661" }
%"class.WTF::HashMap.3661" = type { %"class.WTF::HashTable.3662" }
%"class.WTF::HashTable.3662" = type <{ %"struct.WTF::KeyValuePair.3665"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3665" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr.3666" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.3667" = type { %"class.std::__1::__compressed_pair.3668" }
%"class.std::__1::__compressed_pair.3668" = type { %"struct.std::__1::__compressed_pair_elem.3669" }
%"struct.std::__1::__compressed_pair_elem.3669" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::HeapVector.3673" = type { %"class.WTF::Vector.3676" }
%"class.WTF::Vector.3676" = type { %"class.WTF::VectorBuffer.3677" }
%"class.WTF::VectorBuffer.3677" = type { %"class.WTF::VectorBufferBase.3678" }
%"class.WTF::VectorBufferBase.3678" = type { %"class.blink::Member.3679"*, i32, i32 }
%"class.blink::Member.3679" = type opaque
%"class.blink::Member.3931" = type { %"class.blink::MemberBase.3932" }
%"class.blink::MemberBase.3932" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ListMarker" = type { i8, [3 x i8] }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::HTMLAnchorElement" = type { %"class.blink::HTMLElement", %"class.blink::DOMURLUtils.base", i32, i64, %"class.blink::Member.3352" }
%"class.blink::DOMURLUtils.base" = type <{ %"class.blink::DOMURLUtilsReadOnly", i8 }>
%"class.blink::DOMURLUtilsReadOnly" = type { i32 (...)** }
%"class.blink::Member.3352" = type { %"class.blink::MemberBase.3353" }
%"class.blink::MemberBase.3353" = type { %"class.blink::RelList"* }
%"class.blink::RelList" = type { %"class.blink::DOMTokenList.base", [7 x i8] }
%"class.blink::DOMTokenList.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.343", %"class.blink::QualifiedName", i8 }>
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.471", %"class.blink::DataRef.475", %"class.blink::DataRef.670", %"class.blink::DataRef.737", %"class.blink::DataRef.741", %"class.blink::DataRef.745", %"class.blink::DataRef.749", [20 x i8], [4 x i8] }>
%"class.blink::HeapVector.3354" = type { %"class.WTF::Vector.3357" }
%"class.WTF::Vector.3357" = type { %"class.WTF::VectorBuffer.3358" }
%"class.WTF::VectorBuffer.3358" = type { %"class.WTF::VectorBufferBase.3359" }
%"class.WTF::VectorBufferBase.3359" = type { %"class.blink::IgnoredReason"*, i32, i32 }
%"class.blink::IgnoredReason" = type { i32, %"class.blink::Member.3360" }
%"class.blink::Member.3360" = type { %"class.blink::MemberBase.3361" }
%"class.blink::MemberBase.3361" = type { %"class.blink::AXObject"* }
%"class.absl::optional.3579" = type { %"class.absl::optional_internal::optional_data.3580" }
%"class.absl::optional_internal::optional_data.3580" = type { %"class.absl::optional_internal::optional_data_base.3581" }
%"class.absl::optional_internal::optional_data_base.3581" = type { %"class.absl::optional_internal::optional_data_dtor_base.3582" }
%"class.absl::optional_internal::optional_data_dtor_base.3582" = type { i8, %union.anon.3583 }
%union.anon.3583 = type { %"class.WTF::String" }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1343", %"class.blink::Member.3632", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.3632" = type { %"class.blink::MemberBase.3633" }
%"class.blink::MemberBase.3633" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::HTMLMediaElement" = type { %"class.blink::HTMLElement", %"class.blink::Supplementable.3371", %"class.blink::ActiveScriptWrappable.3379", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.media::mojom::blink::MediaPlayer", %"class.blink::WebMediaPlayerClient", %"class.blink::ThreadState::PrefinalizerRegistration.3382", %"class.blink::HeapTaskRunnerTimer.3383", %"class.blink::HeapTaskRunnerTimer.3383", %"class.blink::HeapTaskRunnerTimer.3383", %"class.blink::HeapTaskRunnerTimer.3383", %"class.blink::HeapTaskRunnerTimer.3383", %"class.blink::Member.3386", %"class.blink::Member.3388", double, double, i32, i32, i32, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::Member.3390", %"class.blink::Member.3392", double, double, %"class.absl::optional.3394", double, double, double, i32, %"class.blink::Member.3403", %"class.blink::Member.318", i32, %"class.blink::HeapTaskRunnerTimer.3383", %"class.std::__1::unique_ptr.3405", %"class.cc::Layer"*, %class.scoped_refptr.3470, %"class.blink::Member.3471", double, i8, double, i32, i16, %"class.absl::optional.3473", i8, %"class.base::TimeTicks", %"class.blink::Member.3478", %"class.blink::Member.3480", %"class.blink::Member.3482", %"class.blink::HeapVector.3484", %"class.blink::Member.3491", %"class.blink::HeapVector.3493", %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::HeapVector.3493", %"class.blink::HeapVector.3493", i32, %"class.blink::Member.3522", %"class.blink::HTMLMediaElement::AudioSourceProviderImpl", %"class.blink::Member.3555", %"class.blink::WebRemotePlaybackClient"*, %"class.blink::Member.3562", %"class.blink::Member.3564", %"class.blink::Member.1482", %"class.blink::Member.3566", %"class.blink::Member.3569", %"class.blink::Member.3576" }
%"class.blink::Supplementable.3371" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.3372" }
%"class.blink::HeapHashMap.3372" = type { %"class.WTF::HashMap.3375" }
%"class.WTF::HashMap.3375" = type { %"class.WTF::HashTable.3376" }
%"class.WTF::HashTable.3376" = type <{ %"struct.WTF::KeyValuePair.3378"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3378" = type opaque
%"class.blink::ActiveScriptWrappable.3379" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.media::mojom::blink::MediaPlayer" = type { i32 (...)** }
%"class.blink::WebMediaPlayerClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.3382" = type { i8 }
%"class.blink::Member.3386" = type { %"class.blink::MemberBase.3387" }
%"class.blink::MemberBase.3387" = type { %"class.blink::TimeRanges"* }
%"class.blink::TimeRanges" = type opaque
%"class.blink::Member.3388" = type { %"class.blink::MemberBase.3389" }
%"class.blink::MemberBase.3389" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type opaque
%"class.blink::Member.3390" = type { %"class.blink::MemberBase.3391" }
%"class.blink::MemberBase.3391" = type { %"class.blink::MediaStreamDescriptor"* }
%"class.blink::MediaStreamDescriptor" = type opaque
%"class.blink::Member.3392" = type { %"class.blink::MemberBase.3393" }
%"class.blink::MemberBase.3393" = type { %"class.blink::MediaError"* }
%"class.blink::MediaError" = type opaque
%"class.absl::optional.3394" = type { %"class.absl::optional_internal::optional_data.3395" }
%"class.absl::optional_internal::optional_data.3395" = type { %"class.absl::optional_internal::optional_data_base.3396" }
%"class.absl::optional_internal::optional_data_base.3396" = type { %"class.absl::optional_internal::optional_data_dtor_base.3397" }
%"class.absl::optional_internal::optional_data_dtor_base.3397" = type { i8, %union.anon.3398 }
%union.anon.3398 = type { %"class.base::ElapsedTimer" }
%"class.blink::Member.3403" = type { %"class.blink::MemberBase.3404" }
%"class.blink::MemberBase.3404" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.blink::HeapTaskRunnerTimer.3383" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.3384", { i64, i64 } }
%"class.blink::WeakMember.3384" = type { %"class.blink::MemberBase.3385" }
%"class.blink::MemberBase.3385" = type { %"class.blink::HTMLMediaElement"* }
%"class.std::__1::unique_ptr.3405" = type { %"class.std::__1::__compressed_pair.3406" }
%"class.std::__1::__compressed_pair.3406" = type { %"struct.std::__1::__compressed_pair_elem.3407" }
%"struct.std::__1::__compressed_pair_elem.3407" = type { %"class.blink::WebMediaPlayer"* }
%"class.blink::WebMediaPlayer" = type { i32 (...)** }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.3411", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.3430", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.3450" }>
%"class.base::RefCounted.3411" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.3412", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.3412" = type { %"class.std::__1::__vector_base.3413" }
%"class.std::__1::__vector_base.3413" = type { %class.scoped_refptr.3414*, %class.scoped_refptr.3414*, %"class.std::__1::__compressed_pair.3415" }
%class.scoped_refptr.3414 = type opaque
%"class.std::__1::__compressed_pair.3415" = type { %"struct.std::__1::__compressed_pair_elem.3416" }
%"struct.std::__1::__compressed_pair_elem.3416" = type { %class.scoped_refptr.3414* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.3420" }
%"class.base::flat_map.3420" = type { %"class.base::internal::flat_tree.3421" }
%"class.base::internal::flat_tree.3421" = type { %"class.std::__1::vector.3422" }
%"class.std::__1::vector.3422" = type { %"class.std::__1::__vector_base.3423" }
%"class.std::__1::__vector_base.3423" = type { %"struct.std::__1::pair.3424"*, %"struct.std::__1::pair.3424"*, %"class.std::__1::__compressed_pair.3425" }
%"struct.std::__1::pair.3424" = type opaque
%"class.std::__1::__compressed_pair.3425" = type { %"struct.std::__1::__compressed_pair_elem.3426" }
%"struct.std::__1::__compressed_pair_elem.3426" = type { %"struct.std::__1::pair.3424"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.3430" = type { %"class.std::__1::__compressed_pair.3431" }
%"class.std::__1::__compressed_pair.3431" = type { %"struct.std::__1::__compressed_pair_elem.3432" }
%"struct.std::__1::__compressed_pair_elem.3432" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.3433", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback.3438", %"class.std::__1::vector.3439" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.absl::optional.3433" = type { %"class.absl::optional_internal::optional_data.3434" }
%"class.absl::optional_internal::optional_data.3434" = type { %"class.absl::optional_internal::optional_data_base.3435" }
%"class.absl::optional_internal::optional_data_base.3435" = type { %"class.absl::optional_internal::optional_data_dtor_base.3436" }
%"class.absl::optional_internal::optional_data_dtor_base.3436" = type { i8, %union.anon.3437 }
%union.anon.3437 = type { %"class.gfx::RRectF" }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback.3438" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.3439" = type { %"class.std::__1::__vector_base.3440" }
%"class.std::__1::__vector_base.3440" = type { %"class.std::__1::unique_ptr.3441"*, %"class.std::__1::unique_ptr.3441"*, %"class.std::__1::__compressed_pair.3442" }
%"class.std::__1::unique_ptr.3441" = type opaque
%"class.std::__1::__compressed_pair.3442" = type { %"struct.std::__1::__compressed_pair_elem.3443" }
%"struct.std::__1::__compressed_pair_elem.3443" = type { %"class.std::__1::unique_ptr.3441"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.3450" = type { %"class.std::__1::__compressed_pair.3451" }
%"class.std::__1::__compressed_pair.3451" = type { %"struct.std::__1::__compressed_pair_elem.3452" }
%"struct.std::__1::__compressed_pair_elem.3452" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.3453", %"class.std::__1::vector.3453", %"class.std::__1::vector.3460" }
%"class.std::__1::vector.3453" = type { %"class.std::__1::__vector_base.3454" }
%"class.std::__1::__vector_base.3454" = type { i8**, i8**, %"class.std::__1::__compressed_pair.3455" }
%"class.std::__1::__compressed_pair.3455" = type { %"struct.std::__1::__compressed_pair_elem.3456" }
%"struct.std::__1::__compressed_pair_elem.3456" = type { i8** }
%"class.std::__1::vector.3460" = type { %"class.std::__1::__vector_base.3461" }
%"class.std::__1::__vector_base.3461" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.3462" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.3462" = type { %"struct.std::__1::__compressed_pair_elem.3463" }
%"struct.std::__1::__compressed_pair_elem.3463" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%class.scoped_refptr.3470 = type { %"class.blink::MediaSourceAttachment"* }
%"class.blink::MediaSourceAttachment" = type opaque
%"class.blink::Member.3471" = type { %"class.blink::MemberBase.3472" }
%"class.blink::MemberBase.3472" = type { %"class.blink::MediaSourceTracer"* }
%"class.blink::MediaSourceTracer" = type opaque
%"class.absl::optional.3473" = type { %"class.absl::optional_internal::optional_data.3474" }
%"class.absl::optional_internal::optional_data.3474" = type { %"class.absl::optional_internal::optional_data_base.3475" }
%"class.absl::optional_internal::optional_data_base.3475" = type { %"class.absl::optional_internal::optional_data_dtor_base.3476" }
%"class.absl::optional_internal::optional_data_dtor_base.3476" = type { i8, %union.anon.3477 }
%union.anon.3477 = type { i8 }
%"class.blink::Member.3478" = type { %"class.blink::MemberBase.3479" }
%"class.blink::MemberBase.3479" = type { %"class.blink::AudioTrackList"* }
%"class.blink::AudioTrackList" = type opaque
%"class.blink::Member.3480" = type { %"class.blink::MemberBase.3481" }
%"class.blink::MemberBase.3481" = type { %"class.blink::VideoTrackList"* }
%"class.blink::VideoTrackList" = type opaque
%"class.blink::Member.3482" = type { %"class.blink::MemberBase.3483" }
%"class.blink::MemberBase.3483" = type { %"class.blink::TextTrackList"* }
%"class.blink::TextTrackList" = type opaque
%"class.blink::HeapVector.3484" = type { %"class.WTF::Vector.3487" }
%"class.WTF::Vector.3487" = type { %"class.WTF::VectorBuffer.3488" }
%"class.WTF::VectorBuffer.3488" = type { %"class.WTF::VectorBufferBase.3489" }
%"class.WTF::VectorBufferBase.3489" = type { %"class.blink::Member.1342"*, i32, i32 }
%"class.blink::Member.3491" = type { %"class.blink::MemberBase.3492" }
%"class.blink::MemberBase.3492" = type { %"class.blink::CueTimeline"* }
%"class.blink::CueTimeline" = type opaque
%"class.blink::HeapVector.3493" = type { %"class.WTF::Vector.3496" }
%"class.WTF::Vector.3496" = type { %"class.WTF::VectorBuffer.3497" }
%"class.WTF::VectorBuffer.3497" = type { %"class.WTF::VectorBufferBase.3498" }
%"class.WTF::VectorBufferBase.3498" = type { %"class.blink::Member.3499"*, i32, i32 }
%"class.blink::Member.3499" = type { %"class.blink::MemberBase.3500" }
%"class.blink::MemberBase.3500" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.3503", i32, %"class.blink::Member.3504", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.3515", %"class.blink::SelfKeepAlive.3518" }
%"class.blink::ThreadState::PrefinalizerRegistration.3503" = type { i8 }
%"class.blink::Member.3504" = type { %"class.blink::MemberBase.3505" }
%"class.blink::MemberBase.3505" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.3508, %"class.blink::Member.3509", %"class.blink::SelfKeepAlive", %"class.util::TokenType.3513" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.3508 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.3509" = type { %"class.blink::MemberBase.3510" }
%"class.blink::MemberBase.3510" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3511" }
%"class.blink::Persistent.3511" = type { %"class.blink::PersistentBase.3512" }
%"class.blink::PersistentBase.3512" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.util::TokenType.3513" = type { %"class.base::StrongAlias.3514" }
%"class.base::StrongAlias.3514" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.3504", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.3515", %class.scoped_refptr.968 }
%"class.blink::TraceWrapperV8Reference.3515" = type { %"class.v8::TracedReference.3516" }
%"class.v8::TracedReference.3516" = type { %"class.v8::BasicTracedReference.3517" }
%"class.v8::BasicTracedReference.3517" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.3518" = type { %"class.blink::Persistent.3519" }
%"class.blink::Persistent.3519" = type { %"class.blink::PersistentBase.3520" }
%"class.blink::PersistentBase.3520" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Member.3522" = type { %"class.blink::MemberBase.3523" }
%"class.blink::MemberBase.3523" = type { %"class.blink::AudioSourceProviderClient"* }
%"class.blink::AudioSourceProviderClient" = type opaque
%"class.blink::HTMLMediaElement::AudioSourceProviderImpl" = type { %"class.blink::AudioSourceProvider", %class.scoped_refptr.3524, %"class.blink::Member.3551", %"class.WTF::Mutex" }
%"class.blink::AudioSourceProvider" = type { i32 (...)** }
%class.scoped_refptr.3524 = type { %"class.blink::WebAudioSourceProviderImpl"* }
%"class.blink::WebAudioSourceProviderImpl" = type { %"class.blink::WebAudioSourceProvider", %"class.media::SwitchableAudioRendererSink.base", double, i32, %"class.base::RepeatingCallback", %"class.blink::WebAudioSourceProviderClient"*, %"class.base::Lock", %class.scoped_refptr.3526, %"class.std::__1::unique_ptr.3527", %"class.std::__1::unique_ptr.3544", %"class.media::MediaLog"*, %"class.base::OnceCallback", %"class.base::WeakPtrFactory.3550" }
%"class.blink::WebAudioSourceProvider" = type { i32 (...)** }
%"class.media::SwitchableAudioRendererSink.base" = type { %"class.media::RestartableAudioRendererSink.base" }
%"class.media::RestartableAudioRendererSink.base" = type { %"class.media::AudioRendererSink.base" }
%"class.media::AudioRendererSink.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3525" }>
%"class.base::RefCountedThreadSafe.3525" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WebAudioSourceProviderClient" = type { i32 (...)** }
%class.scoped_refptr.3526 = type { %"class.media::SwitchableAudioRendererSink"* }
%"class.media::SwitchableAudioRendererSink" = type { %"class.media::RestartableAudioRendererSink.base", [4 x i8] }
%"class.std::__1::unique_ptr.3527" = type { %"class.std::__1::__compressed_pair.3528" }
%"class.std::__1::__compressed_pair.3528" = type { %"struct.std::__1::__compressed_pair_elem.3529" }
%"struct.std::__1::__compressed_pair_elem.3529" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.3530", i8, i64, i32, %"class.std::__1::vector.3534", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.3530" = type { %"class.std::__1::__compressed_pair.3531" }
%"class.std::__1::__compressed_pair.3531" = type { %"struct.std::__1::__compressed_pair_elem.3532" }
%"struct.std::__1::__compressed_pair_elem.3532" = type { float* }
%"class.std::__1::vector.3534" = type { %"class.std::__1::__vector_base.3535" }
%"class.std::__1::__vector_base.3535" = type { float**, float**, %"class.std::__1::__compressed_pair.3536" }
%"class.std::__1::__compressed_pair.3536" = type { %"struct.std::__1::__compressed_pair_elem.3537" }
%"struct.std::__1::__compressed_pair_elem.3537" = type { float** }
%"class.std::__1::unique_ptr.3544" = type { %"class.std::__1::__compressed_pair.3545" }
%"class.std::__1::__compressed_pair.3545" = type { %"struct.std::__1::__compressed_pair_elem.3546" }
%"struct.std::__1::__compressed_pair_elem.3546" = type { %"class.blink::WebAudioSourceProviderImpl::TeeFilter"* }
%"class.blink::WebAudioSourceProviderImpl::TeeFilter" = type opaque
%"class.media::MediaLog" = type opaque
%"class.base::WeakPtrFactory.3550" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.3551" = type { %"class.blink::MemberBase.3552" }
%"class.blink::MemberBase.3552" = type { %"class.blink::HTMLMediaElement::AudioClientImpl"* }
%"class.blink::HTMLMediaElement::AudioClientImpl" = type { %"class.blink::WebAudioSourceProviderClient", %"class.blink::Member.3522" }
%"class.blink::Member.3555" = type { %"class.blink::MemberBase.3556" }
%"class.blink::MemberBase.3556" = type { %"class.blink::AutoplayPolicy"* }
%"class.blink::AutoplayPolicy" = type <{ i32 (...)**, i8, [7 x i8], %"class.blink::Member.3559", %"class.blink::Member.1482", %"class.blink::Member.3560", %"class.absl::optional.3473", [6 x i8] }>
%"class.blink::Member.3559" = type { %"class.blink::MemberBase.3385" }
%"class.blink::Member.3560" = type { %"class.blink::MemberBase.3561" }
%"class.blink::MemberBase.3561" = type { %"class.blink::AutoplayUmaHelper"* }
%"class.blink::AutoplayUmaHelper" = type opaque
%"class.blink::WebRemotePlaybackClient" = type opaque
%"class.blink::Member.3562" = type { %"class.blink::MemberBase.3563" }
%"class.blink::MemberBase.3563" = type { %"class.blink::MediaControls"* }
%"class.blink::MediaControls" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3559" }
%"class.blink::Member.3564" = type { %"class.blink::MemberBase.3565" }
%"class.blink::MemberBase.3565" = type { %"class.blink::HTMLMediaElementControlsList"* }
%"class.blink::HTMLMediaElementControlsList" = type opaque
%"class.blink::Member.3566" = type { %"class.blink::MemberBase.3567" }
%"class.blink::MemberBase.3567" = type { %"class.blink::DisallowNewWrapper.3568"* }
%"class.blink::DisallowNewWrapper.3568" = type opaque
%"class.blink::Member.3569" = type { %"class.blink::MemberBase.3570" }
%"class.blink::MemberBase.3570" = type { %"class.blink::DisallowNewWrapper.3571"* }
%"class.blink::DisallowNewWrapper.3571" = type { %"class.blink::HeapMojoAssociatedRemoteSet" }
%"class.blink::HeapMojoAssociatedRemoteSet" = type { %"class.blink::Member.3574" }
%"class.blink::Member.3574" = type { %"class.blink::MemberBase.3575" }
%"class.blink::MemberBase.3575" = type { %"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.3576" = type { %"class.blink::MemberBase.3577" }
%"class.blink::MemberBase.3577" = type { %"class.blink::DisallowNewWrapper.3578"* }
%"class.blink::DisallowNewWrapper.3578" = type opaque
%"struct.blink::NGInlineNodeData" = type <{ %"struct.blink::NGInlineItemsData", %"class.std::__1::unique_ptr.3970", %"class.std::__1::unique_ptr.3976", i8, [7 x i8] }>
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.3933", %"class.std::__1::unique_ptr.3959", %"class.std::__1::unique_ptr.1858" }
%"class.WTF::Vector.3933" = type { %"class.WTF::VectorBuffer.3934" }
%"class.WTF::VectorBuffer.3934" = type { %"class.WTF::VectorBufferBase.3935" }
%"class.WTF::VectorBufferBase.3935" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.3936, %"class.blink::LayoutObject"*, i32, i32 }
%class.scoped_refptr.3936 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.3937", float, %"class.blink::FloatRect", %"class.WTF::Vector.3939", %class.scoped_refptr.3945, %"class.std::__1::unique_ptr.3946", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.3937" = type { %"class.base::RefCounted.3938" }
%"class.base::RefCounted.3938" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3939" = type { %"class.WTF::VectorBuffer.3940" }
%"class.WTF::VectorBuffer.3940" = type { %"class.WTF::VectorBufferBase.3941" }
%"class.WTF::VectorBufferBase.3941" = type { %class.scoped_refptr.3942*, i32, i32 }
%class.scoped_refptr.3942 = type opaque
%class.scoped_refptr.3945 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.3946" = type { %"class.std::__1::__compressed_pair.3947" }
%"class.std::__1::__compressed_pair.3947" = type { %"struct.std::__1::__compressed_pair_elem.3948" }
%"struct.std::__1::__compressed_pair_elem.3948" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.3949", i32, float }
%"class.WTF::Vector.3949" = type { %"class.WTF::VectorBuffer.3950" }
%"class.WTF::VectorBuffer.3950" = type { %"class.WTF::VectorBufferBase.3951" }
%"class.WTF::VectorBufferBase.3951" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.std::__1::unique_ptr.3959" = type { %"class.std::__1::__compressed_pair.3960" }
%"class.std::__1::__compressed_pair.3960" = type { %"struct.std::__1::__compressed_pair_elem.3961" }
%"struct.std::__1::__compressed_pair_elem.3961" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.3962", %"class.WTF::Vector.460" }
%"class.WTF::Vector.3962" = type { %"class.WTF::VectorBuffer.3963" }
%"class.WTF::VectorBuffer.3963" = type { %"class.WTF::VectorBufferBase.3964" }
%"class.WTF::VectorBufferBase.3964" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.std::__1::unique_ptr.3970" = type { %"class.std::__1::__compressed_pair.3971" }
%"class.std::__1::__compressed_pair.3971" = type { %"struct.std::__1::__compressed_pair_elem.3972" }
%"struct.std::__1::__compressed_pair_elem.3972" = type { %"struct.blink::NGInlineItemsData"* }
%"class.std::__1::unique_ptr.3976" = type { %"class.std::__1::__compressed_pair.3977" }
%"class.std::__1::__compressed_pair.3977" = type { %"struct.std::__1::__compressed_pair_elem.3978" }
%"struct.std::__1::__compressed_pair_elem.3978" = type { %"struct.blink::SvgInlineNodeData"* }
%"struct.blink::SvgInlineNodeData" = type { %"class.WTF::Vector.3979", %"class.WTF::Vector.3985", %"class.WTF::Vector.3985", %"class.WTF::HashMap.3990" }
%"class.WTF::Vector.3979" = type { %"class.WTF::VectorBuffer.3980" }
%"class.WTF::VectorBuffer.3980" = type { %"class.WTF::VectorBufferBase.3981" }
%"class.WTF::VectorBufferBase.3981" = type { %"struct.std::__1::pair.3982"*, i32, i32 }
%"struct.std::__1::pair.3982" = type opaque
%"class.WTF::Vector.3985" = type { %"class.WTF::VectorBuffer.3986" }
%"class.WTF::VectorBuffer.3986" = type { %"class.WTF::VectorBufferBase.3987" }
%"class.WTF::VectorBufferBase.3987" = type { %"struct.blink::SvgTextContentRange"*, i32, i32 }
%"struct.blink::SvgTextContentRange" = type { %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::HashMap.3990" = type { %"class.WTF::HashTable.3991" }
%"class.WTF::HashTable.3991" = type <{ %"struct.WTF::KeyValuePair.3994"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3994" = type opaque
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.3998, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.3998 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.3999, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.3999 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.4000", %class.scoped_refptr.3945, i32, i32, i32, i32, float, i32, [0 x %struct.anon.4002] }
%"class.WTF::RefCounted.4000" = type { %"class.base::RefCounted.4001" }
%"class.base::RefCounted.4001" = type { %"class.base::subtle::RefCountedBase" }
%struct.anon.4002 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.4011 }
%union.anon.4011 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGPhysicalBoxFragment" = type opaque
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.3585" }
%"class.blink::InlineBoxList.3585" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::HeapHashSet.3586" = type opaque
%"class.blink::HeapVector.3587" = type { %"class.WTF::Vector.3590" }
%"class.WTF::Vector.3590" = type { %"class.WTF::VectorBuffer.3591" }
%"class.WTF::VectorBuffer.3591" = type { %"class.WTF::VectorBufferBase.3592" }
%"class.WTF::VectorBufferBase.3592" = type { %"class.blink::Member.3593"*, i32, i32 }
%"class.blink::Member.3593" = type { %"class.blink::MemberBase.3819" }
%"class.blink::MemberBase.3819" = type { %"class.blink::NameSourceRelatedObject"* }
%"class.blink::NameSourceRelatedObject" = type { %"class.blink::WeakMember.3301", %"class.WTF::String" }
%"class.blink::HeapVector.3595" = type { %"class.WTF::Vector.3598" }
%"class.WTF::Vector.3598" = type { %"class.WTF::VectorBuffer.3599" }
%"class.WTF::VectorBuffer.3599" = type { %"class.WTF::VectorBufferBase.3600" }
%"class.WTF::VectorBufferBase.3600" = type { %"class.blink::NameSource"*, i32, i32 }
%"class.blink::NameSource" = type { %"class.WTF::String", i8, i8, i32, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString", i32, %"class.blink::HeapVector.3587" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.3584 }
%union.anon.3584 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::LayoutListMarker" = type <{ %"class.blink::LayoutBox", %"class.WTF::String", %"class.blink::Persistent.306", %"class.blink::LayoutUnit", [4 x i8] }>
%"class.blink::HTMLAreaElement" = type <{ %"class.blink::HTMLAnchorElement", %"class.std::__1::unique_ptr.689", %"class.WTF::Vector.595", i32, [4 x i8] }>
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.3602", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Member.3602" = type { %"class.blink::MemberBase.3603" }
%"class.blink::MemberBase.3603" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::HTMLSelectElement" = type <{ %"class.blink::HTMLFormControlElementWithState.base", [2 x i8], %"class.blink::TypeAheadDataSource", %"class.blink::HeapVector.3604", %"class.blink::TypeAhead", i32, [4 x i8], %"class.blink::Member.3628", %"class.blink::Member.3628", i8, i8, i8, i8, [4 x i8], %"class.blink::Member.3630", i32, [4 x i8] }>
%"class.blink::TypeAheadDataSource" = type { i32 (...)** }
%"class.blink::HeapVector.3604" = type { %"class.WTF::Vector.3607" }
%"class.WTF::Vector.3607" = type { %"class.WTF::VectorBuffer.3608" }
%"class.WTF::VectorBuffer.3608" = type { %"class.WTF::VectorBufferBase.3609" }
%"class.WTF::VectorBufferBase.3609" = type { %"class.blink::Member.3610"*, i32, i32 }
%"class.blink::Member.3610" = type opaque
%"class.blink::TypeAhead" = type { %"class.blink::TypeAheadDataSource"*, %"class.absl::optional.3612", i16, [6 x i8], %"class.WTF::StringBuilder" }
%"class.absl::optional.3612" = type { %"class.absl::optional_internal::optional_data.3613" }
%"class.absl::optional_internal::optional_data.3613" = type { %"class.absl::optional_internal::optional_data_base.3614" }
%"class.absl::optional_internal::optional_data_base.3614" = type { %"class.absl::optional_internal::optional_data_dtor_base.3615" }
%"class.absl::optional_internal::optional_data_dtor_base.3615" = type { i8, %union.anon.3616 }
%union.anon.3616 = type { %"class.base::TimeTicks" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.3617, i32, i8, i8, [2 x i8] }>
%union.anon.3617 = type { %"class.WTF::Vector.3618" }
%"class.WTF::Vector.3618" = type { %"class.WTF::VectorBuffer.3619" }
%"class.WTF::VectorBuffer.3619" = type { %"class.WTF::VectorBufferBase.3620", [16 x i8] }
%"class.WTF::VectorBufferBase.3620" = type { i8*, i32, i32 }
%"class.blink::Member.3628" = type { %"class.blink::MemberBase.3629" }
%"class.blink::MemberBase.3629" = type { %"class.blink::HTMLOptionElement"* }
%"class.blink::Member.3630" = type { %"class.blink::MemberBase.3631" }
%"class.blink::MemberBase.3631" = type { %"class.blink::SelectType"* }
%"class.blink::SelectType" = type opaque
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.4012", %"class.blink::Member.4014", %"class.blink::Member.4016", %"class.blink::Member.4035", %"class.blink::Member.4037" }
%"class.blink::Member.4012" = type { %"class.blink::MemberBase.4013" }
%"class.blink::MemberBase.4013" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.4014" = type { %"class.blink::MemberBase.4015" }
%"class.blink::MemberBase.4015" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.4016" = type { %"class.blink::MemberBase.4017" }
%"class.blink::MemberBase.4017" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.4020", %"class.blink::HeapHashSet.4029" }
%"class.blink::HeapVector.4020" = type { %"class.WTF::Vector.4023" }
%"class.WTF::Vector.4023" = type { %"class.WTF::VectorBuffer.4024" }
%"class.WTF::VectorBuffer.4024" = type { %"class.WTF::VectorBufferBase.4025" }
%"class.WTF::VectorBufferBase.4025" = type { %"class.blink::Member.4026"*, i32, i32 }
%"class.blink::Member.4026" = type { %"class.blink::MemberBase.4027" }
%"class.blink::MemberBase.4027" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.4029" = type { %"class.WTF::HashSet.4032" }
%"class.WTF::HashSet.4032" = type { %"class.WTF::HashTable.4033" }
%"class.WTF::HashTable.4033" = type <{ %"class.blink::Member.4026"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.4035" = type { %"class.blink::MemberBase.4036" }
%"class.blink::MemberBase.4036" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.4037" = type { %"class.blink::MemberBase.4038" }
%"class.blink::MemberBase.4038" = type { %"class.blink::HeapHashSet.4039"* }
%"class.blink::HeapHashSet.4039" = type opaque
%"class.blink::HTMLLabelElement" = type <{ %"class.blink::HTMLElement", i8, [7 x i8] }>
%"class.blink::HTMLImageElement" = type { %"class.blink::HTMLElement", %"class.blink::ImageElementBase", %"class.blink::ActiveScriptWrappable.3647", %"class.blink::FormAssociated", %"class.blink::Member.3648", %"class.blink::Member.3681", %"class.blink::Member.3365", %"class.WTF::AtomicString", float, %"class.blink::Member.3403", i8, i8, i32, %"class.std::__1::unique_ptr.3683" }
%"class.blink::ImageElementBase" = type { %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", i32, i32 }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable.3647" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.3681" = type { %"class.blink::MemberBase.3682" }
%"class.blink::MemberBase.3682" = type { %"class.blink::HTMLImageElement::ViewportChangeListener"* }
%"class.blink::HTMLImageElement::ViewportChangeListener" = type opaque
%"class.std::__1::unique_ptr.3683" = type { %"class.std::__1::__compressed_pair.3684" }
%"class.std::__1::__compressed_pair.3684" = type { %"struct.std::__1::__compressed_pair_elem.3685" }
%"struct.std::__1::__compressed_pair_elem.3685" = type { %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* }
%"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics" = type { i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::HTMLTableElement" = type { %"class.blink::HTMLElement", i8, i8, i8, i32, i16, %"class.blink::Member.354" }
%"class.blink::HTMLTableSectionElement" = type opaque
%"class.blink::HTMLTableCaptionElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLTableRowsCollection" = type { %"class.blink::HTMLCollection" }
%"class.blink::HTMLCollection" = type { %"class.blink::ScriptWrappable", %"class.blink::LiveNodeListBase.base", i8, %"class.blink::Member.3634", %"class.blink::CollectionItemsCache" }
%"class.blink::LiveNodeListBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", i16 }>
%"class.blink::Member.3634" = type { %"class.blink::MemberBase.3635" }
%"class.blink::MemberBase.3635" = type { %"class.blink::HTMLCollection::NamedItemCache"* }
%"class.blink::HTMLCollection::NamedItemCache" = type { %"class.blink::HeapHashMap.3638", %"class.blink::HeapHashMap.3638" }
%"class.blink::HeapHashMap.3638" = type { %"class.WTF::HashMap.3641" }
%"class.WTF::HashMap.3641" = type { %"class.WTF::HashTable.3642" }
%"class.WTF::HashTable.3642" = type <{ %"struct.WTF::KeyValuePair.3644"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3644" = type { %"class.WTF::StringImpl"*, %"class.blink::Member.3645" }
%"class.blink::Member.3645" = type { %"class.blink::MemberBase.3646" }
%"class.blink::MemberBase.3646" = type { %"class.blink::HeapVector.365"* }
%"class.blink::CollectionItemsCache" = type { %"class.blink::CollectionIndexCache", i8, %"class.blink::HeapVector.365" }
%"class.blink::CollectionIndexCache" = type { i32 (...)**, %"class.blink::Member.343", i32, i32 }
%"class.blink::HTMLTableRowElement" = type { %"class.blink::HTMLTablePartElement" }
%"class.blink::HTMLTablePartElement" = type { %"class.blink::HTMLElement" }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::HTMLTableCellElement" = type { %"class.blink::HTMLTablePartElement" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.4040" }
%"class.WTF::Vector.4040" = type { %"class.WTF::VectorBuffer.4041" }
%"class.WTF::VectorBuffer.4041" = type { %"class.WTF::VectorBufferBase.4042", [64 x i8] }
%"class.WTF::VectorBufferBase.4042" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.blink::AccessibleNode" = type { %"class.blink::EventTargetWithInlineData", %"class.WTF::Vector.3689", %"class.WTF::Vector.3695", %"class.WTF::Vector.3701", %"class.WTF::Vector.3707", %"class.WTF::Vector.3713", %"class.blink::HeapVector.3719", %"class.blink::HeapVector.3727", %"class.blink::Member.343", %"class.blink::Member.326", %"class.blink::HeapVector.3735", %"class.blink::Member.3741" }
%"class.WTF::Vector.3689" = type { %"class.WTF::VectorBuffer.3690" }
%"class.WTF::VectorBuffer.3690" = type { %"class.WTF::VectorBufferBase.3691" }
%"class.WTF::VectorBufferBase.3691" = type { %"struct.std::__1::pair.3692"*, i32, i32 }
%"struct.std::__1::pair.3692" = type opaque
%"class.WTF::Vector.3695" = type { %"class.WTF::VectorBuffer.3696" }
%"class.WTF::VectorBuffer.3696" = type { %"class.WTF::VectorBufferBase.3697" }
%"class.WTF::VectorBufferBase.3697" = type { %"struct.std::__1::pair.3698"*, i32, i32 }
%"struct.std::__1::pair.3698" = type opaque
%"class.WTF::Vector.3701" = type { %"class.WTF::VectorBuffer.3702" }
%"class.WTF::VectorBuffer.3702" = type { %"class.WTF::VectorBufferBase.3703" }
%"class.WTF::VectorBufferBase.3703" = type { %"struct.std::__1::pair.3704"*, i32, i32 }
%"struct.std::__1::pair.3704" = type opaque
%"class.WTF::Vector.3707" = type { %"class.WTF::VectorBuffer.3708" }
%"class.WTF::VectorBuffer.3708" = type { %"class.WTF::VectorBufferBase.3709" }
%"class.WTF::VectorBufferBase.3709" = type { %"struct.std::__1::pair.3710"*, i32, i32 }
%"struct.std::__1::pair.3710" = type opaque
%"class.WTF::Vector.3713" = type { %"class.WTF::VectorBuffer.3714" }
%"class.WTF::VectorBuffer.3714" = type { %"class.WTF::VectorBufferBase.3715" }
%"class.WTF::VectorBufferBase.3715" = type { %"struct.std::__1::pair.3716"*, i32, i32 }
%"struct.std::__1::pair.3716" = type opaque
%"class.blink::HeapVector.3719" = type { %"class.WTF::Vector.3722" }
%"class.WTF::Vector.3722" = type { %"class.WTF::VectorBuffer.3723" }
%"class.WTF::VectorBuffer.3723" = type { %"class.WTF::VectorBufferBase.3724" }
%"class.WTF::VectorBufferBase.3724" = type { %"struct.std::__1::pair.3725"*, i32, i32 }
%"struct.std::__1::pair.3725" = type opaque
%"class.blink::HeapVector.3727" = type { %"class.WTF::Vector.3730" }
%"class.WTF::Vector.3730" = type { %"class.WTF::VectorBuffer.3731" }
%"class.WTF::VectorBuffer.3731" = type { %"class.WTF::VectorBufferBase.3732" }
%"class.WTF::VectorBufferBase.3732" = type { %"struct.std::__1::pair.3733"*, i32, i32 }
%"struct.std::__1::pair.3733" = type opaque
%"class.blink::HeapVector.3735" = type { %"class.WTF::Vector.3738" }
%"class.WTF::Vector.3738" = type { %"class.WTF::VectorBuffer.3739" }
%"class.WTF::VectorBuffer.3739" = type { %"class.WTF::VectorBufferBase.3740" }
%"class.WTF::VectorBufferBase.3740" = type { %"class.blink::Member.3741"*, i32, i32 }
%"class.blink::Member.3741" = type { %"class.blink::MemberBase.3742" }
%"class.blink::MemberBase.3742" = type { %"class.blink::AccessibleNode"* }
%"class.blink::HeapVector.3744" = type opaque
%"class.WTF::Vector.3745" = type { %"class.WTF::VectorBuffer.3746" }
%"class.WTF::VectorBuffer.3746" = type { %"class.WTF::VectorBufferBase.2038" }
%"class.WTF::Vector.3749" = type opaque
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.3750", %"class.std::__1::vector.3758", %"class.std::__1::vector.3766", %"class.std::__1::vector.3774", %"class.std::__1::vector.3782", %"class.std::__1::vector.3790", %"class.std::__1::vector.3798", %"class.std::__1::vector.3806", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.3750" = type { %"class.std::__1::__vector_base.3751" }
%"class.std::__1::__vector_base.3751" = type { %"struct.std::__1::pair.3752"*, %"struct.std::__1::pair.3752"*, %"class.std::__1::__compressed_pair.3753" }
%"struct.std::__1::pair.3752" = type opaque
%"class.std::__1::__compressed_pair.3753" = type { %"struct.std::__1::__compressed_pair_elem.3754" }
%"struct.std::__1::__compressed_pair_elem.3754" = type { %"struct.std::__1::pair.3752"* }
%"class.std::__1::vector.3758" = type { %"class.std::__1::__vector_base.3759" }
%"class.std::__1::__vector_base.3759" = type { %"struct.std::__1::pair.3760"*, %"struct.std::__1::pair.3760"*, %"class.std::__1::__compressed_pair.3761" }
%"struct.std::__1::pair.3760" = type opaque
%"class.std::__1::__compressed_pair.3761" = type { %"struct.std::__1::__compressed_pair_elem.3762" }
%"struct.std::__1::__compressed_pair_elem.3762" = type { %"struct.std::__1::pair.3760"* }
%"class.std::__1::vector.3766" = type { %"class.std::__1::__vector_base.3767" }
%"class.std::__1::__vector_base.3767" = type { %"struct.std::__1::pair.3768"*, %"struct.std::__1::pair.3768"*, %"class.std::__1::__compressed_pair.3769" }
%"struct.std::__1::pair.3768" = type opaque
%"class.std::__1::__compressed_pair.3769" = type { %"struct.std::__1::__compressed_pair_elem.3770" }
%"struct.std::__1::__compressed_pair_elem.3770" = type { %"struct.std::__1::pair.3768"* }
%"class.std::__1::vector.3774" = type { %"class.std::__1::__vector_base.3775" }
%"class.std::__1::__vector_base.3775" = type { %"struct.std::__1::pair.3776"*, %"struct.std::__1::pair.3776"*, %"class.std::__1::__compressed_pair.3777" }
%"struct.std::__1::pair.3776" = type opaque
%"class.std::__1::__compressed_pair.3777" = type { %"struct.std::__1::__compressed_pair_elem.3778" }
%"struct.std::__1::__compressed_pair_elem.3778" = type { %"struct.std::__1::pair.3776"* }
%"class.std::__1::vector.3782" = type { %"class.std::__1::__vector_base.3783" }
%"class.std::__1::__vector_base.3783" = type { %"struct.std::__1::pair.3784"*, %"struct.std::__1::pair.3784"*, %"class.std::__1::__compressed_pair.3785" }
%"struct.std::__1::pair.3784" = type opaque
%"class.std::__1::__compressed_pair.3785" = type { %"struct.std::__1::__compressed_pair_elem.3786" }
%"struct.std::__1::__compressed_pair_elem.3786" = type { %"struct.std::__1::pair.3784"* }
%"class.std::__1::vector.3790" = type { %"class.std::__1::__vector_base.3791" }
%"class.std::__1::__vector_base.3791" = type { %"struct.std::__1::pair.3792"*, %"struct.std::__1::pair.3792"*, %"class.std::__1::__compressed_pair.3793" }
%"struct.std::__1::pair.3792" = type opaque
%"class.std::__1::__compressed_pair.3793" = type { %"struct.std::__1::__compressed_pair_elem.3794" }
%"struct.std::__1::__compressed_pair_elem.3794" = type { %"struct.std::__1::pair.3792"* }
%"class.std::__1::vector.3798" = type { %"class.std::__1::__vector_base.3799" }
%"class.std::__1::__vector_base.3799" = type { %"struct.std::__1::pair.3800"*, %"struct.std::__1::pair.3800"*, %"class.std::__1::__compressed_pair.3801" }
%"struct.std::__1::pair.3800" = type opaque
%"class.std::__1::__compressed_pair.3801" = type { %"struct.std::__1::__compressed_pair_elem.3802" }
%"struct.std::__1::__compressed_pair_elem.3802" = type { %"struct.std::__1::pair.3800"* }
%"class.std::__1::vector.3806" = type { %"class.std::__1::__vector_base.3807" }
%"class.std::__1::__vector_base.3807" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3808" }
%"class.std::__1::__compressed_pair.3808" = type { %"struct.std::__1::__compressed_pair_elem.3809" }
%"struct.std::__1::__compressed_pair_elem.3809" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.3813" }
%"class.std::__1::unique_ptr.3813" = type { %"class.std::__1::__compressed_pair.3814" }
%"class.std::__1::__compressed_pair.3814" = type { %"struct.std::__1::__compressed_pair_elem.3815" }
%"struct.std::__1::__compressed_pair_elem.3815" = type { %"class.gfx::Transform"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking.4096" = type { i8 }
%"class.blink::HeapVectorBacking.4105" = type { i8 }

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF15ConstructTraitsIN5blink13IgnoredReasonENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_13IgnoredReasonEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_ = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv = comdat any

$_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN4absl17optional_internal18optional_data_baseIN3WTF6StringEE6assignIRA2_KcEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8AXObjectEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = comdat any

$_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink14AXLayoutObjectE = hidden unnamed_addr constant { [166 x i8*] } { [166 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AXLayoutObject"*)* @_ZN5blink14AXLayoutObjectD2Ev to i8*), i8* bitcast (void (%"class.blink::AXLayoutObject"*)* @_ZN5blink14AXLayoutObjectD0Ev to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::Visitor"*)* @_ZNK5blink12AXNodeObject5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::AXObject"*)* @_ZN5blink12AXNodeObject4InitEPNS_8AXObjectE to i8*), i8* bitcast (void (%"class.blink::AXLayoutObject"*)* @_ZN5blink14AXLayoutObject6DetachEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, i32, i8*)* @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb to i8*), i8* bitcast (%"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17GetAccessibleNodeEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsImageMapLinkEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject14IsAXNodeObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject16IsAXLayoutObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsAXInlineTextBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject6IsListEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsAXListBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsAXListBoxOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsMenuListEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16IsMenuListOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsMenuListPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12IsMockObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19IsProgressIndicatorEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsAXRadioInputEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8IsSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsValidationMessageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsVirtualObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsControlEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsDefaultEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsFieldsetEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12IsInputImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13IsNativeImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject18IsNativeSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject14IsNativeSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12IsSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19IsAutofillAvailableEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11IsClickableEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsExpandedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsFocusedEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsGrabbedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsHoveredEv to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject20IsLineBreakingObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject8IsLinkedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8IsLoadedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7IsModalEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17IsMultiSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject11IsOffScreenEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsRequiredEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsSelectedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19IsSelectedFromFocusEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject22IsSelectedOptionActiveEv to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject19IsNotUserSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsVisibleEv to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject9IsVisitedEv to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3354"*)* @_ZNK5blink14AXLayoutObject29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3354"*)* @_ZNK5blink14AXLayoutObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32*, %"class.blink::HeapVector.3257"*)* @_ZNK5blink12AXNodeObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector.3257"*)* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector.3744"*, %"class.blink::HeapVector.3587"*)* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32)* @_ZNK5blink12AXNodeObject11PlaceholderEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32)* @_ZNK5blink12AXNodeObject5TitleEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXLayoutObject"*, i1, i1, %"class.blink::HeapHashSet.3586"*, i32*, %"class.blink::HeapVector.3587"*, %"class.blink::HeapVector.3595"*)* @_ZNK5blink14AXLayoutObject15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3586"*, i1)* @_ZNK5blink12AXNodeObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEb to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9AccessKeyEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15BackgroundColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8GetColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10ColorValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject24CanvasHasFallbackContentEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject18ComputedFontFamilyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject26FontFamilyForSerializationEv to i8*), i8* bitcast (float (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8FontSizeEv to i8*), i8* bitcast (float (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10FontWeightEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12HeadingLevelEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17HierarchicalLevelEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::IntSize"*)* @_ZNK5blink12AXNodeObject12ImageDataUrlERKNS_7IntSizeE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject16InPageLinkTargetEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11OrientationEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject12GetListStyleEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12GetTextAlignEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject16GetTextDirectionEv to i8*), i8* bitcast (float (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13GetTextIndentEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15GetTextPositionEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, i32*, i32*, i32*, i32*)* @_ZNK5blink12AXNodeObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_ to i8*), i8* bitcast (void (%"class.blink::HeapVector.3257"*, %"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19RadioButtonsInGroupEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject3UrlEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12ChooserPopupEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject28LoadInlineTextBoxesRecursiveEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject10NextOnLineEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject14PreviousOnLineEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.3745"*)* @_ZNK5blink8AXObject20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.3745"*, %"class.WTF::Vector.3745"*)* @_ZNK5blink8AXObject17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_ to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10TextLengthEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*, i32)* @_ZNK5blink12AXNodeObject29TextOffsetInFormattingContextEi to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject21TextOffsetInContainerEi to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19GetAriaCurrentStateEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15GetInvalidStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject16AriaInvalidValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject13ValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject16MaxValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject16MinValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject17StepValueForRangeEPf to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject18GetValueForControlEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject46SlowGetValueForControlIncludingContentEditableEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11RestrictionEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject26DetermineAccessibilityRoleEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17AriaRoleAttributeEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject16ActiveDescendantEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12AutoCompleteEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.3257"*)* @_ZNK5blink12AXNodeObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.3257"*)* @_ZNK5blink12AXNodeObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12ErrorMessageEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8HasPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject14IsEditableRootEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject30HasContentEditableAttributeSetEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject20SupportsARIADraggingEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.WTF::Vector.3749"*)* @_ZNK5blink12AXNodeObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8PosInSetEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject7SetSizeEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16LiveRegionStatusEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18LiveRegionRelevantEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)* @_ZNK5blink12AXNodeObject17GetRelativeBoundsEPPNS_8AXObjectERNS_9FloatRectER10SkMatrix44Pb to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXLayoutObject"*, %"class.blink::IntPoint"*)* @_ZNK5blink14AXLayoutObject20AccessibilityHitTestERKNS_8IntPointE to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15CanHaveChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13ClearChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.3257"*)* @_ZNK5blink12AXNodeObject15SelectedOptionsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (double (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject24EstimatedLoadingProgressEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12RootScrollerEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject7GetNodeEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject15GetLayoutObjectEv to i8*), i8* bitcast (%"class.blink::Document"* (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject11GetDocumentEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13AnchorElementEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13ActionElementEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8LanguageEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink12AXNodeObject12HasAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink12AXNodeObject12GetAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (i1 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject11IsDataTableEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject11ColumnCountEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject8RowCountEv to i8*), i8* bitcast (void (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3257"*)* @_ZNK5blink14AXLayoutObject13ColumnHeadersERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3257"*)* @_ZNK5blink14AXLayoutObject10RowHeadersERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXLayoutObject"*, i32, i32)* @_ZNK5blink14AXLayoutObject19CellForColumnAndRowEjj to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject11ColumnIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject8RowIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject10ColumnSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject7RowSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject16GetSortDirectionEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject12HeaderObjectEv to i8*), i8* bitcast (%"class.blink::ScrollableArea"* (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject29GetScrollableAreaIfScrollableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject23OnNativeDecrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject19OnNativeClickActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject19OnNativeFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject23OnNativeIncrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, i1)* @_ZN5blink8AXObject25OnNativeSetSelectedActionEb to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, %"class.WTF::String"*)* @_ZN5blink12AXNodeObject22OnNativeSetValueActionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject15ChildrenChangedEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject29HandleActiveDescendantChangedEv to i8*), i8* bitcast (void (%"class.blink::AXLayoutObject"*, i32)* @_ZN5blink14AXLayoutObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject25HandleAriaExpandedChangedEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject16SelectionChangedEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject22NativeRoleIgnoringAriaEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject11AddChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"struct.ui::AXNodeData"*)* @_ZNK5blink12AXNodeObject25SerializeMarkerAttributesEPN2ui10AXNodeDataE to i8*), i8* bitcast (i32 (%"class.blink::AXLayoutObject"*)* @_ZNK5blink14AXLayoutObject26RoleFromLayoutObjectOrNodeEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17IsTabItemSelectedEv to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"disc\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"circle\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"square\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"decimal\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"decimal-leading-zero\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [2 x i8] c" \00", align 1
@__const._ZNK5blink14AXLayoutObject20AccessibilityHitTestERKNS_8IntPointE.location = private unnamed_addr constant %"class.blink::HitTestLocation" <{ %"struct.blink::PhysicalOffset" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"struct.blink::PhysicalRect" { %"struct.blink::PhysicalOffset" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"struct.blink::PhysicalSize" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } } }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatQuad" { %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, align 4
@_ZN5blink10html_names6kThTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kScopeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.8 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"ascending\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"descending\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@_ZN5blink10html_names8kMenuTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kUlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kOlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = linkonce_odr hidden local_unnamed_addr global %"class.blink::IntRect" zeroinitializer, comdat, align 4
@_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = linkonce_odr hidden global i64 0, comdat, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names6kLiTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kCanvasTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kATagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.14 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.15 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.17 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.19 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.20 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_13IgnoredReasonENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [136 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::IgnoredReason, WTF::VectorTraits<blink::IgnoredReason> >]\00", align 1
@_ZN5blink10html_names8kHTMLTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kAudioTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kVideoTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink9svg_names5kGTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_10NameSourceENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [130 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::NameSource, WTF::VectorTraits<blink::NameSource> >]\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink10html_names8kAreaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kLabelTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTableTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kColTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kColgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8AXObjectEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::AXObject>, WTF::VectorTraits<blink::Member<blink::AXObject> > >]\00", align 1

@_ZN5blink14AXLayoutObjectC1EPNS_12LayoutObjectERNS_17AXObjectCacheImplE = hidden unnamed_addr alias void (%"class.blink::AXLayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::AXObjectCacheImpl"*), void (%"class.blink::AXLayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::AXObjectCacheImpl"*)* @_ZN5blink14AXLayoutObjectC2EPNS_12LayoutObjectERNS_17AXObjectCacheImplE
@_ZN5blink14AXLayoutObjectD1Ev = hidden unnamed_addr alias void (%"class.blink::AXLayoutObject"*), void (%"class.blink::AXLayoutObject"*)* @_ZN5blink14AXLayoutObjectD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AXLayoutObjectC2EPNS_12LayoutObjectERNS_17AXObjectCacheImplE(%"class.blink::AXLayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::AXObjectCacheImpl"* dereferenceable(456)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 16777216
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  br label %13

13:                                               ; preds = %3, %10
  %14 = phi %"class.blink::Node"* [ %12, %10 ], [ null, %3 ]
  tail call void @_ZN5blink12AXNodeObjectC2EPNS_4NodeERNS_17AXObjectCacheImplE(%"class.blink::AXNodeObject"* %4, %"class.blink::Node"* %14, %"class.blink::AXObjectCacheImpl"* dereferenceable(456) %2) #13
  %15 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [166 x i8*] }, { [166 x i8*] }* @_ZTVN5blink14AXLayoutObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %16, align 8
  ret void
}

declare void @_ZN5blink12AXNodeObjectC2EPNS_4NodeERNS_17AXObjectCacheImplE(%"class.blink::AXNodeObject"*, %"class.blink::Node"*, %"class.blink::AXObjectCacheImpl"* dereferenceable(456)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AXLayoutObjectD2Ev(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [166 x i8*] }, { [166 x i8*] }* @_ZTVN5blink14AXLayoutObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0
  tail call void @_ZN5blink12AXNodeObjectD2Ev(%"class.blink::AXNodeObject"* %3) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12AXNodeObjectD2Ev(%"class.blink::AXNodeObject"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AXLayoutObjectD0Ev(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [166 x i8*] }, { [166 x i8*] }* @_ZTVN5blink14AXLayoutObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0
  tail call void @_ZN5blink12AXNodeObjectD2Ev(%"class.blink::AXNodeObject"* %3) #13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZNK5blink14AXLayoutObject15GetLayoutObjectEv(%"class.blink::AXLayoutObject"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  ret %"class.blink::LayoutObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink28IsProgrammaticallyScrollableEPNS_9LayoutBoxE(%"class.blink::LayoutBox"*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 74
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 7
  switch i32 %15, label %16 [
    i32 5, label %24
    i32 2, label %24
  ]

16:                                               ; preds = %7
  %17 = tail call i32 @_ZNK5blink9LayoutBox23PixelSnappedScrollWidthEv(%"class.blink::LayoutBox"* %0) #13
  %18 = tail call i32 @_ZNK5blink9LayoutBox23PixelSnappedClientWidthEv(%"class.blink::LayoutBox"* %0) #13
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = tail call i32 @_ZNK5blink9LayoutBox24PixelSnappedScrollHeightEv(%"class.blink::LayoutBox"* %0) #13
  %22 = tail call i32 @_ZNK5blink9LayoutBox24PixelSnappedClientHeightEv(%"class.blink::LayoutBox"* %0) #13
  %23 = icmp ne i32 %21, %22
  br label %24

24:                                               ; preds = %7, %7, %1, %20, %16
  %25 = phi i1 [ false, %7 ], [ true, %16 ], [ %23, %20 ], [ false, %1 ], [ false, %7 ]
  ret i1 %25
}

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedScrollWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedScrollHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ScrollableArea"* @_ZNK5blink14AXLayoutObject29GetScrollableAreaIfScrollableEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %3 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %2) #13
  %4 = icmp eq i32 %3, 145
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8AXObject17DocumentFrameViewEv(%"class.blink::AXObject"* %2) #13
  %7 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"* %6) #13
  %8 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %7, i64 0, i32 0
  br label %47

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = icmp eq %"class.blink::LayoutObject"* %11, null
  br i1 %12, label %47, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = and i96 %16, 67108864
  %18 = icmp eq i96 %17, 0
  br i1 %18, label %47, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::LayoutObject"* %11 to %"class.blink::LayoutBox"*
  %21 = bitcast %"class.blink::LayoutObject"* %11 to %"class.blink::LayoutBoxModelObject"*
  %22 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* nonnull %21) #13
  %23 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %22, i64 0, i32 0
  %24 = icmp eq %"class.blink::PaintLayerScrollableArea"* %22, null
  br i1 %24, label %46, label %25

25:                                               ; preds = %19
  %26 = load i96, i96* %15, align 4
  %27 = and i96 %26, 8589934592
  %28 = icmp eq i96 %27, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 5, i32 0
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 9
  %33 = bitcast [20 x i8]* %32 to i160*
  %34 = load i160, i160* %33, align 8
  %35 = lshr i160 %34, 74
  %36 = trunc i160 %35 to i32
  %37 = and i32 %36, 7
  switch i32 %37, label %38 [
    i32 5, label %46
    i32 2, label %46
  ]

38:                                               ; preds = %29
  %39 = tail call i32 @_ZNK5blink9LayoutBox23PixelSnappedScrollWidthEv(%"class.blink::LayoutBox"* nonnull %20) #13
  %40 = tail call i32 @_ZNK5blink9LayoutBox23PixelSnappedClientWidthEv(%"class.blink::LayoutBox"* nonnull %20) #13
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = tail call i32 @_ZNK5blink9LayoutBox24PixelSnappedScrollHeightEv(%"class.blink::LayoutBox"* nonnull %20) #13
  %44 = tail call i32 @_ZNK5blink9LayoutBox24PixelSnappedClientHeightEv(%"class.blink::LayoutBox"* nonnull %20) #13
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %42, %25, %29, %29, %19
  br label %47

47:                                               ; preds = %42, %13, %38, %46, %9, %5
  %48 = phi %"class.blink::ScrollableArea"* [ %8, %5 ], [ null, %9 ], [ null, %13 ], [ null, %46 ], [ %23, %42 ], [ %23, %38 ]
  ret %"class.blink::ScrollableArea"* %48
}

declare %"class.blink::LocalFrameView"* @_ZNK5blink8AXObject17DocumentFrameViewEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14AXLayoutObject26RoleFromLayoutObjectOrNodeEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %2) #13
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 48
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kLiTagE, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %15 = bitcast %"class.blink::Member.318"* %14 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %10
  %23 = tail call fastcc zeroext i1 @_ZN5blinkL20ShouldIgnoreListItemEPNS_4NodeE(%"class.blink::Node"* nonnull %3)
  %24 = select i1 %23, i32 0, i32 116
  br label %262

25:                                               ; preds = %5, %1, %10
  %26 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = bitcast %"class.blink::LayoutObject"* %27 to i1 (%"class.blink::LayoutObject"*, i32)***
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, i64 92
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %27, i32 15) #13
  br i1 %32, label %48, label %33

33:                                               ; preds = %25
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %28, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, i64 92
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* %27, i32 13) #13
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %28, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, i64 92
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* %27, i32 36) #13
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %28, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, i64 92
  %46 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.blink::LayoutObject"* %27, i32 28) #13
  br i1 %47, label %48, label %50

48:                                               ; preds = %38, %43, %33, %25
  %49 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  br label %56

50:                                               ; preds = %43
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %28, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, i64 92
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::LayoutObject"* %27, i32 31) #13
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  br i1 %54, label %56, label %96

56:                                               ; preds = %48, %50
  %57 = phi %"class.blink::LayoutObject"* [ %49, %48 ], [ %55, %50 ]
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = and i96 %60, 16777216
  %62 = icmp eq i96 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 6, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %75, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.blink::Node"* %65 to i8 (%"class.blink::Node"*)***
  %69 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %68, align 8
  %70 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %69, i64 34
  %71 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %70, align 8
  %72 = tail call zeroext i8 %71(%"class.blink::Node"* nonnull %65) #13
  %73 = icmp ne i8 %72, 0
  %74 = load i96, i96* %59, align 4
  br label %75

75:                                               ; preds = %67, %63, %56
  %76 = phi i96 [ %60, %63 ], [ %74, %67 ], [ %60, %56 ]
  %77 = phi i1 [ false, %63 ], [ %73, %67 ], [ false, %56 ]
  %78 = and i96 %76, 16777216
  %79 = icmp eq i96 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 6, i32 0, i32 0
  %82 = load %"class.blink::Node"*, %"class.blink::Node"** %81, align 8
  br label %83

83:                                               ; preds = %80, %75
  %84 = phi %"class.blink::Node"* [ %82, %80 ], [ null, %75 ]
  br i1 %77, label %85, label %90

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %84, i64 0, i32 2, i32 0, i32 0
  %87 = bitcast %"class.blink::Node"** %86 to %"class.blink::ContainerNode"**
  %88 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %88, i64 0, i32 0
  br label %90

90:                                               ; preds = %83, %85
  %91 = phi %"class.blink::Node"* [ %89, %85 ], [ %84, %83 ]
  %92 = icmp eq %"class.blink::Node"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %90
  %94 = tail call fastcc zeroext i1 @_ZN5blinkL20ShouldIgnoreListItemEPNS_4NodeE(%"class.blink::Node"* nonnull %91)
  br i1 %94, label %262, label %95

95:                                               ; preds = %90, %93
  br label %262

96:                                               ; preds = %50
  %97 = bitcast %"class.blink::LayoutObject"* %55 to i1 (%"class.blink::LayoutObject"*, i32)***
  %98 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %97, align 8
  %99 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %98, i64 92
  %100 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %99, align 8
  %101 = tail call zeroext i1 %100(%"class.blink::LayoutObject"* %55, i32 14) #13
  br i1 %101, label %262, label %102

102:                                              ; preds = %96
  %103 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %97, align 8
  %104 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %103, i64 92
  %105 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %104, align 8
  %106 = tail call zeroext i1 %105(%"class.blink::LayoutObject"* %55, i32 29) #13
  br i1 %106, label %262, label %107

107:                                              ; preds = %102
  %108 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %109 = bitcast %"class.blink::LayoutObject"* %108 to i1 (%"class.blink::LayoutObject"*, i32)***
  %110 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %109, align 8
  %111 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %110, i64 92
  %112 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %111, align 8
  %113 = tail call zeroext i1 %112(%"class.blink::LayoutObject"* %108, i32 0) #13
  br i1 %113, label %262, label %114

114:                                              ; preds = %107
  %115 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %116 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %115, i64 0, i32 4
  %117 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %116 to i96*
  %118 = load i96, i96* %117, align 4
  %119 = and i96 %118, 33554432
  %120 = icmp eq i96 %119, 0
  br i1 %120, label %121, label %262

121:                                              ; preds = %114
  %122 = bitcast %"class.blink::LayoutObject"* %115 to i1 (%"class.blink::LayoutObject"*, i32)***
  %123 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %122, align 8
  %124 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %123, i64 92
  %125 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %124, align 8
  %126 = tail call zeroext i1 %125(%"class.blink::LayoutObject"* %115, i32 44) #13
  %127 = icmp ne %"class.blink::Node"* %3, null
  %128 = and i1 %127, %126
  br i1 %128, label %262, label %129

129:                                              ; preds = %121
  %130 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %131 = bitcast %"class.blink::LayoutObject"* %130 to i1 (%"class.blink::LayoutObject"*, i32)***
  %132 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %131, align 8
  %133 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %132, i64 92
  %134 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %133, align 8
  %135 = tail call zeroext i1 %134(%"class.blink::LayoutObject"* %130, i32 50) #13
  br i1 %135, label %136, label %138

136:                                              ; preds = %129
  %137 = tail call i32 @_ZNK5blink12AXNodeObject25DetermineTableSectionRoleEv(%"class.blink::AXNodeObject"* %2) #13
  br label %262

138:                                              ; preds = %129
  %139 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %140 = bitcast %"class.blink::LayoutObject"* %139 to i1 (%"class.blink::LayoutObject"*, i32)***
  %141 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %140, align 8
  %142 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %141, i64 92
  %143 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %142, align 8
  %144 = tail call zeroext i1 %143(%"class.blink::LayoutObject"* %139, i32 49) #13
  %145 = and i1 %127, %144
  br i1 %145, label %146, label %148

146:                                              ; preds = %138
  %147 = tail call i32 @_ZNK5blink12AXNodeObject21DetermineTableRowRoleEv(%"class.blink::AXNodeObject"* %2) #13
  br label %262

148:                                              ; preds = %138
  %149 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %150 = bitcast %"class.blink::LayoutObject"* %149 to i1 (%"class.blink::LayoutObject"*, i32)***
  %151 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %150, align 8
  %152 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %151, i64 92
  %153 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %152, align 8
  %154 = tail call zeroext i1 %153(%"class.blink::LayoutObject"* %149, i32 46) #13
  %155 = and i1 %127, %154
  br i1 %155, label %156, label %158

156:                                              ; preds = %148
  %157 = tail call i32 @_ZNK5blink12AXNodeObject22DetermineTableCellRoleEv(%"class.blink::AXNodeObject"* %2) #13
  br label %262

158:                                              ; preds = %148
  %159 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %160 = bitcast %"class.blink::LayoutObject"* %159 to i1 (%"class.blink::LayoutObject"*)***
  %161 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %160, align 8
  %162 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %161, i64 21
  %163 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %162, align 8
  %164 = tail call zeroext i1 %163(%"class.blink::LayoutObject"* %159) #13
  br i1 %164, label %195, label %165

165:                                              ; preds = %158
  br i1 %4, label %232, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = and i32 %168, 48
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %216

171:                                              ; preds = %166
  %172 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %173 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %172, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %176 = bitcast %"class.blink::Member.318"* %175 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %177 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %177, i64 0, i32 3, i32 0, i32 0, i32 0
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %174, i64 0, i32 3, i32 0, i32 0, i32 0
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %179, %181
  br i1 %182, label %196, label %183

183:                                              ; preds = %171
  %184 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %185 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %184, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %186, i64 0, i32 3, i32 0, i32 0, i32 0
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %179, %188
  br i1 %189, label %190, label %216

190:                                              ; preds = %183
  %191 = bitcast %"class.blink::Node"* %3 to %"class.blink::HTMLInputElement"*
  %192 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement18HasFallbackContentEv(%"class.blink::HTMLInputElement"* nonnull %191) #13
  br i1 %192, label %196, label %193

193:                                              ; preds = %190
  %194 = load i32, i32* %167, align 8
  br label %216

195:                                              ; preds = %158
  br i1 %4, label %262, label %196

196:                                              ; preds = %190, %171, %195
  %197 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %198 = load i32, i32* %197, align 8
  %199 = and i32 %198, 48
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %262

201:                                              ; preds = %196
  %202 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %203 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %202, i64 0, i32 0, i32 0, i32 0
  %204 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %206 = bitcast %"class.blink::Member.318"* %205 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %207 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %207, i64 0, i32 3, i32 0, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %204, i64 0, i32 3, i32 0, i32 0, i32 0
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %209, %211
  br i1 %212, label %213, label %262

213:                                              ; preds = %201
  %214 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %215 = tail call i32 @_ZNK5blink8AXObject14ButtonRoleTypeEv(%"class.blink::AXObject"* %214) #13
  br label %262

216:                                              ; preds = %193, %183, %166
  %217 = phi i32 [ %194, %193 ], [ %168, %183 ], [ %168, %166 ]
  %218 = and i32 %217, 48
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %232

220:                                              ; preds = %216
  %221 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kCanvasTagE, align 8
  %222 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %221, i64 0, i32 0, i32 0, i32 0
  %223 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %222, align 8
  %224 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %225 = bitcast %"class.blink::Member.318"* %224 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %226 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %226, i64 0, i32 3, i32 0, i32 0, i32 0
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %223, i64 0, i32 3, i32 0, i32 0, i32 0
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %229, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %228, %230
  br i1 %231, label %262, label %232

232:                                              ; preds = %165, %216, %220
  %233 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %234 = icmp eq %"class.blink::LayoutObject"* %233, null
  br i1 %234, label %244, label %235

235:                                              ; preds = %232
  %236 = bitcast %"class.blink::LayoutObject"* %233 to i1 (%"class.blink::LayoutObject"*, i32)***
  %237 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %236, align 8
  %238 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %237, i64 92
  %239 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %238, align 8
  %240 = tail call zeroext i1 %239(%"class.blink::LayoutObject"* nonnull %233, i32 55) #13
  br i1 %240, label %262, label %241

241:                                              ; preds = %235
  %242 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %243 = bitcast %"class.blink::LayoutObject"* %242 to i1 (%"class.blink::LayoutObject"*, i32)***
  br label %244

244:                                              ; preds = %241, %232
  %245 = phi i1 (%"class.blink::LayoutObject"*, i32)*** [ %243, %241 ], [ null, %232 ]
  %246 = phi %"class.blink::LayoutObject"* [ %242, %241 ], [ null, %232 ]
  %247 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %245, align 8
  %248 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %247, i64 92
  %249 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %248, align 8
  %250 = tail call zeroext i1 %249(%"class.blink::LayoutObject"* %246, i32 63) #13
  br i1 %250, label %262, label %251

251:                                              ; preds = %244
  %252 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %253 = bitcast %"class.blink::LayoutObject"* %252 to i1 (%"class.blink::LayoutObject"*, i32)***
  %254 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %253, align 8
  %255 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %254, i64 92
  %256 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %255, align 8
  %257 = tail call zeroext i1 %256(%"class.blink::LayoutObject"* %252, i32 67) #13
  br i1 %257, label %262, label %258

258:                                              ; preds = %251
  %259 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %260 = tail call zeroext i1 @_ZNK5blink12LayoutObject4IsHREv(%"class.blink::LayoutObject"* %259) #13
  %261 = select i1 %260, i32 158, i32 89
  br label %262

262:                                              ; preds = %114, %196, %195, %96, %258, %251, %244, %235, %220, %201, %121, %107, %102, %95, %93, %22, %213, %156, %146, %136
  %263 = phi i32 [ %137, %136 ], [ %147, %146 ], [ %157, %156 ], [ %215, %213 ], [ %24, %22 ], [ 117, %95 ], [ 0, %93 ], [ 116, %102 ], [ 110, %107 ], [ 159, %114 ], [ 106, %121 ], [ 100, %201 ], [ 11, %220 ], [ 145, %235 ], [ 100, %244 ], [ 163, %251 ], [ %261, %258 ], [ 116, %96 ], [ 100, %195 ], [ 100, %196 ]
  ret i32 %263
}

declare %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL20ShouldIgnoreListItemEPNS_4NodeE(%"class.blink::Node"*) unnamed_addr #0 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0) #13
  %5 = icmp eq %"class.blink::ContainerNode"* %4, null
  br i1 %5, label %116, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %4, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 12
  %10 = icmp eq i32 %9, 0
  %11 = bitcast %"class.blink::ContainerNode"* %4 to %"class.blink::Element"*
  br i1 %10, label %12, label %116

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %4, i64 0, i32 0
  %14 = and i32 %8, 48
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %116

16:                                               ; preds = %12
  %17 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMenuTagE, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 1, i32 2
  %21 = bitcast %"class.blink::Member.318"* %20 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %52, label %28

28:                                               ; preds = %16
  %29 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 1, i32 2
  %33 = bitcast %"class.blink::Member.318"* %32 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %36, %38
  br i1 %39, label %52, label %40

40:                                               ; preds = %28
  %41 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE, align 8
  %42 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 1, i32 2
  %45 = bitcast %"class.blink::Member.318"* %44 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %48, %50
  br i1 %51, label %52, label %116

52:                                               ; preds = %40, %28, %16
  %53 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_17AOMStringPropertyE(%"class.blink::Element"* nonnull %11, i32 13) #13
  %54 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %116, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #13
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %62
  tail call void @llvm.trap() #13
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %72, %57
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %104, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #13
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %80, align 8
  %81 = load i32, i32* %75, align 4
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 1
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %84 = bitcast i8** %83 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %81, i32* %85, align 8
  %86 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #13
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %88 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i8** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %90, align 8
  %91 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #13
  br i1 %91, label %104, label %92

92:                                               ; preds = %78
  %93 = load atomic i32, i32* %58 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %92
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %92
  %101 = phi i32 [ %99, %98 ], [ %97, %92 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %116

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #13
  br label %116

104:                                              ; preds = %78, %74
  %105 = load atomic i32, i32* %58 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %104
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %104
  %113 = phi i32 [ %111, %110 ], [ %109, %104 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #13
  br label %116

116:                                              ; preds = %12, %6, %1, %115, %112, %52, %103, %100, %40
  %117 = phi i1 [ false, %40 ], [ true, %100 ], [ true, %103 ], [ false, %52 ], [ false, %112 ], [ false, %115 ], [ false, %6 ], [ false, %1 ], [ false, %12 ]
  ret i1 %117
}

declare i32 @_ZNK5blink12AXNodeObject25DetermineTableSectionRoleEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject21DetermineTableRowRoleEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject22DetermineTableCellRoleEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink8AXObject14ButtonRoleTypeEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject4IsHREv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink14AXLayoutObject28GetNodeOrContainingBlockNodeEv(%"class.blink::AXLayoutObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #13
  br i1 %3, label %71, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, i64 92
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* %6, i32 15) #13
  br i1 %11, label %17, label %12

12:                                               ; preds = %4
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %13, i64 92
  %15 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* %6, i32 13) #13
  br i1 %16, label %17, label %19

17:                                               ; preds = %12, %4
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  br label %25

19:                                               ; preds = %12
  %20 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %20, i64 92
  %22 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::LayoutObject"* %6, i32 36) #13
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  br i1 %23, label %25, label %39

25:                                               ; preds = %17, %19
  %26 = phi %"class.blink::LayoutObject"* [ %18, %17 ], [ %24, %19 ]
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 4
  %28 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %27 to i96*
  %29 = load i96, i96* %28, align 4
  %30 = and i96 %29, 16777216
  %31 = icmp eq i96 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 6, i32 0, i32 0
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  br label %35

35:                                               ; preds = %25, %32
  %36 = phi %"class.blink::Node"* [ %34, %32 ], [ null, %25 ]
  %37 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %36) #13
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %37, i64 0, i32 0
  br label %71

39:                                               ; preds = %19
  %40 = tail call %"class.blink::ListMarker"* @_ZN5blink10ListMarker3GetEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* %24) #13
  %41 = icmp eq %"class.blink::ListMarker"* %40, null
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  br i1 %41, label %53, label %43

43:                                               ; preds = %39
  %44 = tail call %"class.blink::LayoutObject"* @_ZNK5blink10ListMarker8ListItemERKNS_12LayoutObjectE(%"class.blink::ListMarker"* nonnull %40, %"class.blink::LayoutObject"* dereferenceable(88) %42) #13
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 4
  %46 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %45 to i96*
  %47 = load i96, i96* %46, align 4
  %48 = and i96 %47, 16777216
  %49 = icmp eq i96 %48, 0
  br i1 %49, label %50, label %71

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 6, i32 0, i32 0
  %52 = load %"class.blink::Node"*, %"class.blink::Node"** %51, align 8
  br label %71

53:                                               ; preds = %39
  %54 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 4
  %55 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %54 to i96*
  %56 = load i96, i96* %55, align 4
  %57 = and i96 %56, 16777216
  %58 = icmp eq i96 %57, 0
  br i1 %58, label %73, label %59

59:                                               ; preds = %53
  %60 = tail call %"class.blink::LayoutBlock"* @_ZN5blink12LayoutObject31FindNonAnonymousContainingBlockEPS0_PNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %42, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %61 = icmp eq %"class.blink::LayoutBlock"* %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %60, i64 0, i32 0, i32 0, i32 0, i32 4
  %64 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %63 to i96*
  %65 = load i96, i96* %64, align 4
  %66 = and i96 %65, 16777216
  %67 = icmp eq i96 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %60, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %70 = load %"class.blink::Node"*, %"class.blink::Node"** %69, align 8
  br label %71

71:                                               ; preds = %35, %73, %1, %43, %50, %68, %62, %59
  %72 = phi %"class.blink::Node"* [ null, %59 ], [ null, %62 ], [ %70, %68 ], [ %38, %35 ], [ %75, %73 ], [ null, %1 ], [ null, %43 ], [ %52, %50 ]
  ret %"class.blink::Node"* %72

73:                                               ; preds = %53
  %74 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0
  %75 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %74) #13
  br label %71
}

declare zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::ListMarker"* @_ZN5blink10ListMarker3GetEPNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink10ListMarker8ListItemERKNS_12LayoutObjectE(%"class.blink::ListMarker"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare %"class.blink::LayoutBlock"* @_ZN5blink12LayoutObject31FindNonAnonymousContainingBlockEPS0_PNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AXLayoutObject6DetachEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0
  tail call void @_ZN5blink12AXNodeObject6DetachEv(%"class.blink::AXNodeObject"* %2) #13
  %3 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %3, align 8
  ret void
}

declare void @_ZN5blink12AXNodeObject6DetachEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink14AXLayoutObject16IsAXLayoutObjectEv(%"class.blink::AXLayoutObject"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14AXLayoutObject20IsLineBreakingObjectEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #13
  br i1 %3, label %83, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject16IsPresentationalEv(%"class.blink::AXObject"* %2) #13
  br i1 %5, label %83, label %6

6:                                                ; preds = %4
  %7 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %2) #13
  %8 = icmp eq i32 %7, 117
  br i1 %8, label %83, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = bitcast %"class.blink::LayoutObject"* %11 to i1 (%"class.blink::LayoutObject"*, i32)***
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %13, i64 92
  %15 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* %11, i32 0) #13
  br i1 %16, label %83, label %17

17:                                               ; preds = %9
  %18 = bitcast %"class.blink::LayoutObject"* %11 to i1 (%"class.blink::LayoutObject"*)***
  %19 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %19, i64 23
  %21 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::LayoutObject"* %11) #13
  br i1 %22, label %83, label %23

23:                                               ; preds = %17
  %24 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %12, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, i64 92
  %26 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::LayoutObject"* %11, i32 50) #13
  br i1 %27, label %83, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 16777216
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 5, i32 0
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 9
  %38 = bitcast [20 x i8]* %37 to i160*
  %39 = load i160, i160* %38, align 8
  %40 = lshr i160 %39, 32
  %41 = trunc i160 %40 to i32
  %42 = and i32 %41, 31
  switch i32 %42, label %61 [
    i32 1, label %43
    i32 14, label %43
  ]

43:                                               ; preds = %34, %34
  %44 = and i160 %39, 2113929216
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %46, label %61

46:                                               ; preds = %43
  %47 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %18, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %47, i64 23
  %49 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* %11) #13
  br i1 %50, label %51, label %61

51:                                               ; preds = %46
  %52 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %18, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %52, i64 25
  %54 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %11) #13
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %12, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, i64 92
  %59 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.blink::LayoutObject"* %11, i32 20) #13
  br i1 %60, label %61, label %83

61:                                               ; preds = %56, %34, %28, %43, %46, %51
  %62 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %18, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %62, i64 24
  %64 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.blink::LayoutObject"* %11) #13
  br i1 %65, label %66, label %77

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 5, i32 0
  %68 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 9
  %70 = bitcast [20 x i8]* %69 to i160*
  %71 = load i160, i160* %70, align 8
  %72 = lshr i160 %71, 32
  %73 = trunc i160 %72 to i32
  %74 = and i32 %73, 31
  %75 = add nsw i32 %74, -1
  %76 = icmp ult i32 %75, 21
  br i1 %76, label %79, label %77

77:                                               ; preds = %79, %66, %61
  %78 = tail call zeroext i1 @_ZNK5blink8AXObject20IsLineBreakingObjectEv(%"class.blink::AXObject"* %2) #13
  br label %83

79:                                               ; preds = %66
  %80 = lshr i32 1054727, %75
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %77, label %83

83:                                               ; preds = %1, %4, %6, %9, %17, %23, %77, %56, %79
  %84 = phi i1 [ true, %79 ], [ false, %1 ], [ false, %4 ], [ false, %6 ], [ %78, %77 ], [ true, %56 ], [ true, %23 ], [ true, %17 ], [ true, %9 ]
  ret i1 %84
}

declare zeroext i1 @_ZNK5blink8AXObject16IsPresentationalEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject20IsLineBreakingObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14AXLayoutObject8IsLinkedEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %4 = bitcast %"class.blink::AXLayoutObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %5 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %5, i64 125
  %7 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %6, align 8
  %8 = tail call %"class.blink::LayoutObject"* %7(%"class.blink::AXObject"* %3) #13
  %9 = icmp eq %"class.blink::LayoutObject"* %8, null
  br i1 %9, label %55, label %10

10:                                               ; preds = %1
  %11 = tail call zeroext i1 @_ZNK5blink8AXObject6IsLinkEv(%"class.blink::AXObject"* %3) #13
  br i1 %11, label %24, label %12

12:                                               ; preds = %10
  %13 = tail call zeroext i1 @_ZNK5blink8AXObject7IsImageEv(%"class.blink::AXObject"* %3) #13
  br i1 %13, label %24, label %14

14:                                               ; preds = %12
  %15 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %4, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %15, i64 125
  %17 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %16, align 8
  %18 = tail call %"class.blink::LayoutObject"* %17(%"class.blink::AXObject"* %3) #13
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 4
  %20 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %19 to i96*
  %21 = load i96, i96* %20, align 4
  %22 = and i96 %21, 33554432
  %23 = icmp eq i96 %22, 0
  br i1 %23, label %55, label %24

24:                                               ; preds = %14, %10, %12
  %25 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0
  %26 = bitcast %"class.blink::AXLayoutObject"* %0 to %"class.blink::Element"* (%"class.blink::AXNodeObject"*)***
  %27 = load %"class.blink::Element"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Element"* (%"class.blink::AXNodeObject"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Element"* (%"class.blink::AXNodeObject"*)** %27, i64 127
  %29 = load %"class.blink::Element"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Element"* (%"class.blink::AXNodeObject"*)** %28, align 8
  %30 = tail call %"class.blink::Element"* %29(%"class.blink::AXNodeObject"* %25) #13
  %31 = icmp eq %"class.blink::Element"* %30, null
  br i1 %31, label %55, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %30, i64 0, i32 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 48
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %30, i64 0, i32 0, i32 0
  %39 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 1, i32 2
  %43 = bitcast %"class.blink::Member.318"* %42 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %46, %48
  br i1 %49, label %50, label %55

50:                                               ; preds = %37
  %51 = bitcast %"class.blink::Element"* %30 to %"class.blink::HTMLAnchorElement"*
  %52 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %52) #13
  call void @_ZNK5blink17HTMLAnchorElement4HrefEv(%"class.blink::KURL"* nonnull sret %2, %"class.blink::HTMLAnchorElement"* nonnull %51) #13
  %53 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* nonnull %2) #13
  %54 = xor i1 %53, true
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %52) #13
  br label %55

55:                                               ; preds = %37, %14, %1, %24, %32, %50
  %56 = phi i1 [ %54, %50 ], [ false, %37 ], [ false, %32 ], [ false, %24 ], [ false, %1 ], [ false, %14 ]
  ret i1 %56
}

declare void @_ZNK5blink17HTMLAnchorElement4HrefEv(%"class.blink::KURL"* sret, %"class.blink::HTMLAnchorElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14AXLayoutObject11IsOffScreenEv(%"class.blink::AXLayoutObject"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"class.blink::IntRect"*
  %4 = alloca %"class.blink::IntRect", align 8
  %5 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #13
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %8 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %10 = bitcast %"class.blink::LayoutObject"* %9 to { i64, i64 } (%"class.blink::LayoutObject"*, i32)***
  %11 = load { i64, i64 } (%"class.blink::LayoutObject"*, i32)**, { i64, i64 } (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %12 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutObject"*, i32)*, { i64, i64 } (%"class.blink::LayoutObject"*, i32)** %11, i64 71
  %13 = load { i64, i64 } (%"class.blink::LayoutObject"*, i32)*, { i64, i64 } (%"class.blink::LayoutObject"*, i32)** %12, align 8
  %14 = tail call { i64, i64 } %13(%"class.blink::LayoutObject"* %9, i32 0) #13
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = trunc i64 %15 to i32
  %17 = lshr i64 %15, 32
  %18 = trunc i64 %17 to i32
  %19 = extractvalue { i64, i64 } %14, 1
  %20 = sdiv i32 %16, 64
  %21 = srem i32 %16, 64
  %22 = add nsw i32 %21, 32
  %23 = ashr i32 %22, 6
  %24 = add nsw i32 %23, %20
  %25 = sdiv i32 %18, 64
  %26 = srem i32 %18, 64
  %27 = add nsw i32 %26, 32
  %28 = ashr i32 %27, 6
  %29 = add nsw i32 %28, %25
  %30 = zext i32 %29 to i64
  %31 = shl nuw i64 %30, 32
  %32 = zext i32 %24 to i64
  %33 = or i64 %31, %32
  %34 = trunc i64 %19 to i32
  %35 = icmp slt i32 %34, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %34) #13
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  %41 = sdiv i32 %40, 64
  %42 = srem i32 %40, 64
  %43 = add nsw i32 %42, 32
  %44 = ashr i32 %43, 6
  %45 = sub nsw i32 %41, %23
  %46 = add nsw i32 %44, %45
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %1
  %49 = add i32 %34, 4
  %50 = icmp ugt i32 %49, 8
  br i1 %50, label %51, label %54, !prof !3

51:                                               ; preds = %48
  %52 = icmp sgt i32 %34, 0
  %53 = select i1 %52, i32 1, i32 -1
  br label %54

54:                                               ; preds = %51, %48, %1
  %55 = phi i32 [ %53, %51 ], [ %46, %1 ], [ 0, %48 ]
  %56 = lshr i64 %19, 32
  %57 = trunc i64 %56 to i32
  %58 = icmp slt i32 %57, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %26, i32 %57) #13
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !2
  %64 = sdiv i32 %63, 64
  %65 = srem i32 %63, 64
  %66 = add nsw i32 %65, 32
  %67 = ashr i32 %66, 6
  %68 = sub nsw i32 %64, %28
  %69 = add nsw i32 %67, %68
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %54
  %72 = add i32 %57, 4
  %73 = icmp ugt i32 %72, 8
  br i1 %73, label %74, label %77, !prof !3

74:                                               ; preds = %71
  %75 = icmp sgt i32 %57, 0
  %76 = select i1 %75, i32 1, i32 -1
  br label %77

77:                                               ; preds = %54, %71, %74
  %78 = phi i32 [ %76, %74 ], [ %69, %54 ], [ 0, %71 ]
  %79 = zext i32 %78 to i64
  %80 = shl nuw i64 %79, 32
  %81 = zext i32 %55 to i64
  %82 = or i64 %80, %81
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 %33, i64* %83, align 8
  store i64 %82, i64* %6, align 8
  %84 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %85 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %84, i64 0, i32 6, i32 0, i32 0
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %85, align 8
  %87 = icmp eq %"class.blink::Node"* %86, null
  br i1 %87, label %88, label %95

88:                                               ; preds = %77, %88
  %89 = phi %"class.blink::LayoutObject"* [ %91, %88 ], [ %84, %77 ]
  %90 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %89, i64 0, i32 7
  %91 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 0, i32 6, i32 0, i32 0
  %93 = load %"class.blink::Node"*, %"class.blink::Node"** %92, align 8
  %94 = icmp eq %"class.blink::Node"* %93, null
  br i1 %94, label %88, label %95

95:                                               ; preds = %88, %77
  %96 = phi %"class.blink::Node"* [ %86, %77 ], [ %93, %88 ]
  %97 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %96, i64 0, i32 3, i32 0, i32 0
  %98 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %98, i64 0, i32 2, i32 0, i32 0
  %100 = load %"class.blink::Document"*, %"class.blink::Document"** %99, align 8
  %101 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %100) #13
  %102 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %101, i64 0, i32 11, i32 0, i32 0
  %103 = bitcast %"class.blink::LocalFrameView"** %102 to %"class.blink::EmbeddedContentView"**
  %104 = load %"class.blink::EmbeddedContentView"*, %"class.blink::EmbeddedContentView"** %103, align 8
  %105 = bitcast %"class.blink::IntRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #13
  %106 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %4, i64 0, i32 1, i32 0
  %107 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %4, i64 0, i32 1, i32 1
  %108 = getelementptr inbounds %"class.blink::EmbeddedContentView", %"class.blink::EmbeddedContentView"* %104, i64 0, i32 1, i32 1
  %109 = bitcast %"class.blink::IntSize"* %108 to i64*
  %110 = load i64, i64* %109, align 4
  %111 = bitcast %"class.blink::IntRect"* %4 to i64*
  store i64 0, i64* %111, align 8
  %112 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %4, i64 0, i32 1
  %113 = bitcast %"class.blink::IntSize"* %112 to i64*
  store i64 %110, i64* %113, align 8
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %4, %"class.blink::IntRect"* nonnull dereferenceable(16) %3) #13
  %114 = load i32, i32* %106, align 8
  %115 = icmp slt i32 %114, 1
  %116 = load i32, i32* %107, align 4
  %117 = icmp slt i32 %116, 1
  %118 = or i1 %115, %117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  ret i1 %118
}

declare void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14AXLayoutObject9IsVisitedEv(%"class.blink::AXLayoutObject"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 5, i32 0
  %5 = bitcast %"class.blink::ComputedStyle"** %4 to %"class.blink::ComputedStyleBase"**
  %6 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %6, i64 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 1393796574908171373986218104322171988869120
  %11 = icmp eq i160 %10, 1393796574908168898106139533561622190620672
  ret i1 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14AXLayoutObject19IsNotUserSelectableEv(%"class.blink::AXLayoutObject"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = icmp eq %"class.blink::ComputedStyle"* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %11, i64 0, i32 23
  %13 = bitcast [5 x i8]* %12 to i40*
  %14 = load i40, i40* %13, align 8
  %15 = and i40 %14, 805306368
  %16 = icmp eq i40 %15, 0
  br label %17

17:                                               ; preds = %9, %5, %1
  %18 = phi i1 [ false, %1 ], [ %16, %9 ], [ false, %5 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14AXLayoutObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3354"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::IgnoredReason", align 8
  %4 = alloca %"class.blink::IgnoredReason", align 8
  %5 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutObject"* %6, null
  br i1 %7, label %8, label %70

8:                                                ; preds = %2
  %9 = icmp eq %"class.blink::HeapVector.3354"* %1, null
  br i1 %9, label %146, label %10

10:                                               ; preds = %8
  %11 = bitcast %"class.blink::IgnoredReason"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 0
  store i32 10, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %67, label %19, !prof !2

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %20, align 8
  %22 = zext i32 %15 to i64
  %23 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %21, i64 %22, i32 0
  store i32 10, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %21, i64 %22, i32 1
  %25 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 1
  %26 = bitcast %"class.blink::Member.3360"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::Member.3360"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %64, label %31

31:                                               ; preds = %19
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #13
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !2

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #13
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 9
  %43 = load i8, i8* %42, align 1, !range !4
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %64, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 13
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %49, align 8
  %51 = load atomic i64, i64* %28 monotonic, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %50, i64 0, i32 0, i32 0
  %55 = inttoptr i64 %51 to i8*
  %56 = bitcast %"class.blink::MarkingVisitor"* %50 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %57 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %57, i64 5
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, align 8
  tail call void %59(%"class.blink::Visitor"* %54, i8* nonnull %55, i8* %55, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  %60 = load i64, i64* %46, align 8
  br label %61

61:                                               ; preds = %53, %45
  %62 = phi i64 [ %48, %45 ], [ %60, %53 ]
  %63 = add i64 %62, -1
  store i64 %63, i64* %46, align 8
  br label %64

64:                                               ; preds = %19, %38, %61
  %65 = load i32, i32* %14, align 4
  %66 = add i32 %65, 1
  store i32 %66, i32* %14, align 4
  br label %69

67:                                               ; preds = %10
  %68 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3357"* %68, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %3) #13
  br label %69

69:                                               ; preds = %64, %67
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  br label %146

70:                                               ; preds = %2
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 5, i32 0
  %72 = bitcast %"class.blink::ComputedStyle"** %71 to %"class.blink::ComputedStyleBase"**
  %73 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %73, i64 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 3802951800684688204490109616128
  %78 = icmp eq i160 %77, 1267650600228229401496703205376
  %79 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  br i1 %78, label %144, label %80

80:                                               ; preds = %70
  %81 = tail call zeroext i1 @_ZNK5blink8AXObject33AOMPropertyOrARIAAttributeIsFalseENS_18AOMBooleanPropertyE(%"class.blink::AXObject"* %79, i32 4) #13
  br i1 %81, label %146, label %82

82:                                               ; preds = %80
  %83 = icmp eq %"class.blink::HeapVector.3354"* %1, null
  br i1 %83, label %146, label %84

84:                                               ; preds = %82
  %85 = bitcast %"class.blink::IgnoredReason"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #13
  %86 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %4, i64 0, i32 0
  store i32 11, i32* %86, align 8
  %87 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %87, align 8
  %88 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %89, %91
  br i1 %92, label %141, label %93, !prof !2

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %94, align 8
  %96 = zext i32 %89 to i64
  %97 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %95, i64 %96, i32 0
  store i32 11, i32* %97, align 8
  %98 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %95, i64 %96, i32 1
  %99 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %4, i64 0, i32 1
  %100 = bitcast %"class.blink::Member.3360"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.blink::Member.3360"* %98 to i64*
  store i64 %101, i64* %102, align 8
  %103 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %138, label %105

105:                                              ; preds = %93
  %106 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %107 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %106, i64 0, i32 1
  %108 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %107) #13
  %109 = icmp eq i8* %108, null
  br i1 %109, label %110, label %112, !prof !2

110:                                              ; preds = %105
  %111 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %107, i8* %111) #13
  br label %112

112:                                              ; preds = %110, %105
  %113 = phi i8* [ %111, %110 ], [ %108, %105 ]
  %114 = bitcast i8* %113 to %"class.blink::ThreadState"**
  %115 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %115, i64 0, i32 9
  %117 = load i8, i8* %116, align 1, !range !4
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %138, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %115, i64 0, i32 13
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 1
  store i64 %122, i64* %120, align 8
  %123 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %115, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %124 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %123, align 8
  %125 = load atomic i64, i64* %102 monotonic, align 8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %124, i64 0, i32 0, i32 0
  %129 = inttoptr i64 %125 to i8*
  %130 = bitcast %"class.blink::MarkingVisitor"* %124 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %131 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %131, i64 5
  %133 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %132, align 8
  tail call void %133(%"class.blink::Visitor"* %128, i8* nonnull %129, i8* %129, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  %134 = load i64, i64* %120, align 8
  br label %135

135:                                              ; preds = %127, %119
  %136 = phi i64 [ %122, %119 ], [ %134, %127 ]
  %137 = add i64 %136, -1
  store i64 %137, i64* %120, align 8
  br label %138

138:                                              ; preds = %93, %112, %135
  %139 = load i32, i32* %88, align 4
  %140 = add i32 %139, 1
  store i32 %140, i32* %88, align 4
  br label %143

141:                                              ; preds = %84
  %142 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3357"* %142, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %4) #13
  br label %143

143:                                              ; preds = %138, %141
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #13
  br label %146

144:                                              ; preds = %70
  %145 = tail call i32 @_ZNK5blink8AXObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"* %79, %"class.blink::HeapVector.3354"* %1) #13
  br label %146

146:                                              ; preds = %143, %82, %80, %69, %8, %144
  %147 = phi i32 [ %145, %144 ], [ 1, %8 ], [ 1, %69 ], [ 2, %80 ], [ 1, %82 ], [ 1, %143 ]
  ret i32 %147
}

declare zeroext i1 @_ZNK5blink8AXObject33AOMPropertyOrARIAAttributeIsFalseENS_18AOMBooleanPropertyE(%"class.blink::AXObject"*, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink8AXObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3354"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14AXLayoutObject13IsPlaceholderEv(%"class.blink::AXLayoutObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %2) #13
  %4 = icmp eq %"class.blink::AXObject"* %3, null
  br i1 %4, label %44, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXObject"* %3 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %7 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %7, i64 125
  %9 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %8, align 8
  %10 = tail call %"class.blink::LayoutObject"* %9(%"class.blink::AXObject"* nonnull %3) #13
  %11 = icmp eq %"class.blink::LayoutObject"* %10, null
  br i1 %11, label %44, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::LayoutObject"* %10 to i1 (%"class.blink::LayoutObject"*, i32)***
  %14 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, i64 92
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutObject"* nonnull %10, i32 51) #13
  br i1 %17, label %28, label %18

18:                                               ; preds = %12
  %19 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %13, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %19, i64 92
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::LayoutObject"* nonnull %10, i32 34) #13
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %13, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, i64 92
  %26 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::LayoutObject"* nonnull %10, i32 35) #13
  br i1 %27, label %28, label %44

28:                                               ; preds = %12, %18, %23
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 16777216
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %36 = bitcast %"class.blink::Node"** %35 to %"class.blink::TextControlElement"**
  %37 = load %"class.blink::TextControlElement"*, %"class.blink::TextControlElement"** %36, align 8
  br label %38

38:                                               ; preds = %28, %34
  %39 = phi %"class.blink::TextControlElement"* [ %37, %34 ], [ null, %28 ]
  %40 = tail call %"class.blink::HTMLElement"* @_ZNK5blink18TextControlElement18PlaceholderElementEv(%"class.blink::TextControlElement"* %39) #13
  %41 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %2) #13
  %42 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %40, i64 0, i32 0
  %43 = icmp eq %"class.blink::Element"* %41, %42
  br label %44

44:                                               ; preds = %38, %5, %23, %1
  %45 = phi i1 [ false, %1 ], [ %43, %38 ], [ false, %5 ], [ false, %23 ]
  ret i1 %45
}

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::HTMLElement"* @_ZNK5blink18TextControlElement18PlaceholderElementEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14AXLayoutObject29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3354"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::IgnoredReason", align 8
  %4 = alloca %"class.blink::IgnoredReason", align 8
  %5 = alloca %"class.blink::IgnoredReason", align 8
  %6 = alloca %"class.blink::IgnoredReason", align 8
  %7 = alloca %"class.blink::IgnoredReason", align 8
  %8 = alloca %"class.absl::optional.3579", align 8
  %9 = alloca %"class.blink::IgnoredReason", align 8
  %10 = alloca %"class.blink::IgnoredReason", align 8
  %11 = alloca %"class.blink::IgnoredReason", align 8
  %12 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %13 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %12) #13
  %14 = icmp eq i32 %13, 145
  br i1 %14, label %876, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %16) #13
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 48
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 1, i32 2
  %29 = bitcast %"class.blink::Member.318"* %28 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %32, %34
  br i1 %35, label %876, label %36

36:                                               ; preds = %19, %15, %24
  %37 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, null
  br i1 %39, label %40, label %102

40:                                               ; preds = %36
  %41 = icmp eq %"class.blink::HeapVector.3354"* %1, null
  br i1 %41, label %876, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.blink::IgnoredReason"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #13
  %44 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 0
  store i32 10, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %99, label %51, !prof !2

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %52, align 8
  %54 = zext i32 %47 to i64
  %55 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %53, i64 %54, i32 0
  store i32 10, i32* %55, align 8
  %56 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %53, i64 %54, i32 1
  %57 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 1
  %58 = bitcast %"class.blink::Member.3360"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.blink::Member.3360"* %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %96, label %63

63:                                               ; preds = %51
  %64 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %65 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %64, i64 0, i32 1
  %66 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %65) #13
  %67 = icmp eq i8* %66, null
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %63
  %69 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %65, i8* %69) #13
  br label %70

70:                                               ; preds = %68, %63
  %71 = phi i8* [ %69, %68 ], [ %66, %63 ]
  %72 = bitcast i8* %71 to %"class.blink::ThreadState"**
  %73 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %73, i64 0, i32 9
  %75 = load i8, i8* %74, align 1, !range !4
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %96, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %73, i64 0, i32 13
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  %81 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %73, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %82 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %81, align 8
  %83 = load atomic i64, i64* %60 monotonic, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %82, i64 0, i32 0, i32 0
  %87 = inttoptr i64 %83 to i8*
  %88 = bitcast %"class.blink::MarkingVisitor"* %82 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %89, i64 5
  %91 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %90, align 8
  tail call void %91(%"class.blink::Visitor"* %86, i8* nonnull %87, i8* %87, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  %92 = load i64, i64* %78, align 8
  br label %93

93:                                               ; preds = %85, %77
  %94 = phi i64 [ %80, %77 ], [ %92, %85 ]
  %95 = add i64 %94, -1
  store i64 %95, i64* %78, align 8
  br label %96

96:                                               ; preds = %51, %70, %93
  %97 = load i32, i32* %46, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %46, align 4
  br label %101

99:                                               ; preds = %42
  %100 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3357"* %100, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %3) #13
  br label %101

101:                                              ; preds = %96, %99
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #13
  br label %876

102:                                              ; preds = %36
  %103 = bitcast %"class.blink::AXLayoutObject"* %0 to i32 (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3354"*)***
  %104 = load i32 (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3354"*)**, i32 (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3354"*)*** %103, align 8
  %105 = getelementptr inbounds i32 (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3354"*)*, i32 (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3354"*)** %104, i64 52
  %106 = load i32 (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3354"*)*, i32 (%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3354"*)** %105, align 8
  %107 = tail call i32 %106(%"class.blink::AXLayoutObject"* %0, %"class.blink::HeapVector.3354"* %1) #13
  switch i32 %107, label %109 [
    i32 0, label %876
    i32 1, label %108
  ]

108:                                              ; preds = %102
  br label %876

109:                                              ; preds = %102
  %110 = tail call i32 @_ZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXNodeObject"* %16, %"class.blink::HeapVector.3354"* %1) #13
  switch i32 %110, label %112 [
    i32 0, label %876
    i32 1, label %111
  ]

111:                                              ; preds = %109
  br label %876

112:                                              ; preds = %109
  %113 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %114 = bitcast %"class.blink::LayoutObject"* %113 to i1 (%"class.blink::LayoutObject"*)***
  %115 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %114, align 8
  %116 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %115, i64 27
  %117 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %116, align 8
  %118 = tail call zeroext i1 %117(%"class.blink::LayoutObject"* %113) #13
  br i1 %118, label %876, label %119

119:                                              ; preds = %112
  %120 = icmp ne %"class.blink::Node"* %17, null
  br i1 %120, label %121, label %161

121:                                              ; preds = %119
  %122 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* nonnull %17) #13
  %123 = icmp eq %"class.blink::ShadowRoot"* %122, null
  br i1 %123, label %161, label %124

124:                                              ; preds = %121
  %125 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* nonnull %17) #13
  %126 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %125, i64 0, i32 4
  %127 = load i32, i32* %126, align 8
  %128 = and i32 %127, 196608
  %129 = icmp eq i32 %128, 131072
  br i1 %129, label %130, label %161

130:                                              ; preds = %124
  %131 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* nonnull %17) #13
  %132 = icmp eq %"class.blink::Element"* %131, null
  br i1 %132, label %161, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %131, i64 0, i32 0, i32 0, i32 1
  %135 = load i32, i32* %134, align 8
  %136 = and i32 %135, 48
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %161

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %131, i64 0, i32 0, i32 0
  %140 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAudioTagE, align 8
  %141 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %139, i64 1, i32 2
  %144 = bitcast %"class.blink::Member.318"* %143 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %145 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %142, i64 0, i32 3, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %147, %149
  br i1 %150, label %158, label %151

151:                                              ; preds = %138
  %152 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE, align 8
  %153 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %152, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %154, i64 0, i32 3, i32 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %147, %156
  br i1 %157, label %158, label %161

158:                                              ; preds = %151, %138
  %159 = bitcast %"class.blink::Element"* %131 to %"class.blink::HTMLMediaElement"*
  %160 = tail call zeroext i1 @_ZNK5blink16HTMLMediaElement18ShouldShowControlsENS0_21RecordMetricsBehaviorE(%"class.blink::HTMLMediaElement"* nonnull %159, i32 0) #13
  br i1 %160, label %161, label %876

161:                                              ; preds = %133, %130, %151, %121, %158, %124, %119
  %162 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %163 = icmp eq %"class.blink::LayoutObject"* %162, null
  br i1 %163, label %245, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %162, i64 0, i32 4
  %166 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %165 to i96*
  %167 = load i96, i96* %166, align 4
  %168 = and i96 %167, 4294967296
  %169 = icmp ne i96 %168, 0
  %170 = and i1 %120, %169
  br i1 %170, label %171, label %245

171:                                              ; preds = %164
  %172 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %245, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 1
  %178 = bitcast %"class.blink::Node"* %177 to %"class.blink::Node"**
  %179 = load %"class.blink::Node"*, %"class.blink::Node"** %178, align 8
  %180 = icmp eq %"class.blink::Node"* %179, null
  br i1 %180, label %245, label %181

181:                                              ; preds = %176
  %182 = tail call zeroext i1 @_ZNK5blink14AXLayoutObject13IsPlaceholderEv(%"class.blink::AXLayoutObject"* %0)
  br i1 %182, label %183, label %876

183:                                              ; preds = %181
  %184 = icmp eq %"class.blink::HeapVector.3354"* %1, null
  br i1 %184, label %876, label %185

185:                                              ; preds = %183
  %186 = bitcast %"class.blink::IgnoredReason"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %186) #13
  %187 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %4, i64 0, i32 0
  store i32 12, i32* %187, align 8
  %188 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %188, align 8
  %189 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %192 = load i32, i32* %191, align 8
  %193 = icmp eq i32 %190, %192
  br i1 %193, label %242, label %194, !prof !2

194:                                              ; preds = %185
  %195 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %196 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %195, align 8
  %197 = zext i32 %190 to i64
  %198 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %196, i64 %197, i32 0
  store i32 12, i32* %198, align 8
  %199 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %196, i64 %197, i32 1
  %200 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %4, i64 0, i32 1
  %201 = bitcast %"class.blink::Member.3360"* %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.blink::Member.3360"* %199 to i64*
  store i64 %202, i64* %203, align 8
  %204 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %239, label %206

206:                                              ; preds = %194
  %207 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %208 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %207, i64 0, i32 1
  %209 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %208) #13
  %210 = icmp eq i8* %209, null
  br i1 %210, label %211, label %213, !prof !2

211:                                              ; preds = %206
  %212 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %208, i8* %212) #13
  br label %213

213:                                              ; preds = %211, %206
  %214 = phi i8* [ %212, %211 ], [ %209, %206 ]
  %215 = bitcast i8* %214 to %"class.blink::ThreadState"**
  %216 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %215, align 8
  %217 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %216, i64 0, i32 9
  %218 = load i8, i8* %217, align 1, !range !4
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %239, label %220

220:                                              ; preds = %213
  %221 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %216, i64 0, i32 13
  %222 = load i64, i64* %221, align 8
  %223 = add i64 %222, 1
  store i64 %223, i64* %221, align 8
  %224 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %216, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %225 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %224, align 8
  %226 = load atomic i64, i64* %203 monotonic, align 8
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %236, label %228

228:                                              ; preds = %220
  %229 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %225, i64 0, i32 0, i32 0
  %230 = inttoptr i64 %226 to i8*
  %231 = bitcast %"class.blink::MarkingVisitor"* %225 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %232 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %231, align 8
  %233 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %232, i64 5
  %234 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %233, align 8
  tail call void %234(%"class.blink::Visitor"* %229, i8* nonnull %230, i8* %230, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  %235 = load i64, i64* %221, align 8
  br label %236

236:                                              ; preds = %228, %220
  %237 = phi i64 [ %223, %220 ], [ %235, %228 ]
  %238 = add i64 %237, -1
  store i64 %238, i64* %221, align 8
  br label %239

239:                                              ; preds = %194, %213, %236
  %240 = load i32, i32* %189, align 4
  %241 = add i32 %240, 1
  store i32 %241, i32* %189, align 4
  br label %244

242:                                              ; preds = %185
  %243 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3357"* %243, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %4) #13
  br label %244

244:                                              ; preds = %239, %242
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %186) #13
  br label %876

245:                                              ; preds = %176, %171, %161, %164
  %246 = tail call zeroext i1 @_ZNK5blink8AXObject8IsCanvasEv(%"class.blink::AXObject"* %12) #13
  br i1 %246, label %247, label %330

247:                                              ; preds = %245
  %248 = tail call zeroext i1 @_ZNK5blink12AXNodeObject24CanvasHasFallbackContentEv(%"class.blink::AXNodeObject"* %16) #13
  br i1 %248, label %876, label %249

249:                                              ; preds = %247
  %250 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %251 = icmp eq %"class.blink::LayoutObject"* %250, null
  br i1 %251, label %330, label %252

252:                                              ; preds = %249
  %253 = bitcast %"class.blink::LayoutObject"* %250 to i1 (%"class.blink::LayoutObject"*, i32)***
  %254 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %253, align 8
  %255 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %254, i64 92
  %256 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %255, align 8
  %257 = tail call zeroext i1 %256(%"class.blink::LayoutObject"* nonnull %250, i32 2) #13
  br i1 %257, label %258, label %330

258:                                              ; preds = %252
  %259 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %250, i64 1, i32 4, i32 0, i64 4
  %260 = bitcast i8* %259 to i64*
  %261 = load i64, i64* %260, align 4
  %262 = lshr i64 %261, 32
  %263 = trunc i64 %262 to i32
  %264 = icmp slt i32 %263, 65
  %265 = trunc i64 %261 to i32
  %266 = icmp slt i32 %265, 65
  %267 = or i1 %266, %264
  br i1 %267, label %268, label %330

268:                                              ; preds = %258
  %269 = icmp eq %"class.blink::HeapVector.3354"* %1, null
  br i1 %269, label %876, label %270

270:                                              ; preds = %268
  %271 = bitcast %"class.blink::IgnoredReason"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %271) #13
  %272 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %5, i64 0, i32 0
  store i32 13, i32* %272, align 8
  %273 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %273, align 8
  %274 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %277 = load i32, i32* %276, align 8
  %278 = icmp eq i32 %275, %277
  br i1 %278, label %327, label %279, !prof !2

279:                                              ; preds = %270
  %280 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %281 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %280, align 8
  %282 = zext i32 %275 to i64
  %283 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %281, i64 %282, i32 0
  store i32 13, i32* %283, align 8
  %284 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %281, i64 %282, i32 1
  %285 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %5, i64 0, i32 1
  %286 = bitcast %"class.blink::Member.3360"* %285 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = bitcast %"class.blink::Member.3360"* %284 to i64*
  store i64 %287, i64* %288, align 8
  %289 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %324, label %291

291:                                              ; preds = %279
  %292 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %293 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %292, i64 0, i32 1
  %294 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %293) #13
  %295 = icmp eq i8* %294, null
  br i1 %295, label %296, label %298, !prof !2

296:                                              ; preds = %291
  %297 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %293, i8* %297) #13
  br label %298

298:                                              ; preds = %296, %291
  %299 = phi i8* [ %297, %296 ], [ %294, %291 ]
  %300 = bitcast i8* %299 to %"class.blink::ThreadState"**
  %301 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %300, align 8
  %302 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %301, i64 0, i32 9
  %303 = load i8, i8* %302, align 1, !range !4
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %324, label %305

305:                                              ; preds = %298
  %306 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %301, i64 0, i32 13
  %307 = load i64, i64* %306, align 8
  %308 = add i64 %307, 1
  store i64 %308, i64* %306, align 8
  %309 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %301, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %310 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %309, align 8
  %311 = load atomic i64, i64* %288 monotonic, align 8
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %321, label %313

313:                                              ; preds = %305
  %314 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %310, i64 0, i32 0, i32 0
  %315 = inttoptr i64 %311 to i8*
  %316 = bitcast %"class.blink::MarkingVisitor"* %310 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %317 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %316, align 8
  %318 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %317, i64 5
  %319 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %318, align 8
  tail call void %319(%"class.blink::Visitor"* %314, i8* nonnull %315, i8* %315, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  %320 = load i64, i64* %306, align 8
  br label %321

321:                                              ; preds = %313, %305
  %322 = phi i64 [ %308, %305 ], [ %320, %313 ]
  %323 = add i64 %322, -1
  store i64 %323, i64* %306, align 8
  br label %324

324:                                              ; preds = %279, %298, %321
  %325 = load i32, i32* %274, align 4
  %326 = add i32 %325, 1
  store i32 %326, i32* %274, align 4
  br label %329

327:                                              ; preds = %270
  %328 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3357"* %328, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %5) #13
  br label %329

329:                                              ; preds = %324, %327
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %271) #13
  br label %876

330:                                              ; preds = %252, %258, %249, %245
  %331 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %332 = bitcast %"class.blink::LayoutObject"* %331 to i1 (%"class.blink::LayoutObject"*, i32)***
  %333 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %332, align 8
  %334 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %333, i64 92
  %335 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %334, align 8
  %336 = tail call zeroext i1 %335(%"class.blink::LayoutObject"* %331, i32 0) #13
  br i1 %336, label %876, label %337

337:                                              ; preds = %330
  %338 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %339 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %338, i64 0, i32 4
  %340 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %339 to i96*
  %341 = load i96, i96* %340, align 4
  %342 = and i96 %341, 33554432
  %343 = icmp eq i96 %342, 0
  br i1 %343, label %484, label %344

344:                                              ; preds = %337
  %345 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %338, i64 0, i32 7
  %346 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %345, align 8
  %347 = tail call zeroext i1 @_ZNK5blink12LayoutObject22IsListMarkerForSummaryEv(%"class.blink::LayoutObject"* %346) #13
  br i1 %347, label %348, label %410

348:                                              ; preds = %344
  %349 = icmp eq %"class.blink::HeapVector.3354"* %1, null
  br i1 %349, label %876, label %350

350:                                              ; preds = %348
  %351 = bitcast %"class.blink::IgnoredReason"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %351) #13
  %352 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %6, i64 0, i32 0
  store i32 12, i32* %352, align 8
  %353 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %353, align 8
  %354 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %355 = load i32, i32* %354, align 4
  %356 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %357 = load i32, i32* %356, align 8
  %358 = icmp eq i32 %355, %357
  br i1 %358, label %407, label %359, !prof !2

359:                                              ; preds = %350
  %360 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %360, align 8
  %362 = zext i32 %355 to i64
  %363 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %361, i64 %362, i32 0
  store i32 12, i32* %363, align 8
  %364 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %361, i64 %362, i32 1
  %365 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %6, i64 0, i32 1
  %366 = bitcast %"class.blink::Member.3360"* %365 to i64*
  %367 = load i64, i64* %366, align 8
  %368 = bitcast %"class.blink::Member.3360"* %364 to i64*
  store i64 %367, i64* %368, align 8
  %369 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %404, label %371

371:                                              ; preds = %359
  %372 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %373 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %372, i64 0, i32 1
  %374 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %373) #13
  %375 = icmp eq i8* %374, null
  br i1 %375, label %376, label %378, !prof !2

376:                                              ; preds = %371
  %377 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %373, i8* %377) #13
  br label %378

378:                                              ; preds = %376, %371
  %379 = phi i8* [ %377, %376 ], [ %374, %371 ]
  %380 = bitcast i8* %379 to %"class.blink::ThreadState"**
  %381 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %380, align 8
  %382 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %381, i64 0, i32 9
  %383 = load i8, i8* %382, align 1, !range !4
  %384 = icmp eq i8 %383, 0
  br i1 %384, label %404, label %385

385:                                              ; preds = %378
  %386 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %381, i64 0, i32 13
  %387 = load i64, i64* %386, align 8
  %388 = add i64 %387, 1
  store i64 %388, i64* %386, align 8
  %389 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %381, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %390 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %389, align 8
  %391 = load atomic i64, i64* %368 monotonic, align 8
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %401, label %393

393:                                              ; preds = %385
  %394 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %390, i64 0, i32 0, i32 0
  %395 = inttoptr i64 %391 to i8*
  %396 = bitcast %"class.blink::MarkingVisitor"* %390 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %397 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %396, align 8
  %398 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %397, i64 5
  %399 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %398, align 8
  tail call void %399(%"class.blink::Visitor"* %394, i8* nonnull %395, i8* %395, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  %400 = load i64, i64* %386, align 8
  br label %401

401:                                              ; preds = %393, %385
  %402 = phi i64 [ %388, %385 ], [ %400, %393 ]
  %403 = add i64 %402, -1
  store i64 %403, i64* %386, align 8
  br label %404

404:                                              ; preds = %359, %378, %401
  %405 = load i32, i32* %354, align 4
  %406 = add i32 %405, 1
  store i32 %406, i32* %354, align 4
  br label %409

407:                                              ; preds = %350
  %408 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3357"* %408, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %6) #13
  br label %409

409:                                              ; preds = %404, %407
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %351) #13
  br label %876

410:                                              ; preds = %344
  %411 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %12) #13
  %412 = icmp eq %"class.blink::AXObject"* %411, null
  br i1 %412, label %876, label %413

413:                                              ; preds = %410, %481
  %414 = phi %"class.blink::AXObject"* [ %482, %481 ], [ %411, %410 ]
  %415 = tail call zeroext i1 @_ZNK5blink8AXObject22AccessibilityIsIgnoredEv(%"class.blink::AXObject"* nonnull %414) #13
  br i1 %415, label %416, label %876

416:                                              ; preds = %413
  %417 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %414) #13
  %418 = icmp eq i32 %417, 105
  br i1 %418, label %419, label %481

419:                                              ; preds = %416
  %420 = icmp eq %"class.blink::HeapVector.3354"* %1, null
  br i1 %420, label %876, label %421

421:                                              ; preds = %419
  %422 = bitcast %"class.blink::IgnoredReason"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %422) #13
  %423 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %7, i64 0, i32 0
  store i32 12, i32* %423, align 8
  %424 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %424, align 8
  %425 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %426 = load i32, i32* %425, align 4
  %427 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %428 = load i32, i32* %427, align 8
  %429 = icmp eq i32 %426, %428
  br i1 %429, label %478, label %430, !prof !2

430:                                              ; preds = %421
  %431 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %432 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %431, align 8
  %433 = zext i32 %426 to i64
  %434 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %432, i64 %433, i32 0
  store i32 12, i32* %434, align 8
  %435 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %432, i64 %433, i32 1
  %436 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %7, i64 0, i32 1
  %437 = bitcast %"class.blink::Member.3360"* %436 to i64*
  %438 = load i64, i64* %437, align 8
  %439 = bitcast %"class.blink::Member.3360"* %435 to i64*
  store i64 %438, i64* %439, align 8
  %440 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %475, label %442

442:                                              ; preds = %430
  %443 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %444 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %443, i64 0, i32 1
  %445 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %444) #13
  %446 = icmp eq i8* %445, null
  br i1 %446, label %447, label %449, !prof !2

447:                                              ; preds = %442
  %448 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %444, i8* %448) #13
  br label %449

449:                                              ; preds = %447, %442
  %450 = phi i8* [ %448, %447 ], [ %445, %442 ]
  %451 = bitcast i8* %450 to %"class.blink::ThreadState"**
  %452 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %451, align 8
  %453 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %452, i64 0, i32 9
  %454 = load i8, i8* %453, align 1, !range !4
  %455 = icmp eq i8 %454, 0
  br i1 %455, label %475, label %456

456:                                              ; preds = %449
  %457 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %452, i64 0, i32 13
  %458 = load i64, i64* %457, align 8
  %459 = add i64 %458, 1
  store i64 %459, i64* %457, align 8
  %460 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %452, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %461 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %460, align 8
  %462 = load atomic i64, i64* %439 monotonic, align 8
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %472, label %464

464:                                              ; preds = %456
  %465 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %461, i64 0, i32 0, i32 0
  %466 = inttoptr i64 %462 to i8*
  %467 = bitcast %"class.blink::MarkingVisitor"* %461 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %468 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %467, align 8
  %469 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %468, i64 5
  %470 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %469, align 8
  tail call void %470(%"class.blink::Visitor"* %465, i8* nonnull %466, i8* %466, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  %471 = load i64, i64* %457, align 8
  br label %472

472:                                              ; preds = %464, %456
  %473 = phi i64 [ %459, %456 ], [ %471, %464 ]
  %474 = add i64 %473, -1
  store i64 %474, i64* %457, align 8
  br label %475

475:                                              ; preds = %430, %449, %472
  %476 = load i32, i32* %425, align 4
  %477 = add i32 %476, 1
  store i32 %477, i32* %425, align 4
  br label %480

478:                                              ; preds = %421
  %479 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3357"* %479, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %7) #13
  br label %480

480:                                              ; preds = %475, %478
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %422) #13
  br label %876

481:                                              ; preds = %416
  %482 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* nonnull %414) #13
  %483 = icmp eq %"class.blink::AXObject"* %482, null
  br i1 %483, label %876, label %413

484:                                              ; preds = %337
  %485 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %485) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %485, i8 -86, i64 16, i1 false)
  call void @_ZN5blink12AXNodeObject13GetCSSAltTextEPKNS_4NodeE(%"class.absl::optional.3579"* nonnull sret %8, %"class.blink::Node"* %17) #13
  %486 = load i8, i8* %485, align 8, !range !4
  %487 = icmp eq i8 %486, 0
  br i1 %487, label %496, label %488

488:                                              ; preds = %484
  %489 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %490 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %489, align 8
  %491 = icmp eq %"class.WTF::StringImpl"* %490, null
  br i1 %491, label %853, label %492

492:                                              ; preds = %488
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %490, i64 0, i32 1
  %494 = load i32, i32* %493, align 4
  %495 = icmp eq i32 %494, 0
  br label %853

496:                                              ; preds = %484
  %497 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %12) #13
  %498 = icmp eq i32 %497, 145
  br i1 %498, label %853, label %499

499:                                              ; preds = %496
  %500 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %501 = bitcast %"class.blink::LayoutObject"* %500 to i1 (%"class.blink::LayoutObject"*, i32)***
  %502 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %501, align 8
  %503 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %502, i64 92
  %504 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %503, align 8
  %505 = call zeroext i1 %504(%"class.blink::LayoutObject"* %500, i32 15) #13
  br i1 %505, label %521, label %506

506:                                              ; preds = %499
  %507 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %501, align 8
  %508 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %507, i64 92
  %509 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %508, align 8
  %510 = call zeroext i1 %509(%"class.blink::LayoutObject"* %500, i32 13) #13
  br i1 %510, label %521, label %511

511:                                              ; preds = %506
  %512 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %501, align 8
  %513 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %512, i64 92
  %514 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %513, align 8
  %515 = call zeroext i1 %514(%"class.blink::LayoutObject"* %500, i32 36) #13
  br i1 %515, label %521, label %516

516:                                              ; preds = %511
  %517 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %501, align 8
  %518 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %517, i64 92
  %519 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %518, align 8
  %520 = call zeroext i1 %519(%"class.blink::LayoutObject"* %500, i32 28) #13
  br i1 %520, label %521, label %523

521:                                              ; preds = %511, %516, %506, %499
  %522 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  br label %529

523:                                              ; preds = %516
  %524 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %501, align 8
  %525 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %524, i64 92
  %526 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %525, align 8
  %527 = call zeroext i1 %526(%"class.blink::LayoutObject"* %500, i32 31) #13
  %528 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  br i1 %527, label %529, label %594

529:                                              ; preds = %521, %523
  %530 = phi %"class.blink::LayoutObject"* [ %522, %521 ], [ %528, %523 ]
  %531 = call zeroext i1 @_ZNK5blink12LayoutObject22IsListMarkerForSummaryEv(%"class.blink::LayoutObject"* %530) #13
  br i1 %531, label %532, label %853

532:                                              ; preds = %529
  %533 = icmp eq %"class.blink::HeapVector.3354"* %1, null
  br i1 %533, label %853, label %534

534:                                              ; preds = %532
  %535 = bitcast %"class.blink::IgnoredReason"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %535) #13
  %536 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %9, i64 0, i32 0
  store i32 12, i32* %536, align 8
  %537 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %9, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %537, align 8
  %538 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %539 = load i32, i32* %538, align 4
  %540 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %541 = load i32, i32* %540, align 8
  %542 = icmp eq i32 %539, %541
  br i1 %542, label %591, label %543, !prof !2

543:                                              ; preds = %534
  %544 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %545 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %544, align 8
  %546 = zext i32 %539 to i64
  %547 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %545, i64 %546, i32 0
  store i32 12, i32* %547, align 8
  %548 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %545, i64 %546, i32 1
  %549 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %9, i64 0, i32 1
  %550 = bitcast %"class.blink::Member.3360"* %549 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = bitcast %"class.blink::Member.3360"* %548 to i64*
  store i64 %551, i64* %552, align 8
  %553 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %588, label %555

555:                                              ; preds = %543
  %556 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %557 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %556, i64 0, i32 1
  %558 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %557) #13
  %559 = icmp eq i8* %558, null
  br i1 %559, label %560, label %562, !prof !2

560:                                              ; preds = %555
  %561 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %557, i8* %561) #13
  br label %562

562:                                              ; preds = %560, %555
  %563 = phi i8* [ %561, %560 ], [ %558, %555 ]
  %564 = bitcast i8* %563 to %"class.blink::ThreadState"**
  %565 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %564, align 8
  %566 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %565, i64 0, i32 9
  %567 = load i8, i8* %566, align 1, !range !4
  %568 = icmp eq i8 %567, 0
  br i1 %568, label %588, label %569

569:                                              ; preds = %562
  %570 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %565, i64 0, i32 13
  %571 = load i64, i64* %570, align 8
  %572 = add i64 %571, 1
  store i64 %572, i64* %570, align 8
  %573 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %565, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %574 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %573, align 8
  %575 = load atomic i64, i64* %552 monotonic, align 8
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %585, label %577

577:                                              ; preds = %569
  %578 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %574, i64 0, i32 0, i32 0
  %579 = inttoptr i64 %575 to i8*
  %580 = bitcast %"class.blink::MarkingVisitor"* %574 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %581 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %580, align 8
  %582 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %581, i64 5
  %583 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %582, align 8
  call void %583(%"class.blink::Visitor"* %578, i8* nonnull %579, i8* %579, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  %584 = load i64, i64* %570, align 8
  br label %585

585:                                              ; preds = %577, %569
  %586 = phi i64 [ %572, %569 ], [ %584, %577 ]
  %587 = add i64 %586, -1
  store i64 %587, i64* %570, align 8
  br label %588

588:                                              ; preds = %543, %562, %585
  %589 = load i32, i32* %538, align 4
  %590 = add i32 %589, 1
  store i32 %590, i32* %538, align 4
  br label %593

591:                                              ; preds = %534
  %592 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3357"* %592, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %9) #13
  br label %593

593:                                              ; preds = %588, %591
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %535) #13
  br label %853

594:                                              ; preds = %523
  %595 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %528, i64 0, i32 4
  %596 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %595 to i96*
  %597 = load i96, i96* %596, align 4
  %598 = and i96 %597, 16777216
  %599 = icmp eq i96 %598, 0
  br i1 %599, label %600, label %611

600:                                              ; preds = %594
  %601 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %528, i64 0, i32 6, i32 0, i32 0
  %602 = load %"class.blink::Node"*, %"class.blink::Node"** %601, align 8
  %603 = icmp eq %"class.blink::Node"* %602, null
  br i1 %603, label %611, label %604

604:                                              ; preds = %600
  %605 = bitcast %"class.blink::Node"* %602 to i8 (%"class.blink::Node"*)***
  %606 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %605, align 8
  %607 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %606, i64 34
  %608 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %607, align 8
  %609 = call zeroext i8 %608(%"class.blink::Node"* nonnull %602) #13
  %610 = icmp eq i8 %609, 0
  br i1 %610, label %611, label %620

611:                                              ; preds = %604, %594, %600
  %612 = call zeroext i1 @_ZNK5blink8AXObject21IsScrollableContainerEv(%"class.blink::AXObject"* %12) #13
  br i1 %612, label %853, label %613

613:                                              ; preds = %611
  %614 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %615 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %614, i64 0, i32 4
  %616 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %615 to i96*
  %617 = load i96, i96* %616, align 4
  %618 = and i96 %617, 113336795588871485128704
  %619 = icmp eq i96 %618, 0
  br i1 %619, label %620, label %853

620:                                              ; preds = %604, %613
  br i1 %120, label %621, label %629

621:                                              ; preds = %620
  %622 = call %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlEPKNS_4NodeE(%"class.blink::Node"* nonnull %17) #13
  %623 = icmp eq %"class.blink::TextControlElement"* %622, null
  br i1 %623, label %629, label %624

624:                                              ; preds = %621
  %625 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %622, i64 0, i32 1, i32 0, i32 0
  %626 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %625, align 8
  %627 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %626, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %628 = icmp eq %"class.blink::Node"* %627, %17
  br i1 %628, label %853, label %629

629:                                              ; preds = %621, %624, %620
  %630 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %631 = bitcast %"class.blink::LayoutObject"* %630 to i1 (%"class.blink::LayoutObject"*)***
  %632 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %631, align 8
  %633 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %632, i64 24
  %634 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %633, align 8
  %635 = call zeroext i1 %634(%"class.blink::LayoutObject"* %630) #13
  %636 = bitcast %"class.blink::LayoutObject"* %630 to %"class.blink::LayoutBlockFlow"*
  %637 = icmp eq %"class.blink::LayoutObject"* %630, null
  %638 = xor i1 %635, true
  %639 = or i1 %637, %638
  br i1 %639, label %761, label %640

640:                                              ; preds = %629
  %641 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %630, i64 0, i32 4
  %642 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %641 to i96*
  %643 = load i96, i96* %642, align 4
  %644 = and i96 %643, 17592186044416
  %645 = icmp eq i96 %644, 0
  br i1 %645, label %761, label %646

646:                                              ; preds = %640
  %647 = bitcast %"class.blink::LayoutObject"* %630 to i1 (%"class.blink::LayoutObject"*, i32)***
  %648 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %647, align 8
  %649 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %648, i64 92
  %650 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %649, align 8
  %651 = call zeroext i1 %650(%"class.blink::LayoutObject"* nonnull %630, i32 30) #13
  br i1 %651, label %652, label %668

652:                                              ; preds = %646
  %653 = bitcast %"class.blink::LayoutObject"* %630 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %654 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %653, align 8
  %655 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %654, i64 216
  %656 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %655, align 8
  %657 = call zeroext i1 %656(%"class.blink::LayoutBlockFlow"* nonnull %636) #13
  br i1 %657, label %658, label %673

658:                                              ; preds = %652
  %659 = bitcast %"class.blink::LayoutObject"* %630 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %660 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %659, align 8
  %661 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %660, i64 213
  %662 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %661, align 8
  %663 = call %"struct.blink::NGInlineNodeData"* %662(%"class.blink::LayoutBlockFlow"* nonnull %636) #13
  %664 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %663, i64 0, i32 3
  %665 = load i8, i8* %664, align 8
  %666 = and i8 %665, 16
  %667 = icmp eq i8 %666, 0
  br i1 %667, label %853, label %673

668:                                              ; preds = %646
  %669 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %630, i64 2, i32 9
  %670 = bitcast %"class.blink::LayoutObject"** %669 to %"class.blink::InlineFlowBox"**
  %671 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %670, align 8
  %672 = icmp eq %"class.blink::InlineFlowBox"* %671, null
  br i1 %672, label %673, label %853

673:                                              ; preds = %668, %652, %658
  br i1 %120, label %674, label %699

674:                                              ; preds = %673
  %675 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 0
  %676 = call dereferenceable(16) %"class.WTF::Vector.284"* @_ZN5blink10event_util21MouseButtonEventTypesEv() #13
  %677 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %676, i64 0, i32 0, i32 0, i32 0
  %678 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %677, align 8
  %679 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %676, i64 0, i32 0, i32 0, i32 2
  %680 = load i32, i32* %679, align 4
  %681 = zext i32 %680 to i64
  %682 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %678, i64 %681
  %683 = icmp eq i32 %680, 0
  br i1 %683, label %699, label %684

684:                                              ; preds = %674
  %685 = bitcast %"class.blink::Node"* %17 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  br label %686

686:                                              ; preds = %696, %684
  %687 = phi %"class.WTF::AtomicString"* [ %678, %684 ], [ %697, %696 ]
  %688 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %685, align 8
  %689 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %688, i64 25
  %690 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %689, align 8
  %691 = call %"class.blink::EventTargetData"* %690(%"class.blink::EventTarget"* %675) #13
  %692 = icmp eq %"class.blink::EventTargetData"* %691, null
  br i1 %692, label %696, label %693

693:                                              ; preds = %686
  %694 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %691, i64 0, i32 0
  %695 = call zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"* %694, %"class.WTF::AtomicString"* dereferenceable(8) %687) #13
  br i1 %695, label %853, label %696

696:                                              ; preds = %693, %686
  %697 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %687, i64 1
  %698 = icmp eq %"class.WTF::AtomicString"* %697, %682
  br i1 %698, label %699, label %686

699:                                              ; preds = %696, %674, %673
  %700 = icmp eq %"class.blink::HeapVector.3354"* %1, null
  br i1 %700, label %853, label %701

701:                                              ; preds = %699
  %702 = bitcast %"class.blink::IgnoredReason"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %702) #13
  %703 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %10, i64 0, i32 0
  store i32 14, i32* %703, align 8
  %704 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %10, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %704, align 8
  %705 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %706 = load i32, i32* %705, align 4
  %707 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %708 = load i32, i32* %707, align 8
  %709 = icmp eq i32 %706, %708
  br i1 %709, label %758, label %710, !prof !2

710:                                              ; preds = %701
  %711 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %712 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %711, align 8
  %713 = zext i32 %706 to i64
  %714 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %712, i64 %713, i32 0
  store i32 14, i32* %714, align 8
  %715 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %712, i64 %713, i32 1
  %716 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %10, i64 0, i32 1
  %717 = bitcast %"class.blink::Member.3360"* %716 to i64*
  %718 = load i64, i64* %717, align 8
  %719 = bitcast %"class.blink::Member.3360"* %715 to i64*
  store i64 %718, i64* %719, align 8
  %720 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %721 = icmp eq i32 %720, 0
  br i1 %721, label %755, label %722

722:                                              ; preds = %710
  %723 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %724 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %723, i64 0, i32 1
  %725 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %724) #13
  %726 = icmp eq i8* %725, null
  br i1 %726, label %727, label %729, !prof !2

727:                                              ; preds = %722
  %728 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %724, i8* %728) #13
  br label %729

729:                                              ; preds = %727, %722
  %730 = phi i8* [ %728, %727 ], [ %725, %722 ]
  %731 = bitcast i8* %730 to %"class.blink::ThreadState"**
  %732 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %731, align 8
  %733 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %732, i64 0, i32 9
  %734 = load i8, i8* %733, align 1, !range !4
  %735 = icmp eq i8 %734, 0
  br i1 %735, label %755, label %736

736:                                              ; preds = %729
  %737 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %732, i64 0, i32 13
  %738 = load i64, i64* %737, align 8
  %739 = add i64 %738, 1
  store i64 %739, i64* %737, align 8
  %740 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %732, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %741 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %740, align 8
  %742 = load atomic i64, i64* %719 monotonic, align 8
  %743 = icmp eq i64 %742, 0
  br i1 %743, label %752, label %744

744:                                              ; preds = %736
  %745 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %741, i64 0, i32 0, i32 0
  %746 = inttoptr i64 %742 to i8*
  %747 = bitcast %"class.blink::MarkingVisitor"* %741 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %748 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %747, align 8
  %749 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %748, i64 5
  %750 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %749, align 8
  call void %750(%"class.blink::Visitor"* %745, i8* nonnull %746, i8* %746, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  %751 = load i64, i64* %737, align 8
  br label %752

752:                                              ; preds = %744, %736
  %753 = phi i64 [ %739, %736 ], [ %751, %744 ]
  %754 = add i64 %753, -1
  store i64 %754, i64* %737, align 8
  br label %755

755:                                              ; preds = %710, %729, %752
  %756 = load i32, i32* %705, align 4
  %757 = add i32 %756, 1
  store i32 %757, i32* %705, align 4
  br label %760

758:                                              ; preds = %701
  %759 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3357"* %759, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %10) #13
  br label %760

760:                                              ; preds = %755, %758
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %702) #13
  br label %853

761:                                              ; preds = %640, %629
  br i1 %18, label %791, label %762

762:                                              ; preds = %761
  %763 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 1
  %764 = load i32, i32* %763, align 8
  %765 = and i32 %764, 48
  %766 = icmp eq i32 %765, 32
  br i1 %766, label %767, label %791

767:                                              ; preds = %762
  %768 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names5kGTagE, align 8
  %769 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %768, i64 0, i32 0, i32 0, i32 0
  %770 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %769, align 8
  %771 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 1, i32 2
  %772 = bitcast %"class.blink::Member.318"* %771 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %773 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %772, align 8
  %774 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %773, i64 0, i32 3, i32 0, i32 0, i32 0
  %775 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %774, align 8
  %776 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %770, i64 0, i32 3, i32 0, i32 0, i32 0
  %777 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %776, align 8
  %778 = icmp eq %"class.WTF::StringImpl"* %775, %777
  br i1 %778, label %779, label %791

779:                                              ; preds = %767
  %780 = bitcast %"class.blink::AXLayoutObject"* %0 to %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)***
  %781 = load %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)**, %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)*** %780, align 8
  %782 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)*, %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)** %781, i64 126
  %783 = load %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)*, %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)** %782, align 8
  %784 = call %"class.blink::Document"* %783(%"class.blink::AXLayoutObject"* %0) #13
  %785 = call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %784) #13
  %786 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %785, i64 0, i32 71
  %787 = bitcast [14 x i8]* %786 to i112*
  %788 = load i112, i112* %787, align 8
  %789 = and i112 %788, 64
  %790 = icmp eq i112 %789, 0
  br i1 %790, label %791, label %853

791:                                              ; preds = %779, %762, %761, %767
  %792 = icmp eq %"class.blink::HeapVector.3354"* %1, null
  br i1 %792, label %853, label %793

793:                                              ; preds = %791
  %794 = bitcast %"class.blink::IgnoredReason"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %794) #13
  %795 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %11, i64 0, i32 0
  store i32 14, i32* %795, align 8
  %796 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %11, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %796, align 8
  %797 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %798 = load i32, i32* %797, align 4
  %799 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %800 = load i32, i32* %799, align 8
  %801 = icmp eq i32 %798, %800
  br i1 %801, label %850, label %802, !prof !2

802:                                              ; preds = %793
  %803 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %804 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %803, align 8
  %805 = zext i32 %798 to i64
  %806 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %804, i64 %805, i32 0
  store i32 14, i32* %806, align 8
  %807 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %804, i64 %805, i32 1
  %808 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %11, i64 0, i32 1
  %809 = bitcast %"class.blink::Member.3360"* %808 to i64*
  %810 = load i64, i64* %809, align 8
  %811 = bitcast %"class.blink::Member.3360"* %807 to i64*
  store i64 %810, i64* %811, align 8
  %812 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %847, label %814

814:                                              ; preds = %802
  %815 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %816 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %815, i64 0, i32 1
  %817 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %816) #13
  %818 = icmp eq i8* %817, null
  br i1 %818, label %819, label %821, !prof !2

819:                                              ; preds = %814
  %820 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %816, i8* %820) #13
  br label %821

821:                                              ; preds = %819, %814
  %822 = phi i8* [ %820, %819 ], [ %817, %814 ]
  %823 = bitcast i8* %822 to %"class.blink::ThreadState"**
  %824 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %823, align 8
  %825 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %824, i64 0, i32 9
  %826 = load i8, i8* %825, align 1, !range !4
  %827 = icmp eq i8 %826, 0
  br i1 %827, label %847, label %828

828:                                              ; preds = %821
  %829 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %824, i64 0, i32 13
  %830 = load i64, i64* %829, align 8
  %831 = add i64 %830, 1
  store i64 %831, i64* %829, align 8
  %832 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %824, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %833 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %832, align 8
  %834 = load atomic i64, i64* %811 monotonic, align 8
  %835 = icmp eq i64 %834, 0
  br i1 %835, label %844, label %836

836:                                              ; preds = %828
  %837 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %833, i64 0, i32 0, i32 0
  %838 = inttoptr i64 %834 to i8*
  %839 = bitcast %"class.blink::MarkingVisitor"* %833 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %840 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %839, align 8
  %841 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %840, i64 5
  %842 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %841, align 8
  call void %842(%"class.blink::Visitor"* %837, i8* nonnull %838, i8* %838, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  %843 = load i64, i64* %829, align 8
  br label %844

844:                                              ; preds = %836, %828
  %845 = phi i64 [ %831, %828 ], [ %843, %836 ]
  %846 = add i64 %845, -1
  store i64 %846, i64* %829, align 8
  br label %847

847:                                              ; preds = %802, %821, %844
  %848 = load i32, i32* %797, align 4
  %849 = add i32 %848, 1
  store i32 %849, i32* %797, align 4
  br label %852

850:                                              ; preds = %793
  %851 = getelementptr inbounds %"class.blink::HeapVector.3354", %"class.blink::HeapVector.3354"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3357"* %851, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %11) #13
  br label %852

852:                                              ; preds = %847, %850
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %794) #13
  br label %853

853:                                              ; preds = %693, %779, %668, %613, %658, %624, %492, %488, %760, %699, %791, %852, %611, %529, %593, %532, %496
  %854 = phi i1 [ false, %496 ], [ true, %532 ], [ true, %593 ], [ false, %529 ], [ false, %611 ], [ false, %613 ], [ false, %779 ], [ false, %668 ], [ true, %699 ], [ true, %760 ], [ true, %791 ], [ true, %852 ], [ true, %488 ], [ %495, %492 ], [ false, %624 ], [ false, %658 ], [ false, %693 ]
  %855 = load i8, i8* %485, align 8, !range !4
  %856 = icmp eq i8 %855, 0
  br i1 %856, label %875, label %857

857:                                              ; preds = %853
  %858 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %859 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %858, align 8
  %860 = icmp eq %"class.WTF::StringImpl"* %859, null
  br i1 %860, label %874, label %861

861:                                              ; preds = %857
  %862 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %859, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %863 = load atomic i32, i32* %862 monotonic, align 4
  %864 = and i32 %863, 2
  %865 = icmp eq i32 %864, 0
  %866 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %859, i64 0, i32 0
  %867 = load i32, i32* %866, align 4
  br i1 %865, label %868, label %870

868:                                              ; preds = %861
  %869 = add i32 %867, -1
  store i32 %869, i32* %866, align 4
  br label %870

870:                                              ; preds = %868, %861
  %871 = phi i32 [ %869, %868 ], [ %867, %861 ]
  %872 = icmp eq i32 %871, 0
  br i1 %872, label %873, label %874

873:                                              ; preds = %870
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %859) #13
  br label %874

874:                                              ; preds = %873, %870, %857
  store i8 0, i8* %485, align 8
  br label %875

875:                                              ; preds = %853, %874
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %485) #13
  br label %876

876:                                              ; preds = %481, %413, %410, %24, %40, %101, %111, %875, %109, %112, %158, %183, %244, %181, %247, %329, %330, %348, %409, %480, %419, %268, %102, %108, %2
  %877 = phi i1 [ false, %2 ], [ true, %24 ], [ true, %40 ], [ true, %101 ], [ true, %108 ], [ false, %102 ], [ true, %111 ], [ %854, %875 ], [ false, %109 ], [ false, %112 ], [ true, %158 ], [ true, %183 ], [ true, %244 ], [ false, %181 ], [ false, %247 ], [ true, %329 ], [ false, %330 ], [ true, %348 ], [ true, %409 ], [ true, %419 ], [ true, %480 ], [ true, %268 ], [ false, %410 ], [ false, %413 ], [ false, %481 ]
  ret i1 %877
}

declare i32 @_ZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.3354"*) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLMediaElement18ShouldShowControlsENS0_21RecordMetricsBehaviorE(%"class.blink::HTMLMediaElement"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject8IsCanvasEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject24CanvasHasFallbackContentEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject22IsListMarkerForSummaryEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject22AccessibilityIsIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN5blink12AXNodeObject13GetCSSAltTextEPKNS_4NodeE(%"class.absl::optional.3579"* sret, %"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject21IsScrollableContainerEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.WTF::Vector.284"* @_ZN5blink10event_util21MouseButtonEventTypesEv() local_unnamed_addr #1

declare %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14AXLayoutObject12GetListStyleEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = icmp eq %"class.blink::LayoutObject"* %13, null
  br i1 %14, label %177, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = icmp eq %"class.blink::ComputedStyle"* %17, null
  br i1 %18, label %177, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::StyleImage"* @_ZNK5blink13ComputedStyle14ListStyleImageEv(%"class.blink::ComputedStyle"* nonnull %17) #13
  %21 = icmp eq %"class.blink::StyleImage"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.blink::StyleImage"* %20 to i1 (%"class.blink::StyleImage"*)***
  %24 = load i1 (%"class.blink::StyleImage"*)**, i1 (%"class.blink::StyleImage"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %24, i64 6
  %26 = load i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::StyleImage"* nonnull %20) #13
  br i1 %27, label %28, label %177

28:                                               ; preds = %19, %22
  %29 = bitcast %"class.blink::AXLayoutObject"* %0 to %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)***
  %30 = load %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)**, %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)*, %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)** %30, i64 126
  %32 = load %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)*, %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)** %31, align 8
  %33 = tail call %"class.blink::Document"* %32(%"class.blink::AXLayoutObject"* %0) #13
  %34 = tail call i32 @_ZN5blink10ListMarker20GetListStyleCategoryERNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::Document"* dereferenceable(2848) %33, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %17) #13
  switch i32 %34, label %176 [
    i32 0, label %177
    i32 1, label %35
    i32 2, label %113
    i32 3, label %175
  ]

35:                                               ; preds = %28
  %36 = tail call %"class.blink::ListStyleTypeData"* @_ZNK5blink13ComputedStyle16GetListStyleTypeEv(%"class.blink::ComputedStyle"* nonnull %17) #13
  %37 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13
  %38 = getelementptr inbounds %"class.blink::ListStyleTypeData", %"class.blink::ListStyleTypeData"* %36, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %45

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %42, align 8
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %44 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %43, i64* %44, align 8
  br label %53

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %51 = bitcast i8** %50 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %51, align 8
  %52 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %53

53:                                               ; preds = %45, %41
  %54 = phi i64 [ %52, %45 ], [ %43, %41 ]
  %55 = phi i32 [ %48, %45 ], [ 0, %41 ]
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %55, i32* %56, align 8
  %57 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #13
  %58 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %54, i64* %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 4, i32* %60, align 8
  %61 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13
  br i1 %61, label %177, label %62

62:                                               ; preds = %53
  %63 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #13
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %67, align 8
  %68 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %69 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %68, i64* %69, align 8
  br label %78

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %76, align 8
  %77 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %78

78:                                               ; preds = %70, %66
  %79 = phi i64 [ %77, %70 ], [ %68, %66 ]
  %80 = phi i32 [ %73, %70 ], [ 0, %66 ]
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %80, i32* %81, align 8
  %82 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #13
  %83 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %79, i64* %83, align 8
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 6, i32* %85, align 8
  %86 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #13
  br i1 %86, label %177, label %87

87:                                               ; preds = %78
  %88 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #13
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %95

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %92, align 8
  %93 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %94 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %93, i64* %94, align 8
  br label %103

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %101 = bitcast i8** %100 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %101, align 8
  %102 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

103:                                              ; preds = %95, %91
  %104 = phi i64 [ %102, %95 ], [ %93, %91 ]
  %105 = phi i32 [ %98, %95 ], [ 0, %91 ]
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %105, i32* %106, align 8
  %107 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #13
  %108 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %104, i64* %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8** %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 6, i32* %110, align 8
  %111 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #13
  %112 = select i1 %111, i32 5, i32 6
  br label %177

113:                                              ; preds = %28
  %114 = tail call %"class.blink::ListStyleTypeData"* @_ZNK5blink13ComputedStyle16GetListStyleTypeEv(%"class.blink::ComputedStyle"* nonnull %17) #13
  %115 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #13
  %116 = getelementptr inbounds %"class.blink::ListStyleTypeData", %"class.blink::ListStyleTypeData"* %114, i64 0, i32 1, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %119, label %123

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %120, align 8
  %121 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %122 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %121, i64* %122, align 8
  br label %131

123:                                              ; preds = %113
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %124, align 8
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 1
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %129 = bitcast i8** %128 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %127, %"class.WTF::StringImpl"** %129, align 8
  %130 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %131

131:                                              ; preds = %123, %119
  %132 = phi i64 [ %130, %123 ], [ %121, %119 ]
  %133 = phi i32 [ %126, %123 ], [ 0, %119 ]
  %134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %133, i32* %134, align 8
  %135 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #13
  %136 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %132, i64* %136, align 8
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8** %137, align 8
  %138 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 7, i32* %138, align 8
  %139 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #13
  br i1 %139, label %177, label %140

140:                                              ; preds = %131
  %141 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #13
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %144, label %148

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %145, align 8
  %146 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %147 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %146, i64* %147, align 8
  br label %156

148:                                              ; preds = %140
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %149, align 8
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 1
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %154 = bitcast i8** %153 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %152, %"class.WTF::StringImpl"** %154, align 8
  %155 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %156

156:                                              ; preds = %148, %144
  %157 = phi i64 [ %155, %148 ], [ %146, %144 ]
  %158 = phi i32 [ %151, %148 ], [ 0, %144 ]
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %158, i32* %159, align 8
  %160 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #13
  %161 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %157, i64* %161, align 8
  %162 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i8** %162, align 8
  %163 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 20, i32* %163, align 8
  %164 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #13
  br i1 %164, label %165, label %174

165:                                              ; preds = %156
  %166 = load %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)**, %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)*** %29, align 8
  %167 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)*, %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)** %166, i64 126
  %168 = load %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)*, %"class.blink::Document"* (%"class.blink::AXLayoutObject"*)** %167, align 8
  %169 = call %"class.blink::Document"* %168(%"class.blink::AXLayoutObject"* %0) #13
  %170 = call dereferenceable(160) %"class.blink::CounterStyle"* @_ZN5blink10ListMarker15GetCounterStyleERNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::Document"* dereferenceable(2848) %169, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %17) #13
  %171 = getelementptr inbounds %"class.blink::CounterStyle", %"class.blink::CounterStyle"* %170, i64 0, i32 19
  %172 = load i8, i8* %171, align 8, !range !4
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %165, %156
  br label %177

175:                                              ; preds = %28
  br label %177

176:                                              ; preds = %28
  unreachable

177:                                              ; preds = %165, %15, %1, %174, %131, %53, %78, %103, %28, %22, %175
  %178 = phi i32 [ 6, %175 ], [ 3, %22 ], [ %34, %28 ], [ 2, %53 ], [ 1, %78 ], [ %112, %103 ], [ 6, %174 ], [ 4, %131 ], [ 4, %165 ], [ 0, %1 ], [ 0, %15 ]
  ret i32 %178
}

declare %"class.blink::StyleImage"* @_ZNK5blink13ComputedStyle14ListStyleImageEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare i32 @_ZN5blink10ListMarker20GetListStyleCategoryERNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare %"class.blink::ListStyleTypeData"* @_ZNK5blink13ComputedStyle16GetListStyleTypeEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.blink::CounterStyle"* @_ZN5blink10ListMarker15GetCounterStyleERNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink14AXLayoutObject10NextOnLineEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #13
  br i1 %4, label %211, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = bitcast %"class.blink::LayoutObject"* %7 to i1 (%"class.blink::LayoutObject"*, i32)***
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, i64 92
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutObject"* %7, i32 15) #13
  br i1 %12, label %23, label %13

13:                                               ; preds = %5
  %14 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %8, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, i64 92
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutObject"* %7, i32 36) #13
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %8, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %19, i64 92
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::LayoutObject"* %7, i32 31) #13
  br i1 %22, label %23, label %26

23:                                               ; preds = %5, %13, %18
  %24 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject27NextSiblingIncludingIgnoredEv(%"class.blink::AXObject"* %3) #13
  %25 = tail call fastcc %"class.blink::AXObject"* @_ZN5blinkL29GetDeepestAXChildInLayoutTreeEPNS_8AXObjectEb(%"class.blink::AXObject"* %24, i1 zeroext true)
  br label %211

26:                                               ; preds = %18
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 4
  %29 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %28 to i96*
  %30 = load i96, i96* %29, align 4
  %31 = and i96 %30, 134217728
  %32 = icmp eq i96 %31, 0
  br i1 %32, label %33, label %43

33:                                               ; preds = %26
  %34 = bitcast %"class.blink::LayoutObject"* %27 to i1 (%"class.blink::LayoutObject"*)***
  %35 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %35, i64 26
  %37 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::LayoutObject"* %27) #13
  br i1 %38, label %43, label %39

39:                                               ; preds = %33
  %40 = load i96, i96* %29, align 4
  %41 = and i96 %40, 33554432
  %42 = icmp eq i96 %41, 0
  br i1 %42, label %123, label %43

43:                                               ; preds = %26, %33, %39
  %44 = tail call %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"* %27) #13
  %45 = icmp eq %"class.blink::LayoutBlockFlow"* %44, null
  br i1 %45, label %123, label %46

46:                                               ; preds = %43
  %47 = bitcast %"class.blink::AXLayoutObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %48 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %48, i64 125
  %50 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %49, align 8
  %51 = tail call %"class.blink::LayoutObject"* %50(%"class.blink::AXObject"* %3) #13
  %52 = bitcast %"class.blink::LayoutObject"* %51 to i1 (%"class.blink::LayoutObject"*, i32)***
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %52, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, i64 92
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::LayoutObject"* %51, i32 15) #13
  br i1 %56, label %211, label %57

57:                                               ; preds = %46
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %52, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, i64 92
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::LayoutObject"* %51, i32 36) #13
  br i1 %61, label %211, label %62

62:                                               ; preds = %57
  %63 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %52, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %63, i64 92
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::LayoutObject"* %51, i32 31) #13
  br i1 %66, label %211, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %51, i64 0, i32 4
  %69 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %68 to i96*
  %70 = load i96, i96* %69, align 4
  %71 = and i96 %70, 268435456
  %72 = icmp eq i96 %71, 0
  br i1 %72, label %211, label %73

73:                                               ; preds = %67
  %74 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %74) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 112, i1 false) #13
  %75 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 81, i1 false) #13
  %76 = bitcast %"class.blink::LayoutBlockFlow"** %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 20, i1 false) #13
  %77 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  br label %78

78:                                               ; preds = %89, %73
  %79 = phi %"class.blink::LayoutObject"* [ %51, %73 ], [ %91, %89 ]
  call void @_ZN5blink14NGInlineCursor27MoveToIncludingCulledInlineERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %79) #13
  %80 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %77, align 8
  %81 = icmp eq %"class.blink::NGFragmentItem"* %80, null
  br i1 %81, label %82, label %96

82:                                               ; preds = %78
  %83 = bitcast %"class.blink::LayoutObject"* %79 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %84 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %83, align 8
  %85 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %84, i64 13
  %86 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %85, align 8
  %87 = call %"class.blink::LayoutObjectChildList"* %86(%"class.blink::LayoutObject"* %79) #13
  %88 = icmp eq %"class.blink::LayoutObjectChildList"* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %87, i64 0, i32 1
  %91 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %90, align 8
  %92 = icmp eq %"class.blink::LayoutObject"* %91, null
  br i1 %92, label %93, label %78

93:                                               ; preds = %89, %82
  %94 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %77, align 8
  %95 = icmp eq %"class.blink::NGFragmentItem"* %94, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %78, %93
  call void @_ZN5blink14NGInlineCursor26MoveToNextInlineLeafOnLineEv(%"class.blink::NGInlineCursor"* nonnull %2) #13
  %97 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %77, align 8
  %98 = icmp eq %"class.blink::NGFragmentItem"* %97, null
  br i1 %98, label %107, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %97, i64 0, i32 0
  %101 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  %103 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %102, align 8
  %104 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %103, %"class.blink::LayoutObject"* %101) #13
  %105 = call fastcc %"class.blink::AXObject"* @_ZN5blinkL29GetDeepestAXChildInLayoutTreeEPNS_8AXObjectEb(%"class.blink::AXObject"* %104, i1 zeroext true) #13
  %106 = icmp eq %"class.blink::AXObject"* %105, null
  br i1 %106, label %107, label %121

107:                                              ; preds = %99, %96, %93
  %108 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %79, i64 0, i32 9
  %109 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %108, align 8
  %110 = icmp eq %"class.blink::LayoutObject"* %109, null
  br i1 %110, label %111, label %121

111:                                              ; preds = %107
  %112 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %3) #13
  %113 = icmp eq %"class.blink::AXObject"* %112, null
  br i1 %113, label %121, label %114

114:                                              ; preds = %111
  %115 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %3) #13
  %116 = bitcast %"class.blink::AXObject"* %115 to %"class.blink::AXObject"* (%"class.blink::AXObject"*)***
  %117 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)**, %"class.blink::AXObject"* (%"class.blink::AXObject"*)*** %116, align 8
  %118 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %117, i64 84
  %119 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %118, align 8
  %120 = call %"class.blink::AXObject"* %119(%"class.blink::AXObject"* %115) #13
  br label %121

121:                                              ; preds = %114, %111, %107, %99
  %122 = phi %"class.blink::AXObject"* [ %120, %114 ], [ %105, %99 ], [ null, %107 ], [ null, %111 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %74) #13
  br label %211

123:                                              ; preds = %43, %39
  %124 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %125 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %124, i64 0, i32 4
  %126 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %125 to i96*
  %127 = load i96, i96* %126, align 4
  %128 = and i96 %127, 67108864
  %129 = icmp eq i96 %128, 0
  br i1 %129, label %137, label %130

130:                                              ; preds = %123
  %131 = and i96 %127, 268435456
  %132 = icmp eq i96 %131, 0
  br i1 %132, label %133, label %211

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %124, i64 2, i32 1, i32 1
  %135 = bitcast i8* %134 to %"class.blink::InlineBox"**
  %136 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %135, align 8
  br label %182

137:                                              ; preds = %123
  %138 = bitcast %"class.blink::LayoutObject"* %124 to i1 (%"class.blink::LayoutObject"*)***
  %139 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %138, align 8
  %140 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %139, i64 26
  %141 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %140, align 8
  %142 = tail call zeroext i1 %141(%"class.blink::LayoutObject"* %124) #13
  %143 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %144 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %143, i64 0, i32 4
  %145 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %144 to i96*
  %146 = load i96, i96* %145, align 4
  br i1 %142, label %147, label %166

147:                                              ; preds = %137
  %148 = and i96 %146, 70369012613120
  %149 = icmp eq i96 %148, 70368744177664
  br i1 %149, label %150, label %163

150:                                              ; preds = %147
  %151 = and i96 %146, 268435456
  %152 = icmp eq i96 %151, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %150
  %154 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %158

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %143, i64 1, i32 1, i32 1
  %157 = bitcast i8* %156 to %"class.blink::LineBoxList"*
  br label %158

158:                                              ; preds = %155, %153
  %159 = phi %"class.blink::LineBoxList"* [ %154, %153 ], [ %157, %155 ]
  %160 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %159, i64 0, i32 0, i32 1
  %161 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %161, i64 0, i32 0
  br label %182

163:                                              ; preds = %147
  %164 = bitcast %"class.blink::LayoutObject"* %143 to %"class.blink::LayoutInline"*
  %165 = tail call %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline23CulledInlineLastLineBoxEv(%"class.blink::LayoutInline"* %164) #13
  br label %182

166:                                              ; preds = %137
  %167 = and i96 %146, 33554432
  %168 = icmp eq i96 %167, 0
  br i1 %168, label %211, label %169

169:                                              ; preds = %166
  %170 = and i96 %146, 268435456
  %171 = icmp eq i96 %170, 0
  br i1 %171, label %174, label %172

172:                                              ; preds = %169
  %173 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #13
  br label %177

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %143, i64 1, i32 6
  %176 = bitcast %"class.blink::UntracedMember"* %175 to %"class.blink::InlineTextBoxList"*
  br label %177

177:                                              ; preds = %172, %174
  %178 = phi %"class.blink::InlineTextBoxList"* [ %173, %172 ], [ %176, %174 ]
  %179 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %178, i64 0, i32 0, i32 1
  %180 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %180, i64 0, i32 0
  br label %182

182:                                              ; preds = %163, %158, %133, %177
  %183 = phi %"class.blink::InlineBox"* [ %181, %177 ], [ %136, %133 ], [ %162, %158 ], [ %165, %163 ]
  %184 = icmp eq %"class.blink::InlineBox"* %183, null
  br i1 %184, label %211, label %185

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  br label %187

187:                                              ; preds = %185, %192
  %188 = phi %"class.blink::InlineBox"* [ %190, %192 ], [ %183, %185 ]
  %189 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %188, i64 0, i32 1
  %190 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %189, align 8
  %191 = icmp eq %"class.blink::InlineBox"* %190, null
  br i1 %191, label %199, label %192

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %190, i64 0, i32 4, i32 0
  %194 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %193, align 8
  %195 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %186, align 8
  %196 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %195, %"class.blink::LayoutObject"* %194) #13
  %197 = tail call fastcc %"class.blink::AXObject"* @_ZN5blinkL29GetDeepestAXChildInLayoutTreeEPNS_8AXObjectEb(%"class.blink::AXObject"* %196, i1 zeroext true)
  %198 = icmp eq %"class.blink::AXObject"* %197, null
  br i1 %198, label %187, label %211

199:                                              ; preds = %187
  %200 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %201 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %200, i64 0, i32 9
  %202 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %201, align 8
  %203 = icmp eq %"class.blink::LayoutObject"* %202, null
  br i1 %203, label %204, label %211

204:                                              ; preds = %199
  %205 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %3) #13
  %206 = bitcast %"class.blink::AXObject"* %205 to %"class.blink::AXObject"* (%"class.blink::AXObject"*)***
  %207 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)**, %"class.blink::AXObject"* (%"class.blink::AXObject"*)*** %206, align 8
  %208 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %207, i64 84
  %209 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %208, align 8
  %210 = tail call %"class.blink::AXObject"* %209(%"class.blink::AXObject"* %205) #13
  br label %211

211:                                              ; preds = %192, %166, %130, %121, %67, %62, %57, %46, %204, %182, %199, %1, %23
  %212 = phi %"class.blink::AXObject"* [ %25, %23 ], [ null, %1 ], [ %210, %204 ], [ null, %182 ], [ null, %199 ], [ %122, %121 ], [ null, %67 ], [ null, %62 ], [ null, %57 ], [ null, %46 ], [ null, %166 ], [ null, %130 ], [ %197, %192 ]
  ret %"class.blink::AXObject"* %212
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::AXObject"* @_ZN5blinkL29GetDeepestAXChildInLayoutTreeEPNS_8AXObjectEb(%"class.blink::AXObject"*, i1 zeroext) unnamed_addr #0 {
  %3 = icmp eq %"class.blink::AXObject"* %0, null
  br i1 %3, label %43, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.blink::AXObject"* %0 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %6 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %6, i64 124
  %8 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %7, align 8
  %9 = tail call %"class.blink::Node"* %8(%"class.blink::AXObject"* nonnull %0) #13
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %0, i64 0, i32 14, i32 0, i32 0
  br label %13

13:                                               ; preds = %29, %11
  %14 = phi %"class.blink::Node"* [ %23, %29 ], [ %9, %11 ]
  %15 = phi %"class.blink::AXObject"* [ %31, %29 ], [ %0, %11 ]
  br label %16

16:                                               ; preds = %13, %25
  %17 = phi %"class.blink::Node"* [ %23, %25 ], [ %14, %13 ]
  br i1 %1, label %18, label %20

18:                                               ; preds = %16
  %19 = tail call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal10FirstChildERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %17) #13
  br label %22

20:                                               ; preds = %16
  %21 = tail call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal9LastChildERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %17) #13
  br label %22

22:                                               ; preds = %20, %18
  %23 = phi %"class.blink::Node"* [ %19, %18 ], [ %21, %20 ]
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %22
  %26 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %12, align 8
  %27 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %26, %"class.blink::Node"* nonnull %23) #13
  %28 = icmp eq %"class.blink::AXObject"* %27, null
  br i1 %28, label %16, label %29

29:                                               ; preds = %25
  %30 = tail call zeroext i1 @_ZNK5blink8AXObject29AccessibilityIsIncludedInTreeEv(%"class.blink::AXObject"* nonnull %27) #13
  %31 = select i1 %30, %"class.blink::AXObject"* %27, %"class.blink::AXObject"* %15
  br label %13

32:                                               ; preds = %22, %4
  %33 = phi %"class.blink::AXObject"* [ %0, %4 ], [ %15, %22 ]
  %34 = tail call zeroext i1 @_ZNK5blink8AXObject29AccessibilityIsIncludedInTreeEv(%"class.blink::AXObject"* %33) #13
  br i1 %34, label %35, label %43

35:                                               ; preds = %32
  %36 = tail call i32 @_ZNK5blink8AXObject26ChildCountIncludingIgnoredEv(%"class.blink::AXObject"* %33) #13
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %35
  br i1 %1, label %39, label %41

39:                                               ; preds = %38
  %40 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject33DeepestFirstChildIncludingIgnoredEv(%"class.blink::AXObject"* %33) #13
  br label %43

41:                                               ; preds = %38
  %42 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject32DeepestLastChildIncludingIgnoredEv(%"class.blink::AXObject"* %33) #13
  br label %43

43:                                               ; preds = %32, %35, %41, %39, %2
  %44 = phi %"class.blink::AXObject"* [ null, %2 ], [ null, %32 ], [ %33, %35 ], [ %40, %39 ], [ %42, %41 ]
  ret %"class.blink::AXObject"* %44
}

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject27NextSiblingIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink14AXLayoutObject14PreviousOnLineEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #13
  br i1 %4, label %215, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK5blink8AXObject29AccessibilityIsIncludedInTreeEv(%"class.blink::AXObject"* %3) #13
  br i1 %6, label %7, label %29

7:                                                ; preds = %5
  %8 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject31PreviousSiblingIncludingIgnoredEv(%"class.blink::AXObject"* %3) #13
  %9 = icmp eq %"class.blink::AXObject"* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %7
  %11 = bitcast %"class.blink::AXObject"* %8 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %12 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %12, i64 125
  %14 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call %"class.blink::LayoutObject"* %14(%"class.blink::AXObject"* nonnull %8) #13
  %16 = icmp eq %"class.blink::LayoutObject"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %10
  %18 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %11, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %18, i64 125
  %20 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %19, align 8
  %21 = tail call %"class.blink::LayoutObject"* %20(%"class.blink::AXObject"* nonnull %8) #13
  %22 = bitcast %"class.blink::LayoutObject"* %21 to i1 (%"class.blink::LayoutObject"*, i32)***
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* %21, i32 31) #13
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = tail call fastcc %"class.blink::AXObject"* @_ZN5blinkL29GetDeepestAXChildInLayoutTreeEPNS_8AXObjectEb(%"class.blink::AXObject"* nonnull %8, i1 zeroext false)
  br label %215

29:                                               ; preds = %5, %10, %7, %17
  %30 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 4
  %33 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %32 to i96*
  %34 = load i96, i96* %33, align 4
  %35 = and i96 %34, 134217728
  %36 = icmp eq i96 %35, 0
  br i1 %36, label %37, label %47

37:                                               ; preds = %29
  %38 = bitcast %"class.blink::LayoutObject"* %31 to i1 (%"class.blink::LayoutObject"*)***
  %39 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %39, i64 26
  %41 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* %31) #13
  br i1 %42, label %47, label %43

43:                                               ; preds = %37
  %44 = load i96, i96* %33, align 4
  %45 = and i96 %44, 33554432
  %46 = icmp eq i96 %45, 0
  br i1 %46, label %127, label %47

47:                                               ; preds = %29, %37, %43
  %48 = tail call %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"* %31) #13
  %49 = icmp eq %"class.blink::LayoutBlockFlow"* %48, null
  br i1 %49, label %127, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.blink::AXLayoutObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %52 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %52, i64 125
  %54 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %53, align 8
  %55 = tail call %"class.blink::LayoutObject"* %54(%"class.blink::AXObject"* %3) #13
  %56 = bitcast %"class.blink::LayoutObject"* %55 to i1 (%"class.blink::LayoutObject"*, i32)***
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, i64 92
  %59 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.blink::LayoutObject"* %55, i32 15) #13
  br i1 %60, label %215, label %61

61:                                               ; preds = %50
  %62 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %56, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %62, i64 92
  %64 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.blink::LayoutObject"* %55, i32 36) #13
  br i1 %65, label %215, label %66

66:                                               ; preds = %61
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %56, align 8
  %68 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %67, i64 92
  %69 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.blink::LayoutObject"* %55, i32 31) #13
  br i1 %70, label %215, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 4
  %73 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %72 to i96*
  %74 = load i96, i96* %73, align 4
  %75 = and i96 %74, 268435456
  %76 = icmp eq i96 %75, 0
  br i1 %76, label %215, label %77

77:                                               ; preds = %71
  %78 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %78) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 112, i1 false) #13
  %79 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 81, i1 false) #13
  %80 = bitcast %"class.blink::LayoutBlockFlow"** %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 20, i1 false) #13
  %81 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  br label %82

82:                                               ; preds = %93, %77
  %83 = phi %"class.blink::LayoutObject"* [ %55, %77 ], [ %95, %93 ]
  call void @_ZN5blink14NGInlineCursor27MoveToIncludingCulledInlineERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %83) #13
  %84 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %81, align 8
  %85 = icmp eq %"class.blink::NGFragmentItem"* %84, null
  br i1 %85, label %86, label %100

86:                                               ; preds = %82
  %87 = bitcast %"class.blink::LayoutObject"* %83 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %88 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %87, align 8
  %89 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %88, i64 13
  %90 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %89, align 8
  %91 = call %"class.blink::LayoutObjectChildList"* %90(%"class.blink::LayoutObject"* %83) #13
  %92 = icmp eq %"class.blink::LayoutObjectChildList"* %91, null
  br i1 %92, label %97, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %91, i64 0, i32 0
  %95 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %94, align 8
  %96 = icmp eq %"class.blink::LayoutObject"* %95, null
  br i1 %96, label %97, label %82

97:                                               ; preds = %93, %86
  %98 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %81, align 8
  %99 = icmp eq %"class.blink::NGFragmentItem"* %98, null
  br i1 %99, label %111, label %100

100:                                              ; preds = %82, %97
  call void @_ZN5blink14NGInlineCursor30MoveToPreviousInlineLeafOnLineEv(%"class.blink::NGInlineCursor"* nonnull %2) #13
  %101 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %81, align 8
  %102 = icmp eq %"class.blink::NGFragmentItem"* %101, null
  br i1 %102, label %111, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %101, i64 0, i32 0
  %105 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  %107 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %106, align 8
  %108 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %107, %"class.blink::LayoutObject"* %105) #13
  %109 = call fastcc %"class.blink::AXObject"* @_ZN5blinkL29GetDeepestAXChildInLayoutTreeEPNS_8AXObjectEb(%"class.blink::AXObject"* %108, i1 zeroext false) #13
  %110 = icmp eq %"class.blink::AXObject"* %109, null
  br i1 %110, label %111, label %125

111:                                              ; preds = %103, %100, %97
  %112 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %83, i64 0, i32 8
  %113 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %112, align 8
  %114 = icmp eq %"class.blink::LayoutObject"* %113, null
  br i1 %114, label %115, label %125

115:                                              ; preds = %111
  %116 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %3) #13
  %117 = icmp eq %"class.blink::AXObject"* %116, null
  br i1 %117, label %125, label %118

118:                                              ; preds = %115
  %119 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %3) #13
  %120 = bitcast %"class.blink::AXObject"* %119 to %"class.blink::AXObject"* (%"class.blink::AXObject"*)***
  %121 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)**, %"class.blink::AXObject"* (%"class.blink::AXObject"*)*** %120, align 8
  %122 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %121, i64 85
  %123 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %122, align 8
  %124 = call %"class.blink::AXObject"* %123(%"class.blink::AXObject"* %119) #13
  br label %125

125:                                              ; preds = %118, %115, %111, %103
  %126 = phi %"class.blink::AXObject"* [ %124, %118 ], [ %109, %103 ], [ null, %111 ], [ null, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %78) #13
  br label %215

127:                                              ; preds = %47, %43
  %128 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %129 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %128, i64 0, i32 4
  %130 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %129 to i96*
  %131 = load i96, i96* %130, align 4
  %132 = and i96 %131, 67108864
  %133 = icmp eq i96 %132, 0
  br i1 %133, label %141, label %134

134:                                              ; preds = %127
  %135 = and i96 %131, 268435456
  %136 = icmp eq i96 %135, 0
  br i1 %136, label %137, label %215

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %128, i64 2, i32 1, i32 1
  %139 = bitcast i8* %138 to %"class.blink::InlineBox"**
  %140 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %139, align 8
  br label %186

141:                                              ; preds = %127
  %142 = bitcast %"class.blink::LayoutObject"* %128 to i1 (%"class.blink::LayoutObject"*)***
  %143 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %142, align 8
  %144 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %143, i64 26
  %145 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %144, align 8
  %146 = tail call zeroext i1 %145(%"class.blink::LayoutObject"* %128) #13
  %147 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %148 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %147, i64 0, i32 4
  %149 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %148 to i96*
  %150 = load i96, i96* %149, align 4
  br i1 %146, label %151, label %170

151:                                              ; preds = %141
  %152 = and i96 %150, 70369012613120
  %153 = icmp eq i96 %152, 70368744177664
  br i1 %153, label %154, label %167

154:                                              ; preds = %151
  %155 = and i96 %150, 268435456
  %156 = icmp eq i96 %155, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %162

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %147, i64 1, i32 1, i32 1
  %161 = bitcast i8* %160 to %"class.blink::LineBoxList"*
  br label %162

162:                                              ; preds = %159, %157
  %163 = phi %"class.blink::LineBoxList"* [ %158, %157 ], [ %161, %159 ]
  %164 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %163, i64 0, i32 0, i32 0
  %165 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %165, i64 0, i32 0
  br label %186

167:                                              ; preds = %151
  %168 = bitcast %"class.blink::LayoutObject"* %147 to %"class.blink::LayoutInline"*
  %169 = tail call %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline24CulledInlineFirstLineBoxEv(%"class.blink::LayoutInline"* %168) #13
  br label %186

170:                                              ; preds = %141
  %171 = and i96 %150, 33554432
  %172 = icmp eq i96 %171, 0
  br i1 %172, label %215, label %173

173:                                              ; preds = %170
  %174 = and i96 %150, 268435456
  %175 = icmp eq i96 %174, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #13
  br label %181

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %147, i64 1, i32 6
  %180 = bitcast %"class.blink::UntracedMember"* %179 to %"class.blink::InlineTextBoxList"*
  br label %181

181:                                              ; preds = %176, %178
  %182 = phi %"class.blink::InlineTextBoxList"* [ %177, %176 ], [ %180, %178 ]
  %183 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %182, i64 0, i32 0, i32 0
  %184 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %183, align 8
  %185 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %184, i64 0, i32 0
  br label %186

186:                                              ; preds = %167, %162, %137, %181
  %187 = phi %"class.blink::InlineBox"* [ %185, %181 ], [ %140, %137 ], [ %166, %162 ], [ %169, %167 ]
  %188 = icmp eq %"class.blink::InlineBox"* %187, null
  br i1 %188, label %215, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  br label %191

191:                                              ; preds = %189, %196
  %192 = phi %"class.blink::InlineBox"* [ %194, %196 ], [ %187, %189 ]
  %193 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %192, i64 0, i32 2
  %194 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %193, align 8
  %195 = icmp eq %"class.blink::InlineBox"* %194, null
  br i1 %195, label %203, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %194, i64 0, i32 4, i32 0
  %198 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %197, align 8
  %199 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %190, align 8
  %200 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %199, %"class.blink::LayoutObject"* %198) #13
  %201 = tail call fastcc %"class.blink::AXObject"* @_ZN5blinkL29GetDeepestAXChildInLayoutTreeEPNS_8AXObjectEb(%"class.blink::AXObject"* %200, i1 zeroext false)
  %202 = icmp eq %"class.blink::AXObject"* %201, null
  br i1 %202, label %191, label %215

203:                                              ; preds = %191
  %204 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %205 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %204, i64 0, i32 8
  %206 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %205, align 8
  %207 = icmp eq %"class.blink::LayoutObject"* %206, null
  br i1 %207, label %208, label %215

208:                                              ; preds = %203
  %209 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %3) #13
  %210 = bitcast %"class.blink::AXObject"* %209 to %"class.blink::AXObject"* (%"class.blink::AXObject"*)***
  %211 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)**, %"class.blink::AXObject"* (%"class.blink::AXObject"*)*** %210, align 8
  %212 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %211, i64 85
  %213 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %212, align 8
  %214 = tail call %"class.blink::AXObject"* %213(%"class.blink::AXObject"* %209) #13
  br label %215

215:                                              ; preds = %196, %170, %134, %125, %71, %66, %61, %50, %27, %203, %186, %208, %1
  %216 = phi %"class.blink::AXObject"* [ null, %1 ], [ %28, %27 ], [ %214, %208 ], [ null, %186 ], [ null, %203 ], [ %126, %125 ], [ null, %71 ], [ null, %66 ], [ null, %61 ], [ null, %50 ], [ null, %170 ], [ null, %134 ], [ %201, %196 ]
  ret %"class.blink::AXObject"* %216
}

declare zeroext i1 @_ZNK5blink8AXObject29AccessibilityIsIncludedInTreeEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject31PreviousSiblingIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AXLayoutObject15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEE(%"class.blink::AXLayoutObject"*, i1 zeroext, i1 zeroext, %"class.blink::HeapHashSet.3586"*, i32* dereferenceable(4), %"class.blink::HeapVector.3587"*, %"class.blink::HeapVector.3595"*) unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.absl::optional.3579", align 8
  %10 = alloca %"class.blink::NameSource", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::NameSource", align 8
  %13 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %636, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0
  %19 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %18) #13
  call void @_ZN5blink12AXNodeObject13GetCSSAltTextEPKNS_4NodeE(%"class.absl::optional.3579"* nonnull sret %9, %"class.blink::Node"* %19) #13
  %20 = load i8, i8* %17, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %162, label %22

22:                                               ; preds = %16
  %23 = icmp eq %"class.blink::HeapVector.3595"* %6, null
  br i1 %23, label %140, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.blink::HeapVector.3595", %"class.blink::HeapVector.3595"* %6, i64 0, i32 0
  %26 = bitcast %"class.blink::NameSource"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 1
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 2
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 3
  store i32 1, i32* %30, align 4
  %31 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 4
  %32 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %33 = bitcast %"class.blink::QualifiedName"** %31 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  %35 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 6
  store i32 -1, i32* %35, align 8
  %36 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %10, i64 0, i32 7
  %37 = bitcast %"class.blink::HeapVector.3587"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #13
  %38 = getelementptr inbounds %"class.blink::HeapVector.3595", %"class.blink::HeapVector.3595"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.blink::HeapVector.3595", %"class.blink::HeapVector.3595"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %52, label %43, !prof !2

43:                                               ; preds = %24
  %44 = getelementptr inbounds %"class.blink::HeapVector.3595", %"class.blink::HeapVector.3595"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %44, align 8
  %46 = zext i32 %39 to i64
  %47 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %45, i64 %46
  %48 = bitcast %"class.blink::NameSource"* %47 to i8*
  %49 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %48, %"class.blink::NameSource"* nonnull dereferenceable(56) %10) #13
  %50 = load i32, i32* %38, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %38, align 4
  br label %53

52:                                               ; preds = %24
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3598"* %25, %"class.blink::NameSource"* nonnull dereferenceable(56) %10) #13
  br label %53

53:                                               ; preds = %43, %52
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #13
  br label %69

69:                                               ; preds = %68, %65, %53
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #13
  br label %85

85:                                               ; preds = %69, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %26) #13
  %86 = load i32, i32* %38, align 4
  %87 = add i32 %86, -1
  %88 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3598"* %25, i32 %87) #13
  %89 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %88, i64 0, i32 3
  store i32 2, i32* %89, align 4
  %90 = load i8, i8* %17, align 8, !range !4
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %85
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #14
  unreachable

93:                                               ; preds = %85
  %94 = load i32, i32* %38, align 4
  %95 = add i32 %94, -1
  %96 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3598"* %25, i32 %95) #13
  %97 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %117, label %100

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %117

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i33
  %109 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %108, i33 1) #13
  %110 = extractvalue { i33, i1 } %109, 1
  %111 = extractvalue { i33, i1 } %109, 0
  %112 = icmp slt i33 %111, 0
  %113 = or i1 %110, %112
  br i1 %113, label %114, label %115, !prof !2

114:                                              ; preds = %105
  call void @llvm.trap() #13
  unreachable

115:                                              ; preds = %105
  %116 = trunc i33 %111 to i32
  store i32 %116, i32* %106, align 4
  br label %117

117:                                              ; preds = %115, %100, %93
  %118 = ptrtoint %"class.WTF::StringImpl"* %98 to i64
  %119 = bitcast %"class.blink::NameSource"* %96 to i64*
  %120 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %96, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  store i64 %118, i64* %119, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #13
  br label %136

136:                                              ; preds = %135, %132, %117
  %137 = load i8, i8* %17, align 8
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #14
  unreachable

140:                                              ; preds = %22, %136
  %141 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %143, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %144, label %609, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %609

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i33
  %154 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %153, i33 1) #13
  %155 = extractvalue { i33, i1 } %154, 1
  %156 = extractvalue { i33, i1 } %154, 0
  %157 = icmp slt i33 %156, 0
  %158 = or i1 %155, %157
  br i1 %158, label %159, label %160, !prof !2

159:                                              ; preds = %150
  call void @llvm.trap() #13
  unreachable

160:                                              ; preds = %150
  %161 = trunc i33 %156 to i32
  store i32 %161, i32* %151, align 4
  br label %609

162:                                              ; preds = %16
  %163 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %164 = bitcast %"class.blink::LayoutObject"* %163 to i1 (%"class.blink::LayoutObject"*, i32)***
  %165 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %164, align 8
  %166 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %165, i64 92
  %167 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %166, align 8
  %168 = call zeroext i1 %167(%"class.blink::LayoutObject"* %163, i32 0) #13
  br i1 %168, label %169, label %214

169:                                              ; preds = %162
  %170 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #13
  %171 = load i8, i8* %17, align 8, !range !4
  %172 = icmp eq i8 %171, 0
  %173 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %175 = bitcast %"class.WTF::String"* %11 to i64*
  %176 = load i64, i64* %175, align 8
  br i1 %172, label %195, label %177

177:                                              ; preds = %169
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %174, align 8
  %178 = bitcast %"class.WTF::String"* %173 to i64*
  %179 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %173, i64 0, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  store i64 %176, i64* %178, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %197, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #13
  br label %197

195:                                              ; preds = %169
  %196 = bitcast %"class.WTF::String"* %173 to i64*
  store i64 %176, i64* %196, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %174, align 8
  store i8 1, i8* %17, align 8
  br label %213

197:                                              ; preds = %177, %191, %194
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #13
  br label %213

213:                                              ; preds = %195, %197, %209, %212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #13
  br label %468

214:                                              ; preds = %162
  %215 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %216 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %215, i64 0, i32 4
  %217 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %216 to i96*
  %218 = load i96, i96* %217, align 4
  %219 = and i96 %218, 33554432
  %220 = icmp eq i96 %219, 0
  br i1 %220, label %401, label %221

221:                                              ; preds = %214
  %222 = bitcast %"class.blink::LayoutObject"* %215 to %"class.blink::LayoutText"*
  br i1 %1, label %223, label %234

223:                                              ; preds = %221
  %224 = bitcast %"class.blink::LayoutObject"* %215 to i1 (%"class.blink::LayoutObject"*, i32)***
  %225 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %224, align 8
  %226 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %225, i64 92
  %227 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %226, align 8
  %228 = call zeroext i1 %227(%"class.blink::LayoutObject"* %215, i32 3) #13
  br i1 %228, label %229, label %231

229:                                              ; preds = %223
  %230 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  br label %401

231:                                              ; preds = %223
  %232 = bitcast %"class.blink::LayoutObject"** %13 to %"class.blink::LayoutText"**
  %233 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %232, align 8
  br label %234

234:                                              ; preds = %221, %231
  %235 = phi %"class.blink::LayoutText"* [ %233, %231 ], [ %222, %221 ]
  %236 = call %"class.WTF::StringImpl"* @_ZNK5blink10LayoutText9PlainTextEv(%"class.blink::LayoutText"* %235) #13
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %242, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %318

242:                                              ; preds = %234, %238
  %243 = call zeroext i1 @_ZNK5blink10LayoutText26IsAllCollapsibleWhitespaceEv(%"class.blink::LayoutText"* %235) #13
  br i1 %243, label %244, label %250

244:                                              ; preds = %242
  %245 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %246 = call zeroext i1 @_ZNK5blink8AXObject23LastKnownIsIgnoredValueEv(%"class.blink::AXObject"* %245) #13
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i64 0) #13
  br label %377

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0
  call void @_ZN4absl17optional_internal18optional_data_baseIN3WTF6StringEE6assignIRA2_KcEEvOT_(%"class.absl::optional_internal::optional_data_base.3581"* nonnull %249, [2 x i8]* nonnull dereferenceable(2) @.str.7) #13
  br label %377

250:                                              ; preds = %242
  %251 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %235, i64 0, i32 7
  %252 = load i8, i8* %17, align 8, !range !4
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %295, label %254

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %256 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %251, i64 0, i32 0, i32 0
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %276, label %259

259:                                              ; preds = %254
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %276

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  %267 = zext i32 %266 to i33
  %268 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %267, i33 1) #13
  %269 = extractvalue { i33, i1 } %268, 1
  %270 = extractvalue { i33, i1 } %268, 0
  %271 = icmp slt i33 %270, 0
  %272 = or i1 %269, %271
  br i1 %272, label %273, label %274, !prof !2

273:                                              ; preds = %264
  call void @llvm.trap() #13
  unreachable

274:                                              ; preds = %264
  %275 = trunc i33 %270 to i32
  store i32 %275, i32* %265, align 4
  br label %276

276:                                              ; preds = %274, %259, %254
  %277 = ptrtoint %"class.WTF::StringImpl"* %257 to i64
  %278 = bitcast %"class.WTF::String"* %255 to i64*
  %279 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %255, i64 0, i32 0, i32 0
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  store i64 %277, i64* %278, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %281, label %377, label %282

282:                                              ; preds = %276
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 0
  %288 = load i32, i32* %287, align 4
  br i1 %286, label %289, label %291

289:                                              ; preds = %282
  %290 = add i32 %288, -1
  store i32 %290, i32* %287, align 4
  br label %291

291:                                              ; preds = %289, %282
  %292 = phi i32 [ %290, %289 ], [ %288, %282 ]
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %377

294:                                              ; preds = %291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %280) #13
  br label %377

295:                                              ; preds = %250
  %296 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %251, i64 0, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %298 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %297, %"class.WTF::StringImpl"** %298, align 8
  %299 = icmp eq %"class.WTF::StringImpl"* %297, null
  br i1 %299, label %317, label %300

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load atomic i32, i32* %301 monotonic, align 4
  %303 = and i32 %302, 2
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %317

305:                                              ; preds = %300
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = zext i32 %307 to i33
  %309 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %308, i33 1) #13
  %310 = extractvalue { i33, i1 } %309, 1
  %311 = extractvalue { i33, i1 } %309, 0
  %312 = icmp slt i33 %311, 0
  %313 = or i1 %310, %312
  br i1 %313, label %314, label %315, !prof !2

314:                                              ; preds = %305
  call void @llvm.trap() #13
  unreachable

315:                                              ; preds = %305
  %316 = trunc i33 %311 to i32
  store i32 %316, i32* %306, align 4
  br label %317

317:                                              ; preds = %315, %300, %295
  store i8 1, i8* %17, align 8
  br label %377

318:                                              ; preds = %238
  %319 = load i8, i8* %17, align 8, !range !4
  %320 = icmp eq i8 %319, 0
  br i1 %320, label %358, label %321

321:                                              ; preds = %318
  %322 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = and i32 %324, 2
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %339

327:                                              ; preds = %321
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  %330 = zext i32 %329 to i33
  %331 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %330, i33 1) #13
  %332 = extractvalue { i33, i1 } %331, 1
  %333 = extractvalue { i33, i1 } %331, 0
  %334 = icmp slt i33 %333, 0
  %335 = or i1 %332, %334
  br i1 %335, label %336, label %337, !prof !2

336:                                              ; preds = %327
  call void @llvm.trap() #13
  unreachable

337:                                              ; preds = %327
  %338 = trunc i33 %333 to i32
  store i32 %338, i32* %328, align 4
  br label %339

339:                                              ; preds = %337, %321
  %340 = ptrtoint %"class.WTF::StringImpl"* %236 to i64
  %341 = bitcast %"class.WTF::String"* %322 to i64*
  %342 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %322, i64 0, i32 0, i32 0
  %343 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %342, align 8
  store i64 %340, i64* %341, align 8
  %344 = icmp eq %"class.WTF::StringImpl"* %343, null
  br i1 %344, label %380, label %345

345:                                              ; preds = %339
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load atomic i32, i32* %346 monotonic, align 4
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 0
  %351 = load i32, i32* %350, align 4
  br i1 %349, label %352, label %354

352:                                              ; preds = %345
  %353 = add i32 %351, -1
  store i32 %353, i32* %350, align 4
  br label %354

354:                                              ; preds = %352, %345
  %355 = phi i32 [ %353, %352 ], [ %351, %345 ]
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %380

357:                                              ; preds = %354
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %343) #13
  br label %380

358:                                              ; preds = %318
  %359 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %236, %"class.WTF::StringImpl"** %359, align 8
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load atomic i32, i32* %360 monotonic, align 4
  %362 = and i32 %361, 2
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %376

364:                                              ; preds = %358
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %366 = load i32, i32* %365, align 4
  %367 = zext i32 %366 to i33
  %368 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %367, i33 1) #13
  %369 = extractvalue { i33, i1 } %368, 1
  %370 = extractvalue { i33, i1 } %368, 0
  %371 = icmp slt i33 %370, 0
  %372 = or i1 %369, %371
  br i1 %372, label %373, label %374, !prof !2

373:                                              ; preds = %364
  call void @llvm.trap() #13
  unreachable

374:                                              ; preds = %364
  %375 = trunc i33 %370 to i32
  store i32 %375, i32* %365, align 4
  br label %376

376:                                              ; preds = %374, %358
  store i8 1, i8* %17, align 8
  br label %380

377:                                              ; preds = %317, %276, %291, %294, %248, %247
  %378 = phi i1 [ false, %247 ], [ true, %248 ], [ true, %294 ], [ true, %291 ], [ true, %276 ], [ true, %317 ]
  %379 = phi i32 [ 1, %247 ], [ 0, %248 ], [ 0, %294 ], [ 0, %291 ], [ 0, %276 ], [ 0, %317 ]
  br i1 %237, label %395, label %380

380:                                              ; preds = %357, %354, %339, %376, %377
  %381 = phi i32 [ %379, %377 ], [ 0, %376 ], [ 0, %339 ], [ 0, %354 ], [ 0, %357 ]
  %382 = phi i1 [ %378, %377 ], [ true, %376 ], [ true, %339 ], [ true, %354 ], [ true, %357 ]
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %380
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %380
  %392 = phi i32 [ %390, %389 ], [ %388, %380 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #13
  br label %395

395:                                              ; preds = %377, %391, %394
  %396 = phi i32 [ %379, %377 ], [ %381, %391 ], [ %381, %394 ]
  %397 = phi i1 [ %378, %377 ], [ %382, %391 ], [ %382, %394 ]
  %398 = icmp ne i32 %396, 0
  %399 = xor i1 %397, true
  %400 = or i1 %398, %399
  br i1 %400, label %609, label %468

401:                                              ; preds = %229, %214
  %402 = phi %"class.blink::LayoutObject"* [ %230, %229 ], [ %215, %214 ]
  %403 = bitcast %"class.blink::LayoutObject"* %402 to i1 (%"class.blink::LayoutObject"*, i32)***
  %404 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %403, align 8
  %405 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %404, i64 92
  %406 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %405, align 8
  %407 = call zeroext i1 %406(%"class.blink::LayoutObject"* %402, i32 15) #13
  %408 = xor i1 %407, true
  %409 = or i1 %408, %1
  br i1 %409, label %437, label %410

410:                                              ; preds = %401
  %411 = bitcast %"class.blink::LayoutObject"** %13 to %"class.blink::LayoutListMarker"**
  %412 = load %"class.blink::LayoutListMarker"*, %"class.blink::LayoutListMarker"** %411, align 8
  %413 = call %"class.WTF::StringImpl"* @_ZNK5blink16LayoutListMarker15TextAlternativeEv(%"class.blink::LayoutListMarker"* %412) #13
  %414 = ptrtoint %"class.WTF::StringImpl"* %413 to i64
  %415 = load i8, i8* %17, align 8, !range !4
  %416 = icmp eq i8 %415, 0
  %417 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %418 = bitcast %"class.WTF::String"* %417 to i64*
  br i1 %416, label %436, label %419

419:                                              ; preds = %410
  %420 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %417, i64 0, i32 0, i32 0
  %421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %420, align 8
  store i64 %414, i64* %418, align 8
  %422 = icmp eq %"class.WTF::StringImpl"* %421, null
  br i1 %422, label %468, label %423

423:                                              ; preds = %419
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load atomic i32, i32* %424 monotonic, align 4
  %426 = and i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 0
  %429 = load i32, i32* %428, align 4
  br i1 %427, label %430, label %432

430:                                              ; preds = %423
  %431 = add i32 %429, -1
  store i32 %431, i32* %428, align 4
  br label %432

432:                                              ; preds = %430, %423
  %433 = phi i32 [ %431, %430 ], [ %429, %423 ]
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %468

435:                                              ; preds = %432
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %421) #13
  br label %468

436:                                              ; preds = %410
  store i64 %414, i64* %418, align 8
  store i8 1, i8* %17, align 8
  br label %468

437:                                              ; preds = %401
  br i1 %1, label %609, label %438

438:                                              ; preds = %437
  %439 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %440 = call %"class.blink::ListMarker"* @_ZN5blink10ListMarker3GetEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* %439) #13
  %441 = icmp eq %"class.blink::ListMarker"* %440, null
  br i1 %441, label %609, label %442

442:                                              ; preds = %438
  %443 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %444 = call %"class.WTF::StringImpl"* @_ZNK5blink10ListMarker15TextAlternativeERKNS_12LayoutObjectE(%"class.blink::ListMarker"* nonnull %440, %"class.blink::LayoutObject"* dereferenceable(88) %443) #13
  %445 = ptrtoint %"class.WTF::StringImpl"* %444 to i64
  %446 = load i8, i8* %17, align 8, !range !4
  %447 = icmp eq i8 %446, 0
  %448 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %449 = bitcast %"class.WTF::String"* %448 to i64*
  br i1 %447, label %467, label %450

450:                                              ; preds = %442
  %451 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %448, i64 0, i32 0, i32 0
  %452 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %451, align 8
  store i64 %445, i64* %449, align 8
  %453 = icmp eq %"class.WTF::StringImpl"* %452, null
  br i1 %453, label %468, label %454

454:                                              ; preds = %450
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4
  %457 = and i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 0
  %460 = load i32, i32* %459, align 4
  br i1 %458, label %461, label %463

461:                                              ; preds = %454
  %462 = add i32 %460, -1
  store i32 %462, i32* %459, align 4
  br label %463

463:                                              ; preds = %461, %454
  %464 = phi i32 [ %462, %461 ], [ %460, %454 ]
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %468

466:                                              ; preds = %463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %452) #13
  br label %468

467:                                              ; preds = %442
  store i64 %445, i64* %449, align 8
  store i8 1, i8* %17, align 8
  br label %468

468:                                              ; preds = %450, %463, %466, %467, %419, %432, %435, %436, %395, %213
  store i32 5, i32* %4, align 4
  %469 = icmp eq %"class.blink::HeapVector.3595"* %6, null
  br i1 %469, label %583, label %470

470:                                              ; preds = %468
  %471 = getelementptr inbounds %"class.blink::HeapVector.3595", %"class.blink::HeapVector.3595"* %6, i64 0, i32 0
  %472 = bitcast %"class.blink::NameSource"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %472) #13
  %473 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %473, align 8
  %474 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 1
  store i8 0, i8* %474, align 8
  %475 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 2
  store i8 0, i8* %475, align 1
  %476 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 3
  store i32 1, i32* %476, align 4
  %477 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 4
  %478 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %479 = bitcast %"class.blink::QualifiedName"** %477 to i64*
  store i64 %478, i64* %479, align 8
  %480 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %480, align 8
  %481 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 6
  store i32 -1, i32* %481, align 8
  %482 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 7
  %483 = bitcast %"class.blink::HeapVector.3587"* %482 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %483, i8 0, i64 16, i1 false) #13
  %484 = getelementptr inbounds %"class.blink::HeapVector.3595", %"class.blink::HeapVector.3595"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %485 = load i32, i32* %484, align 4
  %486 = getelementptr inbounds %"class.blink::HeapVector.3595", %"class.blink::HeapVector.3595"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %487 = load i32, i32* %486, align 8
  %488 = icmp eq i32 %485, %487
  br i1 %488, label %498, label %489, !prof !2

489:                                              ; preds = %470
  %490 = getelementptr inbounds %"class.blink::HeapVector.3595", %"class.blink::HeapVector.3595"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %491 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %490, align 8
  %492 = zext i32 %485 to i64
  %493 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %491, i64 %492
  %494 = bitcast %"class.blink::NameSource"* %493 to i8*
  %495 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %494, %"class.blink::NameSource"* nonnull dereferenceable(56) %12) #13
  %496 = load i32, i32* %484, align 4
  %497 = add i32 %496, 1
  store i32 %497, i32* %484, align 4
  br label %499

498:                                              ; preds = %470
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3598"* %471, %"class.blink::NameSource"* nonnull dereferenceable(56) %12) #13
  br label %499

499:                                              ; preds = %489, %498
  %500 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %480, align 8
  %501 = icmp eq %"class.WTF::StringImpl"* %500, null
  br i1 %501, label %515, label %502

502:                                              ; preds = %499
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %500, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %504 = load atomic i32, i32* %503 monotonic, align 4
  %505 = and i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %500, i64 0, i32 0
  %508 = load i32, i32* %507, align 4
  br i1 %506, label %509, label %511

509:                                              ; preds = %502
  %510 = add i32 %508, -1
  store i32 %510, i32* %507, align 4
  br label %511

511:                                              ; preds = %509, %502
  %512 = phi i32 [ %510, %509 ], [ %508, %502 ]
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %514, label %515

514:                                              ; preds = %511
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %500) #13
  br label %515

515:                                              ; preds = %514, %511, %499
  %516 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %473, align 8
  %517 = icmp eq %"class.WTF::StringImpl"* %516, null
  br i1 %517, label %531, label %518

518:                                              ; preds = %515
  %519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %520 = load atomic i32, i32* %519 monotonic, align 4
  %521 = and i32 %520, 2
  %522 = icmp eq i32 %521, 0
  %523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 0
  %524 = load i32, i32* %523, align 4
  br i1 %522, label %525, label %527

525:                                              ; preds = %518
  %526 = add i32 %524, -1
  store i32 %526, i32* %523, align 4
  br label %527

527:                                              ; preds = %525, %518
  %528 = phi i32 [ %526, %525 ], [ %524, %518 ]
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %531

530:                                              ; preds = %527
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %516) #13
  br label %531

531:                                              ; preds = %515, %527, %530
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %472) #13
  %532 = load i32, i32* %4, align 4
  %533 = load i32, i32* %484, align 4
  %534 = add i32 %533, -1
  %535 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3598"* %471, i32 %534) #13
  %536 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %535, i64 0, i32 3
  store i32 %532, i32* %536, align 4
  %537 = load i8, i8* %17, align 8, !range !4
  %538 = icmp eq i8 %537, 0
  br i1 %538, label %539, label %540

539:                                              ; preds = %531
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #14
  unreachable

540:                                              ; preds = %531
  %541 = load i32, i32* %484, align 4
  %542 = add i32 %541, -1
  %543 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3598"* %471, i32 %542) #13
  %544 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %545 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %544, align 8
  %546 = icmp eq %"class.WTF::StringImpl"* %545, null
  br i1 %546, label %564, label %547

547:                                              ; preds = %540
  %548 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %545, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %549 = load atomic i32, i32* %548 monotonic, align 4
  %550 = and i32 %549, 2
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %552, label %564

552:                                              ; preds = %547
  %553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %545, i64 0, i32 0
  %554 = load i32, i32* %553, align 4
  %555 = zext i32 %554 to i33
  %556 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %555, i33 1) #13
  %557 = extractvalue { i33, i1 } %556, 1
  %558 = extractvalue { i33, i1 } %556, 0
  %559 = icmp slt i33 %558, 0
  %560 = or i1 %557, %559
  br i1 %560, label %561, label %562, !prof !2

561:                                              ; preds = %552
  call void @llvm.trap() #13
  unreachable

562:                                              ; preds = %552
  %563 = trunc i33 %558 to i32
  store i32 %563, i32* %553, align 4
  br label %564

564:                                              ; preds = %562, %547, %540
  %565 = ptrtoint %"class.WTF::StringImpl"* %545 to i64
  %566 = bitcast %"class.blink::NameSource"* %543 to i64*
  %567 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %543, i64 0, i32 0, i32 0, i32 0
  %568 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %567, align 8
  store i64 %565, i64* %566, align 8
  %569 = icmp eq %"class.WTF::StringImpl"* %568, null
  br i1 %569, label %583, label %570

570:                                              ; preds = %564
  %571 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %568, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %572 = load atomic i32, i32* %571 monotonic, align 4
  %573 = and i32 %572, 2
  %574 = icmp eq i32 %573, 0
  %575 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %568, i64 0, i32 0
  %576 = load i32, i32* %575, align 4
  br i1 %574, label %577, label %579

577:                                              ; preds = %570
  %578 = add i32 %576, -1
  store i32 %578, i32* %575, align 4
  br label %579

579:                                              ; preds = %577, %570
  %580 = phi i32 [ %578, %577 ], [ %576, %570 ]
  %581 = icmp eq i32 %580, 0
  br i1 %581, label %582, label %583

582:                                              ; preds = %579
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %568) #13
  br label %583

583:                                              ; preds = %582, %579, %564, %468
  %584 = load i8, i8* %17, align 8, !range !4
  %585 = icmp eq i8 %584, 0
  br i1 %585, label %586, label %587

586:                                              ; preds = %583
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #14
  unreachable

587:                                              ; preds = %583
  %588 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %589 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %588, align 8
  %590 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %589, %"class.WTF::StringImpl"** %590, align 8
  %591 = icmp eq %"class.WTF::StringImpl"* %589, null
  br i1 %591, label %609, label %592

592:                                              ; preds = %587
  %593 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %594 = load atomic i32, i32* %593 monotonic, align 4
  %595 = and i32 %594, 2
  %596 = icmp eq i32 %595, 0
  br i1 %596, label %597, label %609

597:                                              ; preds = %592
  %598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 0
  %599 = load i32, i32* %598, align 4
  %600 = zext i32 %599 to i33
  %601 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %600, i33 1) #13
  %602 = extractvalue { i33, i1 } %601, 1
  %603 = extractvalue { i33, i1 } %601, 0
  %604 = icmp slt i33 %603, 0
  %605 = or i1 %602, %604
  br i1 %605, label %606, label %607, !prof !2

606:                                              ; preds = %597
  call void @llvm.trap() #13
  unreachable

607:                                              ; preds = %597
  %608 = trunc i33 %603 to i32
  store i32 %608, i32* %598, align 4
  br label %609

609:                                              ; preds = %607, %592, %587, %160, %145, %140, %395, %437, %438
  %610 = phi i32 [ %396, %395 ], [ 0, %438 ], [ 0, %437 ], [ 1, %140 ], [ 1, %145 ], [ 1, %160 ], [ 1, %587 ], [ 1, %592 ], [ 1, %607 ]
  %611 = load i8, i8* %17, align 8, !range !4
  %612 = icmp eq i8 %611, 0
  br i1 %612, label %631, label %613

613:                                              ; preds = %609
  %614 = getelementptr inbounds %"class.absl::optional.3579", %"class.absl::optional.3579"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %615 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %614, align 8
  %616 = icmp eq %"class.WTF::StringImpl"* %615, null
  br i1 %616, label %630, label %617

617:                                              ; preds = %613
  %618 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %619 = load atomic i32, i32* %618 monotonic, align 4
  %620 = and i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 0
  %623 = load i32, i32* %622, align 4
  br i1 %621, label %624, label %626

624:                                              ; preds = %617
  %625 = add i32 %623, -1
  store i32 %625, i32* %622, align 4
  br label %626

626:                                              ; preds = %624, %617
  %627 = phi i32 [ %625, %624 ], [ %623, %617 ]
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %629, label %630

629:                                              ; preds = %626
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %615) #13
  br label %630

630:                                              ; preds = %629, %626, %613
  store i8 0, i8* %17, align 8
  br label %631

631:                                              ; preds = %609, %630
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13
  %632 = icmp eq i32 %610, 0
  br i1 %632, label %636, label %633

633:                                              ; preds = %631
  %634 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %635 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %634, align 8
  br label %640

636:                                              ; preds = %7, %631
  %637 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0
  %638 = call %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEE(%"class.blink::AXNodeObject"* %637, i1 zeroext %1, i1 zeroext %2, %"class.blink::HeapHashSet.3586"* %3, i32* dereferenceable(4) %4, %"class.blink::HeapVector.3587"* %5, %"class.blink::HeapVector.3595"* %6) #13
  %639 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %638, %"class.WTF::StringImpl"** %639, align 8
  br label %640

640:                                              ; preds = %633, %636
  %641 = phi %"class.WTF::StringImpl"* [ %635, %633 ], [ %638, %636 ]
  ret %"class.WTF::StringImpl"* %641
}

declare %"class.WTF::StringImpl"* @_ZNK5blink10LayoutText9PlainTextEv(%"class.blink::LayoutText"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink10LayoutText26IsAllCollapsibleWhitespaceEv(%"class.blink::LayoutText"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject23LastKnownIsIgnoredValueEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink16LayoutListMarker15TextAlternativeEv(%"class.blink::LayoutListMarker"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink10ListMarker15TextAlternativeERKNS_12LayoutObjectE(%"class.blink::ListMarker"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEE(%"class.blink::AXNodeObject"*, i1 zeroext, i1 zeroext, %"class.blink::HeapHashSet.3586"*, i32* dereferenceable(4), %"class.blink::HeapVector.3587"*, %"class.blink::HeapVector.3595"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink14AXLayoutObject20AccessibilityHitTestERKNS_8IntPointE(%"class.blink::AXLayoutObject"* nocapture readonly, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HitTestRequest", align 8
  %4 = alloca %"class.blink::HitTestLocation", align 4
  %5 = alloca %"class.blink::HitTestResult", align 8
  %6 = alloca %"struct.blink::PhysicalRect", align 4
  %7 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = icmp eq %"class.blink::LayoutObject"* %8, null
  br i1 %9, label %218, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 4362076160
  %15 = icmp eq i96 %14, 4362076160
  br i1 %15, label %16, label %218

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %17, align 8
  %19 = icmp eq %"struct.blink::FragmentData::RareData"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %21, align 8
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi %"class.blink::PaintLayer"* [ %22, %20 ], [ null, %16 ]
  %25 = bitcast %"class.blink::HitTestRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #13
  %26 = bitcast %"class.blink::HitTestRequest"* %3 to i64*
  store i64 -6148914691236517206, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::HitTestRequest", %"class.blink::HitTestRequest"* %3, i64 0, i32 0
  store i32 2054, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::HitTestRequest", %"class.blink::HitTestRequest"* %3, i64 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %28, align 8
  %29 = bitcast %"class.blink::HitTestLocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 bitcast (%"class.blink::HitTestLocation"* @__const._ZNK5blink14AXLayoutObject20AccessibilityHitTestERKNS_8IntPointE.location to i8*), i64 72, i1 false)
  call void @_ZN5blink15HitTestLocationC1ERKNS_8IntPointE(%"class.blink::HitTestLocation"* nonnull %4, %"class.blink::IntPoint"* dereferenceable(8) %1) #13
  %30 = bitcast %"class.blink::HitTestResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %30) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 112, i1 false)
  call void @_ZN5blink13HitTestResultC1ERKNS_14HitTestRequestERKNS_15HitTestLocationE(%"class.blink::HitTestResult"* nonnull %5, %"class.blink::HitTestRequest"* nonnull dereferenceable(16) %3, %"class.blink::HitTestLocation"* nonnull dereferenceable(72) %4) #13
  %31 = bitcast %"struct.blink::PhysicalRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #13
  %32 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i8*) acquire, align 8
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %38, !prof !5

34:                                               ; preds = %23
  %35 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #13
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %34
  store <4 x i32> <i32 -16777215, i32 -16777215, i32 33554431, i32 33554431>, <4 x i32>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <4 x i32>*), align 4
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #13
  br label %38

38:                                               ; preds = %23, %34, %37
  %39 = load i64, i64* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i64*), align 4
  %40 = load i64, i64* bitcast (%"class.blink::IntSize"* getelementptr inbounds (%"class.blink::IntRect", %"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect, i64 0, i32 1) to i64*), align 4
  %41 = trunc i64 %39 to i32
  %42 = lshr i64 %39, 32
  %43 = trunc i64 %42 to i32
  %44 = icmp sgt i32 %41, 33554431
  br i1 %44, label %49, label %45

45:                                               ; preds = %38
  %46 = icmp slt i32 %41, -33554432
  %47 = shl i32 %41, 6
  %48 = select i1 %46, i32 -2147483648, i32 %47
  br label %49

49:                                               ; preds = %45, %38
  %50 = phi i32 [ 2147483647, %38 ], [ %48, %45 ]
  %51 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 %50, i32* %51, align 4
  %52 = icmp sgt i32 %43, 33554431
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = icmp slt i32 %43, -33554432
  br i1 %54, label %58, label %55

55:                                               ; preds = %53
  %56 = shl nuw nsw i64 %42, 6
  %57 = trunc i64 %56 to i32
  br label %58

58:                                               ; preds = %53, %49, %55
  %59 = phi i32 [ %57, %55 ], [ 2147483647, %49 ], [ -2147483648, %53 ]
  %60 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 0, i32 1, i32 0
  store i32 %59, i32* %60, align 4
  %61 = trunc i64 %40 to i32
  %62 = lshr i64 %40, 32
  %63 = trunc i64 %62 to i32
  %64 = icmp sgt i32 %61, 33554431
  br i1 %64, label %69, label %65

65:                                               ; preds = %58
  %66 = icmp slt i32 %61, -33554432
  %67 = shl i32 %61, 6
  %68 = select i1 %66, i32 -2147483648, i32 %67
  br label %69

69:                                               ; preds = %65, %58
  %70 = phi i32 [ 2147483647, %58 ], [ %68, %65 ]
  %71 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 0, i32 0
  store i32 %70, i32* %71, align 4
  %72 = icmp sgt i32 %63, 33554431
  br i1 %72, label %78, label %73

73:                                               ; preds = %69
  %74 = icmp slt i32 %63, -33554432
  br i1 %74, label %78, label %75

75:                                               ; preds = %73
  %76 = shl nuw nsw i64 %62, 6
  %77 = trunc i64 %76 to i32
  br label %78

78:                                               ; preds = %73, %69, %75
  %79 = phi i32 [ %77, %75 ], [ 2147483647, %69 ], [ -2147483648, %73 ]
  %80 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 1, i32 0
  store i32 %79, i32* %80, align 4
  %81 = call zeroext i1 @_ZN5blink10PaintLayer7HitTestERKNS_15HitTestLocationERNS_13HitTestResultERKNS_12PhysicalRectE(%"class.blink::PaintLayer"* %24, %"class.blink::HitTestLocation"* nonnull dereferenceable(72) %4, %"class.blink::HitTestResult"* nonnull dereferenceable(112) %5, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #13
  %82 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %5, i64 0, i32 2, i32 0, i32 0
  %83 = load %"class.blink::Node"*, %"class.blink::Node"** %82, align 8
  %84 = icmp eq %"class.blink::Node"* %83, null
  br i1 %84, label %216, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, 48
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %122

90:                                               ; preds = %85
  %91 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %92 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %83, i64 1, i32 2
  %95 = bitcast %"class.blink::Member.318"* %94 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %96 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %96, i64 0, i32 3, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %93, i64 0, i32 3, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %98, %100
  br i1 %101, label %102, label %105

102:                                              ; preds = %90
  %103 = bitcast %"class.blink::Node"* %83 to %"class.blink::HTMLAreaElement"*
  %104 = call %"class.blink::AXObject"* @_ZNK5blink14AXLayoutObject28AccessibilityImageMapHitTestEPNS_15HTMLAreaElementERKNS_8IntPointE(%"class.blink::AXLayoutObject"* %0, %"class.blink::HTMLAreaElement"* nonnull %103, %"class.blink::IntPoint"* dereferenceable(8) %1)
  br label %216

105:                                              ; preds = %90
  %106 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %107 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %106, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %83, i64 1, i32 2
  %110 = bitcast %"class.blink::Member.318"* %109 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 3, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %108, i64 0, i32 3, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %113, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %105
  %118 = bitcast %"class.blink::Node"* %83 to %"class.blink::HTMLOptionElement"*
  %119 = call %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"* nonnull %118) #13
  %120 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = icmp eq %"class.blink::HTMLSelectElement"* %119, null
  br i1 %121, label %216, label %122

122:                                              ; preds = %85, %105, %117
  %123 = phi %"class.blink::Node"* [ %120, %117 ], [ %83, %105 ], [ %83, %85 ]
  %124 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %123, i64 0, i32 3, i32 0, i32 0
  %125 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %125, i64 0, i32 1, i32 0, i32 0
  %127 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %127, i64 0, i32 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = and i32 %129, 12
  %131 = icmp eq i32 %130, 8
  br i1 %131, label %132, label %151

132:                                              ; preds = %122
  %133 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %127, i64 0, i32 0, i32 3, i32 0, i32 0
  %134 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %134, i64 0, i32 1, i32 0, i32 0
  %136 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %135, align 8
  %137 = icmp ne %"class.blink::ContainerNode"* %136, %127
  %138 = icmp eq %"class.blink::ContainerNode"* %127, null
  %139 = or i1 %138, %137
  br i1 %139, label %151, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %127, i64 2, i32 0, i32 4
  %142 = bitcast %"class.blink::Member.318"* %141 to i32*
  %143 = load i32, i32* %142, align 8
  %144 = and i32 %143, 196608
  %145 = icmp eq i32 %144, 131072
  br i1 %145, label %146, label %151

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %127, i64 0, i32 0, i32 2, i32 0, i32 0
  %148 = bitcast %"class.blink::Node"** %147 to %"class.blink::Element"**
  %149 = load %"class.blink::Element"*, %"class.blink::Element"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %149, i64 0, i32 0, i32 0
  br label %151

151:                                              ; preds = %132, %122, %140, %146
  %152 = phi %"class.blink::Node"* [ %150, %146 ], [ %123, %140 ], [ %123, %132 ], [ %123, %122 ]
  %153 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %152, i64 0, i32 1
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %152, i64 0, i32 6, i32 0, i32 0
  br i1 %156, label %162, label %158

158:                                              ; preds = %151
  %159 = bitcast %"class.blink::NodeData"** %157 to %"class.blink::NodeRareData"**
  %160 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %160, i64 0, i32 1, i32 0, i32 0
  br label %164

162:                                              ; preds = %151
  %163 = bitcast %"class.blink::NodeData"** %157 to %"class.blink::NodeRenderingData"**
  br label %164

164:                                              ; preds = %158, %162
  %165 = phi %"class.blink::NodeRenderingData"** [ %161, %158 ], [ %163, %162 ]
  %166 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %166, i64 0, i32 1
  %168 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  %170 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %169, align 8
  %171 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %170, %"class.blink::LayoutObject"* %168) #13
  %172 = icmp eq %"class.blink::AXObject"* %171, null
  br i1 %172, label %216, label %173

173:                                              ; preds = %164
  call void @_ZN5blink8AXObject25UpdateChildrenIfNecessaryEv(%"class.blink::AXObject"* nonnull %171) #13
  %174 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject27ElementAccessibilityHitTestERKNS_8IntPointE(%"class.blink::AXObject"* nonnull %171, %"class.blink::IntPoint"* dereferenceable(8) %1) #13
  %175 = icmp eq %"class.blink::AXObject"* %174, null
  br i1 %175, label %216, label %176

176:                                              ; preds = %173
  %177 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kLabelTagE, align 8
  %178 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %177, i64 0, i32 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %176, %213
  %180 = phi %"class.blink::AXObject"* [ %174, %176 ], [ %214, %213 ]
  %181 = call zeroext i1 @_ZNK5blink8AXObject22AccessibilityIsIgnoredEv(%"class.blink::AXObject"* nonnull %180) #13
  br i1 %181, label %182, label %216

182:                                              ; preds = %179
  %183 = bitcast %"class.blink::AXObject"* %180 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %184 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %183, align 8
  %185 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %184, i64 124
  %186 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %185, align 8
  %187 = call %"class.blink::Node"* %186(%"class.blink::AXObject"* nonnull %180) #13
  %188 = icmp eq %"class.blink::Node"* %187, null
  br i1 %188, label %213, label %189

189:                                              ; preds = %182
  %190 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %187, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  %192 = and i32 %191, 48
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %213

194:                                              ; preds = %189
  %195 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %178, align 8
  %196 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %187, i64 1, i32 2
  %197 = bitcast %"class.blink::Member.318"* %196 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %198 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %198, i64 0, i32 3, i32 0, i32 0, i32 0
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %195, i64 0, i32 3, i32 0, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %200, %202
  br i1 %203, label %204, label %213

204:                                              ; preds = %194
  %205 = bitcast %"class.blink::Node"* %187 to %"class.blink::HTMLLabelElement"*
  %206 = call %"class.blink::HTMLElement"* @_ZNK5blink16HTMLLabelElement7controlEv(%"class.blink::HTMLLabelElement"* nonnull %205) #13
  %207 = icmp eq %"class.blink::HTMLElement"* %206, null
  br i1 %207, label %213, label %208

208:                                              ; preds = %204
  %209 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %169, align 8
  %210 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %206, i64 0, i32 0, i32 0, i32 0
  %211 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %209, %"class.blink::Node"* %210) #13
  %212 = icmp eq %"class.blink::AXObject"* %211, null
  br i1 %212, label %213, label %216

213:                                              ; preds = %194, %204, %208, %182, %189
  %214 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* nonnull %180) #13
  %215 = icmp eq %"class.blink::AXObject"* %214, null
  br i1 %215, label %216, label %179

216:                                              ; preds = %179, %213, %208, %173, %117, %102, %164, %78
  %217 = phi %"class.blink::AXObject"* [ %104, %102 ], [ null, %78 ], [ null, %164 ], [ null, %117 ], [ null, %173 ], [ %180, %179 ], [ null, %213 ], [ %211, %208 ]
  call void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #13
  br label %218

218:                                              ; preds = %10, %2, %216
  %219 = phi %"class.blink::AXObject"* [ %217, %216 ], [ null, %2 ], [ null, %10 ]
  ret %"class.blink::AXObject"* %219
}

declare void @_ZN5blink15HitTestLocationC1ERKNS_8IntPointE(%"class.blink::HitTestLocation"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN5blink13HitTestResultC1ERKNS_14HitTestRequestERKNS_15HitTestLocationE(%"class.blink::HitTestResult"*, %"class.blink::HitTestRequest"* dereferenceable(16), %"class.blink::HitTestLocation"* dereferenceable(72)) unnamed_addr #1

declare zeroext i1 @_ZN5blink10PaintLayer7HitTestERKNS_15HitTestLocationERNS_13HitTestResultERKNS_12PhysicalRectE(%"class.blink::PaintLayer"*, %"class.blink::HitTestLocation"* dereferenceable(72), %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink14AXLayoutObject28AccessibilityImageMapHitTestEPNS_15HTMLAreaElementERKNS_8IntPointE(%"class.blink::AXLayoutObject"* nocapture readonly, %"class.blink::HTMLAreaElement"*, %"class.blink::IntPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::HTMLAreaElement"* %1, null
  br i1 %4, label %78, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  %7 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %6, align 8
  %8 = tail call %"class.blink::HTMLImageElement"* @_ZNK5blink15HTMLAreaElement12ImageElementEv(%"class.blink::HTMLAreaElement"* nonnull %1) #13
  %9 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %7, %"class.blink::Node"* %9) #13
  %11 = icmp eq %"class.blink::AXObject"* %10, null
  br i1 %11, label %78, label %12

12:                                               ; preds = %5
  %13 = tail call dereferenceable(16) %"class.blink::HeapVector.3257"* @_ZN5blink8AXObject24ChildrenIncludingIgnoredEv(%"class.blink::AXObject"* nonnull %10) #13
  %14 = getelementptr inbounds %"class.blink::HeapVector.3257", %"class.blink::HeapVector.3257"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member.3255"*, %"class.blink::Member.3255"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::HeapVector.3257", %"class.blink::HeapVector.3257"* %13, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3255", %"class.blink::Member.3255"* %15, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %78, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %2, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %2, i64 0, i32 1
  br label %24

24:                                               ; preds = %21, %72
  %25 = phi %"class.blink::Member.3255"* [ %15, %21 ], [ %73, %72 ]
  %26 = getelementptr inbounds %"class.blink::Member.3255", %"class.blink::Member.3255"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %26, align 8
  %28 = tail call { i64, i64 } @_ZNK5blink8AXObject27GetBoundsInFrameCoordinatesEv(%"class.blink::AXObject"* %27) #13
  %29 = extractvalue { i64, i64 } %28, 0
  %30 = trunc i64 %29 to i32
  %31 = lshr i64 %29, 32
  %32 = trunc i64 %31 to i32
  %33 = extractvalue { i64, i64 } %28, 1
  %34 = load i32, i32* %22, align 4
  %35 = icmp sgt i32 %34, 33554431
  br i1 %35, label %40, label %36

36:                                               ; preds = %24
  %37 = icmp slt i32 %34, -33554432
  %38 = shl i32 %34, 6
  %39 = select i1 %37, i32 -2147483648, i32 %38
  br label %40

40:                                               ; preds = %36, %24
  %41 = phi i32 [ 2147483647, %24 ], [ %39, %36 ]
  %42 = load i32, i32* %23, align 4
  %43 = icmp sgt i32 %42, 33554431
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = icmp slt i32 %42, -33554432
  %46 = shl i32 %42, 6
  %47 = select i1 %45, i32 -2147483648, i32 %46
  br label %48

48:                                               ; preds = %44, %40
  %49 = phi i32 [ 2147483647, %40 ], [ %47, %44 ]
  %50 = icmp slt i32 %41, %30
  br i1 %50, label %72, label %51

51:                                               ; preds = %48
  %52 = trunc i64 %33 to i32
  %53 = icmp slt i32 %52, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 %52) #13
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !2
  %59 = icmp sle i32 %58, %41
  %60 = icmp slt i32 %49, %32
  %61 = or i1 %59, %60
  br i1 %61, label %72, label %62

62:                                               ; preds = %51
  %63 = lshr i64 %33, 32
  %64 = trunc i64 %63 to i32
  %65 = icmp slt i32 %64, 0
  %66 = select i1 %65, i32 -2147483648, i32 2147483647
  %67 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 %64) #13
  %68 = extractvalue { i32, i1 } %67, 1
  %69 = extractvalue { i32, i1 } %67, 0
  %70 = select i1 %68, i32 %66, i32 %69, !prof !2
  %71 = icmp sgt i32 %70, %49
  br i1 %71, label %75, label %72

72:                                               ; preds = %51, %48, %62
  %73 = getelementptr inbounds %"class.blink::Member.3255", %"class.blink::Member.3255"* %25, i64 1
  %74 = icmp eq %"class.blink::Member.3255"* %73, %19
  br i1 %74, label %78, label %24

75:                                               ; preds = %62
  %76 = getelementptr inbounds %"class.blink::Member.3255", %"class.blink::Member.3255"* %25, i64 0, i32 0, i32 0
  %77 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %76, align 8
  br label %78

78:                                               ; preds = %72, %12, %3, %5, %75
  %79 = phi %"class.blink::AXObject"* [ %77, %75 ], [ null, %5 ], [ null, %3 ], [ null, %12 ], [ null, %72 ]
  ret %"class.blink::AXObject"* %79
}

declare %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare void @_ZN5blink8AXObject25UpdateChildrenIfNecessaryEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject27ElementAccessibilityHitTestERKNS_8IntPointE(%"class.blink::AXObject"*, %"class.blink::IntPoint"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::HTMLElement"* @_ZNK5blink16HTMLLabelElement7controlEv(%"class.blink::HTMLLabelElement"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Document"* @_ZNK5blink14AXLayoutObject11GetDocumentEv(%"class.blink::AXLayoutObject"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 6, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %5, %9
  %10 = phi %"class.blink::LayoutObject"* [ %12, %9 ], [ %3, %5 ]
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 7
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %9, label %16

16:                                               ; preds = %9, %5
  %17 = phi %"class.blink::Node"* [ %7, %5 ], [ %14, %9 ]
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  br label %22

22:                                               ; preds = %1, %16
  %23 = phi %"class.blink::Document"* [ %21, %16 ], [ null, %1 ]
  ret %"class.blink::Document"* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AXLayoutObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE(%"class.blink::AXLayoutObject"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  %4 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  tail call void @_ZN5blink17AXObjectCacheImpl16SetAutofillStateEjNS_18WebAXAutofillStateE(%"class.blink::AXObjectCacheImpl"* %4, i32 %6, i32 %1) #13
  ret void
}

declare void @_ZN5blink17AXObjectCacheImpl16SetAutofillStateEjNS_18WebAXAutofillStateE(%"class.blink::AXObjectCacheImpl"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14AXLayoutObject11IsDataTableEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca [5 x %"class.blink::Color"], align 16
  %4 = bitcast [5 x %"class.blink::Color"]* %3 to i8*
  %5 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutObject"* %6, null
  br i1 %7, label %505, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0
  %10 = tail call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %9) #13
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %505, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %16 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_17AOMStringPropertyERN3WTF12AtomicStringE(%"class.blink::AXObject"* %15, i32 13, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #13
  br i1 %16, label %487, label %17

17:                                               ; preds = %12
  %18 = call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %9) #13
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %9) #13
  %22 = call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %21) #13
  br i1 %22, label %487, label %23

23:                                               ; preds = %17, %20
  %24 = call %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"* %9) #13
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %487, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 48
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %487

31:                                               ; preds = %26
  %32 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 1, i32 2
  %36 = bitcast %"class.blink::Member.318"* %35 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %39, %41
  %43 = bitcast %"class.blink::Node"* %24 to %"class.blink::HTMLTableElement"*
  br i1 %42, label %44, label %487

44:                                               ; preds = %31
  %45 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLTableElement7SummaryEv(%"class.blink::HTMLTableElement"* nonnull %43) #13
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %487

53:                                               ; preds = %44, %49
  %54 = call %"class.blink::HTMLTableSectionElement"* @_ZNK5blink16HTMLTableElement5tHeadEv(%"class.blink::HTMLTableElement"* nonnull %43) #13
  %55 = icmp eq %"class.blink::HTMLTableSectionElement"* %54, null
  br i1 %55, label %56, label %487

56:                                               ; preds = %53
  %57 = call %"class.blink::HTMLTableSectionElement"* @_ZNK5blink16HTMLTableElement5tFootEv(%"class.blink::HTMLTableElement"* nonnull %43) #13
  %58 = icmp eq %"class.blink::HTMLTableSectionElement"* %57, null
  br i1 %58, label %59, label %487

59:                                               ; preds = %56
  %60 = call %"class.blink::HTMLTableCaptionElement"* @_ZNK5blink16HTMLTableElement7captionEv(%"class.blink::HTMLTableElement"* nonnull %43) #13
  %61 = icmp eq %"class.blink::HTMLTableCaptionElement"* %60, null
  br i1 %61, label %62, label %487

62:                                               ; preds = %59
  %63 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLTableElement5RulesEv(%"class.blink::HTMLTableElement"* nonnull %43) #13
  %64 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %487

71:                                               ; preds = %62, %67
  %72 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 1
  %73 = bitcast %"class.blink::Node"* %72 to %"class.blink::Node"**
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %106, label %76

76:                                               ; preds = %71
  %77 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE, align 8
  %78 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE, align 8
  %80 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %79, i64 0, i32 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %102, %76
  %82 = phi %"class.blink::Node"* [ %74, %76 ], [ %104, %102 ]
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 48
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %102

87:                                               ; preds = %81
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %89 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 1, i32 2
  %90 = bitcast %"class.blink::Member.318"* %89 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %91, i64 0, i32 3, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %93, %95
  br i1 %96, label %487, label %97

97:                                               ; preds = %87
  %98 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8
  %99 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %98, i64 0, i32 3, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %93, %100
  br i1 %101, label %487, label %102

102:                                              ; preds = %97, %81
  %103 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 0, i32 5, i32 0, i32 0
  %104 = load %"class.blink::Node"*, %"class.blink::Node"** %103, align 8
  %105 = icmp eq %"class.blink::Node"* %104, null
  br i1 %105, label %106, label %81

106:                                              ; preds = %102, %71
  %107 = call %"class.blink::HTMLTableRowsCollection"* @_ZN5blink16HTMLTableElement4rowsEv(%"class.blink::HTMLTableElement"* nonnull %43) #13
  %108 = getelementptr inbounds %"class.blink::HTMLTableRowsCollection", %"class.blink::HTMLTableRowsCollection"* %107, i64 0, i32 0
  %109 = call i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"* %108) #13
  %110 = icmp sgt i32 %109, 19
  br i1 %110, label %487, label %111

111:                                              ; preds = %106
  %112 = icmp slt i32 %109, 1
  br i1 %112, label %487, label %113

113:                                              ; preds = %111
  %114 = call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %108, i32 0) #13
  %115 = bitcast %"class.blink::Element"* %114 to %"class.blink::HTMLTableRowElement"*
  %116 = call %"class.blink::HTMLCollection"* @_ZN5blink19HTMLTableRowElement5cellsEv(%"class.blink::HTMLTableRowElement"* %115) #13
  %117 = call i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"* %116) #13
  %118 = icmp eq i32 %109, 1
  %119 = icmp eq i32 %117, 1
  %120 = and i1 %118, %119
  br i1 %120, label %487, label %121

121:                                              ; preds = %113
  %122 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %123 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %122, i64 0, i32 5, i32 0
  %124 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %123, align 8
  %125 = icmp eq %"class.blink::ComputedStyle"* %124, null
  br i1 %125, label %487, label %126

126:                                              ; preds = %121
  %127 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #13
  %128 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* nonnull %124, %"class.blink::CSSProperty"* dereferenceable(24) %127) #13
  %129 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %130, i64 0, i32 6
  %132 = load i16, i16* %131, align 4
  %133 = icmp eq i16 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %130, i64 0, i32 7
  %136 = load i16, i16* %135, align 2
  %137 = icmp ne i16 %136, 0
  br label %138

138:                                              ; preds = %134, %126
  %139 = phi i1 [ false, %126 ], [ %137, %134 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #13
  %140 = getelementptr inbounds [5 x %"class.blink::Color"], [5 x %"class.blink::Color"]* %3, i64 0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 20, i1 false)
  %141 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %142 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %144 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kScopeAttrE, align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %145, i64 0, i32 0, i32 0
  %147 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %148

148:                                              ; preds = %441, %138
  %149 = phi i32 [ 0, %138 ], [ %447, %441 ]
  %150 = phi i32 [ 0, %138 ], [ %445, %441 ]
  %151 = phi i32 [ 0, %138 ], [ %444, %441 ]
  %152 = phi i32 [ 0, %138 ], [ %443, %441 ]
  %153 = phi i32 [ 0, %138 ], [ %442, %441 ]
  %154 = phi <4 x i32> [ zeroinitializer, %138 ], [ %446, %441 ]
  %155 = call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %108, i32 %149) #13
  %156 = bitcast %"class.blink::Element"* %155 to %"class.blink::HTMLTableRowElement"*
  %157 = call %"class.blink::HTMLCollection"* @_ZN5blink19HTMLTableRowElement5cellsEv(%"class.blink::HTMLTableRowElement"* %156) #13
  %158 = call i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"* %157) #13
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %160, label %441

160:                                              ; preds = %148
  %161 = icmp ult i32 %149, 5
  %162 = zext i32 %149 to i64
  %163 = getelementptr inbounds [5 x %"class.blink::Color"], [5 x %"class.blink::Color"]* %3, i64 0, i64 %162, i32 0
  %164 = add nuw nsw i32 %149, 1
  br label %165

165:                                              ; preds = %433, %160
  %166 = phi i32 [ 0, %160 ], [ %439, %433 ]
  %167 = phi i32 [ %150, %160 ], [ %437, %433 ]
  %168 = phi i32 [ %151, %160 ], [ %436, %433 ]
  %169 = phi i32 [ %152, %160 ], [ %435, %433 ]
  %170 = phi i32 [ %153, %160 ], [ %434, %433 ]
  %171 = phi <4 x i32> [ %154, %160 ], [ %438, %433 ]
  %172 = call %"class.blink::HTMLCollection"* @_ZN5blink19HTMLTableRowElement5cellsEv(%"class.blink::HTMLTableRowElement"* %156) #13
  %173 = call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %172, i32 %166) #13
  %174 = icmp eq %"class.blink::Element"* %173, null
  br i1 %174, label %433, label %175

175:                                              ; preds = %165
  %176 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %173, i64 0, i32 0, i32 0
  %177 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %173, i64 0, i32 0, i32 0, i32 1
  %178 = load i32, i32* %177, align 8
  %179 = and i32 %178, 48
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %296

181:                                              ; preds = %175
  %182 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %142, align 8
  %183 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %176, i64 1, i32 2
  %184 = bitcast %"class.blink::Member.318"* %183 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %185 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %185, i64 0, i32 3, i32 0, i32 0, i32 0
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %182, i64 0, i32 3, i32 0, i32 0, i32 0
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %187, %189
  br i1 %190, label %485, label %191

191:                                              ; preds = %181
  %192 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %144, align 8
  %193 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %176, i64 1, i32 2
  %194 = bitcast %"class.blink::Member.318"* %193 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %195 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %194, align 8
  %196 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %195, i64 0, i32 3, i32 0, i32 0, i32 0
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %192, i64 0, i32 3, i32 0, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %197, %199
  br i1 %200, label %206, label %201

201:                                              ; preds = %191
  %202 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %142, align 8
  %203 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %202, i64 0, i32 3, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %197, %204
  br i1 %205, label %206, label %296

206:                                              ; preds = %191, %201
  %207 = bitcast %"class.blink::Element"* %173 to %"class.blink::HTMLTableCellElement"*
  %208 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink20HTMLTableCellElement7HeadersEv(%"class.blink::HTMLTableCellElement"* nonnull %207) #13
  %209 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %208, i64 0, i32 0, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %216, label %212

212:                                              ; preds = %206
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %485

216:                                              ; preds = %206, %212
  %217 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink20HTMLTableCellElement4AbbrEv(%"class.blink::HTMLTableCellElement"* nonnull %207) #13
  %218 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %217, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %218, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %220, label %225, label %221

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %485

225:                                              ; preds = %216, %221
  %226 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink20HTMLTableCellElement4AxisEv(%"class.blink::HTMLTableCellElement"* nonnull %207) #13
  %227 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %226, i64 0, i32 0, i32 0, i32 0
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %485

234:                                              ; preds = %225, %230
  %235 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %173, i64 0, i32 3, i32 0, i32 0
  %236 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %235, align 8
  %237 = icmp eq %"class.blink::ElementData"* %236, null
  br i1 %237, label %287, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %236, i64 0, i32 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %250, label %243

243:                                              ; preds = %238
  %244 = bitcast %"class.blink::ElementData"* %236 to %"class.blink::UniqueElementData"*
  %245 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %236, i64 1, i32 1
  %246 = bitcast %"class.blink::Member.354"* %245 to %"class.blink::Attribute"**
  %247 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %246, align 8
  %248 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %244, i64 0, i32 2, i32 0, i32 0, i32 2
  %249 = load i32, i32* %248, align 4
  br label %255

250:                                              ; preds = %238
  %251 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %236, i64 1
  %252 = bitcast %"class.blink::ElementData"* %251 to %"class.blink::Attribute"*
  %253 = lshr i32 %240, 1
  %254 = and i32 %253, 268435455
  br label %255

255:                                              ; preds = %250, %243
  %256 = phi %"class.blink::Attribute"* [ %252, %250 ], [ %247, %243 ]
  %257 = phi i32 [ %254, %250 ], [ %249, %243 ]
  %258 = zext i32 %257 to i64
  %259 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %256, i64 %258
  %260 = icmp eq i32 %257, 0
  br i1 %260, label %287, label %261

261:                                              ; preds = %255
  %262 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %146, align 8
  %263 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %262, i64 0, i32 3, i32 0, i32 0, i32 0
  %264 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %262, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %265

265:                                              ; preds = %280, %261
  %266 = phi %"class.blink::Attribute"* [ %256, %261 ], [ %281, %280 ]
  %267 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %266, i64 0, i32 0, i32 0, i32 0
  %268 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %267, align 8
  %269 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %268, %262
  br i1 %269, label %283, label %270

270:                                              ; preds = %265
  %271 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %268, i64 0, i32 3, i32 0, i32 0, i32 0
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %263, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %272, %273
  br i1 %274, label %275, label %280

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %268, i64 0, i32 4, i32 0, i32 0, i32 0
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %276, align 8
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %279 = icmp eq %"class.WTF::StringImpl"* %277, %278
  br i1 %279, label %283, label %280

280:                                              ; preds = %275, %270
  %281 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %266, i64 1
  %282 = icmp eq %"class.blink::Attribute"* %281, %259
  br i1 %282, label %287, label %265

283:                                              ; preds = %275, %265
  %284 = icmp eq %"class.blink::Attribute"* %266, null
  %285 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %266, i64 0, i32 1
  %286 = select i1 %284, %"class.WTF::AtomicString"* %147, %"class.WTF::AtomicString"* %285
  br label %287

287:                                              ; preds = %280, %283, %234, %255
  %288 = phi %"class.WTF::AtomicString"* [ %147, %255 ], [ %147, %234 ], [ %286, %283 ], [ %147, %280 ]
  %289 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %288, i64 0, i32 0, i32 0, i32 0
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %291 = icmp eq %"class.WTF::StringImpl"* %290, null
  br i1 %291, label %296, label %292

292:                                              ; preds = %287
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 1
  %294 = load i32, i32* %293, align 4
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %485

296:                                              ; preds = %175, %287, %201, %292
  %297 = load i32, i32* %177, align 8
  %298 = and i32 %297, 1
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %173, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %299, label %305, label %301

301:                                              ; preds = %296
  %302 = bitcast %"class.blink::NodeData"** %300 to %"class.blink::NodeRareData"**
  %303 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %302, align 8
  %304 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %303, i64 0, i32 1, i32 0, i32 0
  br label %307

305:                                              ; preds = %296
  %306 = bitcast %"class.blink::NodeData"** %300 to %"class.blink::NodeRenderingData"**
  br label %307

307:                                              ; preds = %301, %305
  %308 = phi %"class.blink::NodeRenderingData"** [ %304, %301 ], [ %306, %305 ]
  %309 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %308, align 8
  %310 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %309, i64 0, i32 1
  %311 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %310, align 8
  %312 = icmp eq %"class.blink::LayoutObject"* %311, null
  br i1 %312, label %433, label %313

313:                                              ; preds = %307
  %314 = bitcast %"class.blink::LayoutObject"* %311 to i1 (%"class.blink::LayoutObject"*)***
  %315 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %314, align 8
  %316 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %315, i64 23
  %317 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %316, align 8
  %318 = call zeroext i1 %317(%"class.blink::LayoutObject"* nonnull %311) #13
  br i1 %318, label %319, label %433

319:                                              ; preds = %313
  %320 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %311, i64 1, i32 4, i32 0, i64 4
  %321 = bitcast i8* %320 to i64*
  %322 = load i64, i64* %321, align 4
  %323 = trunc i64 %322 to i32
  %324 = lshr i64 %322, 32
  %325 = icmp slt i32 %323, 64
  %326 = trunc i64 %324 to i32
  %327 = icmp slt i32 %326, 64
  %328 = or i1 %325, %327
  br i1 %328, label %433, label %329

329:                                              ; preds = %319
  %330 = add i32 %170, 1
  %331 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %311, i64 0, i32 5, i32 0
  %332 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %331, align 8
  %333 = icmp eq %"class.blink::ComputedStyle"* %332, null
  br i1 %333, label %433, label %334

334:                                              ; preds = %329
  %335 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %332, i64 0, i32 0, i32 9
  %336 = bitcast [20 x i8]* %335 to i160*
  %337 = load i160, i160* %336, align 8
  %338 = and i160 %337, 83076749736557242056487941267521536
  %339 = icmp eq i160 %338, 0
  br i1 %339, label %485, label %340

340:                                              ; preds = %334
  %341 = bitcast %"class.blink::LayoutObject"* %311 to %"class.blink::LayoutBoxModelObject"*
  %342 = bitcast %"class.blink::LayoutObject"* %311 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %343 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %342, align 8
  %344 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %343, i64 122
  %345 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %344, align 8
  %346 = call i32 %345(%"class.blink::LayoutBoxModelObject"* nonnull %341) #13
  %347 = icmp sgt i32 %346, 0
  br i1 %347, label %348, label %354

348:                                              ; preds = %340
  %349 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %342, align 8
  %350 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %349, i64 123
  %351 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %350, align 8
  %352 = call i32 %351(%"class.blink::LayoutBoxModelObject"* nonnull %341) #13
  %353 = icmp sgt i32 %352, 0
  br i1 %353, label %366, label %354

354:                                              ; preds = %348, %340
  %355 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %342, align 8
  %356 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %355, i64 124
  %357 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %356, align 8
  %358 = call i32 %357(%"class.blink::LayoutBoxModelObject"* nonnull %341) #13
  %359 = icmp sgt i32 %358, 0
  br i1 %359, label %360, label %368

360:                                              ; preds = %354
  %361 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %342, align 8
  %362 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %361, i64 125
  %363 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %362, align 8
  %364 = call i32 %363(%"class.blink::LayoutBoxModelObject"* nonnull %341) #13
  %365 = icmp sgt i32 %364, 0
  br i1 %365, label %366, label %368

366:                                              ; preds = %348, %360
  %367 = add i32 %169, 1
  br label %368

368:                                              ; preds = %354, %366, %360
  %369 = phi i32 [ %367, %366 ], [ %169, %360 ], [ %169, %354 ]
  %370 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %342, align 8
  %371 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %370, i64 122
  %372 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %371, align 8
  %373 = call i32 %372(%"class.blink::LayoutBoxModelObject"* nonnull %341) #13
  %374 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %342, align 8
  %375 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %374, i64 123
  %376 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %375, align 8
  %377 = call i32 %376(%"class.blink::LayoutBoxModelObject"* nonnull %341) #13
  %378 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %342, align 8
  %379 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %378, i64 124
  %380 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %379, align 8
  %381 = call i32 %380(%"class.blink::LayoutBoxModelObject"* nonnull %341) #13
  %382 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %342, align 8
  %383 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %382, i64 125
  %384 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %383, align 8
  %385 = call i32 %384(%"class.blink::LayoutBoxModelObject"* nonnull %341) #13
  %386 = insertelement <4 x i32> undef, i32 %373, i32 0
  %387 = insertelement <4 x i32> %386, i32 %377, i32 1
  %388 = insertelement <4 x i32> %387, i32 %381, i32 2
  %389 = insertelement <4 x i32> %388, i32 %385, i32 3
  %390 = icmp sgt <4 x i32> %389, zeroinitializer
  %391 = zext <4 x i1> %390 to <4 x i32>
  %392 = add <4 x i32> %171, %391
  %393 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #13
  %394 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* nonnull %332, %"class.blink::CSSProperty"* dereferenceable(24) %393) #13
  %395 = icmp ne i32 %128, %394
  %396 = and i1 %139, %395
  br i1 %396, label %397, label %402

397:                                              ; preds = %368
  %398 = and i32 %394, -16777216
  %399 = icmp ne i32 %398, 16777216
  %400 = zext i1 %399 to i32
  %401 = add i32 %168, %400
  br label %402

402:                                              ; preds = %397, %368
  %403 = phi i32 [ %168, %368 ], [ %401, %397 ]
  %404 = icmp ugt i32 %369, 9
  %405 = icmp ugt i32 %403, 9
  %406 = or i1 %404, %405
  br i1 %406, label %485, label %407

407:                                              ; preds = %402
  %408 = icmp eq i32 %149, %167
  %409 = and i1 %161, %408
  br i1 %409, label %410, label %433

410:                                              ; preds = %407
  %411 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %311, i64 0, i32 7
  %412 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %411, align 8
  %413 = icmp eq %"class.blink::LayoutObject"* %412, null
  br i1 %413, label %433, label %414

414:                                              ; preds = %410
  %415 = bitcast %"class.blink::LayoutObject"* %412 to i1 (%"class.blink::LayoutObject"*)***
  %416 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %415, align 8
  %417 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %416, i64 20
  %418 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %417, align 8
  %419 = call zeroext i1 %418(%"class.blink::LayoutObject"* nonnull %412) #13
  br i1 %419, label %420, label %433

420:                                              ; preds = %414
  %421 = bitcast %"class.blink::LayoutObject"* %412 to i1 (%"class.blink::LayoutObject"*, i32)***
  %422 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %421, align 8
  %423 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %422, i64 92
  %424 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %423, align 8
  %425 = call zeroext i1 %424(%"class.blink::LayoutObject"* nonnull %412, i32 49) #13
  br i1 %425, label %426, label %433

426:                                              ; preds = %420
  %427 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %412, i64 0, i32 5, i32 0
  %428 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %427, align 8
  %429 = icmp eq %"class.blink::ComputedStyle"* %428, null
  br i1 %429, label %433, label %430

430:                                              ; preds = %426
  %431 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #13
  %432 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* nonnull %428, %"class.blink::CSSProperty"* dereferenceable(24) %431) #13
  store i32 %432, i32* %163, align 4
  br label %433

433:                                              ; preds = %426, %414, %420, %410, %165, %307, %313, %329, %319, %430, %407
  %434 = phi i32 [ %330, %430 ], [ %330, %407 ], [ %170, %319 ], [ %330, %329 ], [ %170, %313 ], [ %170, %307 ], [ %170, %165 ], [ %330, %410 ], [ %330, %420 ], [ %330, %414 ], [ %330, %426 ]
  %435 = phi i32 [ %369, %430 ], [ %369, %407 ], [ %169, %319 ], [ %169, %329 ], [ %169, %313 ], [ %169, %307 ], [ %169, %165 ], [ %369, %410 ], [ %369, %420 ], [ %369, %414 ], [ %369, %426 ]
  %436 = phi i32 [ %403, %430 ], [ %403, %407 ], [ %168, %319 ], [ %168, %329 ], [ %168, %313 ], [ %168, %307 ], [ %168, %165 ], [ %403, %410 ], [ %403, %420 ], [ %403, %414 ], [ %403, %426 ]
  %437 = phi i32 [ %164, %430 ], [ %167, %407 ], [ %167, %319 ], [ %167, %329 ], [ %167, %313 ], [ %167, %307 ], [ %167, %165 ], [ %149, %410 ], [ %149, %420 ], [ %149, %414 ], [ %149, %426 ]
  %438 = phi <4 x i32> [ %392, %430 ], [ %392, %407 ], [ %171, %319 ], [ %171, %329 ], [ %171, %313 ], [ %171, %307 ], [ %171, %165 ], [ %392, %410 ], [ %392, %420 ], [ %392, %414 ], [ %392, %426 ]
  %439 = add nuw nsw i32 %166, 1
  %440 = icmp eq i32 %439, %158
  br i1 %440, label %441, label %165

441:                                              ; preds = %433, %148
  %442 = phi i32 [ %153, %148 ], [ %434, %433 ]
  %443 = phi i32 [ %152, %148 ], [ %435, %433 ]
  %444 = phi i32 [ %151, %148 ], [ %436, %433 ]
  %445 = phi i32 [ %150, %148 ], [ %437, %433 ]
  %446 = phi <4 x i32> [ %154, %148 ], [ %438, %433 ]
  %447 = add nuw nsw i32 %149, 1
  %448 = icmp eq i32 %447, %109
  br i1 %448, label %449, label %148

449:                                              ; preds = %441
  %450 = icmp ult i32 %442, 2
  br i1 %450, label %485, label %451

451:                                              ; preds = %449
  %452 = lshr i32 %442, 1
  %453 = icmp ult i32 %443, %452
  %454 = extractelement <4 x i32> %446, i32 0
  %455 = icmp ult i32 %454, %452
  %456 = and i1 %453, %455
  %457 = extractelement <4 x i32> %446, i32 1
  %458 = icmp ult i32 %457, %452
  %459 = and i1 %456, %458
  %460 = extractelement <4 x i32> %446, i32 2
  %461 = icmp ult i32 %460, %452
  %462 = and i1 %459, %461
  %463 = extractelement <4 x i32> %446, i32 3
  %464 = icmp ult i32 %463, %452
  %465 = and i1 %462, %464
  %466 = icmp ult i32 %444, %452
  %467 = and i1 %466, %465
  br i1 %467, label %468, label %485

468:                                              ; preds = %451
  %469 = icmp sgt i32 %445, 2
  br i1 %469, label %470, label %485

470:                                              ; preds = %468
  %471 = load i32, i32* %140, align 16
  %472 = zext i32 %445 to i64
  br label %473

473:                                              ; preds = %482, %470
  %474 = phi i64 [ 1, %470 ], [ %483, %482 ]
  %475 = and i64 %474, 1
  %476 = icmp eq i64 %475, 0
  %477 = getelementptr inbounds [5 x %"class.blink::Color"], [5 x %"class.blink::Color"]* %3, i64 0, i64 %474, i32 0
  %478 = load i32, i32* %477, align 4
  %479 = icmp eq i32 %478, %471
  br i1 %476, label %481, label %480

480:                                              ; preds = %473
  br i1 %479, label %485, label %482

481:                                              ; preds = %473
  br i1 %479, label %482, label %485

482:                                              ; preds = %481, %480
  %483 = add nuw nsw i64 %474, 1
  %484 = icmp eq i64 %483, %472
  br i1 %484, label %485, label %473

485:                                              ; preds = %181, %334, %212, %221, %230, %292, %402, %480, %481, %482, %451, %468, %449
  %486 = phi i1 [ false, %449 ], [ true, %451 ], [ false, %468 ], [ true, %482 ], [ false, %480 ], [ false, %481 ], [ true, %402 ], [ true, %292 ], [ true, %230 ], [ true, %221 ], [ true, %212 ], [ true, %334 ], [ true, %181 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #13
  br label %487

487:                                              ; preds = %97, %87, %31, %23, %26, %59, %56, %53, %49, %67, %113, %121, %485, %111, %106, %20, %12
  %488 = phi i1 [ true, %12 ], [ true, %20 ], [ true, %59 ], [ true, %56 ], [ true, %53 ], [ true, %49 ], [ true, %67 ], [ true, %106 ], [ false, %111 ], [ false, %113 ], [ %486, %485 ], [ false, %121 ], [ false, %31 ], [ false, %26 ], [ false, %23 ], [ true, %87 ], [ true, %97 ]
  %489 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %490 = icmp eq %"class.WTF::StringImpl"* %489, null
  br i1 %490, label %504, label %491

491:                                              ; preds = %487
  %492 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %489, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %493 = load atomic i32, i32* %492 monotonic, align 4
  %494 = and i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %489, i64 0, i32 0
  %497 = load i32, i32* %496, align 4
  br i1 %495, label %498, label %500

498:                                              ; preds = %491
  %499 = add i32 %497, -1
  store i32 %499, i32* %496, align 4
  br label %500

500:                                              ; preds = %498, %491
  %501 = phi i32 [ %499, %498 ], [ %497, %491 ]
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %500
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %489) #13
  br label %504

504:                                              ; preds = %487, %500, %503
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  br label %505

505:                                              ; preds = %1, %8, %504
  %506 = phi i1 [ %488, %504 ], [ false, %8 ], [ false, %1 ]
  ret i1 %506
}

declare zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_17AOMStringPropertyERN3WTF12AtomicStringE(%"class.blink::AXObject"*, i32, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLTableElement7SummaryEv(%"class.blink::HTMLTableElement"*) local_unnamed_addr #1

declare %"class.blink::HTMLTableSectionElement"* @_ZNK5blink16HTMLTableElement5tHeadEv(%"class.blink::HTMLTableElement"*) local_unnamed_addr #1

declare %"class.blink::HTMLTableSectionElement"* @_ZNK5blink16HTMLTableElement5tFootEv(%"class.blink::HTMLTableElement"*) local_unnamed_addr #1

declare %"class.blink::HTMLTableCaptionElement"* @_ZNK5blink16HTMLTableElement7captionEv(%"class.blink::HTMLTableElement"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLTableElement5RulesEv(%"class.blink::HTMLTableElement"*) local_unnamed_addr #1

declare %"class.blink::HTMLTableRowsCollection"* @_ZN5blink16HTMLTableElement4rowsEv(%"class.blink::HTMLTableElement"*) local_unnamed_addr #1

declare i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"*) local_unnamed_addr #1

declare %"class.blink::HTMLCollection"* @_ZN5blink19HTMLTableRowElement5cellsEv(%"class.blink::HTMLTableRowElement"*) local_unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"*, i32) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink20HTMLTableCellElement7HeadersEv(%"class.blink::HTMLTableCellElement"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink20HTMLTableCellElement4AbbrEv(%"class.blink::HTMLTableCellElement"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink20HTMLTableCellElement4AxisEv(%"class.blink::HTMLTableCellElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14AXLayoutObject11ColumnCountEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0
  %3 = tail call i32 @_ZNK5blink12AXNodeObject17AriaRoleAttributeEv(%"class.blink::AXNodeObject"* %2) #13
  %4 = icmp eq i32 %3, 182
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %7 = tail call i32 @_ZNK5blink8AXObject11ColumnCountEv(%"class.blink::AXObject"* %6) #13
  br label %56

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutObject"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::LayoutObject"* %10 to i1 (%"class.blink::LayoutObject"*, i32)***
  %14 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, i64 92
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutObject"* nonnull %10, i32 44) #13
  br i1 %17, label %18, label %28

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 4
  %20 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %19 to i96*
  %21 = load i96, i96* %20, align 4
  %22 = and i96 %21, 16777216
  %23 = icmp eq i96 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %28, label %31

28:                                               ; preds = %18, %24, %8, %12
  %29 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %30 = tail call i32 @_ZNK5blink8AXObject11ColumnCountEv(%"class.blink::AXObject"* %29) #13
  br label %56

31:                                               ; preds = %24
  %32 = bitcast %"class.blink::LayoutObject"* %10 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)***
  %33 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %33, i64 29
  %35 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %34, align 8
  %36 = tail call %"class.blink::LayoutNGTableInterface"* %35(%"class.blink::LayoutObject"* nonnull %10) #13
  %37 = bitcast %"class.blink::LayoutNGTableInterface"* %36 to void (%"class.blink::LayoutNGTableInterface"*)***
  %38 = load void (%"class.blink::LayoutNGTableInterface"*)**, void (%"class.blink::LayoutNGTableInterface"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %38, i64 9
  %40 = load void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %39, align 8
  tail call void %40(%"class.blink::LayoutNGTableInterface"* %36) #13
  %41 = bitcast %"class.blink::LayoutNGTableInterface"* %36 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)***
  %42 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)** %42, i64 14
  %44 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)** %43, align 8
  %45 = tail call %"class.blink::LayoutNGTableSectionInterface"* %44(%"class.blink::LayoutNGTableInterface"* %36) #13
  %46 = icmp eq %"class.blink::LayoutNGTableSectionInterface"* %45, null
  br i1 %46, label %47, label %50

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %49 = tail call i32 @_ZNK5blink8AXObject11ColumnCountEv(%"class.blink::AXObject"* %48) #13
  br label %56

50:                                               ; preds = %31
  %51 = bitcast %"class.blink::LayoutNGTableSectionInterface"* %45 to i32 (%"class.blink::LayoutNGTableSectionInterface"*)***
  %52 = load i32 (%"class.blink::LayoutNGTableSectionInterface"*)**, i32 (%"class.blink::LayoutNGTableSectionInterface"*)*** %51, align 8
  %53 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableSectionInterface"*)*, i32 (%"class.blink::LayoutNGTableSectionInterface"*)** %52, i64 9
  %54 = load i32 (%"class.blink::LayoutNGTableSectionInterface"*)*, i32 (%"class.blink::LayoutNGTableSectionInterface"*)** %53, align 8
  %55 = tail call i32 %54(%"class.blink::LayoutNGTableSectionInterface"* nonnull %45) #13
  br label %56

56:                                               ; preds = %28, %50, %47, %5
  %57 = phi i32 [ %7, %5 ], [ %30, %28 ], [ %55, %50 ], [ %49, %47 ]
  ret i32 %57
}

declare i32 @_ZNK5blink12AXNodeObject17AriaRoleAttributeEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject11ColumnCountEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14AXLayoutObject8RowCountEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0
  %3 = tail call i32 @_ZNK5blink12AXNodeObject17AriaRoleAttributeEv(%"class.blink::AXNodeObject"* %2) #13
  %4 = icmp eq i32 %3, 182
  br i1 %4, label %5, label %57

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %57, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::LayoutObject"* %7 to i1 (%"class.blink::LayoutObject"*, i32)***
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, i64 92
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::LayoutObject"* nonnull %7, i32 44) #13
  br i1 %14, label %15, label %57

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 16777216
  %20 = icmp eq i96 %19, 0
  br i1 %20, label %21, label %57

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 6, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %57, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::LayoutObject"* %7 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)***
  %27 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %27, i64 29
  %29 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %28, align 8
  %30 = tail call %"class.blink::LayoutNGTableInterface"* %29(%"class.blink::LayoutObject"* nonnull %7) #13
  %31 = bitcast %"class.blink::LayoutNGTableInterface"* %30 to void (%"class.blink::LayoutNGTableInterface"*)***
  %32 = load void (%"class.blink::LayoutNGTableInterface"*)**, void (%"class.blink::LayoutNGTableInterface"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %32, i64 9
  %34 = load void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %33, align 8
  tail call void %34(%"class.blink::LayoutNGTableInterface"* %30) #13
  %35 = bitcast %"class.blink::LayoutNGTableInterface"* %30 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)***
  %36 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)** %36, i64 14
  %38 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)** %37, align 8
  %39 = tail call %"class.blink::LayoutNGTableSectionInterface"* %38(%"class.blink::LayoutNGTableInterface"* %30) #13
  %40 = icmp eq %"class.blink::LayoutNGTableSectionInterface"* %39, null
  br i1 %40, label %57, label %41

41:                                               ; preds = %25
  %42 = bitcast %"class.blink::LayoutNGTableInterface"* %30 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)***
  br label %43

43:                                               ; preds = %41, %43
  %44 = phi %"class.blink::LayoutNGTableSectionInterface"* [ %39, %41 ], [ %55, %43 ]
  %45 = phi i32 [ 0, %41 ], [ %51, %43 ]
  %46 = bitcast %"class.blink::LayoutNGTableSectionInterface"* %44 to i32 (%"class.blink::LayoutNGTableSectionInterface"*)***
  %47 = load i32 (%"class.blink::LayoutNGTableSectionInterface"*)**, i32 (%"class.blink::LayoutNGTableSectionInterface"*)*** %46, align 8
  %48 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableSectionInterface"*)*, i32 (%"class.blink::LayoutNGTableSectionInterface"*)** %47, i64 7
  %49 = load i32 (%"class.blink::LayoutNGTableSectionInterface"*)*, i32 (%"class.blink::LayoutNGTableSectionInterface"*)** %48, align 8
  %50 = tail call i32 %49(%"class.blink::LayoutNGTableSectionInterface"* nonnull %44) #13
  %51 = add i32 %50, %45
  %52 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)*** %42, align 8
  %53 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)** %52, i64 18
  %54 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)** %53, align 8
  %55 = tail call %"class.blink::LayoutNGTableSectionInterface"* %54(%"class.blink::LayoutNGTableInterface"* %30, %"class.blink::LayoutNGTableSectionInterface"* nonnull %44, i32 1) #13
  %56 = icmp eq %"class.blink::LayoutNGTableSectionInterface"* %55, null
  br i1 %56, label %60, label %43

57:                                               ; preds = %25, %9, %5, %21, %15, %1
  %58 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %59 = tail call i32 @_ZNK5blink8AXObject8RowCountEv(%"class.blink::AXObject"* %58) #13
  br label %60

60:                                               ; preds = %43, %57
  %61 = phi i32 [ %59, %57 ], [ %51, %43 ]
  ret i32 %61
}

declare i32 @_ZNK5blink8AXObject8RowCountEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14AXLayoutObject11ColumnIndexEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 16777216
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %5, %11, %1
  %16 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %17 = tail call i32 @_ZNK5blink8AXObject11ColumnIndexEv(%"class.blink::AXObject"* %16) #13
  br label %48

18:                                               ; preds = %11
  %19 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*, i32)***
  %20 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %20, i64 92
  %22 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::LayoutObject"* nonnull %3, i32 46) #13
  br i1 %23, label %24, label %45

24:                                               ; preds = %18
  %25 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)***
  %26 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %26, i64 32
  %28 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %27, align 8
  %29 = tail call %"class.blink::LayoutNGTableCellInterface"* %28(%"class.blink::LayoutObject"* nonnull %3) #13
  %30 = bitcast %"class.blink::LayoutNGTableCellInterface"* %29 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %31 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %31, i64 3
  %33 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %32, align 8
  %34 = tail call %"class.blink::LayoutNGTableInterface"* %33(%"class.blink::LayoutNGTableCellInterface"* %29) #13
  %35 = bitcast %"class.blink::LayoutNGTableCellInterface"* %29 to i32 (%"class.blink::LayoutNGTableCellInterface"*)***
  %36 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)**, i32 (%"class.blink::LayoutNGTableCellInterface"*)*** %35, align 8
  %37 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %36, i64 10
  %38 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %37, align 8
  %39 = tail call i32 %38(%"class.blink::LayoutNGTableCellInterface"* %29) #13
  %40 = bitcast %"class.blink::LayoutNGTableInterface"* %34 to i32 (%"class.blink::LayoutNGTableInterface"*, i32)***
  %41 = load i32 (%"class.blink::LayoutNGTableInterface"*, i32)**, i32 (%"class.blink::LayoutNGTableInterface"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableInterface"*, i32)*, i32 (%"class.blink::LayoutNGTableInterface"*, i32)** %41, i64 8
  %43 = load i32 (%"class.blink::LayoutNGTableInterface"*, i32)*, i32 (%"class.blink::LayoutNGTableInterface"*, i32)** %42, align 8
  %44 = tail call i32 %43(%"class.blink::LayoutNGTableInterface"* %34, i32 %39) #13
  br label %48

45:                                               ; preds = %18
  %46 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %47 = tail call i32 @_ZNK5blink8AXObject11ColumnIndexEv(%"class.blink::AXObject"* %46) #13
  br label %48

48:                                               ; preds = %45, %24, %15
  %49 = phi i32 [ %44, %24 ], [ %47, %45 ], [ %17, %15 ]
  ret i32 %49
}

declare i32 @_ZNK5blink8AXObject11ColumnIndexEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14AXLayoutObject8RowIndexEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 16777216
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %5, %11, %1
  %16 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %17 = tail call i32 @_ZNK5blink8AXObject8RowIndexEv(%"class.blink::AXObject"* %16) #13
  br label %115

18:                                               ; preds = %11
  %19 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*, i32)***
  %20 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %20, i64 92
  %22 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::LayoutObject"* nonnull %3, i32 49) #13
  br i1 %23, label %24, label %45

24:                                               ; preds = %18
  %25 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)***
  %26 = load %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)** %26, i64 31
  %28 = load %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)** %27, align 8
  %29 = tail call %"class.blink::LayoutNGTableRowInterface"* %28(%"class.blink::LayoutObject"* nonnull %3) #13
  %30 = bitcast %"class.blink::LayoutNGTableRowInterface"* %29 to i32 (%"class.blink::LayoutNGTableRowInterface"*)***
  %31 = load i32 (%"class.blink::LayoutNGTableRowInterface"*)**, i32 (%"class.blink::LayoutNGTableRowInterface"*)*** %30, align 8
  %32 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableRowInterface"*)*, i32 (%"class.blink::LayoutNGTableRowInterface"*)** %31, i64 3
  %33 = load i32 (%"class.blink::LayoutNGTableRowInterface"*)*, i32 (%"class.blink::LayoutNGTableRowInterface"*)** %32, align 8
  %34 = tail call i32 %33(%"class.blink::LayoutNGTableRowInterface"* %29) #13
  %35 = bitcast %"class.blink::LayoutNGTableRowInterface"* %29 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableRowInterface"*)***
  %36 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableRowInterface"*)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %36, i64 4
  %38 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %37, align 8
  %39 = tail call %"class.blink::LayoutNGTableSectionInterface"* %38(%"class.blink::LayoutNGTableRowInterface"* %29) #13
  %40 = bitcast %"class.blink::LayoutNGTableRowInterface"* %29 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableRowInterface"*)***
  %41 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableRowInterface"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*** %40, align 8
  %42 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %41, i64 2
  %43 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %42, align 8
  %44 = tail call %"class.blink::LayoutNGTableInterface"* %43(%"class.blink::LayoutNGTableRowInterface"* %29) #13
  br label %74

45:                                               ; preds = %18
  %46 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %19, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, i64 92
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::LayoutObject"* nonnull %3, i32 46) #13
  br i1 %49, label %50, label %71

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)***
  %52 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %52, i64 32
  %54 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %53, align 8
  %55 = tail call %"class.blink::LayoutNGTableCellInterface"* %54(%"class.blink::LayoutObject"* nonnull %3) #13
  %56 = bitcast %"class.blink::LayoutNGTableCellInterface"* %55 to i32 (%"class.blink::LayoutNGTableCellInterface"*)***
  %57 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)**, i32 (%"class.blink::LayoutNGTableCellInterface"*)*** %56, align 8
  %58 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %57, i64 8
  %59 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %58, align 8
  %60 = tail call i32 %59(%"class.blink::LayoutNGTableCellInterface"* %55) #13
  %61 = bitcast %"class.blink::LayoutNGTableCellInterface"* %55 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %62 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*** %61, align 8
  %63 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %62, i64 15
  %64 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %63, align 8
  %65 = tail call %"class.blink::LayoutNGTableSectionInterface"* %64(%"class.blink::LayoutNGTableCellInterface"* %55) #13
  %66 = bitcast %"class.blink::LayoutNGTableCellInterface"* %55 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %67 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %67, i64 3
  %69 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %68, align 8
  %70 = tail call %"class.blink::LayoutNGTableInterface"* %69(%"class.blink::LayoutNGTableCellInterface"* %55) #13
  br label %74

71:                                               ; preds = %45
  %72 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %73 = tail call i32 @_ZNK5blink8AXObject8RowIndexEv(%"class.blink::AXObject"* %72) #13
  br label %115

74:                                               ; preds = %50, %24
  %75 = phi i32 [ %34, %24 ], [ %60, %50 ]
  %76 = phi %"class.blink::LayoutNGTableSectionInterface"* [ %39, %24 ], [ %65, %50 ]
  %77 = phi %"class.blink::LayoutNGTableInterface"* [ %44, %24 ], [ %70, %50 ]
  %78 = icmp ne %"class.blink::LayoutNGTableInterface"* %77, null
  %79 = icmp ne %"class.blink::LayoutNGTableSectionInterface"* %76, null
  %80 = and i1 %79, %78
  br i1 %80, label %84, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %83 = tail call i32 @_ZNK5blink8AXObject8RowIndexEv(%"class.blink::AXObject"* %82) #13
  br label %115

84:                                               ; preds = %74
  %85 = bitcast %"class.blink::LayoutNGTableInterface"* %77 to void (%"class.blink::LayoutNGTableInterface"*)***
  %86 = load void (%"class.blink::LayoutNGTableInterface"*)**, void (%"class.blink::LayoutNGTableInterface"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %86, i64 9
  %88 = load void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %87, align 8
  tail call void %88(%"class.blink::LayoutNGTableInterface"* nonnull %77) #13
  %89 = bitcast %"class.blink::LayoutNGTableInterface"* %77 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)***
  %90 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*** %89, align 8
  %91 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)** %90, i64 14
  %92 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)** %91, align 8
  %93 = tail call %"class.blink::LayoutNGTableSectionInterface"* %92(%"class.blink::LayoutNGTableInterface"* nonnull %77) #13
  %94 = icmp eq %"class.blink::LayoutNGTableSectionInterface"* %93, null
  %95 = icmp eq %"class.blink::LayoutNGTableSectionInterface"* %93, %76
  %96 = or i1 %94, %95
  br i1 %96, label %115, label %97

97:                                               ; preds = %84
  %98 = bitcast %"class.blink::LayoutNGTableInterface"* %77 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)***
  br label %99

99:                                               ; preds = %97, %99
  %100 = phi %"class.blink::LayoutNGTableSectionInterface"* [ %93, %97 ], [ %111, %99 ]
  %101 = phi i32 [ %75, %97 ], [ %107, %99 ]
  %102 = bitcast %"class.blink::LayoutNGTableSectionInterface"* %100 to i32 (%"class.blink::LayoutNGTableSectionInterface"*)***
  %103 = load i32 (%"class.blink::LayoutNGTableSectionInterface"*)**, i32 (%"class.blink::LayoutNGTableSectionInterface"*)*** %102, align 8
  %104 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableSectionInterface"*)*, i32 (%"class.blink::LayoutNGTableSectionInterface"*)** %103, i64 7
  %105 = load i32 (%"class.blink::LayoutNGTableSectionInterface"*)*, i32 (%"class.blink::LayoutNGTableSectionInterface"*)** %104, align 8
  %106 = tail call i32 %105(%"class.blink::LayoutNGTableSectionInterface"* nonnull %100) #13
  %107 = add i32 %106, %101
  %108 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)*** %98, align 8
  %109 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)** %108, i64 18
  %110 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)** %109, align 8
  %111 = tail call %"class.blink::LayoutNGTableSectionInterface"* %110(%"class.blink::LayoutNGTableInterface"* nonnull %77, %"class.blink::LayoutNGTableSectionInterface"* nonnull %100, i32 1) #13
  %112 = icmp eq %"class.blink::LayoutNGTableSectionInterface"* %111, null
  %113 = icmp eq %"class.blink::LayoutNGTableSectionInterface"* %111, %76
  %114 = or i1 %112, %113
  br i1 %114, label %115, label %99

115:                                              ; preds = %99, %84, %71, %81, %15
  %116 = phi i32 [ %17, %15 ], [ %83, %81 ], [ %73, %71 ], [ %75, %84 ], [ %107, %99 ]
  ret i32 %116
}

declare i32 @_ZNK5blink8AXObject8RowIndexEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14AXLayoutObject10ColumnSpanEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*, i32)***
  %7 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %7, i64 92
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::LayoutObject"* nonnull %3, i32 46) #13
  br i1 %10, label %14, label %11

11:                                               ; preds = %1, %5
  %12 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %13 = tail call i32 @_ZNK5blink8AXObject10ColumnSpanEv(%"class.blink::AXObject"* %12) #13
  br label %52

14:                                               ; preds = %5
  %15 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)***
  %16 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %16, i64 32
  %18 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %17, align 8
  %19 = tail call %"class.blink::LayoutNGTableCellInterface"* %18(%"class.blink::LayoutObject"* nonnull %3) #13
  %20 = bitcast %"class.blink::LayoutNGTableCellInterface"* %19 to i32 (%"class.blink::LayoutNGTableCellInterface"*)***
  %21 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)**, i32 (%"class.blink::LayoutNGTableCellInterface"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %21, i64 10
  %23 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %22, align 8
  %24 = tail call i32 %23(%"class.blink::LayoutNGTableCellInterface"* %19) #13
  %25 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)**, i32 (%"class.blink::LayoutNGTableCellInterface"*)*** %20, align 8
  %26 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %25, i64 11
  %27 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %26, align 8
  %28 = tail call i32 %27(%"class.blink::LayoutNGTableCellInterface"* %19) #13
  %29 = add i32 %24, -1
  %30 = add i32 %29, %28
  %31 = bitcast %"class.blink::LayoutNGTableCellInterface"* %19 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %32 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %32, i64 3
  %34 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %33, align 8
  %35 = tail call %"class.blink::LayoutNGTableInterface"* %34(%"class.blink::LayoutNGTableCellInterface"* %19) #13
  %36 = bitcast %"class.blink::LayoutNGTableInterface"* %35 to i32 (%"class.blink::LayoutNGTableInterface"*, i32)***
  %37 = load i32 (%"class.blink::LayoutNGTableInterface"*, i32)**, i32 (%"class.blink::LayoutNGTableInterface"*, i32)*** %36, align 8
  %38 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableInterface"*, i32)*, i32 (%"class.blink::LayoutNGTableInterface"*, i32)** %37, i64 8
  %39 = load i32 (%"class.blink::LayoutNGTableInterface"*, i32)*, i32 (%"class.blink::LayoutNGTableInterface"*, i32)** %38, align 8
  %40 = tail call i32 %39(%"class.blink::LayoutNGTableInterface"* %35, i32 %24) #13
  %41 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*** %31, align 8
  %42 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %41, i64 3
  %43 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %42, align 8
  %44 = tail call %"class.blink::LayoutNGTableInterface"* %43(%"class.blink::LayoutNGTableCellInterface"* %19) #13
  %45 = bitcast %"class.blink::LayoutNGTableInterface"* %44 to i32 (%"class.blink::LayoutNGTableInterface"*, i32)***
  %46 = load i32 (%"class.blink::LayoutNGTableInterface"*, i32)**, i32 (%"class.blink::LayoutNGTableInterface"*, i32)*** %45, align 8
  %47 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableInterface"*, i32)*, i32 (%"class.blink::LayoutNGTableInterface"*, i32)** %46, i64 8
  %48 = load i32 (%"class.blink::LayoutNGTableInterface"*, i32)*, i32 (%"class.blink::LayoutNGTableInterface"*, i32)** %47, align 8
  %49 = tail call i32 %48(%"class.blink::LayoutNGTableInterface"* %44, i32 %30) #13
  %50 = sub i32 1, %40
  %51 = add i32 %50, %49
  br label %52

52:                                               ; preds = %14, %11
  %53 = phi i32 [ %51, %14 ], [ %13, %11 ]
  ret i32 %53
}

declare i32 @_ZNK5blink8AXObject10ColumnSpanEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14AXLayoutObject7RowSpanEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*, i32)***
  %7 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %7, i64 92
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::LayoutObject"* nonnull %3, i32 46) #13
  br i1 %10, label %14, label %11

11:                                               ; preds = %1, %5
  %12 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %13 = tail call i32 @_ZNK5blink8AXObject10ColumnSpanEv(%"class.blink::AXObject"* %12) #13
  br label %25

14:                                               ; preds = %5
  %15 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)***
  %16 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %16, i64 32
  %18 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %17, align 8
  %19 = tail call %"class.blink::LayoutNGTableCellInterface"* %18(%"class.blink::LayoutObject"* nonnull %3) #13
  %20 = bitcast %"class.blink::LayoutNGTableCellInterface"* %19 to i32 (%"class.blink::LayoutNGTableCellInterface"*)***
  %21 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)**, i32 (%"class.blink::LayoutNGTableCellInterface"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %21, i64 9
  %23 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %22, align 8
  %24 = tail call i32 %23(%"class.blink::LayoutNGTableCellInterface"* %19) #13
  br label %25

25:                                               ; preds = %14, %11
  %26 = phi i32 [ %24, %14 ], [ %13, %11 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14AXLayoutObject16GetSortDirectionEv(%"class.blink::AXLayoutObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %6 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %5) #13
  %7 = icmp eq i32 %6, 148
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %5) #13
  %10 = icmp eq i32 %9, 20
  br i1 %10, label %11, label %72

11:                                               ; preds = %8, %1
  %12 = bitcast %"class.blink::AXLayoutObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %13 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %13, i64 5
  %15 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %14, align 8
  %16 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %15(%"class.blink::AXObject"* %5, i32 15) #13
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %72, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %72, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %26, align 8
  %27 = load i32, i32* %21, align 4
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %30 = bitcast i8** %29 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %27, i32* %31, align 8
  %32 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  br i1 %32, label %72, label %33

33:                                               ; preds = %24
  %34 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #13
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %38, align 8
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %39, i64* %40, align 8
  br label %48

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %47 = bitcast i8** %46 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %47, align 8
  br label %48

48:                                               ; preds = %37, %41
  %49 = phi i32 [ %44, %41 ], [ 0, %37 ]
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %49, i32* %50, align 8
  %51 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [10 x i8]* nonnull dereferenceable(10) @.str.9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #13
  br i1 %51, label %72, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #13
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %57, align 8
  %58 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %59 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %58, i64* %59, align 8
  br label %67

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 1
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %66 = bitcast i8** %65 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %66, align 8
  br label %67

67:                                               ; preds = %56, %60
  %68 = phi i32 [ %63, %60 ], [ 0, %56 ]
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %68, i32* %69, align 8
  %70 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [11 x i8]* nonnull dereferenceable(11) @.str.10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #13
  %71 = select i1 %70, i32 3, i32 4
  br label %72

72:                                               ; preds = %11, %20, %24, %48, %67, %8
  %73 = phi i32 [ 0, %8 ], [ 0, %20 ], [ 0, %24 ], [ 2, %48 ], [ %71, %67 ], [ 0, %11 ]
  ret i32 %73
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [10 x i8]* dereferenceable(10)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %189, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %273, %14, %28, %189, %203, %217, %231, %245, %259, %42, %59, %77, %93, %109, %125, %141, %157, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %14 ], [ false, %28 ], [ false, %189 ], [ false, %203 ], [ false, %217 ], [ false, %231 ], [ false, %245 ], [ false, %259 ], [ %286, %273 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  ret i1 %188

189:                                              ; preds = %28
  %190 = getelementptr inbounds i8, i8* %15, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %75

203:                                              ; preds = %189
  %204 = getelementptr inbounds i8, i8* %15, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %209, %215
  br i1 %216, label %217, label %75

217:                                              ; preds = %203
  %218 = getelementptr inbounds i8, i8* %15, i64 4
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %231, label %75

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %15, i64 5
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %237, %243
  br i1 %244, label %245, label %75

245:                                              ; preds = %231
  %246 = getelementptr inbounds i8, i8* %15, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %75

259:                                              ; preds = %245
  %260 = getelementptr inbounds i8, i8* %15, i64 7
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %273, label %75

273:                                              ; preds = %259
  %274 = getelementptr inbounds i8, i8* %15, i64 8
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp eq i32 %279, %285
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [11 x i8]* dereferenceable(11)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 10
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %205, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %303, %14, %28, %205, %219, %233, %247, %261, %275, %289, %42, %59, %77, %93, %109, %125, %141, %157, %173, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %173 ], [ false, %14 ], [ false, %28 ], [ false, %205 ], [ false, %219 ], [ false, %233 ], [ false, %247 ], [ false, %261 ], [ false, %275 ], [ false, %289 ], [ %316, %303 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  br i1 %188, label %189, label %75

189:                                              ; preds = %173
  %190 = getelementptr inbounds i16, i16* %44, i64 9
  %191 = load i16, i16* %190, align 2
  %192 = add i16 %191, -65
  %193 = icmp ult i16 %192, 26
  %194 = zext i1 %193 to i16
  %195 = shl nuw nsw i16 %194, 5
  %196 = or i16 %195, %191
  %197 = zext i16 %196 to i32
  %198 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 9
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i64
  %201 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = sext i8 %202 to i32
  %204 = icmp eq i32 %197, %203
  ret i1 %204

205:                                              ; preds = %28
  %206 = getelementptr inbounds i8, i8* %15, i64 2
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 2
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i64
  %215 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = sext i8 %216 to i32
  %218 = icmp eq i32 %211, %217
  br i1 %218, label %219, label %75

219:                                              ; preds = %205
  %220 = getelementptr inbounds i8, i8* %15, i64 3
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 3
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i64
  %229 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = sext i8 %230 to i32
  %232 = icmp eq i32 %225, %231
  br i1 %232, label %233, label %75

233:                                              ; preds = %219
  %234 = getelementptr inbounds i8, i8* %15, i64 4
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i64
  %237 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  %240 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 4
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i64
  %243 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = sext i8 %244 to i32
  %246 = icmp eq i32 %239, %245
  br i1 %246, label %247, label %75

247:                                              ; preds = %233
  %248 = getelementptr inbounds i8, i8* %15, i64 5
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i64
  %251 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %250
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 5
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = sext i8 %258 to i32
  %260 = icmp eq i32 %253, %259
  br i1 %260, label %261, label %75

261:                                              ; preds = %247
  %262 = getelementptr inbounds i8, i8* %15, i64 6
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i64
  %265 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 6
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i64
  %271 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %270
  %272 = load i8, i8* %271, align 1
  %273 = sext i8 %272 to i32
  %274 = icmp eq i32 %267, %273
  br i1 %274, label %275, label %75

275:                                              ; preds = %261
  %276 = getelementptr inbounds i8, i8* %15, i64 7
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i64
  %279 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %278
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i32
  %282 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 7
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i64
  %285 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = sext i8 %286 to i32
  %288 = icmp eq i32 %281, %287
  br i1 %288, label %289, label %75

289:                                              ; preds = %275
  %290 = getelementptr inbounds i8, i8* %15, i64 8
  %291 = load i8, i8* %290, align 1
  %292 = zext i8 %291 to i64
  %293 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %292
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i32
  %296 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 8
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i64
  %299 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %298
  %300 = load i8, i8* %299, align 1
  %301 = sext i8 %300 to i32
  %302 = icmp eq i32 %295, %301
  br i1 %302, label %303, label %75

303:                                              ; preds = %289
  %304 = getelementptr inbounds i8, i8* %15, i64 9
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i64
  %307 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %306
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 9
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i64
  %313 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = sext i8 %314 to i32
  %316 = icmp eq i32 %309, %315
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink14AXLayoutObject19CellForColumnAndRowEjj(%"class.blink::AXLayoutObject"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutObject"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::LayoutObject"* %5 to i1 (%"class.blink::LayoutObject"*, i32)***
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, i64 92
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutObject"* nonnull %5, i32 44) #13
  br i1 %12, label %16, label %13

13:                                               ; preds = %3, %7
  %14 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %15 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject19CellForColumnAndRowEjj(%"class.blink::AXObject"* %14, i32 %1, i32 %2) #13
  br label %141

16:                                               ; preds = %7
  %17 = bitcast %"class.blink::LayoutObject"* %5 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)***
  %18 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %18, i64 29
  %20 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %19, align 8
  %21 = tail call %"class.blink::LayoutNGTableInterface"* %20(%"class.blink::LayoutObject"* nonnull %5) #13
  %22 = bitcast %"class.blink::LayoutNGTableInterface"* %21 to void (%"class.blink::LayoutNGTableInterface"*)***
  %23 = load void (%"class.blink::LayoutNGTableInterface"*)**, void (%"class.blink::LayoutNGTableInterface"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %23, i64 9
  %25 = load void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %24, align 8
  tail call void %25(%"class.blink::LayoutNGTableInterface"* %21) #13
  %26 = bitcast %"class.blink::LayoutNGTableInterface"* %21 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)***
  %27 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)** %27, i64 14
  %29 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)** %28, align 8
  %30 = tail call %"class.blink::LayoutNGTableSectionInterface"* %29(%"class.blink::LayoutNGTableInterface"* %21) #13
  %31 = icmp eq %"class.blink::LayoutNGTableSectionInterface"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %16
  %33 = bitcast %"class.blink::LayoutNGTableInterface"* %21 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)***
  br label %37

34:                                               ; preds = %16
  %35 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  %36 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject19CellForColumnAndRowEjj(%"class.blink::AXObject"* %35, i32 %1, i32 %2) #13
  br label %141

37:                                               ; preds = %32, %129
  %38 = phi i32 [ 0, %32 ], [ %135, %129 ]
  %39 = phi %"class.blink::LayoutNGTableSectionInterface"* [ %30, %32 ], [ %139, %129 ]
  %40 = bitcast %"class.blink::LayoutNGTableSectionInterface"* %39 to %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)***
  %41 = load %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)**, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)*** %40, align 8
  %42 = getelementptr inbounds %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)*, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)** %41, i64 11
  %43 = load %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)*, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)** %42, align 8
  %44 = tail call %"class.blink::LayoutNGTableRowInterface"* %43(%"class.blink::LayoutNGTableSectionInterface"* nonnull %39) #13
  %45 = icmp eq %"class.blink::LayoutNGTableRowInterface"* %44, null
  br i1 %45, label %129, label %46

46:                                               ; preds = %37, %113
  %47 = phi %"class.blink::LayoutNGTableRowInterface"* [ %118, %113 ], [ %44, %37 ]
  %48 = bitcast %"class.blink::LayoutNGTableRowInterface"* %47 to i32 (%"class.blink::LayoutNGTableRowInterface"*)***
  %49 = load i32 (%"class.blink::LayoutNGTableRowInterface"*)**, i32 (%"class.blink::LayoutNGTableRowInterface"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableRowInterface"*)*, i32 (%"class.blink::LayoutNGTableRowInterface"*)** %49, i64 3
  %51 = load i32 (%"class.blink::LayoutNGTableRowInterface"*)*, i32 (%"class.blink::LayoutNGTableRowInterface"*)** %50, align 8
  %52 = tail call i32 %51(%"class.blink::LayoutNGTableRowInterface"* nonnull %47) #13
  %53 = add i32 %52, %38
  %54 = bitcast %"class.blink::LayoutNGTableRowInterface"* %47 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)***
  %55 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %55, i64 8
  %57 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %56, align 8
  %58 = tail call %"class.blink::LayoutNGTableCellInterface"* %57(%"class.blink::LayoutNGTableRowInterface"* nonnull %47) #13
  %59 = icmp eq %"class.blink::LayoutNGTableCellInterface"* %58, null
  br i1 %59, label %113, label %60

60:                                               ; preds = %46
  %61 = icmp ugt i32 %53, %2
  br label %62

62:                                               ; preds = %60, %106
  %63 = phi %"class.blink::LayoutNGTableCellInterface"* [ %58, %60 ], [ %111, %106 ]
  %64 = bitcast %"class.blink::LayoutNGTableCellInterface"* %63 to i32 (%"class.blink::LayoutNGTableCellInterface"*)***
  %65 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)**, i32 (%"class.blink::LayoutNGTableCellInterface"*)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %65, i64 10
  %67 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %66, align 8
  %68 = tail call i32 %67(%"class.blink::LayoutNGTableCellInterface"* nonnull %63) #13
  %69 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)**, i32 (%"class.blink::LayoutNGTableCellInterface"*)*** %64, align 8
  %70 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %69, i64 11
  %71 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %70, align 8
  %72 = tail call i32 %71(%"class.blink::LayoutNGTableCellInterface"* nonnull %63) #13
  %73 = add i32 %68, -1
  %74 = add i32 %73, %72
  %75 = bitcast %"class.blink::LayoutNGTableCellInterface"* %63 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %76 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*** %75, align 8
  %77 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %76, i64 3
  %78 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %77, align 8
  %79 = tail call %"class.blink::LayoutNGTableInterface"* %78(%"class.blink::LayoutNGTableCellInterface"* nonnull %63) #13
  %80 = bitcast %"class.blink::LayoutNGTableInterface"* %79 to i32 (%"class.blink::LayoutNGTableInterface"*, i32)***
  %81 = load i32 (%"class.blink::LayoutNGTableInterface"*, i32)**, i32 (%"class.blink::LayoutNGTableInterface"*, i32)*** %80, align 8
  %82 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableInterface"*, i32)*, i32 (%"class.blink::LayoutNGTableInterface"*, i32)** %81, i64 8
  %83 = load i32 (%"class.blink::LayoutNGTableInterface"*, i32)*, i32 (%"class.blink::LayoutNGTableInterface"*, i32)** %82, align 8
  %84 = tail call i32 %83(%"class.blink::LayoutNGTableInterface"* %79, i32 %68) #13
  %85 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*** %75, align 8
  %86 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %85, i64 3
  %87 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %86, align 8
  %88 = tail call %"class.blink::LayoutNGTableInterface"* %87(%"class.blink::LayoutNGTableCellInterface"* nonnull %63) #13
  %89 = bitcast %"class.blink::LayoutNGTableInterface"* %88 to i32 (%"class.blink::LayoutNGTableInterface"*, i32)***
  %90 = load i32 (%"class.blink::LayoutNGTableInterface"*, i32)**, i32 (%"class.blink::LayoutNGTableInterface"*, i32)*** %89, align 8
  %91 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableInterface"*, i32)*, i32 (%"class.blink::LayoutNGTableInterface"*, i32)** %90, i64 8
  %92 = load i32 (%"class.blink::LayoutNGTableInterface"*, i32)*, i32 (%"class.blink::LayoutNGTableInterface"*, i32)** %91, align 8
  %93 = tail call i32 %92(%"class.blink::LayoutNGTableInterface"* %88, i32 %74) #13
  %94 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)**, i32 (%"class.blink::LayoutNGTableCellInterface"*)*** %64, align 8
  %95 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %94, i64 9
  %96 = load i32 (%"class.blink::LayoutNGTableCellInterface"*)*, i32 (%"class.blink::LayoutNGTableCellInterface"*)** %95, align 8
  %97 = tail call i32 %96(%"class.blink::LayoutNGTableCellInterface"* nonnull %63) #13
  %98 = icmp ugt i32 %84, %1
  %99 = icmp ult i32 %93, %1
  %100 = or i1 %98, %99
  %101 = or i1 %61, %100
  %102 = xor i1 %101, true
  %103 = add i32 %97, %53
  %104 = icmp ugt i32 %103, %2
  %105 = and i1 %104, %102
  br i1 %105, label %120, label %106

106:                                              ; preds = %62
  %107 = bitcast %"class.blink::LayoutNGTableCellInterface"* %63 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %108 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*** %107, align 8
  %109 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %108, i64 13
  %110 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %109, align 8
  %111 = tail call %"class.blink::LayoutNGTableCellInterface"* %110(%"class.blink::LayoutNGTableCellInterface"* nonnull %63) #13
  %112 = icmp eq %"class.blink::LayoutNGTableCellInterface"* %111, null
  br i1 %112, label %113, label %62

113:                                              ; preds = %106, %46
  %114 = bitcast %"class.blink::LayoutNGTableRowInterface"* %47 to %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)***
  %115 = load %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)**, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*** %114, align 8
  %116 = getelementptr inbounds %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %115, i64 5
  %117 = load %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %116, align 8
  %118 = tail call %"class.blink::LayoutNGTableRowInterface"* %117(%"class.blink::LayoutNGTableRowInterface"* nonnull %47) #13
  %119 = icmp eq %"class.blink::LayoutNGTableRowInterface"* %118, null
  br i1 %119, label %129, label %46

120:                                              ; preds = %62
  %121 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  %122 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %121, align 8
  %123 = bitcast %"class.blink::LayoutNGTableCellInterface"* %63 to %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %124 = load %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)*** %123, align 8
  %125 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)** %124, i64 2
  %126 = load %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)** %125, align 8
  %127 = tail call %"class.blink::LayoutObject"* %126(%"class.blink::LayoutNGTableCellInterface"* nonnull %63) #13
  %128 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %122, %"class.blink::LayoutObject"* %127) #13
  br label %141

129:                                              ; preds = %113, %37
  %130 = bitcast %"class.blink::LayoutNGTableSectionInterface"* %39 to i32 (%"class.blink::LayoutNGTableSectionInterface"*)***
  %131 = load i32 (%"class.blink::LayoutNGTableSectionInterface"*)**, i32 (%"class.blink::LayoutNGTableSectionInterface"*)*** %130, align 8
  %132 = getelementptr inbounds i32 (%"class.blink::LayoutNGTableSectionInterface"*)*, i32 (%"class.blink::LayoutNGTableSectionInterface"*)** %131, i64 7
  %133 = load i32 (%"class.blink::LayoutNGTableSectionInterface"*)*, i32 (%"class.blink::LayoutNGTableSectionInterface"*)** %132, align 8
  %134 = tail call i32 %133(%"class.blink::LayoutNGTableSectionInterface"* nonnull %39) #13
  %135 = add i32 %134, %38
  %136 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)*** %33, align 8
  %137 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)** %136, i64 18
  %138 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)** %137, align 8
  %139 = tail call %"class.blink::LayoutNGTableSectionInterface"* %138(%"class.blink::LayoutNGTableInterface"* %21, %"class.blink::LayoutNGTableSectionInterface"* nonnull %39, i32 1) #13
  %140 = icmp eq %"class.blink::LayoutNGTableSectionInterface"* %139, null
  br i1 %140, label %141, label %37

141:                                              ; preds = %129, %120, %34, %13
  %142 = phi %"class.blink::AXObject"* [ %15, %13 ], [ %36, %34 ], [ %128, %120 ], [ null, %129 ]
  ret %"class.blink::AXObject"* %142
}

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject19CellForColumnAndRowEjj(%"class.blink::AXObject"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14AXLayoutObject25FindAllTableCellsWithRoleEN2ax5mojom4RoleERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXLayoutObject"* nocapture readonly, i32, %"class.blink::HeapVector.3257"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::AXObject"*, align 8
  %5 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutObject"* %6, null
  br i1 %7, label %107, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, i64 92
  %12 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* nonnull %6, i32 44) #13
  br i1 %13, label %14, label %107

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::LayoutObject"* %6 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)***
  %16 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %16, i64 29
  %18 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %17, align 8
  %19 = tail call %"class.blink::LayoutNGTableInterface"* %18(%"class.blink::LayoutObject"* nonnull %6) #13
  %20 = bitcast %"class.blink::LayoutNGTableInterface"* %19 to void (%"class.blink::LayoutNGTableInterface"*)***
  %21 = load void (%"class.blink::LayoutNGTableInterface"*)**, void (%"class.blink::LayoutNGTableInterface"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %21, i64 9
  %23 = load void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %22, align 8
  tail call void %23(%"class.blink::LayoutNGTableInterface"* %19) #13
  %24 = bitcast %"class.blink::LayoutNGTableInterface"* %19 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)***
  %25 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)** %25, i64 14
  %27 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*)** %26, align 8
  %28 = tail call %"class.blink::LayoutNGTableSectionInterface"* %27(%"class.blink::LayoutNGTableInterface"* %19) #13
  %29 = icmp eq %"class.blink::LayoutNGTableSectionInterface"* %28, null
  br i1 %29, label %107, label %30

30:                                               ; preds = %14
  %31 = bitcast %"class.blink::AXObject"** %4 to i8*
  %32 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::HeapVector.3257", %"class.blink::HeapVector.3257"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds %"class.blink::HeapVector.3257", %"class.blink::HeapVector.3257"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.blink::HeapVector.3257", %"class.blink::HeapVector.3257"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.blink::AXObject"** %4 to i64*
  %37 = getelementptr inbounds %"class.blink::HeapVector.3257", %"class.blink::HeapVector.3257"* %2, i64 0, i32 0
  %38 = bitcast %"class.blink::LayoutNGTableInterface"* %19 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)***
  br label %39

39:                                               ; preds = %30, %47
  %40 = phi %"class.blink::LayoutNGTableSectionInterface"* [ %28, %30 ], [ %51, %47 ]
  %41 = bitcast %"class.blink::LayoutNGTableSectionInterface"* %40 to %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)***
  %42 = load %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)**, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)*, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)** %42, i64 10
  %44 = load %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)*, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableSectionInterface"*)** %43, align 8
  %45 = call %"class.blink::LayoutNGTableRowInterface"* %44(%"class.blink::LayoutNGTableSectionInterface"* nonnull %40) #13
  %46 = icmp eq %"class.blink::LayoutNGTableRowInterface"* %45, null
  br i1 %46, label %47, label %53

47:                                               ; preds = %61, %39
  %48 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)*** %38, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)** %48, i64 18
  %50 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutNGTableInterface"*, %"class.blink::LayoutNGTableSectionInterface"*, i32)** %49, align 8
  %51 = call %"class.blink::LayoutNGTableSectionInterface"* %50(%"class.blink::LayoutNGTableInterface"* %19, %"class.blink::LayoutNGTableSectionInterface"* nonnull %40, i32 1) #13
  %52 = icmp eq %"class.blink::LayoutNGTableSectionInterface"* %51, null
  br i1 %52, label %107, label %39

53:                                               ; preds = %39, %61
  %54 = phi %"class.blink::LayoutNGTableRowInterface"* [ %66, %61 ], [ %45, %39 ]
  %55 = bitcast %"class.blink::LayoutNGTableRowInterface"* %54 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)***
  %56 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %56, i64 7
  %58 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %57, align 8
  %59 = call %"class.blink::LayoutNGTableCellInterface"* %58(%"class.blink::LayoutNGTableRowInterface"* nonnull %54) #13
  %60 = icmp eq %"class.blink::LayoutNGTableCellInterface"* %59, null
  br i1 %60, label %61, label %68

61:                                               ; preds = %100, %53
  %62 = bitcast %"class.blink::LayoutNGTableRowInterface"* %54 to %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)***
  %63 = load %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)**, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %63, i64 6
  %65 = load %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %64, align 8
  %66 = call %"class.blink::LayoutNGTableRowInterface"* %65(%"class.blink::LayoutNGTableRowInterface"* nonnull %54) #13
  %67 = icmp eq %"class.blink::LayoutNGTableRowInterface"* %66, null
  br i1 %67, label %47, label %53

68:                                               ; preds = %53, %100
  %69 = phi %"class.blink::LayoutNGTableCellInterface"* [ %105, %100 ], [ %59, %53 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %4, align 8
  %70 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %32, align 8
  %71 = bitcast %"class.blink::LayoutNGTableCellInterface"* %69 to %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %72 = load %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)*** %71, align 8
  %73 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)** %72, i64 2
  %74 = load %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)** %73, align 8
  %75 = call %"class.blink::LayoutObject"* %74(%"class.blink::LayoutNGTableCellInterface"* nonnull %69) #13
  %76 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %70, %"class.blink::LayoutObject"* %75) #13
  store %"class.blink::AXObject"* %76, %"class.blink::AXObject"** %4, align 8
  %77 = icmp eq %"class.blink::AXObject"* %76, null
  br i1 %77, label %100, label %78

78:                                               ; preds = %68
  %79 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %76) #13
  %80 = icmp eq i32 %79, %1
  br i1 %80, label %81, label %100

81:                                               ; preds = %78
  %82 = load i32, i32* %33, align 4
  %83 = load i32, i32* %34, align 8
  %84 = icmp eq i32 %82, %83
  br i1 %84, label %99, label %85, !prof !2

85:                                               ; preds = %81
  %86 = load %"class.blink::Member.3255"*, %"class.blink::Member.3255"** %35, align 8
  %87 = zext i32 %82 to i64
  %88 = getelementptr inbounds %"class.blink::Member.3255", %"class.blink::Member.3255"* %86, i64 %87
  %89 = load i64, i64* %36, align 8
  %90 = bitcast %"class.blink::Member.3255"* %88 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %85
  %94 = inttoptr i64 %89 to i8*
  %95 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #13
  br label %96

96:                                               ; preds = %93, %85
  %97 = load i32, i32* %33, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %33, align 4
  br label %100

99:                                               ; preds = %81
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3260"* %37, %"class.blink::AXObject"** nonnull dereferenceable(8) %4) #13
  br label %100

100:                                              ; preds = %99, %96, %68, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  %101 = bitcast %"class.blink::LayoutNGTableCellInterface"* %69 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %102 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*** %101, align 8
  %103 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %102, i64 12
  %104 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %103, align 8
  %105 = call %"class.blink::LayoutNGTableCellInterface"* %104(%"class.blink::LayoutNGTableCellInterface"* nonnull %69) #13
  %106 = icmp eq %"class.blink::LayoutNGTableCellInterface"* %105, null
  br i1 %106, label %61, label %68

107:                                              ; preds = %47, %14, %8, %3
  %108 = phi i1 [ false, %3 ], [ false, %8 ], [ true, %14 ], [ true, %47 ]
  ret i1 %108
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14AXLayoutObject13ColumnHeadersERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3257"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK5blink14AXLayoutObject25FindAllTableCellsWithRoleEN2ax5mojom4RoleERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXLayoutObject"* %0, i32 20, %"class.blink::HeapVector.3257"* dereferenceable(16) %1)
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink8AXObject13ColumnHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"* %5, %"class.blink::HeapVector.3257"* dereferenceable(16) %1) #13
  br label %6

6:                                                ; preds = %4, %2
  ret void
}

declare void @_ZNK5blink8AXObject13ColumnHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3257"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14AXLayoutObject10RowHeadersERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXLayoutObject"*, %"class.blink::HeapVector.3257"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK5blink14AXLayoutObject25FindAllTableCellsWithRoleEN2ax5mojom4RoleERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXLayoutObject"* %0, i32 148, %"class.blink::HeapVector.3257"* dereferenceable(16) %1)
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink8AXObject10RowHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"* %5, %"class.blink::HeapVector.3257"* dereferenceable(16) %1) #13
  br label %6

6:                                                ; preds = %4, %2
  ret void
}

declare void @_ZNK5blink8AXObject10RowHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3257"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink14AXLayoutObject12HeaderObjectEv(%"class.blink::AXLayoutObject"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %45, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*, i32)***
  %7 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %7, i64 92
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::LayoutObject"* nonnull %3, i32 49) #13
  br i1 %10, label %11, label %45

11:                                               ; preds = %5
  %12 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)***
  %13 = load %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)** %13, i64 31
  %15 = load %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)** %14, align 8
  %16 = tail call %"class.blink::LayoutNGTableRowInterface"* %15(%"class.blink::LayoutObject"* nonnull %3) #13
  %17 = bitcast %"class.blink::LayoutNGTableRowInterface"* %16 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)***
  %18 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %18, i64 7
  %20 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableRowInterface"*)** %19, align 8
  %21 = tail call %"class.blink::LayoutNGTableCellInterface"* %20(%"class.blink::LayoutNGTableRowInterface"* %16) #13
  %22 = icmp eq %"class.blink::LayoutNGTableCellInterface"* %21, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.blink::AXLayoutObject", %"class.blink::AXLayoutObject"* %0, i64 0, i32 0, i32 0, i32 14, i32 0, i32 0
  br label %25

25:                                               ; preds = %23, %38
  %26 = phi %"class.blink::LayoutNGTableCellInterface"* [ %21, %23 ], [ %43, %38 ]
  %27 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %24, align 8
  %28 = bitcast %"class.blink::LayoutNGTableCellInterface"* %26 to %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %29 = load %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)** %29, i64 2
  %31 = load %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableCellInterface"*)** %30, align 8
  %32 = tail call %"class.blink::LayoutObject"* %31(%"class.blink::LayoutNGTableCellInterface"* nonnull %26) #13
  %33 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %27, %"class.blink::LayoutObject"* %32) #13
  %34 = icmp eq %"class.blink::AXObject"* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %25
  %36 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %33) #13
  %37 = icmp eq i32 %36, 148
  br i1 %37, label %45, label %38

38:                                               ; preds = %35, %25
  %39 = bitcast %"class.blink::LayoutNGTableCellInterface"* %26 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %40 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %40, i64 12
  %42 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %41, align 8
  %43 = tail call %"class.blink::LayoutNGTableCellInterface"* %42(%"class.blink::LayoutNGTableCellInterface"* nonnull %26) #13
  %44 = icmp eq %"class.blink::LayoutNGTableCellInterface"* %43, null
  br i1 %44, label %45, label %25

45:                                               ; preds = %38, %35, %11, %5, %1
  %46 = phi %"class.blink::AXObject"* [ null, %1 ], [ null, %5 ], [ null, %11 ], [ null, %38 ], [ %33, %35 ]
  ret %"class.blink::AXObject"* %46
}

declare %"class.blink::HTMLImageElement"* @_ZNK5blink15HTMLAreaElement12ImageElementEv(%"class.blink::HTMLAreaElement"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::HeapVector.3257"* @_ZN5blink8AXObject24ChildrenIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink8AXObject27GetBoundsInFrameCoordinatesEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject5TraceEPNS_7VisitorE(%"class.blink::AXNodeObject"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject4InitEPNS_8AXObjectE(%"class.blink::AXNodeObject"*, %"class.blink::AXObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE(%"class.blink::AXObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb(%"class.blink::AXObject"*, i32, i8* dereferenceable(1)) unnamed_addr #1

declare %"class.blink::AccessibleNode"* @_ZNK5blink8AXObject17GetAccessibleNodeEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsImageMapLinkEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject14IsAXNodeObjectEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject17IsAXInlineTextBoxEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject6IsListEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject11IsAXListBoxEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject17IsAXListBoxOptionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject10IsMenuListEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject16IsMenuListOptionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject15IsMenuListPopupEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject12IsMockObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject19IsProgressIndicatorEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsAXRadioInputEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject8IsSliderEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsValidationMessageEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject15IsVirtualObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject9IsControlEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject9IsDefaultEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject10IsFieldsetEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject12IsInputImageEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject13IsNativeImageEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject18IsNativeSpinButtonEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject14IsNativeSliderEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject12IsSpinButtonEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject19IsAutofillAvailableEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject11IsClickableEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject10IsExpandedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject9IsFocusedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject9IsGrabbedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject9IsHoveredEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject8IsLoadedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject7IsModalEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject17IsMultiSelectableEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject10IsRequiredEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject10IsSelectedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject19IsSelectedFromFocusEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject22IsSelectedOptionActiveEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsVisibleEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, i32* dereferenceable(4), %"class.blink::HeapVector.3257"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, i32, i32* dereferenceable(4), %"class.blink::HeapVector.3257"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXNodeObject"*, i32, i32* dereferenceable(4), %"class.blink::HeapVector.3744"*, %"class.blink::HeapVector.3587"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject11PlaceholderEN2ax5mojom8NameFromE(%"class.blink::AXNodeObject"*, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject5TitleEN2ax5mojom8NameFromE(%"class.blink::AXNodeObject"*, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEb(%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3586"*, i1 zeroext) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12AXNodeObject9AccessKeyEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject15BackgroundColorEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject8GetColorEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject10ColorValueEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12AXNodeObject18ComputedFontFamilyEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject26FontFamilyForSerializationEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare float @_ZNK5blink12AXNodeObject8FontSizeEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare float @_ZNK5blink12AXNodeObject10FontWeightEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject12HeadingLevelEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject17HierarchicalLevelEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject12ImageDataUrlERKNS_7IntSizeE(%"class.blink::AXNodeObject"*, %"class.blink::IntSize"* dereferenceable(8)) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink12AXNodeObject16InPageLinkTargetEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject11OrientationEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject12GetTextAlignEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject16GetTextDirectionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare float @_ZNK5blink12AXNodeObject13GetTextIndentEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject15GetTextPositionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_(%"class.blink::AXNodeObject"*, i32*, i32*, i32*, i32*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject19RadioButtonsInGroupEv(%"class.blink::HeapVector.3257"* sret, %"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject3UrlEv(%"class.blink::KURL"* sret, %"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink12AXNodeObject12ChooserPopupEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject28LoadInlineTextBoxesRecursiveEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink8AXObject20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXObject"*, %"class.WTF::Vector.3745"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink8AXObject17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_(%"class.blink::AXObject"*, %"class.WTF::Vector.3745"* dereferenceable(16), %"class.WTF::Vector.3745"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject10TextLengthEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject29TextOffsetInFormattingContextEi(%"class.blink::AXNodeObject"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject21TextOffsetInContainerEi(%"class.blink::AXObject"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject19GetAriaCurrentStateEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject15GetInvalidStateEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject16AriaInvalidValueEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject13ValueForRangeEPf(%"class.blink::AXNodeObject"*, float*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject16MaxValueForRangeEPf(%"class.blink::AXNodeObject"*, float*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject16MinValueForRangeEPf(%"class.blink::AXNodeObject"*, float*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject17StepValueForRangeEPf(%"class.blink::AXNodeObject"*, float*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject18GetValueForControlEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject46SlowGetValueForControlIncludingContentEditableEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject11RestrictionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZN5blink12AXNodeObject26DetermineAccessibilityRoleEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink12AXNodeObject16ActiveDescendantEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject12AutoCompleteEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.3257"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.3257"* dereferenceable(16)) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink12AXNodeObject12ErrorMessageEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject8HasPopupEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject14IsEditableRootEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject30HasContentEditableAttributeSetEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject20SupportsARIADraggingEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXNodeObject"*, %"class.WTF::Vector.3749"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject8PosInSetEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject7SetSizeEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject16LiveRegionStatusEv(%"class.blink::AXObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject18LiveRegionRelevantEv(%"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject17GetRelativeBoundsEPPNS_8AXObjectERNS_9FloatRectER10SkMatrix44Pb(%"class.blink::AXNodeObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"* dereferenceable(16), %class.SkMatrix44* dereferenceable(68), i8*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject15CanHaveChildrenEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink8AXObject13ClearChildrenEv(%"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject15SelectedOptionsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.3257"* dereferenceable(16)) unnamed_addr #1

declare double @_ZNK5blink12AXNodeObject24EstimatedLoadingProgressEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject12RootScrollerEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink12AXNodeObject13AnchorElementEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink12AXNodeObject13ActionElementEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject8LanguageEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject12HasAttributeERKNS_13QualifiedNameE(%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12AXNodeObject12GetAttributeERKNS_13QualifiedNameE(%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject23OnNativeDecrementActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject19OnNativeClickActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject19OnNativeFocusActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject23OnNativeIncrementActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject25OnNativeSetSelectedActionEb(%"class.blink::AXObject"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12AXNodeObject22OnNativeSetValueActionERKN3WTF6StringE(%"class.blink::AXNodeObject"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject15ChildrenChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject29HandleActiveDescendantChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject25HandleAriaExpandedChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject16SelectionChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare i32 @_ZNK5blink12AXNodeObject22NativeRoleIgnoringAriaEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZN5blink12AXNodeObject11AddChildrenEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare void @_ZNK5blink12AXNodeObject25SerializeMarkerAttributesEPN2ui10AXNodeDataE(%"class.blink::AXNodeObject"*, %"struct.ui::AXNodeData"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12AXNodeObject17IsTabItemSelectedEv(%"class.blink::AXNodeObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_17AOMStringPropertyE(%"class.blink::Element"*, i32) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLInputElement18HasFallbackContentEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject6IsLinkEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject7IsImageEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal10FirstChildERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal9LastChildERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare i32 @_ZNK5blink8AXObject26ChildCountIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject33DeepestFirstChildIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject32DeepestLastChildIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink14NGInlineCursor27MoveToIncludingCulledInlineERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare void @_ZN5blink14NGInlineCursor26MoveToNextInlineLeafOnLineEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

declare %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline23CulledInlineLastLineBoxEv(%"class.blink::LayoutInline"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() local_unnamed_addr #1

declare void @_ZN5blink14NGInlineCursor30MoveToPreviousInlineLeafOnLineEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

declare %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline24CulledInlineFirstLineBoxEv(%"class.blink::LayoutInline"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::IgnoredReason"* @_ZN3WTF15ConstructTraitsIN5blink13IgnoredReasonENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::IgnoredReason"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::IgnoredReason"*
  %4 = bitcast i8* %0 to i32*
  %5 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %1, i64 0, i32 1
  %9 = bitcast %"class.blink::Member.3360"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #13
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #13
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !4
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 13
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %32, align 8
  %34 = load atomic i64, i64* %11 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %33, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to i8*
  %39 = bitcast %"class.blink::MarkingVisitor"* %33 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %37, i8* nonnull %38, i8* %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  %43 = load i64, i64* %29, align 8
  br label %44

44:                                               ; preds = %36, %28
  %45 = phi i64 [ %31, %28 ], [ %43, %36 ]
  %46 = add i64 %45, -1
  store i64 %46, i64* %29, align 8
  br label %47

47:                                               ; preds = %2, %21, %44
  ret %"class.blink::IgnoredReason"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3357"*, %"class.blink::IgnoredReason"* dereferenceable(16)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3357", %"class.WTF::Vector.3357"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3357", %"class.WTF::Vector.3357"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %6, align 8
  %8 = icmp ugt %"class.blink::IgnoredReason"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %7, i64 %10
  %12 = icmp ugt %"class.blink::IgnoredReason"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3357", %"class.WTF::Vector.3357"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3357"* %0, i32 %22) #13
  %23 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::IgnoredReason"* %1 to i64
  %26 = ptrtoint %"class.blink::IgnoredReason"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 4
  %29 = getelementptr inbounds %"class.WTF::Vector.3357", %"class.WTF::Vector.3357"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3357"* %0, i32 %37) #13
  %38 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::IgnoredReason"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::IgnoredReason"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %41, i64 %44
  %46 = bitcast %"class.blink::IgnoredReason"* %45 to i8*
  %47 = tail call %"class.blink::IgnoredReason"* @_ZN3WTF15ConstructTraitsIN5blink13IgnoredReasonENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::IgnoredReason"* dereferenceable(16) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"*
  %4 = bitcast i8* %1 to void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)**, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AXObject"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3357"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3357", %"class.WTF::Vector.3357"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !6

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3357", %"class.WTF::Vector.3357"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %8, align 8
  %10 = icmp eq %"class.blink::IgnoredReason"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_13IgnoredReasonEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3357"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %8, align 8
  %26 = icmp eq %"class.blink::IgnoredReason"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::IgnoredReason"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3357"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3357"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %67

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3357", %"class.WTF::Vector.3357"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3357", %"class.WTF::Vector.3357"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.3357"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.3357", %"class.WTF::Vector.3357"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %64, label %14

14:                                               ; preds = %4, %60
  %15 = phi %"class.blink::IgnoredReason"* [ %62, %60 ], [ %6, %4 ]
  %16 = phi %"class.blink::IgnoredReason"* [ %61, %60 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %15, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %16, i64 0, i32 1
  %21 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %15, i64 0, i32 1
  %22 = bitcast %"class.blink::Member.3360"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.blink::Member.3360"* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %60, label %27

27:                                               ; preds = %14
  %28 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %29 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %28, i64 0, i32 1
  %30 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %29) #13
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %34, !prof !2

32:                                               ; preds = %27
  %33 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %29, i8* %33) #13
  br label %34

34:                                               ; preds = %32, %27
  %35 = phi i8* [ %33, %32 ], [ %30, %27 ]
  %36 = bitcast i8* %35 to %"class.blink::ThreadState"**
  %37 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 9
  %39 = load i8, i8* %38, align 1, !range !4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %60, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 13
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %45, align 8
  %47 = load atomic i64, i64* %24 monotonic, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %46, i64 0, i32 0, i32 0
  %51 = inttoptr i64 %47 to i8*
  %52 = bitcast %"class.blink::MarkingVisitor"* %46 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, i64 5
  %55 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, align 8
  tail call void %55(%"class.blink::Visitor"* %50, i8* nonnull %51, i8* %51, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  %56 = load i64, i64* %42, align 8
  br label %57

57:                                               ; preds = %49, %41
  %58 = phi i64 [ %44, %41 ], [ %56, %49 ]
  %59 = add i64 %58, -1
  store i64 %59, i64* %42, align 8
  br label %60

60:                                               ; preds = %14, %34, %57
  %61 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %16, i64 1
  %62 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %15, i64 1
  %63 = icmp eq %"class.blink::IgnoredReason"* %62, %10
  br i1 %63, label %64, label %14

64:                                               ; preds = %60, %4
  %65 = bitcast %"class.blink::IgnoredReason"* %6 to i8*
  %66 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %65, i64 %66) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %65) #13
  br label %168

67:                                               ; preds = %2
  %68 = zext i32 %1 to i64
  %69 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_13IgnoredReasonEEEmm(i64 %68) #13
  %70 = lshr i64 %69, 4
  %71 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %70) #13
  %72 = ptrtoint %"class.blink::HeapVectorBacking"* %71 to i64
  %73 = getelementptr inbounds %"class.WTF::Vector.3357", %"class.WTF::Vector.3357"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %73, align 8
  %75 = getelementptr inbounds %"class.WTF::Vector.3357", %"class.WTF::Vector.3357"* %0, i64 0, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %74, i64 %77
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %67
  %81 = bitcast %"class.blink::IgnoredReason"* %74 to i8*
  %82 = bitcast %"class.WTF::Vector.3357"* %0 to i8**
  br label %155

83:                                               ; preds = %67
  %84 = bitcast %"class.blink::HeapVectorBacking"* %71 to %"class.blink::IgnoredReason"*
  %85 = shl nuw nsw i64 %77, 4
  %86 = add nsw i64 %85, -16
  %87 = lshr exact i64 %86, 4
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %107, label %91

91:                                               ; preds = %83, %91
  %92 = phi %"class.blink::IgnoredReason"* [ %104, %91 ], [ %74, %83 ]
  %93 = phi %"class.blink::IgnoredReason"* [ %103, %91 ], [ %84, %83 ]
  %94 = phi i64 [ %105, %91 ], [ %89, %83 ]
  %95 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %93, i64 0, i32 0
  %96 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %92, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  store i32 %97, i32* %95, align 8
  %98 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %93, i64 0, i32 1
  %99 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %92, i64 0, i32 1
  %100 = bitcast %"class.blink::Member.3360"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.blink::Member.3360"* %98 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %93, i64 1
  %104 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %92, i64 1
  %105 = add i64 %94, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %91, !llvm.loop !7

107:                                              ; preds = %91, %83
  %108 = phi %"class.blink::IgnoredReason"* [ %74, %83 ], [ %104, %91 ]
  %109 = phi %"class.blink::IgnoredReason"* [ %84, %83 ], [ %103, %91 ]
  %110 = icmp ult i64 %86, 48
  br i1 %110, label %149, label %111

111:                                              ; preds = %107, %111
  %112 = phi %"class.blink::IgnoredReason"* [ %147, %111 ], [ %108, %107 ]
  %113 = phi %"class.blink::IgnoredReason"* [ %146, %111 ], [ %109, %107 ]
  %114 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 0, i32 0
  %115 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  store i32 %116, i32* %114, align 8
  %117 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 0, i32 1
  %118 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 0, i32 1
  %119 = bitcast %"class.blink::Member.3360"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.blink::Member.3360"* %117 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 1, i32 0
  %123 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 1, i32 0
  %124 = load i32, i32* %123, align 8
  store i32 %124, i32* %122, align 8
  %125 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 1, i32 1
  %126 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 1, i32 1
  %127 = bitcast %"class.blink::Member.3360"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.blink::Member.3360"* %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 2, i32 0
  %131 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 2, i32 0
  %132 = load i32, i32* %131, align 8
  store i32 %132, i32* %130, align 8
  %133 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 2, i32 1
  %134 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 2, i32 1
  %135 = bitcast %"class.blink::Member.3360"* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.blink::Member.3360"* %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 3, i32 0
  %139 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 3, i32 0
  %140 = load i32, i32* %139, align 8
  store i32 %140, i32* %138, align 8
  %141 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 3, i32 1
  %142 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 3, i32 1
  %143 = bitcast %"class.blink::Member.3360"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.blink::Member.3360"* %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 4
  %147 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 4
  %148 = icmp eq %"class.blink::IgnoredReason"* %147, %78
  br i1 %148, label %149, label %111

149:                                              ; preds = %111, %107
  %150 = bitcast %"class.WTF::Vector.3357"* %0 to i8**
  %151 = load i8*, i8** %150, align 8
  %152 = load i32, i32* %75, align 4
  %153 = zext i32 %152 to i64
  %154 = shl nuw nsw i64 %153, 4
  br label %155

155:                                              ; preds = %80, %149
  %156 = phi i8** [ %82, %80 ], [ %150, %149 ]
  %157 = phi i64 [ 0, %80 ], [ %154, %149 ]
  %158 = phi i8* [ %81, %80 ], [ %151, %149 ]
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %158, i64 %157) #13
  %159 = load i8*, i8** %156, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %159) #13
  %160 = bitcast %"class.WTF::Vector.3357"* %0 to i64*
  store atomic i64 %72, i64* %160 monotonic, align 8
  %161 = trunc i64 %70 to i32
  %162 = getelementptr inbounds %"class.WTF::Vector.3357", %"class.WTF::Vector.3357"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %161, i32* %162, align 8
  %163 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %168, label %165

165:                                              ; preds = %155
  %166 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %71, i64 0, i32 0
  %167 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %166) #13
  br label %168

168:                                              ; preds = %165, %155, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_13IgnoredReasonEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.15, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 4
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.17, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_13IgnoredReasonENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #13
  br i1 %28, label %68, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::IgnoredReason"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %65, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %65 ]
  %56 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %30, i64 %55, i32 1
  %57 = bitcast %"class.blink::Member.3360"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  br label %65

65:                                               ; preds = %60, %54
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp eq i64 %66, %50
  br i1 %67, label %68, label %54

68:                                               ; preds = %65, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::NameSource"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::NameSource"*
  %4 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::NameSource"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8* %0 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false) #13
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 5
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8* %10 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = getelementptr inbounds i8, i8* %0, i64 32
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds i8, i8* %0, i64 40
  %21 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7
  %22 = getelementptr inbounds i8, i8* %0, i64 48
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds i8, i8* %0, i64 52
  %25 = bitcast i8* %24 to i32*
  %26 = bitcast %"class.blink::HeapVector.3587"* %21 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #13
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %20 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %23, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %23, align 4
  store i32 %30, i32* %29, align 4
  %32 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %25, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %25, align 4
  store i32 %33, i32* %32, align 4
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %2
  %38 = bitcast i8* %20 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #13
  br label %41

41:                                               ; preds = %37, %2
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::HeapVector.3587"* %21 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #13
  br label %48

48:                                               ; preds = %41, %44
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %75, label %51

51:                                               ; preds = %48
  %52 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %53 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %52, i64 0, i32 1
  %54 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %53) #13
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %58, !prof !2

56:                                               ; preds = %51
  %57 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %53, i8* %57) #13
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i8* [ %57, %56 ], [ %54, %51 ]
  %60 = bitcast i8* %59 to %"class.blink::ThreadState"**
  %61 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 9
  %63 = load i8, i8* %62, align 1, !range !4
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 13
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %66, align 8
  %69 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %70 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %70, i64 0, i32 0, i32 0
  %72 = bitcast i8* %20 to %"class.WTF::Vector.3590"*
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.3590"* %72, %"class.blink::Visitor"* %71) #13
  %73 = load i64, i64* %66, align 8
  %74 = add i64 %73, -1
  store i64 %74, i64* %66, align 8
  br label %75

75:                                               ; preds = %48, %58, %65
  ret %"class.blink::NameSource"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3598"*, %"class.blink::NameSource"* dereferenceable(56)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  %8 = icmp ugt %"class.blink::NameSource"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 %10
  %12 = icmp ugt %"class.blink::NameSource"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3598"* %0, i32 %22) #13
  %23 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::NameSource"* %1 to i64
  %26 = ptrtoint %"class.blink::NameSource"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 56
  %29 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3598"* %0, i32 %37) #13
  %38 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::NameSource"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::NameSource"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %41, i64 %44
  %46 = bitcast %"class.blink::NameSource"* %45 to i8*
  %47 = tail call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::NameSource"* dereferenceable(56) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.3590"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector.3590"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.WTF::Vector.3590"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #13
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #13
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3593"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.3593", %"class.blink::Member.3593"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.3593"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %9, i64 6
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* %1, i8* %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv) #13
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"**
  %4 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3, align 8
  %5 = ptrtoint %"class.blink::AXObject"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #13
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #13
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 -1, i32 14
  %20 = bitcast %"class.blink::Member.3264"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3598"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !6

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %8, align 8
  %10 = icmp eq %"class.blink::NameSource"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 56
  %15 = tail call %"class.blink::HeapVectorBacking.4096"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4096"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3598"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4096", %"class.blink::HeapVectorBacking.4096"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %8, align 8
  %26 = icmp eq %"class.blink::NameSource"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::NameSource"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 56
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3598"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3598"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.3598"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"* %6, %"class.blink::NameSource"* %10, %"class.blink::NameSource"* null, i1 zeroext true)
  %13 = bitcast %"class.blink::NameSource"* %6 to i8*
  %14 = mul nuw nsw i64 %9, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %14) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %13) #13
  br label %42

15:                                               ; preds = %2
  %16 = zext i32 %1 to i64
  %17 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64 %16) #13
  %18 = udiv i64 %17, 56
  %19 = tail call %"class.blink::HeapVectorBacking.4096"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %18) #13
  %20 = bitcast %"class.blink::HeapVectorBacking.4096"* %19 to %"class.blink::NameSource"*
  %21 = ptrtoint %"class.blink::HeapVectorBacking.4096"* %19 to i64
  %22 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %26
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"* %23, %"class.blink::NameSource"* %27, %"class.blink::NameSource"* %20, i1 zeroext false)
  %28 = bitcast %"class.WTF::Vector.3598"* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = load i32, i32* %24, align 4
  %31 = zext i32 %30 to i64
  %32 = mul nuw nsw i64 %31, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #13
  %33 = load i8*, i8** %28, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %33) #13
  %34 = bitcast %"class.WTF::Vector.3598"* %0 to i64*
  store atomic i64 %21, i64* %34 monotonic, align 8
  %35 = trunc i64 %18 to i32
  %36 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %35, i32* %36, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.blink::HeapVectorBacking.4096", %"class.blink::HeapVectorBacking.4096"* %19, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #13
  br label %42

42:                                               ; preds = %39, %15, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2396745
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2396745) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.15, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 56
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4096"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.17, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 56
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4096"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4096"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_10NameSourceENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #13
  br i1 %28, label %73, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::NameSource"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 56
  %51 = icmp ugt i64 %49, 55
  br i1 %51, label %52, label %73

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %54 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %55

55:                                               ; preds = %70, %52
  %56 = phi i64 [ 0, %52 ], [ %71, %70 ]
  %57 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 %56, i32 7
  %58 = bitcast %"class.blink::HeapVector.3587"* %57 to i64*
  %59 = load atomic i64, i64* %58 monotonic, align 8
  %60 = icmp eq i64 %59, 0
  %61 = bitcast %"class.blink::HeapVector.3587"* %57 to i8**
  %62 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %62, i64 11
  %64 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8** %61) #13
  br i1 %60, label %70, label %65

65:                                               ; preds = %55
  %66 = inttoptr i64 %59 to i8*
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %54, align 8
  %68 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, i64 5
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %68, align 8
  tail call void %69(%"class.blink::Visitor"* %0, i8* nonnull %66, i8* nonnull %66, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #13
  br label %70

70:                                               ; preds = %65, %55
  %71 = add nuw nsw i64 %56, 1
  %72 = icmp ult i64 %71, %50
  br i1 %72, label %55, label %73

73:                                               ; preds = %70, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HeapVectorBacking.4096"*
  tail call void @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.4096"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.4096"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapVectorBacking.4096", %"class.blink::HeapVectorBacking.4096"* %0, i64 -8, i32 0
  %3 = getelementptr inbounds i8, i8* %2, i64 6
  %4 = bitcast i8* %3 to i16*
  %5 = load i16, i16* %4, align 2
  %6 = lshr i16 %5, 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %15, !prof !2

8:                                                ; preds = %1
  %9 = ptrtoint i8* %2 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %6 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %8, %15
  %19 = phi i64 [ %14, %8 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 56
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to %"class.blink::NameSource"*
  %24 = icmp ugt i64 %20, 55
  br i1 %24, label %26, label %25

25:                                               ; preds = %62, %18
  ret void

26:                                               ; preds = %18, %62
  %27 = phi i64 [ %64, %62 ], [ 0, %18 ]
  %28 = phi i32 [ %63, %62 ], [ 0, %18 ]
  %29 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %27, i32 5, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #13
  br label %45

45:                                               ; preds = %44, %41, %26
  %46 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %27, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #13
  br label %62

62:                                               ; preds = %45, %58, %61
  %63 = add i32 %28, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %21, %64
  br i1 %65, label %26, label %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"*, %"class.blink::NameSource"*, %"class.blink::NameSource"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::NameSource"* %0, %1
  br i1 %5, label %116, label %6

6:                                                ; preds = %4, %112
  %7 = phi %"class.blink::NameSource"* [ %114, %112 ], [ %0, %4 ]
  %8 = phi %"class.blink::NameSource"* [ %113, %112 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::NameSource"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::NameSource"* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %13 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false) #13
  %15 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 5
  %16 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 5
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %21 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 6
  %22 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7
  %25 = bitcast %"class.blink::HeapVector.3587"* %24 to i8*
  %26 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7
  %27 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %29 = bitcast %"class.blink::HeapVector.3587"* %26 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #13
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::HeapVector.3587"* %24 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %27, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %27, align 4
  store i32 %33, i32* %32, align 4
  %35 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %28, align 4
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %28, align 4
  store i32 %36, i32* %35, align 4
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %6
  %41 = bitcast %"class.blink::HeapVector.3587"* %24 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #13
  br label %44

44:                                               ; preds = %40, %6
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::HeapVector.3587"* %26 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #13
  br label %51

51:                                               ; preds = %44, %47
  br i1 %3, label %52, label %79

52:                                               ; preds = %51
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %79, label %55

55:                                               ; preds = %52
  %56 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %57 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %56, i64 0, i32 1
  %58 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %57) #13
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %62, !prof !2

60:                                               ; preds = %55
  %61 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %57, i8* %61) #13
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i8* [ %61, %60 ], [ %58, %55 ]
  %64 = bitcast i8* %63 to %"class.blink::ThreadState"**
  %65 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 9
  %67 = load i8, i8* %66, align 1, !range !4
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %79, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 13
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  %73 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %74 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %74, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.3590"* %76, %"class.blink::Visitor"* %75) #13
  %77 = load i64, i64* %70, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %70, align 8
  br label %79

79:                                               ; preds = %69, %62, %52, %51
  %80 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #13
  br label %96

96:                                               ; preds = %95, %92, %79
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #13
  br label %112

112:                                              ; preds = %96, %108, %111
  %113 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 1
  %114 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 1
  %115 = icmp eq %"class.blink::NameSource"* %114, %1
  br i1 %115, label %116, label %6

116:                                              ; preds = %112, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3598"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.3598", %"class.WTF::Vector.3598"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %24, i64 %25
  ret %"class.blink::NameSource"* %26
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl17optional_internal18optional_data_baseIN3WTF6StringEE6assignIRA2_KcEEvOT_(%"class.absl::optional_internal::optional_data_base.3581"*, [2 x i8]* dereferenceable(2)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.3581", %"class.absl::optional_internal::optional_data_base.3581"* %0, i64 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %53, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [2 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call i64 @strlen(i8* nonnull %9) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %7 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #13
  %15 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.3581", %"class.absl::optional_internal::optional_data_base.3581"* %0, i64 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %17 = bitcast %"class.WTF::String"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %19 = bitcast %"class.WTF::String"* %15 to i64*
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  store i64 %18, i64* %19, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br label %36

36:                                               ; preds = %13, %32, %35
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #13
  br label %52

52:                                               ; preds = %36, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  br label %61

53:                                               ; preds = %2
  %54 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.3581", %"class.absl::optional_internal::optional_data_base.3581"* %0, i64 0, i32 0, i32 1, i32 0
  %55 = getelementptr inbounds [2 x i8], [2 x i8]* %1, i64 0, i64 0
  %56 = icmp eq [2 x i8]* %1, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = tail call i64 @strlen(i8* nonnull %55) #15
  br label %59

59:                                               ; preds = %53, %57
  %60 = phi i64 [ %58, %57 ], [ 0, %53 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %54, i8* %55, i64 %60) #13
  store i8 1, i8* %4, align 8
  br label %61

61:                                               ; preds = %59, %52
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3260"*, %"class.blink::AXObject"** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3260"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.3255"*, %"class.blink::Member.3255"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3255", %"class.blink::Member.3255"* %16, i64 %18
  %20 = bitcast %"class.blink::AXObject"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.3255"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3260"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !6

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.3255"*, %"class.blink::Member.3255"** %8, align 8
  %10 = icmp eq %"class.blink::Member.3255"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8AXObjectEEEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.4105"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4105"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3260"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4105", %"class.blink::HeapVectorBacking.4105"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.3255"*, %"class.blink::Member.3255"** %8, align 8
  %26 = icmp eq %"class.blink::Member.3255"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.3255"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3260"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3260"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.3260"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.3260"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #13
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8AXObjectEEEEEmm(i64 %14) #13
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.4105"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4105"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.3255"*, %"class.blink::Member.3255"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4105"* %17, null
  %23 = icmp ne %"class.blink::Member.3255"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.3255"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !6

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.3260"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4105", %"class.blink::HeapVectorBacking.4105"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #13
  %33 = bitcast %"class.WTF::Vector.3260"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #13
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #13
  %42 = bitcast %"class.WTF::Vector.3260"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.3260", %"class.WTF::Vector.3260"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4105", %"class.blink::HeapVectorBacking.4105"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8AXObjectEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.15, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4105"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.17, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4105"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4105"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8AXObjectEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3255"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.3255", %"class.blink::Member.3255"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.3255"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8 1 }
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 4001, i32 4000000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
