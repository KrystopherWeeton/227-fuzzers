; ModuleID = '../../third_party/skia/src/sksl/SkSLRehydrator.cpp'
source_filename = "../../third_party/skia/src/sksl/SkSLRehydrator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::Rehydrator" = type { %"class.SkSL::Context"*, %"class.std::__1::shared_ptr", %"class.std::__1::vector.37", i8*, i8* }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"**, %"class.std::__1::__compressed_pair.39" }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.8", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.10" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkSL::Type::Field"* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.SkSL::Symbol"** }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Type"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.17", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.33", [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.36"* }
%"class.std::__1::vector.36" = type opaque
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr", %"class.std::__1::vector.44", i8, %"class.std::__1::vector.57", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::unique_ptr.46"* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.std::__1::unique_ptr.59"*, %"class.std::__1::unique_ptr.59"*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.std::__1::unique_ptr.59"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.70" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.258" }
%"struct.std::__1::pair.258" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.84" }
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.78" }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.SkSL::Variable"** }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"**, %"class.std::__1::__compressed_pair.147" }
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector.76", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.SkSL::FunctionDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, %"class.std::__1::unique_ptr.89", %"class.std::__1::unordered_set.95", %"struct.SkSL::ASTNode"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.SkSL::Statement"* }
%"class.std::__1::unordered_set.95" = type { %"class.std::__1::__hash_table.96" }
%"class.std::__1::__hash_table.96" = type <{ %"class.std::__1::unique_ptr.97", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.115", [4 x i8] }>
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99", %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base.100"** }
%"struct.std::__1::__hash_node_base.100" = type { %"struct.std::__1::__hash_node_base.100"* }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.std::__1::__bucket_list_deallocator.102" }
%"class.std::__1::__bucket_list_deallocator.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base.100" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.120"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.SkSL::ASTNode"* }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.SkSL::FunctionDeclaration"** }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"class.std::__1::unique_ptr.166"*, %"class.std::__1::unique_ptr.166"*, %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.SkSL::ProgramElement"* }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.std::__1::unique_ptr.166"* }
%"struct.std::__1::pair.247" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.89"*, i64 }
%"class.SkSL::Block" = type <{ %"class.SkSL::Statement", %class.SkSTArray, %"class.std::__1::shared_ptr", i8, [7 x i8] }>
%class.SkSTArray.225 = type { %class.SkAlignedSTStorage.226, %class.SkTArray.227 }
%class.SkAlignedSTStorage.226 = type { [16 x i8] }
%class.SkTArray.227 = type { %"class.std::__1::unique_ptr.78"*, i64 }
%class.SkSTArray.242 = type { %class.SkAlignedSTStorage.243, %class.SkTArray.244 }
%class.SkAlignedSTStorage.243 = type { [4 x i8] }
%class.SkTArray.244 = type { i8*, i64 }
%"class.SkSL::VariableReference" = type <{ %"class.SkSL::Expression", %"class.SkSL::Variable"*, i8, [7 x i8] }>
%"class.SkSL::Literal" = type { %"class.SkSL::Expression", i64 }
%"class.SkSL::BreakStatement" = type { %"class.SkSL::Statement" }
%"class.SkSL::ContinueStatement" = type { %"class.SkSL::Statement" }
%"class.SkSL::DiscardStatement" = type { %"class.SkSL::Statement" }
%"class.SkSL::InlineMarker" = type { %"class.SkSL::Statement", %"class.SkSL::FunctionDeclaration"* }
%"class.SkSL::ReturnStatement" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.78" }
%"class.SkSL::Literal.231" = type <{ %"class.SkSL::Expression", i8, [7 x i8] }>
%"class.SkSL::Literal.238" = type <{ %"class.SkSL::Expression", float, [4 x i8] }>
%"class.SkSL::GlobalVarDeclaration" = type { %"class.SkSL::ProgramElement", %"class.std::__1::unique_ptr.89" }
%"class.SkSL::Field" = type <{ %"class.SkSL::Symbol", %"class.SkSL::Variable"*, i32, [4 x i8] }>
%"class.SkSL::SymbolAlias" = type { %"class.SkSL::Symbol", %"class.SkSL::Symbol"* }
%"class.SkSL::UnresolvedFunction" = type { %"class.SkSL::Symbol", %"class.std::__1::vector.145" }
%"class.SkSL::Enum" = type <{ %"class.SkSL::ProgramElement", %"struct.SkSL::StringFragment", %"class.std::__1::shared_ptr", i8, i8, [6 x i8] }>
%class.anon.337 = type { i8 }
%class.anon.341 = type { %class.anon.335* }
%class.anon.335 = type { %"class.std::__1::vector.328"* }
%"class.std::__1::vector.328" = type { %"class.std::__1::__vector_base.329" }
%"class.std::__1::__vector_base.329" = type { %struct.Enumerant*, %struct.Enumerant*, %"class.std::__1::__compressed_pair.330" }
%struct.Enumerant = type { %"struct.SkSL::StringFragment", i64 }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %struct.Enumerant* }
%"struct.std::__1::__shared_ptr_emplace" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage" = type { [104 x i8] }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::__hash_node.308" = type { %"struct.std::__1::__hash_node_base.100", i64, %"class.SkSL::FunctionDeclaration"* }
%"class.SkSL::InterfaceBlock" = type { %"class.SkSL::ProgramElement", %"class.SkSL::Variable"*, %"class.SkSL::String", %"class.SkSL::String", i32, %"class.std::__1::shared_ptr" }
%"class.SkSL::StructDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::Type"* }
%"class.SkSL::SwitchCase" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.89" }

$_ZN4SkSL10Rehydrator9addSymbolEiPKNS_6SymbolE = comdat any

$_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJiRPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS8_EEEENS_13unordered_setIS5_NS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZN4SkSL4TypeD2Ev = comdat any

$_ZN4SkSL4TypeD0Ev = comdat any

$_ZNK4SkSL4Type11descriptionEv = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNK4SkSL6LayouteqERKS0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZN4SkSL7LiteralIlED0Ev = comdat any

$_ZNK4SkSL7LiteralIlE11descriptionEv = comdat any

$_ZNK4SkSL10Expression4typeEv = comdat any

$_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL10Expression19isConstantOrUniformEv = comdat any

$_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIlE5cloneEv = comdat any

$_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE = comdat any

$_ZN4SkSL14BreakStatementD0Ev = comdat any

$_ZNK4SkSL14BreakStatement11descriptionEv = comdat any

$_ZNK4SkSL9Statement7isEmptyEv = comdat any

$_ZNK4SkSL14BreakStatement5cloneEv = comdat any

$_ZN4SkSL17ContinueStatementD0Ev = comdat any

$_ZNK4SkSL17ContinueStatement11descriptionEv = comdat any

$_ZNK4SkSL17ContinueStatement5cloneEv = comdat any

$_ZN4SkSL16DiscardStatementD0Ev = comdat any

$_ZNK4SkSL16DiscardStatement11descriptionEv = comdat any

$_ZNK4SkSL16DiscardStatement5cloneEv = comdat any

$_ZN4SkSL12InlineMarkerD0Ev = comdat any

$_ZNK4SkSL12InlineMarker11descriptionEv = comdat any

$_ZNK4SkSL12InlineMarker7isEmptyEv = comdat any

$_ZNK4SkSL12InlineMarker5cloneEv = comdat any

$_ZN4SkSL15ReturnStatementD2Ev = comdat any

$_ZN4SkSL15ReturnStatementD0Ev = comdat any

$_ZNK4SkSL15ReturnStatement11descriptionEv = comdat any

$_ZNK4SkSL15ReturnStatement5cloneEv = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZN4SkSL7LiteralIbED0Ev = comdat any

$_ZNK4SkSL7LiteralIbE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIbE5cloneEv = comdat any

$_ZN4SkSL7LiteralIfED0Ev = comdat any

$_ZNK4SkSL7LiteralIfE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIfE5cloneEv = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN4SkSL20GlobalVarDeclarationD2Ev = comdat any

$_ZN4SkSL20GlobalVarDeclarationD0Ev = comdat any

$_ZNK4SkSL20GlobalVarDeclaration11descriptionEv = comdat any

$_ZNK4SkSL20GlobalVarDeclaration5cloneEv = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZN4SkSL5FieldD0Ev = comdat any

$_ZNK4SkSL5Field11descriptionEv = comdat any

$_ZNK4SkSL8Variable11descriptionEv = comdat any

$_ZNK4SkSL9Modifiers11descriptionEv = comdat any

$_ZNK4SkSL6Layout11descriptionEv = comdat any

$_ZN4SkSL11SymbolAliasD0Ev = comdat any

$_ZNK4SkSL11SymbolAlias11descriptionEv = comdat any

$_ZN4SkSL18UnresolvedFunctionD2Ev = comdat any

$_ZN4SkSL18UnresolvedFunctionD0Ev = comdat any

$_ZNK4SkSL18UnresolvedFunction11descriptionEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4SkSL6IRNodeENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN4SkSL4EnumD2Ev = comdat any

$_ZN4SkSL4EnumD0Ev = comdat any

$_ZNK4SkSL4Enum11descriptionEv = comdat any

$_ZNK4SkSL4Enum5cloneEv = comdat any

$_ZNK4SkSL4Enum4codeEv = comdat any

$_ZZNK4SkSL4Enum7foreachIZNKS0_4codeEvEUlNS_14StringFragmentElE_EEvOT_ENKUlS2_PKNS_6SymbolEE_clES2_S8_ = comdat any

$_ZNSt3__16__sortIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_ = comdat any

$_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEbT0_S9_T_ = comdat any

$_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZN4SkSL11SymbolTableD2Ev = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZN4SkSL18FunctionDefinitionD2Ev = comdat any

$_ZN4SkSL18FunctionDefinitionD0Ev = comdat any

$_ZNK4SkSL18FunctionDefinition11descriptionEv = comdat any

$_ZNK4SkSL18FunctionDefinition5cloneEv = comdat any

$_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS9_EEEERKNS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZN4SkSL14InterfaceBlockD2Ev = comdat any

$_ZN4SkSL14InterfaceBlockD0Ev = comdat any

$_ZNK4SkSL14InterfaceBlock11descriptionEv = comdat any

$_ZNK4SkSL14InterfaceBlock5cloneEv = comdat any

$_ZNK4SkSL4Type5Field11descriptionEv = comdat any

$_ZN4SkSL16StructDefinitionD0Ev = comdat any

$_ZNK4SkSL16StructDefinition11descriptionEv = comdat any

$_ZNK4SkSL16StructDefinition5cloneEv = comdat any

$_ZN4SkSL10SwitchCaseD2Ev = comdat any

$_ZN4SkSL10SwitchCaseD0Ev = comdat any

$_ZNK4SkSL10SwitchCase11descriptionEv = comdat any

$_ZNK4SkSL10SwitchCase5cloneEv = comdat any

$_ZTVN4SkSL4TypeE = comdat any

$_ZTVN4SkSL7LiteralIlEE = comdat any

$_ZTVN4SkSL14BreakStatementE = comdat any

$_ZTVN4SkSL17ContinueStatementE = comdat any

$_ZTVN4SkSL16DiscardStatementE = comdat any

$_ZTVN4SkSL12InlineMarkerE = comdat any

$_ZTVN4SkSL15ReturnStatementE = comdat any

$_ZTVN4SkSL7LiteralIbEE = comdat any

$_ZTVN4SkSL7LiteralIfEE = comdat any

$_ZTVN4SkSL20GlobalVarDeclarationE = comdat any

$_ZTVN4SkSL5FieldE = comdat any

$_ZTVN4SkSL11SymbolAliasE = comdat any

$_ZTVN4SkSL18UnresolvedFunctionE = comdat any

$_ZTVN4SkSL4EnumE = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE = comdat any

$_ZTVN4SkSL18FunctionDefinitionE = comdat any

$_ZTVN4SkSL14InterfaceBlockE = comdat any

$_ZTVN4SkSL16StructDefinitionE = comdat any

$_ZTVN4SkSL10SwitchCaseE = comdat any

@.str = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"unsupported symbol %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"unsupported statement %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"unsupported expression %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN4SkSL4TypeE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Type"*)* @_ZNK4SkSL4Type11descriptionEv to i8*)] }, comdat, align 8
@.str.8 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@_ZTVN4SkSL7LiteralIlEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal"*)* @_ZN4SkSL7LiteralIlED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIlE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Literal"*, %"class.SkSL::Type"*)* @_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIlE5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL14BreakStatementE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::BreakStatement"*)* @_ZN4SkSL14BreakStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::BreakStatement"*)* @_ZNK4SkSL14BreakStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::BreakStatement"*)* @_ZNK4SkSL14BreakStatement5cloneEv to i8*)] }, comdat, align 8
@.str.10 = private unnamed_addr constant [7 x i8] c"break;\00", align 1
@_ZTVN4SkSL17ContinueStatementE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ContinueStatement"*)* @_ZN4SkSL17ContinueStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::ContinueStatement"*)* @_ZNK4SkSL17ContinueStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::ContinueStatement"*)* @_ZNK4SkSL17ContinueStatement5cloneEv to i8*)] }, comdat, align 8
@.str.11 = private unnamed_addr constant [10 x i8] c"continue;\00", align 1
@_ZTVN4SkSL16DiscardStatementE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::DiscardStatement"*)* @_ZN4SkSL16DiscardStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::DiscardStatement"*)* @_ZNK4SkSL16DiscardStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::DiscardStatement"*)* @_ZNK4SkSL16DiscardStatement5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL12InlineMarkerE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::InlineMarker"*)* @_ZN4SkSL12InlineMarkerD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::InlineMarker"*)* @_ZNK4SkSL12InlineMarker11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::InlineMarker"*)* @_ZNK4SkSL12InlineMarker7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::InlineMarker"*)* @_ZNK4SkSL12InlineMarker5cloneEv to i8*)] }, comdat, align 8
@.str.13 = private unnamed_addr constant [13 x i8] c"/* inlined: \00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c" */\00", align 1
@_ZTVN4SkSL15ReturnStatementE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::ReturnStatement"*)* @_ZN4SkSL15ReturnStatementD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ReturnStatement"*)* @_ZN4SkSL15ReturnStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::ReturnStatement"*)* @_ZNK4SkSL15ReturnStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::ReturnStatement"*)* @_ZNK4SkSL15ReturnStatement5cloneEv to i8*)] }, comdat, align 8
@.str.15 = private unnamed_addr constant [8 x i8] c"return \00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"return;\00", align 1
@_ZTVN4SkSL7LiteralIbEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal.231"*)* @_ZN4SkSL7LiteralIbED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal.231"*)* @_ZNK4SkSL7LiteralIbE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.231"*)* @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal.231"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.231"*, i32)* @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.231"*, i32)* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.231"*)* @_ZNK4SkSL7LiteralIbE5cloneEv to i8*)] }, comdat, align 8
@.str.18 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@_ZTVN4SkSL7LiteralIfEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal.238"*)* @_ZN4SkSL7LiteralIfED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal.238"*)* @_ZNK4SkSL7LiteralIfE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.238"*)* @_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal.238"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.238"*, i32)* @_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Literal.238"*, %"class.SkSL::Type"*)* @_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.238"*, i32)* @_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.238"*)* @_ZNK4SkSL7LiteralIfE5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL20GlobalVarDeclarationE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::GlobalVarDeclaration"*)* @_ZN4SkSL20GlobalVarDeclarationD2Ev to i8*), i8* bitcast (void (%"class.SkSL::GlobalVarDeclaration"*)* @_ZN4SkSL20GlobalVarDeclarationD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::GlobalVarDeclaration"*)* @_ZNK4SkSL20GlobalVarDeclaration11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::GlobalVarDeclaration"*)* @_ZNK4SkSL20GlobalVarDeclaration5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL5FieldE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Field"*)* @_ZN4SkSL5FieldD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Field"*)* @_ZNK4SkSL5Field11descriptionEv to i8*)] }, comdat, align 8
@.str.20 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"uniform \00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"const \00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"flat \00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"noperspective \00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"sk_has_side_effects \00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"noinline \00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"inout \00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"in \00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"out \00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"location = \00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"offset = \00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"binding = \00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"index = \00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"set = \00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"builtin = \00", align 1
@.str.37 = private unnamed_addr constant [26 x i8] c"input_attachment_index = \00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"origin_upper_left\00", align 1
@.str.39 = private unnamed_addr constant [28 x i8] c"blend_support_all_equations\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"push_constant\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"srgb_unpremul\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"points\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.44 = private unnamed_addr constant [11 x i8] c"line_strip\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"lines_adjacency\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"triangles\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"triangle_strip\00", align 1
@.str.48 = private unnamed_addr constant [20 x i8] c"triangles_adjacency\00", align 1
@.str.49 = private unnamed_addr constant [16 x i8] c"max_vertices = \00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"invocations = \00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"when = \00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"layout (\00", align 1
@.str.53 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.54 = private unnamed_addr constant [16 x i8] c"/* key */ const\00", align 1
@_ZTVN4SkSL11SymbolAliasE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::SymbolAlias"*)* @_ZN4SkSL11SymbolAliasD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::SymbolAlias"*)* @_ZNK4SkSL11SymbolAlias11descriptionEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL18UnresolvedFunctionE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::UnresolvedFunction"*)* @_ZN4SkSL18UnresolvedFunctionD2Ev to i8*), i8* bitcast (void (%"class.SkSL::UnresolvedFunction"*)* @_ZN4SkSL18UnresolvedFunctionD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::UnresolvedFunction"*)* @_ZNK4SkSL18UnresolvedFunction11descriptionEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL8VariableE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN4SkSL4EnumE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::Enum"*)* @_ZN4SkSL4EnumD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Enum"*)* @_ZN4SkSL4EnumD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Enum"*)* @_ZNK4SkSL4Enum11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::Enum"*)* @_ZNK4SkSL4Enum5cloneEv to i8*)] }, comdat, align 8
@.str.56 = private unnamed_addr constant [12 x i8] c"enum class \00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c" {\0A\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"\0A};\00", align 1
@_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL18FunctionDefinitionE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::FunctionDefinition"*)* @_ZN4SkSL18FunctionDefinitionD2Ev to i8*), i8* bitcast (void (%"class.SkSL::FunctionDefinition"*)* @_ZN4SkSL18FunctionDefinitionD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::FunctionDefinition"*)* @_ZNK4SkSL18FunctionDefinition11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::FunctionDefinition"*)* @_ZNK4SkSL18FunctionDefinition5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL14InterfaceBlockE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::InterfaceBlock"*)* @_ZN4SkSL14InterfaceBlockD2Ev to i8*), i8* bitcast (void (%"class.SkSL::InterfaceBlock"*)* @_ZN4SkSL14InterfaceBlockD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::InterfaceBlock"*)* @_ZNK4SkSL14InterfaceBlock11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::InterfaceBlock"*)* @_ZNK4SkSL14InterfaceBlock5cloneEv to i8*)] }, comdat, align 8
@.str.62 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.63 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"[%d]\00", align 1
@_ZTVN4SkSL16StructDefinitionE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::StructDefinition"*)* @_ZN4SkSL16StructDefinitionD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::StructDefinition"*)* @_ZNK4SkSL16StructDefinition11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::StructDefinition"*)* @_ZNK4SkSL16StructDefinition5cloneEv to i8*)] }, comdat, align 8
@.str.65 = private unnamed_addr constant [8 x i8] c"struct \00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c" { \00", align 1
@.str.67 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@.str.68 = private unnamed_addr constant [3 x i8] c"};\00", align 1
@_ZTVN4SkSL10SwitchCaseE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::SwitchCase"*)* @_ZN4SkSL10SwitchCaseD2Ev to i8*), i8* bitcast (void (%"class.SkSL::SwitchCase"*)* @_ZN4SkSL10SwitchCaseD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::SwitchCase"*)* @_ZNK4SkSL10SwitchCase11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::SwitchCase"*)* @_ZNK4SkSL10SwitchCase5cloneEv to i8*)] }, comdat, align 8
@.str.69 = private unnamed_addr constant [12 x i8] c"case %s:\0A%s\00", align 1
@.str.70 = private unnamed_addr constant [12 x i8] c"default:\0A%s\00", align 1

@_ZN4SkSL10RehydratorC1EPKNS_7ContextENSt3__110shared_ptrINS_11SymbolTableEEEPKhm = hidden unnamed_addr alias void (%"class.SkSL::Rehydrator"*, %"class.SkSL::Context"*, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, i8*, i64), void (%"class.SkSL::Rehydrator"*, %"class.SkSL::Context"*, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, i8*, i64)* @_ZN4SkSL10RehydratorC2EPKNS_7ContextENSt3__110shared_ptrINS_11SymbolTableEEEPKhm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL10RehydratorC2EPKNS_7ContextENSt3__110shared_ptrINS_11SymbolTableEEEPKhm(%"class.SkSL::Rehydrator"* nocapture, %"class.SkSL::Context"*, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, i8*, i64) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.SkSL::SymbolTable"* %2 to i64
  %8 = ptrtoint %"class.std::__1::__shared_weak_count"* %3 to i64
  %9 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  store %"class.SkSL::Context"* %1, %"class.SkSL::Context"** %9, align 8
  %10 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::shared_ptr"* %10 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1, i32 1
  %13 = bitcast %"class.std::__1::__shared_weak_count"** %12 to i64*
  store i64 %8, i64* %13, align 8
  %14 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 2
  %15 = bitcast %"class.std::__1::vector.37"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #11
  %16 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 3
  store i8* %4, i8** %16, align 8
  %17 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 4
  %18 = getelementptr inbounds i8, i8* %4, i64 1
  store i8* %18, i8** %17, align 8
  %19 = load i8, i8* %4, align 1
  %20 = getelementptr inbounds i8, i8* %4, i64 2
  store i8* %20, i8** %17, align 8
  %21 = load i8, i8* %18, align 1
  %22 = zext i8 %21 to i64
  %23 = shl nuw nsw i64 %22, 8
  %24 = zext i8 %19 to i64
  %25 = or i64 %23, %24
  %26 = getelementptr inbounds i8, i8* %20, i64 %25
  store i8* %26, i8** %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL10Rehydrator6layoutEv(%"struct.SkSL::Layout"* noalias sret, %"class.SkSL::Rehydrator"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %1, i64 0, i32 4
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 1
  store i8* %5, i8** %3, align 8
  %6 = load i8, i8* %4, align 1
  switch i8 %6, label %118 [
    i8 5, label %7
    i8 15, label %25
    i8 36, label %32
  ]

7:                                                ; preds = %2
  %8 = bitcast %"struct.SkSL::Layout"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 72, i1 false)
  %9 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 0
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12, i32 0
  %12 = bitcast i32* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 -1, i64 40, i1 false) #11
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %11, align 8
  %13 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12, i32 1
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 13
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %4, i64 2
  store i8* %15, i8** %3, align 8
  %16 = load i8, i8* %5, align 1
  %17 = getelementptr inbounds i8, i8* %4, i64 3
  store i8* %17, i8** %3, align 8
  %18 = load i8, i8* %15, align 1
  %19 = zext i8 %18 to i16
  %20 = shl nuw i16 %19, 8
  %21 = zext i8 %16 to i16
  %22 = or i16 %20, %21
  %23 = sext i16 %22 to i32
  %24 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 6
  store i32 %23, i32* %24, align 8
  br label %125

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 0
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12, i32 0
  %29 = bitcast i32* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 40, i1 false) #11
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %28, align 8
  %30 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12, i32 1
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 13
  store i32 0, i32* %31, align 8
  br label %125

32:                                               ; preds = %2
  %33 = getelementptr inbounds i8, i8* %4, i64 2
  store i8* %33, i8** %3, align 8
  %34 = load i8, i8* %5, align 1
  %35 = getelementptr inbounds i8, i8* %4, i64 3
  store i8* %35, i8** %3, align 8
  %36 = load i8, i8* %33, align 1
  %37 = getelementptr inbounds i8, i8* %4, i64 4
  store i8* %37, i8** %3, align 8
  %38 = load i8, i8* %35, align 1
  %39 = getelementptr inbounds i8, i8* %4, i64 5
  store i8* %39, i8** %3, align 8
  %40 = load i8, i8* %37, align 1
  %41 = zext i8 %40 to i32
  %42 = shl nuw i32 %41, 24
  %43 = zext i8 %38 to i32
  %44 = shl nuw nsw i32 %43, 16
  %45 = zext i8 %36 to i32
  %46 = shl nuw nsw i32 %45, 8
  %47 = zext i8 %34 to i32
  %48 = or i32 %46, %47
  %49 = or i32 %48, %44
  %50 = or i32 %49, %42
  %51 = getelementptr inbounds i8, i8* %4, i64 6
  store i8* %51, i8** %3, align 8
  %52 = load i8, i8* %39, align 1
  %53 = sext i8 %52 to i32
  %54 = getelementptr inbounds i8, i8* %4, i64 7
  store i8* %54, i8** %3, align 8
  %55 = load i8, i8* %51, align 1
  %56 = sext i8 %55 to i32
  %57 = getelementptr inbounds i8, i8* %4, i64 8
  store i8* %57, i8** %3, align 8
  %58 = load i8, i8* %54, align 1
  %59 = sext i8 %58 to i32
  %60 = getelementptr inbounds i8, i8* %4, i64 9
  store i8* %60, i8** %3, align 8
  %61 = load i8, i8* %57, align 1
  %62 = sext i8 %61 to i32
  %63 = getelementptr inbounds i8, i8* %4, i64 10
  store i8* %63, i8** %3, align 8
  %64 = load i8, i8* %60, align 1
  %65 = sext i8 %64 to i32
  %66 = getelementptr inbounds i8, i8* %4, i64 11
  store i8* %66, i8** %3, align 8
  %67 = load i8, i8* %63, align 1
  %68 = getelementptr inbounds i8, i8* %4, i64 12
  store i8* %68, i8** %3, align 8
  %69 = load i8, i8* %66, align 1
  %70 = zext i8 %69 to i16
  %71 = shl nuw i16 %70, 8
  %72 = zext i8 %67 to i16
  %73 = or i16 %71, %72
  %74 = sext i16 %73 to i32
  %75 = getelementptr inbounds i8, i8* %4, i64 13
  store i8* %75, i8** %3, align 8
  %76 = load i8, i8* %68, align 1
  %77 = sext i8 %76 to i32
  %78 = getelementptr inbounds i8, i8* %4, i64 14
  store i8* %78, i8** %3, align 8
  %79 = load i8, i8* %75, align 1
  %80 = sext i8 %79 to i32
  %81 = getelementptr inbounds i8, i8* %4, i64 15
  store i8* %81, i8** %3, align 8
  %82 = load i8, i8* %78, align 1
  %83 = sext i8 %82 to i32
  %84 = getelementptr inbounds i8, i8* %4, i64 16
  store i8* %84, i8** %3, align 8
  %85 = load i8, i8* %81, align 1
  %86 = sext i8 %85 to i32
  %87 = getelementptr inbounds i8, i8* %4, i64 17
  store i8* %87, i8** %3, align 8
  %88 = load i8, i8* %84, align 1
  %89 = getelementptr inbounds i8, i8* %4, i64 18
  store i8* %89, i8** %3, align 8
  %90 = load i8, i8* %87, align 1
  %91 = zext i8 %90 to i64
  %92 = shl nuw nsw i64 %91, 8
  %93 = zext i8 %88 to i64
  %94 = or i64 %92, %93
  %95 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %1, i64 0, i32 3
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 %94
  %98 = load i8, i8* %97, align 1
  %99 = getelementptr inbounds i8, i8* %97, i64 1
  %100 = zext i8 %98 to i64
  %101 = getelementptr inbounds i8, i8* %4, i64 19
  store i8* %101, i8** %3, align 8
  %102 = load i8, i8* %89, align 1
  %103 = sext i8 %102 to i32
  %104 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 0
  store i32 %50, i32* %104, align 8
  %105 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 1
  store i32 %53, i32* %105, align 4
  %106 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 2
  store i32 %56, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 3
  store i32 %59, i32* %107, align 4
  %108 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 4
  store i32 %62, i32* %108, align 8
  %109 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 5
  store i32 %65, i32* %109, align 4
  %110 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 6
  store i32 %74, i32* %110, align 8
  %111 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 7
  store i32 %77, i32* %111, align 4
  %112 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 8
  store i32 %80, i32* %112, align 8
  %113 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 9
  store i32 %83, i32* %113, align 4
  %114 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 10
  store i32 %86, i32* %114, align 8
  %115 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12, i32 0
  store i8* %99, i8** %115, align 8
  %116 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12, i32 1
  store i64 %100, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 13
  store i32 %103, i32* %117, align 8
  br label %125

118:                                              ; preds = %2
  %119 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 0
  store i32 0, i32* %119, align 8
  %120 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 1
  %121 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12, i32 0
  %122 = bitcast i32* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %122, i8 -1, i64 40, i1 false) #11
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %121, align 8
  %123 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12, i32 1
  store i64 0, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 13
  store i32 0, i32* %124, align 8
  br label %125

125:                                              ; preds = %118, %32, %25, %7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL10Rehydrator9modifiersEv(%"struct.SkSL::Modifiers"* noalias nocapture sret, %"class.SkSL::Rehydrator"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkSL::Layout", align 8
  %4 = alloca %"struct.SkSL::Layout", align 8
  %5 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %1, i64 0, i32 4
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 1
  store i8* %7, i8** %5, align 8
  %8 = load i8, i8* %6, align 1
  switch i8 %8, label %48 [
    i8 16, label %9
    i8 37, label %17
    i8 38, label %25
  ]

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 0, i32 12, i32 0
  %13 = bitcast i32* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 -1, i64 40, i1 false) #11
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %12, align 8
  %14 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 0, i32 13
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 1
  store i32 0, i32* %16, align 8
  br label %56

17:                                               ; preds = %2
  %18 = bitcast %"struct.SkSL::Layout"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 72, i1 false)
  call void @_ZN4SkSL10Rehydrator6layoutEv(%"struct.SkSL::Layout"* nonnull sret %3, %"class.SkSL::Rehydrator"* %1)
  %19 = load i8*, i8** %5, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %20, i8** %5, align 8
  %21 = load i8, i8* %19, align 1
  %22 = zext i8 %21 to i32
  %23 = bitcast %"struct.SkSL::Modifiers"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* nonnull align 8 %18, i64 72, i1 false) #11
  %24 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 1
  store i32 %22, i32* %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #11
  br label %56

25:                                               ; preds = %2
  %26 = bitcast %"struct.SkSL::Layout"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 72, i1 false)
  call void @_ZN4SkSL10Rehydrator6layoutEv(%"struct.SkSL::Layout"* nonnull sret %4, %"class.SkSL::Rehydrator"* %1)
  %27 = load i8*, i8** %5, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  store i8* %28, i8** %5, align 8
  %29 = load i8, i8* %27, align 1
  %30 = getelementptr inbounds i8, i8* %27, i64 2
  store i8* %30, i8** %5, align 8
  %31 = load i8, i8* %28, align 1
  %32 = getelementptr inbounds i8, i8* %27, i64 3
  store i8* %32, i8** %5, align 8
  %33 = load i8, i8* %30, align 1
  %34 = getelementptr inbounds i8, i8* %27, i64 4
  store i8* %34, i8** %5, align 8
  %35 = load i8, i8* %32, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw i32 %36, 24
  %38 = zext i8 %33 to i32
  %39 = shl nuw nsw i32 %38, 16
  %40 = zext i8 %31 to i32
  %41 = shl nuw nsw i32 %40, 8
  %42 = zext i8 %29 to i32
  %43 = or i32 %41, %42
  %44 = or i32 %43, %39
  %45 = or i32 %44, %37
  %46 = bitcast %"struct.SkSL::Modifiers"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* nonnull align 8 %26, i64 72, i1 false) #11
  %47 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 1
  store i32 %45, i32* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %26) #11
  br label %56

48:                                               ; preds = %2
  %49 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 0, i32 12, i32 0
  %52 = bitcast i32* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 -1, i64 40, i1 false) #11
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 0, i32 13
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 1
  store i32 0, i32* %55, align 8
  br label %56

56:                                               ; preds = %48, %25, %17, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::Layout", align 8
  %3 = alloca %"struct.SkSL::Layout", align 8
  %4 = alloca %"class.std::__1::unique_ptr.46", align 8
  %5 = alloca %"class.std::__1::unique_ptr.46", align 8
  %6 = alloca %"struct.SkSL::Layout", align 8
  %7 = alloca %"struct.SkSL::Layout", align 8
  %8 = alloca %"class.std::__1::unique_ptr.46", align 8
  %9 = alloca %"class.std::__1::unique_ptr.46", align 8
  %10 = alloca %"class.std::__1::unique_ptr.46", align 8
  %11 = alloca %"class.std::__1::vector.76", align 8
  %12 = alloca %"struct.SkSL::Layout", align 8
  %13 = alloca %"struct.SkSL::Layout", align 8
  %14 = alloca %"class.std::__1::unique_ptr.46", align 8
  %15 = alloca %"class.std::__1::unique_ptr.46", align 8
  %16 = alloca [15 x i8], align 8
  %17 = alloca %"class.std::__1::unique_ptr.46", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"struct.SkSL::Modifiers", align 8
  %25 = alloca %"class.std::__1::vector.76", align 8
  %26 = alloca %"class.std::__1::vector.8", align 16
  %27 = alloca [40 x i8], align 4
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.std::__1::vector.145", align 8
  %30 = alloca %"struct.SkSL::Modifiers", align 8
  %31 = getelementptr inbounds [40 x i8], [40 x i8]* %27, i64 0, i64 0
  %32 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 4
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 1
  store i8* %34, i8** %32, align 8
  %35 = load i8, i8* %33, align 1
  switch i8 %35, label %1391 [
    i8 0, label %36
    i8 22, label %218
    i8 30, label %338
    i8 24, label %579
    i8 44, label %650
    i8 47, label %986
    i8 48, label %999
    i8 50, label %1068
    i8 52, label %1094
    i8 53, label %1256
  ]

36:                                               ; preds = %1
  %37 = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %37, i8** %32, align 8
  %38 = load i8, i8* %34, align 1
  %39 = getelementptr inbounds i8, i8* %33, i64 3
  store i8* %39, i8** %32, align 8
  %40 = load i8, i8* %37, align 1
  %41 = zext i8 %40 to i32
  %42 = shl nuw nsw i32 %41, 8
  %43 = zext i8 %38 to i32
  %44 = or i32 %42, %43
  %45 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %46 = load i8*, i8** %32, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 1
  store i8* %47, i8** %32, align 8
  %48 = load i8, i8* %46, align 1
  %49 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #11
  %50 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %53 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %45, i64 0, i32 1, i32 0
  %54 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 24, i1 false)
  %55 = load i8*, i8** %53, align 8
  %56 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %45, i64 0, i32 1, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = icmp ugt i64 %57, -17
  br i1 %58, label %59, label %61

59:                                               ; preds = %36
  %60 = bitcast %"class.SkSL::String"* %18 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %60) #12
  unreachable

61:                                               ; preds = %36
  %62 = icmp ult i64 %57, 23
  br i1 %62, label %68, label %63

63:                                               ; preds = %61
  %64 = add nuw i64 %57, 16
  %65 = and i64 %64, -16
  %66 = tail call i8* @_Znwm(i64 %65) #13
  store i8* %66, i8** %50, align 8
  %67 = or i64 %65, -9223372036854775808
  store i64 %67, i64* %52, align 8
  store i64 %57, i64* %51, align 8
  br label %73

68:                                               ; preds = %61
  %69 = trunc i64 %57 to i8
  %70 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  store i8 %69, i8* %71, align 1
  %72 = icmp eq i64 %57, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %68, %63
  %74 = phi i8* [ %66, %63 ], [ %49, %68 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %74, i8* align 1 %55, i64 %57, i1 false) #11
  br label %75

75:                                               ; preds = %68, %73
  %76 = phi i8* [ %49, %68 ], [ %74, %73 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 %57
  store i8 0, i8* %77, align 1
  %78 = sext i8 %48 to i32
  %79 = icmp eq i8 %48, -1
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  %81 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* nonnull %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #11
  br label %111

82:                                               ; preds = %75
  %83 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #11
  %84 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #11
  %85 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #11
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %21, i32 %78) #11
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %21) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* nonnull %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  %86 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %18, %"class.SkSL::String"* nonnull dereferenceable(24) %19) #11
  %87 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #13
  br label %94

94:                                               ; preds = %82, %91
  %95 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #13
  br label %102

102:                                              ; preds = %94, %99
  %103 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #13
  br label %110

110:                                              ; preds = %102, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #11
  br label %111

111:                                              ; preds = %110, %80
  %112 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1, i32 0
  %113 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %112, align 8
  %114 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %111
  %119 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %119, i8* nonnull align 8 %49, i64 24, i1 false) #11
  br label %125

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0
  %122 = load i8*, i8** %50, align 8
  %123 = load i64, i64* %51, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %121, i8* %122, i64 %123) #11
  %124 = bitcast %"class.SkSL::String"* %22 to i8*
  br label %125

125:                                              ; preds = %118, %120
  %126 = phi i8* [ %119, %118 ], [ %124, %120 ]
  %127 = getelementptr inbounds [15 x i8], [15 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %127)
  %128 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #11
  %129 = bitcast %"class.SkSL::String"* %22 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = bitcast i64* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %127, i8* align 8 %132, i64 15, i1 false) #11
  %133 = getelementptr inbounds i8, i8* %126, i64 23
  %134 = load i8, i8* %133, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 0, i64 24, i1 false) #11
  %135 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %45, i64 1
  %136 = bitcast %"class.SkSL::Symbol"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %128 to i32 (...)***
  %139 = getelementptr inbounds i8, i8* %128, i64 8
  %140 = bitcast i8* %139 to i32*
  store i32 -1, i32* %140, align 8
  %141 = getelementptr inbounds i8, i8* %128, i64 12
  %142 = bitcast i8* %141 to i32*
  store i32 13, i32* %142, align 4
  %143 = getelementptr inbounds i8, i8* %128, i64 16
  %144 = bitcast i8* %143 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %144, align 8
  %145 = getelementptr inbounds i8, i8* %128, i64 24
  %146 = bitcast i8* %145 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8
  %147 = getelementptr inbounds i8, i8* %128, i64 40
  %148 = bitcast i8* %147 to i64*
  store i64 %137, i64* %148, align 8
  %149 = getelementptr inbounds i8, i8* %128, i64 48
  %150 = bitcast i8* %149 to i64*
  store i64 %130, i64* %150, align 8
  %151 = getelementptr inbounds i8, i8* %128, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* nonnull align 8 %127, i64 15, i1 false) #11
  %152 = getelementptr inbounds i8, i8* %128, i64 71
  store i8 %134, i8* %152, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 0, i64 15, i1 false)
  %153 = getelementptr inbounds i8, i8* %128, i64 72
  %154 = bitcast i8* %153 to i32*
  store i32 0, i32* %154, align 8
  %155 = getelementptr inbounds i8, i8* %128, i64 76
  %156 = bitcast i8* %155 to i32*
  store i32 4, i32* %156, align 4
  %157 = getelementptr inbounds i8, i8* %128, i64 80
  %158 = bitcast i8* %157 to i32*
  store i32 -1, i32* %158, align 8
  %159 = getelementptr inbounds i8, i8* %128, i64 88
  %160 = bitcast i8* %159 to %"class.SkSL::Symbol"**
  store %"class.SkSL::Symbol"* %45, %"class.SkSL::Symbol"** %160, align 8
  %161 = getelementptr inbounds i8, i8* %128, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 24, i1 false) #11
  %162 = getelementptr inbounds i8, i8* %128, i64 120
  %163 = bitcast i8* %162 to i32*
  store i32 %78, i32* %163, align 8
  %164 = getelementptr inbounds i8, i8* %128, i64 124
  %165 = bitcast i8* %164 to i32*
  store i32 1, i32* %165, align 4
  %166 = getelementptr inbounds i8, i8* %128, i64 128
  %167 = getelementptr inbounds i8, i8* %128, i64 168
  call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 33, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 16, i1 false) #11
  %168 = icmp slt i8 %134, 0
  br i1 %168, label %169, label %173

169:                                              ; preds = %125
  %170 = inttoptr i64 %130 to i8*
  %171 = bitcast i8* %151 to i64*
  %172 = load i64, i64* %171, align 8
  br label %175

173:                                              ; preds = %125
  %174 = zext i8 %134 to i64
  br label %175

175:                                              ; preds = %169, %173
  %176 = phi i8* [ %170, %169 ], [ %149, %173 ]
  %177 = phi i64 [ %172, %169 ], [ %174, %173 ]
  store i8* %176, i8** %144, align 8
  store i64 %177, i64* %146, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %127)
  %178 = ptrtoint i8* %128 to i64
  %179 = bitcast %"class.std::__1::unique_ptr.46"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #11
  %180 = bitcast %"class.std::__1::unique_ptr.46"* %15 to i64*
  store i64 %178, i64* %180, align 8
  %181 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %113, i64 0, i32 1, i32 0, i32 1
  %182 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %181, align 8
  %183 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %113, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %184 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %183, align 8
  %185 = icmp ult %"class.std::__1::unique_ptr.46"* %182, %184
  br i1 %185, label %186, label %192

186:                                              ; preds = %175
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %187, align 8
  %188 = bitcast %"class.std::__1::unique_ptr.46"* %182 to i64*
  store i64 %178, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %182, i64 1
  %190 = ptrtoint %"class.std::__1::unique_ptr.46"* %189 to i64
  %191 = bitcast %"class.std::__1::unique_ptr.46"** %181 to i64*
  store i64 %190, i64* %191, align 8
  br label %194

192:                                              ; preds = %175
  %193 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %113, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.44"* %193, %"class.std::__1::unique_ptr.46"* nonnull dereferenceable(8) %15) #11
  br label %194

194:                                              ; preds = %192, %186
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %15, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %195, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %195, align 8
  %197 = icmp eq %"class.SkSL::Symbol"* %196, null
  br i1 %197, label %203, label %198

198:                                              ; preds = %194
  %199 = bitcast %"class.SkSL::Symbol"* %196 to void (%"class.SkSL::Symbol"*)***
  %200 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %199, align 8
  %201 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %200, i64 1
  %202 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %201, align 8
  call void %202(%"class.SkSL::Symbol"* nonnull %196) #11
  br label %203

203:                                              ; preds = %194, %198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #11
  %204 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %204, i64 0, i32 1, i32 0
  %206 = load i8, i8* %205, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load i8*, i8** %209, align 8
  call void @_ZdlPv(i8* %210) #13
  br label %211

211:                                              ; preds = %203, %208
  %212 = bitcast i8* %128 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL10Rehydrator9addSymbolEiPKNS_6SymbolE(%"class.SkSL::Rehydrator"* %0, i32 %44, %"class.SkSL::Symbol"* %212)
  %213 = load i8, i8* %115, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %217

215:                                              ; preds = %211
  %216 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %216) #13
  br label %217

217:                                              ; preds = %211, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #11
  br label %1394

218:                                              ; preds = %1
  %219 = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %219, i8** %32, align 8
  %220 = load i8, i8* %34, align 1
  %221 = getelementptr inbounds i8, i8* %33, i64 3
  store i8* %221, i8** %32, align 8
  %222 = load i8, i8* %219, align 1
  %223 = zext i8 %222 to i32
  %224 = shl nuw nsw i32 %223, 8
  %225 = zext i8 %220 to i32
  %226 = or i32 %224, %225
  %227 = getelementptr inbounds i8, i8* %33, i64 4
  store i8* %227, i8** %32, align 8
  %228 = load i8, i8* %221, align 1
  %229 = getelementptr inbounds i8, i8* %33, i64 5
  store i8* %229, i8** %32, align 8
  %230 = load i8, i8* %227, align 1
  %231 = zext i8 %230 to i64
  %232 = shl nuw nsw i64 %231, 8
  %233 = zext i8 %228 to i64
  %234 = or i64 %232, %233
  %235 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 3
  %236 = load i8*, i8** %235, align 8
  %237 = getelementptr inbounds i8, i8* %236, i64 %234
  %238 = load i8, i8* %237, align 1
  %239 = getelementptr inbounds i8, i8* %237, i64 1
  %240 = zext i8 %238 to i64
  %241 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1, i32 0
  %242 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %241, align 8
  %243 = icmp ult i8 %238, 23
  br i1 %243, label %253, label %244

244:                                              ; preds = %218
  %245 = add nuw nsw i64 %240, 16
  %246 = and i64 %245, 496
  %247 = tail call i8* @_Znwm(i64 %246) #13
  %248 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %247, i8** %248, align 8
  %249 = or i64 %246, -9223372036854775808
  %250 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %240, i64* %251, align 8
  %252 = bitcast %"class.SkSL::String"* %23 to i8*
  br label %258

253:                                              ; preds = %218
  %254 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %254, i64 0, i32 1, i32 0
  store i8 %238, i8* %255, align 1
  %256 = bitcast %"class.SkSL::String"* %23 to i8*
  %257 = icmp eq i8 %238, 0
  br i1 %257, label %261, label %258

258:                                              ; preds = %253, %244
  %259 = phi i8* [ %256, %253 ], [ %252, %244 ]
  %260 = phi i8* [ %256, %253 ], [ %247, %244 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %260, i8* align 1 %239, i64 %240, i1 false) #11
  br label %261

261:                                              ; preds = %253, %258
  %262 = phi i8* [ %256, %253 ], [ %259, %258 ]
  %263 = phi i8* [ %256, %253 ], [ %260, %258 ]
  %264 = getelementptr inbounds i8, i8* %263, i64 %240
  store i8 0, i8* %264, align 1
  %265 = getelementptr inbounds [15 x i8], [15 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %265)
  %266 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #11
  %267 = bitcast %"class.SkSL::String"* %23 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %270 = bitcast i64* %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %265, i8* align 8 %270, i64 15, i1 false) #11
  %271 = getelementptr inbounds i8, i8* %262, i64 23
  %272 = load i8, i8* %271, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %262, i8 0, i64 24, i1 false) #11
  %273 = bitcast i8* %266 to i32 (...)***
  %274 = getelementptr inbounds i8, i8* %266, i64 8
  %275 = bitcast i8* %274 to i32*
  store i32 -1, i32* %275, align 8
  %276 = getelementptr inbounds i8, i8* %266, i64 12
  %277 = bitcast i8* %276 to i32*
  store i32 13, i32* %277, align 4
  %278 = getelementptr inbounds i8, i8* %266, i64 16
  %279 = bitcast i8* %278 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %279, align 8
  %280 = getelementptr inbounds i8, i8* %266, i64 24
  %281 = bitcast i8* %280 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %280, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %273, align 8
  %282 = getelementptr inbounds i8, i8* %266, i64 40
  %283 = bitcast i8* %282 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i8** %283, align 8
  %284 = getelementptr inbounds i8, i8* %266, i64 48
  %285 = bitcast i8* %284 to i64*
  store i64 %268, i64* %285, align 8
  %286 = getelementptr inbounds i8, i8* %266, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %286, i8* nonnull align 8 %265, i64 15, i1 false) #11
  %287 = getelementptr inbounds i8, i8* %266, i64 71
  store i8 %272, i8* %287, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %265, i8 0, i64 15, i1 false)
  %288 = getelementptr inbounds i8, i8* %266, i64 72
  %289 = bitcast i8* %288 to i32*
  store i32 1, i32* %289, align 8
  %290 = getelementptr inbounds i8, i8* %266, i64 76
  %291 = bitcast i8* %290 to i32*
  store i32 4, i32* %291, align 4
  %292 = getelementptr inbounds i8, i8* %266, i64 80
  %293 = bitcast i8* %292 to i32*
  store i32 -1, i32* %293, align 8
  %294 = getelementptr inbounds i8, i8* %266, i64 88
  %295 = getelementptr inbounds i8, i8* %266, i64 120
  %296 = bitcast i8* %295 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %294, i8 0, i64 32, i1 false) #11
  store i32 -1, i32* %296, align 8
  %297 = getelementptr inbounds i8, i8* %266, i64 124
  %298 = bitcast i8* %297 to i32*
  store i32 -1, i32* %298, align 4
  %299 = getelementptr inbounds i8, i8* %266, i64 128
  %300 = getelementptr inbounds i8, i8* %266, i64 168
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %299, i8 0, i64 33, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %300, i8 0, i64 16, i1 false) #11
  %301 = icmp slt i8 %272, 0
  br i1 %301, label %302, label %306

302:                                              ; preds = %261
  %303 = inttoptr i64 %268 to i8*
  %304 = bitcast i8* %286 to i64*
  %305 = load i64, i64* %304, align 8
  br label %308

306:                                              ; preds = %261
  %307 = zext i8 %272 to i64
  br label %308

308:                                              ; preds = %302, %306
  %309 = phi i8* [ %303, %302 ], [ %284, %306 ]
  %310 = phi i64 [ %305, %302 ], [ %307, %306 ]
  store i8* %309, i8** %279, align 8
  store i64 %310, i64* %281, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %265)
  %311 = ptrtoint i8* %266 to i64
  %312 = bitcast %"class.std::__1::unique_ptr.46"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %312) #11
  %313 = bitcast %"class.std::__1::unique_ptr.46"* %14 to i64*
  store i64 %311, i64* %313, align 8
  %314 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %242, i64 0, i32 1, i32 0, i32 1
  %315 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %314, align 8
  %316 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %242, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %317 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %316, align 8
  %318 = icmp ult %"class.std::__1::unique_ptr.46"* %315, %317
  br i1 %318, label %319, label %325

319:                                              ; preds = %308
  %320 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %320, align 8
  %321 = bitcast %"class.std::__1::unique_ptr.46"* %315 to i64*
  store i64 %311, i64* %321, align 8
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %315, i64 1
  %323 = ptrtoint %"class.std::__1::unique_ptr.46"* %322 to i64
  %324 = bitcast %"class.std::__1::unique_ptr.46"** %314 to i64*
  store i64 %323, i64* %324, align 8
  br label %327

325:                                              ; preds = %308
  %326 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %242, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.44"* %326, %"class.std::__1::unique_ptr.46"* nonnull dereferenceable(8) %14) #11
  br label %327

327:                                              ; preds = %325, %319
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %14, i64 0, i32 0, i32 0, i32 0
  %329 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %328, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %328, align 8
  %330 = icmp eq %"class.SkSL::Symbol"* %329, null
  br i1 %330, label %336, label %331

331:                                              ; preds = %327
  %332 = bitcast %"class.SkSL::Symbol"* %329 to void (%"class.SkSL::Symbol"*)***
  %333 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %332, align 8
  %334 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %333, i64 1
  %335 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %334, align 8
  call void %335(%"class.SkSL::Symbol"* nonnull %329) #11
  br label %336

336:                                              ; preds = %331, %327
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %312) #11
  %337 = bitcast i8* %266 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL10Rehydrator9addSymbolEiPKNS_6SymbolE(%"class.SkSL::Rehydrator"* %0, i32 %226, %"class.SkSL::Symbol"* %337)
  br label %1394

338:                                              ; preds = %1
  %339 = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %339, i8** %32, align 8
  %340 = load i8, i8* %34, align 1
  %341 = getelementptr inbounds i8, i8* %33, i64 3
  store i8* %341, i8** %32, align 8
  %342 = load i8, i8* %339, align 1
  %343 = zext i8 %342 to i32
  %344 = shl nuw nsw i32 %343, 8
  %345 = zext i8 %340 to i32
  %346 = or i32 %344, %345
  %347 = bitcast %"struct.SkSL::Modifiers"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %347) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 80, i1 false)
  %348 = getelementptr inbounds i8, i8* %33, i64 4
  store i8* %348, i8** %32, align 8, !noalias !2
  %349 = load i8, i8* %341, align 1, !noalias !2
  switch i8 %349, label %387 [
    i8 16, label %350
    i8 37, label %358
    i8 38, label %365
  ]

350:                                              ; preds = %338
  %351 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 0, i32 0
  store i32 0, i32* %351, align 8, !alias.scope !2
  %352 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 0, i32 1
  %353 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 0, i32 12, i32 0
  %354 = bitcast i32* %352 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %354, i8 -1, i64 40, i1 false) #11, !alias.scope !2
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %353, align 8, !alias.scope !2
  %355 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %355, align 8, !alias.scope !2
  %356 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 0, i32 13
  store i32 0, i32* %356, align 8, !alias.scope !2
  %357 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 1
  store i32 0, i32* %357, align 8, !alias.scope !2
  br label %395

358:                                              ; preds = %338
  %359 = bitcast %"struct.SkSL::Layout"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %359) #11, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %359, i8 -86, i64 72, i1 false) #11, !noalias !2
  call void @_ZN4SkSL10Rehydrator6layoutEv(%"struct.SkSL::Layout"* nonnull sret %12, %"class.SkSL::Rehydrator"* %0) #11, !noalias !2
  %360 = load i8*, i8** %32, align 8, !noalias !2
  %361 = getelementptr inbounds i8, i8* %360, i64 1
  store i8* %361, i8** %32, align 8, !noalias !2
  %362 = load i8, i8* %360, align 1, !noalias !2
  %363 = zext i8 %362 to i32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %347, i8* nonnull align 8 %359, i64 72, i1 false) #11
  %364 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 1
  store i32 %363, i32* %364, align 8, !alias.scope !2
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %359) #11, !noalias !2
  br label %395

365:                                              ; preds = %338
  %366 = bitcast %"struct.SkSL::Layout"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %366) #11, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %366, i8 -86, i64 72, i1 false) #11, !noalias !2
  call void @_ZN4SkSL10Rehydrator6layoutEv(%"struct.SkSL::Layout"* nonnull sret %13, %"class.SkSL::Rehydrator"* %0) #11, !noalias !2
  %367 = load i8*, i8** %32, align 8, !noalias !2
  %368 = getelementptr inbounds i8, i8* %367, i64 1
  store i8* %368, i8** %32, align 8, !noalias !2
  %369 = load i8, i8* %367, align 1, !noalias !2
  %370 = getelementptr inbounds i8, i8* %367, i64 2
  store i8* %370, i8** %32, align 8, !noalias !2
  %371 = load i8, i8* %368, align 1, !noalias !2
  %372 = getelementptr inbounds i8, i8* %367, i64 3
  store i8* %372, i8** %32, align 8, !noalias !2
  %373 = load i8, i8* %370, align 1, !noalias !2
  %374 = getelementptr inbounds i8, i8* %367, i64 4
  store i8* %374, i8** %32, align 8, !noalias !2
  %375 = load i8, i8* %372, align 1, !noalias !2
  %376 = zext i8 %375 to i32
  %377 = shl nuw i32 %376, 24
  %378 = zext i8 %373 to i32
  %379 = shl nuw nsw i32 %378, 16
  %380 = zext i8 %371 to i32
  %381 = shl nuw nsw i32 %380, 8
  %382 = zext i8 %369 to i32
  %383 = or i32 %381, %382
  %384 = or i32 %383, %379
  %385 = or i32 %384, %377
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %347, i8* nonnull align 8 %366, i64 72, i1 false) #11
  %386 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 1
  store i32 %385, i32* %386, align 8, !alias.scope !2
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %366) #11, !noalias !2
  br label %395

387:                                              ; preds = %338
  %388 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 0, i32 0
  store i32 0, i32* %388, align 8, !alias.scope !2
  %389 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 0, i32 1
  %390 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 0, i32 12, i32 0
  %391 = bitcast i32* %389 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %391, i8 -1, i64 40, i1 false) #11, !alias.scope !2
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %390, align 8, !alias.scope !2
  %392 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %392, align 8, !alias.scope !2
  %393 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 0, i32 13
  store i32 0, i32* %393, align 8, !alias.scope !2
  %394 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %24, i64 0, i32 1
  store i32 0, i32* %394, align 8, !alias.scope !2
  br label %395

395:                                              ; preds = %350, %358, %365, %387
  %396 = phi i8* [ %348, %350 ], [ %361, %358 ], [ %374, %365 ], [ %348, %387 ]
  %397 = getelementptr inbounds i8, i8* %396, i64 1
  store i8* %397, i8** %32, align 8
  %398 = load i8, i8* %396, align 1
  %399 = getelementptr inbounds i8, i8* %396, i64 2
  store i8* %399, i8** %32, align 8
  %400 = load i8, i8* %397, align 1
  %401 = zext i8 %400 to i64
  %402 = shl nuw nsw i64 %401, 8
  %403 = zext i8 %398 to i64
  %404 = or i64 %402, %403
  %405 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 3
  %406 = load i8*, i8** %405, align 8
  %407 = getelementptr inbounds i8, i8* %406, i64 %404
  %408 = load i8, i8* %407, align 1
  %409 = getelementptr inbounds i8, i8* %407, i64 1
  %410 = zext i8 %408 to i64
  %411 = getelementptr inbounds i8, i8* %396, i64 3
  store i8* %411, i8** %32, align 8
  %412 = load i8, i8* %399, align 1
  %413 = zext i8 %412 to i32
  %414 = bitcast %"class.std::__1::vector.76"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %414) #11
  %415 = getelementptr inbounds %"class.std::__1::vector.76", %"class.std::__1::vector.76"* %25, i64 0, i32 0, i32 0
  %416 = getelementptr inbounds %"class.std::__1::vector.76", %"class.std::__1::vector.76"* %25, i64 0, i32 0, i32 1
  %417 = getelementptr inbounds %"class.std::__1::vector.76", %"class.std::__1::vector.76"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %414, i8 0, i64 24, i1 false) #11
  %418 = zext i8 %412 to i64
  %419 = bitcast %"class.SkSL::Variable"*** %417 to i64*
  %420 = bitcast %"class.std::__1::vector.76"* %25 to i64*
  %421 = icmp eq i8 %412, 0
  %422 = bitcast %"class.SkSL::Variable"*** %416 to i64*
  br i1 %421, label %433, label %423

423:                                              ; preds = %395
  %424 = shl nuw nsw i64 %418, 3
  %425 = call i8* @_Znwm(i64 %424) #13
  %426 = bitcast i8* %425 to %"class.SkSL::Variable"**
  %427 = ptrtoint i8* %425 to i64
  %428 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %426, i64 %418
  %429 = ptrtoint %"class.SkSL::Variable"** %428 to i64
  %430 = ptrtoint i8* %425 to i64
  store i64 %430, i64* %420, align 8
  store i64 %427, i64* %422, align 8
  store i64 %429, i64* %419, align 8
  %431 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 2, i32 0, i32 0
  %432 = bitcast %"class.SkSL::Variable"*** %416 to i64*
  br label %499

433:                                              ; preds = %571, %395
  %434 = phi i64* [ %422, %395 ], [ %432, %571 ]
  %435 = call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %436 = bitcast %"class.SkSL::Symbol"* %435 to %"class.SkSL::Type"*
  %437 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1, i32 0
  %438 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %437, align 8
  %439 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %440 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %439, align 8
  %441 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %440, i64 0, i32 3
  %442 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %441, align 8
  %443 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %442, i64 0, i32 0, i32 0
  %444 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %443, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %24, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %24) #11
  %445 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %444, 0
  %446 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %445, i64 2
  %447 = bitcast %"struct.std::__1::__hash_node_base"* %446 to %"struct.SkSL::Modifiers"*
  %448 = bitcast %"class.std::__1::vector.76"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %448)
  %449 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 96) #11
  %450 = bitcast i8* %449 to %"class.SkSL::FunctionDeclaration"*
  %451 = load i64, i64* %420, align 8
  %452 = bitcast %"class.std::__1::vector.76"* %11 to i64*
  store i64 %451, i64* %452, align 8
  %453 = load i64, i64* %434, align 8
  %454 = getelementptr inbounds %"class.std::__1::vector.76", %"class.std::__1::vector.76"* %11, i64 0, i32 0, i32 1
  %455 = bitcast %"class.SkSL::Variable"*** %454 to i64*
  store i64 %453, i64* %455, align 8
  %456 = load i64, i64* %419, align 8
  %457 = getelementptr inbounds %"class.std::__1::vector.76", %"class.std::__1::vector.76"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %458 = bitcast %"class.SkSL::Variable"*** %457 to i64*
  store i64 %456, i64* %458, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %414, i8 0, i64 24, i1 false) #11
  call void @_ZN4SkSL19FunctionDeclarationC1EiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorIPKNS_8VariableENS5_9allocatorIS9_EEEEPKNS_4TypeEb(%"class.SkSL::FunctionDeclaration"* %450, i32 -1, %"struct.SkSL::Modifiers"* %447, i8* %409, i64 %410, %"class.std::__1::vector.76"* nonnull %11, %"class.SkSL::Type"* %436, i1 zeroext true) #11
  %459 = getelementptr inbounds %"class.std::__1::vector.76", %"class.std::__1::vector.76"* %11, i64 0, i32 0, i32 0
  %460 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %459, align 8
  %461 = icmp eq %"class.SkSL::Variable"** %460, null
  br i1 %461, label %465, label %462

462:                                              ; preds = %433
  %463 = ptrtoint %"class.SkSL::Variable"** %460 to i64
  store i64 %463, i64* %455, align 8
  %464 = bitcast %"class.SkSL::Variable"** %460 to i8*
  call void @_ZdlPv(i8* %464) #13
  br label %465

465:                                              ; preds = %433, %462
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %448)
  %466 = ptrtoint i8* %449 to i64
  %467 = bitcast %"class.std::__1::unique_ptr.46"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %467) #11
  %468 = bitcast %"class.std::__1::unique_ptr.46"* %10 to i64*
  store i64 %466, i64* %468, align 8
  %469 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %438, i64 0, i32 1, i32 0, i32 1
  %470 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %469, align 8
  %471 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %438, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %472 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %471, align 8
  %473 = icmp ult %"class.std::__1::unique_ptr.46"* %470, %472
  br i1 %473, label %474, label %480

474:                                              ; preds = %465
  %475 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %475, align 8
  %476 = bitcast %"class.std::__1::unique_ptr.46"* %470 to i64*
  store i64 %466, i64* %476, align 8
  %477 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %470, i64 1
  %478 = ptrtoint %"class.std::__1::unique_ptr.46"* %477 to i64
  %479 = bitcast %"class.std::__1::unique_ptr.46"** %469 to i64*
  store i64 %478, i64* %479, align 8
  br label %482

480:                                              ; preds = %465
  %481 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %438, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.44"* %481, %"class.std::__1::unique_ptr.46"* nonnull dereferenceable(8) %10) #11
  br label %482

482:                                              ; preds = %480, %474
  %483 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %10, i64 0, i32 0, i32 0, i32 0
  %484 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %483, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %483, align 8
  %485 = icmp eq %"class.SkSL::Symbol"* %484, null
  br i1 %485, label %491, label %486

486:                                              ; preds = %482
  %487 = bitcast %"class.SkSL::Symbol"* %484 to void (%"class.SkSL::Symbol"*)***
  %488 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %487, align 8
  %489 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %488, i64 1
  %490 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %489, align 8
  call void %490(%"class.SkSL::Symbol"* nonnull %484) #11
  br label %491

491:                                              ; preds = %482, %486
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %467) #11
  %492 = bitcast i8* %449 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL10Rehydrator9addSymbolEiPKNS_6SymbolE(%"class.SkSL::Rehydrator"* %0, i32 %346, %"class.SkSL::Symbol"* %492)
  %493 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %415, align 8
  %494 = icmp eq %"class.SkSL::Variable"** %493, null
  br i1 %494, label %498, label %495

495:                                              ; preds = %491
  %496 = ptrtoint %"class.SkSL::Variable"** %493 to i64
  store i64 %496, i64* %434, align 8
  %497 = bitcast %"class.SkSL::Variable"** %493 to i8*
  call void @_ZdlPv(i8* %497) #13
  br label %498

498:                                              ; preds = %491, %495
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %414) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %347) #11
  br label %1394

499:                                              ; preds = %574, %423
  %500 = phi i64 [ %427, %423 ], [ %578, %574 ]
  %501 = phi %"class.SkSL::Variable"** [ %428, %423 ], [ %577, %574 ]
  %502 = phi %"class.SkSL::Variable"** [ %426, %423 ], [ %576, %574 ]
  %503 = phi i8* [ %411, %423 ], [ %575, %574 ]
  %504 = phi i32 [ 0, %423 ], [ %572, %574 ]
  %505 = getelementptr inbounds i8, i8* %503, i64 1
  store i8* %505, i8** %32, align 8
  %506 = load i8, i8* %503, align 1
  %507 = getelementptr inbounds i8, i8* %503, i64 2
  store i8* %507, i8** %32, align 8
  %508 = load i8, i8* %505, align 1
  %509 = zext i8 %508 to i64
  %510 = shl nuw nsw i64 %509, 8
  %511 = zext i8 %506 to i64
  %512 = or i64 %510, %511
  %513 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %431, align 8
  %514 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %513, i64 %512
  %515 = bitcast %"class.SkSL::Symbol"** %514 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = icmp ult %"class.SkSL::Variable"** %502, %501
  %518 = ptrtoint %"class.SkSL::Variable"** %501 to i64
  br i1 %517, label %519, label %523

519:                                              ; preds = %499
  %520 = bitcast %"class.SkSL::Variable"** %502 to i64*
  store i64 %516, i64* %520, align 8
  %521 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %502, i64 1
  %522 = ptrtoint %"class.SkSL::Variable"** %521 to i64
  store i64 %522, i64* %432, align 8
  br label %571

523:                                              ; preds = %499
  %524 = ptrtoint %"class.SkSL::Variable"** %502 to i64
  %525 = load i64, i64* %420, align 8
  %526 = sub i64 %524, %525
  %527 = ashr exact i64 %526, 3
  %528 = add nsw i64 %527, 1
  %529 = icmp ugt i64 %528, 2305843009213693951
  br i1 %529, label %530, label %532

530:                                              ; preds = %523
  %531 = bitcast %"class.std::__1::vector.76"* %25 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %531) #12
  unreachable

532:                                              ; preds = %523
  %533 = sub i64 %518, %525
  %534 = ashr exact i64 %533, 3
  %535 = icmp ult i64 %534, 1152921504606846975
  br i1 %535, label %536, label %544

536:                                              ; preds = %532
  %537 = ashr exact i64 %533, 2
  %538 = icmp ult i64 %537, %528
  %539 = select i1 %538, i64 %528, i64 %537
  %540 = icmp eq i64 %539, 0
  br i1 %540, label %549, label %541

541:                                              ; preds = %536
  %542 = icmp ugt i64 %539, 2305843009213693951
  br i1 %542, label %543, label %544

543:                                              ; preds = %541
  call void @abort() #12
  unreachable

544:                                              ; preds = %541, %532
  %545 = phi i64 [ %539, %541 ], [ 2305843009213693951, %532 ]
  %546 = shl i64 %545, 3
  %547 = call i8* @_Znwm(i64 %546) #13
  %548 = bitcast i8* %547 to %"class.SkSL::Variable"**
  br label %549

549:                                              ; preds = %544, %536
  %550 = phi i64 [ %545, %544 ], [ 0, %536 ]
  %551 = phi %"class.SkSL::Variable"** [ %548, %544 ], [ null, %536 ]
  %552 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %551, i64 %527
  %553 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %551, i64 %550
  %554 = ptrtoint %"class.SkSL::Variable"** %553 to i64
  %555 = bitcast %"class.SkSL::Variable"** %552 to i64*
  store i64 %516, i64* %555, align 8
  %556 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %552, i64 1
  %557 = ptrtoint %"class.SkSL::Variable"** %556 to i64
  %558 = sub i64 %500, %525
  %559 = ashr exact i64 %558, 3
  %560 = sub nsw i64 0, %559
  %561 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %552, i64 %560
  %562 = ptrtoint %"class.SkSL::Variable"** %561 to i64
  %563 = icmp sgt i64 %558, 0
  br i1 %563, label %564, label %567

564:                                              ; preds = %549
  %565 = bitcast %"class.SkSL::Variable"** %561 to i8*
  %566 = inttoptr i64 %525 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %565, i8* align 8 %566, i64 %558, i1 false) #11
  br label %567

567:                                              ; preds = %564, %549
  store i64 %562, i64* %420, align 8
  store i64 %557, i64* %432, align 8
  store i64 %554, i64* %419, align 8
  %568 = icmp eq i64 %525, 0
  br i1 %568, label %571, label %569

569:                                              ; preds = %567
  %570 = inttoptr i64 %525 to i8*
  call void @_ZdlPv(i8* %570) #13
  br label %571

571:                                              ; preds = %519, %567, %569
  %572 = add nuw nsw i32 %504, 1
  %573 = icmp eq i32 %572, %413
  br i1 %573, label %433, label %574

574:                                              ; preds = %571
  %575 = load i8*, i8** %32, align 8
  %576 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %416, align 8
  %577 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %417, align 8
  %578 = ptrtoint %"class.SkSL::Variable"** %576 to i64
  br label %499

579:                                              ; preds = %1
  %580 = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %580, i8** %32, align 8
  %581 = load i8, i8* %34, align 1
  %582 = getelementptr inbounds i8, i8* %33, i64 3
  store i8* %582, i8** %32, align 8
  %583 = load i8, i8* %580, align 1
  %584 = zext i8 %583 to i64
  %585 = shl nuw nsw i64 %584, 8
  %586 = zext i8 %581 to i64
  %587 = or i64 %585, %586
  %588 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 2, i32 0, i32 0
  %589 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %588, align 8
  %590 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %589, i64 %587
  %591 = bitcast %"class.SkSL::Symbol"** %590 to %"class.SkSL::Variable"**
  %592 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %591, align 8
  %593 = getelementptr inbounds i8, i8* %33, i64 4
  store i8* %593, i8** %32, align 8
  %594 = load i8, i8* %582, align 1
  %595 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1, i32 0
  %596 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %595, align 8
  %597 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 56) #11
  %598 = zext i8 %594 to i32
  %599 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %592, i64 0, i32 0, i32 2
  %600 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %599, align 8
  %601 = zext i8 %594 to i64
  %602 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %600, i64 0, i32 10, i32 0, i32 0
  %603 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %602, align 8
  %604 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %603, i64 %601, i32 1, i32 0
  %605 = bitcast i8** %604 to <2 x i64>*
  %606 = load <2 x i64>, <2 x i64>* %605, align 8
  %607 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %603, i64 %601, i32 2
  %608 = bitcast %"class.SkSL::Type"** %607 to i64*
  %609 = load i64, i64* %608, align 8
  %610 = bitcast i8* %597 to i32 (...)***
  %611 = getelementptr inbounds i8, i8* %597, i64 8
  %612 = bitcast i8* %611 to i32*
  store i32 -1, i32* %612, align 8
  %613 = getelementptr inbounds i8, i8* %597, i64 12
  %614 = bitcast i8* %613 to i32*
  store i32 10, i32* %614, align 4
  %615 = getelementptr inbounds i8, i8* %597, i64 16
  %616 = bitcast i8* %615 to <2 x i64>*
  store <2 x i64> %606, <2 x i64>* %616, align 8
  %617 = getelementptr inbounds i8, i8* %597, i64 32
  %618 = bitcast i8* %617 to i64*
  store i64 %609, i64* %618, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %610, align 8
  %619 = getelementptr inbounds i8, i8* %597, i64 40
  %620 = bitcast i8* %619 to %"class.SkSL::Variable"**
  store %"class.SkSL::Variable"* %592, %"class.SkSL::Variable"** %620, align 8
  %621 = getelementptr inbounds i8, i8* %597, i64 48
  %622 = bitcast i8* %621 to i32*
  store i32 %598, i32* %622, align 8
  %623 = ptrtoint i8* %597 to i64
  %624 = bitcast %"class.std::__1::unique_ptr.46"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %624) #11
  %625 = bitcast %"class.std::__1::unique_ptr.46"* %9 to i64*
  store i64 %623, i64* %625, align 8
  %626 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %596, i64 0, i32 1, i32 0, i32 1
  %627 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %626, align 8
  %628 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %596, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %629 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %628, align 8
  %630 = icmp ult %"class.std::__1::unique_ptr.46"* %627, %629
  br i1 %630, label %631, label %637

631:                                              ; preds = %579
  %632 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %632, align 8
  %633 = bitcast %"class.std::__1::unique_ptr.46"* %627 to i64*
  store i64 %623, i64* %633, align 8
  %634 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %627, i64 1
  %635 = ptrtoint %"class.std::__1::unique_ptr.46"* %634 to i64
  %636 = bitcast %"class.std::__1::unique_ptr.46"** %626 to i64*
  store i64 %635, i64* %636, align 8
  br label %639

637:                                              ; preds = %579
  %638 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %596, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.44"* %638, %"class.std::__1::unique_ptr.46"* nonnull dereferenceable(8) %9) #11
  br label %639

639:                                              ; preds = %637, %631
  %640 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %9, i64 0, i32 0, i32 0, i32 0
  %641 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %640, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %640, align 8
  %642 = icmp eq %"class.SkSL::Symbol"* %641, null
  br i1 %642, label %648, label %643

643:                                              ; preds = %639
  %644 = bitcast %"class.SkSL::Symbol"* %641 to void (%"class.SkSL::Symbol"*)***
  %645 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %644, align 8
  %646 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %645, i64 1
  %647 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %646, align 8
  call void %647(%"class.SkSL::Symbol"* nonnull %641) #11
  br label %648

648:                                              ; preds = %639, %643
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %624) #11
  %649 = bitcast i8* %597 to %"class.SkSL::Symbol"*
  br label %1394

650:                                              ; preds = %1
  %651 = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %651, i8** %32, align 8
  %652 = load i8, i8* %34, align 1
  %653 = getelementptr inbounds i8, i8* %33, i64 3
  store i8* %653, i8** %32, align 8
  %654 = load i8, i8* %651, align 1
  %655 = zext i8 %654 to i32
  %656 = shl nuw nsw i32 %655, 8
  %657 = zext i8 %652 to i32
  %658 = or i32 %656, %657
  %659 = getelementptr inbounds i8, i8* %33, i64 4
  store i8* %659, i8** %32, align 8
  %660 = load i8, i8* %653, align 1
  %661 = getelementptr inbounds i8, i8* %33, i64 5
  store i8* %661, i8** %32, align 8
  %662 = load i8, i8* %659, align 1
  %663 = zext i8 %662 to i64
  %664 = shl nuw nsw i64 %663, 8
  %665 = zext i8 %660 to i64
  %666 = or i64 %664, %665
  %667 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 3
  %668 = load i8*, i8** %667, align 8
  %669 = getelementptr inbounds i8, i8* %668, i64 %666
  %670 = load i8, i8* %669, align 1
  %671 = getelementptr inbounds i8, i8* %669, i64 1
  %672 = zext i8 %670 to i64
  %673 = getelementptr inbounds i8, i8* %33, i64 6
  store i8* %673, i8** %32, align 8
  %674 = load i8, i8* %661, align 1
  %675 = bitcast %"class.std::__1::vector.8"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %675) #11
  %676 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %26, i64 0, i32 0, i32 0
  %677 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %26, i64 0, i32 0, i32 1
  %678 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %26, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %675, i8 0, i64 24, i1 false) #11
  %679 = zext i8 %674 to i64
  %680 = bitcast %"struct.SkSL::Type::Field"** %678 to i64*
  %681 = bitcast %"class.std::__1::vector.8"* %26 to i64*
  %682 = icmp eq i8 %674, 0
  br i1 %682, label %715, label %683

683:                                              ; preds = %650
  %684 = bitcast %"struct.SkSL::Type::Field"** %677 to i64*
  %685 = mul nuw nsw i64 %679, 104
  %686 = tail call i8* @_Znwm(i64 %685) #13
  %687 = bitcast i8* %686 to %"struct.SkSL::Type::Field"*
  %688 = ptrtoint i8* %686 to i64
  %689 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %687, i64 %679
  %690 = ptrtoint %"struct.SkSL::Type::Field"* %689 to i64
  store i64 %688, i64* %681, align 16
  store i64 %688, i64* %684, align 8
  store i64 %690, i64* %680, align 16
  %691 = zext i8 %674 to i32
  %692 = bitcast %"struct.SkSL::Layout"* %7 to i8*
  %693 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %7, i64 0, i32 0
  %694 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %7, i64 0, i32 1
  %695 = bitcast i32* %694 to i8*
  %696 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %7, i64 0, i32 11
  %697 = bitcast [4 x i8]* %696 to i32*
  %698 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %7, i64 0, i32 12, i32 0
  %699 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %7, i64 0, i32 12, i32 1
  %700 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %7, i64 0, i32 13
  %701 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %7, i64 0, i32 14
  %702 = bitcast [4 x i8]* %701 to i32*
  %703 = bitcast %"struct.SkSL::Layout"* %6 to i8*
  %704 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %6, i64 0, i32 0
  %705 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %6, i64 0, i32 1
  %706 = bitcast i32* %705 to i8*
  %707 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %6, i64 0, i32 11
  %708 = bitcast [4 x i8]* %707 to i32*
  %709 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %6, i64 0, i32 12, i32 0
  %710 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %6, i64 0, i32 12, i32 1
  %711 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %6, i64 0, i32 13
  %712 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %6, i64 0, i32 14
  %713 = bitcast [4 x i8]* %712 to i32*
  %714 = bitcast %"struct.SkSL::Type::Field"** %677 to i64*
  br label %827

715:                                              ; preds = %981, %650
  %716 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1, i32 0
  %717 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %716, align 8
  %718 = icmp ult i8 %670, 23
  br i1 %718, label %728, label %719

719:                                              ; preds = %715
  %720 = add nuw nsw i64 %672, 16
  %721 = and i64 %720, 496
  %722 = call i8* @_Znwm(i64 %721) #13
  %723 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %722, i8** %723, align 8
  %724 = or i64 %721, -9223372036854775808
  %725 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %724, i64* %725, align 8
  %726 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %672, i64* %726, align 8
  %727 = bitcast %"class.SkSL::String"* %28 to i8*
  br label %733

728:                                              ; preds = %715
  %729 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %730 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %729, i64 0, i32 1, i32 0
  store i8 %670, i8* %730, align 1
  %731 = bitcast %"class.SkSL::String"* %28 to i8*
  %732 = icmp eq i8 %670, 0
  br i1 %732, label %736, label %733

733:                                              ; preds = %728, %719
  %734 = phi i8* [ %731, %728 ], [ %727, %719 ]
  %735 = phi i8* [ %731, %728 ], [ %722, %719 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %735, i8* align 1 %671, i64 %672, i1 false) #11
  br label %736

736:                                              ; preds = %728, %733
  %737 = phi i8* [ %731, %728 ], [ %734, %733 ]
  %738 = phi i8* [ %731, %728 ], [ %735, %733 ]
  %739 = getelementptr inbounds i8, i8* %738, i64 %672
  store i8 0, i8* %739, align 1
  %740 = bitcast %"struct.SkSL::Type::Field"** %677 to i64*
  %741 = bitcast %"class.std::__1::vector.8"* %26 to <2 x i64>*
  %742 = load <2 x i64>, <2 x i64>* %741, align 16
  %743 = load i64, i64* %680, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %675, i8 0, i64 24, i1 false) #11
  %744 = getelementptr inbounds [15 x i8], [15 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %744)
  %745 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #11
  %746 = bitcast %"class.SkSL::String"* %28 to i64*
  %747 = load i64, i64* %746, align 8
  %748 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %749 = bitcast i64* %748 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %744, i8* align 8 %749, i64 15, i1 false) #11
  %750 = getelementptr inbounds i8, i8* %737, i64 23
  %751 = load i8, i8* %750, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %737, i8 0, i64 24, i1 false) #11
  %752 = bitcast i8* %745 to i32 (...)***
  %753 = getelementptr inbounds i8, i8* %745, i64 8
  %754 = bitcast i8* %753 to i32*
  store i32 -1, i32* %754, align 8
  %755 = getelementptr inbounds i8, i8* %745, i64 12
  %756 = bitcast i8* %755 to i32*
  store i32 13, i32* %756, align 4
  %757 = getelementptr inbounds i8, i8* %745, i64 16
  %758 = bitcast i8* %757 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %758, align 8
  %759 = getelementptr inbounds i8, i8* %745, i64 24
  %760 = bitcast i8* %759 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %759, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %752, align 8
  %761 = getelementptr inbounds i8, i8* %745, i64 40
  %762 = bitcast i8* %761 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i8** %762, align 8
  %763 = getelementptr inbounds i8, i8* %745, i64 48
  %764 = bitcast i8* %763 to i64*
  store i64 %747, i64* %764, align 8
  %765 = getelementptr inbounds i8, i8* %745, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %765, i8* nonnull align 8 %744, i64 15, i1 false) #11
  %766 = getelementptr inbounds i8, i8* %745, i64 71
  store i8 %751, i8* %766, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %744, i8 0, i64 15, i1 false)
  %767 = getelementptr inbounds i8, i8* %745, i64 72
  %768 = bitcast i8* %767 to i32*
  store i32 9, i32* %768, align 8
  %769 = getelementptr inbounds i8, i8* %745, i64 76
  %770 = bitcast i8* %769 to i32*
  store i32 4, i32* %770, align 4
  %771 = getelementptr inbounds i8, i8* %745, i64 80
  %772 = bitcast i8* %771 to i32*
  store i32 -1, i32* %772, align 8
  %773 = getelementptr inbounds i8, i8* %745, i64 88
  %774 = getelementptr inbounds i8, i8* %745, i64 120
  %775 = bitcast i8* %774 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %773, i8 0, i64 32, i1 false) #11
  store i32 -1, i32* %775, align 8
  %776 = getelementptr inbounds i8, i8* %745, i64 124
  %777 = bitcast i8* %776 to i32*
  store i32 -1, i32* %777, align 4
  %778 = getelementptr inbounds i8, i8* %745, i64 128
  %779 = bitcast i8* %778 to <2 x i64>*
  store <2 x i64> %742, <2 x i64>* %779, align 8
  %780 = getelementptr inbounds i8, i8* %745, i64 144
  %781 = bitcast i8* %780 to i64*
  store i64 %743, i64* %781, align 8
  %782 = getelementptr inbounds i8, i8* %745, i64 152
  %783 = getelementptr inbounds i8, i8* %745, i64 168
  call void @llvm.memset.p0i8.i64(i8* align 8 %782, i8 0, i64 9, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %783, i8 0, i64 16, i1 false) #11
  %784 = icmp slt i8 %751, 0
  br i1 %784, label %785, label %789

785:                                              ; preds = %736
  %786 = inttoptr i64 %747 to i8*
  %787 = bitcast i8* %765 to i64*
  %788 = load i64, i64* %787, align 8
  br label %791

789:                                              ; preds = %736
  %790 = zext i8 %751 to i64
  br label %791

791:                                              ; preds = %785, %789
  %792 = phi i8* [ %786, %785 ], [ %763, %789 ]
  %793 = phi i64 [ %788, %785 ], [ %790, %789 ]
  store i8* %792, i8** %758, align 8
  store i64 %793, i64* %760, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %744)
  %794 = ptrtoint i8* %745 to i64
  %795 = bitcast %"class.std::__1::unique_ptr.46"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %795) #11
  %796 = bitcast %"class.std::__1::unique_ptr.46"* %8 to i64*
  store i64 %794, i64* %796, align 8
  %797 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %717, i64 0, i32 1, i32 0, i32 1
  %798 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %797, align 8
  %799 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %717, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %800 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %799, align 8
  %801 = icmp ult %"class.std::__1::unique_ptr.46"* %798, %800
  br i1 %801, label %802, label %808

802:                                              ; preds = %791
  %803 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %803, align 8
  %804 = bitcast %"class.std::__1::unique_ptr.46"* %798 to i64*
  store i64 %794, i64* %804, align 8
  %805 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %798, i64 1
  %806 = ptrtoint %"class.std::__1::unique_ptr.46"* %805 to i64
  %807 = bitcast %"class.std::__1::unique_ptr.46"** %797 to i64*
  store i64 %806, i64* %807, align 8
  br label %810

808:                                              ; preds = %791
  %809 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %717, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.44"* %809, %"class.std::__1::unique_ptr.46"* nonnull dereferenceable(8) %8) #11
  br label %810

810:                                              ; preds = %808, %802
  %811 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %8, i64 0, i32 0, i32 0, i32 0
  %812 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %811, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %811, align 8
  %813 = icmp eq %"class.SkSL::Symbol"* %812, null
  br i1 %813, label %819, label %814

814:                                              ; preds = %810
  %815 = bitcast %"class.SkSL::Symbol"* %812 to void (%"class.SkSL::Symbol"*)***
  %816 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %815, align 8
  %817 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %816, i64 1
  %818 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %817, align 8
  call void %818(%"class.SkSL::Symbol"* nonnull %812) #11
  br label %819

819:                                              ; preds = %810, %814
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %795) #11
  %820 = bitcast i8* %745 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL10Rehydrator9addSymbolEiPKNS_6SymbolE(%"class.SkSL::Rehydrator"* %0, i32 %658, %"class.SkSL::Symbol"* %820)
  %821 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %676, align 16
  %822 = icmp eq %"struct.SkSL::Type::Field"* %821, null
  br i1 %822, label %826, label %823

823:                                              ; preds = %819
  %824 = ptrtoint %"struct.SkSL::Type::Field"* %821 to i64
  store i64 %824, i64* %740, align 8
  %825 = bitcast %"struct.SkSL::Type::Field"* %821 to i8*
  call void @_ZdlPv(i8* %825) #13
  br label %826

826:                                              ; preds = %819, %823
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %675) #11
  br label %1394

827:                                              ; preds = %984, %683
  %828 = phi i8* [ %673, %683 ], [ %985, %984 ]
  %829 = phi i32 [ 0, %683 ], [ %982, %984 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 -86, i64 40, i1 false)
  %830 = getelementptr inbounds i8, i8* %828, i64 1
  store i8* %830, i8** %32, align 8, !noalias !5
  %831 = load i8, i8* %828, align 1, !noalias !5
  switch i8 %831, label %870 [
    i8 16, label %832
    i8 37, label %833
    i8 38, label %844
  ]

832:                                              ; preds = %827
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 -1, i64 40, i1 false), !alias.scope !5
  br label %871

833:                                              ; preds = %827
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %703) #11, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %703, i8 -86, i64 72, i1 false) #11, !noalias !5
  call void @_ZN4SkSL10Rehydrator6layoutEv(%"struct.SkSL::Layout"* nonnull sret %6, %"class.SkSL::Rehydrator"* %0) #11, !noalias !5
  %834 = load i8*, i8** %32, align 8, !noalias !5
  %835 = getelementptr inbounds i8, i8* %834, i64 1
  store i8* %835, i8** %32, align 8, !noalias !5
  %836 = load i8, i8* %834, align 1, !noalias !5
  %837 = zext i8 %836 to i32
  %838 = load i32, i32* %704, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %706, i64 40, i1 false)
  %839 = load i32, i32* %708, align 4
  %840 = load i8*, i8** %709, align 8
  %841 = load i64, i64* %710, align 8
  %842 = load i32, i32* %711, align 8
  %843 = load i32, i32* %713, align 4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %703) #11, !noalias !5
  br label %871

844:                                              ; preds = %827
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %692) #11, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %692, i8 -86, i64 72, i1 false) #11, !noalias !5
  call void @_ZN4SkSL10Rehydrator6layoutEv(%"struct.SkSL::Layout"* nonnull sret %7, %"class.SkSL::Rehydrator"* %0) #11, !noalias !5
  %845 = load i8*, i8** %32, align 8, !noalias !5
  %846 = getelementptr inbounds i8, i8* %845, i64 1
  store i8* %846, i8** %32, align 8, !noalias !5
  %847 = load i8, i8* %845, align 1, !noalias !5
  %848 = getelementptr inbounds i8, i8* %845, i64 2
  store i8* %848, i8** %32, align 8, !noalias !5
  %849 = load i8, i8* %846, align 1, !noalias !5
  %850 = getelementptr inbounds i8, i8* %845, i64 3
  store i8* %850, i8** %32, align 8, !noalias !5
  %851 = load i8, i8* %848, align 1, !noalias !5
  %852 = getelementptr inbounds i8, i8* %845, i64 4
  store i8* %852, i8** %32, align 8, !noalias !5
  %853 = load i8, i8* %850, align 1, !noalias !5
  %854 = zext i8 %853 to i32
  %855 = shl nuw i32 %854, 24
  %856 = zext i8 %851 to i32
  %857 = shl nuw nsw i32 %856, 16
  %858 = zext i8 %849 to i32
  %859 = shl nuw nsw i32 %858, 8
  %860 = zext i8 %847 to i32
  %861 = or i32 %859, %860
  %862 = or i32 %861, %857
  %863 = or i32 %862, %855
  %864 = load i32, i32* %693, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %695, i64 40, i1 false)
  %865 = load i32, i32* %697, align 4
  %866 = load i8*, i8** %698, align 8
  %867 = load i64, i64* %699, align 8
  %868 = load i32, i32* %700, align 8
  %869 = load i32, i32* %702, align 4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %692) #11, !noalias !5
  br label %871

870:                                              ; preds = %827
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 -1, i64 40, i1 false), !alias.scope !5
  br label %871

871:                                              ; preds = %832, %833, %844, %870
  %872 = phi i8* [ %830, %870 ], [ %852, %844 ], [ %835, %833 ], [ %830, %832 ]
  %873 = phi i32 [ 0, %870 ], [ %863, %844 ], [ %837, %833 ], [ 0, %832 ]
  %874 = phi i32 [ -1431655766, %870 ], [ %869, %844 ], [ %843, %833 ], [ -1431655766, %832 ]
  %875 = phi i32 [ 0, %870 ], [ %868, %844 ], [ %842, %833 ], [ 0, %832 ]
  %876 = phi i64 [ 0, %870 ], [ %867, %844 ], [ %841, %833 ], [ 0, %832 ]
  %877 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %870 ], [ %866, %844 ], [ %840, %833 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %832 ]
  %878 = phi i32 [ -1431655766, %870 ], [ %865, %844 ], [ %839, %833 ], [ -1431655766, %832 ]
  %879 = phi i32 [ 0, %870 ], [ %864, %844 ], [ %838, %833 ], [ 0, %832 ]
  %880 = getelementptr inbounds i8, i8* %872, i64 1
  store i8* %880, i8** %32, align 8
  %881 = load i8, i8* %872, align 1
  %882 = getelementptr inbounds i8, i8* %872, i64 2
  store i8* %882, i8** %32, align 8
  %883 = load i8, i8* %880, align 1
  %884 = zext i8 %883 to i64
  %885 = shl nuw nsw i64 %884, 8
  %886 = zext i8 %881 to i64
  %887 = or i64 %885, %886
  %888 = load i8*, i8** %667, align 8
  %889 = getelementptr inbounds i8, i8* %888, i64 %887
  %890 = load i8, i8* %889, align 1
  %891 = getelementptr inbounds i8, i8* %889, i64 1
  %892 = zext i8 %890 to i64
  %893 = ptrtoint i8* %891 to i64
  %894 = call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %895 = ptrtoint %"class.SkSL::Symbol"* %894 to i64
  %896 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %677, align 8
  %897 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %678, align 16
  %898 = icmp ult %"struct.SkSL::Type::Field"* %896, %897
  %899 = ptrtoint %"struct.SkSL::Type::Field"* %897 to i64
  br i1 %898, label %900, label %921

900:                                              ; preds = %871
  %901 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %896, i64 0, i32 0, i32 0, i32 0
  store i32 %879, i32* %901, align 8
  %902 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %896, i64 0, i32 0, i32 0, i32 1
  %903 = bitcast i32* %902 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %903, i8* nonnull align 4 %31, i64 40, i1 false)
  %904 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %896, i64 0, i32 0, i32 0, i32 11
  %905 = bitcast [4 x i8]* %904 to i32*
  store i32 %878, i32* %905, align 4
  %906 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %896, i64 0, i32 0, i32 0, i32 12, i32 0
  store i8* %877, i8** %906, align 8
  %907 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %896, i64 0, i32 0, i32 0, i32 12, i32 1
  store i64 %876, i64* %907, align 8
  %908 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %896, i64 0, i32 0, i32 0, i32 13
  store i32 %875, i32* %908, align 8
  %909 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %896, i64 0, i32 0, i32 0, i32 14
  %910 = bitcast [4 x i8]* %909 to i32*
  store i32 %874, i32* %910, align 4
  %911 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %896, i64 0, i32 0, i32 1
  store i32 %873, i32* %911, align 8
  %912 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %896, i64 0, i32 0, i32 2
  %913 = bitcast [4 x i8]* %912 to i32*
  store i32 -1431655766, i32* %913, align 4
  %914 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %896, i64 0, i32 1, i32 0
  %915 = bitcast i8** %914 to i64*
  store i64 %893, i64* %915, align 8
  %916 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %896, i64 0, i32 1, i32 1
  store i64 %892, i64* %916, align 8
  %917 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %896, i64 0, i32 2
  %918 = bitcast %"class.SkSL::Type"** %917 to i64*
  store i64 %895, i64* %918, align 8
  %919 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %896, i64 1
  %920 = ptrtoint %"struct.SkSL::Type::Field"* %919 to i64
  store i64 %920, i64* %714, align 8
  br label %981

921:                                              ; preds = %871
  %922 = ptrtoint %"struct.SkSL::Type::Field"* %896 to i64
  %923 = load i64, i64* %681, align 16
  %924 = sub i64 %922, %923
  %925 = sdiv exact i64 %924, 104
  %926 = add nsw i64 %925, 1
  %927 = icmp ugt i64 %926, 177372539170284150
  br i1 %927, label %928, label %930

928:                                              ; preds = %921
  %929 = bitcast %"class.std::__1::vector.8"* %26 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %929) #12
  unreachable

930:                                              ; preds = %921
  %931 = sub i64 %899, %923
  %932 = sdiv exact i64 %931, 104
  %933 = icmp ult i64 %932, 88686269585142075
  br i1 %933, label %934, label %939

934:                                              ; preds = %930
  %935 = shl nsw i64 %932, 1
  %936 = icmp ult i64 %935, %926
  %937 = select i1 %936, i64 %926, i64 %935
  %938 = icmp eq i64 %937, 0
  br i1 %938, label %944, label %939

939:                                              ; preds = %934, %930
  %940 = phi i64 [ %937, %934 ], [ 177372539170284150, %930 ]
  %941 = mul i64 %940, 104
  %942 = call i8* @_Znwm(i64 %941) #13
  %943 = bitcast i8* %942 to %"struct.SkSL::Type::Field"*
  br label %944

944:                                              ; preds = %939, %934
  %945 = phi i64 [ %940, %939 ], [ 0, %934 ]
  %946 = phi %"struct.SkSL::Type::Field"* [ %943, %939 ], [ null, %934 ]
  %947 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %946, i64 %925
  %948 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %946, i64 %945
  %949 = ptrtoint %"struct.SkSL::Type::Field"* %948 to i64
  %950 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %947, i64 0, i32 0, i32 0, i32 0
  store i32 %879, i32* %950, align 8
  %951 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %946, i64 %925, i32 0, i32 0, i32 1
  %952 = bitcast i32* %951 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %952, i8* nonnull align 4 %31, i64 40, i1 false)
  %953 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %946, i64 %925, i32 0, i32 0, i32 11
  %954 = bitcast [4 x i8]* %953 to i32*
  store i32 %878, i32* %954, align 4
  %955 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %946, i64 %925, i32 0, i32 0, i32 12, i32 0
  store i8* %877, i8** %955, align 8
  %956 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %946, i64 %925, i32 0, i32 0, i32 12, i32 1
  store i64 %876, i64* %956, align 8
  %957 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %946, i64 %925, i32 0, i32 0, i32 13
  store i32 %875, i32* %957, align 8
  %958 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %946, i64 %925, i32 0, i32 0, i32 14
  %959 = bitcast [4 x i8]* %958 to i32*
  store i32 %874, i32* %959, align 4
  %960 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %946, i64 %925, i32 0, i32 1
  store i32 %873, i32* %960, align 8
  %961 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %946, i64 %925, i32 0, i32 2
  %962 = bitcast [4 x i8]* %961 to i32*
  store i32 -1431655766, i32* %962, align 4
  %963 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %946, i64 %925, i32 1, i32 0
  %964 = bitcast i8** %963 to i64*
  store i64 %893, i64* %964, align 8
  %965 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %946, i64 %925, i32 1, i32 1
  store i64 %892, i64* %965, align 8
  %966 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %946, i64 %925, i32 2
  %967 = bitcast %"class.SkSL::Type"** %966 to i64*
  store i64 %895, i64* %967, align 8
  %968 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %947, i64 1
  %969 = ptrtoint %"struct.SkSL::Type::Field"* %968 to i64
  %970 = sdiv exact i64 %924, -104
  %971 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %947, i64 %970
  %972 = ptrtoint %"struct.SkSL::Type::Field"* %971 to i64
  %973 = icmp sgt i64 %924, 0
  br i1 %973, label %974, label %977

974:                                              ; preds = %944
  %975 = bitcast %"struct.SkSL::Type::Field"* %971 to i8*
  %976 = inttoptr i64 %923 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %975, i8* align 8 %976, i64 %924, i1 false) #11
  br label %977

977:                                              ; preds = %974, %944
  store i64 %972, i64* %681, align 16
  store i64 %969, i64* %714, align 8
  store i64 %949, i64* %680, align 16
  %978 = icmp eq i64 %923, 0
  br i1 %978, label %981, label %979

979:                                              ; preds = %977
  %980 = inttoptr i64 %923 to i8*
  call void @_ZdlPv(i8* %980) #13
  br label %981

981:                                              ; preds = %979, %977, %900
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31)
  %982 = add nuw nsw i32 %829, 1
  %983 = icmp eq i32 %982, %691
  br i1 %983, label %715, label %984

984:                                              ; preds = %981
  %985 = load i8*, i8** %32, align 8, !noalias !5
  br label %827

986:                                              ; preds = %1
  %987 = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %987, i8** %32, align 8
  %988 = load i8, i8* %34, align 1
  %989 = getelementptr inbounds i8, i8* %33, i64 3
  store i8* %989, i8** %32, align 8
  %990 = load i8, i8* %987, align 1
  %991 = zext i8 %990 to i64
  %992 = shl nuw nsw i64 %991, 8
  %993 = zext i8 %988 to i64
  %994 = or i64 %992, %993
  %995 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 2, i32 0, i32 0
  %996 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %995, align 8
  %997 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %996, i64 %994
  %998 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %997, align 8
  br label %1394

999:                                              ; preds = %1
  %1000 = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %1000, i8** %32, align 8
  %1001 = load i8, i8* %34, align 1
  %1002 = getelementptr inbounds i8, i8* %33, i64 3
  store i8* %1002, i8** %32, align 8
  %1003 = load i8, i8* %1000, align 1
  %1004 = zext i8 %1003 to i32
  %1005 = shl nuw nsw i32 %1004, 8
  %1006 = zext i8 %1001 to i32
  %1007 = or i32 %1005, %1006
  %1008 = getelementptr inbounds i8, i8* %33, i64 4
  store i8* %1008, i8** %32, align 8
  %1009 = load i8, i8* %1002, align 1
  %1010 = getelementptr inbounds i8, i8* %33, i64 5
  store i8* %1010, i8** %32, align 8
  %1011 = load i8, i8* %1008, align 1
  %1012 = zext i8 %1011 to i64
  %1013 = shl nuw nsw i64 %1012, 8
  %1014 = zext i8 %1009 to i64
  %1015 = or i64 %1013, %1014
  %1016 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 3
  %1017 = load i8*, i8** %1016, align 8
  %1018 = getelementptr inbounds i8, i8* %1017, i64 %1015
  %1019 = load i8, i8* %1018, align 1
  %1020 = getelementptr inbounds i8, i8* %1018, i64 1
  %1021 = zext i8 %1019 to i64
  %1022 = ptrtoint i8* %1020 to i64
  %1023 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0)
  %1024 = ptrtoint %"class.SkSL::Symbol"* %1023 to i64
  %1025 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1, i32 0
  %1026 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %1025, align 8
  %1027 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 48) #11
  %1028 = bitcast i8* %1027 to i32 (...)***
  %1029 = getelementptr inbounds i8, i8* %1027, i64 8
  %1030 = bitcast i8* %1029 to i32*
  store i32 -1, i32* %1030, align 8
  %1031 = getelementptr inbounds i8, i8* %1027, i64 12
  %1032 = bitcast i8* %1031 to i32*
  store i32 12, i32* %1032, align 4
  %1033 = getelementptr inbounds i8, i8* %1027, i64 16
  %1034 = bitcast i8* %1033 to i64*
  store i64 %1022, i64* %1034, align 8
  %1035 = getelementptr inbounds i8, i8* %1027, i64 24
  %1036 = bitcast i8* %1035 to i64*
  store i64 %1021, i64* %1036, align 8
  %1037 = getelementptr inbounds i8, i8* %1027, i64 32
  %1038 = bitcast i8* %1037 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %1038, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL11SymbolAliasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1028, align 8
  %1039 = getelementptr inbounds i8, i8* %1027, i64 40
  %1040 = bitcast i8* %1039 to i64*
  store i64 %1024, i64* %1040, align 8
  %1041 = ptrtoint i8* %1027 to i64
  %1042 = bitcast %"class.std::__1::unique_ptr.46"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1042) #11
  %1043 = bitcast %"class.std::__1::unique_ptr.46"* %5 to i64*
  store i64 %1041, i64* %1043, align 8
  %1044 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1026, i64 0, i32 1, i32 0, i32 1
  %1045 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %1044, align 8
  %1046 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1026, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %1047 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %1046, align 8
  %1048 = icmp ult %"class.std::__1::unique_ptr.46"* %1045, %1047
  br i1 %1048, label %1049, label %1055

1049:                                             ; preds = %999
  %1050 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %1050, align 8
  %1051 = bitcast %"class.std::__1::unique_ptr.46"* %1045 to i64*
  store i64 %1041, i64* %1051, align 8
  %1052 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %1045, i64 1
  %1053 = ptrtoint %"class.std::__1::unique_ptr.46"* %1052 to i64
  %1054 = bitcast %"class.std::__1::unique_ptr.46"** %1044 to i64*
  store i64 %1053, i64* %1054, align 8
  br label %1057

1055:                                             ; preds = %999
  %1056 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1026, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.44"* %1056, %"class.std::__1::unique_ptr.46"* nonnull dereferenceable(8) %5) #11
  br label %1057

1057:                                             ; preds = %1055, %1049
  %1058 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %5, i64 0, i32 0, i32 0, i32 0
  %1059 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %1058, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %1058, align 8
  %1060 = icmp eq %"class.SkSL::Symbol"* %1059, null
  br i1 %1060, label %1066, label %1061

1061:                                             ; preds = %1057
  %1062 = bitcast %"class.SkSL::Symbol"* %1059 to void (%"class.SkSL::Symbol"*)***
  %1063 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %1062, align 8
  %1064 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %1063, i64 1
  %1065 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %1064, align 8
  call void %1065(%"class.SkSL::Symbol"* nonnull %1059) #11
  br label %1066

1066:                                             ; preds = %1057, %1061
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1042) #11
  %1067 = bitcast i8* %1027 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL10Rehydrator9addSymbolEiPKNS_6SymbolE(%"class.SkSL::Rehydrator"* %0, i32 %1007, %"class.SkSL::Symbol"* %1067)
  br label %1394

1068:                                             ; preds = %1
  %1069 = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %1069, i8** %32, align 8
  %1070 = load i8, i8* %34, align 1
  %1071 = getelementptr inbounds i8, i8* %33, i64 3
  store i8* %1071, i8** %32, align 8
  %1072 = load i8, i8* %1069, align 1
  %1073 = zext i8 %1072 to i32
  %1074 = shl nuw nsw i32 %1073, 8
  %1075 = zext i8 %1070 to i32
  %1076 = or i32 %1074, %1075
  %1077 = getelementptr inbounds i8, i8* %33, i64 4
  store i8* %1077, i8** %32, align 8
  %1078 = load i8, i8* %1071, align 1
  %1079 = getelementptr inbounds i8, i8* %33, i64 5
  store i8* %1079, i8** %32, align 8
  %1080 = load i8, i8* %1077, align 1
  %1081 = zext i8 %1080 to i64
  %1082 = shl nuw nsw i64 %1081, 8
  %1083 = zext i8 %1078 to i64
  %1084 = or i64 %1082, %1083
  %1085 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 3
  %1086 = load i8*, i8** %1085, align 8
  %1087 = getelementptr inbounds i8, i8* %1086, i64 %1084
  %1088 = load i8, i8* %1087, align 1
  %1089 = getelementptr inbounds i8, i8* %1087, i64 1
  %1090 = zext i8 %1088 to i64
  %1091 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1, i32 0
  %1092 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %1091, align 8
  %1093 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"* %1092, i8* %1089, i64 %1090) #11
  tail call void @_ZN4SkSL10Rehydrator9addSymbolEiPKNS_6SymbolE(%"class.SkSL::Rehydrator"* %0, i32 %1076, %"class.SkSL::Symbol"* %1093)
  br label %1394

1094:                                             ; preds = %1
  %1095 = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %1095, i8** %32, align 8
  %1096 = load i8, i8* %34, align 1
  %1097 = getelementptr inbounds i8, i8* %33, i64 3
  store i8* %1097, i8** %32, align 8
  %1098 = load i8, i8* %1095, align 1
  %1099 = zext i8 %1098 to i32
  %1100 = shl nuw nsw i32 %1099, 8
  %1101 = zext i8 %1096 to i32
  %1102 = or i32 %1100, %1101
  %1103 = getelementptr inbounds i8, i8* %33, i64 4
  store i8* %1103, i8** %32, align 8
  %1104 = load i8, i8* %1097, align 1
  %1105 = zext i8 %1104 to i32
  %1106 = bitcast %"class.std::__1::vector.145"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1106) #11
  %1107 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %29, i64 0, i32 0, i32 0
  %1108 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %29, i64 0, i32 0, i32 1
  %1109 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %29, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1106, i8 0, i64 24, i1 false) #11
  %1110 = zext i8 %1104 to i64
  %1111 = bitcast %"class.SkSL::FunctionDeclaration"*** %1109 to i64*
  %1112 = bitcast %"class.std::__1::vector.145"* %29 to i64*
  %1113 = icmp eq i8 %1104, 0
  %1114 = bitcast %"class.SkSL::FunctionDeclaration"*** %1108 to i64*
  br i1 %1113, label %1126, label %1115

1115:                                             ; preds = %1094
  %1116 = shl nuw nsw i64 %1110, 3
  %1117 = tail call i8* @_Znwm(i64 %1116) #13
  %1118 = bitcast i8* %1117 to %"class.SkSL::FunctionDeclaration"**
  %1119 = ptrtoint i8* %1117 to i64
  %1120 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1118, i64 %1110
  %1121 = ptrtoint %"class.SkSL::FunctionDeclaration"** %1120 to i64
  %1122 = ptrtoint i8* %1117 to i64
  store i64 %1122, i64* %1112, align 8
  store i64 %1119, i64* %1114, align 8
  store i64 %1121, i64* %1111, align 8
  %1123 = bitcast %"class.SkSL::FunctionDeclaration"*** %1108 to i64*
  br label %1187

1124:                                             ; preds = %1248
  %1125 = load i64, i64* %1111, align 8
  br label %1126

1126:                                             ; preds = %1094, %1124
  %1127 = phi i64* [ %1123, %1124 ], [ %1114, %1094 ]
  %1128 = phi i64 [ %1125, %1124 ], [ 0, %1094 ]
  %1129 = phi i64 [ %1250, %1124 ], [ 0, %1094 ]
  %1130 = phi i64 [ %1249, %1124 ], [ 0, %1094 ]
  %1131 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1, i32 0
  %1132 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %1131, align 8
  %1133 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1106, i8 0, i64 24, i1 false) #11
  %1134 = inttoptr i64 %1130 to %"class.SkSL::Symbol"**
  %1135 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %1134, align 8
  %1136 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %1135, i64 0, i32 1, i32 0
  %1137 = bitcast i8** %1136 to <2 x i64>*
  %1138 = load <2 x i64>, <2 x i64>* %1137, align 8
  %1139 = bitcast i8* %1133 to i32 (...)***
  %1140 = getelementptr inbounds i8, i8* %1133, i64 8
  %1141 = bitcast i8* %1140 to i32*
  store i32 -1, i32* %1141, align 8
  %1142 = getelementptr inbounds i8, i8* %1133, i64 12
  %1143 = bitcast i8* %1142 to i32*
  store i32 14, i32* %1143, align 4
  %1144 = getelementptr inbounds i8, i8* %1133, i64 16
  %1145 = bitcast i8* %1144 to <2 x i64>*
  store <2 x i64> %1138, <2 x i64>* %1145, align 8
  %1146 = getelementptr inbounds i8, i8* %1133, i64 32
  %1147 = bitcast i8* %1146 to %"class.SkSL::Type"**
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %1147, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18UnresolvedFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1139, align 8
  %1148 = getelementptr inbounds i8, i8* %1133, i64 40
  %1149 = bitcast i8* %1148 to i64*
  store i64 %1130, i64* %1149, align 8
  %1150 = getelementptr inbounds i8, i8* %1133, i64 48
  %1151 = bitcast i8* %1150 to i64*
  store i64 %1129, i64* %1151, align 8
  %1152 = getelementptr inbounds i8, i8* %1133, i64 56
  %1153 = bitcast i8* %1152 to i64*
  store i64 %1128, i64* %1153, align 8
  %1154 = ptrtoint i8* %1133 to i64
  %1155 = bitcast %"class.std::__1::unique_ptr.46"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1155) #11
  %1156 = bitcast %"class.std::__1::unique_ptr.46"* %4 to i64*
  store i64 %1154, i64* %1156, align 8
  %1157 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1132, i64 0, i32 1, i32 0, i32 1
  %1158 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %1157, align 8
  %1159 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1132, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %1160 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %1159, align 8
  %1161 = icmp ult %"class.std::__1::unique_ptr.46"* %1158, %1160
  br i1 %1161, label %1162, label %1168

1162:                                             ; preds = %1126
  %1163 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %1163, align 8
  %1164 = bitcast %"class.std::__1::unique_ptr.46"* %1158 to i64*
  store i64 %1154, i64* %1164, align 8
  %1165 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %1158, i64 1
  %1166 = ptrtoint %"class.std::__1::unique_ptr.46"* %1165 to i64
  %1167 = bitcast %"class.std::__1::unique_ptr.46"** %1157 to i64*
  store i64 %1166, i64* %1167, align 8
  br label %1170

1168:                                             ; preds = %1126
  %1169 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1132, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.44"* %1169, %"class.std::__1::unique_ptr.46"* nonnull dereferenceable(8) %4) #11
  br label %1170

1170:                                             ; preds = %1168, %1162
  %1171 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %4, i64 0, i32 0, i32 0, i32 0
  %1172 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %1171, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %1171, align 8
  %1173 = icmp eq %"class.SkSL::Symbol"* %1172, null
  br i1 %1173, label %1179, label %1174

1174:                                             ; preds = %1170
  %1175 = bitcast %"class.SkSL::Symbol"* %1172 to void (%"class.SkSL::Symbol"*)***
  %1176 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %1175, align 8
  %1177 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %1176, i64 1
  %1178 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %1177, align 8
  call void %1178(%"class.SkSL::Symbol"* nonnull %1172) #11
  br label %1179

1179:                                             ; preds = %1170, %1174
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1155) #11
  %1180 = bitcast i8* %1133 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL10Rehydrator9addSymbolEiPKNS_6SymbolE(%"class.SkSL::Rehydrator"* %0, i32 %1102, %"class.SkSL::Symbol"* %1180)
  %1181 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %1107, align 8
  %1182 = icmp eq %"class.SkSL::FunctionDeclaration"** %1181, null
  br i1 %1182, label %1186, label %1183

1183:                                             ; preds = %1179
  %1184 = ptrtoint %"class.SkSL::FunctionDeclaration"** %1181 to i64
  store i64 %1184, i64* %1127, align 8
  %1185 = bitcast %"class.SkSL::FunctionDeclaration"** %1181 to i8*
  call void @_ZdlPv(i8* %1185) #13
  br label %1186

1186:                                             ; preds = %1179, %1183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1106) #11
  br label %1394

1187:                                             ; preds = %1254, %1115
  %1188 = phi i64 [ %1122, %1115 ], [ %1249, %1254 ]
  %1189 = phi i64 [ %1119, %1115 ], [ %1250, %1254 ]
  %1190 = phi %"class.SkSL::FunctionDeclaration"** [ %1120, %1115 ], [ %1255, %1254 ]
  %1191 = phi %"class.SkSL::FunctionDeclaration"** [ %1118, %1115 ], [ %1251, %1254 ]
  %1192 = phi i32 [ 0, %1115 ], [ %1252, %1254 ]
  %1193 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0)
  %1194 = ptrtoint %"class.SkSL::Symbol"* %1193 to i64
  %1195 = icmp ult %"class.SkSL::FunctionDeclaration"** %1191, %1190
  %1196 = ptrtoint %"class.SkSL::FunctionDeclaration"** %1190 to i64
  br i1 %1195, label %1197, label %1201

1197:                                             ; preds = %1187
  %1198 = bitcast %"class.SkSL::FunctionDeclaration"** %1191 to i64*
  store i64 %1194, i64* %1198, align 8
  %1199 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1191, i64 1
  %1200 = ptrtoint %"class.SkSL::FunctionDeclaration"** %1199 to i64
  store i64 %1200, i64* %1123, align 8
  br label %1248

1201:                                             ; preds = %1187
  %1202 = ptrtoint %"class.SkSL::FunctionDeclaration"** %1191 to i64
  %1203 = sub i64 %1202, %1188
  %1204 = ashr exact i64 %1203, 3
  %1205 = add nsw i64 %1204, 1
  %1206 = icmp ugt i64 %1205, 2305843009213693951
  br i1 %1206, label %1207, label %1209

1207:                                             ; preds = %1201
  %1208 = bitcast %"class.std::__1::vector.145"* %29 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1208) #12
  unreachable

1209:                                             ; preds = %1201
  %1210 = sub i64 %1196, %1188
  %1211 = ashr exact i64 %1210, 3
  %1212 = icmp ult i64 %1211, 1152921504606846975
  br i1 %1212, label %1213, label %1221

1213:                                             ; preds = %1209
  %1214 = ashr exact i64 %1210, 2
  %1215 = icmp ult i64 %1214, %1205
  %1216 = select i1 %1215, i64 %1205, i64 %1214
  %1217 = icmp eq i64 %1216, 0
  br i1 %1217, label %1226, label %1218

1218:                                             ; preds = %1213
  %1219 = icmp ugt i64 %1216, 2305843009213693951
  br i1 %1219, label %1220, label %1221

1220:                                             ; preds = %1218
  tail call void @abort() #12
  unreachable

1221:                                             ; preds = %1218, %1209
  %1222 = phi i64 [ %1216, %1218 ], [ 2305843009213693951, %1209 ]
  %1223 = shl i64 %1222, 3
  %1224 = tail call i8* @_Znwm(i64 %1223) #13
  %1225 = bitcast i8* %1224 to %"class.SkSL::FunctionDeclaration"**
  br label %1226

1226:                                             ; preds = %1221, %1213
  %1227 = phi i64 [ %1222, %1221 ], [ 0, %1213 ]
  %1228 = phi %"class.SkSL::FunctionDeclaration"** [ %1225, %1221 ], [ null, %1213 ]
  %1229 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1228, i64 %1204
  %1230 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1228, i64 %1227
  %1231 = ptrtoint %"class.SkSL::FunctionDeclaration"** %1230 to i64
  %1232 = bitcast %"class.SkSL::FunctionDeclaration"** %1229 to i64*
  store i64 %1194, i64* %1232, align 8
  %1233 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1229, i64 1
  %1234 = ptrtoint %"class.SkSL::FunctionDeclaration"** %1233 to i64
  %1235 = sub i64 %1189, %1188
  %1236 = ashr exact i64 %1235, 3
  %1237 = sub nsw i64 0, %1236
  %1238 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1229, i64 %1237
  %1239 = ptrtoint %"class.SkSL::FunctionDeclaration"** %1238 to i64
  %1240 = icmp sgt i64 %1235, 0
  br i1 %1240, label %1241, label %1244

1241:                                             ; preds = %1226
  %1242 = bitcast %"class.SkSL::FunctionDeclaration"** %1238 to i8*
  %1243 = inttoptr i64 %1188 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1242, i8* align 8 %1243, i64 %1235, i1 false) #11
  br label %1244

1244:                                             ; preds = %1241, %1226
  store i64 %1239, i64* %1112, align 8
  store i64 %1234, i64* %1123, align 8
  store i64 %1231, i64* %1111, align 8
  %1245 = icmp eq i64 %1188, 0
  br i1 %1245, label %1248, label %1246

1246:                                             ; preds = %1244
  %1247 = inttoptr i64 %1188 to i8*
  tail call void @_ZdlPv(i8* %1247) #13
  br label %1248

1248:                                             ; preds = %1197, %1244, %1246
  %1249 = phi i64 [ %1188, %1197 ], [ %1239, %1244 ], [ %1239, %1246 ]
  %1250 = phi i64 [ %1200, %1197 ], [ %1234, %1244 ], [ %1234, %1246 ]
  %1251 = phi %"class.SkSL::FunctionDeclaration"** [ %1199, %1197 ], [ %1233, %1244 ], [ %1233, %1246 ]
  %1252 = add nuw nsw i32 %1192, 1
  %1253 = icmp eq i32 %1252, %1105
  br i1 %1253, label %1124, label %1254

1254:                                             ; preds = %1248
  %1255 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %1109, align 8
  br label %1187

1256:                                             ; preds = %1
  %1257 = getelementptr inbounds i8, i8* %33, i64 2
  store i8* %1257, i8** %32, align 8
  %1258 = load i8, i8* %34, align 1
  %1259 = getelementptr inbounds i8, i8* %33, i64 3
  store i8* %1259, i8** %32, align 8
  %1260 = load i8, i8* %1257, align 1
  %1261 = zext i8 %1260 to i32
  %1262 = shl nuw nsw i32 %1261, 8
  %1263 = zext i8 %1258 to i32
  %1264 = or i32 %1262, %1263
  %1265 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %1266 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %1265, align 8
  %1267 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1266, i64 0, i32 3
  %1268 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %1267, align 8
  %1269 = bitcast %"struct.SkSL::Modifiers"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %1269) #11
  %1270 = getelementptr inbounds i8, i8* %33, i64 4
  store i8* %1270, i8** %32, align 8, !noalias !8
  %1271 = load i8, i8* %1259, align 1, !noalias !8
  switch i8 %1271, label %1309 [
    i8 16, label %1272
    i8 37, label %1280
    i8 38, label %1287
  ]

1272:                                             ; preds = %1256
  %1273 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 0, i32 0
  store i32 0, i32* %1273, align 8, !alias.scope !8
  %1274 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 0, i32 1
  %1275 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 0, i32 12, i32 0
  %1276 = bitcast i32* %1274 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %1276, i8 -1, i64 40, i1 false) #11, !alias.scope !8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %1275, align 8, !alias.scope !8
  %1277 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %1277, align 8, !alias.scope !8
  %1278 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 0, i32 13
  store i32 0, i32* %1278, align 8, !alias.scope !8
  %1279 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 1
  store i32 0, i32* %1279, align 8, !alias.scope !8
  br label %1317

1280:                                             ; preds = %1256
  %1281 = bitcast %"struct.SkSL::Layout"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1281) #11, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1281, i8 -86, i64 72, i1 false) #11, !noalias !8
  call void @_ZN4SkSL10Rehydrator6layoutEv(%"struct.SkSL::Layout"* nonnull sret %2, %"class.SkSL::Rehydrator"* %0) #11, !noalias !8
  %1282 = load i8*, i8** %32, align 8, !noalias !8
  %1283 = getelementptr inbounds i8, i8* %1282, i64 1
  store i8* %1283, i8** %32, align 8, !noalias !8
  %1284 = load i8, i8* %1282, align 1, !noalias !8
  %1285 = zext i8 %1284 to i32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1269, i8* nonnull align 8 %1281, i64 72, i1 false) #11
  %1286 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 1
  store i32 %1285, i32* %1286, align 8, !alias.scope !8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1281) #11, !noalias !8
  br label %1317

1287:                                             ; preds = %1256
  %1288 = bitcast %"struct.SkSL::Layout"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1288) #11, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1288, i8 -86, i64 72, i1 false) #11, !noalias !8
  call void @_ZN4SkSL10Rehydrator6layoutEv(%"struct.SkSL::Layout"* nonnull sret %3, %"class.SkSL::Rehydrator"* %0) #11, !noalias !8
  %1289 = load i8*, i8** %32, align 8, !noalias !8
  %1290 = getelementptr inbounds i8, i8* %1289, i64 1
  store i8* %1290, i8** %32, align 8, !noalias !8
  %1291 = load i8, i8* %1289, align 1, !noalias !8
  %1292 = getelementptr inbounds i8, i8* %1289, i64 2
  store i8* %1292, i8** %32, align 8, !noalias !8
  %1293 = load i8, i8* %1290, align 1, !noalias !8
  %1294 = getelementptr inbounds i8, i8* %1289, i64 3
  store i8* %1294, i8** %32, align 8, !noalias !8
  %1295 = load i8, i8* %1292, align 1, !noalias !8
  %1296 = getelementptr inbounds i8, i8* %1289, i64 4
  store i8* %1296, i8** %32, align 8, !noalias !8
  %1297 = load i8, i8* %1294, align 1, !noalias !8
  %1298 = zext i8 %1297 to i32
  %1299 = shl nuw i32 %1298, 24
  %1300 = zext i8 %1295 to i32
  %1301 = shl nuw nsw i32 %1300, 16
  %1302 = zext i8 %1293 to i32
  %1303 = shl nuw nsw i32 %1302, 8
  %1304 = zext i8 %1291 to i32
  %1305 = or i32 %1303, %1304
  %1306 = or i32 %1305, %1301
  %1307 = or i32 %1306, %1299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1269, i8* nonnull align 8 %1288, i64 72, i1 false) #11
  %1308 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 1
  store i32 %1307, i32* %1308, align 8, !alias.scope !8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1288) #11, !noalias !8
  br label %1317

1309:                                             ; preds = %1256
  %1310 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 0, i32 0
  store i32 0, i32* %1310, align 8, !alias.scope !8
  %1311 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 0, i32 1
  %1312 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 0, i32 12, i32 0
  %1313 = bitcast i32* %1311 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %1313, i8 -1, i64 40, i1 false) #11, !alias.scope !8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %1312, align 8, !alias.scope !8
  %1314 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %1314, align 8, !alias.scope !8
  %1315 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 0, i32 13
  store i32 0, i32* %1315, align 8, !alias.scope !8
  %1316 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %30, i64 0, i32 1
  store i32 0, i32* %1316, align 8, !alias.scope !8
  br label %1317

1317:                                             ; preds = %1272, %1280, %1287, %1309
  %1318 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %1268, i64 0, i32 0, i32 0
  %1319 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %1318, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %30, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %30) #11
  %1320 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %1319, 0
  %1321 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1320, i64 2
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %1269) #11
  %1322 = ptrtoint %"struct.std::__1::__hash_node_base"* %1321 to i64
  %1323 = load i8*, i8** %32, align 8
  %1324 = getelementptr inbounds i8, i8* %1323, i64 1
  store i8* %1324, i8** %32, align 8
  %1325 = load i8, i8* %1323, align 1
  %1326 = getelementptr inbounds i8, i8* %1323, i64 2
  store i8* %1326, i8** %32, align 8
  %1327 = load i8, i8* %1324, align 1
  %1328 = zext i8 %1327 to i64
  %1329 = shl nuw nsw i64 %1328, 8
  %1330 = zext i8 %1325 to i64
  %1331 = or i64 %1329, %1330
  %1332 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 3
  %1333 = load i8*, i8** %1332, align 8
  %1334 = getelementptr inbounds i8, i8* %1333, i64 %1331
  %1335 = load i8, i8* %1334, align 1
  %1336 = getelementptr inbounds i8, i8* %1334, i64 1
  %1337 = zext i8 %1335 to i64
  %1338 = ptrtoint i8* %1336 to i64
  %1339 = call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %1340 = ptrtoint %"class.SkSL::Symbol"* %1339 to i64
  %1341 = load i8*, i8** %32, align 8
  %1342 = getelementptr inbounds i8, i8* %1341, i64 1
  store i8* %1342, i8** %32, align 8
  %1343 = load i8, i8* %1341, align 1
  %1344 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1, i32 0
  %1345 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %1344, align 8
  %1346 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #11
  %1347 = bitcast i8* %1346 to i32 (...)***
  %1348 = getelementptr inbounds i8, i8* %1346, i64 8
  %1349 = bitcast i8* %1348 to i32*
  store i32 -1, i32* %1349, align 8
  %1350 = getelementptr inbounds i8, i8* %1346, i64 12
  %1351 = bitcast i8* %1350 to i32*
  store i32 15, i32* %1351, align 4
  %1352 = getelementptr inbounds i8, i8* %1346, i64 16
  %1353 = bitcast i8* %1352 to i64*
  store i64 %1338, i64* %1353, align 8
  %1354 = getelementptr inbounds i8, i8* %1346, i64 24
  %1355 = bitcast i8* %1354 to i64*
  store i64 %1337, i64* %1355, align 8
  %1356 = getelementptr inbounds i8, i8* %1346, i64 32
  %1357 = bitcast i8* %1356 to i64*
  store i64 %1340, i64* %1357, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL8VariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1347, align 8
  %1358 = getelementptr inbounds i8, i8* %1346, i64 40
  %1359 = bitcast i8* %1358 to %"class.SkSL::VarDeclaration"**
  store %"class.SkSL::VarDeclaration"* null, %"class.SkSL::VarDeclaration"** %1359, align 8
  %1360 = getelementptr inbounds i8, i8* %1346, i64 48
  %1361 = bitcast i8* %1360 to i64*
  store i64 %1322, i64* %1361, align 8
  %1362 = getelementptr inbounds i8, i8* %1346, i64 56
  store i8 %1343, i8* %1362, align 8
  %1363 = getelementptr inbounds i8, i8* %1346, i64 57
  store i8 1, i8* %1363, align 1
  %1364 = ptrtoint i8* %1346 to i64
  %1365 = bitcast %"class.std::__1::unique_ptr.46"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1365) #11
  %1366 = bitcast %"class.std::__1::unique_ptr.46"* %17 to i64*
  store i64 %1364, i64* %1366, align 8
  %1367 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1345, i64 0, i32 1, i32 0, i32 1
  %1368 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %1367, align 8
  %1369 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1345, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %1370 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %1369, align 8
  %1371 = icmp ult %"class.std::__1::unique_ptr.46"* %1368, %1370
  br i1 %1371, label %1372, label %1378

1372:                                             ; preds = %1317
  %1373 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %1373, align 8
  %1374 = bitcast %"class.std::__1::unique_ptr.46"* %1368 to i64*
  store i64 %1364, i64* %1374, align 8
  %1375 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %1368, i64 1
  %1376 = ptrtoint %"class.std::__1::unique_ptr.46"* %1375 to i64
  %1377 = bitcast %"class.std::__1::unique_ptr.46"** %1367 to i64*
  store i64 %1376, i64* %1377, align 8
  br label %1380

1378:                                             ; preds = %1317
  %1379 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %1345, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.44"* %1379, %"class.std::__1::unique_ptr.46"* nonnull dereferenceable(8) %17) #11
  br label %1380

1380:                                             ; preds = %1378, %1372
  %1381 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %17, i64 0, i32 0, i32 0, i32 0
  %1382 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %1381, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %1381, align 8
  %1383 = icmp eq %"class.SkSL::Symbol"* %1382, null
  br i1 %1383, label %1389, label %1384

1384:                                             ; preds = %1380
  %1385 = bitcast %"class.SkSL::Symbol"* %1382 to void (%"class.SkSL::Symbol"*)***
  %1386 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %1385, align 8
  %1387 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %1386, i64 1
  %1388 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %1387, align 8
  call void %1388(%"class.SkSL::Symbol"* nonnull %1382) #11
  br label %1389

1389:                                             ; preds = %1380, %1384
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1365) #11
  %1390 = bitcast i8* %1346 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL10Rehydrator9addSymbolEiPKNS_6SymbolE(%"class.SkSL::Rehydrator"* %0, i32 %1264, %"class.SkSL::Symbol"* %1390)
  br label %1394

1391:                                             ; preds = %1
  %1392 = zext i8 %35 to i32
  %1393 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 %1392)
  br label %1394

1394:                                             ; preds = %1391, %1389, %1186, %1068, %1066, %986, %826, %648, %498, %336, %217
  %1395 = phi %"class.SkSL::Symbol"* [ null, %1391 ], [ %1390, %1389 ], [ %1180, %1186 ], [ %1093, %1068 ], [ %1067, %1066 ], [ %998, %986 ], [ %820, %826 ], [ %649, %648 ], [ %492, %498 ], [ %337, %336 ], [ %212, %217 ]
  ret %"class.SkSL::Symbol"* %1395
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Type"* @_ZN4SkSL10Rehydrator4typeEv(%"class.SkSL::Rehydrator"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0)
  %3 = bitcast %"class.SkSL::Symbol"* %2 to %"class.SkSL::Type"*
  ret %"class.SkSL::Type"* %3
}

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #2

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* sret, i32) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL10Rehydrator9addSymbolEiPKNS_6SymbolE(%"class.SkSL::Rehydrator"*, i32, %"class.SkSL::Symbol"*) local_unnamed_addr #0 comdat align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast %"class.SkSL::Symbol"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.37"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ugt i64 %12, %4
  br i1 %13, label %87, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.SkSL::Symbol"*** %15 to i64*
  %17 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %5, i64 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %14, %81
  %19 = phi i64 [ %8, %14 ], [ %82, %81 ]
  %20 = phi i64 [ %10, %14 ], [ %83, %81 ]
  %21 = inttoptr i64 %19 to %"class.SkSL::Symbol"**
  %22 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %15, align 8
  %23 = icmp ugt %"class.SkSL::Symbol"** %22, %21
  %24 = ptrtoint %"class.SkSL::Symbol"** %22 to i64
  br i1 %23, label %25, label %29

25:                                               ; preds = %18
  %26 = inttoptr i64 %19 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %21, i64 1
  %28 = ptrtoint %"class.SkSL::Symbol"** %27 to i64
  store i64 %28, i64* %7, align 8
  br label %81

29:                                               ; preds = %18
  %30 = sub i64 %19, %20
  %31 = ashr exact i64 %30, 3
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, 2305843009213693951
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  %35 = bitcast %"class.std::__1::vector.37"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #12
  unreachable

36:                                               ; preds = %29
  %37 = sub i64 %24, %20
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %48

40:                                               ; preds = %36
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %32
  %43 = select i1 %42, i64 %32, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 2305843009213693951
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #12
  unreachable

48:                                               ; preds = %45, %36
  %49 = phi i64 [ %43, %45 ], [ 2305843009213693951, %36 ]
  %50 = shl i64 %49, 3
  %51 = tail call i8* @_Znwm(i64 %50) #13
  %52 = bitcast i8* %51 to %"class.SkSL::Symbol"**
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi %"class.SkSL::Symbol"** [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %55, i64 %31
  %57 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %55, i64 %54
  %58 = ptrtoint %"class.SkSL::Symbol"** %57 to i64
  %59 = bitcast %"class.SkSL::Symbol"** %56 to i64*
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %56, i64 1
  %61 = ptrtoint %"class.SkSL::Symbol"** %60 to i64
  %62 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %17, align 8
  %63 = load i64, i64* %7, align 8
  %64 = ptrtoint %"class.SkSL::Symbol"** %62 to i64
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 3
  %67 = sub nsw i64 0, %66
  %68 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %56, i64 %67
  %69 = ptrtoint %"class.SkSL::Symbol"** %68 to i64
  %70 = icmp sgt i64 %65, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %53
  %72 = bitcast %"class.SkSL::Symbol"** %68 to i8*
  %73 = bitcast %"class.SkSL::Symbol"** %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 %65, i1 false) #11
  %74 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %17, align 8
  br label %75

75:                                               ; preds = %71, %53
  %76 = phi %"class.SkSL::Symbol"** [ %62, %53 ], [ %74, %71 ]
  store i64 %69, i64* %9, align 8
  store i64 %61, i64* %7, align 8
  store i64 %58, i64* %16, align 8
  %77 = icmp eq %"class.SkSL::Symbol"** %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.SkSL::Symbol"** %76 to i8*
  tail call void @_ZdlPv(i8* %79) #13
  %80 = load i64, i64* %7, align 8
  br label %81

81:                                               ; preds = %25, %75, %78
  %82 = phi i64 [ %28, %25 ], [ %61, %75 ], [ %80, %78 ]
  %83 = load i64, i64* %9, align 8
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = icmp ugt i64 %85, %4
  br i1 %86, label %87, label %18

87:                                               ; preds = %81, %3
  %88 = phi i64 [ %10, %3 ], [ %83, %81 ]
  %89 = inttoptr i64 %88 to %"class.SkSL::Symbol"**
  %90 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %89, i64 %4
  store %"class.SkSL::Symbol"* %2, %"class.SkSL::Symbol"** %90, align 8
  ret void
}

declare %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL10Rehydrator8elementsEv(%"class.std::__1::vector.164"* noalias sret, %"class.SkSL::Rehydrator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.166", align 8
  %4 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %1, i64 0, i32 4
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 1
  store i8* %6, i8** %4, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::vector.164"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = bitcast %"class.std::__1::unique_ptr.166"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = tail call %"class.SkSL::ProgramElement"* @_ZN4SkSL10Rehydrator7elementEv(%"class.SkSL::Rehydrator"* %1)
  store %"class.SkSL::ProgramElement"* %12, %"class.SkSL::ProgramElement"** %11, align 8
  %13 = icmp eq %"class.SkSL::ProgramElement"* %12, null
  br i1 %13, label %41, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::unique_ptr.166"** %7 to i64*
  br label %16

16:                                               ; preds = %38, %14
  %17 = phi %"class.SkSL::ProgramElement"* [ %36, %38 ], [ %12, %14 ]
  %18 = phi %"class.std::__1::unique_ptr.166"* [ %40, %38 ], [ null, %14 ]
  %19 = phi %"class.std::__1::unique_ptr.166"* [ %39, %38 ], [ null, %14 ]
  %20 = icmp ult %"class.std::__1::unique_ptr.166"* %19, %18
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = ptrtoint %"class.SkSL::ProgramElement"* %17 to i64
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %11, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.166"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %19, i64 1
  %25 = ptrtoint %"class.std::__1::unique_ptr.166"* %24 to i64
  store i64 %25, i64* %15, align 8
  br label %27

26:                                               ; preds = %16
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.164"* %0, %"class.std::__1::unique_ptr.166"* nonnull dereferenceable(8) %3) #11
  br label %27

27:                                               ; preds = %21, %26
  %28 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %11, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %11, align 8
  %29 = icmp eq %"class.SkSL::ProgramElement"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.SkSL::ProgramElement"* %28 to void (%"class.SkSL::ProgramElement"*)***
  %32 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %32, i64 1
  %34 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %33, align 8
  call void %34(%"class.SkSL::ProgramElement"* nonnull %28) #11
  br label %35

35:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  store %"class.SkSL::ProgramElement"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::ProgramElement"*), %"class.SkSL::ProgramElement"** %11, align 8
  %36 = call %"class.SkSL::ProgramElement"* @_ZN4SkSL10Rehydrator7elementEv(%"class.SkSL::Rehydrator"* %1)
  store %"class.SkSL::ProgramElement"* %36, %"class.SkSL::ProgramElement"** %11, align 8
  %37 = icmp eq %"class.SkSL::ProgramElement"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load %"class.std::__1::unique_ptr.166"*, %"class.std::__1::unique_ptr.166"** %7, align 8
  %40 = load %"class.std::__1::unique_ptr.166"*, %"class.std::__1::unique_ptr.166"** %8, align 8
  br label %16

41:                                               ; preds = %35, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::ProgramElement"* @_ZN4SkSL10Rehydrator7elementEv(%"class.SkSL::Rehydrator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.59", align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %6 = alloca %"class.std::__1::unique_ptr.89", align 8
  %7 = alloca %"class.std::__1::unordered_set.95", align 8
  %8 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 4
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 1
  store i8* %13, i8** %11, align 8
  %14 = load i8, i8* %12, align 1
  switch i8 %14, label %337 [
    i8 21, label %15
    i8 29, label %132
    i8 34, label %227
    i8 55, label %312
    i8 43, label %326
  ]

15:                                               ; preds = %1
  %16 = getelementptr inbounds i8, i8* %12, i64 2
  store i8* %16, i8** %11, align 8
  %17 = load i8, i8* %13, align 1
  %18 = getelementptr inbounds i8, i8* %12, i64 3
  store i8* %18, i8** %11, align 8
  %19 = load i8, i8* %16, align 1
  %20 = zext i8 %19 to i64
  %21 = shl nuw nsw i64 %20, 8
  %22 = zext i8 %17 to i64
  %23 = or i64 %21, %22
  %24 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 3
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %23
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds i8, i8* %26, i64 1
  %29 = zext i8 %27 to i64
  %30 = ptrtoint i8* %28 to i64
  %31 = tail call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL10Rehydrator11symbolTableEb(%"class.SkSL::Rehydrator"* %0, i1 zeroext false)
  %32 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %31, 0
  %33 = ptrtoint %"class.SkSL::SymbolTable"* %32 to i64
  %34 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %31, 1
  %35 = ptrtoint %"class.std::__1::__shared_weak_count"* %34 to i64
  %36 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %32, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %32, i64 0, i32 1, i32 0, i32 1
  %39 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %38, align 8
  %40 = icmp eq %"class.std::__1::unique_ptr.46"* %37, %39
  br i1 %40, label %50, label %41

41:                                               ; preds = %15
  %42 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %43 = bitcast %"class.std::__1::unique_ptr.59"* %2 to i8*
  %44 = bitcast %"class.std::__1::unique_ptr.59"* %2 to i64*
  %45 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %32, i64 0, i32 3, i32 0, i32 1
  %46 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %32, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %47 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %32, i64 0, i32 3
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %2, i64 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.std::__1::unique_ptr.59"** %45 to i64*
  br label %68

50:                                               ; preds = %129, %15
  %51 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 56) #11
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i32*
  store i32 -1, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %51, i64 12
  %55 = bitcast i8* %54 to i32*
  store i32 0, i32* %55, align 4
  %56 = bitcast i8* %51 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL4EnumE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = getelementptr inbounds i8, i8* %51, i64 16
  %58 = bitcast i8* %57 to i64*
  store i64 %30, i64* %58, align 8
  %59 = getelementptr inbounds i8, i8* %51, i64 24
  %60 = bitcast i8* %59 to i64*
  store i64 %29, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %51, i64 32
  %62 = bitcast i8* %61 to i64*
  store i64 %33, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %51, i64 40
  %64 = bitcast i8* %63 to i64*
  store i64 %35, i64* %64, align 8
  %65 = getelementptr inbounds i8, i8* %51, i64 48
  store i8 1, i8* %65, align 8
  %66 = getelementptr inbounds i8, i8* %51, i64 49
  store i8 1, i8* %66, align 1
  %67 = ptrtoint i8* %51 to i64
  br label %337

68:                                               ; preds = %41, %129
  %69 = phi %"class.std::__1::unique_ptr.46"* [ %37, %41 ], [ %130, %129 ]
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %70, align 8
  %72 = bitcast %"class.SkSL::Symbol"* %71 to %"class.SkSL::Variable"*
  %73 = load i8*, i8** %11, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 1
  store i8* %74, i8** %11, align 8
  %75 = load i8, i8* %73, align 1
  %76 = getelementptr inbounds i8, i8* %73, i64 2
  store i8* %76, i8** %11, align 8
  %77 = load i8, i8* %74, align 1
  %78 = getelementptr inbounds i8, i8* %73, i64 3
  store i8* %78, i8** %11, align 8
  %79 = load i8, i8* %76, align 1
  %80 = getelementptr inbounds i8, i8* %73, i64 4
  store i8* %80, i8** %11, align 8
  %81 = load i8, i8* %78, align 1
  %82 = zext i8 %81 to i32
  %83 = shl nuw i32 %82, 24
  %84 = zext i8 %79 to i32
  %85 = shl nuw nsw i32 %84, 16
  %86 = zext i8 %77 to i32
  %87 = shl nuw nsw i32 %86, 8
  %88 = zext i8 %75 to i32
  %89 = or i32 %87, %88
  %90 = or i32 %89, %85
  %91 = or i32 %90, %83
  %92 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %42, align 8
  %93 = sext i32 %91 to i64
  %94 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %92, i64 0, i32 0, i32 31, i32 0, i32 0, i32 0
  %95 = bitcast %"class.SkSL::Type"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #11
  %98 = bitcast i8* %97 to i32 (...)***
  %99 = getelementptr inbounds i8, i8* %97, i64 8
  %100 = bitcast i8* %99 to i32*
  store i32 -1, i32* %100, align 8
  %101 = getelementptr inbounds i8, i8* %97, i64 12
  %102 = bitcast i8* %101 to i32*
  store i32 43, i32* %102, align 4
  %103 = getelementptr inbounds i8, i8* %97, i64 16
  %104 = bitcast i8* %103 to i64*
  store i64 %96, i64* %104, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %105 = getelementptr inbounds i8, i8* %97, i64 24
  %106 = bitcast i8* %105 to i64*
  store i64 %93, i64* %106, align 8
  %107 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %42, align 8
  %108 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %71, i64 0, i32 2
  %109 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %108, align 8
  %110 = bitcast i8* %97 to %"class.SkSL::Expression"*
  %111 = call %"class.SkSL::Statement"* @_ZN4SkSL14VarDeclaration4MakeERKNS_7ContextEPNS_8VariableEPKNS_4TypeEiNSt3__110unique_ptrINS_10ExpressionENS9_14default_deleteISB_EEEE(%"class.SkSL::Context"* dereferenceable(744) %107, %"class.SkSL::Variable"* %72, %"class.SkSL::Type"* %109, i32 0, %"class.SkSL::Expression"* %110) #11
  %112 = ptrtoint %"class.SkSL::Statement"* %111 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  store i64 %112, i64* %44, align 8
  %113 = load %"class.std::__1::unique_ptr.59"*, %"class.std::__1::unique_ptr.59"** %45, align 8
  %114 = load %"class.std::__1::unique_ptr.59"*, %"class.std::__1::unique_ptr.59"** %46, align 8
  %115 = icmp ult %"class.std::__1::unique_ptr.59"* %113, %114
  br i1 %115, label %116, label %120

116:                                              ; preds = %68
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %48, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.59"* %113 to i64*
  store i64 %112, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %113, i64 1
  %119 = ptrtoint %"class.std::__1::unique_ptr.59"* %118 to i64
  store i64 %119, i64* %49, align 8
  br label %121

120:                                              ; preds = %68
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL6IRNodeENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.57"* %47, %"class.std::__1::unique_ptr.59"* nonnull dereferenceable(8) %2) #11
  br label %121

121:                                              ; preds = %120, %116
  %122 = load %"class.SkSL::IRNode"*, %"class.SkSL::IRNode"** %48, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %48, align 8
  %123 = icmp eq %"class.SkSL::IRNode"* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %121
  %125 = bitcast %"class.SkSL::IRNode"* %122 to void (%"class.SkSL::IRNode"*)***
  %126 = load void (%"class.SkSL::IRNode"*)**, void (%"class.SkSL::IRNode"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %126, i64 1
  %128 = load void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %127, align 8
  call void %128(%"class.SkSL::IRNode"* nonnull %122) #11
  br label %129

129:                                              ; preds = %121, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %69, i64 1
  %131 = icmp eq %"class.std::__1::unique_ptr.46"* %130, %39
  br i1 %131, label %50, label %68

132:                                              ; preds = %1
  %133 = bitcast %"class.SkSL::FunctionDeclaration"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #11
  store %"class.SkSL::FunctionDeclaration"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::FunctionDeclaration"*), %"class.SkSL::FunctionDeclaration"** %5, align 8
  %134 = getelementptr inbounds i8, i8* %12, i64 2
  store i8* %134, i8** %11, align 8
  %135 = load i8, i8* %13, align 1
  %136 = getelementptr inbounds i8, i8* %12, i64 3
  store i8* %136, i8** %11, align 8
  %137 = load i8, i8* %134, align 1
  %138 = zext i8 %137 to i64
  %139 = shl nuw nsw i64 %138, 8
  %140 = zext i8 %135 to i64
  %141 = or i64 %139, %140
  %142 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 2, i32 0, i32 0
  %143 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %142, align 8
  %144 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %143, i64 %141
  %145 = bitcast %"class.SkSL::Symbol"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.SkSL::FunctionDeclaration"** %5 to i64*
  store i64 %146, i64* %147, align 8
  %148 = bitcast %"class.std::__1::unique_ptr.89"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #11
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %6, i64 0, i32 0, i32 0, i32 0
  %150 = tail call %"class.SkSL::Statement"* @_ZN4SkSL10Rehydrator9statementEv(%"class.SkSL::Rehydrator"* %0)
  store %"class.SkSL::Statement"* %150, %"class.SkSL::Statement"** %149, align 8
  %151 = bitcast %"class.std::__1::unordered_set.95"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %151) #11
  %152 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %7, i64 0, i32 0, i32 4, i64 0
  %155 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %7, i64 0, i32 0, i32 3
  %156 = bitcast %"class.std::__1::__compressed_pair.115"* %155 to i32*
  %157 = bitcast i8* %154 to i32*
  store i32 -1431655766, i32* %157, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %151, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %156, align 8
  %158 = load i8*, i8** %11, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 1
  store i8* %159, i8** %11, align 8
  %160 = load i8, i8* %158, align 1
  %161 = zext i8 %160 to i32
  %162 = icmp eq i8 %160, 0
  br i1 %162, label %181, label %163

163:                                              ; preds = %132
  %164 = bitcast %"class.SkSL::FunctionDeclaration"** %8 to i8*
  %165 = bitcast %"class.SkSL::FunctionDeclaration"** %8 to i64*
  %166 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #11
  %167 = getelementptr inbounds i8, i8* %158, i64 2
  store i8* %167, i8** %11, align 8
  %168 = load i8, i8* %159, align 1
  %169 = getelementptr inbounds i8, i8* %158, i64 3
  store i8* %169, i8** %11, align 8
  %170 = load i8, i8* %167, align 1
  %171 = zext i8 %170 to i64
  %172 = shl nuw nsw i64 %171, 8
  %173 = zext i8 %168 to i64
  %174 = or i64 %172, %173
  %175 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %142, align 8
  %176 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %175, i64 %174
  %177 = bitcast %"class.SkSL::Symbol"** %176 to i64*
  %178 = load i64, i64* %177, align 8
  store i64 %178, i64* %165, align 8
  %179 = call { %"struct.std::__1::__hash_node_base.100"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.96"* nonnull %166, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %8, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #11
  %180 = icmp eq i8 %160, 1
  br i1 %180, label %181, label %209

181:                                              ; preds = %209, %163, %132
  %182 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %182) #11
  store i32 -1, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11
  store i8 1, i8* %10, align 1
  %183 = call %"class.SkSL::FunctionDefinition"* @_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJiRPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS8_EEEENS_13unordered_setIS5_NS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* nonnull dereferenceable(4) %9, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %5, i8* nonnull dereferenceable(1) %10, %"class.std::__1::unique_ptr.89"* nonnull dereferenceable(8) %6, %"class.std::__1::unordered_set.95"* nonnull dereferenceable(40) %7)
  %184 = ptrtoint %"class.SkSL::FunctionDefinition"* %183 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %182) #11
  %185 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %5, align 8
  %186 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %185, i64 0, i32 1
  store %"class.SkSL::FunctionDefinition"* %183, %"class.SkSL::FunctionDefinition"** %186, align 8
  %187 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %153, align 8
  %188 = icmp eq %"struct.std::__1::__hash_node_base.100"* %187, null
  br i1 %188, label %195, label %189

189:                                              ; preds = %181, %189
  %190 = phi %"struct.std::__1::__hash_node_base.100"* [ %192, %189 ], [ %187, %181 ]
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %190, i64 0, i32 0
  %192 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %191, align 8
  %193 = bitcast %"struct.std::__1::__hash_node_base.100"* %190 to i8*
  call void @_ZdlPv(i8* %193) #13
  %194 = icmp eq %"struct.std::__1::__hash_node_base.100"* %192, null
  br i1 %194, label %195, label %189

195:                                              ; preds = %189, %181
  %196 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %152, align 8
  store %"struct.std::__1::__hash_node_base.100"** null, %"struct.std::__1::__hash_node_base.100"*** %152, align 8
  %197 = icmp eq %"struct.std::__1::__hash_node_base.100"** %196, null
  br i1 %197, label %200, label %198

198:                                              ; preds = %195
  %199 = bitcast %"struct.std::__1::__hash_node_base.100"** %196 to i8*
  call void @_ZdlPv(i8* %199) #13
  br label %200

200:                                              ; preds = %195, %198
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %151) #11
  %201 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %149, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %149, align 8
  %202 = icmp eq %"class.SkSL::Statement"* %201, null
  br i1 %202, label %208, label %203

203:                                              ; preds = %200
  %204 = bitcast %"class.SkSL::Statement"* %201 to void (%"class.SkSL::Statement"*)***
  %205 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %205, i64 1
  %207 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %206, align 8
  call void %207(%"class.SkSL::Statement"* nonnull %201) #11
  br label %208

208:                                              ; preds = %200, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #11
  br label %337

209:                                              ; preds = %163, %209
  %210 = phi i32 [ %225, %209 ], [ 1, %163 ]
  %211 = load i8*, i8** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #11
  %212 = getelementptr inbounds i8, i8* %211, i64 1
  store i8* %212, i8** %11, align 8
  %213 = load i8, i8* %211, align 1
  %214 = getelementptr inbounds i8, i8* %211, i64 2
  store i8* %214, i8** %11, align 8
  %215 = load i8, i8* %212, align 1
  %216 = zext i8 %215 to i64
  %217 = shl nuw nsw i64 %216, 8
  %218 = zext i8 %213 to i64
  %219 = or i64 %217, %218
  %220 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %142, align 8
  %221 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %220, i64 %219
  %222 = bitcast %"class.SkSL::Symbol"** %221 to i64*
  %223 = load i64, i64* %222, align 8
  store i64 %223, i64* %165, align 8
  %224 = call { %"struct.std::__1::__hash_node_base.100"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.96"* nonnull %166, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %8, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #11
  %225 = add nuw nsw i32 %210, 1
  %226 = icmp eq i32 %225, %161
  br i1 %226, label %181, label %209

227:                                              ; preds = %1
  %228 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0)
  %229 = load i8*, i8** %11, align 8
  %230 = getelementptr inbounds i8, i8* %229, i64 1
  store i8* %230, i8** %11, align 8
  %231 = load i8, i8* %229, align 1
  %232 = getelementptr inbounds i8, i8* %229, i64 2
  store i8* %232, i8** %11, align 8
  %233 = load i8, i8* %230, align 1
  %234 = zext i8 %233 to i64
  %235 = shl nuw nsw i64 %234, 8
  %236 = zext i8 %231 to i64
  %237 = or i64 %235, %236
  %238 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 3
  %239 = load i8*, i8** %238, align 8
  %240 = getelementptr inbounds i8, i8* %239, i64 %237
  %241 = load i8, i8* %240, align 1
  %242 = getelementptr inbounds i8, i8* %240, i64 1
  %243 = zext i8 %241 to i64
  %244 = getelementptr inbounds i8, i8* %229, i64 3
  store i8* %244, i8** %11, align 8
  %245 = load i8, i8* %232, align 1
  %246 = getelementptr inbounds i8, i8* %229, i64 4
  store i8* %246, i8** %11, align 8
  %247 = load i8, i8* %244, align 1
  %248 = zext i8 %247 to i64
  %249 = shl nuw nsw i64 %248, 8
  %250 = zext i8 %245 to i64
  %251 = or i64 %249, %250
  %252 = getelementptr inbounds i8, i8* %239, i64 %251
  %253 = load i8, i8* %252, align 1
  %254 = getelementptr inbounds i8, i8* %252, i64 1
  %255 = zext i8 %253 to i64
  %256 = getelementptr inbounds i8, i8* %229, i64 5
  store i8* %256, i8** %11, align 8
  %257 = load i8, i8* %246, align 1
  %258 = sext i8 %257 to i32
  %259 = ptrtoint %"class.SkSL::Symbol"* %228 to i64
  %260 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %260)
  %261 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %261)
  %262 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 96) #11
  %263 = icmp ult i8 %241, 23
  br i1 %263, label %272, label %264

264:                                              ; preds = %227
  %265 = add nuw nsw i64 %243, 16
  %266 = and i64 %265, 496
  %267 = tail call i8* @_Znwm(i64 %266) #13
  %268 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %267, i8** %268, align 8
  %269 = or i64 %266, -9223372036854775808
  %270 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %269, i64* %270, align 8
  %271 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %243, i64* %271, align 8
  br label %276

272:                                              ; preds = %227
  %273 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %274 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %273, i64 0, i32 1, i32 0
  store i8 %241, i8* %274, align 1
  %275 = icmp eq i8 %241, 0
  br i1 %275, label %278, label %276

276:                                              ; preds = %272, %264
  %277 = phi i8* [ %267, %264 ], [ %260, %272 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %277, i8* align 1 %242, i64 %243, i1 false) #11
  br label %278

278:                                              ; preds = %272, %276
  %279 = phi i8* [ %260, %272 ], [ %277, %276 ]
  %280 = getelementptr inbounds i8, i8* %279, i64 %243
  store i8 0, i8* %280, align 1
  %281 = icmp ult i8 %253, 23
  br i1 %281, label %290, label %282

282:                                              ; preds = %278
  %283 = add nuw nsw i64 %255, 16
  %284 = and i64 %283, 496
  %285 = tail call i8* @_Znwm(i64 %284) #13
  %286 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %285, i8** %286, align 8
  %287 = or i64 %284, -9223372036854775808
  %288 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %287, i64* %288, align 8
  %289 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %255, i64* %289, align 8
  br label %294

290:                                              ; preds = %278
  %291 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %292 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %291, i64 0, i32 1, i32 0
  store i8 %253, i8* %292, align 1
  %293 = icmp eq i8 %253, 0
  br i1 %293, label %296, label %294

294:                                              ; preds = %290, %282
  %295 = phi i8* [ %261, %290 ], [ %285, %282 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %295, i8* align 1 %254, i64 %255, i1 false) #11
  br label %296

296:                                              ; preds = %294, %290
  %297 = phi i8* [ %261, %290 ], [ %295, %294 ]
  %298 = getelementptr inbounds i8, i8* %297, i64 %255
  store i8 0, i8* %298, align 1
  %299 = getelementptr inbounds i8, i8* %262, i64 8
  %300 = bitcast i8* %299 to i32*
  store i32 -1, i32* %300, align 8
  %301 = getelementptr inbounds i8, i8* %262, i64 12
  %302 = bitcast i8* %301 to i32*
  store i32 5, i32* %302, align 4
  %303 = bitcast i8* %262 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %303, align 8
  %304 = getelementptr inbounds i8, i8* %262, i64 16
  %305 = bitcast i8* %304 to i64*
  store i64 %259, i64* %305, align 8
  %306 = getelementptr inbounds i8, i8* %262, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %306, i8* nonnull align 8 %260, i64 24, i1 false) #11
  %307 = getelementptr inbounds i8, i8* %262, i64 48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %307, i8* nonnull align 8 %261, i64 24, i1 false) #11
  %308 = getelementptr inbounds i8, i8* %262, i64 72
  %309 = bitcast i8* %308 to i32*
  store i32 %258, i32* %309, align 8
  %310 = getelementptr inbounds i8, i8* %262, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %310, i8 0, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %260)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %261)
  %311 = ptrtoint i8* %262 to i64
  br label %337

312:                                              ; preds = %1
  %313 = tail call %"class.SkSL::Statement"* @_ZN4SkSL10Rehydrator9statementEv(%"class.SkSL::Rehydrator"* %0)
  %314 = ptrtoint %"class.SkSL::Statement"* %313 to i64
  %315 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #11
  %316 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %313, i64 0, i32 0, i32 1
  %317 = load i32, i32* %316, align 8
  %318 = getelementptr inbounds i8, i8* %315, i64 8
  %319 = bitcast i8* %318 to i32*
  store i32 %317, i32* %319, align 8
  %320 = getelementptr inbounds i8, i8* %315, i64 12
  %321 = bitcast i8* %320 to i32*
  store i32 4, i32* %321, align 4
  %322 = bitcast i8* %315 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20GlobalVarDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %322, align 8
  %323 = getelementptr inbounds i8, i8* %315, i64 16
  %324 = bitcast i8* %323 to i64*
  store i64 %314, i64* %324, align 8
  %325 = ptrtoint i8* %315 to i64
  br label %337

326:                                              ; preds = %1
  %327 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0)
  %328 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #11
  %329 = getelementptr inbounds i8, i8* %328, i64 8
  %330 = bitcast i8* %329 to i32*
  store i32 -1, i32* %330, align 8
  %331 = getelementptr inbounds i8, i8* %328, i64 12
  %332 = bitcast i8* %331 to i32*
  store i32 8, i32* %332, align 4
  %333 = bitcast i8* %328 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL16StructDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %333, align 8
  %334 = getelementptr inbounds i8, i8* %328, i64 16
  %335 = bitcast i8* %334 to %"class.SkSL::Symbol"**
  store %"class.SkSL::Symbol"* %327, %"class.SkSL::Symbol"** %335, align 8
  %336 = ptrtoint i8* %328 to i64
  br label %337

337:                                              ; preds = %1, %326, %312, %296, %208, %50
  %338 = phi i64 [ %336, %326 ], [ %325, %312 ], [ %311, %296 ], [ %184, %208 ], [ %67, %50 ], [ 0, %1 ]
  %339 = inttoptr i64 %338 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %339
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL10Rehydrator11symbolTableEb(%"class.SkSL::Rehydrator"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.37", align 8
  %4 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 4
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 1
  store i8* %6, i8** %4, align 8
  %7 = load i8, i8* %5, align 1
  %8 = icmp eq i8 %7, 57
  br i1 %8, label %281, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %5, i64 2
  store i8* %10, i8** %4, align 8
  %11 = load i8, i8* %6, align 1
  %12 = getelementptr inbounds i8, i8* %5, i64 3
  store i8* %12, i8** %4, align 8
  %13 = load i8, i8* %10, align 1
  %14 = zext i8 %13 to i16
  %15 = shl nuw i16 %14, 8
  %16 = zext i8 %11 to i16
  %17 = or i16 %15, %16
  %18 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1
  %19 = bitcast %"class.std::__1::shared_ptr"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1, i32 1
  %22 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %21, align 8
  %23 = icmp eq %"class.std::__1::__shared_weak_count"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %22, i64 0, i32 0, i32 1
  %26 = atomicrmw add i64* %25, i64 1 monotonic
  br label %27

27:                                               ; preds = %9, %24
  br i1 %1, label %28, label %67

28:                                               ; preds = %27
  %29 = tail call i8* @_Znwm(i64 128) #13
  %30 = bitcast i8* %29 to i32 (...)***
  %31 = getelementptr inbounds i8, i8* %29, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %32 = getelementptr inbounds i8, i8* %29, i64 24
  %33 = load i64, i64* %19, align 8
  %34 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %21, align 8
  %35 = icmp eq %"class.std::__1::__shared_weak_count"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %28
  %37 = bitcast i8* %32 to i64*
  store i64 %33, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %29, i64 32
  %39 = bitcast i8* %38 to %"class.std::__1::__shared_weak_count"**
  store %"class.std::__1::__shared_weak_count"* null, %"class.std::__1::__shared_weak_count"** %39, align 8
  br label %47

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %34, i64 0, i32 0, i32 1
  %42 = atomicrmw add i64* %41, i64 1 monotonic
  %43 = bitcast i8* %32 to i64*
  store i64 %33, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %29, i64 32
  %45 = bitcast i8* %44 to %"class.std::__1::__shared_weak_count"**
  store %"class.std::__1::__shared_weak_count"* %34, %"class.std::__1::__shared_weak_count"** %45, align 8
  %46 = atomicrmw add i64* %41, i64 1 monotonic
  br label %47

47:                                               ; preds = %40, %36
  %48 = inttoptr i64 %33 to %"class.SkSL::SymbolTable"*
  %49 = getelementptr inbounds i8, i8* %29, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %29, i64 64
  store i8 1, i8* %50, align 8
  %51 = getelementptr inbounds i8, i8* %29, i64 72
  %52 = getelementptr inbounds i8, i8* %29, i64 120
  %53 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %48, i64 0, i32 6
  %54 = bitcast %"class.SkSL::ErrorReporter"** %53 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 48, i1 false) #11
  %55 = load i64, i64* %54, align 8
  %56 = bitcast i8* %52 to i64*
  store i64 %55, i64* %56, align 8
  br i1 %35, label %81, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %34, i64 0, i32 0, i32 1
  %59 = atomicrmw add i64* %58, i64 -1 acq_rel
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %81

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %34, i64 0, i32 0
  %63 = bitcast %"class.std::__1::__shared_weak_count"* %34 to void (%"class.std::__1::__shared_count"*)***
  %64 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %64, i64 2
  %66 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %65, align 8
  tail call void %66(%"class.std::__1::__shared_count"* %62) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %34) #11
  br label %81

67:                                               ; preds = %27
  %68 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %69 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %68, align 8
  %70 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %69, i64 0, i32 1
  %71 = bitcast %"class.SkSL::ErrorReporter"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = tail call i8* @_Znwm(i64 128) #13
  %74 = bitcast i8* %73 to i32 (...)***
  %75 = getelementptr inbounds i8, i8* %73, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %76 = getelementptr inbounds i8, i8* %73, i64 64
  %77 = getelementptr inbounds i8, i8* %73, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 40, i1 false) #11
  store i8 1, i8* %76, align 8
  %78 = getelementptr inbounds i8, i8* %73, i64 72
  %79 = getelementptr inbounds i8, i8* %73, i64 120
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 48, i1 false) #11
  %80 = bitcast i8* %79 to i64*
  store i64 %72, i64* %80, align 8
  br label %81

81:                                               ; preds = %61, %57, %47, %67
  %82 = phi i8* [ %77, %67 ], [ %32, %47 ], [ %32, %57 ], [ %32, %61 ]
  %83 = phi i8* [ %73, %67 ], [ %29, %47 ], [ %29, %57 ], [ %29, %61 ]
  %84 = ptrtoint i8* %83 to i64
  %85 = ptrtoint i8* %82 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 8
  %87 = bitcast i8* %86 to i64*
  %88 = atomicrmw add i64* %87, i64 1 monotonic
  store i64 %85, i64* %19, align 8
  %89 = bitcast %"class.std::__1::__shared_weak_count"** %21 to i64*
  %90 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %21, align 8
  store i64 %84, i64* %89, align 8
  %91 = icmp eq %"class.std::__1::__shared_weak_count"* %90, null
  br i1 %91, label %102, label %92

92:                                               ; preds = %81
  %93 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %90, i64 0, i32 0, i32 1
  %94 = atomicrmw add i64* %93, i64 -1 acq_rel
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %102

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %90, i64 0, i32 0
  %98 = bitcast %"class.std::__1::__shared_weak_count"* %90 to void (%"class.std::__1::__shared_count"*)***
  %99 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %99, i64 2
  %101 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %100, align 8
  tail call void %101(%"class.std::__1::__shared_count"* %97) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %90) #11
  br label %102

102:                                              ; preds = %81, %92, %96
  %103 = bitcast %"class.std::__1::vector.37"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #11
  %104 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %3, i64 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %3, i64 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 0, i64 24, i1 false) #11
  %107 = zext i16 %17 to i64
  %108 = bitcast %"class.SkSL::Symbol"*** %106 to i64*
  %109 = bitcast %"class.std::__1::vector.37"* %3 to i64*
  %110 = icmp eq i16 %17, 0
  br i1 %110, label %123, label %111

111:                                              ; preds = %102
  %112 = bitcast %"class.SkSL::Symbol"*** %105 to i64*
  %113 = shl nuw nsw i64 %107, 3
  %114 = tail call i8* @_Znwm(i64 %113) #13
  %115 = bitcast i8* %114 to %"class.SkSL::Symbol"**
  %116 = ptrtoint i8* %114 to i64
  %117 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %115, i64 %107
  %118 = ptrtoint %"class.SkSL::Symbol"** %117 to i64
  %119 = ptrtoint i8* %114 to i64
  store i64 %119, i64* %109, align 8
  store i64 %116, i64* %112, align 8
  store i64 %118, i64* %108, align 8
  %120 = bitcast i8* %114 to %"class.SkSL::Symbol"**
  %121 = zext i16 %17 to i32
  %122 = bitcast %"class.SkSL::Symbol"*** %105 to i64*
  br label %154

123:                                              ; preds = %216, %102
  %124 = phi %"class.SkSL::Symbol"** [ null, %102 ], [ %217, %216 ]
  %125 = load i8*, i8** %4, align 8
  %126 = getelementptr inbounds i8, i8* %125, i64 1
  store i8* %126, i8** %4, align 8
  %127 = load i8, i8* %125, align 1
  %128 = getelementptr inbounds i8, i8* %125, i64 2
  store i8* %128, i8** %4, align 8
  %129 = load i8, i8* %126, align 1
  %130 = zext i8 %129 to i16
  %131 = shl nuw i16 %130, 8
  %132 = zext i8 %127 to i16
  %133 = or i16 %131, %132
  %134 = icmp eq i16 %133, 0
  br i1 %134, label %224, label %135

135:                                              ; preds = %123
  %136 = zext i16 %133 to i64
  %137 = mul nuw nsw i64 %136, 24
  %138 = tail call i8* @_Znwm(i64 %137) #13
  %139 = bitcast i8* %138 to %"struct.std::__1::pair.247"*
  %140 = zext i16 %133 to i32
  %141 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %18, i64 0, i32 0
  %142 = getelementptr inbounds i8, i8* %125, i64 3
  store i8* %142, i8** %4, align 8
  %143 = load i8, i8* %128, align 1
  %144 = getelementptr inbounds i8, i8* %125, i64 4
  store i8* %144, i8** %4, align 8
  %145 = load i8, i8* %142, align 1
  %146 = zext i8 %145 to i64
  %147 = shl nuw nsw i64 %146, 8
  %148 = zext i8 %143 to i64
  %149 = or i64 %147, %148
  %150 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %141, align 8
  %151 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %124, i64 %149
  %152 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %151, align 8
  tail call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %150, %"class.SkSL::Symbol"* %152) #11
  %153 = icmp eq i16 %133, 1
  br i1 %153, label %224, label %265

154:                                              ; preds = %222, %111
  %155 = phi %"class.SkSL::Symbol"** [ %120, %111 ], [ %217, %222 ]
  %156 = phi i64 [ %116, %111 ], [ %218, %222 ]
  %157 = phi %"class.SkSL::Symbol"** [ %117, %111 ], [ %223, %222 ]
  %158 = phi %"class.SkSL::Symbol"** [ %115, %111 ], [ %219, %222 ]
  %159 = phi i32 [ 0, %111 ], [ %220, %222 ]
  %160 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0)
  %161 = ptrtoint %"class.SkSL::Symbol"* %160 to i64
  %162 = icmp ult %"class.SkSL::Symbol"** %158, %157
  %163 = ptrtoint %"class.SkSL::Symbol"** %157 to i64
  br i1 %162, label %164, label %168

164:                                              ; preds = %154
  %165 = bitcast %"class.SkSL::Symbol"** %158 to i64*
  store i64 %161, i64* %165, align 8
  %166 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %158, i64 1
  %167 = ptrtoint %"class.SkSL::Symbol"** %166 to i64
  store i64 %167, i64* %122, align 8
  br label %216

168:                                              ; preds = %154
  %169 = ptrtoint %"class.SkSL::Symbol"** %158 to i64
  %170 = load i64, i64* %109, align 8
  %171 = sub i64 %169, %170
  %172 = ashr exact i64 %171, 3
  %173 = add nsw i64 %172, 1
  %174 = icmp ugt i64 %173, 2305843009213693951
  br i1 %174, label %175, label %177

175:                                              ; preds = %168
  %176 = bitcast %"class.std::__1::vector.37"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %176) #12
  unreachable

177:                                              ; preds = %168
  %178 = sub i64 %163, %170
  %179 = ashr exact i64 %178, 3
  %180 = icmp ult i64 %179, 1152921504606846975
  br i1 %180, label %181, label %189

181:                                              ; preds = %177
  %182 = ashr exact i64 %178, 2
  %183 = icmp ult i64 %182, %173
  %184 = select i1 %183, i64 %173, i64 %182
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %194, label %186

186:                                              ; preds = %181
  %187 = icmp ugt i64 %184, 2305843009213693951
  br i1 %187, label %188, label %189

188:                                              ; preds = %186
  tail call void @abort() #12
  unreachable

189:                                              ; preds = %186, %177
  %190 = phi i64 [ %184, %186 ], [ 2305843009213693951, %177 ]
  %191 = shl i64 %190, 3
  %192 = tail call i8* @_Znwm(i64 %191) #13
  %193 = bitcast i8* %192 to %"class.SkSL::Symbol"**
  br label %194

194:                                              ; preds = %189, %181
  %195 = phi i64 [ %190, %189 ], [ 0, %181 ]
  %196 = phi %"class.SkSL::Symbol"** [ %193, %189 ], [ null, %181 ]
  %197 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %196, i64 %172
  %198 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %196, i64 %195
  %199 = ptrtoint %"class.SkSL::Symbol"** %198 to i64
  %200 = bitcast %"class.SkSL::Symbol"** %197 to i64*
  store i64 %161, i64* %200, align 8
  %201 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %197, i64 1
  %202 = ptrtoint %"class.SkSL::Symbol"** %201 to i64
  %203 = sub i64 %156, %170
  %204 = ashr exact i64 %203, 3
  %205 = sub nsw i64 0, %204
  %206 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %197, i64 %205
  %207 = ptrtoint %"class.SkSL::Symbol"** %206 to i64
  %208 = icmp sgt i64 %203, 0
  br i1 %208, label %209, label %212

209:                                              ; preds = %194
  %210 = bitcast %"class.SkSL::Symbol"** %206 to i8*
  %211 = inttoptr i64 %170 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* align 8 %211, i64 %203, i1 false) #11
  br label %212

212:                                              ; preds = %209, %194
  store i64 %207, i64* %109, align 8
  store i64 %202, i64* %122, align 8
  store i64 %199, i64* %108, align 8
  %213 = icmp eq i64 %170, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %212
  %215 = inttoptr i64 %170 to i8*
  tail call void @_ZdlPv(i8* %215) #13
  br label %216

216:                                              ; preds = %164, %212, %214
  %217 = phi %"class.SkSL::Symbol"** [ %155, %164 ], [ %206, %212 ], [ %206, %214 ]
  %218 = phi i64 [ %167, %164 ], [ %202, %212 ], [ %202, %214 ]
  %219 = phi %"class.SkSL::Symbol"** [ %166, %164 ], [ %201, %212 ], [ %201, %214 ]
  %220 = add nuw nsw i32 %159, 1
  %221 = icmp eq i32 %220, %121
  br i1 %221, label %123, label %222

222:                                              ; preds = %216
  %223 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %106, align 8
  br label %154

224:                                              ; preds = %265, %135, %123
  %225 = phi %"struct.std::__1::pair.247"* [ null, %123 ], [ %139, %135 ], [ %139, %265 ]
  %226 = phi i8* [ null, %123 ], [ %138, %135 ], [ %138, %265 ]
  %227 = ptrtoint %"class.std::__1::__shared_weak_count"* %22 to i64
  br i1 %23, label %231, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %22, i64 0, i32 0, i32 1
  %230 = atomicrmw add i64* %229, i64 1 monotonic
  br label %231

231:                                              ; preds = %228, %224
  store i64 %20, i64* %19, align 8
  %232 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %21, align 8
  store i64 %227, i64* %89, align 8
  %233 = icmp eq %"class.std::__1::__shared_weak_count"* %232, null
  br i1 %233, label %244, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %232, i64 0, i32 0, i32 1
  %236 = atomicrmw add i64* %235, i64 -1 acq_rel
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %244

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %232, i64 0, i32 0
  %240 = bitcast %"class.std::__1::__shared_weak_count"* %232 to void (%"class.std::__1::__shared_count"*)***
  %241 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %240, align 8
  %242 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %241, i64 2
  %243 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %242, align 8
  tail call void %243(%"class.std::__1::__shared_count"* %239) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %232) #11
  br label %244

244:                                              ; preds = %231, %234, %238
  %245 = icmp eq %"struct.std::__1::pair.247"* %225, null
  br i1 %245, label %247, label %246

246:                                              ; preds = %244
  tail call void @_ZdlPv(i8* %226) #13
  br label %247

247:                                              ; preds = %244, %246
  %248 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %104, align 8
  %249 = icmp eq %"class.SkSL::Symbol"** %248, null
  br i1 %249, label %254, label %250

250:                                              ; preds = %247
  %251 = ptrtoint %"class.SkSL::Symbol"** %248 to i64
  %252 = bitcast %"class.SkSL::Symbol"*** %105 to i64*
  store i64 %251, i64* %252, align 8
  %253 = bitcast %"class.SkSL::Symbol"** %248 to i8*
  tail call void @_ZdlPv(i8* %253) #13
  br label %254

254:                                              ; preds = %250, %247
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #11
  br i1 %23, label %281, label %255

255:                                              ; preds = %254
  %256 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %22, i64 0, i32 0, i32 1
  %257 = atomicrmw add i64* %256, i64 -1 acq_rel
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %281

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %22, i64 0, i32 0
  %261 = bitcast %"class.std::__1::__shared_weak_count"* %22 to void (%"class.std::__1::__shared_count"*)***
  %262 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %261, align 8
  %263 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %262, i64 2
  %264 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %263, align 8
  tail call void %264(%"class.std::__1::__shared_count"* %260) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %22) #11
  br label %281

265:                                              ; preds = %135, %265
  %266 = phi i32 [ %279, %265 ], [ 1, %135 ]
  %267 = load i8*, i8** %4, align 8
  %268 = getelementptr inbounds i8, i8* %267, i64 1
  store i8* %268, i8** %4, align 8
  %269 = load i8, i8* %267, align 1
  %270 = getelementptr inbounds i8, i8* %267, i64 2
  store i8* %270, i8** %4, align 8
  %271 = load i8, i8* %268, align 1
  %272 = zext i8 %271 to i64
  %273 = shl nuw nsw i64 %272, 8
  %274 = zext i8 %269 to i64
  %275 = or i64 %273, %274
  %276 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %141, align 8
  %277 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %124, i64 %275
  %278 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %277, align 8
  tail call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %276, %"class.SkSL::Symbol"* %278) #11
  %279 = add nuw nsw i32 %266, 1
  %280 = icmp eq i32 %279, %140
  br i1 %280, label %224, label %265

281:                                              ; preds = %259, %255, %254, %2
  %282 = phi i64 [ 0, %2 ], [ %84, %254 ], [ %84, %255 ], [ %84, %259 ]
  %283 = phi i64 [ 0, %2 ], [ %85, %254 ], [ %85, %255 ], [ %85, %259 ]
  %284 = inttoptr i64 %283 to %"class.SkSL::SymbolTable"*
  %285 = insertvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.SkSL::SymbolTable"* %284, 0
  %286 = inttoptr i64 %282 to %"class.std::__1::__shared_weak_count"*
  %287 = insertvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %285, %"class.std::__1::__shared_weak_count"* %286, 1
  ret { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %287
}

declare %"class.SkSL::Statement"* @_ZN4SkSL14VarDeclaration4MakeERKNS_7ContextEPNS_8VariableEPKNS_4TypeEiNSt3__110unique_ptrINS_10ExpressionENS9_14default_deleteISB_EEEE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.SkSL::Expression"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL10Rehydrator9statementEv(%"class.SkSL::Rehydrator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkSTArray, align 8
  %3 = alloca %class.SkSTArray, align 8
  %4 = alloca %"class.std::__1::shared_ptr", align 8
  %5 = alloca %class.SkSTArray, align 8
  %6 = alloca %class.SkSTArray, align 8
  %7 = alloca %"class.std::__1::shared_ptr", align 8
  %8 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 4
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  store i8* %10, i8** %8, align 8
  %11 = load i8, i8* %9, align 1
  switch i8 %11, label %469 [
    i8 2, label %12
    i8 4, label %170
    i8 14, label %178
    i8 17, label %186
    i8 18, label %194
    i8 23, label %201
    i8 27, label %207
    i8 31, label %224
    i8 33, label %235
    i8 41, label %258
    i8 45, label %270
    i8 54, label %444
    i8 57, label %472
  ]

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1
  %14 = bitcast %"class.std::__1::shared_ptr"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1, i32 1
  %17 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %18 = ptrtoint %"class.std::__1::__shared_weak_count"* %17 to i64
  %19 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %22 = atomicrmw add i64* %21, i64 1 monotonic
  br label %23

23:                                               ; preds = %20, %12
  %24 = tail call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL10Rehydrator11symbolTableEb(%"class.SkSL::Rehydrator"* %0, i1 zeroext true) #11
  %25 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %24, 0
  %26 = ptrtoint %"class.SkSL::SymbolTable"* %25 to i64
  %27 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %24, 1
  %28 = ptrtoint %"class.std::__1::__shared_weak_count"* %27 to i64
  store i64 %26, i64* %14, align 8
  %29 = bitcast %"class.std::__1::__shared_weak_count"** %16 to i64*
  %30 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  store i64 %28, i64* %29, align 8
  %31 = icmp eq %"class.std::__1::__shared_weak_count"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %30, i64 0, i32 0, i32 1
  %34 = atomicrmw add i64* %33, i64 -1 acq_rel
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %30, i64 0, i32 0
  %38 = bitcast %"class.std::__1::__shared_weak_count"* %30 to void (%"class.std::__1::__shared_count"*)***
  %39 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %39, i64 2
  %41 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %40, align 8
  tail call void %41(%"class.std::__1::__shared_count"* %37) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %30) #11
  br label %42

42:                                               ; preds = %23, %32, %36
  %43 = load i8*, i8** %8, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %44, i8** %8, align 8
  %45 = load i8, i8* %43, align 1
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #11
  %48 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 16
  %49 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 24
  %50 = bitcast i8* %49 to i64*
  %51 = bitcast i8* %48 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false)
  store i8* %47, i8** %51, align 8
  store i64 17179869184, i64* %50, align 8
  %52 = bitcast i8* %48 to %class.SkTArray*
  %53 = icmp eq i8 %45, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %42
  store i64 17179869184, i64* %50, align 8
  br label %62

55:                                               ; preds = %42
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %52, i32 %46, i32 0) #11
  %56 = load i64, i64* %50, align 8
  %57 = shl i64 %56, 32
  %58 = and i64 %57, 4294967296
  %59 = and i64 %56, -4294967297
  %60 = or i64 %58, %59
  store i64 %60, i64* %50, align 8
  %61 = bitcast i8* %48 to %"class.std::__1::unique_ptr.89"**
  br label %154

62:                                               ; preds = %154, %54
  %63 = load i8*, i8** %8, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 1
  store i8* %64, i8** %8, align 8
  %65 = load i8, i8* %63, align 1
  %66 = icmp ne i8 %65, 0
  %67 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %68 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 0
  %69 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %70 = bitcast i8* %69 to i64*
  %71 = bitcast i8* %67 to i8**
  store i8* %68, i8** %71, align 8
  store i64 17179869184, i64* %70, align 8
  %72 = bitcast i8* %67 to %class.SkTArray*
  %73 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %72, %class.SkTArray* dereferenceable(16) %52) #11
  %74 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %13, i64 0, i32 0
  %75 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %74, align 8
  %76 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %77 = icmp eq %"class.std::__1::__shared_weak_count"* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %62
  %79 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %76, i64 0, i32 0, i32 1
  %80 = atomicrmw add i64* %79, i64 1 monotonic
  br label %81

81:                                               ; preds = %78, %62
  %82 = call %"class.SkSL::Block"* @_ZN4SkSL5Block4MakeEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EENS2_10shared_ptrINS_11SymbolTableEEEb(i32 -1, %class.SkSTArray* nonnull %3, %"class.SkSL::SymbolTable"* %75, %"class.std::__1::__shared_weak_count"* %76, i1 zeroext %66) #11
  %83 = ptrtoint %"class.SkSL::Block"* %82 to i64
  %84 = load i64, i64* %70, align 8
  %85 = and i64 %84, 4294967294
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %81
  %88 = bitcast i8* %67 to %"class.std::__1::unique_ptr.89"**
  br label %93

89:                                               ; preds = %104, %81
  %90 = phi i64 [ %84, %81 ], [ %106, %104 ]
  %91 = and i64 %90, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %112, label %110

93:                                               ; preds = %104, %87
  %94 = phi i64 [ 0, %87 ], [ %105, %104 ]
  %95 = load %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"** %88, align 8
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %95, i64 %94, i32 0, i32 0, i32 0
  %97 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %96, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %96, align 8
  %98 = icmp eq %"class.SkSL::Statement"* %97, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %93
  %100 = bitcast %"class.SkSL::Statement"* %97 to void (%"class.SkSL::Statement"*)***
  %101 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %101, i64 1
  %103 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %102, align 8
  call void %103(%"class.SkSL::Statement"* nonnull %97) #11
  br label %104

104:                                              ; preds = %99, %93
  %105 = add nuw nsw i64 %94, 1
  %106 = load i64, i64* %70, align 8
  %107 = lshr i64 %106, 1
  %108 = and i64 %107, 2147483647
  %109 = icmp ult i64 %105, %108
  br i1 %109, label %93, label %89

110:                                              ; preds = %89
  %111 = load i8*, i8** %71, align 8
  call void @_Z7sk_freePv(i8* %111) #11
  br label %112

112:                                              ; preds = %89, %110
  %113 = load i64, i64* %50, align 8
  %114 = and i64 %113, 4294967294
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %112
  %117 = bitcast i8* %48 to %"class.std::__1::unique_ptr.89"**
  br label %122

118:                                              ; preds = %133, %112
  %119 = phi i64 [ %113, %112 ], [ %135, %133 ]
  %120 = and i64 %119, 1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %141, label %139

122:                                              ; preds = %133, %116
  %123 = phi i64 [ 0, %116 ], [ %134, %133 ]
  %124 = load %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"** %117, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %124, i64 %123, i32 0, i32 0, i32 0
  %126 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %125, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %125, align 8
  %127 = icmp eq %"class.SkSL::Statement"* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %122
  %129 = bitcast %"class.SkSL::Statement"* %126 to void (%"class.SkSL::Statement"*)***
  %130 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %130, i64 1
  %132 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %131, align 8
  call void %132(%"class.SkSL::Statement"* nonnull %126) #11
  br label %133

133:                                              ; preds = %128, %122
  %134 = add nuw nsw i64 %123, 1
  %135 = load i64, i64* %50, align 8
  %136 = lshr i64 %135, 1
  %137 = and i64 %136, 2147483647
  %138 = icmp ult i64 %134, %137
  br i1 %138, label %122, label %118

139:                                              ; preds = %118
  %140 = load i8*, i8** %51, align 8
  call void @_Z7sk_freePv(i8* %140) #11
  br label %141

141:                                              ; preds = %118, %139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #11
  store i64 %15, i64* %14, align 8
  %142 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  store i64 %18, i64* %29, align 8
  %143 = icmp eq %"class.std::__1::__shared_weak_count"* %142, null
  br i1 %143, label %472, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %142, i64 0, i32 0, i32 1
  %146 = atomicrmw add i64* %145, i64 -1 acq_rel
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %472

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %142, i64 0, i32 0
  %150 = bitcast %"class.std::__1::__shared_weak_count"* %142 to void (%"class.std::__1::__shared_count"*)***
  %151 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %151, i64 2
  %153 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %152, align 8
  call void %153(%"class.std::__1::__shared_count"* %149) #11
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %142) #11
  br label %472

154:                                              ; preds = %154, %55
  %155 = phi i32 [ 0, %55 ], [ %168, %154 ]
  %156 = call %"class.SkSL::Statement"* @_ZN4SkSL10Rehydrator9statementEv(%"class.SkSL::Rehydrator"* %0)
  %157 = ptrtoint %"class.SkSL::Statement"* %156 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %52, i32 1, i32 1) #11
  %158 = load %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"** %61, align 8
  %159 = load i64, i64* %50, align 8
  %160 = lshr i64 %159, 1
  %161 = and i64 %160, 2147483647
  %162 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %158, i64 %161
  %163 = add i64 %159, 2
  %164 = and i64 %163, 4294967294
  %165 = and i64 %159, -4294967295
  %166 = or i64 %164, %165
  store i64 %166, i64* %50, align 8
  %167 = bitcast %"class.std::__1::unique_ptr.89"* %162 to i64*
  store i64 %157, i64* %167, align 8
  %168 = add nuw nsw i32 %155, 1
  %169 = icmp eq i32 %168, %46
  br i1 %169, label %62, label %154

170:                                              ; preds = %1
  %171 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #11
  %172 = getelementptr inbounds i8, i8* %171, i64 8
  %173 = bitcast i8* %172 to i32*
  store i32 -1, i32* %173, align 8
  %174 = getelementptr inbounds i8, i8* %171, i64 12
  %175 = bitcast i8* %174 to i32*
  store i32 17, i32* %175, align 4
  %176 = bitcast i8* %171 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL14BreakStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %176, align 8
  %177 = ptrtoint i8* %171 to i64
  br label %472

178:                                              ; preds = %1
  %179 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #11
  %180 = getelementptr inbounds i8, i8* %179, i64 8
  %181 = bitcast i8* %180 to i32*
  store i32 -1, i32* %181, align 8
  %182 = getelementptr inbounds i8, i8* %179, i64 12
  %183 = bitcast i8* %182 to i32*
  store i32 18, i32* %183, align 4
  %184 = bitcast i8* %179 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL17ContinueStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %184, align 8
  %185 = ptrtoint i8* %179 to i64
  br label %472

186:                                              ; preds = %1
  %187 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #11
  %188 = getelementptr inbounds i8, i8* %187, i64 8
  %189 = bitcast i8* %188 to i32*
  store i32 -1, i32* %189, align 8
  %190 = getelementptr inbounds i8, i8* %187, i64 12
  %191 = bitcast i8* %190 to i32*
  store i32 19, i32* %191, align 4
  %192 = bitcast i8* %187 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL16DiscardStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %192, align 8
  %193 = ptrtoint i8* %187 to i64
  br label %472

194:                                              ; preds = %1
  %195 = tail call %"class.SkSL::Statement"* @_ZN4SkSL10Rehydrator9statementEv(%"class.SkSL::Rehydrator"* %0)
  %196 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %197 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %198 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %197, align 8
  %199 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11DoStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEE(%"class.SkSL::Context"* dereferenceable(744) %198, %"class.SkSL::Statement"* %195, %"class.SkSL::Expression"* %196) #11
  %200 = ptrtoint %"class.SkSL::Statement"* %199 to i64
  br label %472

201:                                              ; preds = %1
  %202 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %203 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %204 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %203, align 8
  %205 = tail call %"class.SkSL::Statement"* @_ZN4SkSL19ExpressionStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::Context"* dereferenceable(744) %204, %"class.SkSL::Expression"* %202) #11
  %206 = ptrtoint %"class.SkSL::Statement"* %205 to i64
  br label %472

207:                                              ; preds = %1
  %208 = tail call %"class.SkSL::Statement"* @_ZN4SkSL10Rehydrator9statementEv(%"class.SkSL::Rehydrator"* %0)
  %209 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %210 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %211 = tail call %"class.SkSL::Statement"* @_ZN4SkSL10Rehydrator9statementEv(%"class.SkSL::Rehydrator"* %0)
  %212 = tail call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL10Rehydrator11symbolTableEb(%"class.SkSL::Rehydrator"* %0, i1 zeroext true)
  %213 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %212, 0
  %214 = ptrtoint %"class.SkSL::SymbolTable"* %213 to i64
  %215 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %212, 1
  %216 = ptrtoint %"class.std::__1::__shared_weak_count"* %215 to i64
  %217 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %218 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %217, align 8
  %219 = bitcast %"class.std::__1::shared_ptr"* %4 to i64*
  store i64 %214, i64* %219, align 8
  %220 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %4, i64 0, i32 1
  %221 = bitcast %"class.std::__1::__shared_weak_count"** %220 to i64*
  store i64 %216, i64* %221, align 8
  %222 = tail call %"class.SkSL::Statement"* @_ZN4SkSL12ForStatement4MakeERKNS_7ContextEiNSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEESC_S9_NS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744) %218, i32 -1, %"class.SkSL::Statement"* %208, %"class.SkSL::Expression"* %209, %"class.SkSL::Expression"* %210, %"class.SkSL::Statement"* %211, %"class.std::__1::shared_ptr"* nonnull byval(%"class.std::__1::shared_ptr") align 8 %4) #11
  %223 = ptrtoint %"class.SkSL::Statement"* %222 to i64
  br label %472

224:                                              ; preds = %1
  %225 = getelementptr inbounds i8, i8* %9, i64 2
  store i8* %225, i8** %8, align 8
  %226 = load i8, i8* %10, align 1
  %227 = icmp ne i8 %226, 0
  %228 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %229 = tail call %"class.SkSL::Statement"* @_ZN4SkSL10Rehydrator9statementEv(%"class.SkSL::Rehydrator"* %0)
  %230 = tail call %"class.SkSL::Statement"* @_ZN4SkSL10Rehydrator9statementEv(%"class.SkSL::Rehydrator"* %0)
  %231 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %232 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %231, align 8
  %233 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IfStatement4MakeERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS5_INS_9StatementENS7_ISA_EEEESC_(%"class.SkSL::Context"* dereferenceable(744) %232, i32 -1, i1 zeroext %227, %"class.SkSL::Expression"* %228, %"class.SkSL::Statement"* %229, %"class.SkSL::Statement"* %230) #11
  %234 = ptrtoint %"class.SkSL::Statement"* %233 to i64
  br label %472

235:                                              ; preds = %1
  %236 = getelementptr inbounds i8, i8* %9, i64 2
  store i8* %236, i8** %8, align 8
  %237 = load i8, i8* %10, align 1
  %238 = getelementptr inbounds i8, i8* %9, i64 3
  store i8* %238, i8** %8, align 8
  %239 = load i8, i8* %236, align 1
  %240 = zext i8 %239 to i64
  %241 = shl nuw nsw i64 %240, 8
  %242 = zext i8 %237 to i64
  %243 = or i64 %241, %242
  %244 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 2, i32 0, i32 0
  %245 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %244, align 8
  %246 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %245, i64 %243
  %247 = bitcast %"class.SkSL::Symbol"** %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #11
  %250 = getelementptr inbounds i8, i8* %249, i64 8
  %251 = bitcast i8* %250 to i32*
  store i32 -1, i32* %251, align 8
  %252 = getelementptr inbounds i8, i8* %249, i64 12
  %253 = bitcast i8* %252 to i32*
  store i32 24, i32* %253, align 4
  %254 = bitcast i8* %249 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL12InlineMarkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %254, align 8
  %255 = getelementptr inbounds i8, i8* %249, i64 16
  %256 = bitcast i8* %255 to i64*
  store i64 %248, i64* %256, align 8
  %257 = ptrtoint i8* %249 to i64
  br label %472

258:                                              ; preds = %1
  %259 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %260 = ptrtoint %"class.SkSL::Expression"* %259 to i64
  %261 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #11
  %262 = getelementptr inbounds i8, i8* %261, i64 8
  %263 = bitcast i8* %262 to i32*
  store i32 -1, i32* %263, align 8
  %264 = getelementptr inbounds i8, i8* %261, i64 12
  %265 = bitcast i8* %264 to i32*
  store i32 26, i32* %265, align 4
  %266 = bitcast i8* %261 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %266, align 8
  %267 = getelementptr inbounds i8, i8* %261, i64 16
  %268 = bitcast i8* %267 to i64*
  store i64 %260, i64* %268, align 8
  %269 = ptrtoint i8* %261 to i64
  br label %472

270:                                              ; preds = %1
  %271 = getelementptr inbounds i8, i8* %9, i64 2
  store i8* %271, i8** %8, align 8
  %272 = load i8, i8* %10, align 1
  %273 = icmp ne i8 %272, 0
  %274 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1
  %275 = bitcast %"class.std::__1::shared_ptr"* %274 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 1, i32 1
  %278 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %277, align 8
  %279 = ptrtoint %"class.std::__1::__shared_weak_count"* %278 to i64
  %280 = icmp eq %"class.std::__1::__shared_weak_count"* %278, null
  br i1 %280, label %284, label %281

281:                                              ; preds = %270
  %282 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %278, i64 0, i32 0, i32 1
  %283 = atomicrmw add i64* %282, i64 1 monotonic
  br label %284

284:                                              ; preds = %281, %270
  %285 = tail call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL10Rehydrator11symbolTableEb(%"class.SkSL::Rehydrator"* %0, i1 zeroext true) #11
  %286 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %285, 0
  %287 = ptrtoint %"class.SkSL::SymbolTable"* %286 to i64
  %288 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %285, 1
  %289 = ptrtoint %"class.std::__1::__shared_weak_count"* %288 to i64
  store i64 %287, i64* %275, align 8
  %290 = bitcast %"class.std::__1::__shared_weak_count"** %277 to i64*
  %291 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %277, align 8
  store i64 %289, i64* %290, align 8
  %292 = icmp eq %"class.std::__1::__shared_weak_count"* %291, null
  br i1 %292, label %303, label %293

293:                                              ; preds = %284
  %294 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %291, i64 0, i32 0, i32 1
  %295 = atomicrmw add i64* %294, i64 -1 acq_rel
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %297, label %303

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %291, i64 0, i32 0
  %299 = bitcast %"class.std::__1::__shared_weak_count"* %291 to void (%"class.std::__1::__shared_count"*)***
  %300 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %299, align 8
  %301 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %300, i64 2
  %302 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %301, align 8
  tail call void %302(%"class.std::__1::__shared_count"* %298) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %291) #11
  br label %303

303:                                              ; preds = %284, %293, %297
  %304 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %305 = load i8*, i8** %8, align 8
  %306 = getelementptr inbounds i8, i8* %305, i64 1
  store i8* %306, i8** %8, align 8
  %307 = load i8, i8* %305, align 1
  %308 = zext i8 %307 to i32
  %309 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %309) #11
  %310 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 16
  %311 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 24
  %312 = bitcast i8* %311 to i64*
  %313 = bitcast i8* %310 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %309, i8 -86, i64 16, i1 false)
  store i8* %309, i8** %313, align 8
  store i64 17179869184, i64* %312, align 8
  %314 = bitcast i8* %310 to %class.SkTArray*
  %315 = icmp eq i8 %307, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %303
  store i64 17179869184, i64* %312, align 8
  br label %324

317:                                              ; preds = %303
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %314, i32 %308, i32 0) #11
  %318 = load i64, i64* %312, align 8
  %319 = shl i64 %318, 32
  %320 = and i64 %319, 4294967296
  %321 = and i64 %318, -4294967297
  %322 = or i64 %320, %321
  store i64 %322, i64* %312, align 8
  %323 = bitcast i8* %310 to %"class.std::__1::unique_ptr.89"**
  br label %415

324:                                              ; preds = %415, %316
  %325 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %326 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %325, align 8
  %327 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 16
  %328 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 0
  %329 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 24
  %330 = bitcast i8* %329 to i64*
  %331 = bitcast i8* %327 to i8**
  store i8* %328, i8** %331, align 8
  store i64 17179869184, i64* %330, align 8
  %332 = bitcast i8* %327 to %class.SkTArray*
  %333 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %332, %class.SkTArray* dereferenceable(16) %314) #11
  %334 = load i64, i64* %275, align 8
  %335 = bitcast %"class.std::__1::shared_ptr"* %7 to i64*
  store i64 %334, i64* %335, align 8
  %336 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %7, i64 0, i32 1
  %337 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %277, align 8
  store %"class.std::__1::__shared_weak_count"* %337, %"class.std::__1::__shared_weak_count"** %336, align 8
  %338 = icmp eq %"class.std::__1::__shared_weak_count"* %337, null
  br i1 %338, label %342, label %339

339:                                              ; preds = %324
  %340 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %337, i64 0, i32 0, i32 1
  %341 = atomicrmw add i64* %340, i64 1 monotonic
  br label %342

342:                                              ; preds = %324, %339
  %343 = call %"class.SkSL::Statement"* @_ZN4SkSL15SwitchStatement4MakeERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi2ENS5_INS_9StatementENS7_ISB_EEEELb0EENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744) %326, i32 -1, i1 zeroext %273, %"class.SkSL::Expression"* %304, %class.SkSTArray* nonnull %6, %"class.std::__1::shared_ptr"* nonnull byval(%"class.std::__1::shared_ptr") align 8 %7) #11
  %344 = ptrtoint %"class.SkSL::Statement"* %343 to i64
  %345 = load i64, i64* %330, align 8
  %346 = and i64 %345, 4294967294
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %350, label %348

348:                                              ; preds = %342
  %349 = bitcast i8* %327 to %"class.std::__1::unique_ptr.89"**
  br label %354

350:                                              ; preds = %365, %342
  %351 = phi i64 [ %345, %342 ], [ %367, %365 ]
  %352 = and i64 %351, 1
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %373, label %371

354:                                              ; preds = %365, %348
  %355 = phi i64 [ 0, %348 ], [ %366, %365 ]
  %356 = load %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"** %349, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %356, i64 %355, i32 0, i32 0, i32 0
  %358 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %357, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %357, align 8
  %359 = icmp eq %"class.SkSL::Statement"* %358, null
  br i1 %359, label %365, label %360

360:                                              ; preds = %354
  %361 = bitcast %"class.SkSL::Statement"* %358 to void (%"class.SkSL::Statement"*)***
  %362 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %361, align 8
  %363 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %362, i64 1
  %364 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %363, align 8
  call void %364(%"class.SkSL::Statement"* nonnull %358) #11
  br label %365

365:                                              ; preds = %360, %354
  %366 = add nuw nsw i64 %355, 1
  %367 = load i64, i64* %330, align 8
  %368 = lshr i64 %367, 1
  %369 = and i64 %368, 2147483647
  %370 = icmp ult i64 %366, %369
  br i1 %370, label %354, label %350

371:                                              ; preds = %350
  %372 = load i8*, i8** %331, align 8
  call void @_Z7sk_freePv(i8* %372) #11
  br label %373

373:                                              ; preds = %350, %371
  %374 = load i64, i64* %312, align 8
  %375 = and i64 %374, 4294967294
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %379, label %377

377:                                              ; preds = %373
  %378 = bitcast i8* %310 to %"class.std::__1::unique_ptr.89"**
  br label %383

379:                                              ; preds = %394, %373
  %380 = phi i64 [ %374, %373 ], [ %396, %394 ]
  %381 = and i64 %380, 1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %402, label %400

383:                                              ; preds = %394, %377
  %384 = phi i64 [ 0, %377 ], [ %395, %394 ]
  %385 = load %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"** %378, align 8
  %386 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %385, i64 %384, i32 0, i32 0, i32 0
  %387 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %386, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %386, align 8
  %388 = icmp eq %"class.SkSL::Statement"* %387, null
  br i1 %388, label %394, label %389

389:                                              ; preds = %383
  %390 = bitcast %"class.SkSL::Statement"* %387 to void (%"class.SkSL::Statement"*)***
  %391 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %390, align 8
  %392 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %391, i64 1
  %393 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %392, align 8
  call void %393(%"class.SkSL::Statement"* nonnull %387) #11
  br label %394

394:                                              ; preds = %389, %383
  %395 = add nuw nsw i64 %384, 1
  %396 = load i64, i64* %312, align 8
  %397 = lshr i64 %396, 1
  %398 = and i64 %397, 2147483647
  %399 = icmp ult i64 %395, %398
  br i1 %399, label %383, label %379

400:                                              ; preds = %379
  %401 = load i8*, i8** %313, align 8
  call void @_Z7sk_freePv(i8* %401) #11
  br label %402

402:                                              ; preds = %400, %379
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %309) #11
  store i64 %276, i64* %275, align 8
  %403 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %277, align 8
  store i64 %279, i64* %290, align 8
  %404 = icmp eq %"class.std::__1::__shared_weak_count"* %403, null
  br i1 %404, label %472, label %405

405:                                              ; preds = %402
  %406 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %403, i64 0, i32 0, i32 1
  %407 = atomicrmw add i64* %406, i64 -1 acq_rel
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %409, label %472

409:                                              ; preds = %405
  %410 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %403, i64 0, i32 0
  %411 = bitcast %"class.std::__1::__shared_weak_count"* %403 to void (%"class.std::__1::__shared_count"*)***
  %412 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %411, align 8
  %413 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %412, i64 2
  %414 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %413, align 8
  call void %414(%"class.std::__1::__shared_count"* %410) #11
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %403) #11
  br label %472

415:                                              ; preds = %415, %317
  %416 = phi i32 [ 0, %317 ], [ %442, %415 ]
  %417 = call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %418 = ptrtoint %"class.SkSL::Expression"* %417 to i64
  %419 = call %"class.SkSL::Statement"* @_ZN4SkSL10Rehydrator9statementEv(%"class.SkSL::Rehydrator"* %0)
  %420 = ptrtoint %"class.SkSL::Statement"* %419 to i64
  %421 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #11
  %422 = getelementptr inbounds i8, i8* %421, i64 8
  %423 = bitcast i8* %422 to i32*
  store i32 -1, i32* %423, align 8
  %424 = getelementptr inbounds i8, i8* %421, i64 12
  %425 = bitcast i8* %424 to i32*
  store i32 28, i32* %425, align 4
  %426 = bitcast i8* %421 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL10SwitchCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %426, align 8
  %427 = getelementptr inbounds i8, i8* %421, i64 16
  %428 = bitcast i8* %427 to i64*
  store i64 %418, i64* %428, align 8
  %429 = getelementptr inbounds i8, i8* %421, i64 24
  %430 = bitcast i8* %429 to i64*
  store i64 %420, i64* %430, align 8
  %431 = ptrtoint i8* %421 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %314, i32 1, i32 1) #11
  %432 = load %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"** %323, align 8
  %433 = load i64, i64* %312, align 8
  %434 = lshr i64 %433, 1
  %435 = and i64 %434, 2147483647
  %436 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %432, i64 %435
  %437 = add i64 %433, 2
  %438 = and i64 %437, 4294967294
  %439 = and i64 %433, -4294967295
  %440 = or i64 %438, %439
  store i64 %440, i64* %312, align 8
  %441 = bitcast %"class.std::__1::unique_ptr.89"* %436 to i64*
  store i64 %431, i64* %441, align 8
  %442 = add nuw nsw i32 %416, 1
  %443 = icmp eq i32 %442, %308
  br i1 %443, label %324, label %415

444:                                              ; preds = %1
  %445 = getelementptr inbounds i8, i8* %9, i64 2
  store i8* %445, i8** %8, align 8
  %446 = load i8, i8* %10, align 1
  %447 = getelementptr inbounds i8, i8* %9, i64 3
  store i8* %447, i8** %8, align 8
  %448 = load i8, i8* %445, align 1
  %449 = zext i8 %448 to i64
  %450 = shl nuw nsw i64 %449, 8
  %451 = zext i8 %446 to i64
  %452 = or i64 %450, %451
  %453 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 2, i32 0, i32 0
  %454 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %453, align 8
  %455 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %454, i64 %452
  %456 = bitcast %"class.SkSL::Symbol"** %455 to %"class.SkSL::Variable"**
  %457 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %456, align 8
  %458 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %459 = bitcast %"class.SkSL::Symbol"* %458 to %"class.SkSL::Type"*
  %460 = load i8*, i8** %8, align 8
  %461 = getelementptr inbounds i8, i8* %460, i64 1
  store i8* %461, i8** %8, align 8
  %462 = load i8, i8* %460, align 1
  %463 = sext i8 %462 to i32
  %464 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %465 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %466 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %465, align 8
  %467 = tail call %"class.SkSL::Statement"* @_ZN4SkSL14VarDeclaration4MakeERKNS_7ContextEPNS_8VariableEPKNS_4TypeEiNSt3__110unique_ptrINS_10ExpressionENS9_14default_deleteISB_EEEE(%"class.SkSL::Context"* dereferenceable(744) %466, %"class.SkSL::Variable"* %457, %"class.SkSL::Type"* %459, i32 %463, %"class.SkSL::Expression"* %464) #11
  %468 = ptrtoint %"class.SkSL::Statement"* %467 to i64
  br label %472

469:                                              ; preds = %1
  %470 = zext i8 %11 to i32
  %471 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i32 %470)
  br label %472

472:                                              ; preds = %1, %409, %405, %402, %148, %144, %141, %469, %444, %258, %235, %224, %207, %201, %194, %186, %178, %170
  %473 = phi i64 [ 0, %469 ], [ %468, %444 ], [ %269, %258 ], [ %257, %235 ], [ %234, %224 ], [ %223, %207 ], [ %206, %201 ], [ %200, %194 ], [ %193, %186 ], [ %185, %178 ], [ %177, %170 ], [ %83, %141 ], [ %83, %144 ], [ %83, %148 ], [ %344, %402 ], [ %344, %405 ], [ %344, %409 ], [ 0, %1 ]
  %474 = inttoptr i64 %473 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %474
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::FunctionDefinition"* @_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJiRPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS8_EEEENS_13unordered_setIS5_NS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4), %"class.SkSL::FunctionDeclaration"** dereferenceable(8), i8* dereferenceable(1), %"class.std::__1::unique_ptr.89"* dereferenceable(8), %"class.std::__1::unordered_set.95"* dereferenceable(40)) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.std::__1::unordered_set.95", align 8
  %7 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 88) #11
  %8 = bitcast i8* %7 to %"class.SkSL::FunctionDefinition"*
  %9 = load i32, i32* %0, align 4
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = load i8, i8* %2, align 1, !range !11
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr.89"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %13, align 8
  %16 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unordered_set.95"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  store %"struct.std::__1::__hash_node_base.100"** null, %"struct.std::__1::__hash_node_base.100"*** %16, align 8
  %19 = bitcast %"class.std::__1::unordered_set.95"* %6 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %20, align 8
  store i64 %22, i64* %21, align 8
  store i64 0, i64* %20, align 8
  %23 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %6, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %4, i64 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::__compressed_pair.107"* %24 to i64*
  %26 = bitcast %"class.std::__1::__compressed_pair.107"* %23 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = load i64, i64* %28, align 8
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %6, i64 0, i32 0, i32 3
  %32 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %4, i64 0, i32 0, i32 3
  %33 = bitcast %"class.std::__1::__compressed_pair.115"* %32 to i32*
  %34 = bitcast %"class.std::__1::__compressed_pair.115"* %31 to i32*
  %35 = load i32, i32* %33, align 4
  store i32 %35, i32* %34, align 8
  %36 = icmp eq i64 %30, 0
  %37 = inttoptr i64 %18 to %"struct.std::__1::__hash_node_base.100"**
  br i1 %36, label %57, label %38

38:                                               ; preds = %5
  %39 = inttoptr i64 %27 to %"struct.std::__1::__hash_node_base.100"*
  %40 = getelementptr inbounds %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.107"* %23, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %39, i64 1
  %42 = bitcast %"struct.std::__1::__hash_node_base.100"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !12
  %45 = icmp ugt i64 %44, 1
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = add i64 %22, -1
  %48 = and i64 %43, %47
  br label %53

49:                                               ; preds = %38
  %50 = icmp ult i64 %43, %22
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = urem i64 %43, %22
  br label %53

53:                                               ; preds = %51, %49, %46
  %54 = phi i64 [ %48, %46 ], [ %52, %51 ], [ %43, %49 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %37, i64 %54
  store %"struct.std::__1::__hash_node_base.100"* %40, %"struct.std::__1::__hash_node_base.100"** %55, align 8
  %56 = bitcast %"class.std::__1::__compressed_pair.107"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #11
  br label %57

57:                                               ; preds = %5, %53
  %58 = getelementptr inbounds i8, i8* %7, i64 8
  %59 = bitcast i8* %58 to i32*
  store i32 %9, i32* %59, align 8
  %60 = getelementptr inbounds i8, i8* %7, i64 12
  %61 = bitcast i8* %60 to i32*
  store i32 2, i32* %61, align 4
  %62 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds i8, i8* %7, i64 16
  %64 = bitcast i8* %63 to i64*
  store i64 %11, i64* %64, align 8
  %65 = getelementptr inbounds i8, i8* %7, i64 24
  store i8 %12, i8* %65, align 8
  %66 = getelementptr inbounds i8, i8* %7, i64 32
  %67 = bitcast i8* %66 to i64*
  store i64 %15, i64* %67, align 8
  %68 = getelementptr inbounds i8, i8* %7, i64 40
  %69 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i64, i64* %19, align 8
  store %"struct.std::__1::__hash_node_base.100"** null, %"struct.std::__1::__hash_node_base.100"*** %69, align 8
  %71 = bitcast i8* %68 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds i8, i8* %7, i64 48
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %21, align 8
  store i64 %74, i64* %73, align 8
  store i64 0, i64* %21, align 8
  %75 = getelementptr inbounds i8, i8* %7, i64 56
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %26, align 8
  store i64 %77, i64* %76, align 8
  %78 = getelementptr inbounds i8, i8* %7, i64 64
  %79 = bitcast i8* %78 to i64*
  %80 = load i64, i64* %29, align 8
  store i64 %80, i64* %79, align 8
  %81 = getelementptr inbounds i8, i8* %7, i64 72
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %34, align 8
  store i32 %83, i32* %82, align 8
  %84 = icmp eq i64 %80, 0
  %85 = inttoptr i64 %70 to %"struct.std::__1::__hash_node_base.100"**
  %86 = inttoptr i64 %77 to %"struct.std::__1::__hash_node_base.100"*
  br i1 %84, label %107, label %87

87:                                               ; preds = %57
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %86, i64 1
  %89 = bitcast %"struct.std::__1::__hash_node_base.100"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = call i64 @llvm.ctpop.i64(i64 %74) #11, !range !12
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %87
  %94 = add i64 %74, -1
  %95 = and i64 %90, %94
  br label %100

96:                                               ; preds = %87
  %97 = icmp ult i64 %90, %74
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %90, %74
  br label %100

100:                                              ; preds = %93, %96, %98
  %101 = phi i64 [ %95, %93 ], [ %99, %98 ], [ %90, %96 ]
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %85, i64 %101
  %103 = bitcast %"struct.std::__1::__hash_node_base.100"** %102 to i8**
  store i8* %75, i8** %103, align 8
  %104 = bitcast %"class.std::__1::__compressed_pair.107"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false) #11
  %105 = getelementptr inbounds i8, i8* %7, i64 80
  %106 = bitcast i8* %105 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %106, align 8
  br label %117

107:                                              ; preds = %57
  %108 = getelementptr inbounds i8, i8* %7, i64 80
  %109 = bitcast i8* %108 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %109, align 8
  %110 = icmp eq i64 %77, 0
  br i1 %110, label %117, label %111

111:                                              ; preds = %107, %111
  %112 = phi %"struct.std::__1::__hash_node_base.100"* [ %114, %111 ], [ %86, %107 ]
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %112, i64 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %113, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.100"* %112 to i8*
  call void @_ZdlPv(i8* %115) #13
  %116 = icmp eq %"struct.std::__1::__hash_node_base.100"* %114, null
  br i1 %116, label %117, label %111

117:                                              ; preds = %111, %100, %107
  %118 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %69, align 8
  store %"struct.std::__1::__hash_node_base.100"** null, %"struct.std::__1::__hash_node_base.100"*** %69, align 8
  %119 = icmp eq %"struct.std::__1::__hash_node_base.100"** %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  %121 = bitcast %"struct.std::__1::__hash_node_base.100"** %118 to i8*
  call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %117, %120
  ret %"class.SkSL::FunctionDefinition"* %8
}

declare %"class.SkSL::Block"* @_ZN4SkSL5Block4MakeEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EENS2_10shared_ptrINS_11SymbolTableEEEb(i32, %class.SkSTArray*, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkSTArray.225, align 8
  %3 = alloca %class.SkSTArray.225, align 8
  %4 = alloca %class.SkSTArray.225, align 8
  %5 = alloca %class.SkSTArray.225, align 8
  %6 = alloca %class.SkSTArray.225, align 8
  %7 = alloca %class.SkSTArray.225, align 8
  %8 = alloca %class.SkSTArray.225, align 8
  %9 = alloca %class.SkSTArray.225, align 8
  %10 = alloca %class.SkSTArray.225, align 8
  %11 = alloca %class.SkSTArray.225, align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %class.SkSTArray.242, align 8
  %14 = alloca %class.SkSTArray.242, align 8
  %15 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 4
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 1
  store i8* %17, i8** %15, align 8
  %18 = load i8, i8* %16, align 1
  switch i8 %18, label %734 [
    i8 1, label %19
    i8 3, label %30
    i8 6, label %50
    i8 7, label %89
    i8 9, label %128
    i8 10, label %171
    i8 11, label %214
    i8 12, label %257
    i8 13, label %300
    i8 8, label %339
    i8 25, label %382
    i8 26, label %394
    i8 28, label %427
    i8 32, label %519
    i8 35, label %526
    i8 39, label %560
    i8 40, label %569
    i8 42, label %578
    i8 46, label %626
    i8 51, label %707
    i8 56, label %715
    i8 57, label %737
  ]

19:                                               ; preds = %1
  %20 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %21 = load i8*, i8** %15, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  store i8* %22, i8** %15, align 8
  %23 = load i8, i8* %21, align 1
  %24 = zext i8 %23 to i32
  %25 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %26 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %27 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %26, align 8
  %28 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16BinaryExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorES9_(%"class.SkSL::Context"* dereferenceable(744) %27, %"class.SkSL::Expression"* %20, i32 %24, %"class.SkSL::Expression"* %25) #11
  %29 = ptrtoint %"class.SkSL::Expression"* %28 to i64
  br label %737

30:                                               ; preds = %1
  %31 = getelementptr inbounds i8, i8* %16, i64 2
  store i8* %31, i8** %15, align 8
  %32 = load i8, i8* %17, align 1
  %33 = icmp ne i8 %32, 0
  %34 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %35 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %35, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %37 = bitcast %"class.SkSL::Type"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #11
  %40 = zext i1 %33 to i8
  %41 = bitcast i8* %39 to i32 (...)***
  %42 = getelementptr inbounds i8, i8* %39, i64 8
  %43 = bitcast i8* %42 to i32*
  store i32 -1, i32* %43, align 8
  %44 = getelementptr inbounds i8, i8* %39, i64 12
  %45 = bitcast i8* %44 to i32*
  store i32 31, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %39, i64 16
  %47 = bitcast i8* %46 to i64*
  store i64 %38, i64* %47, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %48 = getelementptr inbounds i8, i8* %39, i64 24
  store i8 %40, i8* %48, align 8
  %49 = ptrtoint i8* %39 to i64
  br label %737

50:                                               ; preds = %1
  %51 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %52 = bitcast %"class.SkSL::Symbol"* %51 to %"class.SkSL::Type"*
  %53 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %54 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %53, align 8
  call void @_ZN4SkSL10Rehydrator15expressionArrayEv(%class.SkSTArray.225* nonnull sret %2, %"class.SkSL::Rehydrator"* %0)
  %55 = call %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorArray4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %54, i32 -1, %"class.SkSL::Type"* dereferenceable(184) %52, %class.SkSTArray.225* nonnull %2) #11
  %56 = ptrtoint %"class.SkSL::Expression"* %55 to i64
  %57 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %2, i64 0, i32 0, i32 0, i64 16
  %58 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %2, i64 0, i32 0, i32 0, i64 24
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 4294967294
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %50
  %64 = bitcast i8* %57 to %"class.std::__1::unique_ptr.78"**
  br label %69

65:                                               ; preds = %80, %50
  %66 = phi i64 [ %60, %50 ], [ %82, %80 ]
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %737, label %86

69:                                               ; preds = %80, %63
  %70 = phi i64 [ 0, %63 ], [ %81, %80 ]
  %71 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %64, align 8
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %71, i64 %70, i32 0, i32 0, i32 0
  %73 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %72, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %72, align 8
  %74 = icmp eq %"class.SkSL::Expression"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %69
  %76 = bitcast %"class.SkSL::Expression"* %73 to void (%"class.SkSL::Expression"*)***
  %77 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %77, i64 1
  %79 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %78, align 8
  call void %79(%"class.SkSL::Expression"* nonnull %73) #11
  br label %80

80:                                               ; preds = %75, %69
  %81 = add nuw nsw i64 %70, 1
  %82 = load i64, i64* %59, align 8
  %83 = lshr i64 %82, 1
  %84 = and i64 %83, 2147483647
  %85 = icmp ult i64 %81, %84
  br i1 %85, label %69, label %65

86:                                               ; preds = %65
  %87 = bitcast i8* %57 to i8**
  %88 = load i8*, i8** %87, align 8
  call void @_Z7sk_freePv(i8* %88) #11
  br label %737

89:                                               ; preds = %1
  %90 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %91 = bitcast %"class.SkSL::Symbol"* %90 to %"class.SkSL::Type"*
  %92 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %93 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %92, align 8
  call void @_ZN4SkSL10Rehydrator15expressionArrayEv(%class.SkSTArray.225* nonnull sret %3, %"class.SkSL::Rehydrator"* %0)
  %94 = call %"class.SkSL::Expression"* @_ZN4SkSL19ConstructorCompound4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %93, i32 -1, %"class.SkSL::Type"* dereferenceable(184) %91, %class.SkSTArray.225* nonnull %3) #11
  %95 = ptrtoint %"class.SkSL::Expression"* %94 to i64
  %96 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %3, i64 0, i32 0, i32 0, i64 16
  %97 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %3, i64 0, i32 0, i32 0, i64 24
  %98 = bitcast i8* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 4294967294
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %89
  %103 = bitcast i8* %96 to %"class.std::__1::unique_ptr.78"**
  br label %108

104:                                              ; preds = %119, %89
  %105 = phi i64 [ %99, %89 ], [ %121, %119 ]
  %106 = and i64 %105, 1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %737, label %125

108:                                              ; preds = %119, %102
  %109 = phi i64 [ 0, %102 ], [ %120, %119 ]
  %110 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %103, align 8
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %110, i64 %109, i32 0, i32 0, i32 0
  %112 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %111, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %111, align 8
  %113 = icmp eq %"class.SkSL::Expression"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %108
  %115 = bitcast %"class.SkSL::Expression"* %112 to void (%"class.SkSL::Expression"*)***
  %116 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %116, i64 1
  %118 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %117, align 8
  call void %118(%"class.SkSL::Expression"* nonnull %112) #11
  br label %119

119:                                              ; preds = %114, %108
  %120 = add nuw nsw i64 %109, 1
  %121 = load i64, i64* %98, align 8
  %122 = lshr i64 %121, 1
  %123 = and i64 %122, 2147483647
  %124 = icmp ult i64 %120, %123
  br i1 %124, label %108, label %104

125:                                              ; preds = %104
  %126 = bitcast i8* %96 to i8**
  %127 = load i8*, i8** %126, align 8
  call void @_Z7sk_freePv(i8* %127) #11
  br label %737

128:                                              ; preds = %1
  %129 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %130 = bitcast %"class.SkSL::Symbol"* %129 to %"class.SkSL::Type"*
  %131 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %131) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 -86, i64 32, i1 false)
  call void @_ZN4SkSL10Rehydrator15expressionArrayEv(%class.SkSTArray.225* nonnull sret %4, %"class.SkSL::Rehydrator"* %0)
  %132 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %133 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %132, align 8
  %134 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %4, i64 0, i32 0, i32 0, i64 16
  %135 = bitcast i8* %134 to %"class.std::__1::unique_ptr.78"**
  %136 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %135, align 8
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %136, i64 0, i32 0, i32 0, i32 0
  %138 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %137, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %137, align 8
  %139 = call %"class.SkSL::Expression"* @_ZN4SkSL25ConstructorDiagonalMatrix4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %133, i32 -1, %"class.SkSL::Type"* dereferenceable(184) %130, %"class.SkSL::Expression"* %138) #11
  %140 = ptrtoint %"class.SkSL::Expression"* %139 to i64
  %141 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %4, i64 0, i32 0, i32 0, i64 24
  %142 = bitcast i8* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = and i64 %143, 4294967294
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %161, %128
  %147 = phi i64 [ %143, %128 ], [ %163, %161 ]
  %148 = and i64 %147, 1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %170, label %167

150:                                              ; preds = %128, %161
  %151 = phi i64 [ %162, %161 ], [ 0, %128 ]
  %152 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %135, align 8
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %152, i64 %151, i32 0, i32 0, i32 0
  %154 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %153, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %153, align 8
  %155 = icmp eq %"class.SkSL::Expression"* %154, null
  br i1 %155, label %161, label %156

156:                                              ; preds = %150
  %157 = bitcast %"class.SkSL::Expression"* %154 to void (%"class.SkSL::Expression"*)***
  %158 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %158, i64 1
  %160 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %159, align 8
  call void %160(%"class.SkSL::Expression"* nonnull %154) #11
  br label %161

161:                                              ; preds = %156, %150
  %162 = add nuw nsw i64 %151, 1
  %163 = load i64, i64* %142, align 8
  %164 = lshr i64 %163, 1
  %165 = and i64 %164, 2147483647
  %166 = icmp ult i64 %162, %165
  br i1 %166, label %150, label %146

167:                                              ; preds = %146
  %168 = bitcast i8* %134 to i8**
  %169 = load i8*, i8** %168, align 8
  call void @_Z7sk_freePv(i8* %169) #11
  br label %170

170:                                              ; preds = %146, %167
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %131) #11
  br label %737

171:                                              ; preds = %1
  %172 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %173 = bitcast %"class.SkSL::Symbol"* %172 to %"class.SkSL::Type"*
  %174 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %174) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 32, i1 false)
  call void @_ZN4SkSL10Rehydrator15expressionArrayEv(%class.SkSTArray.225* nonnull sret %5, %"class.SkSL::Rehydrator"* %0)
  %175 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %176 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %175, align 8
  %177 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %5, i64 0, i32 0, i32 0, i64 16
  %178 = bitcast i8* %177 to %"class.std::__1::unique_ptr.78"**
  %179 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %178, align 8
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %179, i64 0, i32 0, i32 0, i32 0
  %181 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %180, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %180, align 8
  %182 = call %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorMatrixResize4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %176, i32 -1, %"class.SkSL::Type"* dereferenceable(184) %173, %"class.SkSL::Expression"* %181) #11
  %183 = ptrtoint %"class.SkSL::Expression"* %182 to i64
  %184 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %5, i64 0, i32 0, i32 0, i64 24
  %185 = bitcast i8* %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = and i64 %186, 4294967294
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %193

189:                                              ; preds = %204, %171
  %190 = phi i64 [ %186, %171 ], [ %206, %204 ]
  %191 = and i64 %190, 1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %213, label %210

193:                                              ; preds = %171, %204
  %194 = phi i64 [ %205, %204 ], [ 0, %171 ]
  %195 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %178, align 8
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %195, i64 %194, i32 0, i32 0, i32 0
  %197 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %196, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %196, align 8
  %198 = icmp eq %"class.SkSL::Expression"* %197, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %193
  %200 = bitcast %"class.SkSL::Expression"* %197 to void (%"class.SkSL::Expression"*)***
  %201 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %200, align 8
  %202 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %201, i64 1
  %203 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %202, align 8
  call void %203(%"class.SkSL::Expression"* nonnull %197) #11
  br label %204

204:                                              ; preds = %199, %193
  %205 = add nuw nsw i64 %194, 1
  %206 = load i64, i64* %185, align 8
  %207 = lshr i64 %206, 1
  %208 = and i64 %207, 2147483647
  %209 = icmp ult i64 %205, %208
  br i1 %209, label %193, label %189

210:                                              ; preds = %189
  %211 = bitcast i8* %177 to i8**
  %212 = load i8*, i8** %211, align 8
  call void @_Z7sk_freePv(i8* %212) #11
  br label %213

213:                                              ; preds = %189, %210
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %174) #11
  br label %737

214:                                              ; preds = %1
  %215 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %216 = bitcast %"class.SkSL::Symbol"* %215 to %"class.SkSL::Type"*
  %217 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %6, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %217) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %217, i8 -86, i64 32, i1 false)
  call void @_ZN4SkSL10Rehydrator15expressionArrayEv(%class.SkSTArray.225* nonnull sret %6, %"class.SkSL::Rehydrator"* %0)
  %218 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %219 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %218, align 8
  %220 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %6, i64 0, i32 0, i32 0, i64 16
  %221 = bitcast i8* %220 to %"class.std::__1::unique_ptr.78"**
  %222 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %222, i64 0, i32 0, i32 0, i32 0
  %224 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %223, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %223, align 8
  %225 = call %"class.SkSL::Expression"* @_ZN4SkSL21ConstructorScalarCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %219, i32 -1, %"class.SkSL::Type"* dereferenceable(184) %216, %"class.SkSL::Expression"* %224) #11
  %226 = ptrtoint %"class.SkSL::Expression"* %225 to i64
  %227 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %6, i64 0, i32 0, i32 0, i64 24
  %228 = bitcast i8* %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = and i64 %229, 4294967294
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %236

232:                                              ; preds = %247, %214
  %233 = phi i64 [ %229, %214 ], [ %249, %247 ]
  %234 = and i64 %233, 1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %256, label %253

236:                                              ; preds = %214, %247
  %237 = phi i64 [ %248, %247 ], [ 0, %214 ]
  %238 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %221, align 8
  %239 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %238, i64 %237, i32 0, i32 0, i32 0
  %240 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %239, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %239, align 8
  %241 = icmp eq %"class.SkSL::Expression"* %240, null
  br i1 %241, label %247, label %242

242:                                              ; preds = %236
  %243 = bitcast %"class.SkSL::Expression"* %240 to void (%"class.SkSL::Expression"*)***
  %244 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %243, align 8
  %245 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %244, i64 1
  %246 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %245, align 8
  call void %246(%"class.SkSL::Expression"* nonnull %240) #11
  br label %247

247:                                              ; preds = %242, %236
  %248 = add nuw nsw i64 %237, 1
  %249 = load i64, i64* %228, align 8
  %250 = lshr i64 %249, 1
  %251 = and i64 %250, 2147483647
  %252 = icmp ult i64 %248, %251
  br i1 %252, label %236, label %232

253:                                              ; preds = %232
  %254 = bitcast i8* %220 to i8**
  %255 = load i8*, i8** %254, align 8
  call void @_Z7sk_freePv(i8* %255) #11
  br label %256

256:                                              ; preds = %232, %253
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %217) #11
  br label %737

257:                                              ; preds = %1
  %258 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %259 = bitcast %"class.SkSL::Symbol"* %258 to %"class.SkSL::Type"*
  %260 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %260) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %260, i8 -86, i64 32, i1 false)
  call void @_ZN4SkSL10Rehydrator15expressionArrayEv(%class.SkSTArray.225* nonnull sret %7, %"class.SkSL::Rehydrator"* %0)
  %261 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %262 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %261, align 8
  %263 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %7, i64 0, i32 0, i32 0, i64 16
  %264 = bitcast i8* %263 to %"class.std::__1::unique_ptr.78"**
  %265 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %264, align 8
  %266 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %265, i64 0, i32 0, i32 0, i32 0
  %267 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %266, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %266, align 8
  %268 = call %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorSplat4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %262, i32 -1, %"class.SkSL::Type"* dereferenceable(184) %259, %"class.SkSL::Expression"* %267) #11
  %269 = ptrtoint %"class.SkSL::Expression"* %268 to i64
  %270 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %7, i64 0, i32 0, i32 0, i64 24
  %271 = bitcast i8* %270 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = and i64 %272, 4294967294
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %279

275:                                              ; preds = %290, %257
  %276 = phi i64 [ %272, %257 ], [ %292, %290 ]
  %277 = and i64 %276, 1
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %299, label %296

279:                                              ; preds = %257, %290
  %280 = phi i64 [ %291, %290 ], [ 0, %257 ]
  %281 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %264, align 8
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %281, i64 %280, i32 0, i32 0, i32 0
  %283 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %282, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %282, align 8
  %284 = icmp eq %"class.SkSL::Expression"* %283, null
  br i1 %284, label %290, label %285

285:                                              ; preds = %279
  %286 = bitcast %"class.SkSL::Expression"* %283 to void (%"class.SkSL::Expression"*)***
  %287 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %286, align 8
  %288 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %287, i64 1
  %289 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %288, align 8
  call void %289(%"class.SkSL::Expression"* nonnull %283) #11
  br label %290

290:                                              ; preds = %285, %279
  %291 = add nuw nsw i64 %280, 1
  %292 = load i64, i64* %271, align 8
  %293 = lshr i64 %292, 1
  %294 = and i64 %293, 2147483647
  %295 = icmp ult i64 %291, %294
  br i1 %295, label %279, label %275

296:                                              ; preds = %275
  %297 = bitcast i8* %263 to i8**
  %298 = load i8*, i8** %297, align 8
  call void @_Z7sk_freePv(i8* %298) #11
  br label %299

299:                                              ; preds = %275, %296
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %260) #11
  br label %737

300:                                              ; preds = %1
  %301 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %302 = bitcast %"class.SkSL::Symbol"* %301 to %"class.SkSL::Type"*
  %303 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %304 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %303, align 8
  call void @_ZN4SkSL10Rehydrator15expressionArrayEv(%class.SkSTArray.225* nonnull sret %8, %"class.SkSL::Rehydrator"* %0)
  %305 = call %"class.SkSL::Expression"* @_ZN4SkSL17ConstructorStruct4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %304, i32 -1, %"class.SkSL::Type"* dereferenceable(184) %302, %class.SkSTArray.225* nonnull %8) #11
  %306 = ptrtoint %"class.SkSL::Expression"* %305 to i64
  %307 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %8, i64 0, i32 0, i32 0, i64 16
  %308 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %8, i64 0, i32 0, i32 0, i64 24
  %309 = bitcast i8* %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = and i64 %310, 4294967294
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %315, label %313

313:                                              ; preds = %300
  %314 = bitcast i8* %307 to %"class.std::__1::unique_ptr.78"**
  br label %319

315:                                              ; preds = %330, %300
  %316 = phi i64 [ %310, %300 ], [ %332, %330 ]
  %317 = and i64 %316, 1
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %737, label %336

319:                                              ; preds = %330, %313
  %320 = phi i64 [ 0, %313 ], [ %331, %330 ]
  %321 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %314, align 8
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %321, i64 %320, i32 0, i32 0, i32 0
  %323 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %322, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %322, align 8
  %324 = icmp eq %"class.SkSL::Expression"* %323, null
  br i1 %324, label %330, label %325

325:                                              ; preds = %319
  %326 = bitcast %"class.SkSL::Expression"* %323 to void (%"class.SkSL::Expression"*)***
  %327 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %326, align 8
  %328 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %327, i64 1
  %329 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %328, align 8
  call void %329(%"class.SkSL::Expression"* nonnull %323) #11
  br label %330

330:                                              ; preds = %325, %319
  %331 = add nuw nsw i64 %320, 1
  %332 = load i64, i64* %309, align 8
  %333 = lshr i64 %332, 1
  %334 = and i64 %333, 2147483647
  %335 = icmp ult i64 %331, %334
  br i1 %335, label %319, label %315

336:                                              ; preds = %315
  %337 = bitcast i8* %307 to i8**
  %338 = load i8*, i8** %337, align 8
  call void @_Z7sk_freePv(i8* %338) #11
  br label %737

339:                                              ; preds = %1
  %340 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %341 = bitcast %"class.SkSL::Symbol"* %340 to %"class.SkSL::Type"*
  %342 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %9, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %342) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %342, i8 -86, i64 32, i1 false)
  call void @_ZN4SkSL10Rehydrator15expressionArrayEv(%class.SkSTArray.225* nonnull sret %9, %"class.SkSL::Rehydrator"* %0)
  %343 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %344 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %343, align 8
  %345 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %9, i64 0, i32 0, i32 0, i64 16
  %346 = bitcast i8* %345 to %"class.std::__1::unique_ptr.78"**
  %347 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %347, i64 0, i32 0, i32 0, i32 0
  %349 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %348, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %348, align 8
  %350 = call %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorCompoundCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %344, i32 -1, %"class.SkSL::Type"* dereferenceable(184) %341, %"class.SkSL::Expression"* %349) #11
  %351 = ptrtoint %"class.SkSL::Expression"* %350 to i64
  %352 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %9, i64 0, i32 0, i32 0, i64 24
  %353 = bitcast i8* %352 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = and i64 %354, 4294967294
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %361

357:                                              ; preds = %372, %339
  %358 = phi i64 [ %354, %339 ], [ %374, %372 ]
  %359 = and i64 %358, 1
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %381, label %378

361:                                              ; preds = %339, %372
  %362 = phi i64 [ %373, %372 ], [ 0, %339 ]
  %363 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %346, align 8
  %364 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %363, i64 %362, i32 0, i32 0, i32 0
  %365 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %364, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %364, align 8
  %366 = icmp eq %"class.SkSL::Expression"* %365, null
  br i1 %366, label %372, label %367

367:                                              ; preds = %361
  %368 = bitcast %"class.SkSL::Expression"* %365 to void (%"class.SkSL::Expression"*)***
  %369 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %368, align 8
  %370 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %369, i64 1
  %371 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %370, align 8
  call void %371(%"class.SkSL::Expression"* nonnull %365) #11
  br label %372

372:                                              ; preds = %367, %361
  %373 = add nuw nsw i64 %362, 1
  %374 = load i64, i64* %353, align 8
  %375 = lshr i64 %374, 1
  %376 = and i64 %375, 2147483647
  %377 = icmp ult i64 %373, %376
  br i1 %377, label %361, label %357

378:                                              ; preds = %357
  %379 = bitcast i8* %345 to i8**
  %380 = load i8*, i8** %379, align 8
  call void @_Z7sk_freePv(i8* %380) #11
  br label %381

381:                                              ; preds = %357, %378
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %342) #11
  br label %737

382:                                              ; preds = %1
  %383 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %384 = load i8*, i8** %15, align 8
  %385 = getelementptr inbounds i8, i8* %384, i64 1
  store i8* %385, i8** %15, align 8
  %386 = load i8, i8* %384, align 1
  %387 = zext i8 %386 to i32
  %388 = getelementptr inbounds i8, i8* %384, i64 2
  store i8* %388, i8** %15, align 8
  %389 = load i8, i8* %385, align 1
  %390 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %391 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %390, align 8
  %392 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEEiNS_20FieldAccessOwnerKindE(%"class.SkSL::Context"* dereferenceable(744) %391, %"class.SkSL::Expression"* %383, i32 %387, i8 signext %389) #11
  %393 = ptrtoint %"class.SkSL::Expression"* %392 to i64
  br label %737

394:                                              ; preds = %1
  %395 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %396 = load i8*, i8** %15, align 8
  %397 = getelementptr inbounds i8, i8* %396, i64 1
  store i8* %397, i8** %15, align 8
  %398 = load i8, i8* %396, align 1
  %399 = getelementptr inbounds i8, i8* %396, i64 2
  store i8* %399, i8** %15, align 8
  %400 = load i8, i8* %397, align 1
  %401 = getelementptr inbounds i8, i8* %396, i64 3
  store i8* %401, i8** %15, align 8
  %402 = load i8, i8* %399, align 1
  %403 = getelementptr inbounds i8, i8* %396, i64 4
  store i8* %403, i8** %15, align 8
  %404 = load i8, i8* %401, align 1
  %405 = zext i8 %404 to i32
  %406 = shl nuw i32 %405, 24
  %407 = zext i8 %402 to i32
  %408 = shl nuw nsw i32 %407, 16
  %409 = zext i8 %400 to i32
  %410 = shl nuw nsw i32 %409, 8
  %411 = zext i8 %398 to i32
  %412 = or i32 %410, %411
  %413 = or i32 %412, %408
  %414 = or i32 %413, %406
  %415 = ptrtoint %"class.SkSL::Symbol"* %395 to i64
  %416 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #11
  %417 = bitcast i8* %416 to i32 (...)***
  %418 = getelementptr inbounds i8, i8* %416, i64 8
  %419 = bitcast i8* %418 to i32*
  store i32 -1, i32* %419, align 8
  %420 = getelementptr inbounds i8, i8* %416, i64 12
  %421 = bitcast i8* %420 to i32*
  store i32 45, i32* %421, align 4
  %422 = getelementptr inbounds i8, i8* %416, i64 16
  %423 = bitcast i8* %422 to i64*
  store i64 %415, i64* %423, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %417, align 8
  %424 = getelementptr inbounds i8, i8* %416, i64 24
  %425 = bitcast i8* %424 to i32*
  store i32 %414, i32* %425, align 8
  %426 = ptrtoint i8* %416 to i64
  br label %737

427:                                              ; preds = %1
  %428 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %429 = bitcast %"class.SkSL::Symbol"* %428 to %"class.SkSL::Type"*
  %430 = load i8*, i8** %15, align 8
  %431 = getelementptr inbounds i8, i8* %430, i64 1
  store i8* %431, i8** %15, align 8
  %432 = load i8, i8* %430, align 1
  %433 = getelementptr inbounds i8, i8* %430, i64 2
  store i8* %433, i8** %15, align 8
  %434 = load i8, i8* %431, align 1
  %435 = zext i8 %434 to i64
  %436 = shl nuw nsw i64 %435, 8
  %437 = zext i8 %432 to i64
  %438 = or i64 %436, %437
  %439 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 2, i32 0, i32 0
  %440 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %439, align 8
  %441 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %440, i64 %438
  %442 = bitcast %"class.SkSL::Symbol"** %441 to %"class.SkSL::FunctionDeclaration"**
  %443 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %442, align 8
  %444 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %10, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %444) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %444, i8 -86, i64 32, i1 false)
  call void @_ZN4SkSL10Rehydrator15expressionArrayEv(%class.SkSTArray.225* nonnull sret %10, %"class.SkSL::Rehydrator"* %0)
  %445 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %446 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %445, align 8
  %447 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %11, i64 0, i32 0, i32 0, i64 16
  %448 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %11, i64 0, i32 0, i32 0, i64 0
  %449 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %11, i64 0, i32 0, i32 0, i64 24
  %450 = bitcast i8* %449 to i64*
  %451 = bitcast i8* %447 to i8**
  store i8* %448, i8** %451, align 8
  store i64 17179869184, i64* %450, align 8
  %452 = bitcast i8* %447 to %class.SkTArray.227*
  %453 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %10, i64 0, i32 0, i32 0, i64 16
  %454 = bitcast i8* %453 to %class.SkTArray.227*
  %455 = call dereferenceable(16) %class.SkTArray.227* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.227* %452, %class.SkTArray.227* dereferenceable(16) %454) #11
  %456 = call %"class.SkSL::Expression"* @_ZN4SkSL12FunctionCall4MakeERKNS_7ContextEiPKNS_4TypeERKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENSB_14default_deleteISD_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %446, i32 -1, %"class.SkSL::Type"* %429, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %443, %class.SkSTArray.225* nonnull %11) #11
  %457 = ptrtoint %"class.SkSL::Expression"* %456 to i64
  %458 = load i64, i64* %450, align 8
  %459 = and i64 %458, 4294967294
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %463, label %461

461:                                              ; preds = %427
  %462 = bitcast i8* %447 to %"class.std::__1::unique_ptr.78"**
  br label %467

463:                                              ; preds = %478, %427
  %464 = phi i64 [ %458, %427 ], [ %480, %478 ]
  %465 = and i64 %464, 1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %486, label %484

467:                                              ; preds = %478, %461
  %468 = phi i64 [ 0, %461 ], [ %479, %478 ]
  %469 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %462, align 8
  %470 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %469, i64 %468, i32 0, i32 0, i32 0
  %471 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %470, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %470, align 8
  %472 = icmp eq %"class.SkSL::Expression"* %471, null
  br i1 %472, label %478, label %473

473:                                              ; preds = %467
  %474 = bitcast %"class.SkSL::Expression"* %471 to void (%"class.SkSL::Expression"*)***
  %475 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %474, align 8
  %476 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %475, i64 1
  %477 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %476, align 8
  call void %477(%"class.SkSL::Expression"* nonnull %471) #11
  br label %478

478:                                              ; preds = %473, %467
  %479 = add nuw nsw i64 %468, 1
  %480 = load i64, i64* %450, align 8
  %481 = lshr i64 %480, 1
  %482 = and i64 %481, 2147483647
  %483 = icmp ult i64 %479, %482
  br i1 %483, label %467, label %463

484:                                              ; preds = %463
  %485 = load i8*, i8** %451, align 8
  call void @_Z7sk_freePv(i8* %485) #11
  br label %486

486:                                              ; preds = %463, %484
  %487 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %10, i64 0, i32 0, i32 0, i64 24
  %488 = bitcast i8* %487 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = and i64 %489, 4294967294
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %494, label %492

492:                                              ; preds = %486
  %493 = bitcast i8* %453 to %"class.std::__1::unique_ptr.78"**
  br label %498

494:                                              ; preds = %509, %486
  %495 = phi i64 [ %489, %486 ], [ %511, %509 ]
  %496 = and i64 %495, 1
  %497 = icmp eq i64 %496, 0
  br i1 %497, label %518, label %515

498:                                              ; preds = %509, %492
  %499 = phi i64 [ 0, %492 ], [ %510, %509 ]
  %500 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %493, align 8
  %501 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %500, i64 %499, i32 0, i32 0, i32 0
  %502 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %501, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %501, align 8
  %503 = icmp eq %"class.SkSL::Expression"* %502, null
  br i1 %503, label %509, label %504

504:                                              ; preds = %498
  %505 = bitcast %"class.SkSL::Expression"* %502 to void (%"class.SkSL::Expression"*)***
  %506 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %505, align 8
  %507 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %506, i64 1
  %508 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %507, align 8
  call void %508(%"class.SkSL::Expression"* nonnull %502) #11
  br label %509

509:                                              ; preds = %504, %498
  %510 = add nuw nsw i64 %499, 1
  %511 = load i64, i64* %488, align 8
  %512 = lshr i64 %511, 1
  %513 = and i64 %512, 2147483647
  %514 = icmp ult i64 %510, %513
  br i1 %514, label %498, label %494

515:                                              ; preds = %494
  %516 = bitcast i8* %453 to i8**
  %517 = load i8*, i8** %516, align 8
  call void @_Z7sk_freePv(i8* %517) #11
  br label %518

518:                                              ; preds = %494, %515
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %444) #11
  br label %737

519:                                              ; preds = %1
  %520 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %521 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %522 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %523 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %522, align 8
  %524 = tail call %"class.SkSL::Expression"* @_ZN4SkSL15IndexExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_(%"class.SkSL::Context"* dereferenceable(744) %523, %"class.SkSL::Expression"* %520, %"class.SkSL::Expression"* %521) #11
  %525 = ptrtoint %"class.SkSL::Expression"* %524 to i64
  br label %737

526:                                              ; preds = %1
  %527 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL10Rehydrator6symbolEv(%"class.SkSL::Rehydrator"* %0) #11
  %528 = load i8*, i8** %15, align 8
  %529 = getelementptr inbounds i8, i8* %528, i64 1
  store i8* %529, i8** %15, align 8
  %530 = load i8, i8* %528, align 1
  %531 = getelementptr inbounds i8, i8* %528, i64 2
  store i8* %531, i8** %15, align 8
  %532 = load i8, i8* %529, align 1
  %533 = getelementptr inbounds i8, i8* %528, i64 3
  store i8* %533, i8** %15, align 8
  %534 = load i8, i8* %531, align 1
  %535 = getelementptr inbounds i8, i8* %528, i64 4
  store i8* %535, i8** %15, align 8
  %536 = load i8, i8* %533, align 1
  %537 = zext i8 %536 to i32
  %538 = shl nuw i32 %537, 24
  %539 = zext i8 %534 to i32
  %540 = shl nuw nsw i32 %539, 16
  %541 = zext i8 %532 to i32
  %542 = shl nuw nsw i32 %541, 8
  %543 = zext i8 %530 to i32
  %544 = or i32 %542, %543
  %545 = or i32 %544, %540
  %546 = or i32 %545, %538
  %547 = sext i32 %546 to i64
  %548 = ptrtoint %"class.SkSL::Symbol"* %527 to i64
  %549 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #11
  %550 = bitcast i8* %549 to i32 (...)***
  %551 = getelementptr inbounds i8, i8* %549, i64 8
  %552 = bitcast i8* %551 to i32*
  store i32 -1, i32* %552, align 8
  %553 = getelementptr inbounds i8, i8* %549, i64 12
  %554 = bitcast i8* %553 to i32*
  store i32 43, i32* %554, align 4
  %555 = getelementptr inbounds i8, i8* %549, i64 16
  %556 = bitcast i8* %555 to i64*
  store i64 %548, i64* %556, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %550, align 8
  %557 = getelementptr inbounds i8, i8* %549, i64 24
  %558 = bitcast i8* %557 to i64*
  store i64 %547, i64* %558, align 8
  %559 = ptrtoint i8* %549 to i64
  br label %737

560:                                              ; preds = %1
  %561 = getelementptr inbounds i8, i8* %16, i64 2
  store i8* %561, i8** %15, align 8
  %562 = load i8, i8* %17, align 1
  %563 = zext i8 %562 to i32
  %564 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %565 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %566 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %565, align 8
  %567 = tail call %"class.SkSL::Expression"* @_ZN4SkSL17PostfixExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorE(%"class.SkSL::Context"* dereferenceable(744) %566, %"class.SkSL::Expression"* %564, i32 %563) #11
  %568 = ptrtoint %"class.SkSL::Expression"* %567 to i64
  br label %737

569:                                              ; preds = %1
  %570 = getelementptr inbounds i8, i8* %16, i64 2
  store i8* %570, i8** %15, align 8
  %571 = load i8, i8* %17, align 1
  %572 = zext i8 %571 to i32
  %573 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %574 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %575 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %574, align 8
  %576 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16PrefixExpression4MakeERKNS_7ContextENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEE(%"class.SkSL::Context"* dereferenceable(744) %575, i32 %572, %"class.SkSL::Expression"* %573) #11
  %577 = ptrtoint %"class.SkSL::Expression"* %576 to i64
  br label %737

578:                                              ; preds = %1
  %579 = getelementptr inbounds i8, i8* %16, i64 2
  store i8* %579, i8** %15, align 8
  %580 = load i8, i8* %17, align 1
  %581 = getelementptr inbounds i8, i8* %16, i64 3
  store i8* %581, i8** %15, align 8
  %582 = load i8, i8* %579, align 1
  %583 = zext i8 %582 to i64
  %584 = shl nuw nsw i64 %583, 8
  %585 = zext i8 %580 to i64
  %586 = or i64 %584, %585
  %587 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 3
  %588 = load i8*, i8** %587, align 8
  %589 = getelementptr inbounds i8, i8* %588, i64 %586
  %590 = load i8, i8* %589, align 1
  %591 = getelementptr inbounds i8, i8* %589, i64 1
  %592 = zext i8 %590 to i64
  %593 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %594 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %593, align 8
  %595 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %595) #11
  %596 = icmp ult i8 %590, 23
  br i1 %596, label %606, label %597

597:                                              ; preds = %578
  %598 = add nuw nsw i64 %592, 16
  %599 = and i64 %598, 496
  %600 = tail call i8* @_Znwm(i64 %599) #13
  %601 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %600, i8** %601, align 8
  %602 = or i64 %599, -9223372036854775808
  %603 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %602, i64* %603, align 8
  %604 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %592, i64* %604, align 8
  %605 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %610

606:                                              ; preds = %578
  %607 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %608 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %607, i64 0, i32 1, i32 0
  store i8 %590, i8* %608, align 1
  %609 = icmp eq i8 %590, 0
  br i1 %609, label %613, label %610

610:                                              ; preds = %606, %597
  %611 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %607, %606 ], [ %605, %597 ]
  %612 = phi i8* [ %595, %606 ], [ %600, %597 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %612, i8* align 1 %591, i64 %592, i1 false) #11
  br label %613

613:                                              ; preds = %606, %610
  %614 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %607, %606 ], [ %611, %610 ]
  %615 = phi i8* [ %595, %606 ], [ %612, %610 ]
  %616 = getelementptr inbounds i8, i8* %615, i64 %592
  store i8 0, i8* %616, align 1
  %617 = call %"class.SkSL::Expression"* @_ZN4SkSL7Setting7ConvertERKNS_7ContextEiRKNS_6StringE(%"class.SkSL::Context"* dereferenceable(744) %594, i32 -1, %"class.SkSL::String"* nonnull dereferenceable(24) %12) #11
  %618 = ptrtoint %"class.SkSL::Expression"* %617 to i64
  %619 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %614, i64 0, i32 1, i32 0
  %620 = load i8, i8* %619, align 1
  %621 = icmp slt i8 %620, 0
  br i1 %621, label %622, label %625

622:                                              ; preds = %613
  %623 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %624 = load i8*, i8** %623, align 8
  call void @_ZdlPv(i8* %624) #13
  br label %625

625:                                              ; preds = %613, %622
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %595) #11
  br label %737

626:                                              ; preds = %1
  %627 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %628 = load i8*, i8** %15, align 8
  %629 = getelementptr inbounds i8, i8* %628, i64 1
  store i8* %629, i8** %15, align 8
  %630 = load i8, i8* %628, align 1
  %631 = zext i8 %630 to i32
  %632 = getelementptr inbounds %class.SkSTArray.242, %class.SkSTArray.242* %13, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %632) #11
  %633 = bitcast %class.SkSTArray.242* %13 to i64*
  store i64 -6148914691236517206, i64* %633, align 8
  %634 = getelementptr inbounds %class.SkSTArray.242, %class.SkSTArray.242* %13, i64 0, i32 0, i32 0, i64 8
  %635 = getelementptr inbounds %class.SkSTArray.242, %class.SkSTArray.242* %13, i64 0, i32 0, i32 0, i64 16
  %636 = bitcast i8* %635 to i64*
  %637 = bitcast i8* %634 to i8**
  store i8* %632, i8** %637, align 8
  store i64 34359738368, i64* %636, align 8
  %638 = icmp eq i8 %630, 0
  br i1 %638, label %646, label %639

639:                                              ; preds = %626
  %640 = bitcast i8* %634 to %class.SkTArray.244*
  br label %689

641:                                              ; preds = %689
  %642 = load i64, i64* %636, align 8
  %643 = lshr i64 %642, 1
  %644 = trunc i64 %643 to i32
  %645 = and i32 %644, 2147483647
  br label %646

646:                                              ; preds = %641, %626
  %647 = phi i32 [ %645, %641 ], [ 0, %626 ]
  %648 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %649 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %648, align 8
  %650 = getelementptr inbounds %class.SkSTArray.242, %class.SkSTArray.242* %14, i64 0, i32 0, i32 0, i64 8
  %651 = getelementptr inbounds %class.SkSTArray.242, %class.SkSTArray.242* %14, i64 0, i32 0, i32 0, i64 0
  %652 = getelementptr inbounds %class.SkSTArray.242, %class.SkSTArray.242* %14, i64 0, i32 0, i32 0, i64 16
  %653 = bitcast i8* %652 to i64*
  %654 = bitcast i8* %650 to i8**
  store i8* %651, i8** %654, align 8
  %655 = bitcast i8* %650 to %class.SkTArray.244*
  store i64 34359738368, i64* %653, align 8
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.244* %655, i32 %647, i32 0) #11
  %656 = load i64, i64* %636, align 8
  %657 = and i64 %656, 4294967294
  %658 = load i64, i64* %653, align 8
  %659 = and i64 %658, -4294967295
  %660 = or i64 %659, %657
  store i64 %660, i64* %653, align 8
  %661 = load i8*, i8** %637, align 8
  %662 = icmp eq i64 %657, 0
  br i1 %662, label %674, label %663

663:                                              ; preds = %646, %663
  %664 = phi i64 [ %669, %663 ], [ 0, %646 ]
  %665 = load i8*, i8** %654, align 8
  %666 = getelementptr inbounds i8, i8* %665, i64 %664
  %667 = getelementptr inbounds i8, i8* %661, i64 %664
  %668 = load i8, i8* %667, align 1
  store i8 %668, i8* %666, align 1
  %669 = add nuw nsw i64 %664, 1
  %670 = load i64, i64* %653, align 8
  %671 = lshr i64 %670, 1
  %672 = and i64 %671, 2147483647
  %673 = icmp ult i64 %669, %672
  br i1 %673, label %663, label %674

674:                                              ; preds = %663, %646
  %675 = call %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744) %649, %"class.SkSL::Expression"* %627, %class.SkSTArray.242* nonnull %14) #11
  %676 = ptrtoint %"class.SkSL::Expression"* %675 to i64
  %677 = load i64, i64* %653, align 8
  %678 = and i64 %677, 1
  %679 = icmp eq i64 %678, 0
  br i1 %679, label %682, label %680

680:                                              ; preds = %674
  %681 = load i8*, i8** %654, align 8
  call void @_Z7sk_freePv(i8* %681) #11
  br label %682

682:                                              ; preds = %674, %680
  %683 = load i64, i64* %636, align 8
  %684 = and i64 %683, 1
  %685 = icmp eq i64 %684, 0
  br i1 %685, label %688, label %686

686:                                              ; preds = %682
  %687 = load i8*, i8** %637, align 8
  call void @_Z7sk_freePv(i8* %687) #11
  br label %688

688:                                              ; preds = %686, %682
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %632) #11
  br label %737

689:                                              ; preds = %705, %639
  %690 = phi i8* [ %629, %639 ], [ %706, %705 ]
  %691 = phi i32 [ 0, %639 ], [ %703, %705 ]
  %692 = getelementptr inbounds i8, i8* %690, i64 1
  store i8* %692, i8** %15, align 8
  %693 = load i8, i8* %690, align 1
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.244* %640, i32 1, i32 1) #11
  %694 = load i8*, i8** %637, align 8
  %695 = load i64, i64* %636, align 8
  %696 = lshr i64 %695, 1
  %697 = and i64 %696, 2147483647
  %698 = getelementptr inbounds i8, i8* %694, i64 %697
  %699 = add i64 %695, 2
  %700 = and i64 %699, 4294967294
  %701 = and i64 %695, -4294967295
  %702 = or i64 %700, %701
  store i64 %702, i64* %636, align 8
  store i8 %693, i8* %698, align 1
  %703 = add nuw nsw i32 %691, 1
  %704 = icmp eq i32 %703, %631
  br i1 %704, label %641, label %705

705:                                              ; preds = %689
  %706 = load i8*, i8** %15, align 8
  br label %689

707:                                              ; preds = %1
  %708 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %709 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %710 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %0)
  %711 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 0
  %712 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %711, align 8
  %713 = tail call %"class.SkSL::Expression"* @_ZN4SkSL17TernaryExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_S9_(%"class.SkSL::Context"* dereferenceable(744) %712, %"class.SkSL::Expression"* %708, %"class.SkSL::Expression"* %709, %"class.SkSL::Expression"* %710) #11
  %714 = ptrtoint %"class.SkSL::Expression"* %713 to i64
  br label %737

715:                                              ; preds = %1
  %716 = getelementptr inbounds i8, i8* %16, i64 2
  store i8* %716, i8** %15, align 8
  %717 = load i8, i8* %17, align 1
  %718 = getelementptr inbounds i8, i8* %16, i64 3
  store i8* %718, i8** %15, align 8
  %719 = load i8, i8* %716, align 1
  %720 = zext i8 %719 to i64
  %721 = shl nuw nsw i64 %720, 8
  %722 = zext i8 %717 to i64
  %723 = or i64 %721, %722
  %724 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %0, i64 0, i32 2, i32 0, i32 0
  %725 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %724, align 8
  %726 = getelementptr inbounds %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %725, i64 %723
  %727 = bitcast %"class.SkSL::Symbol"** %726 to %"class.SkSL::Variable"**
  %728 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %727, align 8
  %729 = getelementptr inbounds i8, i8* %16, i64 4
  store i8* %729, i8** %15, align 8
  %730 = load i8, i8* %718, align 1
  %731 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #11
  %732 = bitcast i8* %731 to %"class.SkSL::VariableReference"*
  tail call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %732, i32 -1, %"class.SkSL::Variable"* %728, i8 signext %730) #11
  %733 = ptrtoint i8* %731 to i64
  br label %737

734:                                              ; preds = %1
  %735 = zext i8 %18 to i32
  %736 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i32 %735)
  br label %737

737:                                              ; preds = %1, %336, %315, %125, %104, %86, %65, %734, %715, %707, %688, %625, %569, %560, %526, %519, %518, %394, %382, %381, %299, %256, %213, %170, %30, %19
  %738 = phi i64 [ 0, %734 ], [ %733, %715 ], [ %714, %707 ], [ %676, %688 ], [ %618, %625 ], [ %577, %569 ], [ %568, %560 ], [ %559, %526 ], [ %525, %519 ], [ %457, %518 ], [ %426, %394 ], [ %393, %382 ], [ %351, %381 ], [ %269, %299 ], [ %226, %256 ], [ %183, %213 ], [ %140, %170 ], [ %49, %30 ], [ %29, %19 ], [ %56, %65 ], [ %56, %86 ], [ %95, %104 ], [ %95, %125 ], [ %306, %315 ], [ %306, %336 ], [ 0, %1 ]
  %739 = inttoptr i64 %738 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %739
}

declare %"class.SkSL::Statement"* @_ZN4SkSL11DoStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Statement"*, %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL19ExpressionStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL12ForStatement4MakeERKNS_7ContextEiNSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEESC_S9_NS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Statement"*, %"class.SkSL::Expression"*, %"class.SkSL::Expression"*, %"class.SkSL::Statement"*, %"class.std::__1::shared_ptr"* byval(%"class.std::__1::shared_ptr") align 8) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL11IfStatement4MakeERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS5_INS_9StatementENS7_ISA_EEEESC_(%"class.SkSL::Context"* dereferenceable(744), i32, i1 zeroext, %"class.SkSL::Expression"*, %"class.SkSL::Statement"*, %"class.SkSL::Statement"*) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL15SwitchStatement4MakeERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi2ENS5_INS_9StatementENS7_ISB_EEEELb0EENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744), i32, i1 zeroext, %"class.SkSL::Expression"*, %class.SkSTArray*, %"class.std::__1::shared_ptr"* byval(%"class.std::__1::shared_ptr") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL10Rehydrator15expressionArrayEv(%class.SkSTArray.225* noalias sret, %"class.SkSL::Rehydrator"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Rehydrator", %"class.SkSL::Rehydrator"* %1, i64 0, i32 4
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 1
  store i8* %5, i8** %3, align 8
  %6 = load i8, i8* %4, align 1
  %7 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %0, i64 0, i32 0, i32 0, i64 0
  %8 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %0, i64 0, i32 0, i32 0, i64 16
  %9 = getelementptr inbounds %class.SkSTArray.225, %class.SkSTArray.225* %0, i64 0, i32 0, i32 0, i64 24
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast i8* %8 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 16, i1 false)
  store i8* %7, i8** %11, align 8
  store i64 17179869184, i64* %10, align 8
  %12 = bitcast i8* %8 to %class.SkTArray.227*
  %13 = zext i8 %6 to i32
  %14 = icmp eq i8 %6, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  store i64 17179869184, i64* %10, align 8
  br label %39

16:                                               ; preds = %2
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.227* %12, i32 %13, i32 0) #11
  %17 = load i64, i64* %10, align 8
  %18 = shl i64 %17, 32
  %19 = and i64 %18, 4294967296
  %20 = and i64 %17, -4294967297
  %21 = or i64 %19, %20
  store i64 %21, i64* %10, align 8
  %22 = bitcast i8* %8 to %"class.std::__1::unique_ptr.78"**
  br label %23

23:                                               ; preds = %23, %16
  %24 = phi i32 [ 0, %16 ], [ %37, %23 ]
  %25 = tail call %"class.SkSL::Expression"* @_ZN4SkSL10Rehydrator10expressionEv(%"class.SkSL::Rehydrator"* %1)
  %26 = ptrtoint %"class.SkSL::Expression"* %25 to i64
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.227* %12, i32 1, i32 1) #11
  %27 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %22, align 8
  %28 = load i64, i64* %10, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %27, i64 %30
  %32 = add i64 %28, 2
  %33 = and i64 %32, 4294967294
  %34 = and i64 %28, -4294967295
  %35 = or i64 %33, %34
  store i64 %35, i64* %10, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.78"* %31 to i64*
  store i64 %26, i64* %36, align 8
  %37 = add nuw nsw i32 %24, 1
  %38 = icmp eq i32 %37, %13
  br i1 %38, label %39, label %23

39:                                               ; preds = %23, %15
  ret void
}

declare %"class.SkSL::Expression"* @_ZN4SkSL16BinaryExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorES9_(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, i32, %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorArray4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray.225*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL19ConstructorCompound4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray.225*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL25ConstructorDiagonalMatrix4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorMatrixResize4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL21ConstructorScalarCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorSplat4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL17ConstructorStruct4MakeERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray.225*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL23ConstructorCompoundCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEEiNS_20FieldAccessOwnerKindE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, i32, i8 signext) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL12FunctionCall4MakeERKNS_7ContextEiPKNS_4TypeERKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENSB_14default_deleteISD_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96), %class.SkSTArray.225*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL15IndexExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL17PostfixExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, i32) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL16PrefixExpression4MakeERKNS_7ContextENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL7Setting7ConvertERKNS_7ContextEiRKNS_6StringE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %class.SkSTArray.242*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL17TernaryExpression4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_S9_(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %"class.SkSL::Expression"*, %"class.SkSL::Expression"*) local_unnamed_addr #2

declare void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"*, %"class.SkSL::Symbol"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD2Ev(%"class.SkSL::Type"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %20, %26
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD0Ev(%"class.SkSL::Type"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %20, %26
  %30 = bitcast %"class.SkSL::Type"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %30) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Type11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Type"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 18
  %4 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %3, align 8, !noalias !13
  %5 = icmp eq %"class.SkSL::Type"* %4, null
  %6 = select i1 %5, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %4
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 0
  %8 = load i8*, i8** %7, align 8, !noalias !13
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8, !noalias !13
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %24, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #13
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8, !alias.scope !13
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8, !alias.scope !13
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8, !alias.scope !13
  br label %30

24:                                               ; preds = %14
  %25 = trunc i64 %10 to i8
  %26 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1, !alias.scope !13
  %28 = bitcast %"class.SkSL::String"* %0 to i8*
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %24, %16
  %31 = phi i8* [ %19, %16 ], [ %28, %24 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %8, i64 %10, i1 false) #11
  br label %32

32:                                               ; preds = %24, %30
  %33 = phi i8* [ %28, %24 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %10
  store i8 0, i8* %34, align 1
  ret void
}

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"struct.SkSL::Modifiers"* dereferenceable(80), %"struct.SkSL::Modifiers"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %9, 8
  %11 = xor i64 %10, %6
  %12 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = shl nsw i64 %14, 16
  %16 = xor i64 %11, %15
  %17 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %74, label %20

20:                                               ; preds = %3
  %21 = tail call i64 @llvm.ctpop.i64(i64 %18) #11, !range !12
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = add i64 %18, -1
  %25 = and i64 %16, %24
  br label %30

26:                                               ; preds = %20
  %27 = icmp ult i64 %16, %18
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = urem i64 %16, %18
  br label %30

30:                                               ; preds = %23, %26, %28
  %31 = phi i64 [ %25, %23 ], [ %29, %28 ], [ %16, %26 ]
  %32 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, i64 %31
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %74, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %74, label %41

41:                                               ; preds = %37
  %42 = add i64 %18, -1
  %43 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0
  br label %44

44:                                               ; preds = %41, %70
  %45 = phi %"struct.std::__1::__hash_node_base"* [ %39, %41 ], [ %72, %70 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %16
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %22, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %42
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %18
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %18
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %31
  br i1 %59, label %60, label %74

60:                                               ; preds = %44, %57
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to %"struct.SkSL::Layout"*
  %63 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %62, %"struct.SkSL::Layout"* dereferenceable(72) %43) #11
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 11
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = load i32, i32* %4, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %160, label %70

70:                                               ; preds = %64, %60
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base"* %72, null
  br i1 %73, label %74, label %44

74:                                               ; preds = %57, %70, %37, %30, %3
  %75 = phi i64 [ %31, %30 ], [ -6148914691236517206, %3 ], [ %31, %37 ], [ %31, %70 ], [ %31, %57 ]
  %76 = tail call i8* @_Znwm(i64 96) #13, !noalias !16
  %77 = getelementptr inbounds i8, i8* %76, i64 16
  %78 = bitcast %"struct.SkSL::Modifiers"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 80, i1 false) #11, !noalias !16
  %79 = getelementptr inbounds i8, i8* %76, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %16, i64* %80, align 8, !noalias !16
  %81 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %81, align 8, !noalias !16
  %82 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %18 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %19, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %74
  %93 = shl i64 %18, 1
  %94 = icmp ult i64 %18, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %18) #11, !range !12
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %104)
  %105 = load i64, i64* %17, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !12
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %16
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %16, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %16, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %74
  %116 = phi i64 [ %18, %74 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %75, %74 ], [ %110, %108 ], [ %16, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %76 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i8**
  store i8* %76, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base"* %124, %"struct.std::__1::__hash_node_base"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !12
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %76 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %76, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base"* [ %157, %156 ], [ %45, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"*, %"struct.SkSL::Layout"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %81

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %81

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %81

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %81

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %81

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %81

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %81

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 7
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %81

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 8
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 8
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %81

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 9
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 9
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %81

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 10
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 10
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %81

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12
  %70 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = tail call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* %69, i8* %71, i64 %73) #11
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 13
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 13
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %77, %79
  br label %81

81:                                               ; preds = %75, %68, %62, %56, %50, %44, %38, %32, %26, %20, %14, %8, %2
  %82 = phi i1 [ false, %68 ], [ false, %62 ], [ false, %56 ], [ false, %50 ], [ false, %44 ], [ false, %38 ], [ false, %32 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %80, %75 ]
  ret i1 %82
}

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %151, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !19

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %159, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %159, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %145
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %149, %145 ]
  %81 = phi i64 [ %71, %77 ], [ %147, %145 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %146, %145 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %145, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 11
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base"* %104, null
  br i1 %105, label %131, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to %"struct.SkSL::Layout"*
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %104, i64 2
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to %"struct.SkSL::Layout"*
  %111 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %110) #11
  br i1 %111, label %117, label %131

112:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %145

113:                                              ; preds = %126
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 2
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %114 to %"struct.SkSL::Layout"*
  %116 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %115) #11
  br i1 %116, label %117, label %131

117:                                              ; preds = %106, %113
  %118 = phi %"struct.std::__1::__hash_node_base"* [ %127, %113 ], [ %80, %106 ]
  %119 = phi %"struct.std::__1::__hash_node_base"** [ %128, %113 ], [ %103, %106 ]
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %129, %113 ], [ %104, %106 ]
  %121 = load i32, i32* %102, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 11
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i32*
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %121, %124
  br i1 %125, label %126, label %131

126:                                              ; preds = %117
  %127 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 0, i32 0
  %129 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base"* %129, null
  br i1 %130, label %131, label %113

131:                                              ; preds = %113, %126, %117, %106, %100
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %80, %106 ], [ %118, %117 ], [ %127, %126 ], [ %127, %113 ]
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %134, i64* %135, align 8
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, i64 %93
  %138 = bitcast %"struct.std::__1::__hash_node_base"** %137 to i64**
  %139 = load i64*, i64** %138, align 8
  %140 = load i64, i64* %139, align 8
  store i64 %140, i64* %133, align 8
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %93
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %143, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %144, align 8
  br label %145

145:                                              ; preds = %92, %131, %112
  %146 = phi %"struct.std::__1::__hash_node_base"* [ %80, %112 ], [ %82, %131 ], [ %80, %92 ]
  %147 = phi i64 [ %93, %112 ], [ %81, %131 ], [ %81, %92 ]
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %146, i64 0, i32 0
  %149 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %148, align 8
  %150 = icmp eq %"struct.std::__1::__hash_node_base"* %149, null
  br i1 %150, label %159, label %79

151:                                              ; preds = %2
  %152 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %152, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base"** %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %151
  %156 = bitcast %"struct.std::__1::__hash_node_base"** %153 to i8*
  tail call void @_ZdlPv(i8* %156) #13
  br label %157

157:                                              ; preds = %151, %155
  %158 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %158, align 8
  br label %159

159:                                              ; preds = %145, %70, %35, %157
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIlED0Ev(%"class.SkSL::Literal"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIlE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  tail call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret %0, i64 %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL10Expression4typeEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %0, i64 0, i32 1
  %3 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2, align 8
  ret %"class.SkSL::Type"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 43
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %8, %11
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i32 [ %13, %6 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression19isConstantOrUniformEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::Expression"* %0 to i1 (%"class.SkSL::Expression"*)***
  %3 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %3, i64 4
  %5 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.SkSL::Expression"* %0) #11
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE(%"class.SkSL::Literal"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, 3
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  %12 = bitcast %"class.SkSL::Literal"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %13 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %13, i64 3
  %15 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %14, align 8
  %16 = tail call dereferenceable(184) %"class.SkSL::Type"* %15(%"class.SkSL::Expression"* %11) #11
  %17 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %16, %"class.SkSL::Type"* dereferenceable(184) %1) #11
  %18 = extractvalue { i64, i8 } %17, 0
  %19 = extractvalue { i64, i8 } %17, 1
  br label %20

20:                                               ; preds = %2, %6, %10
  %21 = phi i64 [ %18, %10 ], [ 0, %6 ], [ 0, %2 ]
  %22 = phi i8 [ %19, %10 ], [ 0, %6 ], [ 0, %2 ]
  %23 = insertvalue { i64, i8 } undef, i64 %21, 0
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1
  ret { i64, i8 } %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIlE5cloneEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.SkSL::Type"** %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #11
  %7 = load i32, i32* %2, align 4
  %8 = bitcast i8* %6 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %7, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 43, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %14, align 8
  %15 = bitcast i8* %6 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE(%"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::Expression"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %4 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %4, i64 3
  %6 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, align 8
  %7 = tail call dereferenceable(184) %"class.SkSL::Type"* %6(%"class.SkSL::Expression"* %0) #11
  %8 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %7, %"class.SkSL::Type"* dereferenceable(184) %1) #11
  ret { i64, i8 } %8
}

declare { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #2

declare void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret, i64) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL14BreakStatementD0Ev(%"class.SkSL::BreakStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::BreakStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL14BreakStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::BreakStatement"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 6, i8* %4, align 1
  %5 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6, i1 false) #11
  %6 = getelementptr inbounds i8, i8* %5, i64 6
  store i8 0, i8* %6, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL9Statement7isEmptyEv(%"class.SkSL::Statement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL14BreakStatement5cloneEv(%"class.SkSL::BreakStatement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::BreakStatement", %"class.SkSL::BreakStatement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #11
  %4 = load i32, i32* %2, align 4
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 %4, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 12
  %8 = bitcast i8* %7 to i32*
  store i32 17, i32* %8, align 4
  %9 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL14BreakStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast i8* %3 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL17ContinueStatementD0Ev(%"class.SkSL::ContinueStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::ContinueStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL17ContinueStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::ContinueStatement"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 9, i8* %4, align 1
  %5 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i64 9, i1 false) #11
  %6 = getelementptr inbounds i8, i8* %5, i64 9
  store i8 0, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL17ContinueStatement5cloneEv(%"class.SkSL::ContinueStatement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ContinueStatement", %"class.SkSL::ContinueStatement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #11
  %4 = load i32, i32* %2, align 4
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 %4, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 12
  %8 = bitcast i8* %7 to i32*
  store i32 18, i32* %8, align 4
  %9 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL17ContinueStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast i8* %3 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL16DiscardStatementD0Ev(%"class.SkSL::DiscardStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::DiscardStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL16DiscardStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::DiscardStatement"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 8, i8* %4, align 1
  %5 = bitcast %"class.SkSL::String"* %0 to i64*
  store i64 4279671308514716004, i64* %5, align 8
  %6 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to i8*
  store i8 0, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL16DiscardStatement5cloneEv(%"class.SkSL::DiscardStatement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::DiscardStatement", %"class.SkSL::DiscardStatement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #11
  %4 = load i32, i32* %2, align 4
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 %4, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 12
  %8 = bitcast i8* %7 to i32*
  store i32 19, i32* %8, align 4
  %9 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL16DiscardStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast i8* %3 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL12InlineMarkerD0Ev(%"class.SkSL::InlineMarker"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::InlineMarker"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL12InlineMarker11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::InlineMarker"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 12, i8* %9, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i64 12, i1 false) #11
  %10 = getelementptr inbounds i8, i8* %7, i64 12
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.SkSL::InlineMarker", %"class.SkSL::InlineMarker"* %1, i64 0, i32 1
  %12 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %12, i64 0, i32 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %12, i64 0, i32 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* %14, i64 %16) #11
  %17 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  store i8 3, i8* %19, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i64 3, i1 false) #11
  %20 = getelementptr inbounds i8, i8* %17, i64 3
  store i8 0, i8* %20, align 1
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #11
  %21 = load i8, i8* %19, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #13
  br label %26

26:                                               ; preds = %2, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  %27 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %26, %31
  %35 = load i8, i8* %9, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #13
  br label %40

40:                                               ; preds = %34, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL12InlineMarker7isEmptyEv(%"class.SkSL::InlineMarker"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL12InlineMarker5cloneEv(%"class.SkSL::InlineMarker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::InlineMarker", %"class.SkSL::InlineMarker"* %0, i64 0, i32 1
  %3 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #11
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 24, i32* %9, align 4
  %10 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL12InlineMarkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 16
  %12 = bitcast i8* %11 to i64*
  store i64 %4, i64* %12, align 8
  %13 = bitcast i8* %5 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %13
}

declare void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL15ReturnStatementD2Ev(%"class.SkSL::ReturnStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to void (%"class.SkSL::Expression"*)***
  %8 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %9, align 8
  tail call void %10(%"class.SkSL::Expression"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL15ReturnStatementD0Ev(%"class.SkSL::ReturnStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to void (%"class.SkSL::Expression"*)***
  %8 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %9, align 8
  tail call void %10(%"class.SkSL::Expression"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.SkSL::ReturnStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL15ReturnStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::ReturnStatement"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %5, align 8
  %7 = icmp eq %"class.SkSL::Expression"* %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %6, i64 0, i32 0
  %12 = bitcast %"class.SkSL::Expression"* %6 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %13 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %13, i64 2
  %15 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %14, align 8
  call void %15(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %11) #11
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %4) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #11
  %16 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #13
  br label %23

23:                                               ; preds = %8, %20
  %24 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %23, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  br label %37

32:                                               ; preds = %2
  %33 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 7, i8* %34, align 1
  %35 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i64 7, i1 false) #11
  %36 = getelementptr inbounds i8, i8* %35, i64 7
  store i8 0, i8* %36, align 1
  br label %37

37:                                               ; preds = %32, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL15ReturnStatement5cloneEv(%"class.SkSL::ReturnStatement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  %5 = bitcast %"class.SkSL::Expression"* %4 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %6 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %6, i64 10
  %8 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %7, align 8
  %9 = tail call %"class.SkSL::Expression"* %8(%"class.SkSL::Expression"* %4) #11
  %10 = ptrtoint %"class.SkSL::Expression"* %9 to i64
  %11 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #11
  %12 = load i32, i32* %2, align 4
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 26, i32* %16, align 4
  %17 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %10, i64* %19, align 8
  %20 = bitcast i8* %11 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIbED0Ev(%"class.SkSL::Literal.231"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal.231"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIbE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal.231"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.231", %"class.SkSL::Literal.231"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !11
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)
  %7 = select i1 %5, i64 5, i64 4
  %8 = trunc i64 %7 to i8
  %9 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 %8, i8* %10, align 1
  %11 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 %6, i64 %7, i1 false) #11
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv(%"class.SkSL::Literal.231"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal.231"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 31
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.231", %"class.SkSL::Literal.231"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !11
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %11 = bitcast %"class.SkSL::Expression"* %10 to i8*
  %12 = load i8, i8* %11, align 8, !range !11
  %13 = icmp ne i8 %12, 0
  %14 = xor i1 %9, %13
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i32 [ %15, %6 ], [ -1, %2 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal.231"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi(%"class.SkSL::Literal.231"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.231", %"class.SkSL::Literal.231"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE5cloneEv(%"class.SkSL::Literal.231"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal.231", %"class.SkSL::Literal.231"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal.231", %"class.SkSL::Literal.231"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !11
  %5 = getelementptr inbounds %"class.SkSL::Literal.231", %"class.SkSL::Literal.231"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::Type"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #11
  %9 = load i32, i32* %2, align 4
  %10 = bitcast i8* %8 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %9, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 31, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %7, i64* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  store i8 %4, i8* %17, align 8
  %18 = bitcast i8* %8 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %18
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIfED0Ev(%"class.SkSL::Literal.238"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal.238"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIfE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal.238"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.238", %"class.SkSL::Literal.238"* %1, i64 0, i32 1
  %4 = load float, float* %3, align 8
  %5 = fpext float %4 to double
  tail call void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* sret %0, double %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv(%"class.SkSL::Literal.238"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal.238"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 45
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.238", %"class.SkSL::Literal.238"* %0, i64 0, i32 1
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to float*
  %11 = load float, float* %10, align 8
  %12 = fcmp oeq float %8, %11
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i32 [ %13, %6 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal.238"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE(%"class.SkSL::Literal.238"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.238", %"class.SkSL::Literal.238"* %0, i64 0, i32 0
  %8 = bitcast %"class.SkSL::Literal.238"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %9 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %9, i64 3
  %11 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.SkSL::Type"* %11(%"class.SkSL::Expression"* %7) #11
  %13 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %12, %"class.SkSL::Type"* dereferenceable(184) %1) #11
  %14 = extractvalue { i64, i8 } %13, 0
  %15 = extractvalue { i64, i8 } %13, 1
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i64 [ %14, %6 ], [ 0, %2 ]
  %18 = phi i8 [ %15, %6 ], [ 0, %2 ]
  %19 = insertvalue { i64, i8 } undef, i64 %17, 0
  %20 = insertvalue { i64, i8 } %19, i8 %18, 1
  ret { i64, i8 } %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi(%"class.SkSL::Literal.238"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.238", %"class.SkSL::Literal.238"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIfE5cloneEv(%"class.SkSL::Literal.238"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal.238", %"class.SkSL::Literal.238"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal.238", %"class.SkSL::Literal.238"* %0, i64 0, i32 1
  %4 = bitcast float* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Literal.238", %"class.SkSL::Literal.238"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.SkSL::Type"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #11
  %10 = load i32, i32* %2, align 4
  %11 = bitcast i8* %9 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 45, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = bitcast i8* %16 to i64*
  store i64 %8, i64* %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 %5, i32* %19, align 8
  %20 = bitcast i8* %9 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %20
}

declare void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* sret, double) local_unnamed_addr #2

declare void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"*, i32, %"class.SkSL::Variable"*, i8 signext) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #10

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.89"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %42, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %42, align 8
  %44 = icmp eq %"class.SkSL::Statement"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Statement"* %43 to void (%"class.SkSL::Statement"*)***
  %47 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %48, align 8
  tail call void %49(%"class.SkSL::Statement"* nonnull %43) #11
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %62, align 8
  %64 = icmp eq %"class.SkSL::Statement"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Statement"* %63 to void (%"class.SkSL::Statement"*)***
  %67 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %68, align 8
  tail call void %69(%"class.SkSL::Statement"* nonnull %63) #11
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #11
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.89"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %61, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %61, align 8
  %63 = icmp eq %"class.SkSL::Statement"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Statement"* %62 to void (%"class.SkSL::Statement"*)***
  %66 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, align 8
  tail call void %68(%"class.SkSL::Statement"* nonnull %62) #11
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #11
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL20GlobalVarDeclarationD2Ev(%"class.SkSL::GlobalVarDeclaration"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20GlobalVarDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::Statement"*)***
  %8 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %9, align 8
  tail call void %10(%"class.SkSL::Statement"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL20GlobalVarDeclarationD0Ev(%"class.SkSL::GlobalVarDeclaration"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20GlobalVarDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::Statement"*)***
  %8 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %9, align 8
  tail call void %10(%"class.SkSL::Statement"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.SkSL::GlobalVarDeclaration"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL20GlobalVarDeclaration11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::GlobalVarDeclaration"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %4, i64 0, i32 0
  %6 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %7 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %7, i64 2
  %9 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %8, align 8
  tail call void %9(%"class.SkSL::String"* sret %0, %"class.SkSL::IRNode"* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL20GlobalVarDeclaration5cloneEv(%"class.SkSL::GlobalVarDeclaration"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %2, align 8
  %4 = bitcast %"class.SkSL::Statement"* %3 to %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)***
  %5 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)**, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %5, i64 4
  %7 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %6, align 8
  %8 = tail call %"class.SkSL::Statement"* %7(%"class.SkSL::Statement"* %3) #11
  %9 = ptrtoint %"class.SkSL::Statement"* %8 to i64
  %10 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #11
  %11 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %8, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 4, i32* %16, align 4
  %17 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20GlobalVarDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %10, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %9, i64* %19, align 8
  %20 = bitcast i8* %10 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray.227* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.227*, %class.SkTArray.227* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray.227* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray.227, %class.SkTArray.227* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray.227, %class.SkTArray.227* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray.227, %class.SkTArray.227* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.227* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray.227* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray.227, %class.SkTArray.227* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.78"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %42, align 8
  %44 = icmp eq %"class.SkSL::Expression"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Expression"* %43 to void (%"class.SkSL::Expression"*)***
  %47 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %48, align 8
  tail call void %49(%"class.SkSL::Expression"* nonnull %43) #11
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %62, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %62, align 8
  %64 = icmp eq %"class.SkSL::Expression"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Expression"* %63 to void (%"class.SkSL::Expression"*)***
  %67 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %68, align 8
  tail call void %69(%"class.SkSL::Expression"* nonnull %63) #11
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray.227* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.227*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.227, %class.SkTArray.227* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #11
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.227, %class.SkTArray.227* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.78"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %61, align 8
  %63 = icmp eq %"class.SkSL::Expression"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Expression"* %62 to void (%"class.SkSL::Expression"*)***
  %66 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, align 8
  tail call void %68(%"class.SkSL::Expression"* nonnull %62) #11
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.227* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #11
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.244*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.244, %class.SkTArray.244* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 1) #11
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %61, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.244, %class.SkTArray.244* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %56, %50 ]
  %52 = getelementptr inbounds i8, i8* %44, i64 %51
  %53 = load i8*, i8** %49, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %51
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %52, align 1
  %56 = add nuw nsw i64 %51, 1
  %57 = load i64, i64* %4, align 8
  %58 = lshr i64 %57, 1
  %59 = and i64 %58, 2147483647
  %60 = icmp ult i64 %56, %59
  br i1 %60, label %50, label %61

61:                                               ; preds = %50, %35
  %62 = phi i64 [ %45, %35 ], [ %57, %50 ]
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.SkTArray.244, %class.SkTArray.244* %0, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %67) #11
  %68 = load i64, i64* %4, align 8
  br label %69

69:                                               ; preds = %61, %65
  %70 = phi i64 [ %62, %61 ], [ %68, %65 ]
  %71 = getelementptr inbounds %class.SkTArray.244, %class.SkTArray.244* %0, i64 0, i32 0
  store i8* %44, i8** %71, align 8
  %72 = and i64 %70, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %69, %32, %21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.44"*, %"class.std::__1::unique_ptr.46"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.46"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.44"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.44"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.46"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.46"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.46"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.46"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.46"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.46"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.46"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.46"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.46"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::Symbol"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.46"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.46"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.46"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.46"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !21

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.46"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.46"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.46"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.46"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.46"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.46"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.46"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.46"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.46"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.46"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.46"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.46"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.46"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.46"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.46"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.46"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.46"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.46"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.46"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.46"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.46"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.46"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.46"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.46"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.46"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.46"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.46"*
  %138 = icmp eq %"class.std::__1::unique_ptr.46"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.46"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %142, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %142, align 8
  %144 = icmp eq %"class.SkSL::Symbol"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::Symbol"* %143 to void (%"class.SkSL::Symbol"*)***
  %147 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %147, i64 1
  %149 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %148, align 8
  tail call void %149(%"class.SkSL::Symbol"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.46"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare void @_ZN4SkSL19FunctionDeclarationC1EiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorIPKNS_8VariableENS5_9allocatorIS9_EEEEPKNS_4TypeEb(%"class.SkSL::FunctionDeclaration"*, i32, %"struct.SkSL::Modifiers"*, i8*, i64, %"class.std::__1::vector.76"*, %"class.SkSL::Type"*, i1 zeroext) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL5FieldD0Ev(%"class.SkSL::Field"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::Field"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL5Field11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Field"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.SkSL::Field", %"class.SkSL::Field"* %1, i64 0, i32 1
  %8 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %7, align 8
  call void @_ZNK4SkSL8Variable11descriptionEv(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::Variable"* %8)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #11
  %9 = getelementptr inbounds %"class.SkSL::Field", %"class.SkSL::Field"* %1, i64 0, i32 0, i32 1, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::Field", %"class.SkSL::Field"* %1, i64 0, i32 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* %10, i64 %12) #11
  %13 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %2, %17
  %21 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %20, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL8Variable11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Variable"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 2
  %10 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %9, align 8
  call void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* nonnull sret %5, %"struct.SkSL::Modifiers"* %10)
  %11 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 2
  %12 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* %14, i64 %16) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #11
  %17 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 1, i32 1
  %20 = load i64, i64* %19, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* %18, i64 %20) #11
  %21 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #13
  br label %36

36:                                               ; preds = %28, %33
  %37 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #13
  br label %44

44:                                               ; preds = %36, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Modifiers"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0
  %4 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 24, i1 false)
  tail call void @_ZNK4SkSL6Layout11descriptionEv(%"class.SkSL::String"* sret %0, %"struct.SkSL::Layout"* %3)
  %5 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0)) #11
  %11 = load i32, i32* %5, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i32 [ %6, %2 ], [ %11, %9 ]
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)) #11
  %18 = load i32, i32* %5, align 8
  br label %19

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %13, %12 ], [ %18, %16 ]
  %21 = and i32 %20, 16
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0)) #11
  %25 = load i32, i32* %5, align 8
  br label %26

26:                                               ; preds = %19, %23
  %27 = phi i32 [ %20, %19 ], [ %25, %23 ]
  %28 = and i32 %27, 32
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0)) #11
  %32 = load i32, i32* %5, align 8
  br label %33

33:                                               ; preds = %26, %30
  %34 = phi i32 [ %27, %26 ], [ %32, %30 ]
  %35 = and i32 %34, 64
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i64 0, i64 0)) #11
  %39 = load i32, i32* %5, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i32 [ %34, %33 ], [ %39, %37 ]
  %42 = and i32 %41, 512
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i64 0, i64 0)) #11
  %46 = load i32, i32* %5, align 8
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i32 [ %41, %40 ], [ %46, %44 ]
  %49 = and i32 %48, 6
  %50 = icmp eq i32 %49, 6
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = and i32 %48, 2
  %53 = icmp eq i32 %52, 0
  %54 = and i32 %48, 6
  %55 = icmp eq i32 %54, 0
  %56 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0)
  br i1 %55, label %60, label %57

57:                                               ; preds = %51, %47
  %58 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), %47 ], [ %56, %51 ]
  %59 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* %58) #11
  br label %60

60:                                               ; preds = %51, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL6Layout11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Layout"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.SkSL::String", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.SkSL::String", align 8
  %30 = alloca %"class.SkSL::String", align 8
  %31 = alloca %"class.SkSL::String", align 8
  %32 = alloca %"class.SkSL::String", align 8
  %33 = alloca %"class.SkSL::String", align 8
  %34 = alloca %"class.SkSL::String", align 8
  %35 = alloca %"class.SkSL::String", align 8
  %36 = alloca %"class.SkSL::String", align 8
  %37 = alloca %"class.SkSL::String", align 8
  %38 = alloca %"class.SkSL::String", align 8
  %39 = alloca %"class.SkSL::String", align 8
  %40 = alloca %"class.SkSL::String", align 8
  %41 = alloca %"class.SkSL::String", align 8
  %42 = alloca %"class.SkSL::String", align 8
  %43 = alloca %"class.SkSL::String", align 8
  %44 = alloca %"class.SkSL::String", align 8
  %45 = alloca %"class.SkSL::String", align 8
  %46 = alloca %"class.SkSL::String", align 8
  %47 = alloca %"class.SkSL::String", align 8
  %48 = alloca %"class.SkSL::String", align 8
  %49 = alloca %"class.SkSL::String", align 8
  %50 = alloca %"class.SkSL::String", align 8
  %51 = alloca %"class.SkSL::String", align 8
  %52 = alloca %"class.SkSL::String", align 8
  %53 = alloca %"class.SkSL::String", align 8
  %54 = alloca %"class.SkSL::String", align 8
  %55 = alloca %"class.SkSL::String", align 8
  %56 = alloca %"class.SkSL::String", align 8
  %57 = alloca %"class.SkSL::String", align 8
  %58 = alloca %"class.SkSL::String", align 8
  %59 = alloca %"class.SkSL::String", align 8
  %60 = alloca %"class.SkSL::String", align 8
  %61 = alloca %"class.SkSL::String", align 8
  %62 = alloca %"class.SkSL::String", align 8
  %63 = alloca %"class.SkSL::String", align 8
  %64 = alloca %"class.SkSL::String", align 8
  %65 = alloca %"class.SkSL::String", align 8
  %66 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #11
  %69 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, -1
  br i1 %71, label %72, label %111

72:                                               ; preds = %2
  %73 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #11
  %74 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #11
  %75 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #11
  %76 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 0, i8* %77, align 1, !alias.scope !22
  store i8 0, i8* %75, align 8, !alias.scope !22
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0)) #11
  %78 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #11
  %79 = load i32, i32* %69, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %6, i32 %79) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #11
  %80 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #11
  %81 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %72
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #13
  br label %88

88:                                               ; preds = %72, %85
  %89 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #13
  br label %96

96:                                               ; preds = %88, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #11
  %97 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #13
  br label %104

104:                                              ; preds = %96, %101
  %105 = load i8, i8* %77, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #13
  br label %110

110:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #11
  br label %111

111:                                              ; preds = %110, %2
  %112 = phi i8 [ 0, %110 ], [ 1, %2 ]
  %113 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = icmp sgt i32 %114, -1
  br i1 %115, label %116, label %161

116:                                              ; preds = %111
  %117 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #11
  %118 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #11
  %119 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #11
  %120 = icmp eq i8 %112, 0
  %121 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  br i1 %120, label %124, label %123

123:                                              ; preds = %116
  store i8 0, i8* %122, align 1, !alias.scope !25
  store i8 0, i8* %119, align 8, !alias.scope !25
  br label %127

124:                                              ; preds = %116
  store i8 2, i8* %122, align 1, !alias.scope !25
  %125 = bitcast %"class.SkSL::String"* %9 to i16*
  store i16 8236, i16* %125, align 8, !alias.scope !25
  %126 = getelementptr inbounds i8, i8* %119, i64 2
  store i8 0, i8* %126, align 2, !alias.scope !25
  br label %127

127:                                              ; preds = %123, %124
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #11
  %128 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #11
  %129 = load i32, i32* %113, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %10, i32 %129) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, %"class.SkSL::String"* nonnull dereferenceable(24) %10) #11
  %130 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %7) #11
  %131 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %137) #13
  br label %138

138:                                              ; preds = %127, %135
  %139 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #13
  br label %146

146:                                              ; preds = %138, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #11
  %147 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #13
  br label %154

154:                                              ; preds = %146, %151
  %155 = load i8, i8* %122, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #13
  br label %160

160:                                              ; preds = %154, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #11
  br label %161

161:                                              ; preds = %160, %111
  %162 = phi i8 [ 0, %160 ], [ %112, %111 ]
  %163 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = icmp sgt i32 %164, -1
  br i1 %165, label %166, label %211

166:                                              ; preds = %161
  %167 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #11
  %168 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #11
  %169 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #11
  %170 = icmp eq i8 %162, 0
  %171 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  br i1 %170, label %174, label %173

173:                                              ; preds = %166
  store i8 0, i8* %172, align 1, !alias.scope !28
  store i8 0, i8* %169, align 8, !alias.scope !28
  br label %177

174:                                              ; preds = %166
  store i8 2, i8* %172, align 1, !alias.scope !28
  %175 = bitcast %"class.SkSL::String"* %13 to i16*
  store i16 8236, i16* %175, align 8, !alias.scope !28
  %176 = getelementptr inbounds i8, i8* %169, i64 2
  store i8 0, i8* %176, align 2, !alias.scope !28
  br label %177

177:                                              ; preds = %173, %174
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0)) #11
  %178 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #11
  %179 = load i32, i32* %163, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %14, i32 %179) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #11
  %180 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %11) #11
  %181 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %187) #13
  br label %188

188:                                              ; preds = %177, %185
  %189 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %195) #13
  br label %196

196:                                              ; preds = %188, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #11
  %197 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %203) #13
  br label %204

204:                                              ; preds = %196, %201
  %205 = load i8, i8* %172, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %209) #13
  br label %210

210:                                              ; preds = %204, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #11
  br label %211

211:                                              ; preds = %210, %161
  %212 = phi i8 [ 0, %210 ], [ %162, %161 ]
  %213 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %214 = load i32, i32* %213, align 8
  %215 = icmp sgt i32 %214, -1
  br i1 %215, label %216, label %261

216:                                              ; preds = %211
  %217 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #11
  %218 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #11
  %219 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #11
  %220 = icmp eq i8 %212, 0
  %221 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %221, i64 0, i32 1, i32 0
  br i1 %220, label %224, label %223

223:                                              ; preds = %216
  store i8 0, i8* %222, align 1, !alias.scope !31
  store i8 0, i8* %219, align 8, !alias.scope !31
  br label %227

224:                                              ; preds = %216
  store i8 2, i8* %222, align 1, !alias.scope !31
  %225 = bitcast %"class.SkSL::String"* %17 to i16*
  store i16 8236, i16* %225, align 8, !alias.scope !31
  %226 = getelementptr inbounds i8, i8* %219, i64 2
  store i8 0, i8* %226, align 2, !alias.scope !31
  br label %227

227:                                              ; preds = %223, %224
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i64 0, i64 0)) #11
  %228 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #11
  %229 = load i32, i32* %213, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %18, i32 %229) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %15, %"class.SkSL::String"* nonnull %16, %"class.SkSL::String"* nonnull dereferenceable(24) %18) #11
  %230 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %15) #11
  %231 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %231, i64 0, i32 1, i32 0
  %233 = load i8, i8* %232, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %227
  %236 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  call void @_ZdlPv(i8* %237) #13
  br label %238

238:                                              ; preds = %227, %235
  %239 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %246

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  call void @_ZdlPv(i8* %245) #13
  br label %246

246:                                              ; preds = %238, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #11
  %247 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %247, i64 0, i32 1, i32 0
  %249 = load i8, i8* %248, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %254

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load i8*, i8** %252, align 8
  call void @_ZdlPv(i8* %253) #13
  br label %254

254:                                              ; preds = %246, %251
  %255 = load i8, i8* %222, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %260

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  call void @_ZdlPv(i8* %259) #13
  br label %260

260:                                              ; preds = %254, %257
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #11
  br label %261

261:                                              ; preds = %260, %211
  %262 = phi i8 [ 0, %260 ], [ %212, %211 ]
  %263 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %264, -1
  br i1 %265, label %266, label %311

266:                                              ; preds = %261
  %267 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #11
  %268 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #11
  %269 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %269) #11
  %270 = icmp eq i8 %262, 0
  %271 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %272 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %271, i64 0, i32 1, i32 0
  br i1 %270, label %274, label %273

273:                                              ; preds = %266
  store i8 0, i8* %272, align 1, !alias.scope !34
  store i8 0, i8* %269, align 8, !alias.scope !34
  br label %277

274:                                              ; preds = %266
  store i8 2, i8* %272, align 1, !alias.scope !34
  %275 = bitcast %"class.SkSL::String"* %21 to i16*
  store i16 8236, i16* %275, align 8, !alias.scope !34
  %276 = getelementptr inbounds i8, i8* %269, i64 2
  store i8 0, i8* %276, align 2, !alias.scope !34
  br label %277

277:                                              ; preds = %273, %274
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::String"* nonnull %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0)) #11
  %278 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %278) #11
  %279 = load i32, i32* %263, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %22, i32 %279) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* nonnull %20, %"class.SkSL::String"* nonnull dereferenceable(24) %22) #11
  %280 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %19) #11
  %281 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %277
  %286 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load i8*, i8** %286, align 8
  call void @_ZdlPv(i8* %287) #13
  br label %288

288:                                              ; preds = %277, %285
  %289 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %289, i64 0, i32 1, i32 0
  %291 = load i8, i8* %290, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %293, label %296

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i8*, i8** %294, align 8
  call void @_ZdlPv(i8* %295) #13
  br label %296

296:                                              ; preds = %288, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %278) #11
  %297 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %298 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %297, i64 0, i32 1, i32 0
  %299 = load i8, i8* %298, align 1
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %301, label %304

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load i8*, i8** %302, align 8
  call void @_ZdlPv(i8* %303) #13
  br label %304

304:                                              ; preds = %296, %301
  %305 = load i8, i8* %272, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %304
  %308 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #13
  br label %310

310:                                              ; preds = %304, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %269) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #11
  br label %311

311:                                              ; preds = %310, %261
  %312 = phi i8 [ 0, %310 ], [ %262, %261 ]
  %313 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %314 = load i32, i32* %313, align 8
  %315 = icmp sgt i32 %314, -1
  br i1 %315, label %316, label %361

316:                                              ; preds = %311
  %317 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %317) #11
  %318 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %318) #11
  %319 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319) #11
  %320 = icmp eq i8 %312, 0
  %321 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %321, i64 0, i32 1, i32 0
  br i1 %320, label %324, label %323

323:                                              ; preds = %316
  store i8 0, i8* %322, align 1, !alias.scope !37
  store i8 0, i8* %319, align 8, !alias.scope !37
  br label %327

324:                                              ; preds = %316
  store i8 2, i8* %322, align 1, !alias.scope !37
  %325 = bitcast %"class.SkSL::String"* %25 to i16*
  store i16 8236, i16* %325, align 8, !alias.scope !37
  %326 = getelementptr inbounds i8, i8* %319, i64 2
  store i8 0, i8* %326, align 2, !alias.scope !37
  br label %327

327:                                              ; preds = %323, %324
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %24, %"class.SkSL::String"* nonnull %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36, i64 0, i64 0)) #11
  %328 = bitcast %"class.SkSL::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %328) #11
  %329 = load i32, i32* %313, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %26, i32 %329) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %23, %"class.SkSL::String"* nonnull %24, %"class.SkSL::String"* nonnull dereferenceable(24) %26) #11
  %330 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %23) #11
  %331 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %331, i64 0, i32 1, i32 0
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %338

335:                                              ; preds = %327
  %336 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load i8*, i8** %336, align 8
  call void @_ZdlPv(i8* %337) #13
  br label %338

338:                                              ; preds = %327, %335
  %339 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %339, i64 0, i32 1, i32 0
  %341 = load i8, i8* %340, align 1
  %342 = icmp slt i8 %341, 0
  br i1 %342, label %343, label %346

343:                                              ; preds = %338
  %344 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load i8*, i8** %344, align 8
  call void @_ZdlPv(i8* %345) #13
  br label %346

346:                                              ; preds = %338, %343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %328) #11
  %347 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %348 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %347, i64 0, i32 1, i32 0
  %349 = load i8, i8* %348, align 1
  %350 = icmp slt i8 %349, 0
  br i1 %350, label %351, label %354

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load i8*, i8** %352, align 8
  call void @_ZdlPv(i8* %353) #13
  br label %354

354:                                              ; preds = %346, %351
  %355 = load i8, i8* %322, align 1
  %356 = icmp slt i8 %355, 0
  br i1 %356, label %357, label %360

357:                                              ; preds = %354
  %358 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load i8*, i8** %358, align 8
  call void @_ZdlPv(i8* %359) #13
  br label %360

360:                                              ; preds = %354, %357
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %318) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %317) #11
  br label %361

361:                                              ; preds = %360, %311
  %362 = phi i8 [ 0, %360 ], [ %312, %311 ]
  %363 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %364 = load i32, i32* %363, align 4
  %365 = icmp sgt i32 %364, -1
  br i1 %365, label %366, label %411

366:                                              ; preds = %361
  %367 = bitcast %"class.SkSL::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %367) #11
  %368 = bitcast %"class.SkSL::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %368) #11
  %369 = bitcast %"class.SkSL::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %369) #11
  %370 = icmp eq i8 %362, 0
  %371 = bitcast %"class.SkSL::String"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %372 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %371, i64 0, i32 1, i32 0
  br i1 %370, label %374, label %373

373:                                              ; preds = %366
  store i8 0, i8* %372, align 1, !alias.scope !40
  store i8 0, i8* %369, align 8, !alias.scope !40
  br label %377

374:                                              ; preds = %366
  store i8 2, i8* %372, align 1, !alias.scope !40
  %375 = bitcast %"class.SkSL::String"* %29 to i16*
  store i16 8236, i16* %375, align 8, !alias.scope !40
  %376 = getelementptr inbounds i8, i8* %369, i64 2
  store i8 0, i8* %376, align 2, !alias.scope !40
  br label %377

377:                                              ; preds = %373, %374
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %28, %"class.SkSL::String"* nonnull %29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i64 0, i64 0)) #11
  %378 = bitcast %"class.SkSL::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %378) #11
  %379 = load i32, i32* %363, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %30, i32 %379) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %27, %"class.SkSL::String"* nonnull %28, %"class.SkSL::String"* nonnull dereferenceable(24) %30) #11
  %380 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %27) #11
  %381 = bitcast %"class.SkSL::String"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %382 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %381, i64 0, i32 1, i32 0
  %383 = load i8, i8* %382, align 1
  %384 = icmp slt i8 %383, 0
  br i1 %384, label %385, label %388

385:                                              ; preds = %377
  %386 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load i8*, i8** %386, align 8
  call void @_ZdlPv(i8* %387) #13
  br label %388

388:                                              ; preds = %377, %385
  %389 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %390 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %389, i64 0, i32 1, i32 0
  %391 = load i8, i8* %390, align 1
  %392 = icmp slt i8 %391, 0
  br i1 %392, label %393, label %396

393:                                              ; preds = %388
  %394 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load i8*, i8** %394, align 8
  call void @_ZdlPv(i8* %395) #13
  br label %396

396:                                              ; preds = %388, %393
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %378) #11
  %397 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %398 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %397, i64 0, i32 1, i32 0
  %399 = load i8, i8* %398, align 1
  %400 = icmp slt i8 %399, 0
  br i1 %400, label %401, label %404

401:                                              ; preds = %396
  %402 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load i8*, i8** %402, align 8
  call void @_ZdlPv(i8* %403) #13
  br label %404

404:                                              ; preds = %396, %401
  %405 = load i8, i8* %372, align 1
  %406 = icmp slt i8 %405, 0
  br i1 %406, label %407, label %410

407:                                              ; preds = %404
  %408 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load i8*, i8** %408, align 8
  call void @_ZdlPv(i8* %409) #13
  br label %410

410:                                              ; preds = %404, %407
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %369) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %368) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %367) #11
  br label %411

411:                                              ; preds = %410, %361
  %412 = phi i8 [ 0, %410 ], [ %362, %361 ]
  %413 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 0
  %414 = load i32, i32* %413, align 8
  %415 = and i32 %414, 1
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %444, label %417

417:                                              ; preds = %411
  %418 = bitcast %"class.SkSL::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %418) #11
  %419 = bitcast %"class.SkSL::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %419) #11
  %420 = icmp eq i8 %412, 0
  %421 = bitcast %"class.SkSL::String"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %422 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %421, i64 0, i32 1, i32 0
  br i1 %420, label %424, label %423

423:                                              ; preds = %417
  store i8 0, i8* %422, align 1, !alias.scope !43
  store i8 0, i8* %419, align 8, !alias.scope !43
  br label %427

424:                                              ; preds = %417
  store i8 2, i8* %422, align 1, !alias.scope !43
  %425 = bitcast %"class.SkSL::String"* %32 to i16*
  store i16 8236, i16* %425, align 8, !alias.scope !43
  %426 = getelementptr inbounds i8, i8* %419, i64 2
  store i8 0, i8* %426, align 2, !alias.scope !43
  br label %427

427:                                              ; preds = %423, %424
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %31, %"class.SkSL::String"* nonnull %32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i64 0, i64 0)) #11
  %428 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %31) #11
  %429 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %430 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %429, i64 0, i32 1, i32 0
  %431 = load i8, i8* %430, align 1
  %432 = icmp slt i8 %431, 0
  br i1 %432, label %433, label %436

433:                                              ; preds = %427
  %434 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load i8*, i8** %434, align 8
  call void @_ZdlPv(i8* %435) #13
  br label %436

436:                                              ; preds = %427, %433
  %437 = load i8, i8* %422, align 1
  %438 = icmp slt i8 %437, 0
  br i1 %438, label %439, label %442

439:                                              ; preds = %436
  %440 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = load i8*, i8** %440, align 8
  call void @_ZdlPv(i8* %441) #13
  br label %442

442:                                              ; preds = %436, %439
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %419) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %418) #11
  %443 = load i32, i32* %413, align 8
  br label %444

444:                                              ; preds = %411, %442
  %445 = phi i32 [ %414, %411 ], [ %443, %442 ]
  %446 = phi i8 [ %412, %411 ], [ 0, %442 ]
  %447 = and i32 %445, 4
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %476, label %449

449:                                              ; preds = %444
  %450 = bitcast %"class.SkSL::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %450) #11
  %451 = bitcast %"class.SkSL::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %451) #11
  %452 = icmp eq i8 %446, 0
  %453 = bitcast %"class.SkSL::String"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %454 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %453, i64 0, i32 1, i32 0
  br i1 %452, label %456, label %455

455:                                              ; preds = %449
  store i8 0, i8* %454, align 1, !alias.scope !46
  store i8 0, i8* %451, align 8, !alias.scope !46
  br label %459

456:                                              ; preds = %449
  store i8 2, i8* %454, align 1, !alias.scope !46
  %457 = bitcast %"class.SkSL::String"* %34 to i16*
  store i16 8236, i16* %457, align 8, !alias.scope !46
  %458 = getelementptr inbounds i8, i8* %451, i64 2
  store i8 0, i8* %458, align 2, !alias.scope !46
  br label %459

459:                                              ; preds = %455, %456
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %33, %"class.SkSL::String"* nonnull %34, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.39, i64 0, i64 0)) #11
  %460 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %33) #11
  %461 = bitcast %"class.SkSL::String"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %462 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %461, i64 0, i32 1, i32 0
  %463 = load i8, i8* %462, align 1
  %464 = icmp slt i8 %463, 0
  br i1 %464, label %465, label %468

465:                                              ; preds = %459
  %466 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %467 = load i8*, i8** %466, align 8
  call void @_ZdlPv(i8* %467) #13
  br label %468

468:                                              ; preds = %459, %465
  %469 = load i8, i8* %454, align 1
  %470 = icmp slt i8 %469, 0
  br i1 %470, label %471, label %474

471:                                              ; preds = %468
  %472 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %473 = load i8*, i8** %472, align 8
  call void @_ZdlPv(i8* %473) #13
  br label %474

474:                                              ; preds = %468, %471
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %451) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #11
  %475 = load i32, i32* %413, align 8
  br label %476

476:                                              ; preds = %444, %474
  %477 = phi i32 [ %445, %444 ], [ %475, %474 ]
  %478 = phi i8 [ %446, %444 ], [ 0, %474 ]
  %479 = and i32 %477, 2
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %508, label %481

481:                                              ; preds = %476
  %482 = bitcast %"class.SkSL::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %482) #11
  %483 = bitcast %"class.SkSL::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %483) #11
  %484 = icmp eq i8 %478, 0
  %485 = bitcast %"class.SkSL::String"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %486 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %485, i64 0, i32 1, i32 0
  br i1 %484, label %488, label %487

487:                                              ; preds = %481
  store i8 0, i8* %486, align 1, !alias.scope !49
  store i8 0, i8* %483, align 8, !alias.scope !49
  br label %491

488:                                              ; preds = %481
  store i8 2, i8* %486, align 1, !alias.scope !49
  %489 = bitcast %"class.SkSL::String"* %36 to i16*
  store i16 8236, i16* %489, align 8, !alias.scope !49
  %490 = getelementptr inbounds i8, i8* %483, i64 2
  store i8 0, i8* %490, align 2, !alias.scope !49
  br label %491

491:                                              ; preds = %487, %488
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %35, %"class.SkSL::String"* nonnull %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0)) #11
  %492 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %35) #11
  %493 = bitcast %"class.SkSL::String"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %494 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %493, i64 0, i32 1, i32 0
  %495 = load i8, i8* %494, align 1
  %496 = icmp slt i8 %495, 0
  br i1 %496, label %497, label %500

497:                                              ; preds = %491
  %498 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %499 = load i8*, i8** %498, align 8
  call void @_ZdlPv(i8* %499) #13
  br label %500

500:                                              ; preds = %491, %497
  %501 = load i8, i8* %486, align 1
  %502 = icmp slt i8 %501, 0
  br i1 %502, label %503, label %506

503:                                              ; preds = %500
  %504 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load i8*, i8** %504, align 8
  call void @_ZdlPv(i8* %505) #13
  br label %506

506:                                              ; preds = %500, %503
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %483) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %482) #11
  %507 = load i32, i32* %413, align 8
  br label %508

508:                                              ; preds = %476, %506
  %509 = phi i32 [ %477, %476 ], [ %507, %506 ]
  %510 = phi i8 [ %478, %476 ], [ 0, %506 ]
  %511 = and i32 %509, 8
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %539, label %513

513:                                              ; preds = %508
  %514 = bitcast %"class.SkSL::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %514) #11
  %515 = bitcast %"class.SkSL::String"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %515) #11
  %516 = icmp eq i8 %510, 0
  %517 = bitcast %"class.SkSL::String"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %518 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %517, i64 0, i32 1, i32 0
  br i1 %516, label %520, label %519

519:                                              ; preds = %513
  store i8 0, i8* %518, align 1, !alias.scope !52
  store i8 0, i8* %515, align 8, !alias.scope !52
  br label %523

520:                                              ; preds = %513
  store i8 2, i8* %518, align 1, !alias.scope !52
  %521 = bitcast %"class.SkSL::String"* %38 to i16*
  store i16 8236, i16* %521, align 8, !alias.scope !52
  %522 = getelementptr inbounds i8, i8* %515, i64 2
  store i8 0, i8* %522, align 2, !alias.scope !52
  br label %523

523:                                              ; preds = %519, %520
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %37, %"class.SkSL::String"* nonnull %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i64 0, i64 0)) #11
  %524 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %37) #11
  %525 = bitcast %"class.SkSL::String"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %526 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %525, i64 0, i32 1, i32 0
  %527 = load i8, i8* %526, align 1
  %528 = icmp slt i8 %527, 0
  br i1 %528, label %529, label %532

529:                                              ; preds = %523
  %530 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = load i8*, i8** %530, align 8
  call void @_ZdlPv(i8* %531) #13
  br label %532

532:                                              ; preds = %523, %529
  %533 = load i8, i8* %518, align 1
  %534 = icmp slt i8 %533, 0
  br i1 %534, label %535, label %538

535:                                              ; preds = %532
  %536 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load i8*, i8** %536, align 8
  call void @_ZdlPv(i8* %537) #13
  br label %538

538:                                              ; preds = %532, %535
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %515) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %514) #11
  br label %539

539:                                              ; preds = %508, %538
  %540 = phi i8 [ %510, %508 ], [ 0, %538 ]
  %541 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 8
  %542 = load i32, i32* %541, align 8
  switch i32 %542, label %721 [
    i32 0, label %543
    i32 1, label %568
    i32 2, label %593
    i32 3, label %618
    i32 4, label %643
    i32 5, label %668
    i32 6, label %693
  ]

543:                                              ; preds = %539
  %544 = bitcast %"class.SkSL::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %544) #11
  %545 = bitcast %"class.SkSL::String"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %545) #11
  %546 = icmp eq i8 %540, 0
  %547 = bitcast %"class.SkSL::String"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %548 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %547, i64 0, i32 1, i32 0
  br i1 %546, label %550, label %549

549:                                              ; preds = %543
  store i8 0, i8* %548, align 1, !alias.scope !55
  store i8 0, i8* %545, align 8, !alias.scope !55
  br label %553

550:                                              ; preds = %543
  store i8 2, i8* %548, align 1, !alias.scope !55
  %551 = bitcast %"class.SkSL::String"* %40 to i16*
  store i16 8236, i16* %551, align 8, !alias.scope !55
  %552 = getelementptr inbounds i8, i8* %545, i64 2
  store i8 0, i8* %552, align 2, !alias.scope !55
  br label %553

553:                                              ; preds = %549, %550
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %39, %"class.SkSL::String"* nonnull %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0)) #11
  %554 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %39) #11
  %555 = bitcast %"class.SkSL::String"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %556 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %555, i64 0, i32 1, i32 0
  %557 = load i8, i8* %556, align 1
  %558 = icmp slt i8 %557, 0
  br i1 %558, label %559, label %562

559:                                              ; preds = %553
  %560 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load i8*, i8** %560, align 8
  call void @_ZdlPv(i8* %561) #13
  br label %562

562:                                              ; preds = %553, %559
  %563 = load i8, i8* %548, align 1
  %564 = icmp slt i8 %563, 0
  br i1 %564, label %565, label %718

565:                                              ; preds = %562
  %566 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load i8*, i8** %566, align 8
  call void @_ZdlPv(i8* %567) #13
  br label %718

568:                                              ; preds = %539
  %569 = bitcast %"class.SkSL::String"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %569) #11
  %570 = bitcast %"class.SkSL::String"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %570) #11
  %571 = icmp eq i8 %540, 0
  %572 = bitcast %"class.SkSL::String"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %573 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %572, i64 0, i32 1, i32 0
  br i1 %571, label %575, label %574

574:                                              ; preds = %568
  store i8 0, i8* %573, align 1, !alias.scope !58
  store i8 0, i8* %570, align 8, !alias.scope !58
  br label %578

575:                                              ; preds = %568
  store i8 2, i8* %573, align 1, !alias.scope !58
  %576 = bitcast %"class.SkSL::String"* %42 to i16*
  store i16 8236, i16* %576, align 8, !alias.scope !58
  %577 = getelementptr inbounds i8, i8* %570, i64 2
  store i8 0, i8* %577, align 2, !alias.scope !58
  br label %578

578:                                              ; preds = %574, %575
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %41, %"class.SkSL::String"* nonnull %42, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0)) #11
  %579 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %41) #11
  %580 = bitcast %"class.SkSL::String"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %581 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %580, i64 0, i32 1, i32 0
  %582 = load i8, i8* %581, align 1
  %583 = icmp slt i8 %582, 0
  br i1 %583, label %584, label %587

584:                                              ; preds = %578
  %585 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %586 = load i8*, i8** %585, align 8
  call void @_ZdlPv(i8* %586) #13
  br label %587

587:                                              ; preds = %578, %584
  %588 = load i8, i8* %573, align 1
  %589 = icmp slt i8 %588, 0
  br i1 %589, label %590, label %718

590:                                              ; preds = %587
  %591 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %592 = load i8*, i8** %591, align 8
  call void @_ZdlPv(i8* %592) #13
  br label %718

593:                                              ; preds = %539
  %594 = bitcast %"class.SkSL::String"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %594) #11
  %595 = bitcast %"class.SkSL::String"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %595) #11
  %596 = icmp eq i8 %540, 0
  %597 = bitcast %"class.SkSL::String"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %598 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %597, i64 0, i32 1, i32 0
  br i1 %596, label %600, label %599

599:                                              ; preds = %593
  store i8 0, i8* %598, align 1, !alias.scope !61
  store i8 0, i8* %595, align 8, !alias.scope !61
  br label %603

600:                                              ; preds = %593
  store i8 2, i8* %598, align 1, !alias.scope !61
  %601 = bitcast %"class.SkSL::String"* %44 to i16*
  store i16 8236, i16* %601, align 8, !alias.scope !61
  %602 = getelementptr inbounds i8, i8* %595, i64 2
  store i8 0, i8* %602, align 2, !alias.scope !61
  br label %603

603:                                              ; preds = %599, %600
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %43, %"class.SkSL::String"* nonnull %44, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i64 0, i64 0)) #11
  %604 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %43) #11
  %605 = bitcast %"class.SkSL::String"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %606 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %605, i64 0, i32 1, i32 0
  %607 = load i8, i8* %606, align 1
  %608 = icmp slt i8 %607, 0
  br i1 %608, label %609, label %612

609:                                              ; preds = %603
  %610 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %611 = load i8*, i8** %610, align 8
  call void @_ZdlPv(i8* %611) #13
  br label %612

612:                                              ; preds = %603, %609
  %613 = load i8, i8* %598, align 1
  %614 = icmp slt i8 %613, 0
  br i1 %614, label %615, label %718

615:                                              ; preds = %612
  %616 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load i8*, i8** %616, align 8
  call void @_ZdlPv(i8* %617) #13
  br label %718

618:                                              ; preds = %539
  %619 = bitcast %"class.SkSL::String"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %619) #11
  %620 = bitcast %"class.SkSL::String"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %620) #11
  %621 = icmp eq i8 %540, 0
  %622 = bitcast %"class.SkSL::String"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %623 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %622, i64 0, i32 1, i32 0
  br i1 %621, label %625, label %624

624:                                              ; preds = %618
  store i8 0, i8* %623, align 1, !alias.scope !64
  store i8 0, i8* %620, align 8, !alias.scope !64
  br label %628

625:                                              ; preds = %618
  store i8 2, i8* %623, align 1, !alias.scope !64
  %626 = bitcast %"class.SkSL::String"* %46 to i16*
  store i16 8236, i16* %626, align 8, !alias.scope !64
  %627 = getelementptr inbounds i8, i8* %620, i64 2
  store i8 0, i8* %627, align 2, !alias.scope !64
  br label %628

628:                                              ; preds = %624, %625
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %45, %"class.SkSL::String"* nonnull %46, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i64 0, i64 0)) #11
  %629 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %45) #11
  %630 = bitcast %"class.SkSL::String"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %631 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %630, i64 0, i32 1, i32 0
  %632 = load i8, i8* %631, align 1
  %633 = icmp slt i8 %632, 0
  br i1 %633, label %634, label %637

634:                                              ; preds = %628
  %635 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load i8*, i8** %635, align 8
  call void @_ZdlPv(i8* %636) #13
  br label %637

637:                                              ; preds = %628, %634
  %638 = load i8, i8* %623, align 1
  %639 = icmp slt i8 %638, 0
  br i1 %639, label %640, label %718

640:                                              ; preds = %637
  %641 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %642 = load i8*, i8** %641, align 8
  call void @_ZdlPv(i8* %642) #13
  br label %718

643:                                              ; preds = %539
  %644 = bitcast %"class.SkSL::String"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %644) #11
  %645 = bitcast %"class.SkSL::String"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %645) #11
  %646 = icmp eq i8 %540, 0
  %647 = bitcast %"class.SkSL::String"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %648 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %647, i64 0, i32 1, i32 0
  br i1 %646, label %650, label %649

649:                                              ; preds = %643
  store i8 0, i8* %648, align 1, !alias.scope !67
  store i8 0, i8* %645, align 8, !alias.scope !67
  br label %653

650:                                              ; preds = %643
  store i8 2, i8* %648, align 1, !alias.scope !67
  %651 = bitcast %"class.SkSL::String"* %48 to i16*
  store i16 8236, i16* %651, align 8, !alias.scope !67
  %652 = getelementptr inbounds i8, i8* %645, i64 2
  store i8 0, i8* %652, align 2, !alias.scope !67
  br label %653

653:                                              ; preds = %649, %650
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %47, %"class.SkSL::String"* nonnull %48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i64 0, i64 0)) #11
  %654 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %47) #11
  %655 = bitcast %"class.SkSL::String"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %656 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %655, i64 0, i32 1, i32 0
  %657 = load i8, i8* %656, align 1
  %658 = icmp slt i8 %657, 0
  br i1 %658, label %659, label %662

659:                                              ; preds = %653
  %660 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load i8*, i8** %660, align 8
  call void @_ZdlPv(i8* %661) #13
  br label %662

662:                                              ; preds = %653, %659
  %663 = load i8, i8* %648, align 1
  %664 = icmp slt i8 %663, 0
  br i1 %664, label %665, label %718

665:                                              ; preds = %662
  %666 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = load i8*, i8** %666, align 8
  call void @_ZdlPv(i8* %667) #13
  br label %718

668:                                              ; preds = %539
  %669 = bitcast %"class.SkSL::String"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %669) #11
  %670 = bitcast %"class.SkSL::String"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %670) #11
  %671 = icmp eq i8 %540, 0
  %672 = bitcast %"class.SkSL::String"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %673 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %672, i64 0, i32 1, i32 0
  br i1 %671, label %675, label %674

674:                                              ; preds = %668
  store i8 0, i8* %673, align 1, !alias.scope !70
  store i8 0, i8* %670, align 8, !alias.scope !70
  br label %678

675:                                              ; preds = %668
  store i8 2, i8* %673, align 1, !alias.scope !70
  %676 = bitcast %"class.SkSL::String"* %50 to i16*
  store i16 8236, i16* %676, align 8, !alias.scope !70
  %677 = getelementptr inbounds i8, i8* %670, i64 2
  store i8 0, i8* %677, align 2, !alias.scope !70
  br label %678

678:                                              ; preds = %674, %675
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %49, %"class.SkSL::String"* nonnull %50, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i64 0, i64 0)) #11
  %679 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %49) #11
  %680 = bitcast %"class.SkSL::String"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %681 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %680, i64 0, i32 1, i32 0
  %682 = load i8, i8* %681, align 1
  %683 = icmp slt i8 %682, 0
  br i1 %683, label %684, label %687

684:                                              ; preds = %678
  %685 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %686 = load i8*, i8** %685, align 8
  call void @_ZdlPv(i8* %686) #13
  br label %687

687:                                              ; preds = %678, %684
  %688 = load i8, i8* %673, align 1
  %689 = icmp slt i8 %688, 0
  br i1 %689, label %690, label %718

690:                                              ; preds = %687
  %691 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i8*, i8** %691, align 8
  call void @_ZdlPv(i8* %692) #13
  br label %718

693:                                              ; preds = %539
  %694 = bitcast %"class.SkSL::String"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %694) #11
  %695 = bitcast %"class.SkSL::String"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %695) #11
  %696 = icmp eq i8 %540, 0
  %697 = bitcast %"class.SkSL::String"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %698 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %697, i64 0, i32 1, i32 0
  br i1 %696, label %700, label %699

699:                                              ; preds = %693
  store i8 0, i8* %698, align 1, !alias.scope !73
  store i8 0, i8* %695, align 8, !alias.scope !73
  br label %703

700:                                              ; preds = %693
  store i8 2, i8* %698, align 1, !alias.scope !73
  %701 = bitcast %"class.SkSL::String"* %52 to i16*
  store i16 8236, i16* %701, align 8, !alias.scope !73
  %702 = getelementptr inbounds i8, i8* %695, i64 2
  store i8 0, i8* %702, align 2, !alias.scope !73
  br label %703

703:                                              ; preds = %699, %700
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %51, %"class.SkSL::String"* nonnull %52, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.48, i64 0, i64 0)) #11
  %704 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %51) #11
  %705 = bitcast %"class.SkSL::String"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %706 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %705, i64 0, i32 1, i32 0
  %707 = load i8, i8* %706, align 1
  %708 = icmp slt i8 %707, 0
  br i1 %708, label %709, label %712

709:                                              ; preds = %703
  %710 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %711 = load i8*, i8** %710, align 8
  call void @_ZdlPv(i8* %711) #13
  br label %712

712:                                              ; preds = %703, %709
  %713 = load i8, i8* %698, align 1
  %714 = icmp slt i8 %713, 0
  br i1 %714, label %715, label %718

715:                                              ; preds = %712
  %716 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %717 = load i8*, i8** %716, align 8
  call void @_ZdlPv(i8* %717) #13
  br label %718

718:                                              ; preds = %715, %712, %690, %687, %665, %662, %640, %637, %615, %612, %590, %587, %565, %562
  %719 = phi i8* [ %545, %562 ], [ %545, %565 ], [ %570, %587 ], [ %570, %590 ], [ %595, %612 ], [ %595, %615 ], [ %620, %637 ], [ %620, %640 ], [ %645, %662 ], [ %645, %665 ], [ %670, %687 ], [ %670, %690 ], [ %695, %712 ], [ %695, %715 ]
  %720 = phi i8* [ %544, %562 ], [ %544, %565 ], [ %569, %587 ], [ %569, %590 ], [ %594, %612 ], [ %594, %615 ], [ %619, %637 ], [ %619, %640 ], [ %644, %662 ], [ %644, %665 ], [ %669, %687 ], [ %669, %690 ], [ %694, %712 ], [ %694, %715 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %719) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %720) #11
  br label %721

721:                                              ; preds = %718, %539
  %722 = phi i8 [ %540, %539 ], [ 0, %718 ]
  %723 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 9
  %724 = load i32, i32* %723, align 4
  %725 = icmp sgt i32 %724, -1
  br i1 %725, label %726, label %771

726:                                              ; preds = %721
  %727 = bitcast %"class.SkSL::String"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %727) #11
  %728 = bitcast %"class.SkSL::String"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %728) #11
  %729 = bitcast %"class.SkSL::String"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %729) #11
  %730 = icmp eq i8 %722, 0
  %731 = bitcast %"class.SkSL::String"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %732 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %731, i64 0, i32 1, i32 0
  br i1 %730, label %734, label %733

733:                                              ; preds = %726
  store i8 0, i8* %732, align 1, !alias.scope !76
  store i8 0, i8* %729, align 8, !alias.scope !76
  br label %737

734:                                              ; preds = %726
  store i8 2, i8* %732, align 1, !alias.scope !76
  %735 = bitcast %"class.SkSL::String"* %55 to i16*
  store i16 8236, i16* %735, align 8, !alias.scope !76
  %736 = getelementptr inbounds i8, i8* %729, i64 2
  store i8 0, i8* %736, align 2, !alias.scope !76
  br label %737

737:                                              ; preds = %733, %734
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %54, %"class.SkSL::String"* nonnull %55, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.49, i64 0, i64 0)) #11
  %738 = bitcast %"class.SkSL::String"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %738) #11
  %739 = load i32, i32* %723, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %56, i32 %739) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %53, %"class.SkSL::String"* nonnull %54, %"class.SkSL::String"* nonnull dereferenceable(24) %56) #11
  %740 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %53) #11
  %741 = bitcast %"class.SkSL::String"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %742 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %741, i64 0, i32 1, i32 0
  %743 = load i8, i8* %742, align 1
  %744 = icmp slt i8 %743, 0
  br i1 %744, label %745, label %748

745:                                              ; preds = %737
  %746 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %747 = load i8*, i8** %746, align 8
  call void @_ZdlPv(i8* %747) #13
  br label %748

748:                                              ; preds = %737, %745
  %749 = bitcast %"class.SkSL::String"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %750 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %749, i64 0, i32 1, i32 0
  %751 = load i8, i8* %750, align 1
  %752 = icmp slt i8 %751, 0
  br i1 %752, label %753, label %756

753:                                              ; preds = %748
  %754 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load i8*, i8** %754, align 8
  call void @_ZdlPv(i8* %755) #13
  br label %756

756:                                              ; preds = %748, %753
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %738) #11
  %757 = bitcast %"class.SkSL::String"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %758 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %757, i64 0, i32 1, i32 0
  %759 = load i8, i8* %758, align 1
  %760 = icmp slt i8 %759, 0
  br i1 %760, label %761, label %764

761:                                              ; preds = %756
  %762 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %763 = load i8*, i8** %762, align 8
  call void @_ZdlPv(i8* %763) #13
  br label %764

764:                                              ; preds = %756, %761
  %765 = load i8, i8* %732, align 1
  %766 = icmp slt i8 %765, 0
  br i1 %766, label %767, label %770

767:                                              ; preds = %764
  %768 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %769 = load i8*, i8** %768, align 8
  call void @_ZdlPv(i8* %769) #13
  br label %770

770:                                              ; preds = %764, %767
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %729) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %728) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %727) #11
  br label %771

771:                                              ; preds = %770, %721
  %772 = phi i8 [ 0, %770 ], [ %722, %721 ]
  %773 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 10
  %774 = load i32, i32* %773, align 8
  %775 = icmp sgt i32 %774, -1
  br i1 %775, label %776, label %821

776:                                              ; preds = %771
  %777 = bitcast %"class.SkSL::String"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %777) #11
  %778 = bitcast %"class.SkSL::String"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %778) #11
  %779 = bitcast %"class.SkSL::String"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %779) #11
  %780 = icmp eq i8 %772, 0
  %781 = bitcast %"class.SkSL::String"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %782 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %781, i64 0, i32 1, i32 0
  br i1 %780, label %784, label %783

783:                                              ; preds = %776
  store i8 0, i8* %782, align 1, !alias.scope !79
  store i8 0, i8* %779, align 8, !alias.scope !79
  br label %787

784:                                              ; preds = %776
  store i8 2, i8* %782, align 1, !alias.scope !79
  %785 = bitcast %"class.SkSL::String"* %59 to i16*
  store i16 8236, i16* %785, align 8, !alias.scope !79
  %786 = getelementptr inbounds i8, i8* %779, i64 2
  store i8 0, i8* %786, align 2, !alias.scope !79
  br label %787

787:                                              ; preds = %783, %784
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %58, %"class.SkSL::String"* nonnull %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0)) #11
  %788 = bitcast %"class.SkSL::String"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %788) #11
  %789 = load i32, i32* %773, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %60, i32 %789) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %57, %"class.SkSL::String"* nonnull %58, %"class.SkSL::String"* nonnull dereferenceable(24) %60) #11
  %790 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %57) #11
  %791 = bitcast %"class.SkSL::String"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %792 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %791, i64 0, i32 1, i32 0
  %793 = load i8, i8* %792, align 1
  %794 = icmp slt i8 %793, 0
  br i1 %794, label %795, label %798

795:                                              ; preds = %787
  %796 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %797 = load i8*, i8** %796, align 8
  call void @_ZdlPv(i8* %797) #13
  br label %798

798:                                              ; preds = %787, %795
  %799 = bitcast %"class.SkSL::String"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %800 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %799, i64 0, i32 1, i32 0
  %801 = load i8, i8* %800, align 1
  %802 = icmp slt i8 %801, 0
  br i1 %802, label %803, label %806

803:                                              ; preds = %798
  %804 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %805 = load i8*, i8** %804, align 8
  call void @_ZdlPv(i8* %805) #13
  br label %806

806:                                              ; preds = %798, %803
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %788) #11
  %807 = bitcast %"class.SkSL::String"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %808 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %807, i64 0, i32 1, i32 0
  %809 = load i8, i8* %808, align 1
  %810 = icmp slt i8 %809, 0
  br i1 %810, label %811, label %814

811:                                              ; preds = %806
  %812 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %813 = load i8*, i8** %812, align 8
  call void @_ZdlPv(i8* %813) #13
  br label %814

814:                                              ; preds = %806, %811
  %815 = load i8, i8* %782, align 1
  %816 = icmp slt i8 %815, 0
  br i1 %816, label %817, label %820

817:                                              ; preds = %814
  %818 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %819 = load i8*, i8** %818, align 8
  call void @_ZdlPv(i8* %819) #13
  br label %820

820:                                              ; preds = %814, %817
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %779) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %778) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %777) #11
  br label %821

821:                                              ; preds = %820, %771
  %822 = phi i8 [ 0, %820 ], [ %772, %771 ]
  %823 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 1
  %824 = load i64, i64* %823, align 8
  %825 = icmp eq i64 %824, 0
  br i1 %825, label %864, label %826

826:                                              ; preds = %821
  %827 = bitcast %"class.SkSL::String"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %827) #11
  %828 = bitcast %"class.SkSL::String"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %828) #11
  %829 = bitcast %"class.SkSL::String"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %829) #11
  %830 = icmp eq i8 %822, 0
  %831 = bitcast %"class.SkSL::String"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %832 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %831, i64 0, i32 1, i32 0
  br i1 %830, label %834, label %833

833:                                              ; preds = %826
  store i8 0, i8* %832, align 1, !alias.scope !82
  store i8 0, i8* %829, align 8, !alias.scope !82
  br label %837

834:                                              ; preds = %826
  store i8 2, i8* %832, align 1, !alias.scope !82
  %835 = bitcast %"class.SkSL::String"* %63 to i16*
  store i16 8236, i16* %835, align 8, !alias.scope !82
  %836 = getelementptr inbounds i8, i8* %829, i64 2
  store i8 0, i8* %836, align 2, !alias.scope !82
  br label %837

837:                                              ; preds = %833, %834
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %62, %"class.SkSL::String"* nonnull %63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0)) #11
  %838 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 0
  %839 = load i8*, i8** %838, align 8
  %840 = load i64, i64* %823, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %61, %"class.SkSL::String"* nonnull %62, i8* %839, i64 %840) #11
  %841 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %61) #11
  %842 = bitcast %"class.SkSL::String"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %843 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %842, i64 0, i32 1, i32 0
  %844 = load i8, i8* %843, align 1
  %845 = icmp slt i8 %844, 0
  br i1 %845, label %846, label %849

846:                                              ; preds = %837
  %847 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %848 = load i8*, i8** %847, align 8
  call void @_ZdlPv(i8* %848) #13
  br label %849

849:                                              ; preds = %837, %846
  %850 = bitcast %"class.SkSL::String"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %851 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %850, i64 0, i32 1, i32 0
  %852 = load i8, i8* %851, align 1
  %853 = icmp slt i8 %852, 0
  br i1 %853, label %854, label %857

854:                                              ; preds = %849
  %855 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %856 = load i8*, i8** %855, align 8
  call void @_ZdlPv(i8* %856) #13
  br label %857

857:                                              ; preds = %849, %854
  %858 = load i8, i8* %832, align 1
  %859 = icmp slt i8 %858, 0
  br i1 %859, label %860, label %863

860:                                              ; preds = %857
  %861 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %862 = load i8*, i8** %861, align 8
  call void @_ZdlPv(i8* %862) #13
  br label %863

863:                                              ; preds = %857, %860
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %829) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %828) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %827) #11
  br label %864

864:                                              ; preds = %821, %863
  %865 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %866 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %865, i64 0, i32 1, i32 0
  %867 = load i8, i8* %866, align 1
  %868 = icmp slt i8 %867, 0
  %869 = load i64, i64* %67, align 8
  %870 = zext i8 %867 to i64
  %871 = select i1 %868, i64 %869, i64 %870
  %872 = icmp eq i64 %871, 0
  br i1 %872, label %891, label %873

873:                                              ; preds = %864
  %874 = bitcast %"class.SkSL::String"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %874) #11
  %875 = bitcast %"class.SkSL::String"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %875) #11
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %0) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %64, %"class.SkSL::String"* nonnull %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0)) #11
  %876 = load i8, i8* %866, align 1
  %877 = icmp slt i8 %876, 0
  br i1 %877, label %878, label %880

878:                                              ; preds = %873
  %879 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %879) #13
  br label %880

880:                                              ; preds = %873, %878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %874, i64 24, i1 false) #11
  %881 = bitcast %"class.SkSL::String"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %882 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %881, i64 0, i32 1, i32 0
  store i8 0, i8* %882, align 1
  store i8 0, i8* %874, align 8
  %883 = bitcast %"class.SkSL::String"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %884 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %883, i64 0, i32 1, i32 0
  %885 = load i8, i8* %884, align 1
  %886 = icmp slt i8 %885, 0
  br i1 %886, label %887, label %890

887:                                              ; preds = %880
  %888 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %889 = load i8*, i8** %888, align 8
  call void @_ZdlPv(i8* %889) #13
  br label %890

890:                                              ; preds = %880, %887
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %875) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %874) #11
  br label %891

891:                                              ; preds = %864, %890
  %892 = load i32, i32* %413, align 8
  %893 = and i32 %892, 16
  %894 = icmp eq i32 %893, 0
  br i1 %894, label %897, label %895

895:                                              ; preds = %891
  %896 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.54, i64 0, i64 0)) #11
  br label %897

897:                                              ; preds = %891, %895
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL11SymbolAliasD0Ev(%"class.SkSL::SymbolAlias"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::SymbolAlias"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL11SymbolAlias11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::SymbolAlias"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::SymbolAlias", %"class.SkSL::SymbolAlias"* %1, i64 0, i32 0, i32 1, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::SymbolAlias", %"class.SkSL::SymbolAlias"* %1, i64 0, i32 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %9) #12
  unreachable

10:                                               ; preds = %2
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #13
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %26

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.SkSL::String"* %0 to i8*
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %20, %12
  %27 = phi i8* [ %15, %12 ], [ %24, %20 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %4, i64 %6, i1 false) #11
  br label %28

28:                                               ; preds = %20, %26
  %29 = phi i8* [ %24, %20 ], [ %27, %26 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %6
  store i8 0, i8* %30, align 1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18UnresolvedFunctionD2Ev(%"class.SkSL::UnresolvedFunction"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18UnresolvedFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %3, align 8
  %5 = icmp eq %"class.SkSL::FunctionDeclaration"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.SkSL::FunctionDeclaration"** %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.SkSL::FunctionDeclaration"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18UnresolvedFunctionD0Ev(%"class.SkSL::UnresolvedFunction"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL18UnresolvedFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %3, align 8
  %5 = icmp eq %"class.SkSL::FunctionDeclaration"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.SkSL::FunctionDeclaration"** %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.SkSL::FunctionDeclaration"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.SkSL::UnresolvedFunction"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL18UnresolvedFunction11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::UnresolvedFunction"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %1, i64 0, i32 0, i32 1, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::UnresolvedFunction", %"class.SkSL::UnresolvedFunction"* %1, i64 0, i32 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %9) #12
  unreachable

10:                                               ; preds = %2
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #13
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %26

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.SkSL::String"* %0 to i8*
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %20, %12
  %27 = phi i8* [ %15, %12 ], [ %24, %20 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %4, i64 %6, i1 false) #11
  br label %28

28:                                               ; preds = %20, %26
  %29 = phi i8* [ %24, %20 ], [ %27, %26 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %6
  store i8 0, i8* %30, align 1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.164"*, %"class.std::__1::unique_ptr.166"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.166"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.164"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.164"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.166"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.166"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.166"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.166"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.166"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.166"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.166"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.166"*, %"class.std::__1::unique_ptr.166"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.166"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.166"*, %"class.std::__1::unique_ptr.166"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.166"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::ProgramElement"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.166"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.166"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.166"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.166"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !85

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.166"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.166"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.166"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.166"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.166"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.166"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.166"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.166"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.166"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.166"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.166"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.166"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.166"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.166"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.166"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.166"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.166"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.166"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.166"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.166"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.166"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.166"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.166"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.166"*, %"class.std::__1::unique_ptr.166"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.166"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.166"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.166"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.166"*
  %138 = icmp eq %"class.std::__1::unique_ptr.166"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.166"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %142, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %142, align 8
  %144 = icmp eq %"class.SkSL::ProgramElement"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::ProgramElement"* %143 to void (%"class.SkSL::ProgramElement"*)***
  %147 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %147, i64 1
  %149 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %148, align 8
  tail call void %149(%"class.SkSL::ProgramElement"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.166"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL6IRNodeENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.57"*, %"class.std::__1::unique_ptr.59"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.59"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.57"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.57"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.59"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.59"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.59"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.59"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.59"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.59"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.59"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.59"*, %"class.std::__1::unique_ptr.59"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.59"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.59"*, %"class.std::__1::unique_ptr.59"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.59"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::IRNode"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.59"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.59"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.59"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.59"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !86

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.59"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.59"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.59"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.59"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.59"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.59"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.59"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.59"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.59"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.59"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.59"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.59"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.59"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.59"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.59"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.59"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.59"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.59"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.59"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.59"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.59"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.59"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.59"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.59"*, %"class.std::__1::unique_ptr.59"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.59"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.59"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.59"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.59"*
  %138 = icmp eq %"class.std::__1::unique_ptr.59"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.59"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::IRNode"*, %"class.SkSL::IRNode"** %142, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %142, align 8
  %144 = icmp eq %"class.SkSL::IRNode"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::IRNode"* %143 to void (%"class.SkSL::IRNode"*)***
  %147 = load void (%"class.SkSL::IRNode"*)**, void (%"class.SkSL::IRNode"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %147, i64 1
  %149 = load void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %148, align 8
  tail call void %149(%"class.SkSL::IRNode"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.59"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4EnumD2Ev(%"class.SkSL::Enum"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL4EnumE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 2, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4EnumD0Ev(%"class.SkSL::Enum"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL4EnumE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 2, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.SkSL::Enum"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Enum11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Enum"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK4SkSL4Enum4codeEv(%"class.SkSL::String"* sret %0, %"class.SkSL::Enum"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL4Enum5cloneEv(%"class.SkSL::Enum"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 1, i32 0
  %4 = bitcast i8** %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 2, i32 0
  %7 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 2, i32 1
  %9 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %8, align 8
  %10 = icmp eq %"class.std::__1::__shared_weak_count"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %9, i64 0, i32 0, i32 1
  %13 = atomicrmw add i64* %12, i64 1 monotonic
  br label %14

14:                                               ; preds = %1, %11
  %15 = tail call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"* %7, %"class.std::__1::__shared_weak_count"* %9)
  %16 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %15, 0
  %17 = ptrtoint %"class.SkSL::SymbolTable"* %16 to i64
  %18 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %15, 1
  %19 = ptrtoint %"class.std::__1::__shared_weak_count"* %18 to i64
  %20 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 3
  %21 = load i8, i8* %20, align 8, !range !11
  %22 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 56) #11
  %23 = load i32, i32* %2, align 4
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL4EnumE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %22, i64 16
  %30 = bitcast i8* %29 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %30, align 8
  %31 = getelementptr inbounds i8, i8* %22, i64 32
  %32 = bitcast i8* %31 to i64*
  store i64 %17, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %22, i64 40
  %34 = bitcast i8* %33 to i64*
  store i64 %19, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %22, i64 48
  store i8 %21, i8* %35, align 8
  %36 = getelementptr inbounds i8, i8* %22, i64 49
  store i8 0, i8* %36, align 1
  %37 = bitcast i8* %22 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Enum4codeEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Enum"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.anon.337, align 1
  %4 = alloca %class.anon.341, align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.std::__1::vector.328", align 8
  %9 = alloca %class.anon.335, align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = bitcast %"class.SkSL::String"* %5 to i8*
  %17 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %18 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %1, i64 0, i32 1, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %1, i64 0, i32 1, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ugt i64 %22, -17
  br i1 %23, label %24, label %26

24:                                               ; preds = %2
  %25 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #12
  unreachable

26:                                               ; preds = %2
  %27 = icmp ult i64 %22, 23
  br i1 %27, label %36, label %28

28:                                               ; preds = %26
  %29 = add nuw i64 %22, 16
  %30 = and i64 %29, -16
  %31 = tail call i8* @_Znwm(i64 %30) #13
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %31, i8** %32, align 8
  %33 = or i64 %30, -9223372036854775808
  %34 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %35, align 8
  br label %41

36:                                               ; preds = %26
  %37 = trunc i64 %22 to i8
  %38 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  store i8 %37, i8* %39, align 1
  %40 = icmp eq i64 %22, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %36, %28
  %42 = phi i8* [ %31, %28 ], [ %18, %36 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 %20, i64 %22, i1 false) #11
  br label %43

43:                                               ; preds = %36, %41
  %44 = phi i8* [ %18, %36 ], [ %42, %41 ]
  %45 = getelementptr inbounds i8, i8* %44, i64 %22
  store i8 0, i8* %45, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i64 0, i64 0)) #11
  %46 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #13
  br label %53

53:                                               ; preds = %43, %50
  %54 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #13
  br label %61

61:                                               ; preds = %53, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  %62 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 24, i1 false) #11
  %64 = bitcast %"class.std::__1::vector.328"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.std::__1::vector.328", %"class.std::__1::vector.328"* %8, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::vector.328", %"class.std::__1::vector.328"* %8, i64 0, i32 0, i32 1
  %67 = getelementptr inbounds %"class.std::__1::vector.328", %"class.std::__1::vector.328"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 24, i1 false) #11
  %68 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %1, i64 0, i32 2, i32 0
  %69 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %68, align 8
  %70 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %1, i64 0, i32 2, i32 1
  %71 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %70, align 8
  %72 = icmp eq %"class.std::__1::__shared_weak_count"* %71, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %61
  %74 = bitcast %struct.Enumerant** %67 to i64*
  br label %81

75:                                               ; preds = %61
  %76 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %71, i64 0, i32 0, i32 1
  %77 = atomicrmw add i64* %76, i64 1 monotonic
  %78 = bitcast %struct.Enumerant** %67 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sdiv i64 %79, 24
  br label %81

81:                                               ; preds = %73, %75
  %82 = phi i64* [ %74, %73 ], [ %78, %75 ]
  %83 = phi i64 [ 0, %73 ], [ %80, %75 ]
  %84 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %69, i64 0, i32 5, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = sext i32 %85 to i64
  %87 = bitcast %"class.std::__1::vector.328"* %8 to i64*
  %88 = icmp ult i64 %83, %86
  br i1 %88, label %89, label %110

89:                                               ; preds = %81
  %90 = bitcast %struct.Enumerant** %66 to i64*
  %91 = icmp slt i32 %85, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @abort() #12
  unreachable

93:                                               ; preds = %89
  %94 = load i64, i64* %90, align 8
  %95 = sdiv exact i64 %94, 24
  %96 = mul nsw i64 %86, 24
  %97 = call i8* @_Znwm(i64 %96) #13
  %98 = bitcast i8* %97 to %struct.Enumerant*
  %99 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %98, i64 %95
  %100 = ptrtoint %struct.Enumerant* %99 to i64
  %101 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %98, i64 %86
  %102 = ptrtoint %struct.Enumerant* %101 to i64
  %103 = sdiv exact i64 %94, -24
  %104 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %99, i64 %103
  %105 = ptrtoint %struct.Enumerant* %104 to i64
  %106 = icmp sgt i64 %94, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %93
  %108 = bitcast %struct.Enumerant* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 536870912 null, i64 %94, i1 false) #11
  br label %109

109:                                              ; preds = %107, %93
  store i64 %105, i64* %87, align 8
  store i64 %100, i64* %90, align 8
  store i64 %102, i64* %82, align 8
  br label %110

110:                                              ; preds = %109, %81
  br i1 %72, label %121, label %111

111:                                              ; preds = %110
  %112 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %71, i64 0, i32 0, i32 1
  %113 = atomicrmw add i64* %112, i64 -1 acq_rel
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %121

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %71, i64 0, i32 0
  %117 = bitcast %"class.std::__1::__shared_weak_count"* %71 to void (%"class.std::__1::__shared_count"*)***
  %118 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %118, i64 2
  %120 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %119, align 8
  call void %120(%"class.std::__1::__shared_count"* %116) #11
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %71) #11
  br label %121

121:                                              ; preds = %110, %111, %115
  %122 = bitcast %class.anon.335* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #11
  %123 = getelementptr inbounds %class.anon.335, %class.anon.335* %9, i64 0, i32 0
  store %"class.std::__1::vector.328"* %8, %"class.std::__1::vector.328"** %123, align 8
  %124 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %68, align 8
  %125 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %70, align 8
  %126 = icmp eq %"class.std::__1::__shared_weak_count"* %125, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %125, i64 0, i32 0, i32 1
  %129 = atomicrmw add i64* %128, i64 1 monotonic
  br label %130

130:                                              ; preds = %127, %121
  %131 = bitcast %class.anon.341* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #11
  %132 = getelementptr inbounds %class.anon.341, %class.anon.341* %4, i64 0, i32 0
  store %class.anon.335* %9, %class.anon.335** %132, align 8
  %133 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %124, i64 0, i32 5, i32 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %136, label %158

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %124, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %138

138:                                              ; preds = %153, %136
  %139 = phi i32 [ %134, %136 ], [ %154, %153 ]
  %140 = phi i64 [ 0, %136 ], [ %155, %153 ]
  %141 = load %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %137, align 8
  %142 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %141, i64 %140, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %153, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %141, i64 %140, i32 0, i32 0, i32 1
  %147 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %146, align 8
  %148 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %141, i64 %140, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  %150 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %141, i64 %140, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  call void @_ZZNK4SkSL4Enum7foreachIZNKS0_4codeEvEUlNS_14StringFragmentElE_EEvOT_ENKUlS2_PKNS_6SymbolEE_clES2_S8_(%class.anon.341* nonnull %4, i8* %149, i64 %151, %"class.SkSL::Symbol"* %147) #11
  %152 = load i32, i32* %133, align 4
  br label %153

153:                                              ; preds = %145, %138
  %154 = phi i32 [ %139, %138 ], [ %152, %145 ]
  %155 = add nuw nsw i64 %140, 1
  %156 = sext i32 %154 to i64
  %157 = icmp slt i64 %155, %156
  br i1 %157, label %138, label %158

158:                                              ; preds = %153, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #11
  br i1 %126, label %169, label %159

159:                                              ; preds = %158
  %160 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %125, i64 0, i32 0, i32 1
  %161 = atomicrmw add i64* %160, i64 -1 acq_rel
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %169

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %125, i64 0, i32 0
  %165 = bitcast %"class.std::__1::__shared_weak_count"* %125 to void (%"class.std::__1::__shared_count"*)***
  %166 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %166, i64 2
  %168 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %167, align 8
  call void %168(%"class.std::__1::__shared_count"* %164) #11
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %125) #11
  br label %169

169:                                              ; preds = %158, %159, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #11
  %170 = load %struct.Enumerant*, %struct.Enumerant** %65, align 8
  %171 = load %struct.Enumerant*, %struct.Enumerant** %66, align 8
  %172 = getelementptr inbounds %class.anon.337, %class.anon.337* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %172)
  call void @_ZNSt3__16__sortIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_(%struct.Enumerant* %170, %struct.Enumerant* %171, %class.anon.337* nonnull dereferenceable(1) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %172)
  %173 = load %struct.Enumerant*, %struct.Enumerant** %65, align 8
  %174 = load %struct.Enumerant*, %struct.Enumerant** %66, align 8
  %175 = icmp eq %struct.Enumerant* %173, %174
  br i1 %175, label %204, label %176

176:                                              ; preds = %169
  %177 = bitcast %"class.SkSL::String"* %10 to i8*
  %178 = bitcast %"class.SkSL::String"* %11 to i8*
  %179 = bitcast %"class.SkSL::String"* %12 to i8*
  %180 = bitcast %"class.SkSL::String"* %13 to i8*
  %181 = bitcast %"class.SkSL::String"* %14 to i8*
  %182 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %182, i64 0, i32 1, i32 0
  %184 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %185, i64 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  %193 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = bitcast %"class.SkSL::String"* %15 to i8*
  %198 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  %200 = bitcast %"class.SkSL::String"* %15 to i16*
  %201 = getelementptr inbounds i8, i8* %197, i64 2
  %202 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %202, i64 0, i32 1, i32 0
  br label %220

204:                                              ; preds = %258, %169
  %205 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i64 0, i64 0)) #11
  %206 = load %struct.Enumerant*, %struct.Enumerant** %65, align 8
  %207 = icmp eq %struct.Enumerant* %206, null
  br i1 %207, label %212, label %208

208:                                              ; preds = %204
  %209 = ptrtoint %struct.Enumerant* %206 to i64
  %210 = bitcast %struct.Enumerant** %66 to i64*
  store i64 %209, i64* %210, align 8
  %211 = bitcast %struct.Enumerant* %206 to i8*
  call void @_ZdlPv(i8* %211) #13
  br label %212

212:                                              ; preds = %204, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #11
  %213 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %213, i64 0, i32 1, i32 0
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %212
  %218 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %218) #13
  br label %219

219:                                              ; preds = %212, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #11
  ret void

220:                                              ; preds = %176, %258
  %221 = phi %struct.Enumerant* [ %173, %176 ], [ %259, %258 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %13, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0)) #11
  %222 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %221, i64 0, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %221, i64 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, i8* %223, i64 %225) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i64 0, i64 0)) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #11
  %226 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %221, i64 0, i32 1
  %227 = load i64, i64* %226, align 8
  call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* nonnull sret %14, i64 %227) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::String"* nonnull %11, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #11
  %228 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %10) #11
  %229 = load i8, i8* %183, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %233

231:                                              ; preds = %220
  %232 = load i8*, i8** %184, align 8
  call void @_ZdlPv(i8* %232) #13
  br label %233

233:                                              ; preds = %220, %231
  %234 = load i8, i8* %186, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %235, label %236, label %238

236:                                              ; preds = %233
  %237 = load i8*, i8** %187, align 8
  call void @_ZdlPv(i8* %237) #13
  br label %238

238:                                              ; preds = %233, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #11
  %239 = load i8, i8* %189, align 1
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %241, label %243

241:                                              ; preds = %238
  %242 = load i8*, i8** %190, align 8
  call void @_ZdlPv(i8* %242) #13
  br label %243

243:                                              ; preds = %238, %241
  %244 = load i8, i8* %192, align 1
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %243
  %247 = load i8*, i8** %193, align 8
  call void @_ZdlPv(i8* %247) #13
  br label %248

248:                                              ; preds = %243, %246
  %249 = load i8, i8* %195, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %248
  %252 = load i8*, i8** %196, align 8
  call void @_ZdlPv(i8* %252) #13
  br label %253

253:                                              ; preds = %248, %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %197) #11
  store i8 2, i8* %199, align 1
  store i16 2604, i16* %200, align 8
  store i8 0, i8* %201, align 2
  %254 = load i8, i8* %203, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %258

256:                                              ; preds = %253
  %257 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %257) #13
  br label %258

258:                                              ; preds = %256, %253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* nonnull align 8 %197, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %197) #11
  %259 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %221, i64 1
  %260 = icmp eq %struct.Enumerant* %259, %174
  br i1 %260, label %204, label %220
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZNK4SkSL4Enum7foreachIZNKS0_4codeEvEUlNS_14StringFragmentElE_EEvOT_ENKUlS2_PKNS_6SymbolEE_clES2_S8_(%class.anon.341*, i8*, i64, %"class.SkSL::Symbol"*) local_unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %class.anon.341, %class.anon.341* %0, i64 0, i32 0
  %6 = load %class.anon.335*, %class.anon.335** %5, align 8
  %7 = bitcast %"class.SkSL::Symbol"* %3 to %"class.SkSL::Variable"*
  %8 = tail call %"class.SkSL::Expression"* @_ZNK4SkSL8Variable12initialValueEv(%"class.SkSL::Variable"* %7) #11
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %8, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %class.anon.335, %class.anon.335* %6, i64 0, i32 0
  %13 = load %"class.std::__1::vector.328"*, %"class.std::__1::vector.328"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.328", %"class.std::__1::vector.328"* %13, i64 0, i32 0, i32 1
  %15 = load %struct.Enumerant*, %struct.Enumerant** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.328", %"class.std::__1::vector.328"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = load %struct.Enumerant*, %struct.Enumerant** %16, align 8
  %18 = icmp ult %struct.Enumerant* %15, %17
  %19 = ptrtoint %struct.Enumerant* %17 to i64
  br i1 %18, label %20, label %27

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %15, i64 0, i32 0, i32 0
  store i8* %1, i8** %21, align 8
  %22 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %15, i64 0, i32 0, i32 1
  store i64 %2, i64* %22, align 8
  %23 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %15, i64 0, i32 1
  store i64 %11, i64* %23, align 8
  %24 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %15, i64 1
  %25 = ptrtoint %struct.Enumerant* %24 to i64
  %26 = bitcast %struct.Enumerant** %14 to i64*
  store i64 %25, i64* %26, align 8
  br label %82

27:                                               ; preds = %4
  %28 = ptrtoint %struct.Enumerant* %15 to i64
  %29 = bitcast %struct.Enumerant** %14 to i64*
  %30 = bitcast %"class.std::__1::vector.328"* %13 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %28, %31
  %33 = sdiv exact i64 %32, 24
  %34 = add nsw i64 %33, 1
  %35 = icmp ugt i64 %34, 768614336404564650
  br i1 %35, label %36, label %38

36:                                               ; preds = %27
  %37 = bitcast %"class.std::__1::vector.328"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #12
  unreachable

38:                                               ; preds = %27
  %39 = bitcast %struct.Enumerant** %16 to i64*
  %40 = sub i64 %19, %31
  %41 = sdiv exact i64 %40, 24
  %42 = icmp ult i64 %41, 384307168202282325
  br i1 %42, label %43, label %48

43:                                               ; preds = %38
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %34
  %46 = select i1 %45, i64 %34, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %43, %38
  %49 = phi i64 [ %46, %43 ], [ 768614336404564650, %38 ]
  %50 = mul i64 %49, 24
  %51 = tail call i8* @_Znwm(i64 %50) #13
  %52 = bitcast i8* %51 to %struct.Enumerant*
  br label %53

53:                                               ; preds = %48, %43
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %struct.Enumerant* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %55, i64 %33
  %57 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %55, i64 %54
  %58 = ptrtoint %struct.Enumerant* %57 to i64
  %59 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %56, i64 0, i32 0, i32 0
  store i8* %1, i8** %59, align 8
  %60 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %55, i64 %33, i32 0, i32 1
  store i64 %2, i64* %60, align 8
  %61 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %55, i64 %33, i32 1
  store i64 %11, i64* %61, align 8
  %62 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %56, i64 1
  %63 = ptrtoint %struct.Enumerant* %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.328", %"class.std::__1::vector.328"* %13, i64 0, i32 0, i32 0
  %65 = load %struct.Enumerant*, %struct.Enumerant** %64, align 8
  %66 = load i64, i64* %29, align 8
  %67 = ptrtoint %struct.Enumerant* %65 to i64
  %68 = sub i64 %66, %67
  %69 = sdiv exact i64 %68, -24
  %70 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %56, i64 %69
  %71 = ptrtoint %struct.Enumerant* %70 to i64
  %72 = icmp sgt i64 %68, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %53
  %74 = bitcast %struct.Enumerant* %70 to i8*
  %75 = bitcast %struct.Enumerant* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 %68, i1 false) #11
  %76 = load %struct.Enumerant*, %struct.Enumerant** %64, align 8
  br label %77

77:                                               ; preds = %73, %53
  %78 = phi %struct.Enumerant* [ %65, %53 ], [ %76, %73 ]
  store i64 %71, i64* %30, align 8
  store i64 %63, i64* %29, align 8
  store i64 %58, i64* %39, align 8
  %79 = icmp eq %struct.Enumerant* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = bitcast %struct.Enumerant* %78 to i8*
  tail call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %20, %77, %80
  ret void
}

declare %"class.SkSL::Expression"* @_ZNK4SkSL8Variable12initialValueEv(%"class.SkSL::Variable"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_(%struct.Enumerant*, %struct.Enumerant*, %class.anon.337* dereferenceable(1)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %359, %3
  %5 = phi %struct.Enumerant* [ %1, %3 ], [ %336, %359 ]
  %6 = phi %struct.Enumerant* [ %0, %3 ], [ %28, %359 ]
  %7 = ptrtoint %struct.Enumerant* %5 to i64
  %8 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1
  %9 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 1
  %10 = bitcast %struct.Enumerant* %8 to i8*
  %11 = bitcast %struct.Enumerant* %8 to i8*
  %12 = bitcast %struct.Enumerant* %8 to i64*
  %13 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 0, i32 1
  %14 = bitcast %struct.Enumerant* %8 to i8*
  %15 = bitcast %struct.Enumerant* %8 to i64*
  %16 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 0, i32 1
  %17 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 1
  %18 = bitcast %struct.Enumerant* %8 to i8*
  %19 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 1
  %20 = bitcast %struct.Enumerant* %8 to i8*
  %21 = bitcast %struct.Enumerant* %8 to <2 x i64>*
  %22 = bitcast %struct.Enumerant* %8 to <2 x i64>*
  %23 = bitcast %struct.Enumerant* %8 to <2 x i64>*
  %24 = ptrtoint %struct.Enumerant* %5 to i64
  br label %25

25:                                               ; preds = %370, %4
  %26 = phi %struct.Enumerant* [ %6, %4 ], [ %371, %370 ]
  br label %27

27:                                               ; preds = %275, %25
  %28 = phi %struct.Enumerant* [ %26, %25 ], [ %264, %275 ]
  %29 = ptrtoint %struct.Enumerant* %28 to i64
  %30 = sub i64 %7, %29
  %31 = sdiv exact i64 %30, 24
  switch i64 %31, label %140 [
    i64 0, label %374
    i64 1, label %374
    i64 2, label %32
    i64 3, label %45
    i64 4, label %91
    i64 5, label %96
  ]

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1
  %34 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp slt i64 %35, %37
  br i1 %38, label %39, label %374

39:                                               ; preds = %32
  %40 = bitcast %struct.Enumerant* %28 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 8
  %42 = bitcast %struct.Enumerant* %28 to i8*
  %43 = bitcast %struct.Enumerant* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  %44 = bitcast %struct.Enumerant* %33 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %44, align 8
  store i64 %37, i64* %34, align 8
  br label %374

45:                                               ; preds = %27
  %46 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1
  %47 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1
  %48 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp slt i64 %49, %51
  %53 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %54, %49
  br i1 %52, label %71, label %56

56:                                               ; preds = %45
  br i1 %55, label %57, label %374

57:                                               ; preds = %56
  %58 = bitcast %struct.Enumerant* %46 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  %60 = bitcast %struct.Enumerant* %46 to i8*
  %61 = bitcast %struct.Enumerant* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #11
  %62 = bitcast %struct.Enumerant* %47 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %62, align 8
  store i64 %49, i64* %53, align 8
  %63 = load i64, i64* %48, align 8
  %64 = load i64, i64* %50, align 8
  %65 = icmp slt i64 %63, %64
  br i1 %65, label %66, label %374

66:                                               ; preds = %57
  %67 = bitcast %struct.Enumerant* %28 to <2 x i64>*
  %68 = load <2 x i64>, <2 x i64>* %67, align 8
  %69 = bitcast %struct.Enumerant* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %60, i64 24, i1 false) #11
  %70 = bitcast %struct.Enumerant* %46 to <2 x i64>*
  store <2 x i64> %68, <2 x i64>* %70, align 8
  store i64 %64, i64* %48, align 8
  br label %374

71:                                               ; preds = %45
  %72 = bitcast %struct.Enumerant* %28 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %struct.Enumerant* %28 to i8*
  br i1 %55, label %77, label %81

77:                                               ; preds = %71
  %78 = bitcast %struct.Enumerant* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %78, i64 24, i1 false) #11
  %79 = bitcast %struct.Enumerant* %47 to i64*
  store i64 %73, i64* %79, align 8
  %80 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 0, i32 1
  store i64 %75, i64* %80, align 8
  store i64 %51, i64* %53, align 8
  br label %374

81:                                               ; preds = %71
  %82 = bitcast %struct.Enumerant* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %82, i64 24, i1 false) #11
  %83 = bitcast %struct.Enumerant* %46 to i64*
  store i64 %73, i64* %83, align 8
  %84 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1, i32 0, i32 1
  store i64 %75, i64* %84, align 8
  store i64 %51, i64* %48, align 8
  %85 = load i64, i64* %53, align 8
  %86 = icmp slt i64 %85, %51
  br i1 %86, label %87, label %374

87:                                               ; preds = %81
  %88 = bitcast %struct.Enumerant* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %88, i64 24, i1 false) #11
  %89 = bitcast %struct.Enumerant* %47 to i64*
  store i64 %73, i64* %89, align 8
  %90 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 0, i32 1
  store i64 %75, i64* %90, align 8
  store i64 %51, i64* %53, align 8
  br label %374

91:                                               ; preds = %27
  %92 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1
  %93 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 2
  %94 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1
  %95 = tail call i32 @_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_(%struct.Enumerant* %28, %struct.Enumerant* %92, %struct.Enumerant* %93, %struct.Enumerant* %94, %class.anon.337* dereferenceable(1) %2)
  br label %374

96:                                               ; preds = %27
  %97 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1
  %98 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 2
  %99 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 3
  %100 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1
  %101 = tail call i32 @_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_(%struct.Enumerant* %28, %struct.Enumerant* %97, %struct.Enumerant* %98, %struct.Enumerant* %99, %class.anon.337* dereferenceable(1) %2) #11
  %102 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 3, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = icmp slt i64 %103, %105
  br i1 %106, label %107, label %374

107:                                              ; preds = %96
  %108 = bitcast %struct.Enumerant* %99 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8
  %110 = bitcast %struct.Enumerant* %99 to i8*
  %111 = bitcast %struct.Enumerant* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 24, i1 false) #11
  %112 = bitcast %struct.Enumerant* %100 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %112, align 8
  store i64 %105, i64* %102, align 8
  %113 = load i64, i64* %104, align 8
  %114 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 2, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp slt i64 %113, %115
  br i1 %116, label %117, label %374

117:                                              ; preds = %107
  %118 = bitcast %struct.Enumerant* %98 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8
  %120 = bitcast %struct.Enumerant* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %110, i64 24, i1 false) #11
  %121 = bitcast %struct.Enumerant* %99 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %121, align 8
  store i64 %115, i64* %104, align 8
  %122 = load i64, i64* %114, align 8
  %123 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = icmp slt i64 %122, %124
  br i1 %125, label %126, label %374

126:                                              ; preds = %117
  %127 = bitcast %struct.Enumerant* %97 to <2 x i64>*
  %128 = load <2 x i64>, <2 x i64>* %127, align 8
  %129 = bitcast %struct.Enumerant* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %120, i64 24, i1 false) #11
  %130 = bitcast %struct.Enumerant* %98 to <2 x i64>*
  store <2 x i64> %128, <2 x i64>* %130, align 8
  store i64 %124, i64* %114, align 8
  %131 = load i64, i64* %123, align 8
  %132 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = icmp slt i64 %131, %133
  br i1 %134, label %135, label %374

135:                                              ; preds = %126
  %136 = bitcast %struct.Enumerant* %28 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8
  %138 = bitcast %struct.Enumerant* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %129, i64 24, i1 false) #11
  %139 = bitcast %struct.Enumerant* %97 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %139, align 8
  store i64 %133, i64* %123, align 8
  br label %374

140:                                              ; preds = %27
  %141 = icmp slt i64 %30, 744
  br i1 %141, label %142, label %143

142:                                              ; preds = %140
  tail call void @_ZNSt3__118__insertion_sort_3IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_(%struct.Enumerant* %28, %struct.Enumerant* %5, %class.anon.337* dereferenceable(1) %2)
  br label %374

143:                                              ; preds = %140
  %144 = icmp sgt i64 %30, 23976
  %145 = udiv i64 %30, 48
  %146 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %145
  br i1 %144, label %147, label %191

147:                                              ; preds = %143
  %148 = udiv i64 %30, 96
  %149 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %148
  %150 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %146, i64 %148
  %151 = tail call i32 @_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_(%struct.Enumerant* %28, %struct.Enumerant* %149, %struct.Enumerant* %146, %struct.Enumerant* %150, %class.anon.337* dereferenceable(1) %2) #11
  %152 = load i64, i64* %17, align 8
  %153 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %150, i64 0, i32 1
  %154 = load i64, i64* %153, align 8
  %155 = icmp slt i64 %152, %154
  br i1 %155, label %156, label %226

156:                                              ; preds = %147
  %157 = bitcast %struct.Enumerant* %150 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 8
  %159 = bitcast %struct.Enumerant* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* align 8 %18, i64 24, i1 false) #11
  store <2 x i64> %158, <2 x i64>* %22, align 8
  store i64 %154, i64* %17, align 8
  %160 = add i32 %151, 1
  %161 = load i64, i64* %153, align 8
  %162 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %145, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = icmp slt i64 %161, %163
  br i1 %164, label %165, label %226

165:                                              ; preds = %156
  %166 = bitcast %struct.Enumerant* %146 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8
  %168 = bitcast %struct.Enumerant* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %159, i64 24, i1 false) #11
  %169 = bitcast %struct.Enumerant* %150 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %169, align 8
  store i64 %163, i64* %153, align 8
  %170 = add i32 %151, 2
  %171 = load i64, i64* %162, align 8
  %172 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %148, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = icmp slt i64 %171, %173
  br i1 %174, label %175, label %226

175:                                              ; preds = %165
  %176 = bitcast %struct.Enumerant* %149 to <2 x i64>*
  %177 = load <2 x i64>, <2 x i64>* %176, align 8
  %178 = bitcast %struct.Enumerant* %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %168, i64 24, i1 false) #11
  %179 = bitcast %struct.Enumerant* %146 to <2 x i64>*
  store <2 x i64> %177, <2 x i64>* %179, align 8
  store i64 %173, i64* %162, align 8
  %180 = add i32 %151, 3
  %181 = load i64, i64* %172, align 8
  %182 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp slt i64 %181, %183
  br i1 %184, label %185, label %226

185:                                              ; preds = %175
  %186 = bitcast %struct.Enumerant* %28 to <2 x i64>*
  %187 = load <2 x i64>, <2 x i64>* %186, align 8
  %188 = bitcast %struct.Enumerant* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %178, i64 24, i1 false) #11
  %189 = bitcast %struct.Enumerant* %149 to <2 x i64>*
  store <2 x i64> %187, <2 x i64>* %189, align 8
  store i64 %183, i64* %172, align 8
  %190 = add i32 %151, 4
  br label %226

191:                                              ; preds = %143
  %192 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %145, i32 1
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = icmp slt i64 %193, %195
  %197 = load i64, i64* %9, align 8
  %198 = icmp slt i64 %197, %193
  br i1 %196, label %212, label %199

199:                                              ; preds = %191
  br i1 %198, label %200, label %226

200:                                              ; preds = %199
  %201 = bitcast %struct.Enumerant* %146 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 8
  %203 = bitcast %struct.Enumerant* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %10, i64 24, i1 false) #11
  store <2 x i64> %202, <2 x i64>* %21, align 8
  store i64 %193, i64* %9, align 8
  %204 = load i64, i64* %192, align 8
  %205 = load i64, i64* %194, align 8
  %206 = icmp slt i64 %204, %205
  br i1 %206, label %207, label %226

207:                                              ; preds = %200
  %208 = bitcast %struct.Enumerant* %28 to <2 x i64>*
  %209 = load <2 x i64>, <2 x i64>* %208, align 8
  %210 = bitcast %struct.Enumerant* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* align 8 %203, i64 24, i1 false) #11
  %211 = bitcast %struct.Enumerant* %146 to <2 x i64>*
  store <2 x i64> %209, <2 x i64>* %211, align 8
  store i64 %205, i64* %192, align 8
  br label %226

212:                                              ; preds = %191
  %213 = bitcast %struct.Enumerant* %28 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 0, i32 1
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %struct.Enumerant* %28 to i8*
  br i1 %198, label %218, label %219

218:                                              ; preds = %212
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %14, i64 24, i1 false) #11
  store i64 %214, i64* %15, align 8
  store i64 %216, i64* %16, align 8
  store i64 %195, i64* %9, align 8
  br label %226

219:                                              ; preds = %212
  %220 = bitcast %struct.Enumerant* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %220, i64 24, i1 false) #11
  %221 = bitcast %struct.Enumerant* %146 to i64*
  store i64 %214, i64* %221, align 8
  %222 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %145, i32 0, i32 1
  store i64 %216, i64* %222, align 8
  store i64 %195, i64* %192, align 8
  %223 = load i64, i64* %9, align 8
  %224 = icmp slt i64 %223, %195
  br i1 %224, label %225, label %226

225:                                              ; preds = %219
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* align 8 %11, i64 24, i1 false) #11
  store i64 %214, i64* %12, align 8
  store i64 %216, i64* %13, align 8
  store i64 %195, i64* %9, align 8
  br label %226

226:                                              ; preds = %225, %219, %218, %207, %200, %199, %185, %175, %165, %156, %147
  %227 = phi i32 [ %190, %185 ], [ %180, %175 ], [ %170, %165 ], [ %160, %156 ], [ %151, %147 ], [ 1, %218 ], [ 0, %199 ], [ 2, %207 ], [ 1, %200 ], [ 2, %225 ], [ 1, %219 ]
  %228 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 1
  %229 = load i64, i64* %228, align 8
  %230 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %145, i32 1
  %231 = load i64, i64* %230, align 8
  %232 = icmp slt i64 %229, %231
  br i1 %232, label %296, label %233

233:                                              ; preds = %226, %284
  %234 = phi %struct.Enumerant* [ %235, %284 ], [ %8, %226 ]
  %235 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %234, i64 -1
  %236 = icmp eq %struct.Enumerant* %28, %235
  br i1 %236, label %237, label %284

237:                                              ; preds = %233
  %238 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1
  %239 = load i64, i64* %19, align 8
  %240 = icmp slt i64 %229, %239
  br i1 %240, label %256, label %241

241:                                              ; preds = %237
  %242 = icmp eq %struct.Enumerant* %238, %8
  br i1 %242, label %374, label %243

243:                                              ; preds = %241, %253
  %244 = phi %struct.Enumerant* [ %254, %253 ], [ %238, %241 ]
  %245 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %244, i64 0, i32 1
  %246 = load i64, i64* %245, align 8
  %247 = icmp slt i64 %229, %246
  br i1 %247, label %248, label %253

248:                                              ; preds = %243
  %249 = bitcast %struct.Enumerant* %244 to <2 x i64>*
  %250 = load <2 x i64>, <2 x i64>* %249, align 8
  %251 = bitcast %struct.Enumerant* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %20, i64 24, i1 false) #11
  store <2 x i64> %250, <2 x i64>* %23, align 8
  store i64 %246, i64* %19, align 8
  %252 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %244, i64 1
  br label %256

253:                                              ; preds = %243
  %254 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %244, i64 1
  %255 = icmp eq %struct.Enumerant* %254, %8
  br i1 %255, label %374, label %243

256:                                              ; preds = %248, %237
  %257 = phi %struct.Enumerant* [ %238, %237 ], [ %252, %248 ]
  %258 = icmp eq %struct.Enumerant* %257, %8
  br i1 %258, label %374, label %259

259:                                              ; preds = %256, %277
  %260 = phi %struct.Enumerant* [ %268, %277 ], [ %257, %256 ]
  %261 = phi %struct.Enumerant* [ %271, %277 ], [ %8, %256 ]
  %262 = load i64, i64* %228, align 8
  br label %263

263:                                              ; preds = %263, %259
  %264 = phi %struct.Enumerant* [ %260, %259 ], [ %268, %263 ]
  %265 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %264, i64 0, i32 1
  %266 = load i64, i64* %265, align 8
  %267 = icmp slt i64 %262, %266
  %268 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %264, i64 1
  br i1 %267, label %269, label %263

269:                                              ; preds = %263, %269
  %270 = phi %struct.Enumerant* [ %271, %269 ], [ %261, %263 ]
  %271 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %270, i64 -1
  %272 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %270, i64 -1, i32 1
  %273 = load i64, i64* %272, align 8
  %274 = icmp slt i64 %262, %273
  br i1 %274, label %269, label %275

275:                                              ; preds = %269
  %276 = icmp ult %struct.Enumerant* %264, %271
  br i1 %276, label %277, label %27

277:                                              ; preds = %275
  %278 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %270, i64 -1, i32 1
  %279 = bitcast %struct.Enumerant* %264 to <2 x i64>*
  %280 = load <2 x i64>, <2 x i64>* %279, align 8
  %281 = bitcast %struct.Enumerant* %264 to i8*
  %282 = bitcast %struct.Enumerant* %271 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %282, i64 24, i1 false) #11
  %283 = bitcast %struct.Enumerant* %271 to <2 x i64>*
  store <2 x i64> %280, <2 x i64>* %283, align 8
  store i64 %266, i64* %278, align 8
  br label %259

284:                                              ; preds = %233
  %285 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %234, i64 -1, i32 1
  %286 = load i64, i64* %285, align 8
  %287 = icmp slt i64 %286, %231
  br i1 %287, label %288, label %233

288:                                              ; preds = %284
  %289 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %234, i64 -1, i32 1
  %290 = bitcast %struct.Enumerant* %28 to <2 x i64>*
  %291 = load <2 x i64>, <2 x i64>* %290, align 8
  %292 = bitcast %struct.Enumerant* %28 to i8*
  %293 = bitcast %struct.Enumerant* %235 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %292, i8* align 8 %293, i64 24, i1 false) #11
  %294 = bitcast %struct.Enumerant* %235 to <2 x i64>*
  store <2 x i64> %291, <2 x i64>* %294, align 8
  store i64 %229, i64* %289, align 8
  %295 = add i32 %227, 1
  br label %296

296:                                              ; preds = %226, %288
  %297 = phi i32 [ %295, %288 ], [ %227, %226 ]
  %298 = phi %struct.Enumerant* [ %235, %288 ], [ %8, %226 ]
  %299 = ptrtoint %struct.Enumerant* %28 to i64
  %300 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1
  %301 = icmp ult %struct.Enumerant* %300, %298
  br i1 %301, label %302, label %333

302:                                              ; preds = %296, %323
  %303 = phi %struct.Enumerant* [ %332, %323 ], [ %146, %296 ]
  %304 = phi i32 [ %330, %323 ], [ %297, %296 ]
  %305 = phi %struct.Enumerant* [ %314, %323 ], [ %300, %296 ]
  %306 = phi %struct.Enumerant* [ %317, %323 ], [ %298, %296 ]
  %307 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %303, i64 0, i32 1
  %308 = load i64, i64* %307, align 8
  br label %309

309:                                              ; preds = %309, %302
  %310 = phi %struct.Enumerant* [ %305, %302 ], [ %314, %309 ]
  %311 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %310, i64 0, i32 1
  %312 = load i64, i64* %311, align 8
  %313 = icmp slt i64 %312, %308
  %314 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %310, i64 1
  br i1 %313, label %309, label %315

315:                                              ; preds = %309, %315
  %316 = phi %struct.Enumerant* [ %317, %315 ], [ %306, %309 ]
  %317 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %316, i64 -1
  %318 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %316, i64 -1, i32 1
  %319 = load i64, i64* %318, align 8
  %320 = icmp slt i64 %319, %308
  br i1 %320, label %321, label %315

321:                                              ; preds = %315
  %322 = icmp ugt %struct.Enumerant* %310, %317
  br i1 %322, label %333, label %323

323:                                              ; preds = %321
  %324 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %316, i64 -1, i32 1
  %325 = bitcast %struct.Enumerant* %310 to <2 x i64>*
  %326 = load <2 x i64>, <2 x i64>* %325, align 8
  %327 = bitcast %struct.Enumerant* %310 to i8*
  %328 = bitcast %struct.Enumerant* %317 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %327, i8* align 8 %328, i64 24, i1 false) #11
  %329 = bitcast %struct.Enumerant* %317 to <2 x i64>*
  store <2 x i64> %326, <2 x i64>* %329, align 8
  store i64 %312, i64* %324, align 8
  %330 = add i32 %304, 1
  %331 = icmp eq %struct.Enumerant* %303, %310
  %332 = select i1 %331, %struct.Enumerant* %317, %struct.Enumerant* %303
  br label %302

333:                                              ; preds = %321, %296
  %334 = phi %struct.Enumerant* [ %146, %296 ], [ %303, %321 ]
  %335 = phi i32 [ %297, %296 ], [ %304, %321 ]
  %336 = phi %struct.Enumerant* [ %300, %296 ], [ %310, %321 ]
  %337 = icmp eq %struct.Enumerant* %336, %334
  br i1 %337, label %351, label %338

338:                                              ; preds = %333
  %339 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %334, i64 0, i32 1
  %340 = load i64, i64* %339, align 8
  %341 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %336, i64 0, i32 1
  %342 = load i64, i64* %341, align 8
  %343 = icmp slt i64 %340, %342
  br i1 %343, label %344, label %351

344:                                              ; preds = %338
  %345 = bitcast %struct.Enumerant* %336 to <2 x i64>*
  %346 = load <2 x i64>, <2 x i64>* %345, align 8
  %347 = bitcast %struct.Enumerant* %336 to i8*
  %348 = bitcast %struct.Enumerant* %334 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %347, i8* align 8 %348, i64 24, i1 false) #11
  %349 = bitcast %struct.Enumerant* %334 to <2 x i64>*
  store <2 x i64> %346, <2 x i64>* %349, align 8
  store i64 %342, i64* %339, align 8
  %350 = add i32 %335, 1
  br label %351

351:                                              ; preds = %333, %344, %338
  %352 = phi i32 [ %350, %344 ], [ %335, %338 ], [ %335, %333 ]
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %361

354:                                              ; preds = %351
  %355 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEbT0_S9_T_(%struct.Enumerant* %28, %struct.Enumerant* %336, %class.anon.337* dereferenceable(1) %2)
  %356 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %336, i64 1
  %357 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEbT0_S9_T_(%struct.Enumerant* %356, %struct.Enumerant* %5, %class.anon.337* dereferenceable(1) %2)
  br i1 %357, label %358, label %360

358:                                              ; preds = %354
  br i1 %355, label %374, label %359

359:                                              ; preds = %358, %372
  br label %4

360:                                              ; preds = %354
  br i1 %355, label %370, label %361

361:                                              ; preds = %360, %351
  %362 = ptrtoint %struct.Enumerant* %336 to i64
  %363 = sub i64 %362, %299
  %364 = sdiv exact i64 %363, 24
  %365 = sub i64 %24, %362
  %366 = sdiv exact i64 %365, 24
  %367 = icmp slt i64 %364, %366
  br i1 %367, label %368, label %372

368:                                              ; preds = %361
  tail call void @_ZNSt3__16__sortIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_(%struct.Enumerant* %28, %struct.Enumerant* %336, %class.anon.337* dereferenceable(1) %2)
  %369 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %336, i64 1
  br label %370

370:                                              ; preds = %368, %360
  %371 = phi %struct.Enumerant* [ %356, %360 ], [ %369, %368 ]
  br label %25

372:                                              ; preds = %361
  %373 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %336, i64 1
  tail call void @_ZNSt3__16__sortIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_(%struct.Enumerant* %373, %struct.Enumerant* %5, %class.anon.337* dereferenceable(1) %2)
  br label %359

374:                                              ; preds = %358, %256, %27, %27, %241, %253, %135, %126, %117, %107, %96, %87, %81, %77, %66, %57, %56, %32, %39, %91, %142
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_(%struct.Enumerant*, %struct.Enumerant*, %struct.Enumerant*, %struct.Enumerant*, %class.anon.337* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp slt i64 %7, %9
  %11 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %2, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %12, %7
  br i1 %10, label %30, label %14

14:                                               ; preds = %5
  br i1 %13, label %15, label %50

15:                                               ; preds = %14
  %16 = bitcast %struct.Enumerant* %1 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = bitcast %struct.Enumerant* %1 to i8*
  %19 = bitcast %struct.Enumerant* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #11
  %20 = bitcast %struct.Enumerant* %2 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %20, align 8
  store i64 %7, i64* %11, align 8
  %21 = load i64, i64* %6, align 8
  %22 = load i64, i64* %8, align 8
  %23 = icmp slt i64 %21, %22
  br i1 %23, label %24, label %50

24:                                               ; preds = %15
  %25 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = bitcast %struct.Enumerant* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %18, i64 24, i1 false) #11
  %28 = bitcast %struct.Enumerant* %1 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %28, align 8
  store i64 %22, i64* %6, align 8
  %29 = load i64, i64* %11, align 8
  br label %50

30:                                               ; preds = %5
  %31 = bitcast %struct.Enumerant* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %struct.Enumerant* %0 to i8*
  br i1 %13, label %36, label %40

36:                                               ; preds = %30
  %37 = bitcast %struct.Enumerant* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %37, i64 24, i1 false) #11
  %38 = bitcast %struct.Enumerant* %2 to i64*
  store i64 %32, i64* %38, align 8
  %39 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %2, i64 0, i32 0, i32 1
  store i64 %34, i64* %39, align 8
  store i64 %9, i64* %11, align 8
  br label %50

40:                                               ; preds = %30
  %41 = bitcast %struct.Enumerant* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %41, i64 24, i1 false) #11
  %42 = bitcast %struct.Enumerant* %1 to i64*
  store i64 %32, i64* %42, align 8
  %43 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 0, i32 0, i32 1
  store i64 %34, i64* %43, align 8
  store i64 %9, i64* %6, align 8
  %44 = load i64, i64* %11, align 8
  %45 = icmp slt i64 %44, %9
  br i1 %45, label %46, label %50

46:                                               ; preds = %40
  %47 = bitcast %struct.Enumerant* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %47, i64 24, i1 false) #11
  %48 = bitcast %struct.Enumerant* %2 to i64*
  store i64 %32, i64* %48, align 8
  %49 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %2, i64 0, i32 0, i32 1
  store i64 %34, i64* %49, align 8
  store i64 %9, i64* %11, align 8
  br label %50

50:                                               ; preds = %14, %15, %24, %36, %40, %46
  %51 = phi i64 [ %9, %36 ], [ %12, %14 ], [ %29, %24 ], [ %7, %15 ], [ %9, %46 ], [ %44, %40 ]
  %52 = phi i32 [ 1, %36 ], [ 0, %14 ], [ 2, %24 ], [ 1, %15 ], [ 2, %46 ], [ 1, %40 ]
  %53 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %3, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %54, %51
  br i1 %55, label %56, label %81

56:                                               ; preds = %50
  %57 = bitcast %struct.Enumerant* %2 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8
  %59 = bitcast %struct.Enumerant* %2 to i8*
  %60 = bitcast %struct.Enumerant* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #11
  %61 = bitcast %struct.Enumerant* %3 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %61, align 8
  store i64 %51, i64* %53, align 8
  %62 = add nuw nsw i32 %52, 1
  %63 = load i64, i64* %11, align 8
  %64 = load i64, i64* %6, align 8
  %65 = icmp slt i64 %63, %64
  br i1 %65, label %66, label %81

66:                                               ; preds = %56
  %67 = bitcast %struct.Enumerant* %1 to <2 x i64>*
  %68 = load <2 x i64>, <2 x i64>* %67, align 8
  %69 = bitcast %struct.Enumerant* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %59, i64 24, i1 false) #11
  %70 = bitcast %struct.Enumerant* %2 to <2 x i64>*
  store <2 x i64> %68, <2 x i64>* %70, align 8
  store i64 %64, i64* %11, align 8
  %71 = add nuw nsw i32 %52, 2
  %72 = load i64, i64* %6, align 8
  %73 = load i64, i64* %8, align 8
  %74 = icmp slt i64 %72, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %66
  %76 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8
  %78 = bitcast %struct.Enumerant* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %69, i64 24, i1 false) #11
  %79 = bitcast %struct.Enumerant* %1 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %79, align 8
  store i64 %73, i64* %6, align 8
  %80 = add nuw nsw i32 %52, 3
  br label %81

81:                                               ; preds = %56, %75, %66, %50
  %82 = phi i32 [ %80, %75 ], [ %71, %66 ], [ %62, %56 ], [ %52, %50 ]
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_(%struct.Enumerant*, %struct.Enumerant*, %class.anon.337* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2
  %5 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1
  %6 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp slt i64 %7, %9
  %11 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %12, %7
  br i1 %10, label %28, label %14

14:                                               ; preds = %3
  br i1 %13, label %15, label %47

15:                                               ; preds = %14
  %16 = bitcast %struct.Enumerant* %5 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = bitcast %struct.Enumerant* %5 to i8*
  %19 = bitcast %struct.Enumerant* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #11
  %20 = bitcast %struct.Enumerant* %4 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %20, align 8
  store i64 %7, i64* %11, align 8
  %21 = load i64, i64* %6, align 8
  %22 = icmp slt i64 %21, %9
  br i1 %22, label %23, label %47

23:                                               ; preds = %15
  %24 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8
  %26 = bitcast %struct.Enumerant* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %18, i64 24, i1 false) #11
  %27 = bitcast %struct.Enumerant* %5 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %27, align 8
  store i64 %9, i64* %6, align 8
  br label %47

28:                                               ; preds = %3
  %29 = bitcast %struct.Enumerant* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %struct.Enumerant* %0 to i8*
  br i1 %13, label %34, label %38

34:                                               ; preds = %28
  %35 = bitcast %struct.Enumerant* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %35, i64 24, i1 false) #11
  %36 = bitcast %struct.Enumerant* %4 to i64*
  store i64 %30, i64* %36, align 8
  %37 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 0, i32 1
  store i64 %32, i64* %37, align 8
  store i64 %9, i64* %11, align 8
  br label %47

38:                                               ; preds = %28
  %39 = bitcast %struct.Enumerant* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %39, i64 24, i1 false) #11
  %40 = bitcast %struct.Enumerant* %5 to i64*
  store i64 %30, i64* %40, align 8
  %41 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 0, i32 1
  store i64 %32, i64* %41, align 8
  store i64 %9, i64* %6, align 8
  %42 = icmp slt i64 %12, %9
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = bitcast %struct.Enumerant* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %44, i64 24, i1 false) #11
  %45 = bitcast %struct.Enumerant* %4 to i64*
  store i64 %30, i64* %45, align 8
  %46 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 0, i32 1
  store i64 %32, i64* %46, align 8
  store i64 %9, i64* %11, align 8
  br label %47

47:                                               ; preds = %14, %15, %23, %34, %38, %43
  %48 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 3
  %49 = icmp eq %struct.Enumerant* %48, %1
  br i1 %49, label %50, label %51

50:                                               ; preds = %77, %47
  ret void

51:                                               ; preds = %47, %77
  %52 = phi %struct.Enumerant* [ %78, %77 ], [ %48, %47 ]
  %53 = phi %struct.Enumerant* [ %52, %77 ], [ %4, %47 ]
  %54 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %52, i64 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %53, i64 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = icmp slt i64 %55, %57
  br i1 %58, label %59, label %77

59:                                               ; preds = %51
  %60 = bitcast %struct.Enumerant* %52 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8
  br label %62

62:                                               ; preds = %68, %59
  %63 = phi %struct.Enumerant* [ %52, %59 ], [ %64, %68 ]
  %64 = phi %struct.Enumerant* [ %53, %59 ], [ %69, %68 ]
  %65 = bitcast %struct.Enumerant* %63 to i8*
  %66 = bitcast %struct.Enumerant* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false)
  %67 = icmp eq %struct.Enumerant* %64, %0
  br i1 %67, label %73, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %64, i64 -1
  %70 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %64, i64 -1, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = icmp slt i64 %55, %71
  br i1 %72, label %62, label %73

73:                                               ; preds = %62, %68
  %74 = phi %struct.Enumerant* [ %0, %62 ], [ %64, %68 ]
  %75 = bitcast %struct.Enumerant* %74 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %75, align 8
  %76 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %74, i64 0, i32 1
  store i64 %55, i64* %76, align 8
  br label %77

77:                                               ; preds = %73, %51
  %78 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %52, i64 1
  %79 = icmp eq %struct.Enumerant* %78, %1
  br i1 %79, label %50, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEbT0_S9_T_(%struct.Enumerant*, %struct.Enumerant*, %class.anon.337* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %struct.Enumerant* %1 to i64
  %5 = ptrtoint %struct.Enumerant* %0 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  switch i64 %7, label %116 [
    i64 0, label %199
    i64 1, label %199
    i64 2, label %8
    i64 3, label %21
    i64 4, label %67
    i64 5, label %72
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1
  %10 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp slt i64 %11, %13
  br i1 %14, label %15, label %199

15:                                               ; preds = %8
  %16 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = bitcast %struct.Enumerant* %0 to i8*
  %19 = bitcast %struct.Enumerant* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #11
  %20 = bitcast %struct.Enumerant* %9 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %20, align 8
  store i64 %13, i64* %10, align 8
  br label %199

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1
  %23 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1
  %24 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %25, %27
  %29 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp slt i64 %30, %25
  br i1 %28, label %47, label %32

32:                                               ; preds = %21
  br i1 %31, label %33, label %199

33:                                               ; preds = %32
  %34 = bitcast %struct.Enumerant* %22 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 8
  %36 = bitcast %struct.Enumerant* %22 to i8*
  %37 = bitcast %struct.Enumerant* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #11
  %38 = bitcast %struct.Enumerant* %23 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %38, align 8
  store i64 %25, i64* %29, align 8
  %39 = load i64, i64* %24, align 8
  %40 = load i64, i64* %26, align 8
  %41 = icmp slt i64 %39, %40
  br i1 %41, label %42, label %199

42:                                               ; preds = %33
  %43 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = bitcast %struct.Enumerant* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %36, i64 24, i1 false) #11
  %46 = bitcast %struct.Enumerant* %22 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %46, align 8
  store i64 %40, i64* %24, align 8
  br label %199

47:                                               ; preds = %21
  %48 = bitcast %struct.Enumerant* %0 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %struct.Enumerant* %0 to i8*
  br i1 %31, label %53, label %57

53:                                               ; preds = %47
  %54 = bitcast %struct.Enumerant* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %54, i64 24, i1 false) #11
  %55 = bitcast %struct.Enumerant* %23 to i64*
  store i64 %49, i64* %55, align 8
  %56 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1, i32 0, i32 1
  store i64 %51, i64* %56, align 8
  store i64 %27, i64* %29, align 8
  br label %199

57:                                               ; preds = %47
  %58 = bitcast %struct.Enumerant* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %58, i64 24, i1 false) #11
  %59 = bitcast %struct.Enumerant* %22 to i64*
  store i64 %49, i64* %59, align 8
  %60 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 0, i32 1
  store i64 %51, i64* %60, align 8
  store i64 %27, i64* %24, align 8
  %61 = load i64, i64* %29, align 8
  %62 = icmp slt i64 %61, %27
  br i1 %62, label %63, label %199

63:                                               ; preds = %57
  %64 = bitcast %struct.Enumerant* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %64, i64 24, i1 false) #11
  %65 = bitcast %struct.Enumerant* %23 to i64*
  store i64 %49, i64* %65, align 8
  %66 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1, i32 0, i32 1
  store i64 %51, i64* %66, align 8
  store i64 %27, i64* %29, align 8
  br label %199

67:                                               ; preds = %3
  %68 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1
  %69 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2
  %70 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1
  %71 = tail call i32 @_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_(%struct.Enumerant* %0, %struct.Enumerant* %68, %struct.Enumerant* %69, %struct.Enumerant* %70, %class.anon.337* dereferenceable(1) %2)
  br label %199

72:                                               ; preds = %3
  %73 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1
  %74 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2
  %75 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 3
  %76 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1
  %77 = tail call i32 @_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_(%struct.Enumerant* %0, %struct.Enumerant* %73, %struct.Enumerant* %74, %struct.Enumerant* %75, %class.anon.337* dereferenceable(1) %2) #11
  %78 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 3, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp slt i64 %79, %81
  br i1 %82, label %83, label %199

83:                                               ; preds = %72
  %84 = bitcast %struct.Enumerant* %75 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8
  %86 = bitcast %struct.Enumerant* %75 to i8*
  %87 = bitcast %struct.Enumerant* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 24, i1 false) #11
  %88 = bitcast %struct.Enumerant* %76 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8
  store i64 %81, i64* %78, align 8
  %89 = load i64, i64* %80, align 8
  %90 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = icmp slt i64 %89, %91
  br i1 %92, label %93, label %199

93:                                               ; preds = %83
  %94 = bitcast %struct.Enumerant* %74 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8
  %96 = bitcast %struct.Enumerant* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %86, i64 24, i1 false) #11
  %97 = bitcast %struct.Enumerant* %75 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %97, align 8
  store i64 %91, i64* %80, align 8
  %98 = load i64, i64* %90, align 8
  %99 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = icmp slt i64 %98, %100
  br i1 %101, label %102, label %199

102:                                              ; preds = %93
  %103 = bitcast %struct.Enumerant* %73 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8
  %105 = bitcast %struct.Enumerant* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %96, i64 24, i1 false) #11
  %106 = bitcast %struct.Enumerant* %74 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %106, align 8
  store i64 %100, i64* %90, align 8
  %107 = load i64, i64* %99, align 8
  %108 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = icmp slt i64 %107, %109
  br i1 %110, label %111, label %199

111:                                              ; preds = %102
  %112 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8
  %114 = bitcast %struct.Enumerant* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %105, i64 24, i1 false) #11
  %115 = bitcast %struct.Enumerant* %73 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %115, align 8
  store i64 %109, i64* %99, align 8
  br label %199

116:                                              ; preds = %3
  %117 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2
  %118 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1
  %119 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = icmp slt i64 %120, %122
  %124 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp slt i64 %125, %120
  br i1 %123, label %141, label %127

127:                                              ; preds = %116
  br i1 %126, label %128, label %160

128:                                              ; preds = %127
  %129 = bitcast %struct.Enumerant* %118 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8
  %131 = bitcast %struct.Enumerant* %118 to i8*
  %132 = bitcast %struct.Enumerant* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 24, i1 false) #11
  %133 = bitcast %struct.Enumerant* %117 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %133, align 8
  store i64 %120, i64* %124, align 8
  %134 = load i64, i64* %119, align 8
  %135 = icmp slt i64 %134, %122
  br i1 %135, label %136, label %160

136:                                              ; preds = %128
  %137 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %138 = load <2 x i64>, <2 x i64>* %137, align 8
  %139 = bitcast %struct.Enumerant* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %131, i64 24, i1 false) #11
  %140 = bitcast %struct.Enumerant* %118 to <2 x i64>*
  store <2 x i64> %138, <2 x i64>* %140, align 8
  store i64 %122, i64* %119, align 8
  br label %160

141:                                              ; preds = %116
  %142 = bitcast %struct.Enumerant* %0 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %struct.Enumerant* %0 to i8*
  br i1 %126, label %147, label %151

147:                                              ; preds = %141
  %148 = bitcast %struct.Enumerant* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %148, i64 24, i1 false) #11
  %149 = bitcast %struct.Enumerant* %117 to i64*
  store i64 %143, i64* %149, align 8
  %150 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 0, i32 1
  store i64 %145, i64* %150, align 8
  store i64 %122, i64* %124, align 8
  br label %160

151:                                              ; preds = %141
  %152 = bitcast %struct.Enumerant* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %152, i64 24, i1 false) #11
  %153 = bitcast %struct.Enumerant* %118 to i64*
  store i64 %143, i64* %153, align 8
  %154 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 0, i32 1
  store i64 %145, i64* %154, align 8
  store i64 %122, i64* %119, align 8
  %155 = icmp slt i64 %125, %122
  br i1 %155, label %156, label %160

156:                                              ; preds = %151
  %157 = bitcast %struct.Enumerant* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %157, i64 24, i1 false) #11
  %158 = bitcast %struct.Enumerant* %117 to i64*
  store i64 %143, i64* %158, align 8
  %159 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 0, i32 1
  store i64 %145, i64* %159, align 8
  store i64 %122, i64* %124, align 8
  br label %160

160:                                              ; preds = %127, %128, %136, %147, %151, %156
  %161 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 3
  %162 = icmp eq %struct.Enumerant* %161, %1
  br i1 %162, label %199, label %163

163:                                              ; preds = %160, %192
  %164 = phi %struct.Enumerant* [ %194, %192 ], [ %161, %160 ]
  %165 = phi i32 [ %193, %192 ], [ 0, %160 ]
  %166 = phi %struct.Enumerant* [ %164, %192 ], [ %117, %160 ]
  %167 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %164, i64 0, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %166, i64 0, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = icmp slt i64 %168, %170
  br i1 %171, label %172, label %192

172:                                              ; preds = %163
  %173 = bitcast %struct.Enumerant* %164 to <2 x i64>*
  %174 = load <2 x i64>, <2 x i64>* %173, align 8
  br label %175

175:                                              ; preds = %181, %172
  %176 = phi %struct.Enumerant* [ %164, %172 ], [ %177, %181 ]
  %177 = phi %struct.Enumerant* [ %166, %172 ], [ %182, %181 ]
  %178 = bitcast %struct.Enumerant* %176 to i8*
  %179 = bitcast %struct.Enumerant* %177 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %179, i64 24, i1 false)
  %180 = icmp eq %struct.Enumerant* %177, %0
  br i1 %180, label %186, label %181

181:                                              ; preds = %175
  %182 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %177, i64 -1
  %183 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %177, i64 -1, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp slt i64 %168, %184
  br i1 %185, label %175, label %186

186:                                              ; preds = %175, %181
  %187 = phi %struct.Enumerant* [ %0, %175 ], [ %177, %181 ]
  %188 = bitcast %struct.Enumerant* %187 to <2 x i64>*
  store <2 x i64> %174, <2 x i64>* %188, align 8
  %189 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %187, i64 0, i32 1
  store i64 %168, i64* %189, align 8
  %190 = add i32 %165, 1
  %191 = icmp eq i32 %190, 8
  br i1 %191, label %196, label %192

192:                                              ; preds = %186, %163
  %193 = phi i32 [ %190, %186 ], [ %165, %163 ]
  %194 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %164, i64 1
  %195 = icmp eq %struct.Enumerant* %194, %1
  br i1 %195, label %199, label %163

196:                                              ; preds = %186
  %197 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %164, i64 1
  %198 = icmp eq %struct.Enumerant* %197, %1
  br label %199

199:                                              ; preds = %192, %196, %160, %111, %102, %93, %83, %72, %63, %57, %53, %42, %33, %32, %8, %15, %3, %3, %67
  %200 = phi i1 [ true, %67 ], [ true, %3 ], [ true, %3 ], [ true, %15 ], [ true, %8 ], [ true, %32 ], [ true, %33 ], [ true, %42 ], [ true, %53 ], [ true, %57 ], [ true, %63 ], [ true, %72 ], [ true, %83 ], [ true, %93 ], [ true, %102 ], [ true, %111 ], [ true, %160 ], [ %198, %196 ], [ true, %192 ]
  ret i1 %200
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.SkSL::SymbolTable"* %0 to i64
  %4 = icmp eq %"class.SkSL::SymbolTable"* %0, null
  br i1 %4, label %44, label %5

5:                                                ; preds = %2
  %6 = ptrtoint %"class.std::__1::__shared_weak_count"* %1 to i64
  %7 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !11
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %56, label %10

10:                                               ; preds = %5
  %11 = tail call i8* @_Znwm(i64 128) #13
  %12 = bitcast i8* %11 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 24
  %15 = bitcast i8* %14 to i64*
  store i64 %3, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 32
  %17 = bitcast i8* %16 to %"class.std::__1::__shared_weak_count"**
  store %"class.std::__1::__shared_weak_count"* %1, %"class.std::__1::__shared_weak_count"** %17, align 8
  %18 = icmp eq %"class.std::__1::__shared_weak_count"* %1, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %21 = atomicrmw add i64* %20, i64 1 monotonic
  br label %22

22:                                               ; preds = %19, %10
  %23 = phi i1 [ %18, %19 ], [ true, %10 ]
  %24 = getelementptr inbounds i8, i8* %11, i64 40
  %25 = getelementptr inbounds i8, i8* %11, i64 72
  %26 = getelementptr inbounds i8, i8* %11, i64 120
  %27 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 6
  %28 = bitcast %"class.SkSL::ErrorReporter"** %27 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 48, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 25, i1 false)
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %26 to i64*
  store i64 %29, i64* %30, align 8
  br i1 %23, label %41, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %33 = atomicrmw add i64* %32, i64 -1 acq_rel
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0
  %37 = bitcast %"class.std::__1::__shared_weak_count"* %1 to void (%"class.std::__1::__shared_count"*)***
  %38 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %38, i64 2
  %40 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %39, align 8
  tail call void %40(%"class.std::__1::__shared_count"* %36) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1) #11
  br label %41

41:                                               ; preds = %22, %31, %35
  %42 = ptrtoint i8* %14 to i64
  %43 = ptrtoint i8* %11 to i64
  br label %56

44:                                               ; preds = %2
  %45 = icmp eq %"class.std::__1::__shared_weak_count"* %1, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %48 = atomicrmw add i64* %47, i64 -1 acq_rel
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0
  %52 = bitcast %"class.std::__1::__shared_weak_count"* %1 to void (%"class.std::__1::__shared_count"*)***
  %53 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %53, i64 2
  %55 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %54, align 8
  tail call void %55(%"class.std::__1::__shared_count"* %51) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1) #11
  br label %56

56:                                               ; preds = %5, %41, %44, %46, %50
  %57 = phi i64 [ 0, %44 ], [ 0, %46 ], [ 0, %50 ], [ %3, %5 ], [ %42, %41 ]
  %58 = phi i64 [ 0, %44 ], [ 0, %46 ], [ 0, %50 ], [ %6, %5 ], [ %43, %41 ]
  %59 = inttoptr i64 %57 to %"class.SkSL::SymbolTable"*
  %60 = insertvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.SkSL::SymbolTable"* %59, 0
  %61 = inttoptr i64 %58 to %"class.std::__1::__shared_weak_count"*
  %62 = insertvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %60, %"class.std::__1::__shared_weak_count"* %61, 1
  ret { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %62
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #11
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage"* %2 to %"class.SkSL::SymbolTable"*
  tail call void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"* %3) #11
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %2, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %2, align 8
  %4 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %3 to i8*
  tail call void @_ZdaPv(i8* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__forward_list_node"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %7, %24
  %12 = phi %"struct.std::__1::__forward_list_node"* [ %15, %24 ], [ %9, %7 ]
  %13 = bitcast %"struct.std::__1::__forward_list_node"* %12 to i8*
  %14 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %12, i64 0, i32 0, i32 0
  %15 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %12, i64 0, i32 1
  %17 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #13
  br label %24

24:                                               ; preds = %21, %11
  tail call void @_ZdlPv(i8* %13) #13
  %25 = icmp eq %"struct.std::__1::__forward_list_node"* %15, null
  br i1 %25, label %26, label %11

26:                                               ; preds = %24, %7
  store %"struct.std::__1::__forward_list_node"* null, %"struct.std::__1::__forward_list_node"** %8, align 8
  %27 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.59"*, %"class.std::__1::unique_ptr.59"** %28, align 8
  %30 = icmp eq %"class.std::__1::unique_ptr.59"* %29, null
  br i1 %30, label %54, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.std::__1::unique_ptr.59"* %29 to i8*
  %33 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 3, i32 0, i32 1
  %34 = load %"class.std::__1::unique_ptr.59"*, %"class.std::__1::unique_ptr.59"** %33, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.59"* %34, %29
  br i1 %35, label %52, label %36

36:                                               ; preds = %31, %47
  %37 = phi %"class.std::__1::unique_ptr.59"* [ %38, %47 ], [ %34, %31 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %37, i64 -1
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::IRNode"*, %"class.SkSL::IRNode"** %39, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %39, align 8
  %41 = icmp eq %"class.SkSL::IRNode"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.SkSL::IRNode"* %40 to void (%"class.SkSL::IRNode"*)***
  %44 = load void (%"class.SkSL::IRNode"*)**, void (%"class.SkSL::IRNode"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %44, i64 1
  %46 = load void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %45, align 8
  tail call void %46(%"class.SkSL::IRNode"* nonnull %40) #11
  br label %47

47:                                               ; preds = %42, %36
  %48 = icmp eq %"class.std::__1::unique_ptr.59"* %38, %29
  br i1 %48, label %49, label %36

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.57"* %27 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %31
  %53 = phi i8* [ %51, %49 ], [ %32, %31 ]
  store %"class.std::__1::unique_ptr.59"* %29, %"class.std::__1::unique_ptr.59"** %33, align 8
  tail call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %26, %52
  %55 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1
  %56 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %56, align 8
  %58 = icmp eq %"class.std::__1::unique_ptr.46"* %57, null
  br i1 %58, label %82, label %59

59:                                               ; preds = %54
  %60 = bitcast %"class.std::__1::unique_ptr.46"* %57 to i8*
  %61 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 1
  %62 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %61, align 8
  %63 = icmp eq %"class.std::__1::unique_ptr.46"* %62, %57
  br i1 %63, label %80, label %64

64:                                               ; preds = %59, %75
  %65 = phi %"class.std::__1::unique_ptr.46"* [ %66, %75 ], [ %62, %59 ]
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %65, i64 -1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %67, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %67, align 8
  %69 = icmp eq %"class.SkSL::Symbol"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.SkSL::Symbol"* %68 to void (%"class.SkSL::Symbol"*)***
  %72 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %72, i64 1
  %74 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %73, align 8
  tail call void %74(%"class.SkSL::Symbol"* nonnull %68) #11
  br label %75

75:                                               ; preds = %70, %64
  %76 = icmp eq %"class.std::__1::unique_ptr.46"* %66, %57
  br i1 %76, label %77, label %64

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::vector.44"* %55 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %77, %59
  %81 = phi i8* [ %79, %77 ], [ %60, %59 ]
  store %"class.std::__1::unique_ptr.46"* %57, %"class.std::__1::unique_ptr.46"** %61, align 8
  tail call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %54, %80
  %83 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 0, i32 1
  %84 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %83, align 8
  %85 = icmp eq %"class.std::__1::__shared_weak_count"* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0, i32 1
  %88 = atomicrmw add i64* %87, i64 -1 acq_rel
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0
  %92 = bitcast %"class.std::__1::__shared_weak_count"* %84 to void (%"class.std::__1::__shared_count"*)***
  %93 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %93, i64 2
  %95 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %94, align 8
  tail call void %95(%"class.std::__1::__shared_count"* %91) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %84) #11
  br label %96

96:                                               ; preds = %82, %86, %90
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.100"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.96"*, %"class.SkSL::FunctionDeclaration"** dereferenceable(8), %"class.SkSL::FunctionDeclaration"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, align 8
  %5 = ptrtoint %"class.SkSL::FunctionDeclaration"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !12
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.100"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.100"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.100"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.100"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.100"* %62 to %"class.SkSL::FunctionDeclaration"**
  %64 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %63, align 8
  %65 = icmp eq %"class.SkSL::FunctionDeclaration"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #13, !noalias !87
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !87
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !87
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !87
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.100"**
  store %"struct.std::__1::__hash_node_base.100"* null, %"struct.std::__1::__hash_node_base.100"** %75, align 8, !noalias !87
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !12
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.96"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !12
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.100"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.100"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.100"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.100"* %118, %"struct.std::__1::__hash_node_base.100"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.100"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.100"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !12
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.100"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.100"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.100"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.100"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.100"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.100"*, i8 } undef, %"struct.std::__1::__hash_node_base.100"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.100"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.100"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.96"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.96"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.96"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.96"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.96"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.100"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.100"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.102", %"class.std::__1::__bucket_list_deallocator.102"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.100"* null, %"struct.std::__1::__hash_node_base.100"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !90

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.100"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.100"* null, %"struct.std::__1::__hash_node_base.100"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.100"* null, %"struct.std::__1::__hash_node_base.100"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.100"* null, %"struct.std::__1::__hash_node_base.100"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.100"* null, %"struct.std::__1::__hash_node_base.100"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.100"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.100"* %36, %"struct.std::__1::__hash_node_base.100"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.100"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.100"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.100"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.100"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.100"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.100"* %101 to %"class.SkSL::FunctionDeclaration"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.100"* %82, %"struct.std::__1::__hash_node_base.100"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.100"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.100"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.100"* %110 to %"class.SkSL::FunctionDeclaration"**
  %112 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %102, align 8
  %113 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %111, align 8
  %114 = icmp eq %"class.SkSL::FunctionDeclaration"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.100"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.100"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.100"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.100"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.100"* %80, %"struct.std::__1::__hash_node_base.100"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.100"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.100"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.100"** null, %"struct.std::__1::__hash_node_base.100"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.100"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.100"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.102", %"class.std::__1::__bucket_list_deallocator.102"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18FunctionDefinitionD2Ev(%"class.SkSL::FunctionDefinition"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.100"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.100"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.100"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  %11 = icmp eq %"struct.std::__1::__hash_node_base.100"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.100"** null, %"struct.std::__1::__hash_node_base.100"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.100"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.100"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %19, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8
  %21 = icmp eq %"class.SkSL::Statement"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.SkSL::Statement"* %20 to void (%"class.SkSL::Statement"*)***
  %24 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %24, i64 1
  %26 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %25, align 8
  tail call void %26(%"class.SkSL::Statement"* nonnull %20) #11
  br label %27

27:                                               ; preds = %18, %22
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18FunctionDefinitionD0Ev(%"class.SkSL::FunctionDefinition"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.100"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.100"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.100"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  %11 = icmp eq %"struct.std::__1::__hash_node_base.100"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.100"** null, %"struct.std::__1::__hash_node_base.100"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.100"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.100"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %19, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8
  %21 = icmp eq %"class.SkSL::Statement"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.SkSL::Statement"* %20 to void (%"class.SkSL::Statement"*)***
  %24 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %24, i64 1
  %26 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %25, align 8
  tail call void %26(%"class.SkSL::Statement"* nonnull %20) #11
  br label %27

27:                                               ; preds = %18, %22
  %28 = bitcast %"class.SkSL::FunctionDefinition"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %28) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL18FunctionDefinition11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::FunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 1
  %9 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %8, align 8
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::FunctionDeclaration"* %9) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #11
  %10 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %12, i64 0, i32 0
  %14 = bitcast %"class.SkSL::Statement"* %12 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %15 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %15, i64 2
  %17 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %16, align 8
  call void %17(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::IRNode"* %13) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #11
  %18 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %2, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  %26 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %25, %30
  %34 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #13
  br label %41

41:                                               ; preds = %33, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL18FunctionDefinition5cloneEv(%"class.SkSL::FunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %3 = alloca i8, align 1
  %4 = alloca %"class.std::__1::unique_ptr.89", align 8
  %5 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 1
  %8 = bitcast %"class.SkSL::FunctionDeclaration"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  store i64 %9, i64* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 0, i8* %3, align 1
  %11 = bitcast %"class.std::__1::unique_ptr.89"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %12, align 8
  %14 = bitcast %"class.SkSL::Statement"* %13 to %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)***
  %15 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)**, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %15, i64 4
  %17 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %16, align 8
  %18 = tail call %"class.SkSL::Statement"* %17(%"class.SkSL::Statement"* %13) #11
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Statement"* %18, %"class.SkSL::Statement"** %19, align 8
  %20 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4
  %21 = call %"class.SkSL::FunctionDefinition"* @_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS9_EEEERKNS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4) %5, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %2, i8* nonnull dereferenceable(1) %3, %"class.std::__1::unique_ptr.89"* nonnull dereferenceable(8) %4, %"class.std::__1::unordered_set.95"* dereferenceable(40) %20)
  %22 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %19, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8
  %23 = icmp eq %"class.SkSL::Statement"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %1
  %25 = bitcast %"class.SkSL::Statement"* %22 to void (%"class.SkSL::Statement"*)***
  %26 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %26, i64 1
  %28 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %27, align 8
  call void %28(%"class.SkSL::Statement"* nonnull %22) #11
  br label %29

29:                                               ; preds = %1, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %30 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %21, i64 0, i32 0
  ret %"class.SkSL::ProgramElement"* %30
}

declare void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* sret, %"class.SkSL::FunctionDeclaration"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::FunctionDefinition"* @_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS9_EEEERKNS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4), %"class.SkSL::FunctionDeclaration"** dereferenceable(8), i8* dereferenceable(1), %"class.std::__1::unique_ptr.89"* dereferenceable(8), %"class.std::__1::unordered_set.95"* dereferenceable(40)) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.std::__1::unordered_set.95", align 8
  %7 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 88) #11
  %8 = bitcast i8* %7 to %"class.SkSL::FunctionDefinition"*
  %9 = load i32, i32* %0, align 4
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = load i8, i8* %2, align 1, !range !11
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr.89"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %13, align 8
  %16 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %6, i64 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %6, i64 0, i32 0, i32 3
  %18 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %4, i64 0, i32 0, i32 3
  %19 = bitcast %"class.std::__1::__compressed_pair.115"* %18 to i32*
  %20 = bitcast %"class.std::__1::__compressed_pair.115"* %17 to i32*
  %21 = bitcast %"class.std::__1::unordered_set.95"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 32, i1 false) #11
  %22 = load i32, i32* %19, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.96"* nonnull %16, i64 %24) #11
  %25 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.100"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %5
  %29 = ptrtoint %"struct.std::__1::__hash_node_base.100"* %26 to i64
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ %29, %28 ], [ %36, %30 ]
  %32 = inttoptr i64 %31 to %"struct.std::__1::__hash_node.308"*
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node.308", %"struct.std::__1::__hash_node.308"* %32, i64 0, i32 2
  %34 = call { %"struct.std::__1::__hash_node_base.100"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.96"* nonnull %16, %"class.SkSL::FunctionDeclaration"** dereferenceable(8) %33, %"class.SkSL::FunctionDeclaration"** dereferenceable(8) %33) #11
  %35 = inttoptr i64 %31 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %30

38:                                               ; preds = %30, %5
  %39 = getelementptr inbounds i8, i8* %7, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 %9, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %7, i64 12
  %42 = bitcast i8* %41 to i32*
  store i32 2, i32* %42, align 4
  %43 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds i8, i8* %7, i64 16
  %45 = bitcast i8* %44 to i64*
  store i64 %11, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %7, i64 24
  store i8 %12, i8* %46, align 8
  %47 = getelementptr inbounds i8, i8* %7, i64 32
  %48 = bitcast i8* %47 to i64*
  store i64 %15, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %7, i64 40
  %50 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unordered_set.95"* %6 to i64*
  %52 = load i64, i64* %51, align 8
  store %"struct.std::__1::__hash_node_base.100"** null, %"struct.std::__1::__hash_node_base.100"*** %50, align 8
  %53 = bitcast i8* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds i8, i8* %7, i64 48
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %54, align 8
  store i64 %57, i64* %56, align 8
  store i64 0, i64* %54, align 8
  %58 = getelementptr inbounds i8, i8* %7, i64 56
  %59 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %6, i64 0, i32 0, i32 1
  %60 = bitcast %"class.std::__1::__compressed_pair.107"* %59 to i64*
  %61 = bitcast i8* %58 to i64*
  %62 = load i64, i64* %60, align 8
  store i64 %62, i64* %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::unordered_set.95", %"class.std::__1::unordered_set.95"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %64 = getelementptr inbounds i8, i8* %7, i64 64
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %63, align 8
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds i8, i8* %7, i64 72
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %20, align 8
  store i32 %69, i32* %68, align 8
  %70 = icmp eq i64 %66, 0
  %71 = inttoptr i64 %52 to %"struct.std::__1::__hash_node_base.100"**
  %72 = inttoptr i64 %62 to %"struct.std::__1::__hash_node_base.100"*
  br i1 %70, label %93, label %73

73:                                               ; preds = %38
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %72, i64 1
  %75 = bitcast %"struct.std::__1::__hash_node_base.100"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = call i64 @llvm.ctpop.i64(i64 %57) #11, !range !12
  %78 = icmp ugt i64 %77, 1
  br i1 %78, label %82, label %79

79:                                               ; preds = %73
  %80 = add i64 %57, -1
  %81 = and i64 %76, %80
  br label %86

82:                                               ; preds = %73
  %83 = icmp ult i64 %76, %57
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = urem i64 %76, %57
  br label %86

86:                                               ; preds = %79, %82, %84
  %87 = phi i64 [ %81, %79 ], [ %85, %84 ], [ %76, %82 ]
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %71, i64 %87
  %89 = bitcast %"struct.std::__1::__hash_node_base.100"** %88 to i8**
  store i8* %58, i8** %89, align 8
  %90 = bitcast %"class.std::__1::__compressed_pair.107"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #11
  %91 = getelementptr inbounds i8, i8* %7, i64 80
  %92 = bitcast i8* %91 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %92, align 8
  br label %103

93:                                               ; preds = %38
  %94 = getelementptr inbounds i8, i8* %7, i64 80
  %95 = bitcast i8* %94 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %95, align 8
  %96 = icmp eq i64 %62, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %93, %97
  %98 = phi %"struct.std::__1::__hash_node_base.100"* [ %100, %97 ], [ %72, %93 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %99, align 8
  %101 = bitcast %"struct.std::__1::__hash_node_base.100"* %98 to i8*
  call void @_ZdlPv(i8* %101) #13
  %102 = icmp eq %"struct.std::__1::__hash_node_base.100"* %100, null
  br i1 %102, label %103, label %97

103:                                              ; preds = %97, %86, %93
  %104 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %50, align 8
  store %"struct.std::__1::__hash_node_base.100"** null, %"struct.std::__1::__hash_node_base.100"*** %50, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.100"** %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %103
  %107 = bitcast %"struct.std::__1::__hash_node_base.100"** %104 to i8*
  call void @_ZdlPv(i8* %107) #13
  br label %108

108:                                              ; preds = %103, %106
  ret %"class.SkSL::FunctionDefinition"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.100"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.96"*, %"class.SkSL::FunctionDeclaration"** dereferenceable(8), %"class.SkSL::FunctionDeclaration"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, align 8
  %5 = ptrtoint %"class.SkSL::FunctionDeclaration"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !12
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.100"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.100"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.100"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.100"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.100"* %62 to %"class.SkSL::FunctionDeclaration"**
  %64 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %63, align 8
  %65 = icmp eq %"class.SkSL::FunctionDeclaration"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #13, !noalias !91
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !91
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !91
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !91
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.100"**
  store %"struct.std::__1::__hash_node_base.100"* null, %"struct.std::__1::__hash_node_base.100"** %75, align 8, !noalias !91
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !12
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.96"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !12
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.100"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.96", %"class.std::__1::__hash_table.96"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.100"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.100"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.100"* %118, %"struct.std::__1::__hash_node_base.100"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.100"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100", %"struct.std::__1::__hash_node_base.100"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.100"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !12
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.100"**, %"struct.std::__1::__hash_node_base.100"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.100"*, %"struct.std::__1::__hash_node_base.100"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.100"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.100"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.100"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.100"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.100"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.100"*, i8 } undef, %"struct.std::__1::__hash_node_base.100"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.100"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.100"*, i8 } %158
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL14InterfaceBlockD2Ev(%"class.SkSL::InterfaceBlock"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 5, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 3, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %16, %22
  %26 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 2, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %25, %31
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL14InterfaceBlockD0Ev(%"class.SkSL::InterfaceBlock"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 5, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #11
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 3, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %22, %16
  %26 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 2, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %25, %31
  %35 = bitcast %"class.SkSL::InterfaceBlock"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %35) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL14InterfaceBlock11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::InterfaceBlock"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.SkSL::String"* %4 to i8*
  %12 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %13 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 1
  %15 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %15, i64 0, i32 2
  %17 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %16, align 8
  call void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* nonnull sret %5, %"struct.SkSL::Modifiers"* %17)
  %18 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 2
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, %"class.SkSL::String"* dereferenceable(24) %18) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i64 0, i64 0)) #11
  %19 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #13
  br label %26

26:                                               ; preds = %2, %23
  %27 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %26, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %35 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %14, align 8
  %36 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %35, i64 0, i32 0, i32 2
  %37 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %37, i64 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %37, i64 0, i32 6
  %43 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %42, align 8
  %44 = icmp eq %"class.SkSL::Type"* %43, null
  %45 = select i1 %44, %"class.SkSL::Type"* %37, %"class.SkSL::Type"* %43
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.SkSL::Type"* [ %45, %41 ], [ %37, %34 ]
  %48 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %47, i64 0, i32 10, i32 0, i32 0
  %49 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %48, align 8
  %50 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %47, i64 0, i32 10, i32 0, i32 1
  %51 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %50, align 8
  %52 = icmp eq %"struct.SkSL::Type::Field"* %49, %51
  br i1 %52, label %62, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.SkSL::String"* %6 to i8*
  %55 = bitcast %"class.SkSL::String"* %7 to i8*
  %56 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %77

62:                                               ; preds = %89, %46
  %63 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.63, i64 0, i64 0)) #11
  %64 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 3
  %65 = bitcast %"class.SkSL::String"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  br label %74

72:                                               ; preds = %62
  %73 = zext i8 %67 to i64
  br label %74

74:                                               ; preds = %69, %72
  %75 = phi i64 [ %71, %69 ], [ %73, %72 ]
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %111, label %92

77:                                               ; preds = %53, %89
  %78 = phi %"struct.SkSL::Type::Field"* [ %49, %53 ], [ %90, %89 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #11
  call void @_ZNK4SkSL4Type5Field11descriptionEv(%"class.SkSL::String"* nonnull sret %7, %"struct.SkSL::Type::Field"* %78)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.62, i64 0, i64 0)) #11
  %79 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %3, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #11
  %80 = load i8, i8* %57, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  %83 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %77, %82
  %85 = load i8, i8* %60, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %84, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #11
  %90 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %78, i64 1
  %91 = icmp eq %"struct.SkSL::Type::Field"* %90, %51
  br i1 %91, label %62, label %77

92:                                               ; preds = %74
  %93 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #11
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %64) #11
  %94 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %3, %"class.SkSL::String"* nonnull dereferenceable(24) %8) #11
  %95 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #13
  br label %102

102:                                              ; preds = %92, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #11
  %103 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 4
  %104 = load i32, i32* %103, align 8
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %102
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String7appendfEPKcz(%"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0), i32 %104) #11
  br label %111

107:                                              ; preds = %102
  %108 = icmp eq i32 %104, -1
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #11
  br label %111

111:                                              ; preds = %106, %109, %107, %74
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #11
  %112 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %117) #13
  br label %118

118:                                              ; preds = %111, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL14InterfaceBlock5cloneEv(%"class.SkSL::InterfaceBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 1
  %6 = bitcast %"class.SkSL::Variable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 5, i32 0
  %13 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 5, i32 1
  %15 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %14, align 8
  %16 = icmp eq %"class.std::__1::__shared_weak_count"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %15, i64 0, i32 0, i32 1
  %19 = atomicrmw add i64* %18, i64 1 monotonic
  br label %20

20:                                               ; preds = %1, %17
  %21 = tail call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"* %13, %"class.std::__1::__shared_weak_count"* %15)
  %22 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %21, 0
  %23 = ptrtoint %"class.SkSL::SymbolTable"* %22 to i64
  %24 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %21, 1
  %25 = ptrtoint %"class.std::__1::__shared_weak_count"* %24 to i64
  %26 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26)
  %27 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27)
  %28 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 96) #11
  %29 = load i32, i32* %4, align 4
  %30 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %20
  %35 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %35, i64 24, i1 false) #11
  br label %42

36:                                               ; preds = %20
  %37 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %37, i8* %39, i64 %41) #11
  br label %42

42:                                               ; preds = %36, %34
  %43 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %48, i64 24, i1 false) #11
  br label %55

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %50, i8* %52, i64 %54) #11
  br label %55

55:                                               ; preds = %47, %49
  %56 = getelementptr inbounds i8, i8* %28, i64 8
  %57 = bitcast i8* %56 to i32*
  store i32 %29, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %28, i64 12
  %59 = bitcast i8* %58 to i32*
  store i32 5, i32* %59, align 4
  %60 = bitcast i8* %28 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds i8, i8* %28, i64 16
  %62 = bitcast i8* %61 to i64*
  store i64 %7, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %28, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* nonnull align 8 %26, i64 24, i1 false) #11
  %64 = getelementptr inbounds i8, i8* %28, i64 48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %27, i64 24, i1 false) #11
  %65 = getelementptr inbounds i8, i8* %28, i64 72
  %66 = bitcast i8* %65 to i32*
  store i32 %11, i32* %66, align 8
  %67 = getelementptr inbounds i8, i8* %28, i64 80
  %68 = bitcast i8* %67 to i64*
  store i64 %23, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %28, i64 88
  %70 = bitcast i8* %69 to i64*
  store i64 %25, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27)
  %71 = bitcast i8* %28 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Type5Field11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Type::Field"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %1, i64 0, i32 2
  %10 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %10, i64 0, i32 18
  %12 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8, !noalias !94
  %13 = icmp eq %"class.SkSL::Type"* %12, null
  %14 = select i1 %13, %"class.SkSL::Type"* %10, %"class.SkSL::Type"* %12
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %14, i64 0, i32 0, i32 1, i32 0
  %16 = load i8*, i8** %15, align 8, !noalias !94
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %14, i64 0, i32 0, i32 1, i32 1
  %18 = load i64, i64* %17, align 8, !noalias !94
  %19 = icmp ugt i64 %18, -17
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %21) #12
  unreachable

22:                                               ; preds = %2
  %23 = icmp ult i64 %18, 23
  br i1 %23, label %32, label %24

24:                                               ; preds = %22
  %25 = add nuw i64 %18, 16
  %26 = and i64 %25, -16
  %27 = tail call i8* @_Znwm(i64 %26) #13
  %28 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8, !alias.scope !94
  %29 = or i64 %26, -9223372036854775808
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %29, i64* %30, align 8, !alias.scope !94
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %31, align 8, !alias.scope !94
  br label %37

32:                                               ; preds = %22
  %33 = trunc i64 %18 to i8
  %34 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 %33, i8* %35, align 1, !alias.scope !94
  %36 = icmp eq i64 %18, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %32, %24
  %38 = phi i8* [ %27, %24 ], [ %8, %32 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 %16, i64 %18, i1 false) #11
  br label %39

39:                                               ; preds = %32, %37
  %40 = phi i8* [ %8, %32 ], [ %38, %37 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %18
  store i8 0, i8* %41, align 1
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #11
  %42 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %1, i64 0, i32 1, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %1, i64 0, i32 1, i32 1
  %45 = load i64, i64* %44, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* %43, i64 %45) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #11
  %46 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #13
  br label %53

53:                                               ; preds = %39, %50
  %54 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #13
  br label %61

61:                                               ; preds = %53, %58
  %62 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %61, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4SkSL6String7appendfEPKcz(%"class.SkSL::String"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL16StructDefinitionD0Ev(%"class.SkSL::StructDefinition"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::StructDefinition"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL16StructDefinition11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::StructDefinition"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  store i8 7, i8* %6, align 1
  %9 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i64 0, i64 0), i64 7, i1 false) #11
  %10 = getelementptr inbounds i8, i8* %9, i64 7
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.SkSL::StructDefinition", %"class.SkSL::StructDefinition"* %1, i64 0, i32 1
  %12 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLENS_14StringFragmentE(%"class.SkSL::String"* %0, i8* %14, i64 %16) #11
  %18 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0)) #11
  %19 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8
  %20 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %19, i64 0, i32 10, i32 0, i32 0
  %21 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %20, align 8
  %22 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %19, i64 0, i32 10, i32 0, i32 1
  %23 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %22, align 8
  %24 = icmp eq %"struct.SkSL::Type::Field"* %21, %23
  br i1 %24, label %36, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.SkSL::String"* %3 to i8*
  %27 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.SkSL::String"* %4 to i8*
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  br label %38

36:                                               ; preds = %80, %2
  %37 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i64 0, i64 0)) #11
  ret void

38:                                               ; preds = %25, %80
  %39 = phi %"struct.SkSL::Type::Field"* [ %21, %25 ], [ %88, %80 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  %40 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 0, i32 0
  call void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* nonnull sret %3, %"struct.SkSL::Modifiers"* %40)
  %41 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #11
  %42 = load i8, i8* %28, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %45) #13
  br label %46

46:                                               ; preds = %38, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  %47 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 0, i32 2
  %48 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %47, align 8
  %49 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 18
  %50 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %49, align 8, !noalias !97
  %51 = icmp eq %"class.SkSL::Type"* %50, null
  %52 = select i1 %51, %"class.SkSL::Type"* %48, %"class.SkSL::Type"* %50
  %53 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %52, i64 0, i32 0, i32 1, i32 0
  %54 = load i8*, i8** %53, align 8, !noalias !97
  %55 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %52, i64 0, i32 0, i32 1, i32 1
  %56 = load i64, i64* %55, align 8, !noalias !97
  %57 = icmp ugt i64 %56, -17
  br i1 %57, label %58, label %60

58:                                               ; preds = %46
  %59 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %59) #12
  unreachable

60:                                               ; preds = %46
  %61 = icmp ult i64 %56, 23
  br i1 %61, label %67, label %62

62:                                               ; preds = %60
  %63 = add nuw i64 %56, 16
  %64 = and i64 %63, -16
  %65 = call i8* @_Znwm(i64 %64) #13
  store i8* %65, i8** %31, align 8, !alias.scope !97
  %66 = or i64 %64, -9223372036854775808
  store i64 %66, i64* %32, align 8, !alias.scope !97
  store i64 %56, i64* %33, align 8, !alias.scope !97
  br label %70

67:                                               ; preds = %60
  %68 = trunc i64 %56 to i8
  store i8 %68, i8* %35, align 1, !alias.scope !97
  %69 = icmp eq i64 %56, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %67, %62
  %71 = phi i8* [ %65, %62 ], [ %30, %67 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %71, i8* align 1 %54, i64 %56, i1 false) #11
  br label %72

72:                                               ; preds = %67, %70
  %73 = phi i8* [ %30, %67 ], [ %71, %70 ]
  %74 = getelementptr inbounds i8, i8* %73, i64 %56
  store i8 0, i8* %74, align 1
  %75 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #11
  %76 = load i8, i8* %35, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %72, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  %81 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #11
  %82 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 0, i32 1, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 0, i32 1, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLENS_14StringFragmentE(%"class.SkSL::String"* %0, i8* %83, i64 %85) #11
  %87 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67, i64 0, i64 0)) #11
  %88 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 1
  %89 = icmp eq %"struct.SkSL::Type::Field"* %88, %23
  br i1 %89, label %36, label %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL16StructDefinition5cloneEv(%"class.SkSL::StructDefinition"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::StructDefinition", %"class.SkSL::StructDefinition"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::StructDefinition", %"class.SkSL::StructDefinition"* %0, i64 0, i32 1
  %4 = bitcast %"class.SkSL::Type"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #11
  %7 = load i32, i32* %2, align 4
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 %7, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 8, i32* %11, align 4
  %12 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL16StructDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = bitcast i8* %13 to i64*
  store i64 %5, i64* %14, align 8
  %15 = bitcast i8* %6 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %15
}

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLENS_14StringFragmentE(%"class.SkSL::String"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL10SwitchCaseD2Ev(%"class.SkSL::SwitchCase"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL10SwitchCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::Statement"*)***
  %8 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %9, align 8
  tail call void %10(%"class.SkSL::Statement"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %12, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %12, align 8
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.SkSL::Expression"* %13 to void (%"class.SkSL::Expression"*)***
  %17 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %17, i64 1
  %19 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %18, align 8
  tail call void %19(%"class.SkSL::Expression"* nonnull %13) #11
  br label %20

20:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL10SwitchCaseD0Ev(%"class.SkSL::SwitchCase"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL10SwitchCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::Statement"*)***
  %8 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %9, align 8
  tail call void %10(%"class.SkSL::Statement"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %12, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %12, align 8
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.SkSL::Expression"* %13 to void (%"class.SkSL::Expression"*)***
  %17 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %17, i64 1
  %19 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %18, align 8
  tail call void %19(%"class.SkSL::Expression"* nonnull %13) #11
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"class.SkSL::SwitchCase"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %21) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL10SwitchCase11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::SwitchCase"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  %8 = icmp eq %"class.SkSL::Expression"* %7, null
  br i1 %8, label %47, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 0, i32 0
  %12 = bitcast %"class.SkSL::Expression"* %7 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %13 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %13, i64 2
  %15 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %14, align 8
  call void %15(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::IRNode"* %11) #11
  %16 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = select i1 %19, i8* %21, i8* %10
  %23 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %25, i64 0, i32 0
  %27 = bitcast %"class.SkSL::Statement"* %25 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %28 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %28, i64 2
  %30 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %29, align 8
  call void %30(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %26) #11
  %31 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = select i1 %34, i8* %36, i8* %23
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i64 0, i64 0), i8* %22, i8* %37) #11
  %38 = load i8, i8* %32, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %9
  %41 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %9, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  %43 = load i8, i8* %17, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %67

45:                                               ; preds = %42
  %46 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %46) #13
  br label %67

47:                                               ; preds = %2
  %48 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #11
  %49 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %50 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %49, align 8
  %51 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %50, i64 0, i32 0
  %52 = bitcast %"class.SkSL::Statement"* %50 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %53 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %53, i64 2
  %55 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %54, align 8
  call void %55(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::IRNode"* %51) #11
  %56 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = select i1 %59, i8* %61, i8* %48
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.70, i64 0, i64 0), i8* %62) #11
  %63 = load i8, i8* %57, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %47
  %66 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %65, %47, %45, %42
  %68 = phi i8* [ %10, %42 ], [ %10, %45 ], [ %48, %47 ], [ %48, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL10SwitchCase5cloneEv(%"class.SkSL::SwitchCase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %8 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %8, i64 10
  %10 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %9, align 8
  %11 = tail call %"class.SkSL::Expression"* %10(%"class.SkSL::Expression"* nonnull %4) #11
  %12 = ptrtoint %"class.SkSL::Expression"* %11 to i64
  br label %13

13:                                               ; preds = %1, %6
  %14 = phi i64 [ %12, %6 ], [ 0, %1 ]
  %15 = getelementptr inbounds %"class.SkSL::SwitchCase", %"class.SkSL::SwitchCase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %15, align 8
  %17 = bitcast %"class.SkSL::Statement"* %16 to %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)***
  %18 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)**, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %18, i64 4
  %20 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %19, align 8
  %21 = tail call %"class.SkSL::Statement"* %20(%"class.SkSL::Statement"* %16) #11
  %22 = ptrtoint %"class.SkSL::Statement"* %21 to i64
  %23 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #11
  %24 = load i32, i32* %2, align 4
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %23, i64 12
  %28 = bitcast i8* %27 to i32*
  store i32 28, i32* %28, align 4
  %29 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL10SwitchCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 16
  %31 = bitcast i8* %30 to i64*
  store i64 %14, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %23, i64 24
  %33 = bitcast i8* %32 to i64*
  store i64 %22, i64* %33, align 8
  %34 = bitcast i8* %23 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %34
}

declare void @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4SkSL10Rehydrator9modifiersEv: argument 0"}
!4 = distinct !{!4, !"_ZN4SkSL10Rehydrator9modifiersEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4SkSL10Rehydrator9modifiersEv: argument 0"}
!7 = distinct !{!7, !"_ZN4SkSL10Rehydrator9modifiersEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4SkSL10Rehydrator9modifiersEv: argument 0"}
!10 = distinct !{!10, !"_ZN4SkSL10Rehydrator9modifiersEv"}
!11 = !{i8 0, i8 2}
!12 = !{i64 0, i64 65}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4SkSL4Type11displayNameEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !20}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!24 = distinct !{!24, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!27 = distinct !{!27, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!30 = distinct !{!30, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!33 = distinct !{!33, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!36 = distinct !{!36, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!39 = distinct !{!39, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!42 = distinct !{!42, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!45 = distinct !{!45, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!48 = distinct !{!48, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!51 = distinct !{!51, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!54 = distinct !{!54, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!57 = distinct !{!57, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!60 = distinct !{!60, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!63 = distinct !{!63, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!66 = distinct !{!66, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!69 = distinct !{!69, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!72 = distinct !{!72, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!75 = distinct !{!75, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!78 = distinct !{!78, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!81 = distinct !{!81, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!84 = distinct !{!84, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!85 = distinct !{!85, !20}
!86 = distinct !{!86, !20}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!89 = distinct !{!89, !"_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_"}
!90 = distinct !{!90, !20}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!93 = distinct !{!93, !"_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!94 = !{!95}
!95 = distinct !{!95, !96, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!96 = distinct !{!96, !"_ZNK4SkSL4Type11displayNameEv"}
!97 = !{!98, !100}
!98 = distinct !{!98, !99, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!99 = distinct !{!99, !"_ZNK4SkSL4Type11displayNameEv"}
!100 = distinct !{!100, !101, !"_ZNK4SkSL4Type11descriptionEv: argument 0"}
!101 = distinct !{!101, !"_ZNK4SkSL4Type11descriptionEv"}
