; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/array_value.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/array_value.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ArrayValue" = type { %"class.v8::Local", %"class.v8::Isolate"* }
%"class.v8::Local" = type { %"class.v8::Array"* }
%"class.v8::Array" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.blink::Dictionary" = type { %"class.v8::Isolate"*, i32, %"class.v8::Local.1" }
%"class.v8::Local.1" = type { %"class.v8::Object"* }
%"class.v8::Object" = type { i8 }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::Context" = type { i8 }
%"class.v8::internal::Isolate" = type opaque

@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::ArrayValue"* @_ZN5blink10ArrayValueaSERKS0_(%"class.blink::ArrayValue"* returned, %"class.blink::ArrayValue"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::ArrayValue"* %0 to i8*
  %4 = bitcast %"class.blink::ArrayValue"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret %"class.blink::ArrayValue"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink10ArrayValue17IsUndefinedOrNullEv(%"class.blink::ArrayValue"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::ArrayValue"* %0 to %"class.v8::Value"**
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %29

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %19, 67
  br i1 %20, label %21, label %29

21:                                               ; preds = %10
  %22 = add i64 %7, 23
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = ashr i32 %24, 1
  %26 = icmp eq i32 %25, 3
  %27 = icmp eq i32 %25, 5
  %28 = or i1 %26, %27
  br label %29

29:                                               ; preds = %1, %5, %10, %21
  %30 = phi i1 [ true, %1 ], [ %28, %21 ], [ false, %5 ], [ false, %10 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10ArrayValue6lengthERj(%"class.blink::ArrayValue"* nocapture readonly, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::ArrayValue"* %0 to %"class.v8::Value"**
  %4 = load %"class.v8::Value"*, %"class.v8::Value"** %3, align 8
  %5 = icmp eq %"class.v8::Value"* %4, null
  %6 = bitcast %"class.v8::Value"* %4 to %"class.v8::Array"*
  br i1 %5, label %30, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::Value"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %30
    i32 3, label %30
  ]

28:                                               ; preds = %23, %12, %7
  %29 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %6) #4
  store i32 %29, i32* %1, align 4
  br label %30

30:                                               ; preds = %23, %23, %2, %28
  %31 = phi i1 [ true, %28 ], [ false, %23 ], [ false, %2 ], [ false, %23 ]
  ret i1 %31
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10ArrayValue3GetEjRNS_10DictionaryE(%"class.blink::ArrayValue"* nocapture readonly, i32, %"class.blink::Dictionary"* nocapture dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = alloca %"class.blink::Dictionary", align 8
  %6 = bitcast %"class.blink::ArrayValue"* %0 to %"class.v8::Value"**
  %7 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %8 = icmp eq %"class.v8::Value"* %7, null
  %9 = bitcast %"class.v8::Value"* %7 to %"class.v8::Array"*
  br i1 %8, label %92, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.v8::Value"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 3
  %14 = icmp eq i64 %13, 1
  br i1 %14, label %15, label %31

15:                                               ; preds = %10
  %16 = add i64 %12, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = and i64 %12, -4294967296
  %20 = zext i32 %18 to i64
  %21 = or i64 %19, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load i16, i16* %23, align 2
  %25 = icmp eq i16 %24, 67
  br i1 %25, label %26, label %31

26:                                               ; preds = %15
  %27 = add i64 %12, 23
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = ashr i32 %29, 1
  switch i32 %30, label %31 [
    i32 5, label %92
    i32 3, label %92
  ]

31:                                               ; preds = %26, %15, %10
  %32 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %9) #4
  %33 = icmp ugt i32 %32, %1
  br i1 %33, label %34, label %92

34:                                               ; preds = %31
  %35 = bitcast %"class.blink::ArrayValue"* %0 to %"class.v8::Object"**
  %36 = load %"class.v8::Object"*, %"class.v8::Object"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ArrayValue", %"class.blink::ArrayValue"* %0, i64 0, i32 1
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %38) #4
  %40 = tail call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %36, %"class.v8::Context"* %39, i32 %1) #4
  %41 = icmp eq %"class.v8::Value"* %40, null
  br i1 %41, label %92, label %42

42:                                               ; preds = %34
  %43 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %40) #4
  br i1 %43, label %44, label %92

44:                                               ; preds = %42
  %45 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %45) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 56, i1 false)
  %46 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %47, align 8
  %48 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %48, align 2
  %49 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %50 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %51 = bitcast %"class.WTF::StringImpl"** %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #4
  %52 = bitcast i8** %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 36, i1 false) #4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %53 = bitcast %"class.blink::Dictionary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #4
  %54 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %55 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  call void @_ZN5blink10DictionaryC1EPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %5, %"class.v8::Isolate"* %54, %"class.v8::Value"* nonnull %40, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %55) #4
  %56 = bitcast %"class.blink::Dictionary"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %53, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %57 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %44
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %55) #4
  br label %61

61:                                               ; preds = %44, %60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %62 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = icmp eq i64* %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 3
  %67 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %66, align 8
  %68 = bitcast %"class.v8::Isolate"* %67 to %"class.v8::internal::Isolate"*
  %69 = load i64, i64* %63, align 8
  %70 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %68, i64 %69) #4
  %71 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %67) #4
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = bitcast i64* %70 to %"class.v8::Value"*
  %74 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %67, %"class.v8::Value"* %73) #4
  br label %75

75:                                               ; preds = %72, %65, %61
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #4
  br label %91

91:                                               ; preds = %75, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %45) #4
  br label %92

92:                                               ; preds = %34, %26, %26, %3, %91, %42, %31
  %93 = phi i1 [ false, %26 ], [ false, %31 ], [ true, %91 ], [ false, %42 ], [ false, %34 ], [ false, %3 ], [ false, %26 ]
  ret i1 %93
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #3

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink10DictionaryC1EPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.blink::Dictionary"*, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #3

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #3

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
