; ModuleID = '../../base/sequenced_task_runner.cc'
source_filename = "../../base/sequenced_task_runner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::OnTaskRunnerDeleter" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>

$_ZN4base8internal7InvokerINS0_9BindStateIPFvPKvEJS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvPKvEJS3_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZN4base19OnTaskRunnerDeleterC1E13scoped_refptrINS_19SequencedTaskRunnerEE = hidden unnamed_addr alias void (%"struct.base::OnTaskRunnerDeleter"*, %"class.base::SequencedTaskRunner"*), void (%"struct.base::OnTaskRunnerDeleter"*, %"class.base::SequencedTaskRunner"*)* @_ZN4base19OnTaskRunnerDeleterC2E13scoped_refptrINS_19SequencedTaskRunnerEE
@_ZN4base19OnTaskRunnerDeleterD1Ev = hidden unnamed_addr alias void (%"struct.base::OnTaskRunnerDeleter"*), void (%"struct.base::OnTaskRunnerDeleter"*)* @_ZN4base19OnTaskRunnerDeleterD2Ev
@_ZN4base19OnTaskRunnerDeleterC1EOS0_ = hidden unnamed_addr alias void (%"struct.base::OnTaskRunnerDeleter"*, %"struct.base::OnTaskRunnerDeleter"*), void (%"struct.base::OnTaskRunnerDeleter"*, %"struct.base::OnTaskRunnerDeleter"*)* @_ZN4base19OnTaskRunnerDeleterC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base19SequencedTaskRunner19PostNonNestableTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::SequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = bitcast %"class.base::SequencedTaskRunner"* %0 to i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %10 = load i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %10, i64 4
  %12 = load i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %11, align 8
  %13 = call zeroext i1 %12(%"class.base::SequencedTaskRunner"* %0, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %4, i64 0) #7
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #7
  ret i1 %13
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), void (i8*)*, i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = ptrtoint void (i8*)* %2 to i64
  %8 = ptrtoint i8* %3 to i64
  %9 = tail call i8* @_Znwm(i64 48) #8, !noalias !2
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPKvEJS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPKvEJS3_EE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !2
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = bitcast i8* %11 to i64*
  store i64 %7, i64* %12, align 8, !noalias !2
  %13 = getelementptr inbounds i8, i8* %9, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %8, i64* %14, align 8, !noalias !2
  %15 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %17 = ptrtoint i8* %9 to i64
  %18 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %19 = bitcast %"class.base::SequencedTaskRunner"* %0 to i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %20 = load i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %20, i64 4
  %22 = load i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %21, align 8
  %23 = call zeroext i1 %22(%"class.base::SequencedTaskRunner"* %0, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %5, i64 0) #7
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #7
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19OnTaskRunnerDeleterC2E13scoped_refptrINS_19SequencedTaskRunnerEE(%"struct.base::OnTaskRunnerDeleter"* nocapture, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::SequencedTaskRunner"* %1 to i64
  %4 = bitcast %"struct.base::OnTaskRunnerDeleter"* %0 to i64*
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19OnTaskRunnerDeleterD2Ev(%"struct.base::OnTaskRunnerDeleter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.base::OnTaskRunnerDeleter", %"struct.base::OnTaskRunnerDeleter"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %2, align 8
  %4 = icmp eq %"class.base::SequencedTaskRunner"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %12) #7
  br label %13

13:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base19OnTaskRunnerDeleterC2EOS0_(%"struct.base::OnTaskRunnerDeleter"* nocapture, %"struct.base::OnTaskRunnerDeleter"* nocapture dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.base::OnTaskRunnerDeleter", %"struct.base::OnTaskRunnerDeleter"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"struct.base::OnTaskRunnerDeleter"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.base::OnTaskRunnerDeleter"* %0 to i64*
  store i64 %5, i64* %6, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"struct.base::OnTaskRunnerDeleter"* @_ZN4base19OnTaskRunnerDeleteraSEOS0_(%"struct.base::OnTaskRunnerDeleter"* returned, %"struct.base::OnTaskRunnerDeleter"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.base::OnTaskRunnerDeleter", %"struct.base::OnTaskRunnerDeleter"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"struct.base::OnTaskRunnerDeleter"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %3, align 8
  %6 = bitcast %"struct.base::OnTaskRunnerDeleter"* %0 to i64*
  %7 = getelementptr inbounds %"struct.base::OnTaskRunnerDeleter", %"struct.base::OnTaskRunnerDeleter"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %7, align 8
  store i64 %5, i64* %6, align 8
  %9 = icmp eq %"class.base::SequencedTaskRunner"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %8, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %17) #7
  br label %18

18:                                               ; preds = %2, %10, %15
  ret %"struct.base::OnTaskRunnerDeleter"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPKvEJS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (i8*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i8**
  %6 = load void (i8*)*, void (i8*)** %3, align 8
  %7 = load i8*, i8** %5, align 8
  tail call void %6(i8* %7) #7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPKvEJS3_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #8
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackERPFvPKvEJRS4_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackERPFvPKvEJRS4_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIRPFvPKvEJRS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIRPFvPKvEJRS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
