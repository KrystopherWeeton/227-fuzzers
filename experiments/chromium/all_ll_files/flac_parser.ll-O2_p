; ModuleID = '../../third_party/ffmpeg/libavcodec/flac_parser.c'
source_filename = "../../third_party/ffmpeg/libavcodec/flac_parser.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecParser = type { [5 x i32], i32, {}*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.FLACParseContext = type { %struct.AVCodecParserContext*, %struct.AVCodecContext*, %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker*, i32, i32, i32, %struct.AVFifoBuffer*, i32, i8*, i32, %struct.FLACFrameInfo, i32 }
%struct.FLACHeaderMarker = type { i32, [4 x i32], i32, %struct.FLACFrameInfo, %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker* }
%struct.AVFifoBuffer = type { i8*, i8*, i8*, i8*, i32, i32 }
%struct.FLACFrameInfo = type { i32, i32, i32, i32, i32, i64, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }

@ff_flac_parser = hidden local_unnamed_addr global { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* } { [5 x i32] [i32 86028, i32 0, i32 0, i32 0, i32 0], i32 128, i32 (%struct.AVCodecParserContext*)* @flac_parse_init, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)* @flac_parse, void (%struct.AVCodecParserContext*)* @flac_parse_close, i32 (%struct.AVCodecContext*, i8*, i32)* null, %struct.AVCodecParser* null }, align 8
@.str = private unnamed_addr constant [28 x i8] c"couldn't allocate fifo_buf\0A\00", align 1
@.str.1 = private unnamed_addr constant [57 x i8] c"dropping low score %i frame header from offset %i to %i\0A\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"couldn't reallocate buffer of size %td\0A\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"find_new_headers couldn't allocate FLAC header\0A\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"Junk frame till offset %i\0A\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"sample/frame number mismatch in adjacent frames\0A\00", align 1
@.str.6 = private unnamed_addr constant [63 x i8] c"crc check failed from offset %i (frame %ld) to %i (frame %ld)\0A\00", align 1
@.str.7 = private unnamed_addr constant [48 x i8] c"sample rate change detected in adjacent frames\0A\00", align 1
@.str.8 = private unnamed_addr constant [52 x i8] c"bits per sample change detected in adjacent frames\0A\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"blocking strategy change detected in adjacent frames\0A\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"number of channels change detected in adjacent frames\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"couldn't allocate FLACHeaderMarker\0A\00", align 1
@.str.12 = private unnamed_addr constant [43 x i8] c"couldn't reallocate wrap buffer of size %d\00", align 1

; Function Attrs: cold nounwind optsize ssp uwtable
define internal i32 @flac_parse_init(%struct.AVCodecParserContext*) #0 {
  %2 = bitcast %struct.AVCodecParserContext* %0 to %struct.FLACParseContext**
  %3 = load %struct.FLACParseContext*, %struct.FLACParseContext** %2, align 8
  %4 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %3, i64 0, i32 0
  store %struct.AVCodecParserContext* %0, %struct.AVCodecParserContext** %4, align 8
  %5 = tail call %struct.AVFifoBuffer* @av_fifo_alloc_array(i64 13, i64 8192) #5
  %6 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %3, i64 0, i32 7
  store %struct.AVFifoBuffer* %5, %struct.AVFifoBuffer** %6, align 8
  %7 = icmp eq %struct.AVFifoBuffer* %5, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %3, i64 0, i32 1
  %10 = bitcast %struct.AVCodecContext** %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #5
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i32 [ -12, %8 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @flac_parse(%struct.AVCodecParserContext* nocapture, %struct.AVCodecContext*, i8** nocapture, i32* nocapture, i8*, i32) #1 {
  %7 = alloca %struct.GetBitContext, align 8
  %8 = alloca %struct.FLACFrameInfo, align 8
  %9 = alloca [16 x i8], align 16
  %10 = bitcast %struct.AVCodecParserContext* %0 to %struct.FLACParseContext**
  %11 = load %struct.FLACParseContext*, %struct.FLACParseContext** %10, align 8
  %12 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 16
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %63, label %16

16:                                               ; preds = %6
  %17 = bitcast %struct.FLACFrameInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 40, i1 false)
  %18 = bitcast %struct.GetBitContext* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false) #5
  %19 = icmp eq i8* %4, null
  %20 = select i1 %19, i32 0, i32 128
  %21 = lshr exact i32 %20, 3
  %22 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i64 0, i32 0
  store i8* %4, i8** %22, align 8
  %23 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i64 0, i32 3
  store i32 %20, i32* %23, align 4
  %24 = or i32 %20, 8
  %25 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i64 0, i32 4
  store i32 %24, i32* %25, align 8
  %26 = zext i32 %21 to i64
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i64 0, i32 1
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i64 0, i32 2
  store i32 0, i32* %29, align 8
  %30 = call i32 @ff_flac_decode_frame_header(%struct.AVCodecContext* %1, %struct.GetBitContext* nonnull %7, %struct.FLACFrameInfo* nonnull %8, i32 127) #5
  %31 = icmp eq i32 %30, 0
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #5
  br i1 %31, label %32, label %62

32:                                               ; preds = %16
  %33 = getelementptr inbounds %struct.FLACFrameInfo, %struct.FLACFrameInfo* %8, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 27
  store i32 %34, i32* %35, align 8
  %36 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 82
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %32
  %40 = getelementptr inbounds %struct.FLACFrameInfo, %struct.FLACFrameInfo* %8, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %36, align 8
  br label %42

42:                                               ; preds = %32, %39
  %43 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 0
  %44 = load %struct.AVCodecParserContext*, %struct.AVCodecParserContext** %43, align 8
  %45 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %44, i64 0, i32 16
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 4096
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.FLACFrameInfo, %struct.FLACFrameInfo* %8, i64 0, i32 5
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %44, i64 0, i32 7
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %struct.FLACFrameInfo, %struct.FLACFrameInfo* %8, i64 0, i32 6
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %49
  %57 = sext i32 %34 to i64
  %58 = load %struct.AVCodecParserContext*, %struct.AVCodecParserContext** %43, align 8
  %59 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %58, i64 0, i32 7
  %60 = load i64, i64* %59, align 8
  %61 = mul nsw i64 %60, %57
  store i64 %61, i64* %59, align 8
  br label %62

62:                                               ; preds = %16, %49, %42, %56
  store i8* %4, i8** %2, align 8
  store i32 %5, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #5
  br label %529

63:                                               ; preds = %6
  %64 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 1
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %64, align 8
  %65 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 6
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = tail call fastcc i32 @get_best_header(%struct.FLACParseContext* %11, i8** %2, i32* %3)
  br label %529

70:                                               ; preds = %63
  %71 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 3
  %72 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %71, align 8
  %73 = icmp eq %struct.FLACHeaderMarker* %72, null
  br i1 %73, label %154, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %72, i64 0, i32 5
  %76 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %75, align 8
  %77 = icmp eq %struct.FLACHeaderMarker* %76, null
  %78 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 2
  %79 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %78, align 8
  br i1 %77, label %85, label %80

80:                                               ; preds = %74
  %81 = icmp eq %struct.FLACHeaderMarker* %79, %76
  br i1 %81, label %111, label %82

82:                                               ; preds = %80
  %83 = bitcast %struct.AVCodecContext* %1 to i8*
  %84 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 5
  br label %89

85:                                               ; preds = %74
  %86 = icmp eq %struct.FLACHeaderMarker* %79, %72
  br i1 %86, label %144, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 5
  br label %135

89:                                               ; preds = %109, %82
  %90 = phi %struct.FLACHeaderMarker* [ %72, %82 ], [ %110, %109 ]
  %91 = phi %struct.FLACHeaderMarker* [ %79, %82 ], [ %105, %109 ]
  %92 = bitcast %struct.FLACHeaderMarker* %91 to i8*
  %93 = icmp eq %struct.FLACHeaderMarker* %91, %90
  br i1 %93, label %103, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %91, i64 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %91, i64 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %91, i64 0, i32 4
  %100 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %99, align 8
  %101 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %100, i64 0, i32 0
  %102 = load i32, i32* %101, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %83, i32 48, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i32 %96, i32 %98, i32 %102) #5
  br label %103

103:                                              ; preds = %89, %94
  %104 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %91, i64 0, i32 4
  %105 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %104, align 8
  tail call void @av_free(i8* %92) #5
  %106 = load i32, i32* %84, align 4
  %107 = add nsw i32 %106, -1
  store i32 %107, i32* %84, align 4
  %108 = icmp eq %struct.FLACHeaderMarker* %105, %76
  br i1 %108, label %111, label %109

109:                                              ; preds = %103
  %110 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %71, align 8
  br label %89

111:                                              ; preds = %103, %80
  %112 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 7
  %113 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %112, align 8
  %114 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %76, i64 0, i32 0
  %115 = load i32, i32* %114, align 8
  tail call void @av_fifo_drain(%struct.AVFifoBuffer* %113, i32 %115) #5
  %116 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %76, i64 0, i32 4
  %117 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %116, align 8
  %118 = icmp eq %struct.FLACHeaderMarker* %117, null
  br i1 %118, label %128, label %119

119:                                              ; preds = %111, %119
  %120 = phi %struct.FLACHeaderMarker* [ %126, %119 ], [ %117, %111 ]
  %121 = load i32, i32* %114, align 8
  %122 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %120, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = sub nsw i32 %123, %121
  store i32 %124, i32* %122, align 8
  %125 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %120, i64 0, i32 4
  %126 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %125, align 8
  %127 = icmp eq %struct.FLACHeaderMarker* %126, null
  br i1 %127, label %128, label %119

128:                                              ; preds = %119, %111
  store i32 0, i32* %114, align 8
  store %struct.FLACHeaderMarker* %76, %struct.FLACHeaderMarker** %78, align 8
  %129 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  %131 = icmp sgt i32 %130, 9
  br i1 %131, label %133, label %132

132:                                              ; preds = %128
  store %struct.FLACHeaderMarker* null, %struct.FLACHeaderMarker** %71, align 8
  br label %154

133:                                              ; preds = %128
  store %struct.FLACHeaderMarker* %76, %struct.FLACHeaderMarker** %71, align 8
  %134 = tail call fastcc i32 @get_best_header(%struct.FLACParseContext* %11, i8** %2, i32* %3)
  br label %529

135:                                              ; preds = %87, %135
  %136 = phi %struct.FLACHeaderMarker* [ %79, %87 ], [ %139, %135 ]
  %137 = bitcast %struct.FLACHeaderMarker* %136 to i8*
  %138 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %136, i64 0, i32 4
  %139 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %138, align 8
  tail call void @av_free(i8* %137) #5
  %140 = load i32, i32* %88, align 4
  %141 = add nsw i32 %140, -1
  store i32 %141, i32* %88, align 4
  %142 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %71, align 8
  %143 = icmp eq %struct.FLACHeaderMarker* %139, %142
  br i1 %143, label %144, label %135

144:                                              ; preds = %135, %85
  %145 = phi %struct.FLACHeaderMarker* [ %72, %85 ], [ %139, %135 ]
  %146 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %145, i64 0, i32 4
  %147 = bitcast %struct.FLACHeaderMarker** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %struct.FLACHeaderMarker** %78 to i64*
  store i64 %148, i64* %149, align 8
  %150 = bitcast %struct.FLACHeaderMarker** %71 to i8*
  tail call void @av_freep(i8* %150) #5
  %151 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 5
  %152 = load i32, i32* %151, align 4
  %153 = add nsw i32 %152, -1
  store i32 %153, i32* %151, align 4
  br label %154

154:                                              ; preds = %70, %132, %144
  %155 = icmp ne i32 %5, 0
  %156 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 8
  %157 = sext i32 %5 to i64
  %158 = getelementptr inbounds i8, i8* %4, i64 %157
  %159 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 5
  %160 = ptrtoint i8* %158 to i64
  %161 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 7
  %162 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0
  %163 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 4
  %164 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 2
  br label %165

165:                                              ; preds = %397, %154
  %166 = phi i8* [ %4, %154 ], [ %398, %397 ]
  %167 = getelementptr inbounds i8, i8* %166, i64 16
  %168 = ptrtoint i8* %166 to i64
  br label %169

169:                                              ; preds = %165, %369
  %170 = phi i8* [ %190, %369 ], [ %166, %165 ]
  br i1 %155, label %171, label %176

171:                                              ; preds = %169
  %172 = icmp ult i8* %170, %158
  br i1 %172, label %173, label %399

173:                                              ; preds = %171
  %174 = load i32, i32* %159, align 4
  %175 = icmp slt i32 %174, 10
  br i1 %175, label %180, label %399

176:                                              ; preds = %169
  %177 = load i32, i32* %156, align 8
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %399

179:                                              ; preds = %176
  store i32 1, i32* %156, align 8
  br label %189

180:                                              ; preds = %173
  %181 = ptrtoint i8* %170 to i64
  %182 = sub i64 %160, %181
  %183 = shl i32 %174, 13
  %184 = sub i32 90112, %183
  %185 = sext i32 %184 to i64
  %186 = icmp sgt i64 %182, %185
  %187 = select i1 %186, i64 %185, i64 %182
  %188 = getelementptr inbounds i8, i8* %170, i64 %187
  br label %189

189:                                              ; preds = %180, %179
  %190 = phi i8* [ %188, %180 ], [ %167, %179 ]
  %191 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %192 = call i32 @av_fifo_space(%struct.AVFifoBuffer* %191) #5
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %201

194:                                              ; preds = %189
  %195 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %196 = call i32 @av_fifo_size(%struct.AVFifoBuffer* %195) #5
  %197 = sdiv i32 %196, 8192
  %198 = load i32, i32* %159, align 4
  %199 = mul nsw i32 %198, 20
  %200 = icmp sgt i32 %197, %199
  br i1 %200, label %522, label %201

201:                                              ; preds = %189, %194
  %202 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %203 = call i32 @av_fifo_space(%struct.AVFifoBuffer* %202) #5
  %204 = sext i32 %203 to i64
  %205 = ptrtoint i8* %190 to i64
  %206 = sub i64 %205, %168
  %207 = icmp sgt i64 %206, %204
  br i1 %207, label %208, label %222

208:                                              ; preds = %201
  %209 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %210 = call i32 @av_fifo_size(%struct.AVFifoBuffer* %209) #5
  %211 = shl i32 %210, 1
  %212 = trunc i64 %206 to i32
  %213 = add i32 %211, %212
  %214 = call i32 @av_fifo_realloc2(%struct.AVFifoBuffer* %209, i32 %213) #5
  %215 = icmp slt i32 %214, 0
  br i1 %215, label %216, label %222

216:                                              ; preds = %208
  %217 = bitcast %struct.AVCodecContext* %1 to i8*
  %218 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %219 = call i32 @av_fifo_size(%struct.AVFifoBuffer* %218) #5
  %220 = sext i32 %219 to i64
  %221 = add nsw i64 %206, %220
  call void (i8*, i32, i8*, ...) @av_log(i8* %217, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i64 %221) #5
  br label %522

222:                                              ; preds = %208, %201
  br i1 %155, label %223, label %227

223:                                              ; preds = %222
  %224 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %225 = trunc i64 %206 to i32
  %226 = call i32 @av_fifo_generic_write(%struct.AVFifoBuffer* %224, i8* %166, i32 %225, i32 (i8*, i8*, i32)* null) #5
  br label %231

227:                                              ; preds = %222
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %162, i8 0, i64 16, i1 false)
  %228 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %229 = call i32 @av_fifo_generic_write(%struct.AVFifoBuffer* %228, i8* nonnull %162, i32 16, i32 (i8*, i8*, i32)* null) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #5
  %230 = trunc i64 %206 to i32
  br label %231

231:                                              ; preds = %227, %223
  %232 = phi i32 [ %230, %227 ], [ %225, %223 ]
  %233 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %234 = call i32 @av_fifo_size(%struct.AVFifoBuffer* %233) #5
  %235 = sub i32 -15, %232
  %236 = add i32 %235, %234
  %237 = icmp sgt i32 %236, 0
  %238 = select i1 %237, i32 %236, i32 0
  store i32 0, i32* %163, align 8
  %239 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %240 = call i32 @av_fifo_size(%struct.AVFifoBuffer* %239) #5
  %241 = add nsw i32 %240, -15
  %242 = sub nsw i32 1, %238
  %243 = add i32 %242, %241
  %244 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %245 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %244, i64 0, i32 1
  %246 = load i8*, i8** %245, align 8
  %247 = zext i32 %238 to i64
  %248 = getelementptr inbounds i8, i8* %246, i64 %247
  %249 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %244, i64 0, i32 3
  %250 = load i8*, i8** %249, align 8
  %251 = icmp ult i8* %248, %250
  %252 = ptrtoint i8* %250 to i64
  br i1 %251, label %258, label %253

253:                                              ; preds = %231
  %254 = bitcast %struct.AVFifoBuffer* %244 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = sub i64 %255, %252
  %257 = getelementptr inbounds i8, i8* %248, i64 %256
  br label %258

258:                                              ; preds = %253, %231
  %259 = phi i8* [ %257, %253 ], [ %248, %231 ]
  %260 = sext i32 %243 to i64
  %261 = ptrtoint i8* %259 to i64
  %262 = sub i64 %252, %261
  %263 = icmp slt i64 %262, %260
  %264 = select i1 %263, i64 %262, i64 %260
  %265 = trunc i64 %264 to i32
  %266 = call fastcc i32 @find_headers_search(%struct.FLACParseContext* %11, i8* %259, i32 %265, i32 %238) #5
  %267 = add nsw i32 %265, -1
  %268 = add nsw i32 %267, %238
  %269 = icmp eq i32 %268, %241
  br i1 %269, label %315, label %270

270:                                              ; preds = %258
  %271 = sext i32 %267 to i64
  %272 = getelementptr inbounds i8, i8* %259, i64 %271
  %273 = load i8, i8* %272, align 1
  %274 = add i32 %238, %265
  %275 = add i32 %240, -14
  %276 = sub i32 %275, %274
  %277 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %278 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %277, i64 0, i32 1
  %279 = load i8*, i8** %278, align 8
  %280 = sext i32 %274 to i64
  %281 = getelementptr inbounds i8, i8* %279, i64 %280
  %282 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %277, i64 0, i32 3
  %283 = load i8*, i8** %282, align 8
  %284 = icmp ult i8* %281, %283
  %285 = ptrtoint i8* %283 to i64
  br i1 %284, label %291, label %286

286:                                              ; preds = %270
  %287 = bitcast %struct.AVFifoBuffer* %277 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = sub i64 %288, %285
  %290 = getelementptr inbounds i8, i8* %281, i64 %289
  br label %291

291:                                              ; preds = %286, %270
  %292 = phi i8* [ %290, %286 ], [ %281, %270 ]
  %293 = sext i32 %276 to i64
  %294 = ptrtoint i8* %292 to i64
  %295 = sub i64 %285, %294
  %296 = icmp slt i64 %295, %293
  %297 = select i1 %296, i64 %295, i64 %293
  %298 = trunc i64 %297 to i32
  %299 = load i8, i8* %292, align 1
  %300 = zext i8 %299 to i16
  %301 = shl nuw i16 %300, 8
  %302 = zext i8 %273 to i16
  %303 = and i16 %301, -512
  %304 = or i16 %303, %302
  %305 = icmp eq i16 %304, -1793
  br i1 %305, label %306, label %310

306:                                              ; preds = %291
  %307 = call fastcc i32 @find_headers_search_validate(%struct.FLACParseContext* %11, i32 %268) #5
  %308 = icmp sgt i32 %266, %307
  %309 = select i1 %308, i32 %266, i32 %307
  br label %310

310:                                              ; preds = %306, %291
  %311 = phi i32 [ %309, %306 ], [ %266, %291 ]
  %312 = call fastcc i32 @find_headers_search(%struct.FLACParseContext* %11, i8* %292, i32 %298, i32 %274) #5
  %313 = icmp sgt i32 %311, %312
  %314 = select i1 %313, i32 %311, i32 %312
  br label %315

315:                                              ; preds = %310, %258
  %316 = phi i32 [ %314, %310 ], [ %266, %258 ]
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %328

318:                                              ; preds = %315
  %319 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %164, align 8
  %320 = icmp eq %struct.FLACHeaderMarker* %319, null
  br i1 %320, label %332, label %321

321:                                              ; preds = %318, %321
  %322 = phi %struct.FLACHeaderMarker* [ %326, %321 ], [ %319, %318 ]
  %323 = phi i32 [ %324, %321 ], [ 0, %318 ]
  %324 = add nuw nsw i32 %323, 1
  %325 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %322, i64 0, i32 4
  %326 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %325, align 8
  %327 = icmp eq %struct.FLACHeaderMarker* %326, null
  br i1 %327, label %332, label %321

328:                                              ; preds = %315
  %329 = icmp slt i32 %316, 0
  br i1 %329, label %330, label %332

330:                                              ; preds = %328
  %331 = bitcast %struct.AVCodecContext* %1 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %331, i32 16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0)) #5
  br label %522

332:                                              ; preds = %321, %318, %328
  %333 = phi i32 [ %316, %328 ], [ 0, %318 ], [ %324, %321 ]
  store i32 %333, i32* %159, align 4
  %334 = load i32, i32* %156, align 8
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %333, 10
  %337 = and i1 %336, %335
  br i1 %337, label %338, label %340

338:                                              ; preds = %332
  %339 = icmp ult i8* %190, %158
  br i1 %339, label %397, label %522

340:                                              ; preds = %332
  br i1 %335, label %341, label %344

341:                                              ; preds = %340
  %342 = load i32, i32* %163, align 8
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %369, label %344

344:                                              ; preds = %341, %340
  %345 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %164, align 8
  %346 = icmp eq %struct.FLACHeaderMarker* %345, null
  br i1 %346, label %369, label %350

347:                                              ; preds = %350
  %348 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %164, align 8
  %349 = icmp eq %struct.FLACHeaderMarker* %348, null
  br i1 %349, label %369, label %356

350:                                              ; preds = %344, %350
  %351 = phi %struct.FLACHeaderMarker* [ %354, %350 ], [ %345, %344 ]
  %352 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %351, i64 0, i32 2
  store i32 -100000, i32* %352, align 4
  %353 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %351, i64 0, i32 4
  %354 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %353, align 8
  %355 = icmp eq %struct.FLACHeaderMarker* %354, null
  br i1 %355, label %347, label %350

356:                                              ; preds = %347, %364
  %357 = phi %struct.FLACHeaderMarker* [ %367, %364 ], [ %348, %347 ]
  %358 = phi i32 [ %365, %364 ], [ 0, %347 ]
  %359 = call fastcc i32 @score_header(%struct.FLACParseContext* %11, %struct.FLACHeaderMarker* nonnull %357) #5
  %360 = icmp sgt i32 %359, %358
  br i1 %360, label %361, label %364

361:                                              ; preds = %356
  store %struct.FLACHeaderMarker* %357, %struct.FLACHeaderMarker** %71, align 8
  %362 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %357, i64 0, i32 2
  %363 = load i32, i32* %362, align 4
  br label %364

364:                                              ; preds = %361, %356
  %365 = phi i32 [ %363, %361 ], [ %358, %356 ]
  %366 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %357, i64 0, i32 4
  %367 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %366, align 8
  %368 = icmp eq %struct.FLACHeaderMarker* %367, null
  br i1 %368, label %369, label %356

369:                                              ; preds = %364, %347, %344, %341
  %370 = load i32, i32* %156, align 8
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %169, label %372

372:                                              ; preds = %369
  %373 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %374 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %373, i64 0, i32 2
  %375 = load i8*, i8** %374, align 8
  %376 = bitcast %struct.AVFifoBuffer* %373 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = ptrtoint i8* %375 to i64
  %379 = sub i64 %378, %377
  %380 = icmp slt i64 %379, 16
  %381 = getelementptr inbounds i8, i8* %375, i64 -16
  store i8* %381, i8** %374, align 8
  %382 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %383 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %382, i64 0, i32 5
  %384 = load i32, i32* %383, align 4
  %385 = add i32 %384, -16
  store i32 %385, i32* %383, align 4
  br i1 %380, label %386, label %397

386:                                              ; preds = %372
  %387 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %388 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %387, i64 0, i32 3
  %389 = bitcast i8** %388 to i64*
  %390 = load i64, i64* %389, align 8
  %391 = bitcast %struct.AVFifoBuffer* %387 to i64*
  %392 = load i64, i64* %391, align 8
  %393 = sub i64 %390, %392
  %394 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %387, i64 0, i32 2
  %395 = load i8*, i8** %394, align 8
  %396 = getelementptr inbounds i8, i8* %395, i64 %393
  store i8* %396, i8** %394, align 8
  br label %397

397:                                              ; preds = %386, %372, %338
  %398 = phi i8* [ %190, %338 ], [ null, %372 ], [ null, %386 ]
  br label %165

399:                                              ; preds = %171, %173, %176
  %400 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %164, align 8
  %401 = icmp eq %struct.FLACHeaderMarker* %400, null
  %402 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %71, align 8
  %403 = icmp ne %struct.FLACHeaderMarker* %402, null
  br i1 %401, label %421, label %404

404:                                              ; preds = %399, %415
  %405 = phi %struct.FLACHeaderMarker* [ %416, %415 ], [ %402, %399 ]
  %406 = phi i1 [ %420, %415 ], [ %403, %399 ]
  %407 = phi %struct.FLACHeaderMarker* [ %418, %415 ], [ %400, %399 ]
  br i1 %406, label %408, label %414

408:                                              ; preds = %404
  %409 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %407, i64 0, i32 2
  %410 = load i32, i32* %409, align 4
  %411 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %405, i64 0, i32 2
  %412 = load i32, i32* %411, align 4
  %413 = icmp sgt i32 %410, %412
  br i1 %413, label %414, label %415

414:                                              ; preds = %408, %404
  store %struct.FLACHeaderMarker* %407, %struct.FLACHeaderMarker** %71, align 8
  br label %415

415:                                              ; preds = %408, %414
  %416 = phi %struct.FLACHeaderMarker* [ %405, %408 ], [ %407, %414 ]
  %417 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %407, i64 0, i32 4
  %418 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %417, align 8
  %419 = icmp eq %struct.FLACHeaderMarker* %418, null
  %420 = icmp ne %struct.FLACHeaderMarker* %416, null
  br i1 %419, label %421, label %404

421:                                              ; preds = %415, %399
  %422 = phi %struct.FLACHeaderMarker* [ %402, %399 ], [ %416, %415 ]
  %423 = phi i1 [ %403, %399 ], [ %420, %415 ]
  br i1 %423, label %424, label %522

424:                                              ; preds = %421
  %425 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %422, i64 0, i32 2
  %426 = load i32, i32* %425, align 4
  %427 = icmp slt i32 %426, 1
  br i1 %427, label %428, label %436

428:                                              ; preds = %424
  %429 = icmp eq i8* %170, %4
  %430 = and i1 %155, %429
  br i1 %430, label %431, label %434

431:                                              ; preds = %428
  %432 = load i32, i32* %159, align 4
  %433 = icmp slt i32 %432, 10
  br i1 %433, label %434, label %436

434:                                              ; preds = %431, %428
  %435 = phi i8* [ %4, %431 ], [ %170, %428 ]
  store %struct.FLACHeaderMarker* null, %struct.FLACHeaderMarker** %71, align 8
  br label %522

436:                                              ; preds = %431, %424
  %437 = icmp eq %struct.FLACHeaderMarker* %422, null
  br i1 %437, label %522, label %438

438:                                              ; preds = %436
  store i32 1, i32* %65, align 8
  %439 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %422, i64 0, i32 0
  %440 = load i32, i32* %439, align 8
  %441 = icmp sgt i32 %440, 0
  br i1 %441, label %442, label %519

442:                                              ; preds = %438
  %443 = bitcast %struct.AVCodecContext* %1 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %443, i32 48, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i32 %440) #5
  %444 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 27
  store i32 0, i32* %444, align 8
  %445 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %71, align 8
  %446 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %445, i64 0, i32 0
  %447 = load i32, i32* %446, align 8
  store i32 %447, i32* %3, align 4
  %448 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 9
  %449 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %11, i64 0, i32 10
  %450 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %451 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %450, i64 0, i32 1
  %452 = load i8*, i8** %451, align 8
  %453 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %450, i64 0, i32 3
  %454 = load i8*, i8** %453, align 8
  %455 = icmp ult i8* %452, %454
  %456 = ptrtoint i8* %454 to i64
  br i1 %455, label %462, label %457

457:                                              ; preds = %442
  %458 = bitcast %struct.AVFifoBuffer* %450 to i64*
  %459 = load i64, i64* %458, align 8
  %460 = sub i64 %459, %456
  %461 = getelementptr inbounds i8, i8* %452, i64 %460
  br label %462

462:                                              ; preds = %457, %442
  %463 = phi i8* [ %461, %457 ], [ %452, %442 ]
  %464 = bitcast i8** %453 to i64*
  %465 = ptrtoint i8* %463 to i64
  %466 = sub i64 %456, %465
  %467 = sext i32 %447 to i64
  %468 = icmp slt i64 %466, %467
  br i1 %468, label %469, label %502

469:                                              ; preds = %462
  %470 = load i8*, i8** %448, align 8
  %471 = call i8* @av_fast_realloc(i8* %470, i32* %449, i64 %467) #5
  %472 = icmp eq i8* %471, null
  br i1 %472, label %473, label %476

473:                                              ; preds = %469
  %474 = bitcast %struct.AVCodecContext** %64 to i8**
  %475 = load i8*, i8** %474, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %475, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12, i64 0, i64 0), i32 %447) #5
  br label %502

476:                                              ; preds = %469
  store i8* %471, i8** %448, align 8
  %477 = bitcast %struct.AVFifoBuffer* %450 to i64*
  %478 = load i64, i64* %464, align 8
  br label %479

479:                                              ; preds = %479, %476
  %480 = phi i64 [ %478, %476 ], [ %493, %479 ]
  %481 = phi i32 [ %447, %476 ], [ %498, %479 ]
  %482 = phi i8* [ %463, %476 ], [ %497, %479 ]
  %483 = phi i8* [ %471, %476 ], [ %492, %479 ]
  %484 = ptrtoint i8* %482 to i64
  %485 = sub i64 %480, %484
  %486 = sext i32 %481 to i64
  %487 = icmp sgt i64 %485, %486
  %488 = select i1 %487, i64 %486, i64 %485
  %489 = trunc i64 %488 to i32
  %490 = shl i64 %488, 32
  %491 = ashr exact i64 %490, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %483, i8* align 1 %482, i64 %491, i1 false) #5
  %492 = getelementptr inbounds i8, i8* %483, i64 %491
  %493 = load i64, i64* %464, align 8
  %494 = load i64, i64* %477, align 8
  %495 = sub i64 %494, %493
  %496 = add i64 %495, %491
  %497 = getelementptr inbounds i8, i8* %482, i64 %496
  %498 = sub nsw i32 %481, %489
  %499 = icmp sgt i32 %498, 0
  br i1 %499, label %479, label %500

500:                                              ; preds = %479
  %501 = load i8*, i8** %448, align 8
  br label %502

502:                                              ; preds = %462, %473, %500
  %503 = phi i8* [ %501, %500 ], [ null, %473 ], [ %463, %462 ]
  store i8* %503, i8** %2, align 8
  br i1 %155, label %504, label %508

504:                                              ; preds = %502
  %505 = ptrtoint i8* %170 to i64
  %506 = ptrtoint i8* %4 to i64
  %507 = sub i64 %505, %506
  br label %516

508:                                              ; preds = %502
  %509 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %71, align 8
  %510 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %509, i64 0, i32 0
  %511 = load i32, i32* %510, align 8
  %512 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %161, align 8
  %513 = call i32 @av_fifo_size(%struct.AVFifoBuffer* %512) #5
  %514 = sub nsw i32 %511, %513
  %515 = sext i32 %514 to i64
  br label %516

516:                                              ; preds = %508, %504
  %517 = phi i64 [ %507, %504 ], [ %515, %508 ]
  %518 = trunc i64 %517 to i32
  br label %529

519:                                              ; preds = %438
  br i1 %155, label %522, label %520

520:                                              ; preds = %519
  %521 = call fastcc i32 @get_best_header(%struct.FLACParseContext* %11, i8** %2, i32* %3)
  br label %529

522:                                              ; preds = %194, %338, %421, %434, %330, %216, %436, %519
  %523 = phi i8* [ %170, %519 ], [ %170, %436 ], [ %190, %216 ], [ %190, %330 ], [ %435, %434 ], [ %170, %421 ], [ %190, %338 ], [ %190, %194 ]
  store i8* null, i8** %2, align 8
  store i32 0, i32* %3, align 4
  %524 = ptrtoint i8* %523 to i64
  %525 = ptrtoint i8* %4 to i64
  %526 = sub i64 %524, %525
  %527 = trunc i64 %526 to i32
  %528 = select i1 %155, i32 %527, i32 0
  br label %529

529:                                              ; preds = %133, %522, %520, %516, %68, %62
  %530 = phi i32 [ %5, %62 ], [ %69, %68 ], [ %518, %516 ], [ %521, %520 ], [ %134, %133 ], [ %528, %522 ]
  ret i32 %530
}

; Function Attrs: nounwind ssp uwtable
define internal void @flac_parse_close(%struct.AVCodecParserContext* nocapture readonly) #1 {
  %2 = bitcast %struct.AVCodecParserContext* %0 to %struct.FLACParseContext**
  %3 = load %struct.FLACParseContext*, %struct.FLACParseContext** %2, align 8
  %4 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %3, i64 0, i32 2
  %5 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %4, align 8
  %6 = icmp eq %struct.FLACHeaderMarker* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1, %7
  %8 = phi %struct.FLACHeaderMarker* [ %11, %7 ], [ %5, %1 ]
  %9 = bitcast %struct.FLACHeaderMarker* %8 to i8*
  %10 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %8, i64 0, i32 4
  %11 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %10, align 8
  tail call void @av_free(i8* %9) #5
  %12 = icmp eq %struct.FLACHeaderMarker* %11, null
  br i1 %12, label %13, label %7

13:                                               ; preds = %7, %1
  store %struct.FLACHeaderMarker* null, %struct.FLACHeaderMarker** %4, align 8
  %14 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %3, i64 0, i32 7
  tail call void @av_fifo_freep(%struct.AVFifoBuffer** %14) #5
  %15 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %3, i64 0, i32 9
  %16 = bitcast i8** %15 to i8*
  tail call void @av_freep(i8* %16) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %struct.AVFifoBuffer* @av_fifo_alloc_array(i64, i64) local_unnamed_addr #3

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @get_best_header(%struct.FLACParseContext*, i8** nocapture, i32* nocapture) unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 3
  %5 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %4, align 8
  %6 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %5, i64 0, i32 5
  %7 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %6, align 8
  %8 = icmp ne %struct.FLACHeaderMarker* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 7
  %11 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %10, align 8
  %12 = tail call i32 @av_fifo_size(%struct.AVFifoBuffer* %11) #5
  %13 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = sub nsw i32 %12, %14
  store i32 %15, i32* %2, align 4
  br label %23

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %7, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %5, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = sub nsw i32 %18, %20
  store i32 %21, i32* %2, align 4
  %22 = tail call fastcc i32 @check_header_mismatch(%struct.FLACParseContext* %0, %struct.FLACHeaderMarker* %5, %struct.FLACHeaderMarker* nonnull %7, i32 0)
  br label %23

23:                                               ; preds = %16, %9
  %24 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %5, i64 0, i32 3
  %25 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %5, i64 0, i32 3, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 1
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %27, align 8
  %29 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i64 0, i32 83
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %26, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %23
  %33 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i64 0, i32 89
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %32, %23
  store i32 %26, i32* %29, align 4
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %27, align 8
  tail call void @ff_flac_set_channel_layout(%struct.AVCodecContext* %37) #5
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %27, align 8
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi %struct.AVCodecContext* [ %28, %32 ], [ %38, %36 ]
  %41 = getelementptr inbounds %struct.FLACFrameInfo, %struct.FLACFrameInfo* %24, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %40, i64 0, i32 82
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %5, i64 0, i32 3, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 0
  %47 = load %struct.AVCodecParserContext*, %struct.AVCodecParserContext** %46, align 8
  %48 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %47, i64 0, i32 27
  store i32 %45, i32* %48, align 8
  %49 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %5, i64 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = load i32, i32* %2, align 4
  %52 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 9
  %53 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 10
  %54 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 7
  %55 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %54, align 8
  %56 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %55, i64 0, i32 1
  %57 = load i8*, i8** %56, align 8
  %58 = sext i32 %50 to i64
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  %60 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %55, i64 0, i32 3
  %61 = load i8*, i8** %60, align 8
  %62 = icmp ult i8* %59, %61
  %63 = ptrtoint i8* %61 to i64
  br i1 %62, label %69, label %64

64:                                               ; preds = %39
  %65 = bitcast %struct.AVFifoBuffer* %55 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %63
  %68 = getelementptr inbounds i8, i8* %59, i64 %67
  br label %69

69:                                               ; preds = %64, %39
  %70 = phi i8* [ %68, %64 ], [ %59, %39 ]
  %71 = bitcast i8** %60 to i64*
  %72 = ptrtoint i8* %70 to i64
  %73 = sub i64 %63, %72
  %74 = sext i32 %51 to i64
  %75 = icmp slt i64 %73, %74
  br i1 %75, label %76, label %109

76:                                               ; preds = %69
  %77 = load i8*, i8** %52, align 8
  %78 = tail call i8* @av_fast_realloc(i8* %77, i32* %53, i64 %74) #5
  %79 = icmp eq i8* %78, null
  br i1 %79, label %80, label %83

80:                                               ; preds = %76
  %81 = bitcast %struct.AVCodecContext** %27 to i8**
  %82 = load i8*, i8** %81, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %82, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12, i64 0, i64 0), i32 %51) #5
  br label %109

83:                                               ; preds = %76
  store i8* %78, i8** %52, align 8
  %84 = bitcast %struct.AVFifoBuffer* %55 to i64*
  %85 = load i64, i64* %71, align 8
  br label %86

86:                                               ; preds = %86, %83
  %87 = phi i64 [ %85, %83 ], [ %100, %86 ]
  %88 = phi i32 [ %51, %83 ], [ %105, %86 ]
  %89 = phi i8* [ %70, %83 ], [ %104, %86 ]
  %90 = phi i8* [ %78, %83 ], [ %99, %86 ]
  %91 = ptrtoint i8* %89 to i64
  %92 = sub i64 %87, %91
  %93 = sext i32 %88 to i64
  %94 = icmp sgt i64 %92, %93
  %95 = select i1 %94, i64 %93, i64 %92
  %96 = trunc i64 %95 to i32
  %97 = shl i64 %95, 32
  %98 = ashr exact i64 %97, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %90, i8* align 1 %89, i64 %98, i1 false) #5
  %99 = getelementptr inbounds i8, i8* %90, i64 %98
  %100 = load i64, i64* %71, align 8
  %101 = load i64, i64* %84, align 8
  %102 = sub i64 %101, %100
  %103 = add i64 %102, %98
  %104 = getelementptr inbounds i8, i8* %89, i64 %103
  %105 = sub nsw i32 %88, %96
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %86, label %107

107:                                              ; preds = %86
  %108 = load i8*, i8** %52, align 8
  br label %109

109:                                              ; preds = %69, %80, %107
  %110 = phi i8* [ %108, %107 ], [ null, %80 ], [ %70, %69 ]
  store i8* %110, i8** %1, align 8
  %111 = load %struct.AVCodecParserContext*, %struct.AVCodecParserContext** %46, align 8
  %112 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %111, i64 0, i32 16
  %113 = load i32, i32* %112, align 8
  %114 = and i32 %113, 4096
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %134, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %5, i64 0, i32 3, i32 6
  %118 = load i32, i32* %117, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %5, i64 0, i32 3, i32 5
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %111, i64 0, i32 7
  store i64 %122, i64* %123, align 8
  br label %134

124:                                              ; preds = %116
  %125 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %6, align 8
  %126 = icmp eq %struct.FLACHeaderMarker* %125, null
  br i1 %126, label %134, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %5, i64 0, i32 3, i32 5
  %129 = load i64, i64* %128, align 8
  %130 = load i32, i32* %44, align 4
  %131 = sext i32 %130 to i64
  %132 = mul nsw i64 %129, %131
  %133 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %111, i64 0, i32 7
  store i64 %132, i64* %133, align 8
  br label %134

134:                                              ; preds = %124, %109, %120, %127
  %135 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 6
  store i32 0, i32* %135, align 8
  %136 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 12
  store i32 1, i32* %136, align 8
  %137 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 11
  %138 = bitcast %struct.FLACFrameInfo* %137 to i8*
  %139 = bitcast %struct.FLACFrameInfo* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 40, i1 false)
  br i1 %8, label %140, label %146

140:                                              ; preds = %134
  %141 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %7, i64 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %54, align 8
  %144 = tail call i32 @av_fifo_size(%struct.AVFifoBuffer* %143) #5
  %145 = sub nsw i32 %142, %144
  br label %146

146:                                              ; preds = %134, %140
  %147 = phi i32 [ %145, %140 ], [ 0, %134 ]
  ret i32 %147
}

declare void @av_free(i8*) local_unnamed_addr #3

declare void @av_fifo_drain(%struct.AVFifoBuffer*, i32) local_unnamed_addr #3

declare void @av_freep(i8*) local_unnamed_addr #3

declare i32 @av_fifo_space(%struct.AVFifoBuffer*) local_unnamed_addr #3

declare i32 @av_fifo_size(%struct.AVFifoBuffer*) local_unnamed_addr #3

declare i32 @av_fifo_realloc2(%struct.AVFifoBuffer*, i32) local_unnamed_addr #3

declare i32 @av_fifo_generic_write(%struct.AVFifoBuffer*, i8*, i32, i32 (i8*, i8*, i32)*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @ff_flac_decode_frame_header(%struct.AVCodecContext*, %struct.GetBitContext*, %struct.FLACFrameInfo*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @check_header_mismatch(%struct.FLACParseContext* nocapture readonly, %struct.FLACHeaderMarker* readonly, %struct.FLACHeaderMarker* readonly, i32) unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %1, i64 0, i32 3
  %6 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %2, i64 0, i32 3
  %7 = tail call fastcc i32 @check_header_fi_mismatch(%struct.FLACParseContext* %0, %struct.FLACFrameInfo* %5, %struct.FLACFrameInfo* %6, i32 %3)
  %8 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %2, i64 0, i32 3, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %1, i64 0, i32 3, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = sub nsw i64 %9, %11
  %13 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %1, i64 0, i32 3, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = icmp eq i64 %12, %15
  %17 = add nsw i64 %11, 1
  %18 = icmp eq i64 %9, %17
  %19 = or i1 %18, %16
  br i1 %19, label %58, label %20

20:                                               ; preds = %4
  %21 = icmp eq %struct.FLACHeaderMarker* %1, %2
  br i1 %21, label %45, label %22

22:                                               ; preds = %20, %39
  %23 = phi i64 [ %41, %39 ], [ %11, %20 ]
  %24 = phi i64 [ %40, %39 ], [ %11, %20 ]
  %25 = phi %struct.FLACHeaderMarker* [ %43, %39 ], [ %1, %20 ]
  %26 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %25, i64 0, i32 1, i64 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 50
  br i1 %28, label %33, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %25, i64 0, i32 1, i64 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, 50
  br i1 %32, label %33, label %187

33:                                               ; preds = %191, %187, %29, %22
  %34 = add nsw i64 %24, 1
  %35 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %25, i64 0, i32 3, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = add nsw i64 %23, %37
  br label %39

39:                                               ; preds = %191, %33
  %40 = phi i64 [ %34, %33 ], [ %24, %191 ]
  %41 = phi i64 [ %38, %33 ], [ %23, %191 ]
  %42 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %25, i64 0, i32 4
  %43 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %42, align 8
  %44 = icmp eq %struct.FLACHeaderMarker* %43, %2
  br i1 %44, label %45, label %22

45:                                               ; preds = %39, %20
  %46 = phi i64 [ %11, %20 ], [ %40, %39 ]
  %47 = phi i64 [ %11, %20 ], [ %41, %39 ]
  %48 = icmp eq i64 %46, %9
  %49 = icmp eq i64 %47, %9
  %50 = or i1 %48, %49
  %51 = icmp eq i32 %7, 0
  %52 = and i1 %51, %50
  %53 = add nsw i32 %7, 7
  %54 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 1
  %55 = bitcast %struct.AVCodecContext** %54 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = add nsw i32 %3, 24
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %56, i32 %57, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0)) #5
  br label %58

58:                                               ; preds = %4, %45
  %59 = phi i32 [ %53, %45 ], [ %7, %4 ]
  %60 = phi i1 [ %52, %45 ], [ false, %4 ]
  %61 = icmp eq i32 %59, 0
  %62 = or i1 %61, %60
  br i1 %62, label %185, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %1, i64 0, i32 4
  %65 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %64, align 8
  %66 = icmp eq %struct.FLACHeaderMarker* %65, %2
  br i1 %66, label %71, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %65, i64 0, i32 4
  %69 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %68, align 8
  %70 = icmp eq %struct.FLACHeaderMarker* %69, %2
  br i1 %70, label %71, label %195

71:                                               ; preds = %199, %67, %195, %63
  %72 = phi i32 [ 0, %63 ], [ 1, %67 ], [ 2, %195 ], [ %203, %199 ]
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %1, i64 0, i32 1, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, 50
  %77 = icmp eq i32 %75, 100000
  %78 = or i1 %76, %77
  br i1 %78, label %79, label %173

79:                                               ; preds = %71
  %80 = icmp eq i32 %72, 0
  br i1 %80, label %100, label %81

81:                                               ; preds = %79
  %82 = add nsw i32 %72, -1
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %1, i64 0, i32 1, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = icmp sgt i32 %85, 49
  br i1 %86, label %87, label %94

87:                                               ; preds = %81
  %88 = icmp eq %struct.FLACHeaderMarker* %65, %2
  br i1 %88, label %100, label %89

89:                                               ; preds = %87, %89
  %90 = phi %struct.FLACHeaderMarker* [ %92, %89 ], [ %65, %87 ]
  %91 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %90, i64 0, i32 4
  %92 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %91, align 8
  %93 = icmp eq %struct.FLACHeaderMarker* %92, %2
  br i1 %93, label %100, label %89

94:                                               ; preds = %81
  %95 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %65, i64 0, i32 1, i64 %83
  %96 = load i32, i32* %95, align 4
  %97 = icmp sgt i32 %96, 49
  %98 = zext i1 %97 to i32
  %99 = select i1 %97, %struct.FLACHeaderMarker* %65, %struct.FLACHeaderMarker* %2
  br label %100

100:                                              ; preds = %89, %87, %79, %94
  %101 = phi i32 [ %98, %94 ], [ 0, %79 ], [ 1, %87 ], [ 1, %89 ]
  %102 = phi %struct.FLACHeaderMarker* [ %1, %94 ], [ %1, %79 ], [ %1, %87 ], [ %90, %89 ]
  %103 = phi %struct.FLACHeaderMarker* [ %99, %94 ], [ %2, %79 ], [ %2, %87 ], [ %2, %89 ]
  %104 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %102, i64 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = sub nsw i32 %105, %107
  %109 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 7
  %110 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %109, align 8
  %111 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %110, i64 0, i32 1
  %112 = load i8*, i8** %111, align 8
  %113 = sext i32 %107 to i64
  %114 = getelementptr inbounds i8, i8* %112, i64 %113
  %115 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %110, i64 0, i32 3
  %116 = load i8*, i8** %115, align 8
  %117 = icmp ult i8* %114, %116
  %118 = ptrtoint i8* %116 to i64
  br i1 %117, label %124, label %119

119:                                              ; preds = %100
  %120 = bitcast %struct.AVFifoBuffer* %110 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = sub i64 %121, %118
  %123 = getelementptr inbounds i8, i8* %114, i64 %122
  br label %124

124:                                              ; preds = %100, %119
  %125 = phi i8* [ %123, %119 ], [ %114, %100 ]
  %126 = sext i32 %108 to i64
  %127 = ptrtoint i8* %125 to i64
  %128 = sub i64 %118, %127
  %129 = icmp slt i64 %128, %126
  %130 = select i1 %129, i64 %128, i64 %126
  %131 = trunc i64 %130 to i32
  %132 = tail call i32* @av_crc_get_table(i32 1) #5
  %133 = shl i64 %130, 32
  %134 = ashr exact i64 %133, 32
  %135 = tail call i32 @av_crc(i32* %132, i32 0, i8* %125, i64 %134) #6
  %136 = load i32, i32* %104, align 8
  %137 = load i32, i32* %106, align 8
  %138 = sub nsw i32 %136, %137
  %139 = sub i32 %138, %131
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %168, label %141

141:                                              ; preds = %124
  %142 = sub nsw i32 %136, %139
  %143 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %109, align 8
  %144 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %143, i64 0, i32 1
  %145 = load i8*, i8** %144, align 8
  %146 = sext i32 %142 to i64
  %147 = getelementptr inbounds i8, i8* %145, i64 %146
  %148 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %143, i64 0, i32 3
  %149 = load i8*, i8** %148, align 8
  %150 = icmp ult i8* %147, %149
  %151 = ptrtoint i8* %149 to i64
  br i1 %150, label %157, label %152

152:                                              ; preds = %141
  %153 = bitcast %struct.AVFifoBuffer* %143 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = sub i64 %154, %151
  %156 = getelementptr inbounds i8, i8* %147, i64 %155
  br label %157

157:                                              ; preds = %141, %152
  %158 = phi i8* [ %156, %152 ], [ %147, %141 ]
  %159 = sext i32 %139 to i64
  %160 = ptrtoint i8* %158 to i64
  %161 = sub i64 %151, %160
  %162 = icmp slt i64 %161, %159
  %163 = select i1 %162, i64 %161, i64 %159
  %164 = tail call i32* @av_crc_get_table(i32 1) #5
  %165 = shl i64 %163, 32
  %166 = ashr exact i64 %165, 32
  %167 = tail call i32 @av_crc(i32* %164, i32 %135, i8* %158, i64 %166) #6
  br label %168

168:                                              ; preds = %157, %124
  %169 = phi i32 [ %167, %157 ], [ %135, %124 ]
  %170 = icmp eq i32 %169, 0
  %171 = icmp eq i32 %101, 0
  %172 = xor i1 %171, %170
  br i1 %172, label %173, label %185

173:                                              ; preds = %71, %168
  %174 = add nsw i32 %59, 50
  %175 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 1
  %176 = bitcast %struct.AVCodecContext** %175 to i8**
  %177 = load i8*, i8** %176, align 8
  %178 = add nsw i32 %3, 24
  %179 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %1, i64 0, i32 0
  %180 = load i32, i32* %179, align 8
  %181 = load i64, i64* %10, align 8
  %182 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %2, i64 0, i32 0
  %183 = load i32, i32* %182, align 8
  %184 = load i64, i64* %8, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %177, i32 %178, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.6, i64 0, i64 0), i32 %180, i64 %181, i32 %183, i64 %184) #5
  br label %185

185:                                              ; preds = %168, %173, %58
  %186 = phi i32 [ %59, %58 ], [ %174, %173 ], [ %59, %168 ]
  ret i32 %186

187:                                              ; preds = %29
  %188 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %25, i64 0, i32 1, i64 2
  %189 = load i32, i32* %188, align 4
  %190 = icmp slt i32 %189, 50
  br i1 %190, label %33, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %25, i64 0, i32 1, i64 3
  %193 = load i32, i32* %192, align 4
  %194 = icmp slt i32 %193, 50
  br i1 %194, label %33, label %39

195:                                              ; preds = %67
  %196 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %69, i64 0, i32 4
  %197 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %196, align 8
  %198 = icmp eq %struct.FLACHeaderMarker* %197, %2
  br i1 %198, label %71, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %197, i64 0, i32 4
  %201 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %200, align 8
  %202 = icmp eq %struct.FLACHeaderMarker* %201, %2
  %203 = select i1 %202, i32 3, i32 4
  br label %71
}

declare void @ff_flac_set_channel_layout(%struct.AVCodecContext*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @check_header_fi_mismatch(%struct.FLACParseContext* nocapture readonly, %struct.FLACFrameInfo* nocapture readonly, %struct.FLACFrameInfo* nocapture readonly, i32) unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.FLACFrameInfo, %struct.FLACFrameInfo* %2, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.FLACFrameInfo, %struct.FLACFrameInfo* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 1
  %12 = bitcast %struct.AVCodecContext** %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = add nsw i32 %3, 24
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 %14, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0)) #5
  br label %15

15:                                               ; preds = %4, %10
  %16 = phi i32 [ 7, %10 ], [ 0, %4 ]
  %17 = getelementptr inbounds %struct.FLACFrameInfo, %struct.FLACFrameInfo* %2, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %struct.FLACFrameInfo, %struct.FLACFrameInfo* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %28, label %22

22:                                               ; preds = %15
  %23 = add nuw nsw i32 %16, 7
  %24 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 1
  %25 = bitcast %struct.AVCodecContext** %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add nsw i32 %3, 24
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 %27, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8, i64 0, i64 0)) #5
  br label %28

28:                                               ; preds = %15, %22
  %29 = phi i32 [ %23, %22 ], [ %16, %15 ]
  %30 = getelementptr inbounds %struct.FLACFrameInfo, %struct.FLACFrameInfo* %2, i64 0, i32 6
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %struct.FLACFrameInfo, %struct.FLACFrameInfo* %1, i64 0, i32 6
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %41, label %35

35:                                               ; preds = %28
  %36 = add nuw nsw i32 %29, 10
  %37 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 1
  %38 = bitcast %struct.AVCodecContext** %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = add nsw i32 %3, 24
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %39, i32 %40, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0)) #5
  br label %41

41:                                               ; preds = %28, %35
  %42 = phi i32 [ %36, %35 ], [ %29, %28 ]
  %43 = getelementptr inbounds %struct.FLACFrameInfo, %struct.FLACFrameInfo* %2, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.FLACFrameInfo, %struct.FLACFrameInfo* %1, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %54, label %48

48:                                               ; preds = %41
  %49 = add nuw nsw i32 %42, 7
  %50 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 1
  %51 = bitcast %struct.AVCodecContext** %50 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = add nsw i32 %3, 24
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %52, i32 %53, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0)) #5
  br label %54

54:                                               ; preds = %41, %48
  %55 = phi i32 [ %49, %48 ], [ %42, %41 ]
  ret i32 %55
}

; Function Attrs: nounwind readonly
declare i32 @av_crc(i32*, i32, i8*, i64) local_unnamed_addr #4

declare i32* @av_crc_get_table(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @find_headers_search(%struct.FLACParseContext*, i8* nocapture readonly, i32, i32) unnamed_addr #1 {
  %5 = add nsw i32 %2, -1
  %6 = srem i32 %5, 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %6 to i64
  br label %16

10:                                               ; preds = %30, %4
  %11 = phi i32 [ 0, %4 ], [ %6, %30 ]
  %12 = phi i32 [ 0, %4 ], [ %31, %30 ]
  %13 = icmp slt i32 %11, %5
  br i1 %13, label %14, label %65

14:                                               ; preds = %10
  %15 = zext i32 %11 to i64
  br label %34

16:                                               ; preds = %30, %8
  %17 = phi i64 [ 0, %8 ], [ %32, %30 ]
  %18 = phi i32 [ 0, %8 ], [ %31, %30 ]
  %19 = getelementptr inbounds i8, i8* %1, i64 %17
  %20 = bitcast i8* %19 to i16*
  %21 = load i16, i16* %20, align 1
  %22 = and i16 %21, -257
  %23 = icmp eq i16 %22, -1793
  br i1 %23, label %24, label %30

24:                                               ; preds = %16
  %25 = trunc i64 %17 to i32
  %26 = add nsw i32 %25, %3
  %27 = tail call fastcc i32 @find_headers_search_validate(%struct.FLACParseContext* %0, i32 %26)
  %28 = icmp sgt i32 %18, %27
  %29 = select i1 %28, i32 %18, i32 %27
  br label %30

30:                                               ; preds = %16, %24
  %31 = phi i32 [ %29, %24 ], [ %18, %16 ]
  %32 = add nuw nsw i64 %17, 1
  %33 = icmp eq i64 %32, %9
  br i1 %33, label %10, label %16

34:                                               ; preds = %14, %60
  %35 = phi i64 [ %15, %14 ], [ %62, %60 ]
  %36 = phi i32 [ %12, %14 ], [ %61, %60 ]
  %37 = getelementptr inbounds i8, i8* %1, i64 %35
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = sub i32 -16843010, %39
  %41 = and i32 %39, -2139062144
  %42 = and i32 %41, %40
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %34
  %45 = trunc i64 %35 to i32
  %46 = add nsw i32 %45, %3
  %47 = and i32 %39, 65279
  %48 = icmp eq i32 %47, 63743
  br i1 %48, label %49, label %53

49:                                               ; preds = %44
  %50 = tail call fastcc i32 @find_headers_search_validate(%struct.FLACParseContext* %0, i32 %46)
  %51 = icmp sgt i32 %36, %50
  %52 = select i1 %51, i32 %36, i32 %50
  br label %53

53:                                               ; preds = %44, %49
  %54 = phi i32 [ %52, %49 ], [ %36, %44 ]
  %55 = getelementptr inbounds i8, i8* %37, i64 1
  %56 = bitcast i8* %55 to i16*
  %57 = load i16, i16* %56, align 1
  %58 = and i16 %57, -257
  %59 = icmp eq i16 %58, -1793
  br i1 %59, label %67, label %72

60:                                               ; preds = %84, %91, %34
  %61 = phi i32 [ %36, %34 ], [ %95, %91 ], [ %85, %84 ]
  %62 = add nuw i64 %35, 4
  %63 = trunc i64 %62 to i32
  %64 = icmp sgt i32 %5, %63
  br i1 %64, label %34, label %65

65:                                               ; preds = %60, %10
  %66 = phi i32 [ %12, %10 ], [ %61, %60 ]
  ret i32 %66

67:                                               ; preds = %53
  %68 = add nsw i32 %46, 1
  %69 = tail call fastcc i32 @find_headers_search_validate(%struct.FLACParseContext* %0, i32 %68)
  %70 = icmp sgt i32 %54, %69
  %71 = select i1 %70, i32 %54, i32 %69
  br label %72

72:                                               ; preds = %67, %53
  %73 = phi i32 [ %71, %67 ], [ %54, %53 ]
  %74 = getelementptr inbounds i8, i8* %37, i64 2
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 1
  %77 = and i16 %76, -257
  %78 = icmp eq i16 %77, -1793
  br i1 %78, label %79, label %84

79:                                               ; preds = %72
  %80 = add nsw i32 %46, 2
  %81 = tail call fastcc i32 @find_headers_search_validate(%struct.FLACParseContext* %0, i32 %80)
  %82 = icmp sgt i32 %73, %81
  %83 = select i1 %82, i32 %73, i32 %81
  br label %84

84:                                               ; preds = %79, %72
  %85 = phi i32 [ %83, %79 ], [ %73, %72 ]
  %86 = getelementptr inbounds i8, i8* %37, i64 3
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 1
  %89 = and i16 %88, -257
  %90 = icmp eq i16 %89, -1793
  br i1 %90, label %91, label %60

91:                                               ; preds = %84
  %92 = add nsw i32 %46, 3
  %93 = tail call fastcc i32 @find_headers_search_validate(%struct.FLACParseContext* %0, i32 %92)
  %94 = icmp sgt i32 %85, %93
  %95 = select i1 %94, i32 %85, i32 %93
  br label %60
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @find_headers_search_validate(%struct.FLACParseContext*, i32) unnamed_addr #1 {
  %3 = alloca %struct.GetBitContext, align 8
  %4 = alloca %struct.FLACFrameInfo, align 8
  %5 = bitcast %struct.FLACFrameInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 40, i1 false)
  %6 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 9
  %7 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 10
  %8 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 7
  %9 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %8, align 8
  %10 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %9, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds i8, i8* %11, i64 %12
  %14 = getelementptr inbounds %struct.AVFifoBuffer, %struct.AVFifoBuffer* %9, i64 0, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ult i8* %13, %15
  %17 = ptrtoint i8* %15 to i64
  br i1 %16, label %23, label %18

18:                                               ; preds = %2
  %19 = bitcast %struct.AVFifoBuffer* %9 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %17
  %22 = getelementptr inbounds i8, i8* %13, i64 %21
  br label %23

23:                                               ; preds = %18, %2
  %24 = phi i8* [ %22, %18 ], [ %13, %2 ]
  %25 = bitcast i8** %14 to i64*
  %26 = ptrtoint i8* %24 to i64
  %27 = sub i64 %17, %26
  %28 = icmp slt i64 %27, 16
  br i1 %28, label %29, label %63

29:                                               ; preds = %23
  %30 = load i8*, i8** %6, align 8
  %31 = tail call i8* @av_fast_realloc(i8* %30, i32* %7, i64 16) #5
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 1
  %35 = bitcast %struct.AVCodecContext** %34 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12, i64 0, i64 0), i32 16) #5
  br label %63

37:                                               ; preds = %29
  store i8* %31, i8** %6, align 8
  %38 = bitcast %struct.AVFifoBuffer* %9 to i64*
  %39 = load i64, i64* %25, align 8
  br label %40

40:                                               ; preds = %40, %37
  %41 = phi i64 [ %39, %37 ], [ %54, %40 ]
  %42 = phi i32 [ 16, %37 ], [ %59, %40 ]
  %43 = phi i8* [ %24, %37 ], [ %58, %40 ]
  %44 = phi i8* [ %31, %37 ], [ %53, %40 ]
  %45 = ptrtoint i8* %43 to i64
  %46 = sub i64 %41, %45
  %47 = sext i32 %42 to i64
  %48 = icmp sgt i64 %46, %47
  %49 = select i1 %48, i64 %47, i64 %46
  %50 = trunc i64 %49 to i32
  %51 = shl i64 %49, 32
  %52 = ashr exact i64 %51, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %43, i64 %52, i1 false) #5
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load i64, i64* %25, align 8
  %55 = load i64, i64* %38, align 8
  %56 = sub i64 %55, %54
  %57 = add i64 %56, %52
  %58 = getelementptr inbounds i8, i8* %43, i64 %57
  %59 = sub nsw i32 %42, %50
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %40, label %61

61:                                               ; preds = %40
  %62 = load i8*, i8** %6, align 8
  br label %63

63:                                               ; preds = %23, %33, %61
  %64 = phi i8* [ %62, %61 ], [ null, %33 ], [ %24, %23 ]
  %65 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 1
  %66 = load %struct.AVCodecContext*, %struct.AVCodecContext** %65, align 8
  %67 = bitcast %struct.GetBitContext* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 32, i1 false) #5
  %68 = icmp eq i8* %64, null
  %69 = select i1 %68, i32 0, i32 128
  %70 = lshr exact i32 %69, 3
  %71 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i64 0, i32 0
  store i8* %64, i8** %71, align 8
  %72 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i64 0, i32 3
  store i32 %69, i32* %72, align 4
  %73 = or i32 %69, 8
  %74 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i64 0, i32 4
  store i32 %73, i32* %74, align 8
  %75 = zext i32 %70 to i64
  %76 = getelementptr inbounds i8, i8* %64, i64 %75
  %77 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i64 0, i32 1
  store i8* %76, i8** %77, align 8
  %78 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i64 0, i32 2
  store i32 0, i32* %78, align 8
  %79 = call i32 @ff_flac_decode_frame_header(%struct.AVCodecContext* %66, %struct.GetBitContext* nonnull %3, %struct.FLACFrameInfo* nonnull %4, i32 127) #5
  %80 = icmp eq i32 %79, 0
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #5
  br i1 %80, label %81, label %118

81:                                               ; preds = %63
  %82 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 2
  %83 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %82, align 8
  %84 = icmp eq %struct.FLACHeaderMarker* %83, null
  br i1 %84, label %94, label %85

85:                                               ; preds = %81, %85
  %86 = phi %struct.FLACHeaderMarker* [ %90, %85 ], [ %83, %81 ]
  %87 = phi i32 [ %89, %85 ], [ 1, %81 ]
  %88 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %86, i64 0, i32 4
  %89 = add i32 %87, 1
  %90 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %88, align 8
  %91 = icmp eq %struct.FLACHeaderMarker* %90, null
  br i1 %91, label %92, label %85

92:                                               ; preds = %85
  %93 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %86, i64 0, i32 4
  br label %94

94:                                               ; preds = %92, %81
  %95 = phi i32 [ 1, %81 ], [ %89, %92 ]
  %96 = phi %struct.FLACHeaderMarker** [ %82, %81 ], [ %93, %92 ]
  %97 = call noalias i8* @av_mallocz(i64 80) #5
  %98 = bitcast %struct.FLACHeaderMarker** %96 to i8**
  store i8* %97, i8** %98, align 8
  %99 = icmp eq i8* %97, null
  br i1 %99, label %115, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds i8, i8* %97, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* nonnull align 8 %5, i64 40, i1 false)
  %102 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %96, align 8
  %103 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %102, i64 0, i32 0
  store i32 %1, i32* %103, align 8
  %104 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %96, align 8
  %105 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %104, i64 0, i32 1, i64 0
  store i32 100000, i32* %105, align 4
  %106 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %96, align 8
  %107 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %106, i64 0, i32 1, i64 1
  store i32 100000, i32* %107, align 4
  %108 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %96, align 8
  %109 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %108, i64 0, i32 1, i64 2
  store i32 100000, i32* %109, align 4
  %110 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %96, align 8
  %111 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %110, i64 0, i32 1, i64 3
  store i32 100000, i32* %111, align 4
  %112 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 4
  %113 = load i32, i32* %112, align 8
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %112, align 8
  br label %118

115:                                              ; preds = %94
  %116 = bitcast %struct.AVCodecContext** %65 to i8**
  %117 = load i8*, i8** %116, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %117, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0)) #5
  br label %118

118:                                              ; preds = %63, %100, %115
  %119 = phi i32 [ -12, %115 ], [ 0, %63 ], [ %95, %100 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #5
  ret i32 %119
}

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @score_header(%struct.FLACParseContext* nocapture, %struct.FLACHeaderMarker*) unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -100000
  br i1 %5, label %6, label %47

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 12
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.FLACParseContext, %struct.FLACParseContext* %0, i64 0, i32 11
  %12 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %1, i64 0, i32 3
  %13 = tail call fastcc i32 @check_header_fi_mismatch(%struct.FLACParseContext* %0, %struct.FLACFrameInfo* %11, %struct.FLACFrameInfo* %12, i32 48)
  %14 = sub nsw i32 10, %13
  br label %15

15:                                               ; preds = %6, %10
  %16 = phi i32 [ %14, %10 ], [ 10, %6 ]
  store i32 %16, i32* %3, align 4
  %17 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %1, i64 0, i32 4
  %18 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %17, align 8
  %19 = icmp eq %struct.FLACHeaderMarker* %18, null
  br i1 %19, label %47, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %1, i64 0, i32 5
  br label %22

22:                                               ; preds = %20, %39
  %23 = phi i64 [ 0, %20 ], [ %41, %39 ]
  %24 = phi %struct.FLACHeaderMarker* [ %18, %20 ], [ %43, %39 ]
  %25 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %1, i64 0, i32 1, i64 %23
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 100000
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = tail call fastcc i32 @check_header_mismatch(%struct.FLACParseContext* %0, %struct.FLACHeaderMarker* %1, %struct.FLACHeaderMarker* nonnull %24, i32 48)
  store i32 %29, i32* %25, align 4
  br label %30

30:                                               ; preds = %28, %22
  %31 = tail call fastcc i32 @score_header(%struct.FLACParseContext* %0, %struct.FLACHeaderMarker* nonnull %24)
  %32 = load i32, i32* %25, align 4
  %33 = sub nsw i32 %31, %32
  %34 = add nsw i32 %33, 10
  %35 = load i32, i32* %3, align 4
  %36 = icmp sgt i32 %34, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  store %struct.FLACHeaderMarker* %24, %struct.FLACHeaderMarker** %21, align 8
  %38 = add nsw i32 %33, %16
  store i32 %38, i32* %3, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %35, %30 ]
  %41 = add nuw nsw i64 %23, 1
  %42 = getelementptr inbounds %struct.FLACHeaderMarker, %struct.FLACHeaderMarker* %24, i64 0, i32 4
  %43 = load %struct.FLACHeaderMarker*, %struct.FLACHeaderMarker** %42, align 8
  %44 = icmp ult i64 %41, 4
  %45 = icmp ne %struct.FLACHeaderMarker* %43, null
  %46 = and i1 %44, %45
  br i1 %46, label %22, label %47

47:                                               ; preds = %39, %15, %2
  %48 = phi i32 [ %4, %2 ], [ %16, %15 ], [ %40, %39 ]
  ret i32 %48
}

declare i8* @av_fast_realloc(i8*, i32*, i64) local_unnamed_addr #3

declare void @av_fifo_freep(%struct.AVFifoBuffer**) local_unnamed_addr #3

attributes #0 = { cold nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
