; ModuleID = '../../v8/src/compiler/graph-trimmer.cc'
source_filename = "../../v8/src/compiler/graph-trimmer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::compiler::GraphTrimmer" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::NodeMarker", %"class.v8::internal::ZoneVector.11" }
%"class.v8::internal::compiler::NodeMarker" = type { %"class.v8::internal::compiler::NodeMarkerBase" }
%"class.v8::internal::compiler::NodeMarkerBase" = type { i32, i32 }
%"class.v8::internal::ZoneVector.11" = type { %"class.std::__1::vector.12" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.14" }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::internal::compiler::Node"** }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::internal::ZoneAllocator.17" }
%"class.v8::internal::ZoneAllocator.17" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.8" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@_ZN2v88internal25FLAG_trace_turbo_trimmingE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [11 x i8] c"DeadLink: \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c") -> \00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2v88internal8compiler12GraphTrimmerC1EPNS0_4ZoneEPNS1_5GraphE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::GraphTrimmer"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Graph"*), void (%"class.v8::internal::compiler::GraphTrimmer"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Graph"*)* @_ZN2v88internal8compiler12GraphTrimmerC2EPNS0_4ZoneEPNS1_5GraphE
@_ZN2v88internal8compiler12GraphTrimmerD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::compiler::GraphTrimmer"*), void (%"class.v8::internal::compiler::GraphTrimmer"*)* @_ZN2v88internal8compiler12GraphTrimmerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler12GraphTrimmerC2EPNS0_4ZoneEPNS1_5GraphE(%"class.v8::internal::compiler::GraphTrimmer"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Graph"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::Graph"* %2, %"class.v8::internal::compiler::Graph"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"* %5, %"class.v8::internal::compiler::Graph"* %2, i32 2) #10
  %6 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2
  %7 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %9 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %8 to i64*
  %10 = bitcast %"class.v8::internal::ZoneVector.11"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #10
  store i64 %7, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %2, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::compiler::Node"*** %14 to i64*
  %16 = bitcast %"class.v8::internal::ZoneVector.11"* %6 to i64*
  %17 = icmp eq i32 %12, 0
  br i1 %17, label %216, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %20 = bitcast %"class.v8::internal::compiler::Node"*** %19 to i64*
  %21 = shl nuw nsw i64 %13, 3
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %23
  %27 = icmp ugt i64 %21, %26
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %18
  %29 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %21) #10
  br label %32

30:                                               ; preds = %18
  %31 = add i64 %23, %21
  store i64 %31, i64* %22, align 8
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i64 [ %29, %28 ], [ %23, %30 ]
  %34 = inttoptr i64 %33 to %"class.v8::internal::compiler::Node"**
  %35 = inttoptr i64 %33 to i8*
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, i64 %13
  %37 = ptrtoint %"class.v8::internal::compiler::Node"** %36 to i64
  %38 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %6, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %38, align 8
  %40 = ptrtoint %"class.v8::internal::compiler::Node"** %39 to i64
  %41 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %19, align 8
  %42 = icmp eq %"class.v8::internal::compiler::Node"** %41, %39
  br i1 %42, label %214, label %43

43:                                               ; preds = %32
  %44 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, i64 -1
  %45 = ptrtoint %"class.v8::internal::compiler::Node"** %44 to i64
  %46 = sub i64 %45, %40
  %47 = lshr i64 %46, 3
  %48 = add nuw nsw i64 %47, 1
  %49 = icmp ult i64 %48, 4
  br i1 %49, label %141, label %50

50:                                               ; preds = %43
  %51 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, i64 -1
  %52 = ptrtoint %"class.v8::internal::compiler::Node"** %51 to i64
  %53 = sub i64 %52, %40
  %54 = lshr i64 %53, 3
  %55 = xor i64 %54, -1
  %56 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, i64 %55
  %57 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, i64 %55
  %58 = bitcast %"class.v8::internal::compiler::Node"** %57 to i8*
  %59 = icmp ult %"class.v8::internal::compiler::Node"** %56, %41
  %60 = icmp ult i8* %58, %35
  %61 = and i1 %59, %60
  br i1 %61, label %141, label %62

62:                                               ; preds = %50
  %63 = and i64 %48, 4611686018427387900
  %64 = sub nsw i64 0, %63
  %65 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, i64 %64
  %66 = sub nsw i64 0, %63
  %67 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, i64 %66
  %68 = add nsw i64 %63, -4
  %69 = lshr exact i64 %68, 2
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 1
  %72 = icmp eq i64 %68, 0
  br i1 %72, label %119, label %73

73:                                               ; preds = %62
  %74 = sub nuw nsw i64 %70, %71
  %75 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, i64 -1
  %76 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, i64 -1
  %77 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, i64 -1
  %78 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, i64 -1
  br label %79

79:                                               ; preds = %79, %73
  %80 = phi i64 [ 0, %73 ], [ %114, %79 ]
  %81 = phi i64 [ %74, %73 ], [ %115, %79 ]
  %82 = sub i64 0, %80
  %83 = sub i64 0, %80
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 %82
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 %83
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 -1
  %87 = bitcast %"class.v8::internal::compiler::Node"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 -2
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 -1
  %91 = bitcast %"class.v8::internal::compiler::Node"** %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !3
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 -1
  %94 = bitcast %"class.v8::internal::compiler::Node"** %93 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %94, align 8, !alias.scope !6, !noalias !3
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 -2
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, i64 -1
  %97 = bitcast %"class.v8::internal::compiler::Node"** %96 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %97, align 8, !alias.scope !6, !noalias !3
  %98 = sub nuw nsw i64 -4, %80
  %99 = sub nuw nsw i64 -4, %80
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %77, i64 %98
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 %99
  %102 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %101, i64 -1
  %103 = bitcast %"class.v8::internal::compiler::Node"** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !3
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %101, i64 -2
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %105, i64 -1
  %107 = bitcast %"class.v8::internal::compiler::Node"** %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !3
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %100, i64 -1
  %110 = bitcast %"class.v8::internal::compiler::Node"** %109 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %110, align 8, !alias.scope !6, !noalias !3
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %100, i64 -2
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 -1
  %113 = bitcast %"class.v8::internal::compiler::Node"** %112 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %113, align 8, !alias.scope !6, !noalias !3
  %114 = add i64 %80, 8
  %115 = add i64 %81, -2
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %79, !llvm.loop !8

117:                                              ; preds = %79
  %118 = sub nuw nsw i64 -8, %80
  br label %119

119:                                              ; preds = %117, %62
  %120 = phi i64 [ 0, %62 ], [ %118, %117 ]
  %121 = icmp eq i64 %71, 0
  br i1 %121, label %139, label %122

122:                                              ; preds = %119
  %123 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, i64 -1
  %124 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, i64 -1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %123, i64 %120
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %124, i64 %120
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 -1
  %128 = bitcast %"class.v8::internal::compiler::Node"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !3
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 -2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %130, i64 -1
  %132 = bitcast %"class.v8::internal::compiler::Node"** %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !3
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %125, i64 -1
  %135 = bitcast %"class.v8::internal::compiler::Node"** %134 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %135, align 8, !alias.scope !6, !noalias !3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %125, i64 -2
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %136, i64 -1
  %138 = bitcast %"class.v8::internal::compiler::Node"** %137 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %138, align 8, !alias.scope !6, !noalias !3
  br label %139

139:                                              ; preds = %119, %122
  %140 = icmp eq i64 %48, %63
  br i1 %140, label %211, label %141

141:                                              ; preds = %139, %50, %43
  %142 = phi %"class.v8::internal::compiler::Node"** [ %34, %50 ], [ %34, %43 ], [ %65, %139 ]
  %143 = phi %"class.v8::internal::compiler::Node"** [ %41, %50 ], [ %41, %43 ], [ %67, %139 ]
  %144 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, i64 -1
  %145 = ptrtoint %"class.v8::internal::compiler::Node"** %144 to i64
  %146 = sub i64 %145, %40
  %147 = lshr i64 %146, 3
  %148 = add nuw nsw i64 %147, 1
  %149 = and i64 %148, 7
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %162, label %151

151:                                              ; preds = %141, %151
  %152 = phi %"class.v8::internal::compiler::Node"** [ %155, %151 ], [ %142, %141 ]
  %153 = phi %"class.v8::internal::compiler::Node"** [ %156, %151 ], [ %143, %141 ]
  %154 = phi i64 [ %160, %151 ], [ %149, %141 ]
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, i64 -1
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 -1
  %157 = bitcast %"class.v8::internal::compiler::Node"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::Node"** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = add i64 %154, -1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %151, !llvm.loop !10

162:                                              ; preds = %151, %141
  %163 = phi %"class.v8::internal::compiler::Node"** [ undef, %141 ], [ %155, %151 ]
  %164 = phi %"class.v8::internal::compiler::Node"** [ %142, %141 ], [ %155, %151 ]
  %165 = phi %"class.v8::internal::compiler::Node"** [ %143, %141 ], [ %156, %151 ]
  %166 = icmp ult i64 %146, 56
  br i1 %166, label %211, label %167

167:                                              ; preds = %162, %167
  %168 = phi %"class.v8::internal::compiler::Node"** [ %205, %167 ], [ %164, %162 ]
  %169 = phi %"class.v8::internal::compiler::Node"** [ %206, %167 ], [ %165, %162 ]
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -1
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -1
  %172 = bitcast %"class.v8::internal::compiler::Node"** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.v8::internal::compiler::Node"** %170 to i64*
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -2
  %176 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -2
  %177 = bitcast %"class.v8::internal::compiler::Node"** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.v8::internal::compiler::Node"** %175 to i64*
  store i64 %178, i64* %179, align 8
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -3
  %181 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -3
  %182 = bitcast %"class.v8::internal::compiler::Node"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = bitcast %"class.v8::internal::compiler::Node"** %180 to i64*
  store i64 %183, i64* %184, align 8
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -4
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -4
  %187 = bitcast %"class.v8::internal::compiler::Node"** %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.v8::internal::compiler::Node"** %185 to i64*
  store i64 %188, i64* %189, align 8
  %190 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -5
  %191 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -5
  %192 = bitcast %"class.v8::internal::compiler::Node"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast %"class.v8::internal::compiler::Node"** %190 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -6
  %196 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -6
  %197 = bitcast %"class.v8::internal::compiler::Node"** %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::Node"** %195 to i64*
  store i64 %198, i64* %199, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -7
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -7
  %202 = bitcast %"class.v8::internal::compiler::Node"** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = bitcast %"class.v8::internal::compiler::Node"** %200 to i64*
  store i64 %203, i64* %204, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -8
  %206 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -8
  %207 = bitcast %"class.v8::internal::compiler::Node"** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = bitcast %"class.v8::internal::compiler::Node"** %205 to i64*
  store i64 %208, i64* %209, align 8
  %210 = icmp eq %"class.v8::internal::compiler::Node"** %206, %39
  br i1 %210, label %211, label %167, !llvm.loop !12

211:                                              ; preds = %162, %167, %139
  %212 = phi %"class.v8::internal::compiler::Node"** [ %65, %139 ], [ %163, %162 ], [ %205, %167 ]
  %213 = ptrtoint %"class.v8::internal::compiler::Node"** %212 to i64
  br label %214

214:                                              ; preds = %211, %32
  %215 = phi i64 [ %213, %211 ], [ %33, %32 ]
  store i64 %215, i64* %16, align 8
  store i64 %33, i64* %20, align 8
  store i64 %37, i64* %15, align 8
  br label %216

216:                                              ; preds = %3, %214
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler12GraphTrimmerD2Ev(%"class.v8::internal::compiler::GraphTrimmer"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %2, align 8
  %4 = icmp eq %"class.v8::internal::compiler::Node"** %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.v8::internal::compiler::Node"** %3 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::Node"*** %7 to i64*
  store i64 %6, i64* %8, align 8
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler12GraphTrimmer9TrimGraphEv(%"class.v8::internal::compiler::GraphTrimmer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.v8::internal::StdoutStream", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %5, i64 0, i32 2
  %7 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %6, align 8
  %8 = ptrtoint %"class.v8::internal::compiler::Node"* %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %7, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = tail call i32 @llvm.usub.sat.i32(i32 %10, i32 %12) #10
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %17 = bitcast %"class.v8::internal::compiler::Node"*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %18 to %"class.v8::internal::compiler::Node"**
  br label %259

20:                                               ; preds = %1
  %21 = add i32 %12, 1
  store i32 %21, i32* %9, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %24 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %26 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %25, align 8
  %27 = icmp eq %"class.v8::internal::compiler::Node"** %24, %26
  %28 = ptrtoint %"class.v8::internal::compiler::Node"** %26 to i64
  br i1 %27, label %34, label %29

29:                                               ; preds = %20
  %30 = bitcast %"class.v8::internal::compiler::Node"** %24 to i64*
  store i64 %8, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, i64 1
  %32 = ptrtoint %"class.v8::internal::compiler::Node"** %31 to i64
  %33 = bitcast %"class.v8::internal::compiler::Node"*** %23 to i64*
  store i64 %32, i64* %33, align 8
  br label %259

34:                                               ; preds = %20
  %35 = ptrtoint %"class.v8::internal::compiler::Node"** %24 to i64
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %23 to i64*
  %37 = bitcast %"class.std::__1::vector.12"* %22 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %35, %38
  %40 = ashr exact i64 %39, 3
  %41 = add nsw i64 %40, 1
  %42 = icmp ugt i64 %41, 268435455
  br i1 %42, label %43, label %45

43:                                               ; preds = %34
  %44 = bitcast %"class.std::__1::vector.12"* %22 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %44) #11
  unreachable

45:                                               ; preds = %34
  %46 = bitcast %"class.v8::internal::compiler::Node"*** %25 to i64*
  %47 = sub i64 %28, %38
  %48 = ashr exact i64 %47, 3
  %49 = icmp ult i64 %48, 134217727
  br i1 %49, label %50, label %55

50:                                               ; preds = %45
  %51 = ashr exact i64 %47, 2
  %52 = icmp ult i64 %51, %41
  %53 = select i1 %52, i64 %41, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %73, label %55

55:                                               ; preds = %50, %45
  %56 = phi i64 [ %53, %50 ], [ 268435455, %45 ]
  %57 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = shl i64 %56, 3
  %60 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %63, %61
  %65 = icmp ugt i64 %59, %64
  br i1 %65, label %66, label %68, !prof !2

66:                                               ; preds = %55
  %67 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 %59) #10
  br label %70

68:                                               ; preds = %55
  %69 = add i64 %61, %59
  store i64 %69, i64* %60, align 8
  br label %70

70:                                               ; preds = %68, %66
  %71 = phi i64 [ %67, %66 ], [ %61, %68 ]
  %72 = inttoptr i64 %71 to %"class.v8::internal::compiler::Node"**
  br label %73

73:                                               ; preds = %70, %50
  %74 = phi i64 [ %56, %70 ], [ 0, %50 ]
  %75 = phi %"class.v8::internal::compiler::Node"** [ %72, %70 ], [ null, %50 ]
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 %40
  %77 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 %74
  %78 = ptrtoint %"class.v8::internal::compiler::Node"** %77 to i64
  %79 = bitcast %"class.v8::internal::compiler::Node"** %76 to i64*
  store i64 %8, i64* %79, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 1
  %81 = ptrtoint %"class.v8::internal::compiler::Node"** %80 to i64
  %82 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %22, i64 0, i32 0, i32 0
  %83 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, align 8
  %84 = ptrtoint %"class.v8::internal::compiler::Node"** %83 to i64
  %85 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, align 8
  %86 = icmp eq %"class.v8::internal::compiler::Node"** %85, %83
  br i1 %86, label %256, label %87

87:                                               ; preds = %73
  %88 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 -1
  %89 = ptrtoint %"class.v8::internal::compiler::Node"** %88 to i64
  %90 = sub i64 %89, %84
  %91 = lshr i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = icmp ult i64 %92, 4
  br i1 %93, label %186, label %94

94:                                               ; preds = %87
  %95 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 -1
  %96 = ptrtoint %"class.v8::internal::compiler::Node"** %95 to i64
  %97 = sub i64 %96, %84
  %98 = lshr i64 %97, 3
  %99 = xor i64 %98, -1
  %100 = add nsw i64 %40, %99
  %101 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 %100
  %102 = xor i64 %98, -1
  %103 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 %102
  %104 = icmp ult %"class.v8::internal::compiler::Node"** %101, %85
  %105 = icmp ult %"class.v8::internal::compiler::Node"** %103, %76
  %106 = and i1 %104, %105
  br i1 %106, label %186, label %107

107:                                              ; preds = %94
  %108 = and i64 %92, 4611686018427387900
  %109 = sub nsw i64 0, %108
  %110 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 %109
  %111 = sub nsw i64 0, %108
  %112 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 %111
  %113 = add nsw i64 %108, -4
  %114 = lshr exact i64 %113, 2
  %115 = add nuw nsw i64 %114, 1
  %116 = and i64 %115, 1
  %117 = icmp eq i64 %113, 0
  br i1 %117, label %164, label %118

118:                                              ; preds = %107
  %119 = sub nuw nsw i64 %115, %116
  %120 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 -1
  %121 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 -1
  %122 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 -1
  %123 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 -1
  br label %124

124:                                              ; preds = %124, %118
  %125 = phi i64 [ 0, %118 ], [ %159, %124 ]
  %126 = phi i64 [ %119, %118 ], [ %160, %124 ]
  %127 = sub i64 0, %125
  %128 = sub i64 0, %125
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, i64 %127
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %121, i64 %128
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %130, i64 -1
  %132 = bitcast %"class.v8::internal::compiler::Node"** %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !13
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %130, i64 -2
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %134, i64 -1
  %136 = bitcast %"class.v8::internal::compiler::Node"** %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8, !alias.scope !13
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, i64 -1
  %139 = bitcast %"class.v8::internal::compiler::Node"** %138 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %139, align 8, !alias.scope !16, !noalias !13
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, i64 -2
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %140, i64 -1
  %142 = bitcast %"class.v8::internal::compiler::Node"** %141 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %142, align 8, !alias.scope !16, !noalias !13
  %143 = sub nuw nsw i64 -4, %125
  %144 = sub nuw nsw i64 -4, %125
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 %143
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %123, i64 %144
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %146, i64 -1
  %148 = bitcast %"class.v8::internal::compiler::Node"** %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !13
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %146, i64 -2
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 -1
  %152 = bitcast %"class.v8::internal::compiler::Node"** %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !13
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::Node"** %154 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %155, align 8, !alias.scope !16, !noalias !13
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, i64 -2
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %156, i64 -1
  %158 = bitcast %"class.v8::internal::compiler::Node"** %157 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %158, align 8, !alias.scope !16, !noalias !13
  %159 = add i64 %125, 8
  %160 = add i64 %126, -2
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %124, !llvm.loop !18

162:                                              ; preds = %124
  %163 = sub nuw nsw i64 -8, %125
  br label %164

164:                                              ; preds = %162, %107
  %165 = phi i64 [ 0, %107 ], [ %163, %162 ]
  %166 = icmp eq i64 %116, 0
  br i1 %166, label %184, label %167

167:                                              ; preds = %164
  %168 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 -1
  %169 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 -1
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 %165
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 %165
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %171, i64 -1
  %173 = bitcast %"class.v8::internal::compiler::Node"** %172 to <2 x i64>*
  %174 = load <2 x i64>, <2 x i64>* %173, align 8, !alias.scope !13
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %171, i64 -2
  %176 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %175, i64 -1
  %177 = bitcast %"class.v8::internal::compiler::Node"** %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8, !alias.scope !13
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %170, i64 -1
  %180 = bitcast %"class.v8::internal::compiler::Node"** %179 to <2 x i64>*
  store <2 x i64> %174, <2 x i64>* %180, align 8, !alias.scope !16, !noalias !13
  %181 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %170, i64 -2
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 -1
  %183 = bitcast %"class.v8::internal::compiler::Node"** %182 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %183, align 8, !alias.scope !16, !noalias !13
  br label %184

184:                                              ; preds = %164, %167
  %185 = icmp eq i64 %92, %108
  br i1 %185, label %256, label %186

186:                                              ; preds = %184, %94, %87
  %187 = phi %"class.v8::internal::compiler::Node"** [ %76, %94 ], [ %76, %87 ], [ %110, %184 ]
  %188 = phi %"class.v8::internal::compiler::Node"** [ %85, %94 ], [ %85, %87 ], [ %112, %184 ]
  %189 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %188, i64 -1
  %190 = ptrtoint %"class.v8::internal::compiler::Node"** %189 to i64
  %191 = sub i64 %190, %84
  %192 = lshr i64 %191, 3
  %193 = add nuw nsw i64 %192, 1
  %194 = and i64 %193, 7
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %207, label %196

196:                                              ; preds = %186, %196
  %197 = phi %"class.v8::internal::compiler::Node"** [ %200, %196 ], [ %187, %186 ]
  %198 = phi %"class.v8::internal::compiler::Node"** [ %201, %196 ], [ %188, %186 ]
  %199 = phi i64 [ %205, %196 ], [ %194, %186 ]
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 -1
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %198, i64 -1
  %202 = bitcast %"class.v8::internal::compiler::Node"** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = bitcast %"class.v8::internal::compiler::Node"** %200 to i64*
  store i64 %203, i64* %204, align 8
  %205 = add i64 %199, -1
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %196, !llvm.loop !19

207:                                              ; preds = %196, %186
  %208 = phi %"class.v8::internal::compiler::Node"** [ undef, %186 ], [ %200, %196 ]
  %209 = phi %"class.v8::internal::compiler::Node"** [ %187, %186 ], [ %200, %196 ]
  %210 = phi %"class.v8::internal::compiler::Node"** [ %188, %186 ], [ %201, %196 ]
  %211 = icmp ult i64 %191, 56
  br i1 %211, label %256, label %212

212:                                              ; preds = %207, %212
  %213 = phi %"class.v8::internal::compiler::Node"** [ %250, %212 ], [ %209, %207 ]
  %214 = phi %"class.v8::internal::compiler::Node"** [ %251, %212 ], [ %210, %207 ]
  %215 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -1
  %216 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -1
  %217 = bitcast %"class.v8::internal::compiler::Node"** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %"class.v8::internal::compiler::Node"** %215 to i64*
  store i64 %218, i64* %219, align 8
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -2
  %221 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -2
  %222 = bitcast %"class.v8::internal::compiler::Node"** %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"class.v8::internal::compiler::Node"** %220 to i64*
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -3
  %226 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -3
  %227 = bitcast %"class.v8::internal::compiler::Node"** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.v8::internal::compiler::Node"** %225 to i64*
  store i64 %228, i64* %229, align 8
  %230 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -4
  %231 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -4
  %232 = bitcast %"class.v8::internal::compiler::Node"** %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %"class.v8::internal::compiler::Node"** %230 to i64*
  store i64 %233, i64* %234, align 8
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -5
  %236 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -5
  %237 = bitcast %"class.v8::internal::compiler::Node"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = bitcast %"class.v8::internal::compiler::Node"** %235 to i64*
  store i64 %238, i64* %239, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -6
  %241 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -6
  %242 = bitcast %"class.v8::internal::compiler::Node"** %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = bitcast %"class.v8::internal::compiler::Node"** %240 to i64*
  store i64 %243, i64* %244, align 8
  %245 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -7
  %246 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -7
  %247 = bitcast %"class.v8::internal::compiler::Node"** %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast %"class.v8::internal::compiler::Node"** %245 to i64*
  store i64 %248, i64* %249, align 8
  %250 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -8
  %251 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -8
  %252 = bitcast %"class.v8::internal::compiler::Node"** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %"class.v8::internal::compiler::Node"** %250 to i64*
  store i64 %253, i64* %254, align 8
  %255 = icmp eq %"class.v8::internal::compiler::Node"** %251, %83
  br i1 %255, label %256, label %212, !llvm.loop !20

256:                                              ; preds = %207, %212, %184, %73
  %257 = phi %"class.v8::internal::compiler::Node"** [ %76, %73 ], [ %110, %184 ], [ %208, %207 ], [ %250, %212 ]
  %258 = ptrtoint %"class.v8::internal::compiler::Node"** %257 to i64
  store i64 %258, i64* %37, align 8
  store i64 %81, i64* %36, align 8
  store i64 %78, i64* %46, align 8
  br label %259

259:                                              ; preds = %15, %29, %256
  %260 = phi i64* [ %17, %15 ], [ %33, %29 ], [ %36, %256 ]
  %261 = phi %"class.v8::internal::compiler::Node"** [ %19, %15 ], [ %31, %29 ], [ %80, %256 ]
  %262 = phi i64 [ %18, %15 ], [ %32, %29 ], [ %81, %256 ]
  %263 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0
  %264 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %265 = bitcast %"class.std::__1::vector.12"* %263 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = icmp eq i64 %262, %266
  %268 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %263, i64 0, i32 0, i32 0
  %269 = inttoptr i64 %266 to %"class.v8::internal::compiler::Node"**
  br i1 %267, label %276, label %270

270:                                              ; preds = %259
  %271 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %272 = bitcast %"class.v8::internal::compiler::Node"*** %271 to i64*
  %273 = getelementptr inbounds %"class.v8::internal::compiler::GraphTrimmer", %"class.v8::internal::compiler::GraphTrimmer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  br label %294

274:                                              ; preds = %322
  %275 = inttoptr i64 %326 to %"class.v8::internal::compiler::Node"**
  br label %276

276:                                              ; preds = %274, %259
  %277 = phi %"class.v8::internal::compiler::Node"** [ %261, %259 ], [ %323, %274 ]
  %278 = phi %"class.v8::internal::compiler::Node"** [ %269, %259 ], [ %275, %274 ]
  %279 = icmp eq %"class.v8::internal::compiler::Node"** %278, %277
  br i1 %279, label %578, label %280

280:                                              ; preds = %276
  %281 = bitcast %"class.v8::internal::StdoutStream"* %3 to i8*
  %282 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 2, i32 0, i32 0
  %283 = bitcast %"class.v8::internal::StdoutStream"* %3 to %"class.v8::internal::OFStream"*
  %284 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 0, i32 0, i32 0
  %285 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 1, i32 0
  %286 = bitcast %"class.v8::internal::StdoutStream"* %3 to %"class.std::__1::basic_ostream"*
  %287 = bitcast %"class.v8::internal::StdoutStream"* %3 to i8**
  %288 = bitcast %"class.std::__1::locale"* %2 to i8*
  %289 = bitcast %"class.v8::internal::StdoutStream"* %3 to i64*
  %290 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 2
  %291 = bitcast %"class.std::__1::basic_ios.base"* %290 to i64*
  %292 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 0, i32 1, i32 0
  %293 = bitcast %"class.std::__1::basic_ios.base"* %290 to %"class.std::__1::basic_ios"*
  br label %579

294:                                              ; preds = %270, %322
  %295 = phi %"class.v8::internal::compiler::Node"** [ %261, %270 ], [ %323, %322 ]
  %296 = phi i64 [ %262, %270 ], [ %324, %322 ]
  %297 = phi %"class.v8::internal::compiler::Node"** [ %269, %270 ], [ %330, %322 ]
  %298 = phi i64 [ 0, %270 ], [ %325, %322 ]
  %299 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %297, i64 %298
  %300 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %299, align 8
  %301 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %300, i64 0, i32 3
  %302 = load i32, i32* %301, align 4
  %303 = lshr i32 %302, 24
  %304 = and i32 %303, 15
  %305 = icmp eq i32 %304, 15
  %306 = ptrtoint %"class.v8::internal::compiler::Node"* %300 to i64
  %307 = add i64 %306, 32
  br i1 %305, label %308, label %315

308:                                              ; preds = %294
  %309 = inttoptr i64 %307 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %310 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %309, align 8
  %311 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %310 to i64
  %312 = add i64 %311, 16
  %313 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %310, i64 0, i32 1
  %314 = load i32, i32* %313, align 8
  br label %315

315:                                              ; preds = %294, %308
  %316 = phi i32 [ %314, %308 ], [ %304, %294 ]
  %317 = phi i64 [ %312, %308 ], [ %307, %294 ]
  %318 = inttoptr i64 %317 to %"class.v8::internal::compiler::Node"**
  %319 = sext i32 %316 to i64
  %320 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, i64 %319
  %321 = icmp eq i32 %316, 0
  br i1 %321, label %322, label %331

322:                                              ; preds = %573, %315
  %323 = phi %"class.v8::internal::compiler::Node"** [ %295, %315 ], [ %574, %573 ]
  %324 = phi i64 [ %296, %315 ], [ %575, %573 ]
  %325 = add nuw i64 %298, 1
  %326 = load i64, i64* %265, align 8
  %327 = sub i64 %324, %326
  %328 = ashr exact i64 %327, 3
  %329 = icmp ult i64 %325, %328
  %330 = inttoptr i64 %326 to %"class.v8::internal::compiler::Node"**
  br i1 %329, label %294, label %274

331:                                              ; preds = %315, %573
  %332 = phi %"class.v8::internal::compiler::Node"** [ %574, %573 ], [ %295, %315 ]
  %333 = phi i64 [ %575, %573 ], [ %296, %315 ]
  %334 = phi %"class.v8::internal::compiler::Node"** [ %576, %573 ], [ %318, %315 ]
  %335 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %334, align 8
  %336 = ptrtoint %"class.v8::internal::compiler::Node"* %335 to i64
  %337 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %335, i64 0, i32 2
  %338 = load i32, i32* %337, align 8
  %339 = load i32, i32* %11, align 4
  %340 = tail call i32 @llvm.usub.sat.i32(i32 %338, i32 %339) #10
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %573

342:                                              ; preds = %331
  %343 = add i32 %339, 1
  store i32 %343, i32* %337, align 8
  %344 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %264, align 8
  %345 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %271, align 8
  %346 = icmp eq %"class.v8::internal::compiler::Node"** %344, %345
  %347 = ptrtoint %"class.v8::internal::compiler::Node"** %345 to i64
  br i1 %346, label %352, label %348

348:                                              ; preds = %342
  %349 = bitcast %"class.v8::internal::compiler::Node"** %344 to i64*
  store i64 %336, i64* %349, align 8
  %350 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %344, i64 1
  %351 = ptrtoint %"class.v8::internal::compiler::Node"** %350 to i64
  store i64 %351, i64* %260, align 8
  br label %573

352:                                              ; preds = %342
  %353 = ptrtoint %"class.v8::internal::compiler::Node"** %344 to i64
  %354 = load i64, i64* %265, align 8
  %355 = sub i64 %353, %354
  %356 = ashr exact i64 %355, 3
  %357 = add nsw i64 %356, 1
  %358 = icmp ugt i64 %357, 268435455
  br i1 %358, label %359, label %361

359:                                              ; preds = %352
  %360 = bitcast %"class.std::__1::vector.12"* %263 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %360) #11
  unreachable

361:                                              ; preds = %352
  %362 = sub i64 %347, %354
  %363 = ashr exact i64 %362, 3
  %364 = icmp ult i64 %363, 134217727
  br i1 %364, label %365, label %370

365:                                              ; preds = %361
  %366 = ashr exact i64 %362, 2
  %367 = icmp ult i64 %366, %357
  %368 = select i1 %367, i64 %357, i64 %366
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %387, label %370

370:                                              ; preds = %365, %361
  %371 = phi i64 [ %368, %365 ], [ 268435455, %361 ]
  %372 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %273, align 8
  %373 = shl i64 %371, 3
  %374 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %372, i64 0, i32 2
  %375 = load i64, i64* %374, align 8
  %376 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %372, i64 0, i32 3
  %377 = load i64, i64* %376, align 8
  %378 = sub i64 %377, %375
  %379 = icmp ugt i64 %373, %378
  br i1 %379, label %380, label %382, !prof !2

380:                                              ; preds = %370
  %381 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %372, i64 %373) #10
  br label %384

382:                                              ; preds = %370
  %383 = add i64 %375, %373
  store i64 %383, i64* %374, align 8
  br label %384

384:                                              ; preds = %382, %380
  %385 = phi i64 [ %381, %380 ], [ %375, %382 ]
  %386 = inttoptr i64 %385 to %"class.v8::internal::compiler::Node"**
  br label %387

387:                                              ; preds = %384, %365
  %388 = phi i64 [ %371, %384 ], [ 0, %365 ]
  %389 = phi %"class.v8::internal::compiler::Node"** [ %386, %384 ], [ null, %365 ]
  %390 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %389, i64 %356
  %391 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %389, i64 %388
  %392 = ptrtoint %"class.v8::internal::compiler::Node"** %391 to i64
  %393 = bitcast %"class.v8::internal::compiler::Node"** %390 to i64*
  store i64 %336, i64* %393, align 8
  %394 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %390, i64 1
  %395 = ptrtoint %"class.v8::internal::compiler::Node"** %394 to i64
  %396 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %268, align 8
  %397 = ptrtoint %"class.v8::internal::compiler::Node"** %396 to i64
  %398 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %264, align 8
  %399 = icmp eq %"class.v8::internal::compiler::Node"** %398, %396
  br i1 %399, label %570, label %400

400:                                              ; preds = %387
  %401 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %398, i64 -1
  %402 = ptrtoint %"class.v8::internal::compiler::Node"** %401 to i64
  %403 = sub i64 %402, %397
  %404 = lshr i64 %403, 3
  %405 = add nuw nsw i64 %404, 1
  %406 = icmp ult i64 %405, 4
  br i1 %406, label %500, label %407

407:                                              ; preds = %400
  %408 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %389, i64 -1
  %409 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %398, i64 -1
  %410 = ptrtoint %"class.v8::internal::compiler::Node"** %409 to i64
  %411 = sub i64 %410, %397
  %412 = lshr i64 %411, 3
  %413 = sub nsw i64 %356, %412
  %414 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %408, i64 %413
  %415 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %398, i64 -1
  %416 = sub nsw i64 0, %412
  %417 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %415, i64 %416
  %418 = icmp ult %"class.v8::internal::compiler::Node"** %414, %398
  %419 = icmp ult %"class.v8::internal::compiler::Node"** %417, %390
  %420 = and i1 %418, %419
  br i1 %420, label %500, label %421

421:                                              ; preds = %407
  %422 = and i64 %405, 4611686018427387900
  %423 = sub nsw i64 0, %422
  %424 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %390, i64 %423
  %425 = sub nsw i64 0, %422
  %426 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %398, i64 %425
  %427 = add nsw i64 %422, -4
  %428 = lshr exact i64 %427, 2
  %429 = add nuw nsw i64 %428, 1
  %430 = and i64 %429, 1
  %431 = icmp eq i64 %427, 0
  br i1 %431, label %476, label %432

432:                                              ; preds = %421
  %433 = sub nuw nsw i64 %429, %430
  %434 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %390, i64 -1
  %435 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %398, i64 -1
  %436 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %390, i64 -1
  %437 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %398, i64 -1
  br label %438

438:                                              ; preds = %438, %432
  %439 = phi i64 [ 0, %432 ], [ %473, %438 ]
  %440 = phi i64 [ %433, %432 ], [ %474, %438 ]
  %441 = sub i64 0, %439
  %442 = sub i64 0, %439
  %443 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %434, i64 %441
  %444 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %435, i64 %442
  %445 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %444, i64 -1
  %446 = bitcast %"class.v8::internal::compiler::Node"** %445 to <2 x i64>*
  %447 = load <2 x i64>, <2 x i64>* %446, align 8, !alias.scope !21
  %448 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %444, i64 -2
  %449 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %448, i64 -1
  %450 = bitcast %"class.v8::internal::compiler::Node"** %449 to <2 x i64>*
  %451 = load <2 x i64>, <2 x i64>* %450, align 8, !alias.scope !21
  %452 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %443, i64 -1
  %453 = bitcast %"class.v8::internal::compiler::Node"** %452 to <2 x i64>*
  store <2 x i64> %447, <2 x i64>* %453, align 8, !alias.scope !24, !noalias !21
  %454 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %443, i64 -2
  %455 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %454, i64 -1
  %456 = bitcast %"class.v8::internal::compiler::Node"** %455 to <2 x i64>*
  store <2 x i64> %451, <2 x i64>* %456, align 8, !alias.scope !24, !noalias !21
  %457 = sub nuw nsw i64 -4, %439
  %458 = sub nuw nsw i64 -4, %439
  %459 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 %457
  %460 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %437, i64 %458
  %461 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %460, i64 -1
  %462 = bitcast %"class.v8::internal::compiler::Node"** %461 to <2 x i64>*
  %463 = load <2 x i64>, <2 x i64>* %462, align 8, !alias.scope !21
  %464 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %460, i64 -2
  %465 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %464, i64 -1
  %466 = bitcast %"class.v8::internal::compiler::Node"** %465 to <2 x i64>*
  %467 = load <2 x i64>, <2 x i64>* %466, align 8, !alias.scope !21
  %468 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 -1
  %469 = bitcast %"class.v8::internal::compiler::Node"** %468 to <2 x i64>*
  store <2 x i64> %463, <2 x i64>* %469, align 8, !alias.scope !24, !noalias !21
  %470 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 -2
  %471 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %470, i64 -1
  %472 = bitcast %"class.v8::internal::compiler::Node"** %471 to <2 x i64>*
  store <2 x i64> %467, <2 x i64>* %472, align 8, !alias.scope !24, !noalias !21
  %473 = add i64 %439, 8
  %474 = add i64 %440, -2
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %476, label %438, !llvm.loop !26

476:                                              ; preds = %438, %421
  %477 = phi i64 [ 0, %421 ], [ %473, %438 ]
  %478 = icmp eq i64 %430, 0
  br i1 %478, label %498, label %479

479:                                              ; preds = %476
  %480 = sub i64 0, %477
  %481 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %390, i64 -1
  %482 = sub i64 0, %477
  %483 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %398, i64 -1
  %484 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %481, i64 %480
  %485 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %483, i64 %482
  %486 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %485, i64 -1
  %487 = bitcast %"class.v8::internal::compiler::Node"** %486 to <2 x i64>*
  %488 = load <2 x i64>, <2 x i64>* %487, align 8, !alias.scope !21
  %489 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %485, i64 -2
  %490 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %489, i64 -1
  %491 = bitcast %"class.v8::internal::compiler::Node"** %490 to <2 x i64>*
  %492 = load <2 x i64>, <2 x i64>* %491, align 8, !alias.scope !21
  %493 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %484, i64 -1
  %494 = bitcast %"class.v8::internal::compiler::Node"** %493 to <2 x i64>*
  store <2 x i64> %488, <2 x i64>* %494, align 8, !alias.scope !24, !noalias !21
  %495 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %484, i64 -2
  %496 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %495, i64 -1
  %497 = bitcast %"class.v8::internal::compiler::Node"** %496 to <2 x i64>*
  store <2 x i64> %492, <2 x i64>* %497, align 8, !alias.scope !24, !noalias !21
  br label %498

498:                                              ; preds = %476, %479
  %499 = icmp eq i64 %405, %422
  br i1 %499, label %570, label %500

500:                                              ; preds = %498, %407, %400
  %501 = phi %"class.v8::internal::compiler::Node"** [ %390, %407 ], [ %390, %400 ], [ %424, %498 ]
  %502 = phi %"class.v8::internal::compiler::Node"** [ %398, %407 ], [ %398, %400 ], [ %426, %498 ]
  %503 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %502, i64 -1
  %504 = ptrtoint %"class.v8::internal::compiler::Node"** %503 to i64
  %505 = sub i64 %504, %397
  %506 = lshr i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 7
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %521, label %510

510:                                              ; preds = %500, %510
  %511 = phi %"class.v8::internal::compiler::Node"** [ %514, %510 ], [ %501, %500 ]
  %512 = phi %"class.v8::internal::compiler::Node"** [ %515, %510 ], [ %502, %500 ]
  %513 = phi i64 [ %519, %510 ], [ %508, %500 ]
  %514 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %511, i64 -1
  %515 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %512, i64 -1
  %516 = bitcast %"class.v8::internal::compiler::Node"** %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = bitcast %"class.v8::internal::compiler::Node"** %514 to i64*
  store i64 %517, i64* %518, align 8
  %519 = add i64 %513, -1
  %520 = icmp eq i64 %519, 0
  br i1 %520, label %521, label %510, !llvm.loop !27

521:                                              ; preds = %510, %500
  %522 = phi %"class.v8::internal::compiler::Node"** [ undef, %500 ], [ %514, %510 ]
  %523 = phi %"class.v8::internal::compiler::Node"** [ %501, %500 ], [ %514, %510 ]
  %524 = phi %"class.v8::internal::compiler::Node"** [ %502, %500 ], [ %515, %510 ]
  %525 = icmp ult i64 %505, 56
  br i1 %525, label %570, label %526

526:                                              ; preds = %521, %526
  %527 = phi %"class.v8::internal::compiler::Node"** [ %564, %526 ], [ %523, %521 ]
  %528 = phi %"class.v8::internal::compiler::Node"** [ %565, %526 ], [ %524, %521 ]
  %529 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -1
  %530 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -1
  %531 = bitcast %"class.v8::internal::compiler::Node"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"class.v8::internal::compiler::Node"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -2
  %535 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -2
  %536 = bitcast %"class.v8::internal::compiler::Node"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"class.v8::internal::compiler::Node"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -3
  %540 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -3
  %541 = bitcast %"class.v8::internal::compiler::Node"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"class.v8::internal::compiler::Node"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -4
  %545 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -4
  %546 = bitcast %"class.v8::internal::compiler::Node"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"class.v8::internal::compiler::Node"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -5
  %550 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -5
  %551 = bitcast %"class.v8::internal::compiler::Node"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"class.v8::internal::compiler::Node"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -6
  %555 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -6
  %556 = bitcast %"class.v8::internal::compiler::Node"** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %"class.v8::internal::compiler::Node"** %554 to i64*
  store i64 %557, i64* %558, align 8
  %559 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -7
  %560 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -7
  %561 = bitcast %"class.v8::internal::compiler::Node"** %560 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = bitcast %"class.v8::internal::compiler::Node"** %559 to i64*
  store i64 %562, i64* %563, align 8
  %564 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -8
  %565 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -8
  %566 = bitcast %"class.v8::internal::compiler::Node"** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"class.v8::internal::compiler::Node"** %564 to i64*
  store i64 %567, i64* %568, align 8
  %569 = icmp eq %"class.v8::internal::compiler::Node"** %565, %396
  br i1 %569, label %570, label %526, !llvm.loop !28

570:                                              ; preds = %521, %526, %498, %387
  %571 = phi %"class.v8::internal::compiler::Node"** [ %390, %387 ], [ %424, %498 ], [ %522, %521 ], [ %564, %526 ]
  %572 = ptrtoint %"class.v8::internal::compiler::Node"** %571 to i64
  store i64 %572, i64* %265, align 8
  store i64 %395, i64* %260, align 8
  store i64 %392, i64* %272, align 8
  br label %573

573:                                              ; preds = %331, %348, %570
  %574 = phi %"class.v8::internal::compiler::Node"** [ %332, %331 ], [ %350, %348 ], [ %394, %570 ]
  %575 = phi i64 [ %333, %331 ], [ %351, %348 ], [ %395, %570 ]
  %576 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %334, i64 1
  %577 = icmp eq %"class.v8::internal::compiler::Node"** %576, %320
  br i1 %577, label %322, label %331

578:                                              ; preds = %585, %276
  ret void

579:                                              ; preds = %280, %585
  %580 = phi %"class.v8::internal::compiler::Node"** [ %278, %280 ], [ %586, %585 ]
  %581 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %580, align 8
  %582 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %581, i64 0, i32 4
  %583 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %582, align 8
  %584 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %583, null
  br i1 %584, label %585, label %588

585:                                              ; preds = %651, %579
  %586 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %580, i64 1
  %587 = icmp eq %"class.v8::internal::compiler::Node"** %586, %277
  br i1 %587, label %578, label %579

588:                                              ; preds = %579, %651
  %589 = phi %"struct.v8::internal::compiler::Node::Use"* [ %591, %651 ], [ %583, %579 ]
  %590 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %589, i64 0, i32 0
  %591 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %590, align 8
  %592 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %589, i64 0, i32 2
  %593 = load i32, i32* %592, align 8
  %594 = lshr i32 %593, 1
  %595 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %589, i64 1
  %596 = zext i32 %594 to i64
  %597 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %595, i64 %596
  %598 = and i32 %593, 1
  %599 = icmp eq i32 %598, 0
  %600 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %597 to i64
  %601 = select i1 %599, i64 16, i64 32
  %602 = add i64 %601, %600
  %603 = inttoptr i64 %602 to %"class.v8::internal::compiler::Node"**
  %604 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %603, i64 %596
  br i1 %599, label %607, label %605

605:                                              ; preds = %588
  %606 = bitcast %"struct.v8::internal::compiler::Node::Use"* %597 to %"class.v8::internal::compiler::Node"*
  br label %610

607:                                              ; preds = %588
  %608 = bitcast %"struct.v8::internal::compiler::Node::Use"* %597 to %"class.v8::internal::compiler::Node"**
  %609 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %608, align 8
  br label %610

610:                                              ; preds = %605, %607
  %611 = phi %"class.v8::internal::compiler::Node"* [ %606, %605 ], [ %609, %607 ]
  %612 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %611, i64 0, i32 2
  %613 = load i32, i32* %612, align 8
  %614 = load i32, i32* %11, align 4
  %615 = call i32 @llvm.usub.sat.i32(i32 %613, i32 %614) #10
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %617, label %651

617:                                              ; preds = %610
  %618 = load i8, i8* @_ZN2v88internal25FLAG_trace_turbo_trimmingE, align 1, !range !29
  %619 = icmp eq i8 %618, 0
  br i1 %619, label %647, label %620

620:                                              ; preds = %617
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %281) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %282, align 8
  %621 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %283, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %621) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %284, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %282, align 8
  %622 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  store %"class.v8::base::RecursiveMutex"* %622, %"class.v8::base::RecursiveMutex"** %285, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %622) #10
  %623 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %286, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10) #10
  %624 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_4NodeE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %286, %"class.v8::internal::compiler::Node"* dereferenceable(32) %611) #10
  %625 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %286, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #10
  %626 = load i32, i32* %592, align 8
  %627 = lshr i32 %626, 1
  %628 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %286, i32 %627) #10
  %629 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %286, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #10
  %630 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_4NodeE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %286, %"class.v8::internal::compiler::Node"* dereferenceable(32) %581) #10
  %631 = load i8*, i8** %287, align 8
  %632 = getelementptr i8, i8* %631, i64 -24
  %633 = bitcast i8* %632 to i64*
  %634 = load i64, i64* %633, align 8
  %635 = getelementptr inbounds i8, i8* %281, i64 %634
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %288) #10
  %636 = bitcast i8* %635 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %636) #10
  %637 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %2, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %638 = bitcast %"class.std::__1::locale::facet"* %637 to %"class.std::__1::ctype"*
  %639 = bitcast %"class.std::__1::locale::facet"* %637 to i8 (%"class.std::__1::ctype"*, i8)***
  %640 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %639, align 8
  %641 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %640, i64 7
  %642 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %641, align 8
  %643 = call signext i8 %642(%"class.std::__1::ctype"* %638, i8 signext 10) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %288) #10
  %644 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* nonnull %286, i8 signext %643) #10
  %645 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* nonnull %286) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %289, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %291, align 8
  %646 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %285, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %646) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %289, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %291, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %292) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %286, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %293) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %281) #10
  br label %647

647:                                              ; preds = %617, %620
  %648 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %604, align 8
  %649 = icmp eq %"class.v8::internal::compiler::Node"* %648, null
  br i1 %649, label %651, label %650

650:                                              ; preds = %647
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %648, %"struct.v8::internal::compiler::Node::Use"* nonnull %589) #10
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %604, align 8
  br label %651

651:                                              ; preds = %610, %650, %647
  %652 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %591, null
  br i1 %652, label %585, label %588
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #10
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #10
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #5

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #5

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #10
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #10
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #10
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #10
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #10
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #10
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #10
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #10
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #10
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #10
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #10
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #5

declare void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #5

declare void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"*, %"class.v8::internal::compiler::Graph"*, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !29
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #12
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #10
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_4NodeE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::Node"* dereferenceable(32)) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !9}
!29 = !{i8 0, i8 2}
