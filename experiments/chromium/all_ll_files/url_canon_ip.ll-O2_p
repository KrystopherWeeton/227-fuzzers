; ModuleID = '../../url/url_canon_ip.cc'
source_filename = "../../url/url_canon_ip.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.url::CanonOutputT" = type { i32 (...)**, i8*, i32, i32 }
%"struct.url::Component" = type { i32, i32 }
%"struct.url::CanonHostInfo" = type { i32, i32, %"struct.url::Component", [16 x i8] }
%"struct.url::(anonymous namespace)::IPv6Parsed" = type { [8 x %"struct.url::Component"], i32, i32, %"struct.url::Component" }
%"class.url::RawCanonOutputT" = type { %"class.url::CanonOutputT", [1024 x i8] }

$_ZN3url15RawCanonOutputTIcLi1024EED2Ev = comdat any

$_ZN3url15RawCanonOutputTIcLi1024EED0Ev = comdat any

$_ZN3url15RawCanonOutputTIcLi1024EE6ResizeEi = comdat any

$_ZTVN3url15RawCanonOutputTIcLi1024EEE = comdat any

@_ZN3url20kSharedCharTypeTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZTVN3url15RawCanonOutputTIcLi1024EEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIcLi1024EED2Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIcLi1024EED0Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*, i32)* @_ZN3url15RawCanonOutputTIcLi1024EE6ResizeEi to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url17AppendIPv4AddressEPKhPNS_12CanonOutputTIcEE(i8* nocapture readonly, %"class.url::CanonOutputT"*) local_unnamed_addr #0 {
  %3 = alloca [16 x i8], align 16
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %5 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %1, i64 0, i32 2
  %7 = bitcast %"class.url::CanonOutputT"* %1 to void (%"class.url::CanonOutputT"*, i32)***
  %8 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %1, i64 0, i32 1
  br label %10

9:                                                ; preds = %87, %22
  ret void

10:                                               ; preds = %87, %2
  %11 = phi i64 [ 0, %2 ], [ %88, %87 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #7
  %12 = getelementptr inbounds i8, i8* %0, i64 %11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 16, i1 false)
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = call i32 @_ZN3url7_itoa_sEiPcmi(i32 %14, i8* nonnull %4, i64 16, i32 10) #7
  %16 = load i8, i8* %4, align 16
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  %19 = load i32, i32* %5, align 4
  br label %23

20:                                               ; preds = %56, %10
  %21 = icmp eq i64 %11, 3
  br i1 %21, label %22, label %62

22:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #7
  br label %9

23:                                               ; preds = %18, %56
  %24 = phi i32 [ %19, %18 ], [ %57, %56 ]
  %25 = phi i64 [ 0, %18 ], [ %58, %56 ]
  %26 = phi i8 [ %16, %18 ], [ %60, %56 ]
  %27 = load i32, i32* %6, align 8
  %28 = icmp slt i32 %24, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %23
  %30 = load i8*, i8** %8, align 8
  %31 = sext i32 %24 to i64
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  store i8 %26, i8* %32, align 1
  %33 = load i32, i32* %5, align 4
  %34 = add nsw i32 %33, 1
  br label %54

35:                                               ; preds = %23
  %36 = icmp eq i32 %27, 0
  %37 = select i1 %36, i32 16, i32 %27
  br label %38

38:                                               ; preds = %35, %41
  %39 = phi i32 [ %42, %41 ], [ %37, %35 ]
  %40 = icmp sgt i32 %39, 1073741823
  br i1 %40, label %56, label %41

41:                                               ; preds = %38
  %42 = shl nsw i32 %39, 1
  %43 = icmp sgt i32 %42, %27
  br i1 %43, label %44, label %38

44:                                               ; preds = %41
  %45 = load void (%"class.url::CanonOutputT"*, i32)**, void (%"class.url::CanonOutputT"*, i32)*** %7, align 8
  %46 = getelementptr inbounds void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %45, i64 2
  %47 = load void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %46, align 8
  call void %47(%"class.url::CanonOutputT"* %1, i32 %42) #7
  %48 = load i8*, i8** %8, align 8
  %49 = load i32, i32* %5, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  store i8 %26, i8* %51, align 1
  %52 = load i32, i32* %5, align 4
  %53 = add nsw i32 %52, 1
  br label %54

54:                                               ; preds = %44, %29
  %55 = phi i32 [ %34, %29 ], [ %53, %44 ]
  store i32 %55, i32* %5, align 4
  br label %56

56:                                               ; preds = %38, %54
  %57 = phi i32 [ %55, %54 ], [ %24, %38 ]
  %58 = add nuw i64 %25, 1
  %59 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %20, label %23

62:                                               ; preds = %20
  %63 = load i32, i32* %5, align 4
  %64 = load i32, i32* %6, align 8
  %65 = icmp slt i32 %63, %64
  br i1 %65, label %80, label %66

66:                                               ; preds = %62
  %67 = icmp eq i32 %64, 0
  %68 = select i1 %67, i32 16, i32 %64
  br label %69

69:                                               ; preds = %66, %72
  %70 = phi i32 [ %73, %72 ], [ %68, %66 ]
  %71 = icmp sgt i32 %70, 1073741823
  br i1 %71, label %87, label %72

72:                                               ; preds = %69
  %73 = shl nsw i32 %70, 1
  %74 = icmp sgt i32 %73, %64
  br i1 %74, label %75, label %69

75:                                               ; preds = %72
  %76 = load void (%"class.url::CanonOutputT"*, i32)**, void (%"class.url::CanonOutputT"*, i32)*** %7, align 8
  %77 = getelementptr inbounds void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %76, i64 2
  %78 = load void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %77, align 8
  call void %78(%"class.url::CanonOutputT"* %1, i32 %73) #7
  %79 = load i32, i32* %5, align 4
  br label %80

80:                                               ; preds = %62, %75
  %81 = phi i32 [ %79, %75 ], [ %63, %62 ]
  %82 = load i8*, i8** %8, align 8
  %83 = sext i32 %81 to i64
  %84 = getelementptr inbounds i8, i8* %82, i64 %83
  store i8 46, i8* %84, align 1
  %85 = load i32, i32* %5, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %5, align 4
  br label %87

87:                                               ; preds = %69, %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #7
  %88 = add nuw nsw i64 %11, 1
  %89 = icmp eq i64 %88, 4
  br i1 %89, label %9, label %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url17AppendIPv6AddressEPKhPNS_12CanonOutputTIcEE(i8* nocapture readonly, %"class.url::CanonOutputT"*) local_unnamed_addr #0 {
  %3 = alloca [5 x i8], align 1
  %4 = load i8, i8* %0, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6, %2
  br label %11

11:                                               ; preds = %10, %6
  %12 = phi i32 [ -1, %10 ], [ 2, %6 ]
  %13 = getelementptr inbounds i8, i8* %0, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %25

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8, i8* %0, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %16
  %21 = icmp ne i32 %12, -1
  %22 = select i1 %21, i32 0, i32 2
  %23 = add nsw i32 %12, 2
  %24 = select i1 %21, i32 %23, i32 2
  br label %25

25:                                               ; preds = %20, %16, %11
  %26 = phi i32 [ %24, %20 ], [ -1, %16 ], [ -1, %11 ]
  %27 = phi i32 [ %22, %20 ], [ 0, %16 ], [ 0, %11 ]
  %28 = getelementptr inbounds i8, i8* %0, i64 4
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %40

31:                                               ; preds = %25
  %32 = getelementptr inbounds i8, i8* %0, i64 5
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %31
  %36 = icmp ne i32 %26, -1
  %37 = select i1 %36, i32 %27, i32 4
  %38 = add nsw i32 %26, 2
  %39 = select i1 %36, i32 %38, i32 2
  br label %44

40:                                               ; preds = %31, %25
  %41 = icmp sgt i32 %26, 2
  %42 = select i1 %41, i32 %27, i32 0
  %43 = select i1 %41, i32 %26, i32 -1
  br label %44

44:                                               ; preds = %40, %35
  %45 = phi i32 [ %39, %35 ], [ -1, %40 ]
  %46 = phi i32 [ %37, %35 ], [ 0, %40 ]
  %47 = phi i32 [ 0, %35 ], [ %42, %40 ]
  %48 = phi i32 [ -1, %35 ], [ %43, %40 ]
  %49 = getelementptr inbounds i8, i8* %0, i64 6
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %61

52:                                               ; preds = %44
  %53 = getelementptr inbounds i8, i8* %0, i64 7
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %52
  %57 = icmp ne i32 %45, -1
  %58 = select i1 %57, i32 %46, i32 6
  %59 = add nsw i32 %45, 2
  %60 = select i1 %57, i32 %59, i32 2
  br label %67

61:                                               ; preds = %52, %44
  %62 = icmp sgt i32 %45, 2
  %63 = icmp sgt i32 %45, %48
  %64 = and i1 %62, %63
  %65 = select i1 %64, i32 %46, i32 %47
  %66 = select i1 %64, i32 %45, i32 %48
  br label %67

67:                                               ; preds = %61, %56
  %68 = phi i32 [ %60, %56 ], [ -1, %61 ]
  %69 = phi i32 [ %58, %56 ], [ 0, %61 ]
  %70 = phi i32 [ %47, %56 ], [ %65, %61 ]
  %71 = phi i32 [ %48, %56 ], [ %66, %61 ]
  %72 = getelementptr inbounds i8, i8* %0, i64 8
  %73 = load i8, i8* %72, align 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %84

75:                                               ; preds = %67
  %76 = getelementptr inbounds i8, i8* %0, i64 9
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = icmp ne i32 %68, -1
  %81 = select i1 %80, i32 %69, i32 8
  %82 = add nsw i32 %68, 2
  %83 = select i1 %80, i32 %82, i32 2
  br label %90

84:                                               ; preds = %75, %67
  %85 = icmp sgt i32 %68, 2
  %86 = icmp sgt i32 %68, %71
  %87 = and i1 %85, %86
  %88 = select i1 %87, i32 %69, i32 %70
  %89 = select i1 %87, i32 %68, i32 %71
  br label %90

90:                                               ; preds = %84, %79
  %91 = phi i32 [ %83, %79 ], [ -1, %84 ]
  %92 = phi i32 [ %81, %79 ], [ 0, %84 ]
  %93 = phi i32 [ %70, %79 ], [ %88, %84 ]
  %94 = phi i32 [ %71, %79 ], [ %89, %84 ]
  %95 = getelementptr inbounds i8, i8* %0, i64 10
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %107

98:                                               ; preds = %90
  %99 = getelementptr inbounds i8, i8* %0, i64 11
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %107

102:                                              ; preds = %98
  %103 = icmp ne i32 %91, -1
  %104 = select i1 %103, i32 %92, i32 10
  %105 = add nsw i32 %91, 2
  %106 = select i1 %103, i32 %105, i32 2
  br label %113

107:                                              ; preds = %98, %90
  %108 = icmp sgt i32 %91, 2
  %109 = icmp sgt i32 %91, %94
  %110 = and i1 %108, %109
  %111 = select i1 %110, i32 %92, i32 %93
  %112 = select i1 %110, i32 %91, i32 %94
  br label %113

113:                                              ; preds = %107, %102
  %114 = phi i32 [ %106, %102 ], [ -1, %107 ]
  %115 = phi i32 [ %104, %102 ], [ 0, %107 ]
  %116 = phi i32 [ %93, %102 ], [ %111, %107 ]
  %117 = phi i32 [ %94, %102 ], [ %112, %107 ]
  %118 = getelementptr inbounds i8, i8* %0, i64 12
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %130

121:                                              ; preds = %113
  %122 = getelementptr inbounds i8, i8* %0, i64 13
  %123 = load i8, i8* %122, align 1
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %130

125:                                              ; preds = %121
  %126 = icmp ne i32 %114, -1
  %127 = select i1 %126, i32 %115, i32 12
  %128 = add nsw i32 %114, 2
  %129 = select i1 %126, i32 %128, i32 2
  br label %136

130:                                              ; preds = %121, %113
  %131 = icmp sgt i32 %114, 2
  %132 = icmp sgt i32 %114, %117
  %133 = and i1 %131, %132
  %134 = select i1 %133, i32 %115, i32 %116
  %135 = select i1 %133, i32 %114, i32 %117
  br label %136

136:                                              ; preds = %130, %125
  %137 = phi i32 [ %129, %125 ], [ -1, %130 ]
  %138 = phi i32 [ %127, %125 ], [ 0, %130 ]
  %139 = phi i32 [ %116, %125 ], [ %134, %130 ]
  %140 = phi i32 [ %117, %125 ], [ %135, %130 ]
  %141 = getelementptr inbounds i8, i8* %0, i64 14
  %142 = load i8, i8* %141, align 1
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %153

144:                                              ; preds = %136
  %145 = getelementptr inbounds i8, i8* %0, i64 15
  %146 = load i8, i8* %145, align 1
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %148, label %153

148:                                              ; preds = %144
  %149 = icmp ne i32 %137, -1
  %150 = select i1 %149, i32 %138, i32 14
  %151 = add nsw i32 %137, 2
  %152 = select i1 %149, i32 %151, i32 2
  br label %153

153:                                              ; preds = %136, %144, %148
  %154 = phi i32 [ %150, %148 ], [ %138, %144 ], [ %138, %136 ]
  %155 = phi i32 [ %152, %148 ], [ %137, %144 ], [ %137, %136 ]
  %156 = icmp sgt i32 %155, 2
  %157 = icmp sgt i32 %155, %140
  %158 = and i1 %156, %157
  %159 = select i1 %158, i32 %154, i32 %139
  %160 = select i1 %158, i32 %155, i32 %140
  %161 = icmp sgt i32 %160, 0
  %162 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 0
  %163 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %1, i64 0, i32 3
  %164 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %1, i64 0, i32 2
  %165 = bitcast %"class.url::CanonOutputT"* %1 to void (%"class.url::CanonOutputT"*, i32)***
  %166 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %1, i64 0, i32 1
  %167 = add nsw i32 %160, %159
  %168 = icmp eq i32 %159, 0
  br label %170

169:                                              ; preds = %322
  ret void

170:                                              ; preds = %153, %322
  %171 = phi i32 [ 0, %153 ], [ %323, %322 ]
  %172 = icmp eq i32 %171, %159
  %173 = and i1 %161, %172
  br i1 %173, label %174, label %233

174:                                              ; preds = %170
  %175 = load i32, i32* %163, align 4
  br i1 %168, label %176, label %204

176:                                              ; preds = %174
  %177 = load i32, i32* %164, align 8
  %178 = icmp slt i32 %175, %177
  br i1 %178, label %179, label %185

179:                                              ; preds = %176
  %180 = load i8*, i8** %166, align 8
  %181 = sext i32 %175 to i64
  %182 = getelementptr inbounds i8, i8* %180, i64 %181
  store i8 58, i8* %182, align 1
  %183 = load i32, i32* %163, align 4
  %184 = add nsw i32 %183, 1
  store i32 %184, i32* %163, align 4
  br label %204

185:                                              ; preds = %176
  %186 = icmp eq i32 %177, 0
  %187 = select i1 %186, i32 16, i32 %177
  br label %188

188:                                              ; preds = %185, %191
  %189 = phi i32 [ %192, %191 ], [ %187, %185 ]
  %190 = icmp sgt i32 %189, 1073741823
  br i1 %190, label %204, label %191

191:                                              ; preds = %188
  %192 = shl nsw i32 %189, 1
  %193 = icmp sgt i32 %192, %177
  br i1 %193, label %194, label %188

194:                                              ; preds = %191
  %195 = load void (%"class.url::CanonOutputT"*, i32)**, void (%"class.url::CanonOutputT"*, i32)*** %165, align 8
  %196 = getelementptr inbounds void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %195, i64 2
  %197 = load void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %196, align 8
  call void %197(%"class.url::CanonOutputT"* %1, i32 %192) #7
  %198 = load i8*, i8** %166, align 8
  %199 = load i32, i32* %163, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, i8* %198, i64 %200
  store i8 58, i8* %201, align 1
  %202 = load i32, i32* %163, align 4
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %163, align 4
  br label %204

204:                                              ; preds = %188, %174, %194, %179
  %205 = phi i32 [ %203, %194 ], [ %184, %179 ], [ %175, %174 ], [ %175, %188 ]
  %206 = load i32, i32* %164, align 8
  %207 = icmp slt i32 %205, %206
  br i1 %207, label %208, label %214

208:                                              ; preds = %204
  %209 = load i8*, i8** %166, align 8
  %210 = sext i32 %205 to i64
  %211 = getelementptr inbounds i8, i8* %209, i64 %210
  store i8 58, i8* %211, align 1
  %212 = load i32, i32* %163, align 4
  %213 = add nsw i32 %212, 1
  store i32 %213, i32* %163, align 4
  br label %322

214:                                              ; preds = %204
  %215 = icmp eq i32 %206, 0
  %216 = select i1 %215, i32 16, i32 %206
  br label %217

217:                                              ; preds = %214, %220
  %218 = phi i32 [ %221, %220 ], [ %216, %214 ]
  %219 = icmp sgt i32 %218, 1073741823
  br i1 %219, label %322, label %220

220:                                              ; preds = %217
  %221 = shl nsw i32 %218, 1
  %222 = icmp sgt i32 %221, %206
  br i1 %222, label %223, label %217

223:                                              ; preds = %220
  %224 = load void (%"class.url::CanonOutputT"*, i32)**, void (%"class.url::CanonOutputT"*, i32)*** %165, align 8
  %225 = getelementptr inbounds void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %224, i64 2
  %226 = load void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %225, align 8
  call void %226(%"class.url::CanonOutputT"* %1, i32 %221) #7
  %227 = load i8*, i8** %166, align 8
  %228 = load i32, i32* %163, align 4
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i8, i8* %227, i64 %229
  store i8 58, i8* %230, align 1
  %231 = load i32, i32* %163, align 4
  %232 = add nsw i32 %231, 1
  store i32 %232, i32* %163, align 4
  br label %322

233:                                              ; preds = %170
  %234 = sext i32 %171 to i64
  %235 = getelementptr inbounds i8, i8* %0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = shl nuw nsw i32 %237, 8
  %239 = add nsw i32 %171, 1
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i8, i8* %0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = or i32 %238, %243
  %245 = add nsw i32 %171, 2
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %162) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %162, i8 -86, i64 5, i1 false)
  %246 = call i32 @_ZN3url7_itoa_sEiPcmi(i32 %244, i8* nonnull %162, i64 5, i32 16) #7
  %247 = load i8, i8* %162, align 1
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %251, label %249

249:                                              ; preds = %233
  %250 = load i32, i32* %163, align 4
  br label %253

251:                                              ; preds = %286, %233
  %252 = icmp slt i32 %245, 16
  br i1 %252, label %292, label %321

253:                                              ; preds = %249, %286
  %254 = phi i32 [ %250, %249 ], [ %287, %286 ]
  %255 = phi i64 [ 0, %249 ], [ %288, %286 ]
  %256 = phi i8 [ %247, %249 ], [ %290, %286 ]
  %257 = load i32, i32* %164, align 8
  %258 = icmp slt i32 %254, %257
  br i1 %258, label %259, label %265

259:                                              ; preds = %253
  %260 = load i8*, i8** %166, align 8
  %261 = sext i32 %254 to i64
  %262 = getelementptr inbounds i8, i8* %260, i64 %261
  store i8 %256, i8* %262, align 1
  %263 = load i32, i32* %163, align 4
  %264 = add nsw i32 %263, 1
  br label %284

265:                                              ; preds = %253
  %266 = icmp eq i32 %257, 0
  %267 = select i1 %266, i32 16, i32 %257
  br label %268

268:                                              ; preds = %265, %271
  %269 = phi i32 [ %272, %271 ], [ %267, %265 ]
  %270 = icmp sgt i32 %269, 1073741823
  br i1 %270, label %286, label %271

271:                                              ; preds = %268
  %272 = shl nsw i32 %269, 1
  %273 = icmp sgt i32 %272, %257
  br i1 %273, label %274, label %268

274:                                              ; preds = %271
  %275 = load void (%"class.url::CanonOutputT"*, i32)**, void (%"class.url::CanonOutputT"*, i32)*** %165, align 8
  %276 = getelementptr inbounds void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %275, i64 2
  %277 = load void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %276, align 8
  call void %277(%"class.url::CanonOutputT"* %1, i32 %272) #7
  %278 = load i8*, i8** %166, align 8
  %279 = load i32, i32* %163, align 4
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds i8, i8* %278, i64 %280
  store i8 %256, i8* %281, align 1
  %282 = load i32, i32* %163, align 4
  %283 = add nsw i32 %282, 1
  br label %284

284:                                              ; preds = %274, %259
  %285 = phi i32 [ %264, %259 ], [ %283, %274 ]
  store i32 %285, i32* %163, align 4
  br label %286

286:                                              ; preds = %268, %284
  %287 = phi i32 [ %285, %284 ], [ %254, %268 ]
  %288 = add nuw i64 %255, 1
  %289 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 %288
  %290 = load i8, i8* %289, align 1
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %251, label %253

292:                                              ; preds = %251
  %293 = load i32, i32* %163, align 4
  %294 = load i32, i32* %164, align 8
  %295 = icmp slt i32 %293, %294
  br i1 %295, label %296, label %302

296:                                              ; preds = %292
  %297 = load i8*, i8** %166, align 8
  %298 = sext i32 %293 to i64
  %299 = getelementptr inbounds i8, i8* %297, i64 %298
  store i8 58, i8* %299, align 1
  %300 = load i32, i32* %163, align 4
  %301 = add nsw i32 %300, 1
  store i32 %301, i32* %163, align 4
  br label %321

302:                                              ; preds = %292
  %303 = icmp eq i32 %294, 0
  %304 = select i1 %303, i32 16, i32 %294
  br label %305

305:                                              ; preds = %302, %308
  %306 = phi i32 [ %309, %308 ], [ %304, %302 ]
  %307 = icmp sgt i32 %306, 1073741823
  br i1 %307, label %321, label %308

308:                                              ; preds = %305
  %309 = shl nsw i32 %306, 1
  %310 = icmp sgt i32 %309, %294
  br i1 %310, label %311, label %305

311:                                              ; preds = %308
  %312 = load void (%"class.url::CanonOutputT"*, i32)**, void (%"class.url::CanonOutputT"*, i32)*** %165, align 8
  %313 = getelementptr inbounds void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %312, i64 2
  %314 = load void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %313, align 8
  call void %314(%"class.url::CanonOutputT"* %1, i32 %309) #7
  %315 = load i8*, i8** %166, align 8
  %316 = load i32, i32* %163, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds i8, i8* %315, i64 %317
  store i8 58, i8* %318, align 1
  %319 = load i32, i32* %163, align 4
  %320 = add nsw i32 %319, 1
  store i32 %320, i32* %163, align 4
  br label %321

321:                                              ; preds = %305, %311, %296, %251
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %162) #7
  br label %322

322:                                              ; preds = %217, %223, %208, %321
  %323 = phi i32 [ %245, %321 ], [ %167, %208 ], [ %167, %223 ], [ %167, %217 ]
  %324 = icmp slt i32 %323, 15
  br i1 %324, label %170, label %169
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3url18FindIPv4ComponentsEPKcRKNS_9ComponentEPS2_(i8* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), %"struct.url::Component"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %117

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, %5
  %11 = sext i32 %10 to i64
  %12 = sext i32 %9 to i64
  br label %13

13:                                               ; preds = %7, %48
  %14 = phi i64 [ %49, %48 ], [ %12, %7 ]
  %15 = icmp sge i64 %14, %11
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, i8* %0, i64 %14
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 46
  br i1 %19, label %20, label %40

20:                                               ; preds = %16, %13
  %21 = trunc i64 %14 to i32
  %22 = sub nsw i32 %21, %9
  %23 = bitcast %"struct.url::Component"* %2 to i64*
  %24 = zext i32 %22 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %9 to i64
  %27 = or i64 %25, %26
  store i64 %27, i64* %23, align 4
  %28 = add i64 %14, 1
  %29 = icmp eq i32 %22, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %198, %167, %136, %20
  %31 = phi i32 [ 1, %20 ], [ 2, %136 ], [ 3, %167 ], [ 4, %198 ]
  %32 = phi i1 [ true, %20 ], [ false, %136 ], [ false, %167 ], [ false, %198 ]
  %33 = phi i64 [ %14, %20 ], [ %120, %136 ], [ %151, %167 ], [ %182, %198 ]
  %34 = trunc i64 %33 to i32
  %35 = icmp sgt i32 %10, %34
  %36 = or i1 %32, %35
  br i1 %36, label %117, label %50

37:                                               ; preds = %20
  br i1 %15, label %50, label %38

38:                                               ; preds = %37
  %39 = trunc i64 %28 to i32
  br label %119

40:                                               ; preds = %16
  %41 = icmp slt i8 %18, 0
  br i1 %41, label %117, label %42

42:                                               ; preds = %40
  %43 = zext i8 %18 to i64
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = and i8 %45, 4
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %117, label %48

48:                                               ; preds = %42
  %49 = add nsw i64 %14, 1
  br label %13

50:                                               ; preds = %37, %147, %178, %208, %30
  %51 = phi i32 [ %31, %30 ], [ 1, %37 ], [ 2, %147 ], [ 3, %178 ], [ 4, %208 ]
  %52 = icmp slt i32 %51, 4
  br i1 %52, label %53, label %117

53:                                               ; preds = %50
  %54 = sext i32 %51 to i64
  %55 = sub nsw i64 4, %54
  %56 = icmp ult i64 %55, 4
  br i1 %56, label %109, label %57

57:                                               ; preds = %53
  %58 = and i64 %55, -4
  %59 = add nsw i64 %58, %54
  %60 = add nuw nsw i64 %58, -4
  %61 = lshr exact i64 %60, 2
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = sub nsw i64 %62, %63
  br label %65

65:                                               ; preds = %65, %57
  %66 = phi i64 [ 0, %57 ], [ %91, %65 ]
  %67 = phi i64 [ %64, %57 ], [ %92, %65 ]
  %68 = add i64 %66, %54
  %69 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 %68
  %70 = bitcast %"struct.url::Component"* %69 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %70, align 4
  %71 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %69, i64 2
  %72 = bitcast %"struct.url::Component"* %71 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %72, align 4
  %73 = or i64 %66, 4
  %74 = add i64 %73, %54
  %75 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 %74
  %76 = bitcast %"struct.url::Component"* %75 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %76, align 4
  %77 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %75, i64 2
  %78 = bitcast %"struct.url::Component"* %77 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %78, align 4
  %79 = or i64 %66, 8
  %80 = add i64 %79, %54
  %81 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 %80
  %82 = bitcast %"struct.url::Component"* %81 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %82, align 4
  %83 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %81, i64 2
  %84 = bitcast %"struct.url::Component"* %83 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %84, align 4
  %85 = or i64 %66, 12
  %86 = add i64 %85, %54
  %87 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 %86
  %88 = bitcast %"struct.url::Component"* %87 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %88, align 4
  %89 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %87, i64 2
  %90 = bitcast %"struct.url::Component"* %89 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %90, align 4
  %91 = add i64 %66, 16
  %92 = add i64 %67, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %65, !llvm.loop !2

94:                                               ; preds = %65
  %95 = icmp eq i64 %63, 0
  br i1 %95, label %107, label %96

96:                                               ; preds = %94, %96
  %97 = phi i64 [ %104, %96 ], [ %91, %94 ]
  %98 = phi i64 [ %105, %96 ], [ %63, %94 ]
  %99 = add i64 %97, %54
  %100 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 %99
  %101 = bitcast %"struct.url::Component"* %100 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %101, align 4
  %102 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %100, i64 2
  %103 = bitcast %"struct.url::Component"* %102 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %103, align 4
  %104 = add i64 %97, 4
  %105 = add i64 %98, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %96, !llvm.loop !4

107:                                              ; preds = %96, %94
  %108 = icmp eq i64 %55, %58
  br i1 %108, label %117, label %109

109:                                              ; preds = %107, %53
  %110 = phi i64 [ %54, %53 ], [ %59, %107 ]
  br label %111

111:                                              ; preds = %109, %111
  %112 = phi i64 [ %113, %111 ], [ %110, %109 ]
  %113 = add nsw i64 %112, 1
  %114 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 %112
  %115 = bitcast %"struct.url::Component"* %114 to i64*
  store i64 -4294967296, i64* %115, align 4
  %116 = icmp eq i64 %113, 4
  br i1 %116, label %117, label %111, !llvm.loop !6

117:                                              ; preds = %40, %42, %126, %128, %157, %159, %188, %190, %111, %107, %3, %30, %50, %209
  %118 = phi i1 [ %218, %209 ], [ false, %3 ], [ false, %30 ], [ true, %50 ], [ true, %107 ], [ true, %111 ], [ false, %190 ], [ false, %188 ], [ false, %159 ], [ false, %157 ], [ false, %128 ], [ false, %126 ], [ false, %42 ], [ false, %40 ]
  ret i1 %118

119:                                              ; preds = %134, %38
  %120 = phi i64 [ %135, %134 ], [ %28, %38 ]
  %121 = icmp sge i64 %120, %11
  br i1 %121, label %136, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds i8, i8* %0, i64 %120
  %124 = load i8, i8* %123, align 1
  %125 = icmp eq i8 %124, 46
  br i1 %125, label %136, label %126

126:                                              ; preds = %122
  %127 = icmp slt i8 %124, 0
  br i1 %127, label %117, label %128

128:                                              ; preds = %126
  %129 = zext i8 %124 to i64
  %130 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = and i8 %131, 4
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %117, label %134

134:                                              ; preds = %128
  %135 = add nsw i64 %120, 1
  br label %119

136:                                              ; preds = %122, %119
  %137 = trunc i64 %120 to i32
  %138 = sub nsw i32 %137, %39
  %139 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 1
  %140 = bitcast %"struct.url::Component"* %139 to i64*
  %141 = zext i32 %138 to i64
  %142 = shl nuw i64 %141, 32
  %143 = and i64 %28, 4294967295
  %144 = or i64 %142, %143
  store i64 %144, i64* %140, align 4
  %145 = add i64 %120, 1
  %146 = icmp eq i32 %138, 0
  br i1 %146, label %30, label %147

147:                                              ; preds = %136
  br i1 %121, label %50, label %148

148:                                              ; preds = %147
  %149 = trunc i64 %145 to i32
  br label %150

150:                                              ; preds = %165, %148
  %151 = phi i64 [ %166, %165 ], [ %145, %148 ]
  %152 = icmp sge i64 %151, %11
  br i1 %152, label %167, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds i8, i8* %0, i64 %151
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, 46
  br i1 %156, label %167, label %157

157:                                              ; preds = %153
  %158 = icmp slt i8 %155, 0
  br i1 %158, label %117, label %159

159:                                              ; preds = %157
  %160 = zext i8 %155 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = and i8 %162, 4
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %117, label %165

165:                                              ; preds = %159
  %166 = add nsw i64 %151, 1
  br label %150

167:                                              ; preds = %153, %150
  %168 = trunc i64 %151 to i32
  %169 = sub nsw i32 %168, %149
  %170 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 2
  %171 = bitcast %"struct.url::Component"* %170 to i64*
  %172 = zext i32 %169 to i64
  %173 = shl nuw i64 %172, 32
  %174 = and i64 %145, 4294967295
  %175 = or i64 %173, %174
  store i64 %175, i64* %171, align 4
  %176 = add i64 %151, 1
  %177 = icmp eq i32 %169, 0
  br i1 %177, label %30, label %178

178:                                              ; preds = %167
  br i1 %152, label %50, label %179

179:                                              ; preds = %178
  %180 = trunc i64 %176 to i32
  br label %181

181:                                              ; preds = %196, %179
  %182 = phi i64 [ %197, %196 ], [ %176, %179 ]
  %183 = icmp sge i64 %182, %11
  br i1 %183, label %198, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds i8, i8* %0, i64 %182
  %186 = load i8, i8* %185, align 1
  %187 = icmp eq i8 %186, 46
  br i1 %187, label %198, label %188

188:                                              ; preds = %184
  %189 = icmp slt i8 %186, 0
  br i1 %189, label %117, label %190

190:                                              ; preds = %188
  %191 = zext i8 %186 to i64
  %192 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %191
  %193 = load i8, i8* %192, align 1
  %194 = and i8 %193, 4
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %117, label %196

196:                                              ; preds = %190
  %197 = add nsw i64 %182, 1
  br label %181

198:                                              ; preds = %184, %181
  %199 = trunc i64 %182 to i32
  %200 = sub nsw i32 %199, %180
  %201 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 3
  %202 = bitcast %"struct.url::Component"* %201 to i64*
  %203 = zext i32 %200 to i64
  %204 = shl nuw i64 %203, 32
  %205 = and i64 %176, 4294967295
  %206 = or i64 %204, %205
  store i64 %206, i64* %202, align 4
  %207 = icmp eq i32 %200, 0
  br i1 %207, label %30, label %208

208:                                              ; preds = %198
  br i1 %183, label %50, label %209

209:                                              ; preds = %208
  %210 = trunc i64 %182 to i32
  %211 = add i32 %210, 1
  %212 = shl i64 %182, 32
  %213 = ashr exact i64 %212, 32
  %214 = getelementptr inbounds i8, i8* %0, i64 %213
  %215 = load i8, i8* %214, align 1
  %216 = icmp eq i8 %215, 46
  %217 = icmp eq i32 %10, %211
  %218 = and i1 %217, %216
  br label %117
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3url18FindIPv4ComponentsEPKDsRKNS_9ComponentEPS2_(i16* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), %"struct.url::Component"* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %118

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, %5
  %11 = sext i32 %10 to i64
  %12 = sext i32 %9 to i64
  br label %13

13:                                               ; preds = %7, %49
  %14 = phi i64 [ %50, %49 ], [ %12, %7 ]
  %15 = icmp sge i64 %14, %11
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds i16, i16* %0, i64 %14
  %18 = load i16, i16* %17, align 2
  %19 = icmp eq i16 %18, 46
  br i1 %19, label %20, label %40

20:                                               ; preds = %16, %13
  %21 = trunc i64 %14 to i32
  %22 = sub nsw i32 %21, %9
  %23 = bitcast %"struct.url::Component"* %2 to i64*
  %24 = zext i32 %22 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %9 to i64
  %27 = or i64 %25, %26
  store i64 %27, i64* %23, align 4
  %28 = add i64 %14, 1
  %29 = icmp eq i32 %22, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %202, %170, %138, %20
  %31 = phi i32 [ 1, %20 ], [ 2, %138 ], [ 3, %170 ], [ 4, %202 ]
  %32 = phi i1 [ true, %20 ], [ false, %138 ], [ false, %170 ], [ false, %202 ]
  %33 = phi i64 [ %14, %20 ], [ %121, %138 ], [ %153, %170 ], [ %185, %202 ]
  %34 = trunc i64 %33 to i32
  %35 = icmp sgt i32 %10, %34
  %36 = or i1 %32, %35
  br i1 %36, label %118, label %51

37:                                               ; preds = %20
  br i1 %15, label %51, label %38

38:                                               ; preds = %37
  %39 = trunc i64 %28 to i32
  br label %120

40:                                               ; preds = %16
  %41 = icmp ugt i16 %18, 127
  br i1 %41, label %118, label %42

42:                                               ; preds = %40
  %43 = and i16 %18, 255
  %44 = zext i16 %43 to i64
  %45 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = and i8 %46, 4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %118, label %49

49:                                               ; preds = %42
  %50 = add nsw i64 %14, 1
  br label %13

51:                                               ; preds = %37, %149, %181, %212, %30
  %52 = phi i32 [ %31, %30 ], [ 1, %37 ], [ 2, %149 ], [ 3, %181 ], [ 4, %212 ]
  %53 = icmp slt i32 %52, 4
  br i1 %53, label %54, label %118

54:                                               ; preds = %51
  %55 = sext i32 %52 to i64
  %56 = sub nsw i64 4, %55
  %57 = icmp ult i64 %56, 4
  br i1 %57, label %110, label %58

58:                                               ; preds = %54
  %59 = and i64 %56, -4
  %60 = add nsw i64 %59, %55
  %61 = add nuw nsw i64 %59, -4
  %62 = lshr exact i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = sub nsw i64 %63, %64
  br label %66

66:                                               ; preds = %66, %58
  %67 = phi i64 [ 0, %58 ], [ %92, %66 ]
  %68 = phi i64 [ %65, %58 ], [ %93, %66 ]
  %69 = add i64 %67, %55
  %70 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 %69
  %71 = bitcast %"struct.url::Component"* %70 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %71, align 4
  %72 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %70, i64 2
  %73 = bitcast %"struct.url::Component"* %72 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %73, align 4
  %74 = or i64 %67, 4
  %75 = add i64 %74, %55
  %76 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 %75
  %77 = bitcast %"struct.url::Component"* %76 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %77, align 4
  %78 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %76, i64 2
  %79 = bitcast %"struct.url::Component"* %78 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %79, align 4
  %80 = or i64 %67, 8
  %81 = add i64 %80, %55
  %82 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 %81
  %83 = bitcast %"struct.url::Component"* %82 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %83, align 4
  %84 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %82, i64 2
  %85 = bitcast %"struct.url::Component"* %84 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %85, align 4
  %86 = or i64 %67, 12
  %87 = add i64 %86, %55
  %88 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 %87
  %89 = bitcast %"struct.url::Component"* %88 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %89, align 4
  %90 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %88, i64 2
  %91 = bitcast %"struct.url::Component"* %90 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %91, align 4
  %92 = add i64 %67, 16
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %66, !llvm.loop !8

95:                                               ; preds = %66
  %96 = icmp eq i64 %64, 0
  br i1 %96, label %108, label %97

97:                                               ; preds = %95, %97
  %98 = phi i64 [ %105, %97 ], [ %92, %95 ]
  %99 = phi i64 [ %106, %97 ], [ %64, %95 ]
  %100 = add i64 %98, %55
  %101 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 %100
  %102 = bitcast %"struct.url::Component"* %101 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %102, align 4
  %103 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %101, i64 2
  %104 = bitcast %"struct.url::Component"* %103 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %104, align 4
  %105 = add i64 %98, 4
  %106 = add i64 %99, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %97, !llvm.loop !9

108:                                              ; preds = %97, %95
  %109 = icmp eq i64 %56, %59
  br i1 %109, label %118, label %110

110:                                              ; preds = %108, %54
  %111 = phi i64 [ %55, %54 ], [ %60, %108 ]
  br label %112

112:                                              ; preds = %110, %112
  %113 = phi i64 [ %114, %112 ], [ %111, %110 ]
  %114 = add nsw i64 %113, 1
  %115 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 %113
  %116 = bitcast %"struct.url::Component"* %115 to i64*
  store i64 -4294967296, i64* %116, align 4
  %117 = icmp eq i64 %114, 4
  br i1 %117, label %118, label %112, !llvm.loop !10

118:                                              ; preds = %40, %42, %127, %129, %159, %161, %191, %193, %112, %108, %3, %30, %51, %213
  %119 = phi i1 [ %222, %213 ], [ false, %3 ], [ false, %30 ], [ true, %51 ], [ true, %108 ], [ true, %112 ], [ false, %193 ], [ false, %191 ], [ false, %161 ], [ false, %159 ], [ false, %129 ], [ false, %127 ], [ false, %42 ], [ false, %40 ]
  ret i1 %119

120:                                              ; preds = %136, %38
  %121 = phi i64 [ %137, %136 ], [ %28, %38 ]
  %122 = icmp sge i64 %121, %11
  br i1 %122, label %138, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds i16, i16* %0, i64 %121
  %125 = load i16, i16* %124, align 2
  %126 = icmp eq i16 %125, 46
  br i1 %126, label %138, label %127

127:                                              ; preds = %123
  %128 = icmp ugt i16 %125, 127
  br i1 %128, label %118, label %129

129:                                              ; preds = %127
  %130 = and i16 %125, 255
  %131 = zext i16 %130 to i64
  %132 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = and i8 %133, 4
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %118, label %136

136:                                              ; preds = %129
  %137 = add nsw i64 %121, 1
  br label %120

138:                                              ; preds = %123, %120
  %139 = trunc i64 %121 to i32
  %140 = sub nsw i32 %139, %39
  %141 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 1
  %142 = bitcast %"struct.url::Component"* %141 to i64*
  %143 = zext i32 %140 to i64
  %144 = shl nuw i64 %143, 32
  %145 = and i64 %28, 4294967295
  %146 = or i64 %144, %145
  store i64 %146, i64* %142, align 4
  %147 = add i64 %121, 1
  %148 = icmp eq i32 %140, 0
  br i1 %148, label %30, label %149

149:                                              ; preds = %138
  br i1 %122, label %51, label %150

150:                                              ; preds = %149
  %151 = trunc i64 %147 to i32
  br label %152

152:                                              ; preds = %168, %150
  %153 = phi i64 [ %169, %168 ], [ %147, %150 ]
  %154 = icmp sge i64 %153, %11
  br i1 %154, label %170, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds i16, i16* %0, i64 %153
  %157 = load i16, i16* %156, align 2
  %158 = icmp eq i16 %157, 46
  br i1 %158, label %170, label %159

159:                                              ; preds = %155
  %160 = icmp ugt i16 %157, 127
  br i1 %160, label %118, label %161

161:                                              ; preds = %159
  %162 = and i16 %157, 255
  %163 = zext i16 %162 to i64
  %164 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = and i8 %165, 4
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %118, label %168

168:                                              ; preds = %161
  %169 = add nsw i64 %153, 1
  br label %152

170:                                              ; preds = %155, %152
  %171 = trunc i64 %153 to i32
  %172 = sub nsw i32 %171, %151
  %173 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 2
  %174 = bitcast %"struct.url::Component"* %173 to i64*
  %175 = zext i32 %172 to i64
  %176 = shl nuw i64 %175, 32
  %177 = and i64 %147, 4294967295
  %178 = or i64 %176, %177
  store i64 %178, i64* %174, align 4
  %179 = add i64 %153, 1
  %180 = icmp eq i32 %172, 0
  br i1 %180, label %30, label %181

181:                                              ; preds = %170
  br i1 %154, label %51, label %182

182:                                              ; preds = %181
  %183 = trunc i64 %179 to i32
  br label %184

184:                                              ; preds = %200, %182
  %185 = phi i64 [ %201, %200 ], [ %179, %182 ]
  %186 = icmp sge i64 %185, %11
  br i1 %186, label %202, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds i16, i16* %0, i64 %185
  %189 = load i16, i16* %188, align 2
  %190 = icmp eq i16 %189, 46
  br i1 %190, label %202, label %191

191:                                              ; preds = %187
  %192 = icmp ugt i16 %189, 127
  br i1 %192, label %118, label %193

193:                                              ; preds = %191
  %194 = and i16 %189, 255
  %195 = zext i16 %194 to i64
  %196 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = and i8 %197, 4
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %118, label %200

200:                                              ; preds = %193
  %201 = add nsw i64 %185, 1
  br label %184

202:                                              ; preds = %187, %184
  %203 = trunc i64 %185 to i32
  %204 = sub nsw i32 %203, %183
  %205 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 3
  %206 = bitcast %"struct.url::Component"* %205 to i64*
  %207 = zext i32 %204 to i64
  %208 = shl nuw i64 %207, 32
  %209 = and i64 %179, 4294967295
  %210 = or i64 %208, %209
  store i64 %210, i64* %206, align 4
  %211 = icmp eq i32 %204, 0
  br i1 %211, label %30, label %212

212:                                              ; preds = %202
  br i1 %186, label %51, label %213

213:                                              ; preds = %212
  %214 = trunc i64 %185 to i32
  %215 = add i32 %214, 1
  %216 = shl i64 %185, 32
  %217 = ashr exact i64 %216, 32
  %218 = getelementptr inbounds i16, i16* %0, i64 %217
  %219 = load i16, i16* %218, align 2
  %220 = icmp eq i16 %219, 46
  %221 = icmp eq i32 %10, %215
  %222 = and i1 %221, %220
  br label %118
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url21CanonicalizeIPAddressEPKcRKNS_9ComponentEPNS_12CanonOutputTIcEEPNS_13CanonHostInfoE(i8* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), %"class.url::CanonOutputT"*, %"struct.url::CanonHostInfo"* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 3, i64 0
  %6 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 1
  %7 = tail call i32 @_ZN3url19IPv4AddressToNumberEPKcRKNS_9ComponentEPhPi(i8* %0, %"struct.url::Component"* dereferenceable(8) %1, i8* %5, i32* %6) #7
  %8 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 0
  store i32 %7, i32* %8, align 4
  switch i32 %7, label %17 [
    i32 2, label %9
    i32 1, label %102
  ]

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %2, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 2, i32 0
  store i32 %11, i32* %12, align 4
  tail call void @_ZN3url17AppendIPv4AddressEPKhPNS_12CanonOutputTIcEE(i8* %5, %"class.url::CanonOutputT"* %2) #7
  %13 = load i32, i32* %10, align 4
  %14 = load i32, i32* %12, align 4
  %15 = sub nsw i32 %13, %14
  %16 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 2, i32 1
  store i32 %15, i32* %16, align 4
  br label %102

17:                                               ; preds = %4
  %18 = tail call zeroext i1 @_ZN3url19IPv6AddressToNumberEPKcRKNS_9ComponentEPh(i8* %0, %"struct.url::Component"* dereferenceable(8) %1, i8* %5) #7
  br i1 %18, label %39, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %38

25:                                               ; preds = %19
  %26 = add nsw i32 %23, %21
  %27 = sext i32 %21 to i64
  %28 = sext i32 %26 to i64
  br label %29

29:                                               ; preds = %35, %25
  %30 = phi i64 [ %27, %25 ], [ %36, %35 ]
  %31 = getelementptr inbounds i8, i8* %0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  switch i32 %33, label %35 [
    i32 91, label %34
    i32 93, label %34
    i32 58, label %34
  ]

34:                                               ; preds = %29, %29, %29
  store i32 1, i32* %8, align 4
  br label %102

35:                                               ; preds = %29
  %36 = add nsw i64 %30, 1
  %37 = icmp slt i64 %36, %28
  br i1 %37, label %29, label %38

38:                                               ; preds = %35, %19
  store i32 0, i32* %8, align 4
  br label %102

39:                                               ; preds = %17
  %40 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %2, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 2, i32 0
  store i32 %41, i32* %42, align 4
  %43 = load i32, i32* %40, align 4
  %44 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %2, i64 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = icmp slt i32 %43, %45
  br i1 %46, label %62, label %47

47:                                               ; preds = %39
  %48 = icmp eq i32 %45, 0
  %49 = select i1 %48, i32 16, i32 %45
  br label %50

50:                                               ; preds = %47, %53
  %51 = phi i32 [ %54, %53 ], [ %49, %47 ]
  %52 = icmp sgt i32 %51, 1073741823
  br i1 %52, label %70, label %53

53:                                               ; preds = %50
  %54 = shl nsw i32 %51, 1
  %55 = icmp sgt i32 %54, %45
  br i1 %55, label %56, label %50

56:                                               ; preds = %53
  %57 = bitcast %"class.url::CanonOutputT"* %2 to void (%"class.url::CanonOutputT"*, i32)***
  %58 = load void (%"class.url::CanonOutputT"*, i32)**, void (%"class.url::CanonOutputT"*, i32)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %58, i64 2
  %60 = load void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %59, align 8
  tail call void %60(%"class.url::CanonOutputT"* %2, i32 %54) #7
  %61 = load i32, i32* %40, align 4
  br label %62

62:                                               ; preds = %39, %56
  %63 = phi i32 [ %61, %56 ], [ %43, %39 ]
  %64 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %2, i64 0, i32 1
  %65 = load i8*, i8** %64, align 8
  %66 = sext i32 %63 to i64
  %67 = getelementptr inbounds i8, i8* %65, i64 %66
  store i8 91, i8* %67, align 1
  %68 = load i32, i32* %40, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %40, align 4
  br label %70

70:                                               ; preds = %50, %62
  tail call void @_ZN3url17AppendIPv6AddressEPKhPNS_12CanonOutputTIcEE(i8* %5, %"class.url::CanonOutputT"* %2) #7
  %71 = load i32, i32* %40, align 4
  %72 = load i32, i32* %44, align 8
  %73 = icmp slt i32 %71, %72
  br i1 %73, label %89, label %74

74:                                               ; preds = %70
  %75 = icmp eq i32 %72, 0
  %76 = select i1 %75, i32 16, i32 %72
  br label %77

77:                                               ; preds = %74, %80
  %78 = phi i32 [ %81, %80 ], [ %76, %74 ]
  %79 = icmp sgt i32 %78, 1073741823
  br i1 %79, label %97, label %80

80:                                               ; preds = %77
  %81 = shl nsw i32 %78, 1
  %82 = icmp sgt i32 %81, %72
  br i1 %82, label %83, label %77

83:                                               ; preds = %80
  %84 = bitcast %"class.url::CanonOutputT"* %2 to void (%"class.url::CanonOutputT"*, i32)***
  %85 = load void (%"class.url::CanonOutputT"*, i32)**, void (%"class.url::CanonOutputT"*, i32)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %85, i64 2
  %87 = load void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %86, align 8
  tail call void %87(%"class.url::CanonOutputT"* %2, i32 %81) #7
  %88 = load i32, i32* %40, align 4
  br label %89

89:                                               ; preds = %70, %83
  %90 = phi i32 [ %88, %83 ], [ %71, %70 ]
  %91 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %2, i64 0, i32 1
  %92 = load i8*, i8** %91, align 8
  %93 = sext i32 %90 to i64
  %94 = getelementptr inbounds i8, i8* %92, i64 %93
  store i8 93, i8* %94, align 1
  %95 = load i32, i32* %40, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %40, align 4
  br label %97

97:                                               ; preds = %77, %89
  %98 = phi i32 [ %96, %89 ], [ %71, %77 ]
  %99 = load i32, i32* %42, align 4
  %100 = sub nsw i32 %98, %99
  %101 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 2, i32 1
  store i32 %100, i32* %101, align 4
  store i32 3, i32* %8, align 4
  br label %102

102:                                              ; preds = %4, %9, %34, %38, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url21CanonicalizeIPAddressEPKDsRKNS_9ComponentEPNS_12CanonOutputTIcEEPNS_13CanonHostInfoE(i16* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), %"class.url::CanonOutputT"*, %"struct.url::CanonHostInfo"* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 3, i64 0
  %6 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 1
  %7 = tail call i32 @_ZN3url19IPv4AddressToNumberEPKDsRKNS_9ComponentEPhPi(i16* %0, %"struct.url::Component"* dereferenceable(8) %1, i8* %5, i32* %6) #7
  %8 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 0
  store i32 %7, i32* %8, align 4
  switch i32 %7, label %17 [
    i32 2, label %9
    i32 1, label %101
  ]

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %2, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 2, i32 0
  store i32 %11, i32* %12, align 4
  tail call void @_ZN3url17AppendIPv4AddressEPKhPNS_12CanonOutputTIcEE(i8* %5, %"class.url::CanonOutputT"* %2) #7
  %13 = load i32, i32* %10, align 4
  %14 = load i32, i32* %12, align 4
  %15 = sub nsw i32 %13, %14
  %16 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 2, i32 1
  store i32 %15, i32* %16, align 4
  br label %101

17:                                               ; preds = %4
  %18 = tail call zeroext i1 @_ZN3url19IPv6AddressToNumberEPKDsRKNS_9ComponentEPh(i16* %0, %"struct.url::Component"* dereferenceable(8) %1, i8* %5) #7
  br i1 %18, label %38, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %19
  %26 = add nsw i32 %23, %21
  %27 = sext i32 %21 to i64
  %28 = sext i32 %26 to i64
  br label %29

29:                                               ; preds = %34, %25
  %30 = phi i64 [ %27, %25 ], [ %35, %34 ]
  %31 = getelementptr inbounds i16, i16* %0, i64 %30
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %34 [
    i16 91, label %33
    i16 93, label %33
    i16 58, label %33
  ]

33:                                               ; preds = %29, %29, %29
  store i32 1, i32* %8, align 4
  br label %101

34:                                               ; preds = %29
  %35 = add nsw i64 %30, 1
  %36 = icmp slt i64 %35, %28
  br i1 %36, label %29, label %37

37:                                               ; preds = %34, %19
  store i32 0, i32* %8, align 4
  br label %101

38:                                               ; preds = %17
  %39 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %2, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 2, i32 0
  store i32 %40, i32* %41, align 4
  %42 = load i32, i32* %39, align 4
  %43 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %2, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = icmp slt i32 %42, %44
  br i1 %45, label %61, label %46

46:                                               ; preds = %38
  %47 = icmp eq i32 %44, 0
  %48 = select i1 %47, i32 16, i32 %44
  br label %49

49:                                               ; preds = %46, %52
  %50 = phi i32 [ %53, %52 ], [ %48, %46 ]
  %51 = icmp sgt i32 %50, 1073741823
  br i1 %51, label %69, label %52

52:                                               ; preds = %49
  %53 = shl nsw i32 %50, 1
  %54 = icmp sgt i32 %53, %44
  br i1 %54, label %55, label %49

55:                                               ; preds = %52
  %56 = bitcast %"class.url::CanonOutputT"* %2 to void (%"class.url::CanonOutputT"*, i32)***
  %57 = load void (%"class.url::CanonOutputT"*, i32)**, void (%"class.url::CanonOutputT"*, i32)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %57, i64 2
  %59 = load void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %58, align 8
  tail call void %59(%"class.url::CanonOutputT"* %2, i32 %53) #7
  %60 = load i32, i32* %39, align 4
  br label %61

61:                                               ; preds = %38, %55
  %62 = phi i32 [ %60, %55 ], [ %42, %38 ]
  %63 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %2, i64 0, i32 1
  %64 = load i8*, i8** %63, align 8
  %65 = sext i32 %62 to i64
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  store i8 91, i8* %66, align 1
  %67 = load i32, i32* %39, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %39, align 4
  br label %69

69:                                               ; preds = %49, %61
  tail call void @_ZN3url17AppendIPv6AddressEPKhPNS_12CanonOutputTIcEE(i8* %5, %"class.url::CanonOutputT"* %2) #7
  %70 = load i32, i32* %39, align 4
  %71 = load i32, i32* %43, align 8
  %72 = icmp slt i32 %70, %71
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = icmp eq i32 %71, 0
  %75 = select i1 %74, i32 16, i32 %71
  br label %76

76:                                               ; preds = %73, %79
  %77 = phi i32 [ %80, %79 ], [ %75, %73 ]
  %78 = icmp sgt i32 %77, 1073741823
  br i1 %78, label %96, label %79

79:                                               ; preds = %76
  %80 = shl nsw i32 %77, 1
  %81 = icmp sgt i32 %80, %71
  br i1 %81, label %82, label %76

82:                                               ; preds = %79
  %83 = bitcast %"class.url::CanonOutputT"* %2 to void (%"class.url::CanonOutputT"*, i32)***
  %84 = load void (%"class.url::CanonOutputT"*, i32)**, void (%"class.url::CanonOutputT"*, i32)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %84, i64 2
  %86 = load void (%"class.url::CanonOutputT"*, i32)*, void (%"class.url::CanonOutputT"*, i32)** %85, align 8
  tail call void %86(%"class.url::CanonOutputT"* %2, i32 %80) #7
  %87 = load i32, i32* %39, align 4
  br label %88

88:                                               ; preds = %69, %82
  %89 = phi i32 [ %87, %82 ], [ %70, %69 ]
  %90 = getelementptr inbounds %"class.url::CanonOutputT", %"class.url::CanonOutputT"* %2, i64 0, i32 1
  %91 = load i8*, i8** %90, align 8
  %92 = sext i32 %89 to i64
  %93 = getelementptr inbounds i8, i8* %91, i64 %92
  store i8 93, i8* %93, align 1
  %94 = load i32, i32* %39, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %39, align 4
  br label %96

96:                                               ; preds = %76, %88
  %97 = phi i32 [ %95, %88 ], [ %70, %76 ]
  %98 = load i32, i32* %41, align 4
  %99 = sub nsw i32 %97, %98
  %100 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %3, i64 0, i32 2, i32 1
  store i32 %99, i32* %100, align 4
  store i32 3, i32* %8, align 4
  br label %101

101:                                              ; preds = %4, %9, %33, %37, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3url19IPv4AddressToNumberEPKcRKNS_9ComponentEPhPi(i8* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), i8* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = alloca [17 x i8], align 16
  %6 = alloca [4 x %"struct.url::Component"], align 16
  %7 = alloca [4 x i32], align 16
  %8 = bitcast [4 x %"struct.url::Component"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #7
  %9 = bitcast [4 x %"struct.url::Component"]* %6 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %9, align 16
  %10 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 2, i32 0
  %11 = bitcast i32* %10 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %11, align 16
  %12 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %270

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, %13
  %19 = sext i32 %18 to i64
  %20 = sext i32 %17 to i64
  br label %21

21:                                               ; preds = %15, %56
  %22 = phi i64 [ %57, %56 ], [ %20, %15 ]
  %23 = icmp sge i64 %22, %19
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %0, i64 %22
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 46
  br i1 %27, label %28, label %48

28:                                               ; preds = %24, %21
  %29 = trunc i64 %22 to i32
  %30 = sub nsw i32 %29, %17
  %31 = bitcast [4 x %"struct.url::Component"]* %6 to i64*
  %32 = zext i32 %30 to i64
  %33 = shl nuw i64 %32, 32
  %34 = zext i32 %17 to i64
  %35 = or i64 %33, %34
  store i64 %35, i64* %31, align 16
  %36 = add i64 %22, 1
  %37 = icmp eq i32 %30, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %351, %320, %289, %28
  %39 = phi i32 [ 1, %28 ], [ 2, %289 ], [ 3, %320 ], [ 4, %351 ]
  %40 = phi i1 [ true, %28 ], [ false, %289 ], [ false, %320 ], [ false, %351 ]
  %41 = phi i64 [ %22, %28 ], [ %273, %289 ], [ %304, %320 ], [ %335, %351 ]
  %42 = trunc i64 %41 to i32
  %43 = icmp sgt i32 %18, %42
  %44 = or i1 %40, %43
  br i1 %44, label %270, label %58

45:                                               ; preds = %28
  br i1 %23, label %58, label %46

46:                                               ; preds = %45
  %47 = trunc i64 %36 to i32
  br label %272

48:                                               ; preds = %24
  %49 = icmp slt i8 %26, 0
  br i1 %49, label %270, label %50

50:                                               ; preds = %48
  %51 = zext i8 %26 to i64
  %52 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = and i8 %53, 4
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %270, label %56

56:                                               ; preds = %50
  %57 = add nsw i64 %22, 1
  br label %21

58:                                               ; preds = %45, %300, %331, %361, %38
  %59 = phi i32 [ %39, %38 ], [ 1, %45 ], [ 2, %300 ], [ 3, %331 ], [ 4, %361 ]
  %60 = icmp slt i32 %59, 4
  br i1 %60, label %61, label %125

61:                                               ; preds = %58
  %62 = sext i32 %59 to i64
  %63 = sub nsw i64 4, %62
  %64 = icmp ult i64 %63, 4
  br i1 %64, label %117, label %65

65:                                               ; preds = %61
  %66 = and i64 %63, -4
  %67 = add nsw i64 %66, %62
  %68 = add nuw nsw i64 %66, -4
  %69 = lshr exact i64 %68, 2
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = sub nsw i64 %70, %71
  br label %73

73:                                               ; preds = %73, %65
  %74 = phi i64 [ 0, %65 ], [ %99, %73 ]
  %75 = phi i64 [ %72, %65 ], [ %100, %73 ]
  %76 = add i64 %74, %62
  %77 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %76
  %78 = bitcast %"struct.url::Component"* %77 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %78, align 8
  %79 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %77, i64 2
  %80 = bitcast %"struct.url::Component"* %79 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %80, align 8
  %81 = or i64 %74, 4
  %82 = add i64 %81, %62
  %83 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %82
  %84 = bitcast %"struct.url::Component"* %83 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %84, align 8
  %85 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %83, i64 2
  %86 = bitcast %"struct.url::Component"* %85 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %86, align 8
  %87 = or i64 %74, 8
  %88 = add i64 %87, %62
  %89 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %88
  %90 = bitcast %"struct.url::Component"* %89 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %90, align 8
  %91 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %89, i64 2
  %92 = bitcast %"struct.url::Component"* %91 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %92, align 8
  %93 = or i64 %74, 12
  %94 = add i64 %93, %62
  %95 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %94
  %96 = bitcast %"struct.url::Component"* %95 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %96, align 8
  %97 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %95, i64 2
  %98 = bitcast %"struct.url::Component"* %97 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %98, align 8
  %99 = add i64 %74, 16
  %100 = add i64 %75, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %73, !llvm.loop !11

102:                                              ; preds = %73
  %103 = icmp eq i64 %71, 0
  br i1 %103, label %115, label %104

104:                                              ; preds = %102, %104
  %105 = phi i64 [ %112, %104 ], [ %99, %102 ]
  %106 = phi i64 [ %113, %104 ], [ %71, %102 ]
  %107 = add i64 %105, %62
  %108 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %107
  %109 = bitcast %"struct.url::Component"* %108 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %109, align 8
  %110 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %108, i64 2
  %111 = bitcast %"struct.url::Component"* %110 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %111, align 8
  %112 = add i64 %105, 4
  %113 = add i64 %106, -1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %104, !llvm.loop !12

115:                                              ; preds = %104, %102
  %116 = icmp eq i64 %63, %66
  br i1 %116, label %125, label %117

117:                                              ; preds = %115, %61
  %118 = phi i64 [ %62, %61 ], [ %67, %115 ]
  br label %119

119:                                              ; preds = %117, %119
  %120 = phi i64 [ %121, %119 ], [ %118, %117 ]
  %121 = add nsw i64 %120, 1
  %122 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %120
  %123 = bitcast %"struct.url::Component"* %122 to i64*
  store i64 -4294967296, i64* %123, align 8
  %124 = icmp eq i64 %121, 4
  br i1 %124, label %125, label %119, !llvm.loop !13

125:                                              ; preds = %119, %115, %362, %58
  %126 = bitcast [4 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #7
  %127 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %126, i8 -86, i64 16, i1 false) #7
  br label %128

128:                                              ; preds = %220, %125
  %129 = phi i64 [ 0, %125 ], [ %223, %220 ]
  %130 = phi i8 [ 0, %125 ], [ %222, %220 ]
  %131 = phi i32 [ 0, %125 ], [ %221, %220 ]
  %132 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %129, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = icmp slt i32 %133, 1
  br i1 %134, label %220, label %135

135:                                              ; preds = %128
  %136 = sext i32 %131 to i64
  %137 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %136
  %138 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %129, i32 0
  %139 = load i32, i32* %138, align 8
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, i8* %0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = icmp eq i8 %142, 48
  br i1 %143, label %144, label %152

144:                                              ; preds = %135
  %145 = icmp eq i32 %133, 1
  br i1 %145, label %156, label %146

146:                                              ; preds = %144
  %147 = add nsw i32 %139, 1
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %0, i64 %148
  %150 = load i8, i8* %149, align 1
  switch i8 %150, label %151 [
    i8 88, label %152
    i8 120, label %152
  ]

151:                                              ; preds = %146
  br label %152

152:                                              ; preds = %151, %146, %146, %135
  %153 = phi i32 [ 32, %151 ], [ 8, %146 ], [ 8, %146 ], [ 16, %135 ]
  %154 = phi i32 [ 1, %151 ], [ 2, %146 ], [ 2, %146 ], [ 0, %135 ]
  %155 = icmp slt i32 %154, %133
  br i1 %155, label %156, label %174

156:                                              ; preds = %152, %144
  %157 = phi i32 [ %154, %152 ], [ 0, %144 ]
  %158 = phi i32 [ %153, %152 ], [ 16, %144 ]
  %159 = zext i32 %157 to i64
  %160 = sext i32 %133 to i64
  br label %161

161:                                              ; preds = %168, %156
  %162 = phi i64 [ %159, %156 ], [ %169, %168 ]
  %163 = phi i32 [ %157, %156 ], [ %170, %168 ]
  %164 = add nsw i64 %162, %140
  %165 = getelementptr inbounds i8, i8* %0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = icmp eq i8 %166, 48
  br i1 %167, label %168, label %172

168:                                              ; preds = %161
  %169 = add nuw nsw i64 %162, 1
  %170 = add nuw nsw i32 %163, 1
  %171 = icmp slt i64 %169, %160
  br i1 %171, label %161, label %174

172:                                              ; preds = %161
  %173 = trunc i64 %162 to i32
  br label %174

174:                                              ; preds = %168, %172, %152
  %175 = phi i32 [ %153, %152 ], [ %158, %172 ], [ %158, %168 ]
  %176 = phi i32 [ %154, %152 ], [ %173, %172 ], [ %170, %168 ]
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %127) #7
  %177 = add i32 %176, %139
  %178 = add i32 %139, %133
  %179 = icmp slt i32 %177, %178
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %127, i8 -86, i64 17, i1 false) #7
  br i1 %179, label %180, label %204

180:                                              ; preds = %174
  %181 = sext i32 %177 to i64
  br label %182

182:                                              ; preds = %199, %180
  %183 = phi i64 [ %181, %180 ], [ %201, %199 ]
  %184 = phi i32 [ 0, %180 ], [ %200, %199 ]
  %185 = getelementptr inbounds i8, i8* %0, i64 %183
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i64
  %188 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = and i32 %175, %190
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %225, label %193

193:                                              ; preds = %182
  %194 = icmp slt i32 %184, 16
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = add nsw i32 %184, 1
  %197 = sext i32 %184 to i64
  %198 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 %197
  store i8 %186, i8* %198, align 1
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %184, %193 ], [ %196, %195 ]
  %201 = add nsw i64 %183, 1
  %202 = trunc i64 %201 to i32
  %203 = icmp eq i32 %178, %202
  br i1 %203, label %204, label %182

204:                                              ; preds = %199, %174
  %205 = phi i32 [ 0, %174 ], [ %200, %199 ]
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 %206
  store i8 0, i8* %207, align 1
  switch i32 %175, label %210 [
    i32 8, label %211
    i32 16, label %208
    i32 32, label %209
  ]

208:                                              ; preds = %204
  br label %211

209:                                              ; preds = %204
  br label %211

210:                                              ; preds = %204
  br label %211

211:                                              ; preds = %210, %209, %208, %204
  %212 = phi i32 [ 0, %210 ], [ 8, %209 ], [ 10, %208 ], [ 16, %204 ]
  %213 = call i64 @strtoull(i8* nocapture nonnull %127, i8** null, i32 %212) #7
  %214 = icmp ugt i64 %213, 4294967295
  br i1 %214, label %217, label %215

215:                                              ; preds = %211
  %216 = trunc i64 %213 to i32
  store i32 %216, i32* %137, align 4
  br label %217

217:                                              ; preds = %211, %215
  %218 = phi i8 [ %130, %215 ], [ 1, %211 ]
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %127) #7
  %219 = add nsw i32 %131, 1
  br label %220

220:                                              ; preds = %217, %128
  %221 = phi i32 [ %131, %128 ], [ %219, %217 ]
  %222 = phi i8 [ %130, %128 ], [ %218, %217 ]
  %223 = add nuw nsw i64 %129, 1
  %224 = icmp eq i64 %223, 4
  br i1 %224, label %226, label %128

225:                                              ; preds = %182
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %127) #7
  br label %268

226:                                              ; preds = %220
  %227 = and i8 %222, 1
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %229, label %268

229:                                              ; preds = %226
  %230 = add i32 %221, -1
  %231 = icmp sgt i32 %230, 0
  br i1 %231, label %236, label %232

232:                                              ; preds = %229
  %233 = sext i32 %230 to i64
  %234 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %233
  %235 = load i32, i32* %234, align 4
  br label %253

236:                                              ; preds = %229
  %237 = zext i32 %230 to i64
  br label %238

238:                                              ; preds = %243, %236
  %239 = phi i64 [ 0, %236 ], [ %246, %243 ]
  %240 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %239
  %241 = load i32, i32* %240, align 4
  %242 = icmp ugt i32 %241, 255
  br i1 %242, label %268, label %243

243:                                              ; preds = %238
  %244 = trunc i32 %241 to i8
  %245 = getelementptr inbounds i8, i8* %2, i64 %239
  store i8 %244, i8* %245, align 1
  %246 = add nuw nsw i64 %239, 1
  %247 = icmp eq i64 %246, %237
  br i1 %247, label %248, label %238

248:                                              ; preds = %243
  %249 = sext i32 %230 to i64
  %250 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %249
  %251 = load i32, i32* %250, align 4
  %252 = icmp sgt i32 %230, 3
  br i1 %252, label %256, label %253

253:                                              ; preds = %248, %232
  %254 = phi i32 [ %235, %232 ], [ %251, %248 ]
  %255 = sext i32 %221 to i64
  br label %259

256:                                              ; preds = %259, %248
  %257 = phi i32 [ %251, %248 ], [ %264, %259 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %267, label %268

259:                                              ; preds = %259, %253
  %260 = phi i64 [ 3, %253 ], [ %265, %259 ]
  %261 = phi i32 [ %254, %253 ], [ %264, %259 ]
  %262 = trunc i32 %261 to i8
  %263 = getelementptr inbounds i8, i8* %2, i64 %260
  store i8 %262, i8* %263, align 1
  %264 = lshr i32 %261, 8
  %265 = add nsw i64 %260, -1
  %266 = icmp slt i64 %260, %255
  br i1 %266, label %256, label %259

267:                                              ; preds = %256
  store i32 %221, i32* %3, align 4
  br label %268

268:                                              ; preds = %238, %267, %256, %226, %225
  %269 = phi i32 [ 0, %225 ], [ 1, %226 ], [ 2, %267 ], [ 1, %256 ], [ 1, %238 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #7
  br label %270

270:                                              ; preds = %48, %50, %279, %281, %310, %312, %341, %343, %4, %38, %362, %268
  %271 = phi i32 [ %269, %268 ], [ 0, %362 ], [ 0, %4 ], [ 0, %38 ], [ 0, %343 ], [ 0, %341 ], [ 0, %312 ], [ 0, %310 ], [ 0, %281 ], [ 0, %279 ], [ 0, %50 ], [ 0, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #7
  ret i32 %271

272:                                              ; preds = %287, %46
  %273 = phi i64 [ %288, %287 ], [ %36, %46 ]
  %274 = icmp sge i64 %273, %19
  br i1 %274, label %289, label %275

275:                                              ; preds = %272
  %276 = getelementptr inbounds i8, i8* %0, i64 %273
  %277 = load i8, i8* %276, align 1
  %278 = icmp eq i8 %277, 46
  br i1 %278, label %289, label %279

279:                                              ; preds = %275
  %280 = icmp slt i8 %277, 0
  br i1 %280, label %270, label %281

281:                                              ; preds = %279
  %282 = zext i8 %277 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = and i8 %284, 4
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %270, label %287

287:                                              ; preds = %281
  %288 = add nsw i64 %273, 1
  br label %272

289:                                              ; preds = %275, %272
  %290 = trunc i64 %273 to i32
  %291 = sub nsw i32 %290, %47
  %292 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 1
  %293 = bitcast %"struct.url::Component"* %292 to i64*
  %294 = zext i32 %291 to i64
  %295 = shl nuw i64 %294, 32
  %296 = and i64 %36, 4294967295
  %297 = or i64 %295, %296
  store i64 %297, i64* %293, align 8
  %298 = add i64 %273, 1
  %299 = icmp eq i32 %291, 0
  br i1 %299, label %38, label %300

300:                                              ; preds = %289
  br i1 %274, label %58, label %301

301:                                              ; preds = %300
  %302 = trunc i64 %298 to i32
  br label %303

303:                                              ; preds = %318, %301
  %304 = phi i64 [ %319, %318 ], [ %298, %301 ]
  %305 = icmp sge i64 %304, %19
  br i1 %305, label %320, label %306

306:                                              ; preds = %303
  %307 = getelementptr inbounds i8, i8* %0, i64 %304
  %308 = load i8, i8* %307, align 1
  %309 = icmp eq i8 %308, 46
  br i1 %309, label %320, label %310

310:                                              ; preds = %306
  %311 = icmp slt i8 %308, 0
  br i1 %311, label %270, label %312

312:                                              ; preds = %310
  %313 = zext i8 %308 to i64
  %314 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %313
  %315 = load i8, i8* %314, align 1
  %316 = and i8 %315, 4
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %270, label %318

318:                                              ; preds = %312
  %319 = add nsw i64 %304, 1
  br label %303

320:                                              ; preds = %306, %303
  %321 = trunc i64 %304 to i32
  %322 = sub nsw i32 %321, %302
  %323 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 2
  %324 = bitcast %"struct.url::Component"* %323 to i64*
  %325 = zext i32 %322 to i64
  %326 = shl nuw i64 %325, 32
  %327 = and i64 %298, 4294967295
  %328 = or i64 %326, %327
  store i64 %328, i64* %324, align 16
  %329 = add i64 %304, 1
  %330 = icmp eq i32 %322, 0
  br i1 %330, label %38, label %331

331:                                              ; preds = %320
  br i1 %305, label %58, label %332

332:                                              ; preds = %331
  %333 = trunc i64 %329 to i32
  br label %334

334:                                              ; preds = %349, %332
  %335 = phi i64 [ %350, %349 ], [ %329, %332 ]
  %336 = icmp sge i64 %335, %19
  br i1 %336, label %351, label %337

337:                                              ; preds = %334
  %338 = getelementptr inbounds i8, i8* %0, i64 %335
  %339 = load i8, i8* %338, align 1
  %340 = icmp eq i8 %339, 46
  br i1 %340, label %351, label %341

341:                                              ; preds = %337
  %342 = icmp slt i8 %339, 0
  br i1 %342, label %270, label %343

343:                                              ; preds = %341
  %344 = zext i8 %339 to i64
  %345 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %344
  %346 = load i8, i8* %345, align 1
  %347 = and i8 %346, 4
  %348 = icmp eq i8 %347, 0
  br i1 %348, label %270, label %349

349:                                              ; preds = %343
  %350 = add nsw i64 %335, 1
  br label %334

351:                                              ; preds = %337, %334
  %352 = trunc i64 %335 to i32
  %353 = sub nsw i32 %352, %333
  %354 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 3
  %355 = bitcast %"struct.url::Component"* %354 to i64*
  %356 = zext i32 %353 to i64
  %357 = shl nuw i64 %356, 32
  %358 = and i64 %329, 4294967295
  %359 = or i64 %357, %358
  store i64 %359, i64* %355, align 8
  %360 = icmp eq i32 %353, 0
  br i1 %360, label %38, label %361

361:                                              ; preds = %351
  br i1 %336, label %58, label %362

362:                                              ; preds = %361
  %363 = trunc i64 %335 to i32
  %364 = add i32 %363, 1
  %365 = shl i64 %335, 32
  %366 = ashr exact i64 %365, 32
  %367 = getelementptr inbounds i8, i8* %0, i64 %366
  %368 = load i8, i8* %367, align 1
  %369 = icmp eq i8 %368, 46
  %370 = icmp eq i32 %18, %364
  %371 = and i1 %370, %369
  br i1 %371, label %125, label %270
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3url19IPv4AddressToNumberEPKDsRKNS_9ComponentEPhPi(i16* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), i8* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = alloca [17 x i8], align 16
  %6 = alloca [4 x %"struct.url::Component"], align 16
  %7 = alloca [4 x i32], align 16
  %8 = bitcast [4 x %"struct.url::Component"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #7
  %9 = bitcast [4 x %"struct.url::Component"]* %6 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %9, align 16
  %10 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 2, i32 0
  %11 = bitcast i32* %10 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %11, align 16
  %12 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %273

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, %13
  %19 = sext i32 %18 to i64
  %20 = sext i32 %17 to i64
  br label %21

21:                                               ; preds = %15, %57
  %22 = phi i64 [ %58, %57 ], [ %20, %15 ]
  %23 = icmp sge i64 %22, %19
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds i16, i16* %0, i64 %22
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, 46
  br i1 %27, label %28, label %48

28:                                               ; preds = %24, %21
  %29 = trunc i64 %22 to i32
  %30 = sub nsw i32 %29, %17
  %31 = bitcast [4 x %"struct.url::Component"]* %6 to i64*
  %32 = zext i32 %30 to i64
  %33 = shl nuw i64 %32, 32
  %34 = zext i32 %17 to i64
  %35 = or i64 %33, %34
  store i64 %35, i64* %31, align 16
  %36 = add i64 %22, 1
  %37 = icmp eq i32 %30, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %357, %325, %293, %28
  %39 = phi i32 [ 1, %28 ], [ 2, %293 ], [ 3, %325 ], [ 4, %357 ]
  %40 = phi i1 [ true, %28 ], [ false, %293 ], [ false, %325 ], [ false, %357 ]
  %41 = phi i64 [ %22, %28 ], [ %276, %293 ], [ %308, %325 ], [ %340, %357 ]
  %42 = trunc i64 %41 to i32
  %43 = icmp sgt i32 %18, %42
  %44 = or i1 %40, %43
  br i1 %44, label %273, label %59

45:                                               ; preds = %28
  br i1 %23, label %59, label %46

46:                                               ; preds = %45
  %47 = trunc i64 %36 to i32
  br label %275

48:                                               ; preds = %24
  %49 = icmp ugt i16 %26, 127
  br i1 %49, label %273, label %50

50:                                               ; preds = %48
  %51 = and i16 %26, 255
  %52 = zext i16 %51 to i64
  %53 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = and i8 %54, 4
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %273, label %57

57:                                               ; preds = %50
  %58 = add nsw i64 %22, 1
  br label %21

59:                                               ; preds = %45, %304, %336, %367, %38
  %60 = phi i32 [ %39, %38 ], [ 1, %45 ], [ 2, %304 ], [ 3, %336 ], [ 4, %367 ]
  %61 = icmp slt i32 %60, 4
  br i1 %61, label %62, label %126

62:                                               ; preds = %59
  %63 = sext i32 %60 to i64
  %64 = sub nsw i64 4, %63
  %65 = icmp ult i64 %64, 4
  br i1 %65, label %118, label %66

66:                                               ; preds = %62
  %67 = and i64 %64, -4
  %68 = add nsw i64 %67, %63
  %69 = add nuw nsw i64 %67, -4
  %70 = lshr exact i64 %69, 2
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = sub nsw i64 %71, %72
  br label %74

74:                                               ; preds = %74, %66
  %75 = phi i64 [ 0, %66 ], [ %100, %74 ]
  %76 = phi i64 [ %73, %66 ], [ %101, %74 ]
  %77 = add i64 %75, %63
  %78 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %77
  %79 = bitcast %"struct.url::Component"* %78 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %79, align 8
  %80 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %78, i64 2
  %81 = bitcast %"struct.url::Component"* %80 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %81, align 8
  %82 = or i64 %75, 4
  %83 = add i64 %82, %63
  %84 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %83
  %85 = bitcast %"struct.url::Component"* %84 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %85, align 8
  %86 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %84, i64 2
  %87 = bitcast %"struct.url::Component"* %86 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %87, align 8
  %88 = or i64 %75, 8
  %89 = add i64 %88, %63
  %90 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %89
  %91 = bitcast %"struct.url::Component"* %90 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %91, align 8
  %92 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %90, i64 2
  %93 = bitcast %"struct.url::Component"* %92 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %93, align 8
  %94 = or i64 %75, 12
  %95 = add i64 %94, %63
  %96 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %95
  %97 = bitcast %"struct.url::Component"* %96 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %97, align 8
  %98 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %96, i64 2
  %99 = bitcast %"struct.url::Component"* %98 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %99, align 8
  %100 = add i64 %75, 16
  %101 = add i64 %76, -4
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %74, !llvm.loop !14

103:                                              ; preds = %74
  %104 = icmp eq i64 %72, 0
  br i1 %104, label %116, label %105

105:                                              ; preds = %103, %105
  %106 = phi i64 [ %113, %105 ], [ %100, %103 ]
  %107 = phi i64 [ %114, %105 ], [ %72, %103 ]
  %108 = add i64 %106, %63
  %109 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %108
  %110 = bitcast %"struct.url::Component"* %109 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %110, align 8
  %111 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %109, i64 2
  %112 = bitcast %"struct.url::Component"* %111 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %112, align 8
  %113 = add i64 %106, 4
  %114 = add i64 %107, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %105, !llvm.loop !15

116:                                              ; preds = %105, %103
  %117 = icmp eq i64 %64, %67
  br i1 %117, label %126, label %118

118:                                              ; preds = %116, %62
  %119 = phi i64 [ %63, %62 ], [ %68, %116 ]
  br label %120

120:                                              ; preds = %118, %120
  %121 = phi i64 [ %122, %120 ], [ %119, %118 ]
  %122 = add nsw i64 %121, 1
  %123 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %121
  %124 = bitcast %"struct.url::Component"* %123 to i64*
  store i64 -4294967296, i64* %124, align 8
  %125 = icmp eq i64 %122, 4
  br i1 %125, label %126, label %120, !llvm.loop !16

126:                                              ; preds = %120, %116, %368, %59
  %127 = bitcast [4 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #7
  %128 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %127, i8 -86, i64 16, i1 false) #7
  br label %129

129:                                              ; preds = %223, %126
  %130 = phi i64 [ 0, %126 ], [ %226, %223 ]
  %131 = phi i8 [ 0, %126 ], [ %225, %223 ]
  %132 = phi i32 [ 0, %126 ], [ %224, %223 ]
  %133 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %130, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = icmp slt i32 %134, 1
  br i1 %135, label %223, label %136

136:                                              ; preds = %129
  %137 = sext i32 %132 to i64
  %138 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %137
  %139 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 %130, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i16, i16* %0, i64 %141
  %143 = load i16, i16* %142, align 2
  %144 = icmp eq i16 %143, 48
  br i1 %144, label %145, label %153

145:                                              ; preds = %136
  %146 = icmp eq i32 %134, 1
  br i1 %146, label %157, label %147

147:                                              ; preds = %145
  %148 = add nsw i32 %140, 1
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i16, i16* %0, i64 %149
  %151 = load i16, i16* %150, align 2
  switch i16 %151, label %152 [
    i16 88, label %153
    i16 120, label %153
  ]

152:                                              ; preds = %147
  br label %153

153:                                              ; preds = %152, %147, %147, %136
  %154 = phi i32 [ 32, %152 ], [ 8, %147 ], [ 8, %147 ], [ 16, %136 ]
  %155 = phi i32 [ 1, %152 ], [ 2, %147 ], [ 2, %147 ], [ 0, %136 ]
  %156 = icmp slt i32 %155, %134
  br i1 %156, label %157, label %175

157:                                              ; preds = %153, %145
  %158 = phi i32 [ %155, %153 ], [ 0, %145 ]
  %159 = phi i32 [ %154, %153 ], [ 16, %145 ]
  %160 = zext i32 %158 to i64
  %161 = sext i32 %134 to i64
  br label %162

162:                                              ; preds = %169, %157
  %163 = phi i64 [ %160, %157 ], [ %170, %169 ]
  %164 = phi i32 [ %158, %157 ], [ %171, %169 ]
  %165 = add nsw i64 %163, %141
  %166 = getelementptr inbounds i16, i16* %0, i64 %165
  %167 = load i16, i16* %166, align 2
  %168 = icmp eq i16 %167, 48
  br i1 %168, label %169, label %173

169:                                              ; preds = %162
  %170 = add nuw nsw i64 %163, 1
  %171 = add nuw nsw i32 %164, 1
  %172 = icmp slt i64 %170, %161
  br i1 %172, label %162, label %175

173:                                              ; preds = %162
  %174 = trunc i64 %163 to i32
  br label %175

175:                                              ; preds = %169, %173, %153
  %176 = phi i32 [ %154, %153 ], [ %159, %173 ], [ %159, %169 ]
  %177 = phi i32 [ %155, %153 ], [ %174, %173 ], [ %171, %169 ]
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %128) #7
  %178 = add i32 %177, %140
  %179 = add i32 %140, %134
  %180 = icmp slt i32 %178, %179
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %128, i8 -86, i64 17, i1 false) #7
  br i1 %180, label %181, label %207

181:                                              ; preds = %175
  %182 = sext i32 %178 to i64
  br label %183

183:                                              ; preds = %202, %181
  %184 = phi i64 [ %182, %181 ], [ %204, %202 ]
  %185 = phi i32 [ 0, %181 ], [ %203, %202 ]
  %186 = getelementptr inbounds i16, i16* %0, i64 %184
  %187 = load i16, i16* %186, align 2
  %188 = trunc i16 %187 to i8
  %189 = and i16 %187, 255
  %190 = zext i16 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = and i32 %176, %193
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %228, label %196

196:                                              ; preds = %183
  %197 = icmp slt i32 %185, 16
  br i1 %197, label %198, label %202

198:                                              ; preds = %196
  %199 = add nsw i32 %185, 1
  %200 = sext i32 %185 to i64
  %201 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 %200
  store i8 %188, i8* %201, align 1
  br label %202

202:                                              ; preds = %198, %196
  %203 = phi i32 [ %185, %196 ], [ %199, %198 ]
  %204 = add nsw i64 %184, 1
  %205 = trunc i64 %204 to i32
  %206 = icmp eq i32 %179, %205
  br i1 %206, label %207, label %183

207:                                              ; preds = %202, %175
  %208 = phi i32 [ 0, %175 ], [ %203, %202 ]
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [17 x i8], [17 x i8]* %5, i64 0, i64 %209
  store i8 0, i8* %210, align 1
  switch i32 %176, label %213 [
    i32 8, label %214
    i32 16, label %211
    i32 32, label %212
  ]

211:                                              ; preds = %207
  br label %214

212:                                              ; preds = %207
  br label %214

213:                                              ; preds = %207
  br label %214

214:                                              ; preds = %213, %212, %211, %207
  %215 = phi i32 [ 0, %213 ], [ 8, %212 ], [ 10, %211 ], [ 16, %207 ]
  %216 = call i64 @strtoull(i8* nocapture nonnull %128, i8** null, i32 %215) #7
  %217 = icmp ugt i64 %216, 4294967295
  br i1 %217, label %220, label %218

218:                                              ; preds = %214
  %219 = trunc i64 %216 to i32
  store i32 %219, i32* %138, align 4
  br label %220

220:                                              ; preds = %214, %218
  %221 = phi i8 [ %131, %218 ], [ 1, %214 ]
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %128) #7
  %222 = add nsw i32 %132, 1
  br label %223

223:                                              ; preds = %220, %129
  %224 = phi i32 [ %132, %129 ], [ %222, %220 ]
  %225 = phi i8 [ %131, %129 ], [ %221, %220 ]
  %226 = add nuw nsw i64 %130, 1
  %227 = icmp eq i64 %226, 4
  br i1 %227, label %229, label %129

228:                                              ; preds = %183
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %128) #7
  br label %271

229:                                              ; preds = %223
  %230 = and i8 %225, 1
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %232, label %271

232:                                              ; preds = %229
  %233 = add i32 %224, -1
  %234 = icmp sgt i32 %233, 0
  br i1 %234, label %239, label %235

235:                                              ; preds = %232
  %236 = sext i32 %233 to i64
  %237 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %236
  %238 = load i32, i32* %237, align 4
  br label %256

239:                                              ; preds = %232
  %240 = zext i32 %233 to i64
  br label %241

241:                                              ; preds = %246, %239
  %242 = phi i64 [ 0, %239 ], [ %249, %246 ]
  %243 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = icmp ugt i32 %244, 255
  br i1 %245, label %271, label %246

246:                                              ; preds = %241
  %247 = trunc i32 %244 to i8
  %248 = getelementptr inbounds i8, i8* %2, i64 %242
  store i8 %247, i8* %248, align 1
  %249 = add nuw nsw i64 %242, 1
  %250 = icmp eq i64 %249, %240
  br i1 %250, label %251, label %241

251:                                              ; preds = %246
  %252 = sext i32 %233 to i64
  %253 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %252
  %254 = load i32, i32* %253, align 4
  %255 = icmp sgt i32 %233, 3
  br i1 %255, label %259, label %256

256:                                              ; preds = %251, %235
  %257 = phi i32 [ %238, %235 ], [ %254, %251 ]
  %258 = sext i32 %224 to i64
  br label %262

259:                                              ; preds = %262, %251
  %260 = phi i32 [ %254, %251 ], [ %267, %262 ]
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %270, label %271

262:                                              ; preds = %262, %256
  %263 = phi i64 [ 3, %256 ], [ %268, %262 ]
  %264 = phi i32 [ %257, %256 ], [ %267, %262 ]
  %265 = trunc i32 %264 to i8
  %266 = getelementptr inbounds i8, i8* %2, i64 %263
  store i8 %265, i8* %266, align 1
  %267 = lshr i32 %264, 8
  %268 = add nsw i64 %263, -1
  %269 = icmp slt i64 %263, %258
  br i1 %269, label %259, label %262

270:                                              ; preds = %259
  store i32 %224, i32* %3, align 4
  br label %271

271:                                              ; preds = %241, %270, %259, %229, %228
  %272 = phi i32 [ 0, %228 ], [ 1, %229 ], [ 2, %270 ], [ 1, %259 ], [ 1, %241 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #7
  br label %273

273:                                              ; preds = %48, %50, %282, %284, %314, %316, %346, %348, %4, %38, %368, %271
  %274 = phi i32 [ %272, %271 ], [ 0, %368 ], [ 0, %4 ], [ 0, %38 ], [ 0, %348 ], [ 0, %346 ], [ 0, %316 ], [ 0, %314 ], [ 0, %284 ], [ 0, %282 ], [ 0, %50 ], [ 0, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #7
  ret i32 %274

275:                                              ; preds = %291, %46
  %276 = phi i64 [ %292, %291 ], [ %36, %46 ]
  %277 = icmp sge i64 %276, %19
  br i1 %277, label %293, label %278

278:                                              ; preds = %275
  %279 = getelementptr inbounds i16, i16* %0, i64 %276
  %280 = load i16, i16* %279, align 2
  %281 = icmp eq i16 %280, 46
  br i1 %281, label %293, label %282

282:                                              ; preds = %278
  %283 = icmp ugt i16 %280, 127
  br i1 %283, label %273, label %284

284:                                              ; preds = %282
  %285 = and i16 %280, 255
  %286 = zext i16 %285 to i64
  %287 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %286
  %288 = load i8, i8* %287, align 1
  %289 = and i8 %288, 4
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %273, label %291

291:                                              ; preds = %284
  %292 = add nsw i64 %276, 1
  br label %275

293:                                              ; preds = %278, %275
  %294 = trunc i64 %276 to i32
  %295 = sub nsw i32 %294, %47
  %296 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 1
  %297 = bitcast %"struct.url::Component"* %296 to i64*
  %298 = zext i32 %295 to i64
  %299 = shl nuw i64 %298, 32
  %300 = and i64 %36, 4294967295
  %301 = or i64 %299, %300
  store i64 %301, i64* %297, align 8
  %302 = add i64 %276, 1
  %303 = icmp eq i32 %295, 0
  br i1 %303, label %38, label %304

304:                                              ; preds = %293
  br i1 %277, label %59, label %305

305:                                              ; preds = %304
  %306 = trunc i64 %302 to i32
  br label %307

307:                                              ; preds = %323, %305
  %308 = phi i64 [ %324, %323 ], [ %302, %305 ]
  %309 = icmp sge i64 %308, %19
  br i1 %309, label %325, label %310

310:                                              ; preds = %307
  %311 = getelementptr inbounds i16, i16* %0, i64 %308
  %312 = load i16, i16* %311, align 2
  %313 = icmp eq i16 %312, 46
  br i1 %313, label %325, label %314

314:                                              ; preds = %310
  %315 = icmp ugt i16 %312, 127
  br i1 %315, label %273, label %316

316:                                              ; preds = %314
  %317 = and i16 %312, 255
  %318 = zext i16 %317 to i64
  %319 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %318
  %320 = load i8, i8* %319, align 1
  %321 = and i8 %320, 4
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %273, label %323

323:                                              ; preds = %316
  %324 = add nsw i64 %308, 1
  br label %307

325:                                              ; preds = %310, %307
  %326 = trunc i64 %308 to i32
  %327 = sub nsw i32 %326, %306
  %328 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 2
  %329 = bitcast %"struct.url::Component"* %328 to i64*
  %330 = zext i32 %327 to i64
  %331 = shl nuw i64 %330, 32
  %332 = and i64 %302, 4294967295
  %333 = or i64 %331, %332
  store i64 %333, i64* %329, align 16
  %334 = add i64 %308, 1
  %335 = icmp eq i32 %327, 0
  br i1 %335, label %38, label %336

336:                                              ; preds = %325
  br i1 %309, label %59, label %337

337:                                              ; preds = %336
  %338 = trunc i64 %334 to i32
  br label %339

339:                                              ; preds = %355, %337
  %340 = phi i64 [ %356, %355 ], [ %334, %337 ]
  %341 = icmp sge i64 %340, %19
  br i1 %341, label %357, label %342

342:                                              ; preds = %339
  %343 = getelementptr inbounds i16, i16* %0, i64 %340
  %344 = load i16, i16* %343, align 2
  %345 = icmp eq i16 %344, 46
  br i1 %345, label %357, label %346

346:                                              ; preds = %342
  %347 = icmp ugt i16 %344, 127
  br i1 %347, label %273, label %348

348:                                              ; preds = %346
  %349 = and i16 %344, 255
  %350 = zext i16 %349 to i64
  %351 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %350
  %352 = load i8, i8* %351, align 1
  %353 = and i8 %352, 4
  %354 = icmp eq i8 %353, 0
  br i1 %354, label %273, label %355

355:                                              ; preds = %348
  %356 = add nsw i64 %340, 1
  br label %339

357:                                              ; preds = %342, %339
  %358 = trunc i64 %340 to i32
  %359 = sub nsw i32 %358, %338
  %360 = getelementptr inbounds [4 x %"struct.url::Component"], [4 x %"struct.url::Component"]* %6, i64 0, i64 3
  %361 = bitcast %"struct.url::Component"* %360 to i64*
  %362 = zext i32 %359 to i64
  %363 = shl nuw i64 %362, 32
  %364 = and i64 %334, 4294967295
  %365 = or i64 %363, %364
  store i64 %365, i64* %361, align 8
  %366 = icmp eq i32 %359, 0
  br i1 %366, label %38, label %367

367:                                              ; preds = %357
  br i1 %341, label %59, label %368

368:                                              ; preds = %367
  %369 = trunc i64 %340 to i32
  %370 = add i32 %369, 1
  %371 = shl i64 %340, 32
  %372 = ashr exact i64 %371, 32
  %373 = getelementptr inbounds i16, i16* %0, i64 %372
  %374 = load i16, i16* %373, align 2
  %375 = icmp eq i16 %374, 46
  %376 = icmp eq i32 %18, %370
  %377 = and i1 %376, %375
  br i1 %377, label %126, label %273
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3url19IPv6AddressToNumberEPKcRKNS_9ComponentEPh(i8* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), i8* nocapture) local_unnamed_addr #0 {
  %4 = alloca [5 x i8], align 1
  %5 = alloca %"struct.url::(anonymous namespace)::IPv6Parsed", align 16
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %217

12:                                               ; preds = %3
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds i8, i8* %0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 91
  br i1 %16, label %17, label %217

17:                                               ; preds = %12
  %18 = add i32 %8, -1
  %19 = add i32 %18, %10
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 93
  br i1 %23, label %24, label %217

24:                                               ; preds = %17
  %25 = add nsw i32 %8, 1
  %26 = add nsw i32 %10, -2
  %27 = bitcast %"struct.url::(anonymous namespace)::IPv6Parsed"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %27) #7
  %28 = bitcast %"struct.url::(anonymous namespace)::IPv6Parsed"* %5 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %28, align 16
  %29 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 0, i64 2, i32 0
  %30 = bitcast i32* %29 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %30, align 16
  %31 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 0, i64 4, i32 0
  %32 = bitcast i32* %31 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %32, align 16
  %33 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 0, i64 6, i32 0
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %34, align 16
  %35 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 3, i32 1
  %36 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 2
  %38 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %38, align 16
  %39 = icmp sgt i32 %26, 0
  br i1 %39, label %40, label %215

40:                                               ; preds = %24
  %41 = add nsw i32 %26, %25
  %42 = add i32 %26, %8
  br label %43

43:                                               ; preds = %100, %40
  %44 = phi i32 [ %101, %100 ], [ %25, %40 ]
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %43, %113
  %47 = phi i32 [ %114, %113 ], [ %44, %43 ]
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %0, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 58
  %52 = icmp slt i32 %47, %42
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %60

54:                                               ; preds = %46
  %55 = add nsw i32 %47, 1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 58
  br label %60

60:                                               ; preds = %54, %46
  %61 = phi i1 [ false, %46 ], [ %59, %54 ]
  %62 = icmp eq i32 %47, %41
  %63 = or i1 %62, %51
  br i1 %63, label %64, label %90

64:                                               ; preds = %60
  %65 = sub nsw i32 %47, %44
  %66 = icmp sgt i32 %65, 4
  br i1 %66, label %215, label %67

67:                                               ; preds = %64
  %68 = icmp ne i32 %65, 0
  %69 = icmp eq i32 %47, %25
  %70 = and i1 %69, %61
  %71 = or i1 %68, %70
  br i1 %71, label %77, label %72

72:                                               ; preds = %67
  br i1 %62, label %73, label %215

73:                                               ; preds = %72
  %74 = load i32, i32* %37, align 4
  %75 = load i32, i32* %36, align 16
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %129, label %215

77:                                               ; preds = %67
  %78 = icmp sgt i32 %65, 0
  br i1 %78, label %79, label %90

79:                                               ; preds = %77
  %80 = load i32, i32* %36, align 16
  %81 = icmp sgt i32 %80, 7
  br i1 %81, label %215, label %82

82:                                               ; preds = %79
  %83 = add nsw i32 %80, 1
  store i32 %83, i32* %36, align 16
  %84 = sext i32 %80 to i64
  %85 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 0, i64 %84
  %86 = bitcast %"struct.url::Component"* %85 to i64*
  %87 = zext i32 %65 to i64
  %88 = shl nuw i64 %87, 32
  %89 = or i64 %88, %45
  store i64 %89, i64* %86, align 8
  br label %90

90:                                               ; preds = %82, %77, %60
  br i1 %62, label %126, label %91

91:                                               ; preds = %90
  br i1 %61, label %92, label %98

92:                                               ; preds = %91
  %93 = load i32, i32* %37, align 4
  %94 = icmp eq i32 %93, -1
  br i1 %94, label %95, label %215

95:                                               ; preds = %92
  %96 = load i32, i32* %36, align 16
  store i32 %96, i32* %37, align 4
  %97 = add nsw i32 %47, 1
  br label %98

98:                                               ; preds = %95, %91
  %99 = phi i32 [ %97, %95 ], [ %47, %91 ]
  br i1 %51, label %100, label %102

100:                                              ; preds = %98
  %101 = add nsw i32 %99, 1
  br label %43

102:                                              ; preds = %98
  %103 = sext i32 %99 to i64
  %104 = getelementptr inbounds i8, i8* %0, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %215, label %107

107:                                              ; preds = %102
  %108 = zext i8 %105 to i64
  %109 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = and i8 %110, 8
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %107
  %114 = add nsw i32 %99, 1
  br label %46

115:                                              ; preds = %107
  %116 = and i8 %110, 4
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %215, label %118

118:                                              ; preds = %115
  %119 = sub nsw i32 %41, %44
  %120 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 3
  %121 = bitcast %"struct.url::Component"* %120 to i64*
  %122 = zext i32 %119 to i64
  %123 = shl nuw i64 %122, 32
  %124 = zext i32 %44 to i64
  %125 = or i64 %123, %124
  store i64 %125, i64* %121, align 8
  br label %126

126:                                              ; preds = %90, %118
  %127 = load i32, i32* %37, align 4
  %128 = load i32, i32* %36, align 16
  br label %129

129:                                              ; preds = %126, %73
  %130 = phi i32 [ %128, %126 ], [ %74, %73 ]
  %131 = phi i32 [ %127, %126 ], [ %74, %73 ]
  %132 = shl nsw i32 %130, 1
  %133 = load i32, i32* %35, align 4
  %134 = icmp eq i32 %133, -1
  %135 = add nsw i32 %132, 4
  %136 = select i1 %134, i32 %132, i32 %135
  %137 = icmp eq i32 %131, -1
  br i1 %137, label %142, label %138

138:                                              ; preds = %129
  %139 = sub nsw i32 16, %136
  %140 = icmp sgt i32 %139, 2
  %141 = select i1 %140, i32 %139, i32 2
  br label %142

142:                                              ; preds = %138, %129
  %143 = phi i32 [ %141, %138 ], [ 0, %129 ]
  %144 = add nsw i32 %143, %136
  %145 = icmp eq i32 %144, 16
  br i1 %145, label %146, label %215

146:                                              ; preds = %142
  %147 = icmp slt i32 %130, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %146
  %149 = icmp eq i32 %143, 0
  %150 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 0
  %151 = zext i32 %143 to i64
  %152 = load i32, i32* %36, align 16
  %153 = load i32, i32* %37, align 4
  br label %160

154:                                              ; preds = %200
  %155 = load i32, i32* %35, align 4
  br label %156

156:                                              ; preds = %154, %146
  %157 = phi i32 [ %133, %146 ], [ %155, %154 ]
  %158 = phi i32 [ 0, %146 ], [ %202, %154 ]
  %159 = icmp eq i32 %157, -1
  br i1 %159, label %214, label %207

160:                                              ; preds = %205, %148
  %161 = phi i32 [ %201, %205 ], [ %130, %148 ]
  %162 = phi i32 [ %153, %205 ], [ %131, %148 ]
  %163 = phi i64 [ %206, %205 ], [ 0, %148 ]
  %164 = phi i32 [ %202, %205 ], [ 0, %148 ]
  %165 = zext i32 %162 to i64
  %166 = icmp ne i64 %163, %165
  %167 = or i1 %149, %166
  br i1 %167, label %172, label %168

168:                                              ; preds = %160
  %169 = sext i32 %164 to i64
  %170 = getelementptr i8, i8* %2, i64 %169
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %170, i8 0, i64 %151, i1 false) #7
  %171 = add i32 %143, %164
  br label %172

172:                                              ; preds = %168, %160
  %173 = phi i32 [ %164, %160 ], [ %171, %168 ]
  %174 = zext i32 %161 to i64
  %175 = icmp eq i64 %163, %174
  br i1 %175, label %200, label %176

176:                                              ; preds = %172
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %150) #7
  %177 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 0, i64 %163, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %150, i8 -86, i64 5, i1 false) #7
  %178 = load i32, i32* %177, align 4
  %179 = icmp sgt i32 %178, 0
  br i1 %179, label %180, label %186

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 0, i64 %163, i32 0
  %182 = load i32, i32* %181, align 8
  %183 = sext i32 %182 to i64
  %184 = getelementptr i8, i8* %0, i64 %183
  %185 = zext i32 %178 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %150, i8* align 1 %184, i64 %185, i1 false) #7
  br label %186

186:                                              ; preds = %180, %176
  %187 = sext i32 %178 to i64
  %188 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 %187
  store i8 0, i8* %188, align 1
  %189 = call i64 @strtoull(i8* nocapture nonnull %150, i8** null, i32 16) #7
  %190 = trunc i64 %189 to i16
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %150) #7
  %191 = lshr i16 %190, 8
  %192 = trunc i16 %191 to i8
  %193 = add nsw i32 %173, 1
  %194 = sext i32 %173 to i64
  %195 = getelementptr inbounds i8, i8* %2, i64 %194
  store i8 %192, i8* %195, align 1
  %196 = trunc i64 %189 to i8
  %197 = add nsw i32 %173, 2
  %198 = sext i32 %193 to i64
  %199 = getelementptr inbounds i8, i8* %2, i64 %198
  store i8 %196, i8* %199, align 1
  br label %200

200:                                              ; preds = %186, %172
  %201 = phi i32 [ %152, %186 ], [ %161, %172 ]
  %202 = phi i32 [ %197, %186 ], [ %173, %172 ]
  %203 = sext i32 %201 to i64
  %204 = icmp slt i64 %163, %203
  br i1 %204, label %205, label %154

205:                                              ; preds = %200
  %206 = add nuw nsw i64 %163, 1
  br label %160

207:                                              ; preds = %156
  %208 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 3
  %209 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %209) #7
  store i32 -1431655766, i32* %6, align 4
  %210 = sext i32 %158 to i64
  %211 = getelementptr inbounds i8, i8* %2, i64 %210
  %212 = call i32 @_ZN3url19IPv4AddressToNumberEPKcRKNS_9ComponentEPhPi(i8* %0, %"struct.url::Component"* dereferenceable(8) %208, i8* %211, i32* nonnull %6) #7
  %213 = icmp eq i32 %212, 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %209) #7
  br i1 %213, label %214, label %215

214:                                              ; preds = %207, %156
  br label %215

215:                                              ; preds = %102, %92, %79, %64, %214, %207, %142, %115, %73, %72, %24
  %216 = phi i1 [ false, %24 ], [ true, %214 ], [ false, %207 ], [ false, %115 ], [ false, %73 ], [ false, %72 ], [ false, %142 ], [ false, %64 ], [ false, %79 ], [ false, %92 ], [ false, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %27) #7
  br label %217

217:                                              ; preds = %3, %12, %17, %215
  %218 = phi i1 [ %216, %215 ], [ false, %17 ], [ false, %12 ], [ false, %3 ]
  ret i1 %218
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3url19IPv6AddressToNumberEPKDsRKNS_9ComponentEPh(i16* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), i8* nocapture) local_unnamed_addr #0 {
  %4 = alloca [5 x i8], align 1
  %5 = alloca %"struct.url::(anonymous namespace)::IPv6Parsed", align 16
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %293

12:                                               ; preds = %3
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds i16, i16* %0, i64 %13
  %15 = load i16, i16* %14, align 2
  %16 = icmp eq i16 %15, 91
  br i1 %16, label %17, label %293

17:                                               ; preds = %12
  %18 = add i32 %8, -1
  %19 = add i32 %18, %10
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %0, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 93
  br i1 %23, label %24, label %293

24:                                               ; preds = %17
  %25 = add nsw i32 %8, 1
  %26 = add nsw i32 %10, -2
  %27 = bitcast %"struct.url::(anonymous namespace)::IPv6Parsed"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %27) #7
  %28 = bitcast %"struct.url::(anonymous namespace)::IPv6Parsed"* %5 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %28, align 16
  %29 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 0, i64 2, i32 0
  %30 = bitcast i32* %29 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %30, align 16
  %31 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 0, i64 4, i32 0
  %32 = bitcast i32* %31 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %32, align 16
  %33 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 0, i64 6, i32 0
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %34, align 16
  %35 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 3, i32 1
  %36 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 2
  %38 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %38, align 16
  %39 = icmp sgt i32 %26, 0
  br i1 %39, label %40, label %291

40:                                               ; preds = %24
  %41 = add nsw i32 %26, %25
  %42 = add i32 %26, %8
  br label %43

43:                                               ; preds = %100, %40
  %44 = phi i32 [ %101, %100 ], [ %25, %40 ]
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %43, %114
  %47 = phi i32 [ %115, %114 ], [ %44, %43 ]
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i16, i16* %0, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = icmp eq i16 %50, 58
  %52 = icmp slt i32 %47, %42
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %60

54:                                               ; preds = %46
  %55 = add nsw i32 %47, 1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %0, i64 %56
  %58 = load i16, i16* %57, align 2
  %59 = icmp eq i16 %58, 58
  br label %60

60:                                               ; preds = %54, %46
  %61 = phi i1 [ false, %46 ], [ %59, %54 ]
  %62 = icmp eq i32 %47, %41
  %63 = or i1 %62, %51
  br i1 %63, label %64, label %90

64:                                               ; preds = %60
  %65 = sub nsw i32 %47, %44
  %66 = icmp sgt i32 %65, 4
  br i1 %66, label %291, label %67

67:                                               ; preds = %64
  %68 = icmp ne i32 %65, 0
  %69 = icmp eq i32 %47, %25
  %70 = and i1 %69, %61
  %71 = or i1 %68, %70
  br i1 %71, label %77, label %72

72:                                               ; preds = %67
  br i1 %62, label %73, label %291

73:                                               ; preds = %72
  %74 = load i32, i32* %37, align 4
  %75 = load i32, i32* %36, align 16
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %130, label %291

77:                                               ; preds = %67
  %78 = icmp sgt i32 %65, 0
  br i1 %78, label %79, label %90

79:                                               ; preds = %77
  %80 = load i32, i32* %36, align 16
  %81 = icmp sgt i32 %80, 7
  br i1 %81, label %291, label %82

82:                                               ; preds = %79
  %83 = add nsw i32 %80, 1
  store i32 %83, i32* %36, align 16
  %84 = sext i32 %80 to i64
  %85 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 0, i64 %84
  %86 = bitcast %"struct.url::Component"* %85 to i64*
  %87 = zext i32 %65 to i64
  %88 = shl nuw i64 %87, 32
  %89 = or i64 %88, %45
  store i64 %89, i64* %86, align 8
  br label %90

90:                                               ; preds = %82, %77, %60
  br i1 %62, label %127, label %91

91:                                               ; preds = %90
  br i1 %61, label %92, label %98

92:                                               ; preds = %91
  %93 = load i32, i32* %37, align 4
  %94 = icmp eq i32 %93, -1
  br i1 %94, label %95, label %291

95:                                               ; preds = %92
  %96 = load i32, i32* %36, align 16
  store i32 %96, i32* %37, align 4
  %97 = add nsw i32 %47, 1
  br label %98

98:                                               ; preds = %95, %91
  %99 = phi i32 [ %97, %95 ], [ %47, %91 ]
  br i1 %51, label %100, label %102

100:                                              ; preds = %98
  %101 = add nsw i32 %99, 1
  br label %43

102:                                              ; preds = %98
  %103 = sext i32 %99 to i64
  %104 = getelementptr inbounds i16, i16* %0, i64 %103
  %105 = load i16, i16* %104, align 2
  %106 = icmp ugt i16 %105, 127
  br i1 %106, label %291, label %107

107:                                              ; preds = %102
  %108 = and i16 %105, 255
  %109 = zext i16 %108 to i64
  %110 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = and i8 %111, 8
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %107
  %115 = add nsw i32 %99, 1
  br label %46

116:                                              ; preds = %107
  %117 = and i8 %111, 4
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %291, label %119

119:                                              ; preds = %116
  %120 = sub nsw i32 %41, %44
  %121 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 3
  %122 = bitcast %"struct.url::Component"* %121 to i64*
  %123 = zext i32 %120 to i64
  %124 = shl nuw i64 %123, 32
  %125 = zext i32 %44 to i64
  %126 = or i64 %124, %125
  store i64 %126, i64* %122, align 8
  br label %127

127:                                              ; preds = %90, %119
  %128 = load i32, i32* %37, align 4
  %129 = load i32, i32* %36, align 16
  br label %130

130:                                              ; preds = %127, %73
  %131 = phi i32 [ %129, %127 ], [ %74, %73 ]
  %132 = phi i32 [ %128, %127 ], [ %74, %73 ]
  %133 = shl nsw i32 %131, 1
  %134 = load i32, i32* %35, align 4
  %135 = icmp eq i32 %134, -1
  %136 = add nsw i32 %133, 4
  %137 = select i1 %135, i32 %133, i32 %136
  %138 = icmp eq i32 %132, -1
  br i1 %138, label %143, label %139

139:                                              ; preds = %130
  %140 = sub nsw i32 16, %137
  %141 = icmp sgt i32 %140, 2
  %142 = select i1 %141, i32 %140, i32 2
  br label %143

143:                                              ; preds = %139, %130
  %144 = phi i32 [ %142, %139 ], [ 0, %130 ]
  %145 = add nsw i32 %144, %137
  %146 = icmp eq i32 %145, 16
  br i1 %146, label %147, label %291

147:                                              ; preds = %143
  %148 = icmp slt i32 %131, 0
  br i1 %148, label %157, label %149

149:                                              ; preds = %147
  %150 = icmp eq i32 %144, 0
  %151 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 0
  %152 = zext i32 %144 to i64
  %153 = load i32, i32* %36, align 16
  %154 = load i32, i32* %37, align 4
  br label %161

155:                                              ; preds = %276
  %156 = load i32, i32* %35, align 4
  br label %157

157:                                              ; preds = %155, %147
  %158 = phi i32 [ %134, %147 ], [ %156, %155 ]
  %159 = phi i32 [ 0, %147 ], [ %278, %155 ]
  %160 = icmp eq i32 %158, -1
  br i1 %160, label %290, label %283

161:                                              ; preds = %281, %149
  %162 = phi i32 [ %277, %281 ], [ %131, %149 ]
  %163 = phi i32 [ %154, %281 ], [ %132, %149 ]
  %164 = phi i64 [ %282, %281 ], [ 0, %149 ]
  %165 = phi i32 [ %278, %281 ], [ 0, %149 ]
  %166 = zext i32 %163 to i64
  %167 = icmp ne i64 %164, %166
  %168 = or i1 %150, %167
  br i1 %168, label %173, label %169

169:                                              ; preds = %161
  %170 = sext i32 %165 to i64
  %171 = getelementptr i8, i8* %2, i64 %170
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %171, i8 0, i64 %152, i1 false) #7
  %172 = add i32 %144, %165
  br label %173

173:                                              ; preds = %169, %161
  %174 = phi i32 [ %165, %161 ], [ %172, %169 ]
  %175 = zext i32 %162 to i64
  %176 = icmp eq i64 %164, %175
  br i1 %176, label %276, label %177

177:                                              ; preds = %173
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %151) #7
  %178 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 0, i64 %164, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %151, i8 -86, i64 5, i1 false) #7
  %179 = load i32, i32* %178, align 4
  %180 = icmp sgt i32 %179, 0
  br i1 %180, label %183, label %181

181:                                              ; preds = %177
  %182 = sext i32 %179 to i64
  br label %262

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 0, i64 %164, i32 0
  %185 = load i32, i32* %184, align 8
  %186 = sext i32 %185 to i64
  %187 = sext i32 %179 to i64
  %188 = sext i32 %179 to i64
  %189 = icmp ult i32 %179, 16
  br i1 %189, label %251, label %190

190:                                              ; preds = %183
  %191 = and i64 %188, -16
  %192 = add nsw i64 %191, -16
  %193 = lshr exact i64 %192, 4
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 1
  %196 = icmp eq i64 %192, 0
  br i1 %196, label %232, label %197

197:                                              ; preds = %190
  %198 = sub nuw nsw i64 %194, %195
  br label %199

199:                                              ; preds = %199, %197
  %200 = phi i64 [ 0, %197 ], [ %229, %199 ]
  %201 = phi i64 [ %198, %197 ], [ %230, %199 ]
  %202 = add nsw i64 %200, %186
  %203 = getelementptr inbounds i16, i16* %0, i64 %202
  %204 = bitcast i16* %203 to <8 x i16>*
  %205 = load <8 x i16>, <8 x i16>* %204, align 2
  %206 = getelementptr inbounds i16, i16* %203, i64 8
  %207 = bitcast i16* %206 to <8 x i16>*
  %208 = load <8 x i16>, <8 x i16>* %207, align 2
  %209 = trunc <8 x i16> %205 to <8 x i8>
  %210 = trunc <8 x i16> %208 to <8 x i8>
  %211 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 %200
  %212 = bitcast i8* %211 to <8 x i8>*
  store <8 x i8> %209, <8 x i8>* %212, align 1
  %213 = getelementptr inbounds i8, i8* %211, i64 8
  %214 = bitcast i8* %213 to <8 x i8>*
  store <8 x i8> %210, <8 x i8>* %214, align 1
  %215 = or i64 %200, 16
  %216 = add nsw i64 %215, %186
  %217 = getelementptr inbounds i16, i16* %0, i64 %216
  %218 = bitcast i16* %217 to <8 x i16>*
  %219 = load <8 x i16>, <8 x i16>* %218, align 2
  %220 = getelementptr inbounds i16, i16* %217, i64 8
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2
  %223 = trunc <8 x i16> %219 to <8 x i8>
  %224 = trunc <8 x i16> %222 to <8 x i8>
  %225 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 %215
  %226 = bitcast i8* %225 to <8 x i8>*
  store <8 x i8> %223, <8 x i8>* %226, align 1
  %227 = getelementptr inbounds i8, i8* %225, i64 8
  %228 = bitcast i8* %227 to <8 x i8>*
  store <8 x i8> %224, <8 x i8>* %228, align 1
  %229 = add i64 %200, 32
  %230 = add i64 %201, -2
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %199, !llvm.loop !17

232:                                              ; preds = %199, %190
  %233 = phi i64 [ 0, %190 ], [ %229, %199 ]
  %234 = icmp eq i64 %195, 0
  br i1 %234, label %249, label %235

235:                                              ; preds = %232
  %236 = add nsw i64 %233, %186
  %237 = getelementptr inbounds i16, i16* %0, i64 %236
  %238 = bitcast i16* %237 to <8 x i16>*
  %239 = load <8 x i16>, <8 x i16>* %238, align 2
  %240 = getelementptr inbounds i16, i16* %237, i64 8
  %241 = bitcast i16* %240 to <8 x i16>*
  %242 = load <8 x i16>, <8 x i16>* %241, align 2
  %243 = trunc <8 x i16> %239 to <8 x i8>
  %244 = trunc <8 x i16> %242 to <8 x i8>
  %245 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 %233
  %246 = bitcast i8* %245 to <8 x i8>*
  store <8 x i8> %243, <8 x i8>* %246, align 1
  %247 = getelementptr inbounds i8, i8* %245, i64 8
  %248 = bitcast i8* %247 to <8 x i8>*
  store <8 x i8> %244, <8 x i8>* %248, align 1
  br label %249

249:                                              ; preds = %232, %235
  %250 = icmp eq i64 %191, %188
  br i1 %250, label %262, label %251

251:                                              ; preds = %249, %183
  %252 = phi i64 [ 0, %183 ], [ %191, %249 ]
  br label %253

253:                                              ; preds = %251, %253
  %254 = phi i64 [ %260, %253 ], [ %252, %251 ]
  %255 = add nsw i64 %254, %186
  %256 = getelementptr inbounds i16, i16* %0, i64 %255
  %257 = load i16, i16* %256, align 2
  %258 = trunc i16 %257 to i8
  %259 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 %254
  store i8 %258, i8* %259, align 1
  %260 = add nuw nsw i64 %254, 1
  %261 = icmp eq i64 %260, %187
  br i1 %261, label %262, label %253, !llvm.loop !18

262:                                              ; preds = %253, %249, %181
  %263 = phi i64 [ %182, %181 ], [ %187, %249 ], [ %187, %253 ]
  %264 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 %263
  store i8 0, i8* %264, align 1
  %265 = call i64 @strtoull(i8* nocapture nonnull %151, i8** null, i32 16) #7
  %266 = trunc i64 %265 to i16
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %151) #7
  %267 = lshr i16 %266, 8
  %268 = trunc i16 %267 to i8
  %269 = add nsw i32 %174, 1
  %270 = sext i32 %174 to i64
  %271 = getelementptr inbounds i8, i8* %2, i64 %270
  store i8 %268, i8* %271, align 1
  %272 = trunc i64 %265 to i8
  %273 = add nsw i32 %174, 2
  %274 = sext i32 %269 to i64
  %275 = getelementptr inbounds i8, i8* %2, i64 %274
  store i8 %272, i8* %275, align 1
  br label %276

276:                                              ; preds = %262, %173
  %277 = phi i32 [ %153, %262 ], [ %162, %173 ]
  %278 = phi i32 [ %273, %262 ], [ %174, %173 ]
  %279 = sext i32 %277 to i64
  %280 = icmp slt i64 %164, %279
  br i1 %280, label %281, label %155

281:                                              ; preds = %276
  %282 = add nuw nsw i64 %164, 1
  br label %161

283:                                              ; preds = %157
  %284 = getelementptr inbounds %"struct.url::(anonymous namespace)::IPv6Parsed", %"struct.url::(anonymous namespace)::IPv6Parsed"* %5, i64 0, i32 3
  %285 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %285) #7
  store i32 -1431655766, i32* %6, align 4
  %286 = sext i32 %159 to i64
  %287 = getelementptr inbounds i8, i8* %2, i64 %286
  %288 = call i32 @_ZN3url19IPv4AddressToNumberEPKDsRKNS_9ComponentEPhPi(i16* %0, %"struct.url::Component"* dereferenceable(8) %284, i8* %287, i32* nonnull %6) #7
  %289 = icmp eq i32 %288, 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %285) #7
  br i1 %289, label %290, label %291

290:                                              ; preds = %283, %157
  br label %291

291:                                              ; preds = %102, %92, %79, %64, %290, %283, %143, %116, %73, %72, %24
  %292 = phi i1 [ false, %24 ], [ true, %290 ], [ false, %283 ], [ false, %116 ], [ false, %73 ], [ false, %72 ], [ false, %143 ], [ false, %64 ], [ false, %79 ], [ false, %92 ], [ false, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %27) #7
  br label %293

293:                                              ; preds = %3, %12, %17, %291
  %294 = phi i1 [ %292, %291 ], [ false, %17 ], [ false, %12 ], [ false, %3 ]
  ret i1 %294
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3url19CheckHostnameSafetyEPKcRKNS_9ComponentE(i8* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca <4 x i32>, align 16
  %4 = bitcast <4 x i32>* %3 to [2 x %"struct.url::Component"]*
  %5 = alloca %"class.url::RawCanonOutputT", align 8
  %6 = alloca %"struct.url::CanonHostInfo", align 16
  %7 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %160

10:                                               ; preds = %2
  %11 = bitcast <4 x i32>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = getelementptr inbounds <4 x i32>, <4 x i32>* %3, i64 0, i64 0
  %13 = getelementptr inbounds [2 x %"struct.url::Component"], [2 x %"struct.url::Component"]* %4, i64 0, i64 0, i32 1
  %14 = getelementptr inbounds [2 x %"struct.url::Component"], [2 x %"struct.url::Component"]* %4, i64 0, i64 1, i32 0
  %15 = getelementptr inbounds [2 x %"struct.url::Component"], [2 x %"struct.url::Component"]* %4, i64 0, i64 1, i32 1
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %3, align 16
  %16 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, %8
  %19 = add nsw i32 %18, -1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 46
  br i1 %23, label %26, label %24

24:                                               ; preds = %10
  %25 = sext i32 %18 to i64
  br label %28

26:                                               ; preds = %10
  %27 = icmp eq i32 %17, %19
  br i1 %27, label %158, label %28

28:                                               ; preds = %26, %24
  %29 = phi i64 [ %25, %24 ], [ %20, %26 ]
  %30 = phi i32 [ %18, %24 ], [ %19, %26 ]
  %31 = sext i32 %17 to i64
  br label %32

32:                                               ; preds = %57, %28
  %33 = phi i64 [ %58, %57 ], [ %29, %28 ]
  %34 = phi i32 [ %54, %57 ], [ 0, %28 ]
  %35 = phi i32 [ %59, %57 ], [ %30, %28 ]
  br label %36

36:                                               ; preds = %32, %39
  %37 = phi i64 [ %40, %39 ], [ %33, %32 ]
  %38 = icmp eq i64 %37, %31
  br i1 %38, label %44, label %39

39:                                               ; preds = %36
  %40 = add i64 %37, -1
  %41 = getelementptr inbounds i8, i8* %0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 46
  br i1 %43, label %44, label %36

44:                                               ; preds = %39, %36
  %45 = trunc i64 %37 to i32
  %46 = sub nsw i32 %35, %45
  %47 = zext i32 %34 to i64
  %48 = getelementptr inbounds [2 x %"struct.url::Component"], [2 x %"struct.url::Component"]* %4, i64 0, i64 %47
  %49 = bitcast %"struct.url::Component"* %48 to i64*
  %50 = zext i32 %46 to i64
  %51 = shl nuw i64 %50, 32
  %52 = and i64 %37, 4294967295
  %53 = or i64 %51, %52
  store i64 %53, i64* %49, align 8
  %54 = add nuw nsw i32 %34, 1
  %55 = icmp eq i32 %54, 2
  %56 = or i1 %38, %55
  br i1 %56, label %60, label %57

57:                                               ; preds = %44
  %58 = add i64 %37, -1
  %59 = trunc i64 %58 to i32
  br label %32

60:                                               ; preds = %44
  %61 = load i32, i32* %13, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %158

63:                                               ; preds = %60
  %64 = load i32, i32* %12, align 16
  %65 = sext i32 %64 to i64
  %66 = icmp eq i32 %61, 1
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds i8, i8* %0, i64 %65
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 48
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = add nsw i64 %65, 1
  %73 = getelementptr inbounds i8, i8* %0, i64 %72
  %74 = load i8, i8* %73, align 1
  switch i8 %74, label %77 [
    i8 120, label %75
    i8 88, label %75
  ]

75:                                               ; preds = %71, %71
  %76 = add i32 %64, 2
  br label %77

77:                                               ; preds = %75, %71, %67, %63
  %78 = phi i32 [ 8, %75 ], [ 16, %67 ], [ 16, %63 ], [ 16, %71 ]
  %79 = phi i32 [ %76, %75 ], [ %64, %67 ], [ %64, %63 ], [ %64, %71 ]
  %80 = add i32 %64, %61
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %82, label %98

82:                                               ; preds = %77
  %83 = sext i32 %79 to i64
  br label %87

84:                                               ; preds = %87
  %85 = trunc i64 %97 to i32
  %86 = icmp eq i32 %80, %85
  br i1 %86, label %98, label %87

87:                                               ; preds = %84, %82
  %88 = phi i64 [ %83, %82 ], [ %97, %84 ]
  %89 = getelementptr inbounds i8, i8* %0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = and i32 %78, %94
  %96 = icmp eq i32 %95, 0
  %97 = add nsw i64 %88, 1
  br i1 %96, label %158, label %84

98:                                               ; preds = %84, %77
  %99 = bitcast %"class.url::RawCanonOutputT"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1048, i8* nonnull %99) #7
  %100 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 1024, i1 false) #7
  %101 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0, i32 1
  %103 = bitcast i8** %102 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 16, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  store i8* %100, i8** %102, align 8
  %104 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0, i32 2
  store i32 1024, i32* %104, align 8
  %105 = bitcast %"struct.url::CanonHostInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %105) #7
  %106 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %6, i64 0, i32 0
  %107 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %6, i64 0, i32 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %107, i8 -86, i64 16, i1 false) #7
  %108 = bitcast %"struct.url::CanonHostInfo"* %6 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, <4 x i32>* %108, align 16
  %109 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0
  call void @_ZN3url21CanonicalizeIPAddressEPKcRKNS_9ComponentEPNS_12CanonOutputTIcEEPNS_13CanonHostInfoE(i8* %0, %"struct.url::Component"* dereferenceable(8) %1, %"class.url::CanonOutputT"* nonnull %109, %"struct.url::CanonHostInfo"* nonnull %6) #7
  %110 = load i32, i32* %106, align 16
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %150

112:                                              ; preds = %98
  %113 = load i32, i32* %15, align 4
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %150

115:                                              ; preds = %112
  %116 = load i32, i32* %14, align 8
  %117 = sext i32 %116 to i64
  %118 = icmp eq i32 %113, 1
  br i1 %118, label %129, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds i8, i8* %0, i64 %117
  %121 = load i8, i8* %120, align 1
  %122 = icmp eq i8 %121, 48
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = add nsw i64 %117, 1
  %125 = getelementptr inbounds i8, i8* %0, i64 %124
  %126 = load i8, i8* %125, align 1
  switch i8 %126, label %129 [
    i8 120, label %127
    i8 88, label %127
  ]

127:                                              ; preds = %123, %123
  %128 = add i32 %116, 2
  br label %129

129:                                              ; preds = %127, %123, %119, %115
  %130 = phi i32 [ 8, %127 ], [ 16, %119 ], [ 16, %115 ], [ 16, %123 ]
  %131 = phi i32 [ %128, %127 ], [ %116, %119 ], [ %116, %115 ], [ %116, %123 ]
  %132 = add i32 %116, %113
  %133 = icmp slt i32 %131, %132
  br i1 %133, label %134, label %150

134:                                              ; preds = %129
  %135 = sext i32 %131 to i64
  br label %139

136:                                              ; preds = %139
  %137 = trunc i64 %149 to i32
  %138 = icmp eq i32 %132, %137
  br i1 %138, label %150, label %139

139:                                              ; preds = %136, %134
  %140 = phi i64 [ %135, %134 ], [ %149, %136 ]
  %141 = getelementptr inbounds i8, i8* %0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i64
  %144 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = and i32 %130, %146
  %148 = icmp eq i32 %147, 0
  %149 = add nsw i64 %140, 1
  br i1 %148, label %150, label %136

150:                                              ; preds = %139, %136, %129, %112, %98
  %151 = phi i32 [ 0, %98 ], [ 1, %112 ], [ 2, %129 ], [ 1, %139 ], [ 2, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %105) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %152 = load i8*, i8** %102, align 8
  %153 = icmp eq i8* %152, %100
  %154 = icmp eq i8* %152, null
  %155 = or i1 %153, %154
  br i1 %155, label %157, label %156

156:                                              ; preds = %150
  call void @_ZdaPv(i8* nonnull %152) #8
  br label %157

157:                                              ; preds = %156, %150
  call void @llvm.lifetime.end.p0i8(i64 1048, i8* nonnull %99) #7
  br label %158

158:                                              ; preds = %87, %157, %60, %26
  %159 = phi i32 [ %151, %157 ], [ 0, %26 ], [ 0, %60 ], [ 0, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  br label %160

160:                                              ; preds = %2, %158
  %161 = phi i32 [ %159, %158 ], [ 0, %2 ]
  ret i32 %161
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3url19CheckHostnameSafetyEPKDsRKNS_9ComponentE(i16* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca <4 x i32>, align 16
  %4 = bitcast <4 x i32>* %3 to [2 x %"struct.url::Component"]*
  %5 = alloca %"class.url::RawCanonOutputT", align 8
  %6 = alloca %"struct.url::CanonHostInfo", align 16
  %7 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %162

10:                                               ; preds = %2
  %11 = bitcast <4 x i32>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = getelementptr inbounds <4 x i32>, <4 x i32>* %3, i64 0, i64 0
  %13 = getelementptr inbounds [2 x %"struct.url::Component"], [2 x %"struct.url::Component"]* %4, i64 0, i64 0, i32 1
  %14 = getelementptr inbounds [2 x %"struct.url::Component"], [2 x %"struct.url::Component"]* %4, i64 0, i64 1, i32 0
  %15 = getelementptr inbounds [2 x %"struct.url::Component"], [2 x %"struct.url::Component"]* %4, i64 0, i64 1, i32 1
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %3, align 16
  %16 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, %8
  %19 = add nsw i32 %18, -1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %0, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 46
  br i1 %23, label %26, label %24

24:                                               ; preds = %10
  %25 = sext i32 %18 to i64
  br label %28

26:                                               ; preds = %10
  %27 = icmp eq i32 %17, %19
  br i1 %27, label %160, label %28

28:                                               ; preds = %26, %24
  %29 = phi i64 [ %25, %24 ], [ %20, %26 ]
  %30 = phi i32 [ %18, %24 ], [ %19, %26 ]
  %31 = sext i32 %17 to i64
  br label %32

32:                                               ; preds = %57, %28
  %33 = phi i64 [ %58, %57 ], [ %29, %28 ]
  %34 = phi i32 [ %54, %57 ], [ 0, %28 ]
  %35 = phi i32 [ %59, %57 ], [ %30, %28 ]
  br label %36

36:                                               ; preds = %32, %39
  %37 = phi i64 [ %40, %39 ], [ %33, %32 ]
  %38 = icmp eq i64 %37, %31
  br i1 %38, label %44, label %39

39:                                               ; preds = %36
  %40 = add i64 %37, -1
  %41 = getelementptr inbounds i16, i16* %0, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = icmp eq i16 %42, 46
  br i1 %43, label %44, label %36

44:                                               ; preds = %39, %36
  %45 = trunc i64 %37 to i32
  %46 = sub nsw i32 %35, %45
  %47 = zext i32 %34 to i64
  %48 = getelementptr inbounds [2 x %"struct.url::Component"], [2 x %"struct.url::Component"]* %4, i64 0, i64 %47
  %49 = bitcast %"struct.url::Component"* %48 to i64*
  %50 = zext i32 %46 to i64
  %51 = shl nuw i64 %50, 32
  %52 = and i64 %37, 4294967295
  %53 = or i64 %51, %52
  store i64 %53, i64* %49, align 8
  %54 = add nuw nsw i32 %34, 1
  %55 = icmp eq i32 %54, 2
  %56 = or i1 %38, %55
  br i1 %56, label %60, label %57

57:                                               ; preds = %44
  %58 = add i64 %37, -1
  %59 = trunc i64 %58 to i32
  br label %32

60:                                               ; preds = %44
  %61 = load i32, i32* %13, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %160

63:                                               ; preds = %60
  %64 = load i32, i32* %12, align 16
  %65 = sext i32 %64 to i64
  %66 = icmp eq i32 %61, 1
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds i16, i16* %0, i64 %65
  %69 = load i16, i16* %68, align 2
  %70 = icmp eq i16 %69, 48
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = add nsw i64 %65, 1
  %73 = getelementptr inbounds i16, i16* %0, i64 %72
  %74 = load i16, i16* %73, align 2
  switch i16 %74, label %77 [
    i16 120, label %75
    i16 88, label %75
  ]

75:                                               ; preds = %71, %71
  %76 = add i32 %64, 2
  br label %77

77:                                               ; preds = %75, %71, %67, %63
  %78 = phi i32 [ 8, %75 ], [ 16, %67 ], [ 16, %63 ], [ 16, %71 ]
  %79 = phi i32 [ %76, %75 ], [ %64, %67 ], [ %64, %63 ], [ %64, %71 ]
  %80 = add i32 %64, %61
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %82, label %99

82:                                               ; preds = %77
  %83 = sext i32 %79 to i64
  br label %87

84:                                               ; preds = %87
  %85 = trunc i64 %98 to i32
  %86 = icmp eq i32 %80, %85
  br i1 %86, label %99, label %87

87:                                               ; preds = %84, %82
  %88 = phi i64 [ %83, %82 ], [ %98, %84 ]
  %89 = getelementptr inbounds i16, i16* %0, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = and i16 %90, 255
  %92 = zext i16 %91 to i64
  %93 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = and i32 %78, %95
  %97 = icmp eq i32 %96, 0
  %98 = add nsw i64 %88, 1
  br i1 %97, label %160, label %84

99:                                               ; preds = %84, %77
  %100 = bitcast %"class.url::RawCanonOutputT"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1048, i8* nonnull %100) #7
  %101 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 1024, i1 false) #7
  %102 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0, i32 1
  %104 = bitcast i8** %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  store i8* %101, i8** %103, align 8
  %105 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0, i32 2
  store i32 1024, i32* %105, align 8
  %106 = bitcast %"struct.url::CanonHostInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %106) #7
  %107 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %6, i64 0, i32 0
  %108 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %6, i64 0, i32 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %108, i8 -86, i64 16, i1 false) #7
  %109 = bitcast %"struct.url::CanonHostInfo"* %6 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, <4 x i32>* %109, align 16
  %110 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0
  call void @_ZN3url21CanonicalizeIPAddressEPKDsRKNS_9ComponentEPNS_12CanonOutputTIcEEPNS_13CanonHostInfoE(i16* %0, %"struct.url::Component"* dereferenceable(8) %1, %"class.url::CanonOutputT"* nonnull %110, %"struct.url::CanonHostInfo"* nonnull %6) #7
  %111 = load i32, i32* %107, align 16
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %152

113:                                              ; preds = %99
  %114 = load i32, i32* %15, align 4
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %152

116:                                              ; preds = %113
  %117 = load i32, i32* %14, align 8
  %118 = sext i32 %117 to i64
  %119 = icmp eq i32 %114, 1
  br i1 %119, label %130, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds i16, i16* %0, i64 %118
  %122 = load i16, i16* %121, align 2
  %123 = icmp eq i16 %122, 48
  br i1 %123, label %124, label %130

124:                                              ; preds = %120
  %125 = add nsw i64 %118, 1
  %126 = getelementptr inbounds i16, i16* %0, i64 %125
  %127 = load i16, i16* %126, align 2
  switch i16 %127, label %130 [
    i16 120, label %128
    i16 88, label %128
  ]

128:                                              ; preds = %124, %124
  %129 = add i32 %117, 2
  br label %130

130:                                              ; preds = %128, %124, %120, %116
  %131 = phi i32 [ 8, %128 ], [ 16, %120 ], [ 16, %116 ], [ 16, %124 ]
  %132 = phi i32 [ %129, %128 ], [ %117, %120 ], [ %117, %116 ], [ %117, %124 ]
  %133 = add i32 %117, %114
  %134 = icmp slt i32 %132, %133
  br i1 %134, label %135, label %152

135:                                              ; preds = %130
  %136 = sext i32 %132 to i64
  br label %140

137:                                              ; preds = %140
  %138 = trunc i64 %151 to i32
  %139 = icmp eq i32 %133, %138
  br i1 %139, label %152, label %140

140:                                              ; preds = %137, %135
  %141 = phi i64 [ %136, %135 ], [ %151, %137 ]
  %142 = getelementptr inbounds i16, i16* %0, i64 %141
  %143 = load i16, i16* %142, align 2
  %144 = and i16 %143, 255
  %145 = zext i16 %144 to i64
  %146 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3url20kSharedCharTypeTableE, i64 0, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i32
  %149 = and i32 %131, %148
  %150 = icmp eq i32 %149, 0
  %151 = add nsw i64 %141, 1
  br i1 %150, label %152, label %137

152:                                              ; preds = %140, %137, %130, %113, %99
  %153 = phi i32 [ 0, %99 ], [ 1, %113 ], [ 2, %130 ], [ 1, %140 ], [ 2, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %154 = load i8*, i8** %103, align 8
  %155 = icmp eq i8* %154, %101
  %156 = icmp eq i8* %154, null
  %157 = or i1 %155, %156
  br i1 %157, label %159, label %158

158:                                              ; preds = %152
  call void @_ZdaPv(i8* nonnull %154) #8
  br label %159

159:                                              ; preds = %158, %152
  call void @llvm.lifetime.end.p0i8(i64 1048, i8* nonnull %100) #7
  br label %160

160:                                              ; preds = %87, %159, %60, %26
  %161 = phi i32 [ %153, %159 ], [ 0, %26 ], [ 0, %60 ], [ 0, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  br label %162

162:                                              ; preds = %2, %160
  %163 = phi i32 [ %161, %160 ], [ 0, %2 ]
  ret i32 %163
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZN3url7_itoa_sEiPcmi(i32, i8*, i64, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @strtoull(i8* readonly, i8** nocapture, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi1024EED2Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i8* %4, %5
  %7 = icmp eq i8* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #8
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi1024EED0Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i8* %4, %5
  %7 = icmp eq i8* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #8
  br label %10

10:                                               ; preds = %1, %9
  %11 = bitcast %"class.url::RawCanonOutputT"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi1024EE6ResizeEi(%"class.url::RawCanonOutputT"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = tail call i8* @_Znam(i64 %3) #8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %1
  %10 = select i1 %9, i32 %8, i32 %1
  %11 = sext i32 %10 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 %6, i64 %11, i1 false)
  %12 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %13 = icmp eq i8* %6, %12
  %14 = icmp eq i8* %6, null
  %15 = or i1 %13, %14
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  tail call void @_ZdaPv(i8* nonnull %6) #8
  br label %17

17:                                               ; preds = %2, %16
  store i8* %4, i8** %5, align 8
  %18 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 2
  store i32 %1, i32* %18, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7, !3}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !5}
!10 = distinct !{!10, !7, !3}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !5}
!13 = distinct !{!13, !7, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !5}
!16 = distinct !{!16, !7, !3}
!17 = distinct !{!17, !3}
!18 = distinct !{!18, !7, !3}
