; ModuleID = '../../native_client/src/trusted/debug_stub/posix/platform_impl.cc'
source_filename = "../../native_client/src/trusted/debug_stub/posix/platform_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.NaClSyscallTableEntry = type { i32 (%struct.NaClAppThread*)* }
%struct.NaClAppThread = type opaque
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDescEffector = type opaque
%struct.NaClDynamicRegion = type opaque
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.NaClValidationCache = type opaque
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClDesc = type opaque
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type opaque

@.str = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.1 = private unnamed_addr constant [66 x i8] c"../../native_client/src/trusted/debug_stub/posix/platform_impl.cc\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"close(pipe_fds[0]) == 0\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"close(pipe_fds[1]) == 0\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4port9IPlatform9GetMemoryEmjPv(i64, i32, i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = inttoptr i64 %0 to i8*
  %5 = zext i32 %1 to i64
  %6 = tail call fastcc zeroext i1 @_ZN4portL14SafeMemoryCopyEPvS0_m(i8* %2, i8* %4, i64 %5)
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4portL14SafeMemoryCopyEPvS0_m(i8* nocapture, i8* nocapture readonly, i64) unnamed_addr #0 {
  %4 = alloca [2 x i32], align 4
  %5 = icmp ugt i64 %2, 4096
  br i1 %5, label %33, label %6

6:                                                ; preds = %3
  %7 = bitcast [2 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  %8 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 0
  store i32 -1431655766, i32* %8, align 4
  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 1
  store i32 -1431655766, i32* %9, align 4
  %10 = call i32 @pipe(i32* nonnull %8) #5
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %31

12:                                               ; preds = %6
  %13 = load i32, i32* %9, align 4
  %14 = call i64 @write(i32 %13, i8* %1, i64 %2) #5
  %15 = icmp eq i64 %14, %2
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = load i32, i32* %8, align 4
  %18 = call i64 @read(i32 %17, i8* %0, i64 %2) #5
  %19 = icmp eq i64 %18, %2
  br label %20

20:                                               ; preds = %12, %16
  %21 = phi i1 [ %19, %16 ], [ false, %12 ]
  %22 = load i32, i32* %8, align 4
  %23 = call i32 @close(i32 %22) #5
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 57, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #5
  br label %26

26:                                               ; preds = %20, %25
  %27 = load i32, i32* %9, align 4
  %28 = call i32 @close(i32 %27) #5
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #5
  br label %31

31:                                               ; preds = %26, %30, %6
  %32 = phi i1 [ false, %6 ], [ %21, %30 ], [ %21, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  br label %33

33:                                               ; preds = %3, %31
  %34 = phi i1 [ %32, %31 ], [ false, %3 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4port9IPlatform9SetMemoryEP7NaClAppmjPv(%struct.NaClApp* nocapture readonly, i64, i32, i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = and i64 %1, -4096
  %6 = zext i32 %2 to i64
  %7 = add i64 %6, %1
  %8 = add i64 %7, 4095
  %9 = and i64 %8, -4096
  %10 = sub i64 %9, %5
  %11 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 9
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, %12
  %16 = icmp ugt i64 %7, %15
  br i1 %16, label %21, label %17

17:                                               ; preds = %4
  %18 = inttoptr i64 %5 to i8*
  %19 = tail call i32 @mprotect(i8* %18, i64 %10, i32 3) #5
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %31

21:                                               ; preds = %4
  %22 = inttoptr i64 %1 to i8*
  %23 = tail call fastcc zeroext i1 @_ZN4portL14SafeMemoryCopyEPvS0_m(i8* %22, i8* %3, i64 %6)
  br label %29

24:                                               ; preds = %17
  %25 = inttoptr i64 %1 to i8*
  %26 = tail call fastcc zeroext i1 @_ZN4portL14SafeMemoryCopyEPvS0_m(i8* %25, i8* %3, i64 %6)
  %27 = tail call i32 @mprotect(i8* %18, i64 %10, i32 5) #5
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %21, %24
  %30 = phi i1 [ %26, %24 ], [ %23, %21 ]
  tail call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !2
  br label %31

31:                                               ; preds = %29, %24, %17
  %32 = phi i1 [ false, %17 ], [ %30, %29 ], [ false, %24 ]
  ret i1 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i32 @mprotect(i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i32 @pipe(i32*) local_unnamed_addr #2

; Function Attrs: nofree
declare i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #3

declare i32 @close(i32) local_unnamed_addr #4

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 3207011}
