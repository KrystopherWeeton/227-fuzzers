; ModuleID = 'gen/ipc/ipc.mojom-test-utils.cc'
source_filename = "gen/ipc/ipc.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.IPC::mojom::GenericInterfaceAsyncWaiter" = type { %"class.IPC::mojom::GenericInterface"* }
%"class.IPC::mojom::GenericInterface" = type { i32 (...)** }
%"class.IPC::mojom::ChannelAsyncWaiter" = type { %"class.IPC::mojom::Channel"* }
%"class.IPC::mojom::Channel" = type { i32 (...)** }
%"class.IPC::mojom::ChannelBootstrapAsyncWaiter" = type { %"class.IPC::mojom::ChannelBootstrap"* }
%"class.IPC::mojom::ChannelBootstrap" = type { i32 (...)** }
%"class.IPC::mojom::ChannelInterceptorForTesting" = type { %"class.IPC::mojom::Channel" }
%"class.IPC::MessageView" = type { %"class.base::span", %"class.absl::optional" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.1" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::native::SerializedHandle"* }
%"class.mojo::native::SerializedHandle" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.mojo::StructPtr"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::PendingAssociatedReceiver" = type { %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque

$_ZN3IPC5mojom7ChannelD2Ev = comdat any

$_ZN3IPC5mojom28ChannelInterceptorForTestingD0Ev = comdat any

@_ZTVN3IPC5mojom28ChannelInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.IPC::mojom::Channel"*)* @_ZN3IPC5mojom7ChannelD2Ev to i8*), i8* bitcast (void (%"class.IPC::mojom::ChannelInterceptorForTesting"*)* @_ZN3IPC5mojom28ChannelInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.IPC::mojom::ChannelInterceptorForTesting"*, i32)* @_ZN3IPC5mojom28ChannelInterceptorForTesting10SetPeerPidEi to i8*), i8* bitcast (void (%"class.IPC::mojom::ChannelInterceptorForTesting"*, %"class.IPC::MessageView"*)* @_ZN3IPC5mojom28ChannelInterceptorForTesting7ReceiveENS_11MessageViewE to i8*), i8* bitcast (void (%"class.IPC::mojom::ChannelInterceptorForTesting"*, %"class.std::__1::basic_string"*, %"class.mojo::PendingAssociatedReceiver"*)* @_ZN3IPC5mojom28ChannelInterceptorForTesting22GetAssociatedInterfaceERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4mojo25PendingAssociatedReceiverINS0_16GenericInterfaceEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3IPC5mojom27GenericInterfaceAsyncWaiterC1EPNS0_16GenericInterfaceE = hidden unnamed_addr alias void (%"class.IPC::mojom::GenericInterfaceAsyncWaiter"*, %"class.IPC::mojom::GenericInterface"*), void (%"class.IPC::mojom::GenericInterfaceAsyncWaiter"*, %"class.IPC::mojom::GenericInterface"*)* @_ZN3IPC5mojom27GenericInterfaceAsyncWaiterC2EPNS0_16GenericInterfaceE
@_ZN3IPC5mojom27GenericInterfaceAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.IPC::mojom::GenericInterfaceAsyncWaiter"*), void (%"class.IPC::mojom::GenericInterfaceAsyncWaiter"*)* @_ZN3IPC5mojom27GenericInterfaceAsyncWaiterD2Ev
@_ZN3IPC5mojom18ChannelAsyncWaiterC1EPNS0_7ChannelE = hidden unnamed_addr alias void (%"class.IPC::mojom::ChannelAsyncWaiter"*, %"class.IPC::mojom::Channel"*), void (%"class.IPC::mojom::ChannelAsyncWaiter"*, %"class.IPC::mojom::Channel"*)* @_ZN3IPC5mojom18ChannelAsyncWaiterC2EPNS0_7ChannelE
@_ZN3IPC5mojom18ChannelAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.IPC::mojom::ChannelAsyncWaiter"*), void (%"class.IPC::mojom::ChannelAsyncWaiter"*)* @_ZN3IPC5mojom18ChannelAsyncWaiterD2Ev
@_ZN3IPC5mojom27ChannelBootstrapAsyncWaiterC1EPNS0_16ChannelBootstrapE = hidden unnamed_addr alias void (%"class.IPC::mojom::ChannelBootstrapAsyncWaiter"*, %"class.IPC::mojom::ChannelBootstrap"*), void (%"class.IPC::mojom::ChannelBootstrapAsyncWaiter"*, %"class.IPC::mojom::ChannelBootstrap"*)* @_ZN3IPC5mojom27ChannelBootstrapAsyncWaiterC2EPNS0_16ChannelBootstrapE
@_ZN3IPC5mojom27ChannelBootstrapAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.IPC::mojom::ChannelBootstrapAsyncWaiter"*), void (%"class.IPC::mojom::ChannelBootstrapAsyncWaiter"*)* @_ZN3IPC5mojom27ChannelBootstrapAsyncWaiterD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3IPC5mojom27GenericInterfaceAsyncWaiterC2EPNS0_16GenericInterfaceE(%"class.IPC::mojom::GenericInterfaceAsyncWaiter"* nocapture, %"class.IPC::mojom::GenericInterface"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.IPC::mojom::GenericInterfaceAsyncWaiter", %"class.IPC::mojom::GenericInterfaceAsyncWaiter"* %0, i64 0, i32 0
  store %"class.IPC::mojom::GenericInterface"* %1, %"class.IPC::mojom::GenericInterface"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3IPC5mojom27GenericInterfaceAsyncWaiterD2Ev(%"class.IPC::mojom::GenericInterfaceAsyncWaiter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC5mojom28ChannelInterceptorForTesting10SetPeerPidEi(%"class.IPC::mojom::ChannelInterceptorForTesting"*, i32) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.IPC::mojom::ChannelInterceptorForTesting"* %0 to %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)***
  %4 = load %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)**, %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)*, %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)** %4, i64 5
  %6 = load %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)*, %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.IPC::mojom::Channel"* %6(%"class.IPC::mojom::ChannelInterceptorForTesting"* %0) #7
  %8 = bitcast %"class.IPC::mojom::Channel"* %7 to void (%"class.IPC::mojom::Channel"*, i32)***
  %9 = load void (%"class.IPC::mojom::Channel"*, i32)**, void (%"class.IPC::mojom::Channel"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.IPC::mojom::Channel"*, i32)*, void (%"class.IPC::mojom::Channel"*, i32)** %9, i64 2
  %11 = load void (%"class.IPC::mojom::Channel"*, i32)*, void (%"class.IPC::mojom::Channel"*, i32)** %10, align 8
  tail call void %11(%"class.IPC::mojom::Channel"* %7, i32 %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC5mojom28ChannelInterceptorForTesting7ReceiveENS_11MessageViewE(%"class.IPC::mojom::ChannelInterceptorForTesting"*, %"class.IPC::MessageView"*) unnamed_addr #2 align 2 {
  %3 = alloca %"class.IPC::MessageView", align 8
  %4 = bitcast %"class.IPC::mojom::ChannelInterceptorForTesting"* %0 to %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)***
  %5 = load %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)**, %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)*, %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)*, %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.IPC::mojom::Channel"* %7(%"class.IPC::mojom::ChannelInterceptorForTesting"* %0) #7
  call void @_ZN3IPC11MessageViewC1EOS0_(%"class.IPC::MessageView"* nonnull %3, %"class.IPC::MessageView"* dereferenceable(48) %1) #7
  %9 = bitcast %"class.IPC::mojom::Channel"* %8 to void (%"class.IPC::mojom::Channel"*, %"class.IPC::MessageView"*)***
  %10 = load void (%"class.IPC::mojom::Channel"*, %"class.IPC::MessageView"*)**, void (%"class.IPC::mojom::Channel"*, %"class.IPC::MessageView"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.IPC::mojom::Channel"*, %"class.IPC::MessageView"*)*, void (%"class.IPC::mojom::Channel"*, %"class.IPC::MessageView"*)** %10, i64 3
  %12 = load void (%"class.IPC::mojom::Channel"*, %"class.IPC::MessageView"*)*, void (%"class.IPC::mojom::Channel"*, %"class.IPC::MessageView"*)** %11, align 8
  call void %12(%"class.IPC::mojom::Channel"* %8, %"class.IPC::MessageView"* nonnull %3) #7
  call void @_ZN3IPC11MessageViewD1Ev(%"class.IPC::MessageView"* nonnull %3) #7
  ret void
}

declare void @_ZN3IPC11MessageViewC1EOS0_(%"class.IPC::MessageView"*, %"class.IPC::MessageView"* dereferenceable(48)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3IPC11MessageViewD1Ev(%"class.IPC::MessageView"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC5mojom28ChannelInterceptorForTesting22GetAssociatedInterfaceERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4mojo25PendingAssociatedReceiverINS0_16GenericInterfaceEEE(%"class.IPC::mojom::ChannelInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.mojo::PendingAssociatedReceiver"*) unnamed_addr #2 align 2 {
  %4 = alloca %"class.mojo::PendingAssociatedReceiver", align 8
  %5 = bitcast %"class.IPC::mojom::ChannelInterceptorForTesting"* %0 to %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)***
  %6 = load %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)**, %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)*, %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)** %6, i64 5
  %8 = load %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)*, %"class.IPC::mojom::Channel"* (%"class.IPC::mojom::ChannelInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.IPC::mojom::Channel"* %8(%"class.IPC::mojom::ChannelInterceptorForTesting"* %0) #7
  %10 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %2, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %10, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %11) #7
  %12 = bitcast %"class.IPC::mojom::Channel"* %9 to void (%"class.IPC::mojom::Channel"*, %"class.std::__1::basic_string"*, %"class.mojo::PendingAssociatedReceiver"*)***
  %13 = load void (%"class.IPC::mojom::Channel"*, %"class.std::__1::basic_string"*, %"class.mojo::PendingAssociatedReceiver"*)**, void (%"class.IPC::mojom::Channel"*, %"class.std::__1::basic_string"*, %"class.mojo::PendingAssociatedReceiver"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.IPC::mojom::Channel"*, %"class.std::__1::basic_string"*, %"class.mojo::PendingAssociatedReceiver"*)*, void (%"class.IPC::mojom::Channel"*, %"class.std::__1::basic_string"*, %"class.mojo::PendingAssociatedReceiver"*)** %13, i64 4
  %15 = load void (%"class.IPC::mojom::Channel"*, %"class.std::__1::basic_string"*, %"class.mojo::PendingAssociatedReceiver"*)*, void (%"class.IPC::mojom::Channel"*, %"class.std::__1::basic_string"*, %"class.mojo::PendingAssociatedReceiver"*)** %14, align 8
  call void %15(%"class.IPC::mojom::Channel"* %9, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.mojo::PendingAssociatedReceiver"* nonnull %4) #7
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %10) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3IPC5mojom18ChannelAsyncWaiterC2EPNS0_7ChannelE(%"class.IPC::mojom::ChannelAsyncWaiter"* nocapture, %"class.IPC::mojom::Channel"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.IPC::mojom::ChannelAsyncWaiter", %"class.IPC::mojom::ChannelAsyncWaiter"* %0, i64 0, i32 0
  store %"class.IPC::mojom::Channel"* %1, %"class.IPC::mojom::Channel"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3IPC5mojom18ChannelAsyncWaiterD2Ev(%"class.IPC::mojom::ChannelAsyncWaiter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3IPC5mojom27ChannelBootstrapAsyncWaiterC2EPNS0_16ChannelBootstrapE(%"class.IPC::mojom::ChannelBootstrapAsyncWaiter"* nocapture, %"class.IPC::mojom::ChannelBootstrap"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.IPC::mojom::ChannelBootstrapAsyncWaiter", %"class.IPC::mojom::ChannelBootstrapAsyncWaiter"* %0, i64 0, i32 0
  store %"class.IPC::mojom::ChannelBootstrap"* %1, %"class.IPC::mojom::ChannelBootstrap"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3IPC5mojom27ChannelBootstrapAsyncWaiterD2Ev(%"class.IPC::mojom::ChannelBootstrapAsyncWaiter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3IPC5mojom7ChannelD2Ev(%"class.IPC::mojom::Channel"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3IPC5mojom28ChannelInterceptorForTestingD0Ev(%"class.IPC::mojom::ChannelInterceptorForTesting"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
