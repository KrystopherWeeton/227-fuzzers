; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_speed_features.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_speed_features.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.macroblock = type { [3 x %struct.macroblock_plane], %struct.macroblockd, %struct.MB_MODE_INFO_EXT*, %struct.MB_MODE_INFO_EXT*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, [4 x i32], [4 x i32], i32, [4 x i32], [4 x i32], [4 x i32], [2 x i32*], [2 x i32*], i32**, [4 x i32], [2 x i32*], [2 x i32*], i32**, i32, i32, %struct.MvLimits, [4 x [256 x i8]], [4 x i32], i32, i32, [4 x [2 x [2 x [6 x [2 x [6 x [12 x i32]]]]]]], i32, i32, i32, i32, i32, [12 x i8], [12 x i64], [4 x %struct.mv], [2 x i8], i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, [25 x i8], i8, i8, void (i16*, i32*, i32)*, void (i32*, i8*, i32, i32)*, void (i32*, i16*, i32, i32, i32)*, [8 x i8], [4096 x i8], %struct.scale_factors*, [8 x i8] }
%struct.macroblock_plane = type { [4096 x i16], i32*, i32*, i16*, %struct.buf_2d, [8 x i8], [8 x i16], i16*, i16*, i16*, i16*, i16*, [2 x i64], [8 x i8] }
%struct.buf_2d = type { i8*, i32 }
%struct.macroblockd = type { [3 x %struct.macroblockd_plane], i8, i8, %struct.FRAME_COUNTS*, %struct.TileInfo, i32, %struct.MODE_INFO**, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i32, [3 x i8]*, i32, i32, i32, i32, %struct.frame_contexts*, [2 x %struct.RefBuffer*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [16 x i8]], i8*, [8 x i8], i32, i32, i32, %struct.vpx_internal_error_info*, i32* }
%struct.macroblockd_plane = type { i32*, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i16, i16, i8, i8, i16*, i32* }
%struct.FRAME_COUNTS = type { [4 x [10 x i32]], [10 x [10 x i32]], [16 x [4 x i32]], [4 x [2 x [2 x [6 x [6 x [4 x i32]]]]]], [4 x [2 x [2 x [6 x [6 x i32]]]]], [4 x [3 x i32]], [7 x [4 x i32]], [4 x [2 x i32]], [5 x [2 x i32]], [5 x [2 x [2 x i32]]], [5 x [2 x i32]], %struct.tx_counts, [3 x [2 x i32]], %struct.nmv_context_counts }
%struct.tx_counts = type { [2 x [4 x i32]], [2 x [3 x i32]], [2 x [2 x i32]], [4 x i32] }
%struct.nmv_context_counts = type { [4 x i32], [2 x %struct.nmv_component_counts] }
%struct.nmv_component_counts = type { [2 x i32], [11 x i32], [2 x i32], [10 x [2 x i32]], [2 x [4 x i32]], [4 x i32], [2 x i32], [2 x i32] }
%struct.TileInfo = type { i32, i32, i32, i32 }
%struct.MODE_INFO = type { i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], [2 x %union.int_mv], [4 x %struct.b_mode_info] }
%union.int_mv = type { i32 }
%struct.b_mode_info = type { i8, [2 x %union.int_mv] }
%struct.frame_contexts = type { [4 x [9 x i8]], [10 x [9 x i8]], [16 x [3 x i8]], [4 x [2 x [2 x [6 x [6 x [3 x i8]]]]]], [4 x [2 x i8]], [7 x [3 x i8]], [4 x i8], [5 x i8], [5 x [2 x i8]], [5 x i8], %struct.tx_probs, [3 x i8], %struct.nmv_context, i32 }
%struct.tx_probs = type { [2 x [3 x i8]], [2 x [2 x i8]], [2 x [1 x i8]] }
%struct.nmv_context = type { [3 x i8], [2 x %struct.nmv_component] }
%struct.nmv_component = type { i8, [10 x i8], [1 x i8], [10 x i8], [2 x [3 x i8]], [3 x i8], i8, i8 }
%struct.RefBuffer = type { i32, %struct.yv12_buffer_config*, %struct.scale_factors }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)*, [2 x [2 x [2 x void (i8*, i64, i8*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32)*]]], [2 x [2 x [2 x void (i16*, i64, i16*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32, i32)*]]] }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.MB_MODE_INFO_EXT = type { [4 x [2 x %union.int_mv]], [4 x i8] }
%struct.MvLimits = type { i32, i32, i32, i32 }
%struct.mv = type { i16, i16 }
%struct.search_site_config = type { [88 x %struct.mv], [88 x i64], i32, i32 }
%struct.vp9_variance_vtable = type { i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32, i8*)*, i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8*, i32, i32*)* }
%struct.VP9_COMP = type { %struct.FRAME_INFO, [8 x i8], %struct.QUANTS, %struct.ThreadData, %struct.MB_MODE_INFO_EXT*, [8 x i8], [256 x [8 x i16]], [256 x [8 x i16]], %struct.VP9Common, %struct.VP9EncoderConfig, %struct.lookahead_ctx*, %struct.lookahead_entry*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, i8, [50 x %struct.TplDepFrame], [8 x %struct.yv12_buffer_config*], [8 x %struct.EncFrameBuf], %union.pthread_mutex_t, i32, %struct.KMEANS_DATA*, i32, i32, [8 x double], [8 x double], [8 x i32], i32, %struct.TileDataEnc*, i32, i32, [3 x i32], i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64*, i32, i32, double*, %struct.yv12_buffer_config, [4 x [64 x %struct.TOKENEXTRA*]], [4 x [64 x %struct.TOKENLIST*]], i64, %struct.RD_OPT, %struct.CODING_CONTEXT, [2 x i32*], [2 x i32*], [2 x i32*], [2 x i32*], i64, i64, i64, %struct.RATE_CONTROL, double, [8 x [4 x i32]], %struct.vpx_codec_pkt_list*, [25 x %struct.MBGRAPH_FRAME_STATS], i32, i32, i32, %struct.SPEED_FEATURES, i32, i32, i32, i32, i32, i8*, i8*, [8 x i32], %struct.CYCLIC_REFRESH*, %struct.ActiveMap, i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)*, %struct.scale_factors, i32 (%struct.macroblock*, %struct.search_site_config*, %struct.mv*, %struct.mv*, i32, i32, i32*, %struct.vp9_variance_vtable*, %struct.mv*)*, [13 x %struct.vp9_variance_vtable], i64, i64, i64, i64, %struct.TWO_PASS, i8, %struct.yv12_buffer_config, %struct.ALT_REF_AQ*, i32, i32, i32, i32, i32, i32, %struct.SVC, %struct.diff*, i32, i32, i32, %struct.search_site_config, [10 x i32], [7 x [4 x i32]], [2 x [10 x [10 x i32]]], [10 x [10 x [10 x i32]]], [4 x [3 x i32]], [16 x [4 x i32]], [3 x [2 x [4 x i32]]], %struct.vp9_denoiser, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.noise_estimate, i8*, [4 x i64], i64, i64, i64, i8, i32, %struct.VPxWorker*, %struct.EncWorkerData*, %struct.VP9LfSyncData, %struct.VP9BitstreamWorkerData*, i32, %struct.Vp9LevelInfo, %struct.MultiThreadHandle, void (%struct.VP9RowMTSyncData*, i32, i32)*, void (%struct.VP9RowMTSyncData*, i32, i32, i32)*, %struct.ARNRFilterData, i32, i32, i8*, i8*, i8*, i8*, i8, i8, i8*, i32, %struct.LevelConstraint, i8*, i8*, i32, %struct.vpx_roi_map, i32, %struct.EXT_RATECTRL, [8 x i8] }
%struct.FRAME_INFO = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.QUANTS = type { [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]] }
%struct.ThreadData = type { %struct.macroblock, %struct.RD_COUNTS, %struct.FRAME_COUNTS*, %struct.PICK_MODE_CONTEXT*, %struct.PC_TREE*, %struct.PC_TREE*, [8 x i8] }
%struct.RD_COUNTS = type { [4 x [2 x [2 x [6 x [6 x [12 x i32]]]]]], [3 x i64], [4 x i64] }
%struct.PICK_MODE_CONTEXT = type { %struct.MODE_INFO, %struct.MB_MODE_INFO_EXT, i8*, [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i16*]], [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i16*]], i32, i32, i32, i32, i32, [12 x i8], i32, i32, i32, i32, [4 x i64], i32, i64, i64, i32, i32, i32, i8, %union.int_mv, i8, i8, i32, [4 x %struct.mv], i8, i32, i8 }
%struct.PC_TREE = type { i32, i32, i8, %struct.PICK_MODE_CONTEXT, [2 x %struct.PICK_MODE_CONTEXT], [2 x %struct.PICK_MODE_CONTEXT], %union.anon, %struct.mv }
%union.anon = type { [4 x %struct.PC_TREE*] }
%struct.VP9Common = type { %struct.vpx_internal_error_info, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.yv12_buffer_config*, %struct.RefCntBuffer*, %struct.RefCntBuffer*, [8 x i32], [8 x i32], [3 x %struct.RefBuffer], i32, i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i16]], [8 x [2 x i16]], i32, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, i32 (%struct.VP9Common*, i32)*, void (%struct.VP9Common*)*, void (%struct.VP9Common*)*, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, i32, i32, i32, [2 x i8*], i8*, i8*, i32, i8, [11 x i8], %struct.loop_filter_info_n, i32, [4 x i32], %struct.loopfilter, %struct.segmentation, i8, [2 x i8], i32, %struct.frame_contexts*, %struct.frame_contexts*, i32, %struct.FRAME_COUNTS, i32, i32, i32, i32, i32, %struct.postproc_state, i32, i32, i32, i32, i32, i32, %struct.BufferPool*, i8*, i8*, i32, i32, [8 x i8] }
%struct.RefCntBuffer = type { i32, %struct.MV_REF*, i32, i32, i8, i32, i32, %struct.vpx_codec_frame_buffer, %struct.yv12_buffer_config }
%struct.MV_REF = type { [2 x %union.int_mv], [2 x i8] }
%struct.vpx_codec_frame_buffer = type { i8*, i64, i8* }
%struct.loop_filter_info_n = type { [64 x %struct.loop_filter_thresh], [8 x [4 x [2 x i8]]] }
%struct.loop_filter_thresh = type { [16 x i8], [16 x i8], [16 x i8] }
%struct.loopfilter = type { i32, i32, i32, i32, i8, i8, [4 x i8], [4 x i8], [2 x i8], [2 x i8], %struct.LOOP_FILTER_MASK*, i32 }
%struct.LOOP_FILTER_MASK = type { [4 x i64], [4 x i64], i64, [4 x i16], [4 x i16], i16, [64 x i8] }
%struct.segmentation = type { i8, i8, i8, i8, i8, [7 x i8], [3 x i8], [8 x [4 x i16]], [8 x i32], i32 }
%struct.postproc_state = type { i32, i32, i32, i32, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i8*, i8* }
%struct.BufferPool = type { i8*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, [12 x %struct.RefCntBuffer], %struct.InternalFrameBufferList }
%struct.InternalFrameBufferList = type { i32, %struct.InternalFrameBuffer* }
%struct.InternalFrameBuffer = type { i8*, i64, i32 }
%struct.VP9EncoderConfig = type { i32, i32, i32, i32, i32, double, %struct.vpx_rational, %struct.vpx_rational64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i32], [5 x i32], [5 x i32], [5 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vpx_fixed_buf, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.vpx_rational = type { i32, i32 }
%struct.vpx_rational64 = type { i64, i32 }
%struct.vpx_fixed_buf = type { i8*, i64 }
%struct.lookahead_ctx = type { i32, i32, i32, i32, i32, %struct.lookahead_entry* }
%struct.lookahead_entry = type { %struct.yv12_buffer_config, i64, i64, i32, i64 }
%struct.TplDepFrame = type { i8, %struct.TplDepStats*, i32, i32, i32, i32, i32, i32 }
%struct.TplDepStats = type { i64, i64, i64, i64, i64, i32, %union.int_mv }
%struct.EncFrameBuf = type { i32, i32, %struct.yv12_buffer_config }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.KMEANS_DATA = type { double, i32, i32 }
%struct.TileDataEnc = type { %struct.TileInfo, [13 x [30 x i32]], [13 x [30 x i8]], %struct.FIRSTPASS_DATA, %struct.VP9RowMTSyncData, i32* }
%struct.FIRSTPASS_DATA = type { double, double, i64, i64, i64, i64, i32, i32, double, double, double, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32 }
%struct.VP9RowMTSyncData = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32 }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.0, %union.anon.1, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.0 = type { i64 }
%union.anon.1 = type { i64 }
%struct.TOKENEXTRA = type { i8*, i16, i32 }
%struct.TOKENLIST = type { %struct.TOKENEXTRA*, %struct.TOKENEXTRA*, i32 }
%struct.RD_OPT = type { [30 x i32], [6 x i32], [8 x [13 x [30 x i32]]], [4 x [3 x i64]], [4 x [4 x i64]], i32, i32, double }
%struct.CODING_CONTEXT = type { [4 x i32], [2 x [32767 x i32]], [2 x [32767 x i32]], [3 x i8], i8*, [4 x i8], [2 x i8], %struct.frame_contexts }
%struct.RATE_CONTROL = type { i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, [5 x double], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], double, double, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, [2 x i32], [2 x i32], [5 x i32], i32, i32, [25 x i64], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, [5 x i32], double, i32, i32, i32, i32 }
%struct.vpx_codec_pkt_list = type { i32, i32, [1 x %struct.vpx_codec_cx_pkt] }
%struct.vpx_codec_cx_pkt = type { i32, %union.anon.3 }
%union.anon.3 = type { %struct.anon.4, [40 x i8] }
%struct.anon.4 = type { i8*, i64, i64, i64, i32, i32, [5 x i32], [5 x i32], [5 x i8] }
%struct.MBGRAPH_FRAME_STATS = type { %struct.MBGRAPH_MB_STATS* }
%struct.MBGRAPH_MB_STATS = type { [4 x %struct.anon.5] }
%struct.anon.5 = type { i32, %union.anon.6 }
%union.anon.6 = type { %union.int_mv }
%struct.SPEED_FEATURES = type { %struct.MV_SPEED_FEATURES, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i8, i8, i32, i32, i8, i8, i8, i32, i32, i32, i32, i32, i32, [4 x %struct.MESH_PATTERN], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32], [4 x i32], [13 x i32], i32, i32, i32, i32, i32, [13 x i32], i32, i32, i32, i8, i32, i32, i32, i8, i32, i32, i32, %struct.PARTITION_SEARCH_BREAKOUT_THR, %struct.anon.7, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MV_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32, i32, %struct.ADAPT_SUBPEL_FORCE_STOP, i32 }
%struct.ADAPT_SUBPEL_FORCE_STOP = type { i32, i32, i32 }
%struct.MESH_PATTERN = type { i32, i32 }
%struct.PARTITION_SEARCH_BREAKOUT_THR = type { i64, i32 }
%struct.anon.7 = type { i32, [3 x float], i32, i32, [4 x i32] }
%struct.CYCLIC_REFRESH = type { i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i64, i16, double, i32, double, [3 x i32], i32, double, i32, i32, i32 }
%struct.ActiveMap = type { i32, i32, i8* }
%struct.TWO_PASS = type { i32, i32, %struct.FIRSTPASS_STATS, %struct.FIRSTPASS_STATS, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRST_PASS_INFO, %struct.FIRSTPASS_STATS, i32, i64, double, double, double, double, %struct.FP_MB_FLOAT_STATS*, i32, i64, double, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32], %struct.GF_GROUP }
%struct.FIRST_PASS_INFO = type { %struct.FIRSTPASS_STATS*, i32 }
%struct.FIRSTPASS_STATS = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, i64 }
%struct.FP_MB_FLOAT_STATS = type { double, double, double }
%struct.GF_GROUP = type { i8, [252 x i32], [252 x i32], [252 x i8], [252 x i8], [252 x i8], [252 x i32], [252 x i32], i32, i32, [50 x i32], i32, i32, i32, i32, i32, i32 }
%struct.ALT_REF_AQ = type opaque
%struct.SVC = type { i32, i32, i32, i32, i32, i32, %struct.lookahead_entry, i32, [25 x %struct.yv12_buffer_config], %struct.yv12_buffer_config, i32, i32, [12 x %struct.LAYER_CONTEXT], i32, [12 x i32], [12 x i32], [12 x i32], [12 x i32], i32, i32, i32, [2 x %struct.BUFFER_LONGTERM_REF], i32, i32, i32, i32, [5 x i8], [5 x i32], i8*, [12 x i32], [12 x i32], [12 x i32], i32, i32, i32, [12 x i32], [12 x i32], [12 x i32], [12 x i32], [12 x i32], i32, i32, i32, i32, i32, [5 x i32], [5 x i8], [5 x i8], [5 x i8], [5 x i8], [5 x i8], [5 x i8], [5 x i32], [8 x i8], [8 x i8], [5 x i32], i8, i8, i8, [8 x i8], i32, [5 x i32], i32, [5 x i64], i64, i64, [5 x i64], i32, i32, i32, i32 }
%struct.LAYER_CONTEXT = type { %struct.RATE_CONTROL, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, %struct.TWO_PASS, %struct.vpx_fixed_buf, i32, i32, i32, i32, %struct.lookahead_entry*, i32, i32, i32, i64, i32, i8*, i8*, i8*, i32, i32, i32, i8, i32 }
%struct.BUFFER_LONGTERM_REF = type { i32, i32 }
%struct.diff = type { i32, i32, i32 }
%struct.vp9_denoiser = type { %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i32, i32 }
%struct.noise_estimate = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VPxWorker = type { %struct.VPxWorkerImpl*, i32, i32 (i8*, i8*)*, i8*, i8*, i32 }
%struct.VPxWorkerImpl = type opaque
%struct.EncWorkerData = type { %struct.VP9_COMP*, %struct.ThreadData*, i32, i32, [64 x i32] }
%struct.VP9LfSyncData = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32, %struct.LoopFilterWorkerData*, i32, i32, %union.pthread_mutex_t*, %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32 }
%struct.LoopFilterWorkerData = type { %struct.yv12_buffer_config*, %struct.VP9Common*, [3 x %struct.macroblockd_plane], i32, i32, i32 }
%struct.VP9BitstreamWorkerData = type opaque
%struct.Vp9LevelInfo = type { %struct.Vp9LevelStats, %struct.Vp9LevelSpec }
%struct.Vp9LevelStats = type { i8, i32, i64, i64, double, %struct.FrameWindowBuffer, i32 }
%struct.FrameWindowBuffer = type { [128 x %struct.FrameRecord], i8, i8 }
%struct.FrameRecord = type { i64, i32, i32 }
%struct.Vp9LevelSpec = type { i32, i64, i32, i32, double, double, double, i8, i32, i8 }
%struct.MultiThreadHandle = type { i32, i32, i32, [4 x i32], %struct.JobQueue*, i32, [64 x %struct.RowMTInfo], [80 x i32] }
%struct.JobQueue = type { i8*, %struct.JobNode }
%struct.JobNode = type { i32, i32, i32 }
%struct.RowMTInfo = type { %struct.JobQueueHandle, %union.pthread_mutex_t }
%struct.JobQueueHandle = type { i8*, i32 }
%struct.ARNRFilterData = type { [25 x %struct.yv12_buffer_config*], i32, i32, i32, %struct.scale_factors }
%struct.LevelConstraint = type { i8, i8, i32, double }
%struct.vpx_roi_map = type { i8, i8*, i32, i32, [8 x i32], [8 x i32], [8 x i32], [8 x i32], [4 x i32] }
%struct.EXT_RATECTRL = type { i32, i8*, %struct.vpx_rc_funcs, %struct.vpx_rc_config, %struct.vpx_rc_firstpass_stats }
%struct.vpx_rc_funcs = type { i32 (i8*, %struct.vpx_rc_config*, i8**)*, i32 (i8*, %struct.vpx_rc_firstpass_stats*)*, i32 (i8*, %struct.vpx_rc_encodeframe_info*, %struct.vpx_rc_encodeframe_decision*)*, i32 (i8*, %struct.vpx_rc_encodeframe_result*)*, i32 (i8*)*, i8* }
%struct.vpx_rc_encodeframe_info = type { i32, i32, i32, i32, [3 x i32], [3 x i32] }
%struct.vpx_rc_encodeframe_decision = type { i32 }
%struct.vpx_rc_encodeframe_result = type { i64, i64, i64 }
%struct.vpx_rc_config = type { i32, i32, i32, i32, i32, i32 }
%struct.vpx_rc_firstpass_stats = type { %struct.vpx_rc_frame_stats*, i32 }
%struct.vpx_rc_frame_stats = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double }

@vp9_diamond_search_sad = external local_unnamed_addr global i32 (%struct.macroblock*, %struct.search_site_config*, %struct.mv*, %struct.mv*, i32, i32, i32*, %struct.vp9_variance_vtable*, %struct.mv*)*, align 8
@switch.table.vp9_set_speed_features_framesize_independent = private unnamed_addr constant [4 x i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)*] [i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)* @vp9_find_best_sub_pixel_tree, i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)* @vp9_find_best_sub_pixel_tree_pruned, i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)* @vp9_find_best_sub_pixel_tree_pruned_more, i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)* @vp9_find_best_sub_pixel_tree_pruned_evenmore], align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_set_speed_features_framesize_dependent(%struct.VP9_COMP* nocapture, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 74, i32 0
  store i64 524288, i64* %3, align 8
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 74, i32 1
  store i32 80, i32* %4, align 8
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 75, i32 2
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 75, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 15
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 2
  %10 = icmp sgt i32 %1, 0
  %11 = and i1 %10, %9
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 37
  %14 = load i32, i32* %13, align 8
  br label %47

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %17 = load i32, i32* %16, align 16
  %18 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %17, %19
  %21 = select i1 %20, i32 %17, i32 %19
  %22 = icmp sgt i32 %21, 719
  br i1 %22, label %23, label %28

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 24
  %25 = load i32, i32* %24, align 16
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %26, i32 31, i32 63
  br label %28

28:                                               ; preds = %23, %15
  %29 = phi i32 [ %27, %23 ], [ 24, %15 ]
  %30 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 37
  store i32 %29, i32* %30, align 8
  %31 = icmp sgt i32 %1, 1
  br i1 %31, label %32, label %47

32:                                               ; preds = %28
  br i1 %22, label %33, label %38

33:                                               ; preds = %32
  %34 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 24
  %35 = load i32, i32* %34, align 16
  %36 = icmp eq i32 %35, 0
  %37 = select i1 %36, i32 31, i32 63
  br label %38

38:                                               ; preds = %33, %32
  %39 = phi i32 [ %37, %33 ], [ 30, %32 ]
  store i32 %39, i32* %30, align 8
  %40 = icmp sgt i32 %1, 4
  br i1 %40, label %41, label %47

41:                                               ; preds = %38
  store i32 200, i32* %4, align 8
  %42 = select i1 %22, i64 33554432, i64 8388608
  store i64 %42, i64* %3, align 8
  %43 = icmp sgt i32 %1, 6
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = select i1 %22, i32 800, i32 300
  %46 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 69
  store i32 %45, i32* %46, align 4
  br label %47

47:                                               ; preds = %12, %44, %41, %38, %28
  %48 = phi i32 [ %14, %12 ], [ %39, %44 ], [ %39, %41 ], [ %39, %38 ], [ %29, %28 ]
  %49 = icmp eq i32 %48, 63
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 43
  store i32 0, i32* %51, align 4
  br label %52

52:                                               ; preds = %50, %47
  %53 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 80
  %54 = load i32, i32* %53, align 16
  %55 = icmp eq i32 %54, 0
  %56 = xor i1 %9, true
  %57 = or i1 %55, %56
  br i1 %57, label %63, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 69
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, %54
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  store i32 %60, i32* %53, align 16
  br label %63

63:                                               ; preds = %52, %62, %58
  %64 = and i32 %48, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 58, i32 1, i64 0
  store i32 2147483647, i32* %67, align 4
  br label %68

68:                                               ; preds = %63, %66
  %69 = and i32 %48, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %84, label %82

71:                                               ; preds = %104
  %72 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 147
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 58
  %77 = load i32, i32* %76, align 4
  %78 = icmp sgt i32 %77, 1
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 6
  store i32 0, i32* %80, align 8
  br label %81

81:                                               ; preds = %71, %104, %79, %75
  ret void

82:                                               ; preds = %68
  %83 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 58, i32 1, i64 1
  store i32 2147483647, i32* %83, align 4
  br label %84

84:                                               ; preds = %82, %68
  %85 = and i32 %48, 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 58, i32 1, i64 2
  store i32 2147483647, i32* %88, align 4
  br label %89

89:                                               ; preds = %87, %84
  %90 = and i32 %48, 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 58, i32 1, i64 3
  store i32 2147483647, i32* %93, align 4
  br label %94

94:                                               ; preds = %92, %89
  %95 = and i32 %48, 16
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 58, i32 1, i64 4
  store i32 2147483647, i32* %98, align 4
  br label %99

99:                                               ; preds = %97, %94
  %100 = and i32 %48, 32
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 58, i32 1, i64 5
  store i32 2147483647, i32* %103, align 4
  br label %104

104:                                              ; preds = %102, %99
  %105 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 7
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %71, label %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_set_speed_features_framesize_independent(%struct.VP9_COMP*, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 1
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 0, i32 0
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 2
  store i32 3, i32* %5, align 8
  %6 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 0, i32 3
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 0, i32 4
  store i32 2, i32* %7, align 8
  %8 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 0, i32 5
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 29
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 28
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = zext i1 %15 to i32
  br label %17

17:                                               ; preds = %2, %12
  %18 = phi i32 [ 0, %2 ], [ %16, %12 ]
  %19 = xor i32 %18, 1
  %20 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 3
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 0, i32 1
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 11
  store i32 1, i32* %22, align 4
  %23 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 0, i32 2
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 0, i32 8
  store i32 6, i32* %24, align 8
  %25 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 5
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 19
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 21
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 38
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 39
  store i32 1, i32* %29, align 8
  %30 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 43
  %31 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 45
  %32 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 49
  %33 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 23
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 24
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 26
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 27
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 28
  %38 = bitcast i32* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 28, i1 false)
  store i8 13, i8* %37, align 8
  %39 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 29
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 31
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 32
  store i8 0, i8* %41, align 4
  %42 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 34
  store i8 12, i8* %42, align 2
  %43 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 33
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 35
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 36
  store i32 4, i32* %45, align 4
  %46 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 37
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 52
  %48 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 50
  %49 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 51
  %50 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 53
  %51 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 72
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 76
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 16
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 17
  %55 = bitcast i32* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  store double 9.900000e+01, double* %54, align 8
  %56 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 12
  store i32 %19, i32* %56, align 8
  %57 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 13
  store double 9.900000e+01, double* %57, align 8
  %58 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 14
  store i32 1, i32* %58, align 8
  %59 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 57
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 15
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 30
  store i32 0, i32* %62, align 4
  %63 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 96
  store i32 7, i32* %63, align 8
  %64 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 54, i64 0
  %65 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 55, i64 0
  %66 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 54, i64 2
  %67 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 55, i64 2
  %68 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 54, i64 3
  %69 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1023, i32 1023, i32 1023, i32 1023>, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 55, i64 3
  %71 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1023, i32 1023, i32 1023, i32 1023>, <4 x i32>* %71, align 4
  %72 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 57
  %73 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 8
  store i32 0, i32* %73, align 8
  %74 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 58
  %75 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 10
  store i32 0, i32* %75, align 8
  %76 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 59
  %77 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 60
  %78 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 63
  store i32 0, i32* %78, align 4
  %79 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 22
  %80 = bitcast i32* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %80, i8 0, i64 16, i1 false)
  store i32 30, i32* %79, align 8
  %81 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 42
  store i32 0, i32* %81, align 8
  %82 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 61
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 62, i64 0
  store i32 15360, i32* %83, align 4
  %84 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 62, i64 1
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 15360, i32 15360, i32 15360, i32 15360>, <4 x i32>* %85, align 4
  %86 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 62, i64 5
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 15360, i32 15360, i32 15360, i32 15360>, <4 x i32>* %87, align 4
  %88 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 62, i64 9
  %89 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 62, i64 10
  %90 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 62, i64 11
  %91 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 62, i64 12
  %92 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 15360, i32 15360, i32 15360, i32 15360>, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 66
  store i8 12, i8* %93, align 8
  %94 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 68
  store i32 0, i32* %94, align 8
  %95 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 25
  store i8 6, i8* %95, align 4
  %96 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 67
  store i32 50, i32* %96, align 4
  %97 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 69
  store i32 0, i32* %97, align 4
  %98 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 64
  store i32 12, i32* %98, align 8
  %99 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 65
  store i32 25, i32* %99, align 4
  %100 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 70
  store i8 4, i8* %100, align 8
  %101 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 77
  %102 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 78
  %103 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 79
  %104 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 80
  %105 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 81
  %106 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 82
  %107 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 75, i32 4, i64 0
  %108 = bitcast i32* %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %108, i8 0, i64 24, i1 false)
  %109 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 75, i32 3
  %110 = bitcast i32* %107 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 -1, i64 16, i1 false)
  store i32 0, i32* %109, align 4
  %111 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 95
  store i32 2, i32* %111, align 4
  %112 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 6
  store i32 1, i32* %112, align 8
  %113 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 71
  store i32 1, i32* %113, align 4
  %114 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 20
  store i32 2, i32* %114, align 8
  %115 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 94, i32 16
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, 1
  %118 = select i1 %117, i32 1048576, i32 2147483647
  %119 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 40
  store i32 %118, i32* %119, align 4
  br i1 %117, label %120, label %125

120:                                              ; preds = %17
  %121 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 41, i64 0, i32 0
  %122 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> <i32 64, i32 4, i32 28, i32 2>, <4 x i32>* %122, align 8
  %123 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 41, i64 2, i32 0
  %124 = bitcast i32* %123 to <4 x i32>*
  store <4 x i32> <i32 15, i32 1, i32 7, i32 1>, <4 x i32>* %124, align 8
  br label %125

125:                                              ; preds = %120, %17
  %126 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 15
  %127 = load i32, i32* %126, align 8
  %128 = icmp eq i32 %127, 2
  br i1 %128, label %129, label %765

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 62
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104
  %133 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 23
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %139, label %136

136:                                              ; preds = %129
  %137 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 19
  %138 = load i32, i32* %137, align 8
  br label %139

139:                                              ; preds = %136, %129
  %140 = phi i32 [ %138, %136 ], [ 0, %129 ]
  %141 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 4
  store i32 0, i32* %141, align 8
  store i32 1, i32* %112, align 8
  %142 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 7
  store i32 0, i32* %142, align 4
  store i32 1, i32* %78, align 4
  store i32 2147483647, i32* %119, align 4
  store i32 0, i32* %58, align 8
  %143 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 83
  %144 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 84
  %145 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 85
  %146 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 86
  %147 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 88
  %148 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 89
  %149 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 90
  %150 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 91
  %151 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 92
  %152 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 93
  %153 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 94
  store i32 0, i32* %61, align 4
  store i32 0, i32* %29, align 8
  %154 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 97
  store i32 0, i32* %154, align 4
  %155 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 98
  %156 = bitcast i32* %143 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %156, i8 0, i64 16, i1 false) #4
  %157 = bitcast i32* %147 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 32, i1 false) #4
  store i32 1, i32* %155, align 8
  store i32 0, i32* %31, align 4
  %158 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 99
  store i32 0, i32* %158, align 4
  %159 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 100
  store i32 0, i32* %159, align 8
  %160 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 0, i32 6
  store i32 0, i32* %160, align 8
  %161 = icmp sgt i32 %1, 0
  br i1 %161, label %162, label %622

162:                                              ; preds = %139
  store i32 1, i32* %53, align 8
  store double 0.000000e+00, double* %54, align 8
  store i32 0, i32* %56, align 8
  store double 0.000000e+00, double* %57, align 8
  br i1 %135, label %163, label %164

163:                                              ; preds = %162
  store i32 0, i32* %36, align 4
  br label %171

164:                                              ; preds = %162
  %165 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %166 = load i8, i8* %165, align 4
  %167 = icmp eq i8 %166, 0
  %168 = zext i1 %167 to i32
  store i32 %168, i32* %36, align 4
  %169 = icmp ne i8 %166, 0
  %170 = zext i1 %169 to i32
  br label %171

171:                                              ; preds = %163, %164
  %172 = phi i32 [ %170, %164 ], [ 1, %163 ]
  store i32 1, i32* %35, align 8
  %173 = xor i32 %172, 1
  store i32 %173, i32* %26, align 4
  store i32 1, i32* %72, align 4
  store i32 1, i32* %28, align 4
  store i32 1, i32* %30, align 4
  store i32 1, i32* %23, align 8
  store i32 2, i32* %112, align 8
  store i32 7, i32* %68, align 4
  store i32 7, i32* %70, align 4
  store i32 7, i32* %67, align 8
  %174 = icmp sgt i32 %1, 1
  br i1 %174, label %175, label %622

175:                                              ; preds = %171
  %176 = select i1 %135, i32 0, i32 58
  store i32 %176, i32* %47, align 8
  store i32 2, i32* %30, align 4
  %177 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 2
  %178 = load i32, i32* %177, align 8
  %179 = icmp eq i32 %178, 1
  %180 = zext i1 %179 to i32
  store i32 %180, i32* %33, align 4
  br i1 %179, label %181, label %218

181:                                              ; preds = %175
  %182 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 120
  %183 = load i32, i32* %182, align 8
  %184 = icmp eq i32 %183, 1
  br i1 %184, label %189, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 33
  %187 = load i32, i32* %186, align 4
  %188 = icmp eq i32 %187, 2
  br i1 %188, label %189, label %218

189:                                              ; preds = %185, %181
  %190 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 37
  %191 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 36
  %192 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 38
  %193 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  %194 = load i32, i32* %191, align 4
  %195 = icmp eq i32 %194, -1
  br i1 %195, label %715, label %196

196:                                              ; preds = %189
  %197 = sext i32 %194 to i64
  %198 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 15, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, -1
  br i1 %200, label %715, label %201

201:                                              ; preds = %196
  %202 = load i32, i32* %193, align 16
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %715, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 0, i32 2, i32 0
  %207 = load i32, i32* %206, align 8
  %208 = icmp eq i32 %207, -1
  br i1 %208, label %715, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 0, i32 2, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i32 %211, -1
  br i1 %212, label %715, label %213

213:                                              ; preds = %209
  %214 = icmp eq i32 %207, 16384
  %215 = icmp eq i32 %211, 16384
  %216 = and i1 %214, %215
  br i1 %216, label %715, label %217

217:                                              ; preds = %213
  store i32 0, i32* %33, align 4
  br label %715

218:                                              ; preds = %764, %760, %756, %752, %748, %743, %740, %185, %175
  store i32 50, i32* %50, align 4
  store i8 13, i8* %25, align 4
  store i32 1, i32* %40, align 8
  %219 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 18
  store i32 7, i32* %219, align 8
  store i32 1, i32* %44, align 8
  store i32 3, i32* %45, align 4
  store i32 1, i32* %27, align 4
  store i32 11, i32* %79, align 8
  store i32 7, i32* %66, align 8
  %220 = icmp sgt i32 %1, 2
  br i1 %220, label %221, label %622

221:                                              ; preds = %218
  store i32 1, i32* %36, align 4
  store i32 100, i32* %50, align 4
  store i32 1, i32* %74, align 8
  store i32 1, i32* %73, align 8
  store i32 0, i32* %7, align 8
  store i32 4, i32* %112, align 8
  store i32 6, i32* %79, align 8
  store i32 0, i32* %75, align 8
  store i32 0, i32* %20, align 4
  store i32 63, i32* %46, align 8
  store i32 2, i32* %76, align 4
  %222 = icmp eq i32 %1, 3
  br i1 %222, label %622, label %223

223:                                              ; preds = %221
  %224 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 20
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %232

227:                                              ; preds = %223
  %228 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 19
  %229 = load i32, i32* %228, align 8
  %230 = icmp sgt i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %227
  store i32 1, i32* %147, align 8
  br label %232

232:                                              ; preds = %231, %227, %223
  store i32 1, i32* %8, align 4
  %233 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %233, align 4
  %234 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 7, i32 7, i32 7, i32 1>, <4 x i32>* %234, align 4
  store i32 0, i32* %3, align 4
  store i32 5, i32* %4, align 8
  store i32 0, i32* %75, align 8
  store i8 9, i8* %93, align 8
  store i32 0, i32* %78, align 4
  %235 = xor i1 %135, true
  %236 = zext i1 %235 to i32
  store i32 %236, i32* %32, align 4
  store i32 13312, i32* %88, align 4
  store i32 13312, i32* %89, align 8
  store i32 13312, i32* %90, align 4
  store i32 13312, i32* %91, align 8
  store i32 2, i32* %112, align 8
  store i32 %236, i32* %77, align 8
  store i32 16, i32* %47, align 8
  %237 = select i1 %135, i32 1, i32 2
  store i32 %237, i32* %26, align 4
  store i32 3, i32* %34, align 8
  %238 = icmp sgt i32 %1, 4
  br i1 %238, label %239, label %622

239:                                              ; preds = %232
  store i32 0, i32* %147, align 8
  store i32 %236, i32* %32, align 4
  store i32 %237, i32* %40, align 8
  store i8 9, i8* %42, align 2
  store i8 3, i8* %43, align 1
  br i1 %135, label %243, label %240

240:                                              ; preds = %239
  %241 = srem i32 %140, 6
  %242 = icmp eq i32 %241, 1
  br label %243

243:                                              ; preds = %240, %239
  %244 = phi i1 [ true, %239 ], [ %242, %240 ]
  %245 = zext i1 %244 to i32
  store i32 %245, i32* %48, align 8
  %246 = select i1 %135, i32 20, i32 15
  store i32 %246, i32* %49, align 4
  store i32 2, i32* %34, align 8
  br i1 %226, label %247, label %256

247:                                              ; preds = %243
  %248 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 19
  %249 = load i32, i32* %248, align 8
  %250 = icmp sgt i32 %249, 0
  br i1 %250, label %251, label %256

251:                                              ; preds = %247
  %252 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %256, label %255

255:                                              ; preds = %251
  store i32 3, i32* %34, align 8
  br label %256

256:                                              ; preds = %255, %251, %247, %243
  store i32 1, i32* %82, align 4
  store i32 0, i32* %75, align 8
  %257 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 13312, i32 13312, i32 13312, i32 13312>, <4 x i32>* %257, align 4
  store i32 2, i32* %112, align 8
  store i32 1, i32* %94, align 8
  store i32 4, i32* %22, align 4
  store i32 %236, i32* %77, align 8
  store i32 16, i32* %47, align 8
  store i32 %237, i32* %26, align 4
  store i32 1, i32* %101, align 4
  br i1 %226, label %258, label %259

258:                                              ; preds = %256
  store i32 1, i32* %4, align 8
  br label %259

259:                                              ; preds = %258, %256
  %260 = icmp eq i32 %131, 1
  br i1 %135, label %276, label %261

261:                                              ; preds = %259
  %262 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 56, i64 0
  %263 = bitcast i32* %262 to <4 x i32>*
  br i1 %260, label %270, label %264

264:                                              ; preds = %261
  store <4 x i32> <i32 7, i32 7, i32 7, i32 7>, <4 x i32>* %263, align 4
  %265 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 56, i64 4
  %266 = bitcast i32* %265 to <4 x i32>*
  store <4 x i32> <i32 7, i32 7, i32 7, i32 1>, <4 x i32>* %266, align 4
  %267 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 56, i64 8
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %268, align 4
  %269 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 56, i64 12
  store i32 1, i32* %269, align 4
  br label %278

270:                                              ; preds = %261
  store <4 x i32> <i32 519, i32 519, i32 519, i32 519>, <4 x i32>* %263, align 4
  %271 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 56, i64 4
  %272 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> <i32 519, i32 519, i32 519, i32 519>, <4 x i32>* %272, align 4
  %273 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 56, i64 8
  %274 = bitcast i32* %273 to <4 x i32>*
  store <4 x i32> <i32 519, i32 7, i32 7, i32 7>, <4 x i32>* %274, align 4
  %275 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 56, i64 12
  store i32 7, i32* %275, align 4
  br label %277

276:                                              ; preds = %259
  br i1 %260, label %277, label %278

277:                                              ; preds = %276, %270
  store i32 1, i32* %102, align 8
  br label %278

278:                                              ; preds = %277, %276, %264
  %279 = phi i1 [ true, %277 ], [ false, %276 ], [ false, %264 ]
  %280 = icmp eq i32 %225, 1
  %281 = xor i1 %280, true
  %282 = or i1 %260, %281
  br i1 %282, label %288, label %283

283:                                              ; preds = %278
  store i32 1, i32* %104, align 8
  %284 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %283
  store i32 1, i32* %105, align 4
  br label %288

288:                                              ; preds = %278, %287, %283
  %289 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 103
  %290 = load i32, i32* %289, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %297, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %struct.SVC, %struct.SVC* %132, i64 0, i32 0
  %294 = load i32, i32* %293, align 8
  %295 = icmp sgt i32 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %292
  store i32 1, i32* %149, align 8
  br label %297

297:                                              ; preds = %296, %292, %288
  br i1 %135, label %320, label %298

298:                                              ; preds = %297
  %299 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 119
  %300 = load i32, i32* %299, align 4
  %301 = icmp ne i32 %300, 0
  %302 = xor i1 %280, true
  %303 = or i1 %301, %302
  br i1 %303, label %320, label %304

304:                                              ; preds = %298
  %305 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 84
  %306 = load i32, i32* %305, align 8
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %334

308:                                              ; preds = %304
  %309 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %310 = load i32, i32* %309, align 16
  %311 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %312 = load i32, i32* %311, align 4
  %313 = mul nsw i32 %312, %310
  %314 = icmp sgt i32 %313, 101376
  %315 = xor i1 %291, true
  %316 = or i1 %314, %315
  %317 = or i1 %316, %260
  br i1 %317, label %319, label %318

318:                                              ; preds = %308
  store i32 2, i32* %151, align 8
  br label %334

319:                                              ; preds = %308
  store i32 1, i32* %151, align 8
  br label %334

320:                                              ; preds = %298, %297
  br i1 %226, label %321, label %334

321:                                              ; preds = %320
  %322 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 19
  %323 = load i32, i32* %322, align 8
  %324 = icmp sgt i32 %323, 0
  br i1 %324, label %325, label %334

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %327 = load i32, i32* %326, align 16
  %328 = icmp slt i32 %327, 1281
  br i1 %328, label %329, label %334

329:                                              ; preds = %325
  %330 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %331 = load i32, i32* %330, align 4
  %332 = icmp slt i32 %331, 721
  br i1 %332, label %333, label %334

333:                                              ; preds = %329
  store i32 1, i32* %147, align 8
  store i32 1, i32* %148, align 4
  br label %334

334:                                              ; preds = %304, %318, %319, %333, %329, %325, %321, %320
  %335 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %336 = load i32, i32* %335, align 16
  %337 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %338 = load i32, i32* %337, align 4
  %339 = mul nsw i32 %338, %336
  %340 = icmp sgt i32 %339, 921600
  br i1 %340, label %341, label %342

341:                                              ; preds = %334
  store i32 1, i32* %31, align 4
  br label %342

342:                                              ; preds = %341, %334
  %343 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 120
  %344 = load i32, i32* %343, align 8
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %347

346:                                              ; preds = %342
  store i32 1, i32* %144, align 8
  br label %347

347:                                              ; preds = %346, %342
  %348 = phi i32 [ 0, %342 ], [ 1, %346 ]
  %349 = icmp sgt i32 %1, 5
  br i1 %349, label %350, label %622

350:                                              ; preds = %347
  br i1 %226, label %351, label %356

351:                                              ; preds = %350
  %352 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 19
  %353 = load i32, i32* %352, align 8
  %354 = icmp sgt i32 %353, 0
  br i1 %354, label %355, label %356

355:                                              ; preds = %351
  store i32 1, i32* %147, align 8
  store i32 1, i32* %148, align 4
  br label %356

356:                                              ; preds = %355, %351, %350
  store i32 3, i32* %34, align 8
  store i32 1, i32* %4, align 8
  store i32 1, i32* %21, align 4
  store i32 0, i32* %73, align 8
  %357 = icmp eq i32 %348, 0
  br i1 %357, label %383, label %358

358:                                              ; preds = %356
  store i32 1, i32* %146, align 8
  %359 = icmp slt i32 %339, 230401
  %360 = select i1 %359, i32 40000, i32 60000
  %361 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 87
  store i32 %360, i32* %361, align 4
  %362 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 154
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, null
  br i1 %364, label %365, label %383

365:                                              ; preds = %358
  br i1 %291, label %371, label %366

366:                                              ; preds = %365
  %367 = getelementptr inbounds %struct.SVC, %struct.SVC* %132, i64 0, i32 0
  %368 = load i32, i32* %367, align 8
  %369 = add nsw i32 %178, -1
  %370 = icmp eq i32 %368, %369
  br i1 %370, label %371, label %383

371:                                              ; preds = %366, %365
  %372 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 36
  %373 = load i32, i32* %372, align 4
  %374 = ashr i32 %373, 3
  %375 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 33
  %376 = load i32, i32* %375, align 16
  %377 = ashr i32 %376, 3
  %378 = add nsw i32 %377, 1
  %379 = mul nsw i32 %378, %374
  %380 = sext i32 %379 to i64
  %381 = tail call i8* @vpx_calloc(i64 %380, i64 1) #4
  store i8* %381, i8** %362, align 8
  %382 = load i32, i32* %224, align 4
  br label %383

383:                                              ; preds = %371, %366, %358, %356
  %384 = phi i32 [ %382, %371 ], [ %225, %366 ], [ %225, %358 ], [ %225, %356 ]
  %385 = icmp eq i32 %384, 1
  %386 = icmp ne i32 %131, 1
  %387 = and i1 %386, %385
  br i1 %387, label %388, label %389

388:                                              ; preds = %383
  store i32 1, i32* %103, align 4
  br label %389

389:                                              ; preds = %388, %383
  %390 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 1
  %391 = load i32, i32* %390, align 4
  %392 = icmp sgt i32 %391, 0
  br i1 %392, label %393, label %394

393:                                              ; preds = %389
  store i32 4, i32* %112, align 8
  store i32 0, i32* %104, align 8
  store i32 1, i32* %106, align 8
  br label %394

394:                                              ; preds = %393, %389
  %395 = load i32, i32* %133, align 4
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %408, label %397

397:                                              ; preds = %394
  %398 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 119
  %399 = load i32, i32* %398, align 4
  %400 = icmp ne i32 %399, 0
  %401 = xor i1 %385, true
  %402 = or i1 %400, %401
  br i1 %402, label %408, label %403

403:                                              ; preds = %397
  %404 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 84
  %405 = load i32, i32* %404, align 8
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %408

407:                                              ; preds = %403
  store i32 1, i32* %151, align 8
  br label %408

408:                                              ; preds = %397, %407, %403, %394
  %409 = icmp sgt i32 %1, 6
  br i1 %409, label %410, label %622

410:                                              ; preds = %408
  store i32 0, i32* %146, align 8
  store i32 3, i32* %112, align 8
  store i32 6, i32* %4, align 8
  store i32 10, i32* %24, align 8
  %411 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 3
  %412 = load i32, i32* %411, align 4
  %413 = icmp sgt i32 %412, 2
  %414 = icmp eq i32 %391, 0
  %415 = and i1 %414, %413
  br i1 %415, label %416, label %428

416:                                              ; preds = %410
  %417 = getelementptr inbounds %struct.SVC, %struct.SVC* %132, i64 0, i32 0
  %418 = load i32, i32* %417, align 8
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %427, label %420

420:                                              ; preds = %416
  %421 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 2
  %422 = load i32, i32* %421, align 8
  %423 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 3
  %424 = load i32, i32* %423, align 4
  %425 = mul nsw i32 %424, %422
  %426 = icmp slt i32 %425, 230401
  br i1 %426, label %427, label %428

427:                                              ; preds = %420, %416
  store i32 1, i32* %4, align 8
  store i32 6, i32* %24, align 8
  br label %428

428:                                              ; preds = %410, %420, %427
  br i1 %392, label %433, label %429

429:                                              ; preds = %428
  %430 = getelementptr inbounds %struct.SVC, %struct.SVC* %132, i64 0, i32 0
  %431 = load i32, i32* %430, align 8
  %432 = icmp sgt i32 %431, 1
  br i1 %432, label %433, label %438

433:                                              ; preds = %429, %428
  store i32 1, i32* %145, align 4
  %434 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 23
  %435 = load i32, i32* %434, align 4
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %438, label %437

437:                                              ; preds = %433
  store i32 3, i32* %6, align 4
  br label %438

438:                                              ; preds = %437, %433, %429
  %439 = load i32, i32* %289, align 4
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %450, label %441

441:                                              ; preds = %438
  %442 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 146
  %443 = load i32, i32* %442, align 8
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %450, label %445

445:                                              ; preds = %441
  %446 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 58
  %447 = load i32, i32* %446, align 4
  %448 = icmp sgt i32 %447, 1
  br i1 %448, label %449, label %450

449:                                              ; preds = %445
  store i32 1, i32* %142, align 4
  br label %450

450:                                              ; preds = %449, %445, %441, %438
  %451 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 152
  store i8 0, i8* %451, align 16
  %452 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 153
  %453 = load i8, i8* %452, align 1
  %454 = icmp eq i8 %453, 0
  br i1 %454, label %455, label %480

455:                                              ; preds = %450
  %456 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 119
  %457 = load i32, i32* %456, align 4
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %480

459:                                              ; preds = %455
  %460 = load i32, i32* %343, align 8
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %480

462:                                              ; preds = %459
  br i1 %440, label %474, label %463

463:                                              ; preds = %462
  %464 = getelementptr inbounds %struct.SVC, %struct.SVC* %132, i64 0, i32 0
  %465 = load i32, i32* %464, align 8
  %466 = load i32, i32* %177, align 8
  %467 = add nsw i32 %466, -1
  %468 = icmp eq i32 %465, %467
  br i1 %468, label %469, label %481

469:                                              ; preds = %463
  %470 = sext i32 %465 to i64
  %471 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 35, i64 %470
  %472 = load i32, i32* %471, align 4
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %474, label %481

474:                                              ; preds = %469, %462
  store i32 1, i32* %143, align 4
  %475 = icmp sgt i32 %412, 1
  %476 = add nsw i32 %412, -1
  %477 = icmp eq i32 %391, %476
  %478 = and i1 %475, %477
  %479 = select i1 %478, i8 -1, i8 2
  store i8 %479, i8* %451, align 16
  br label %480

480:                                              ; preds = %474, %459, %455, %450
  br i1 %440, label %510, label %481

481:                                              ; preds = %463, %469, %480
  %482 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 25
  %483 = load i32, i32* %482, align 4
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %487

485:                                              ; preds = %481
  %486 = xor i1 %392, true
  br label %500

487:                                              ; preds = %481
  %488 = load i32, i32* %177, align 8
  %489 = icmp ne i32 %488, 3
  %490 = xor i1 %392, true
  %491 = or i1 %489, %490
  br i1 %491, label %500, label %492

492:                                              ; preds = %487
  %493 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 2
  %494 = load i32, i32* %493, align 8
  %495 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 3
  %496 = load i32, i32* %495, align 4
  %497 = mul nsw i32 %496, %494
  %498 = icmp sgt i32 %497, 307200
  br i1 %498, label %499, label %500

499:                                              ; preds = %492
  store i32 1, i32* %150, align 4
  br label %500

500:                                              ; preds = %485, %487, %499, %492
  %501 = phi i1 [ %486, %485 ], [ %490, %487 ], [ false, %499 ], [ false, %492 ]
  %502 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 20
  %503 = load i32, i32* %502, align 4
  %504 = icmp eq i32 %503, 0
  %505 = or i1 %504, %501
  br i1 %505, label %510, label %506

506:                                              ; preds = %500
  %507 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 74
  %508 = load i32, i32* %507, align 16
  %509 = and i32 %508, -3
  store i32 %509, i32* %507, align 16
  br label %510

510:                                              ; preds = %500, %506, %480
  %511 = load i32, i32* %335, align 16
  %512 = load i32, i32* %337, align 4
  %513 = mul nsw i32 %512, %511
  %514 = icmp sgt i32 %513, 307200
  br i1 %514, label %515, label %516

515:                                              ; preds = %510
  store i32 1, i32* %31, align 4
  br label %516

516:                                              ; preds = %515, %510
  %517 = icmp sgt i32 %1, 7
  br i1 %517, label %518, label %622

518:                                              ; preds = %516
  store i32 4, i32* %112, align 8
  store i32 1, i32* %73, align 8
  %519 = load i32, i32* %177, align 8
  %520 = icmp sgt i32 %519, 1
  br i1 %520, label %521, label %525

521:                                              ; preds = %518
  %522 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 68
  %523 = load i32, i32* %522, align 4
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %526, label %525

525:                                              ; preds = %521, %518
  br label %526

526:                                              ; preds = %525, %521
  %527 = phi i32 [ 1, %525 ], [ 0, %521 ]
  store i32 %527, i32* %149, align 8
  br i1 %440, label %528, label %529

528:                                              ; preds = %526
  store i8 4, i8* %451, align 16
  br label %529

529:                                              ; preds = %528, %526
  %530 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 146
  %531 = load i32, i32* %530, align 8
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %538, label %533

533:                                              ; preds = %529
  %534 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 58
  %535 = load i32, i32* %534, align 4
  %536 = icmp sgt i32 %535, 1
  br i1 %536, label %537, label %538

537:                                              ; preds = %533
  store i32 1, i32* %142, align 4
  br label %538

538:                                              ; preds = %537, %533, %529
  br i1 %396, label %546, label %539

539:                                              ; preds = %538
  %540 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 27
  %541 = load i8, i8* %540, align 4
  %542 = icmp eq i8 %541, 0
  %543 = icmp slt i32 %513, 101377
  %544 = and i1 %543, %542
  br i1 %544, label %545, label %546

545:                                              ; preds = %539
  store i32 1, i32* %154, align 4
  br label %546

546:                                              ; preds = %545, %539, %538
  %547 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 12
  %548 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %547, align 8
  %549 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %548, i64 0, i32 29
  %550 = load i32, i32* %549, align 8
  %551 = and i32 %550, 8
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %554, label %553

553:                                              ; preds = %546
  store i32 0, i32* %154, align 4
  br label %554

554:                                              ; preds = %553, %546
  br i1 %279, label %555, label %556

555:                                              ; preds = %554
  store i32 2, i32* %8, align 4
  br label %556

556:                                              ; preds = %555, %554
  store i32 1, i32* %159, align 8
  %557 = and i1 %387, %440
  br i1 %557, label %558, label %578

558:                                              ; preds = %556
  store i32 3, i32* %103, align 4
  %559 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 128
  %560 = getelementptr inbounds %struct.noise_estimate, %struct.noise_estimate* %559, i64 0, i32 0
  %561 = load i32, i32* %560, align 8
  %562 = icmp ne i32 %561, 0
  %563 = icmp sgt i32 %511, 1279
  %564 = and i1 %563, %562
  %565 = icmp sgt i32 %512, 719
  %566 = and i1 %565, %564
  br i1 %566, label %567, label %571

567:                                              ; preds = %558
  %568 = tail call i32 @vp9_noise_estimate_extract_level(%struct.noise_estimate* %559) #4
  %569 = icmp ugt i32 %568, 1
  br i1 %569, label %570, label %571

570:                                              ; preds = %567
  store i32 2, i32* %103, align 4
  br label %571

571:                                              ; preds = %558, %570, %567
  %572 = load i32, i32* %335, align 16
  %573 = load i32, i32* %337, align 4
  %574 = mul nsw i32 %573, %572
  %575 = icmp sgt i32 %574, 101376
  br i1 %575, label %576, label %577

576:                                              ; preds = %571
  store i32 1, i32* %112, align 8
  store i32 0, i32* %104, align 8
  store i32 1, i32* %145, align 4
  br label %580

577:                                              ; preds = %571
  store i32 2, i32* %112, align 8
  store i32 0, i32* %104, align 8
  br label %580

578:                                              ; preds = %556
  store i32 0, i32* %104, align 8
  store i32 1, i32* %145, align 4
  %579 = icmp sgt i32 %513, 101376
  br i1 %579, label %580, label %585

580:                                              ; preds = %578, %576, %577
  %581 = phi i32* [ %145, %577 ], [ %31, %576 ], [ %31, %578 ]
  %582 = phi i32 [ %573, %577 ], [ %573, %576 ], [ %512, %578 ]
  %583 = phi i32 [ %572, %577 ], [ %572, %576 ], [ %511, %578 ]
  %584 = phi i32 [ %574, %577 ], [ %574, %576 ], [ %513, %578 ]
  store i32 1, i32* %581, align 4
  br label %585

585:                                              ; preds = %580, %578
  %586 = phi i32 [ %512, %578 ], [ %582, %580 ]
  %587 = phi i32 [ %511, %578 ], [ %583, %580 ]
  %588 = phi i32 [ %513, %578 ], [ %584, %580 ]
  %589 = icmp sgt i32 %1, 8
  br i1 %589, label %592, label %590

590:                                              ; preds = %585
  %591 = load i32, i32* %133, align 4
  br label %622

592:                                              ; preds = %585
  br i1 %135, label %601, label %593

593:                                              ; preds = %592
  %594 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 56, i64 0
  %595 = bitcast i32* %594 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %595, align 4
  %596 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 56, i64 4
  %597 = bitcast i32* %596 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %597, align 4
  %598 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 56, i64 8
  %599 = bitcast i32* %598 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %599, align 4
  %600 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 56, i64 12
  store i32 1, i32* %600, align 4
  br label %601

601:                                              ; preds = %593, %592
  store i32 1, i32* %31, align 4
  %602 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 2>, <4 x i32>* %602, align 8
  %603 = load i32, i32* %133, align 4
  %604 = icmp ne i32 %603, 0
  %605 = icmp sgt i32 %587, 319
  %606 = and i1 %605, %604
  %607 = icmp sgt i32 %586, 239
  %608 = and i1 %607, %606
  br i1 %608, label %609, label %610

609:                                              ; preds = %601
  store i32 1, i32* %152, align 4
  br label %610

610:                                              ; preds = %601, %609
  %611 = load i32, i32* %224, align 4
  %612 = icmp eq i32 %611, 1
  br i1 %612, label %613, label %614

613:                                              ; preds = %610
  store i32 1, i32* %153, align 8
  br label %614

614:                                              ; preds = %613, %610
  %615 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 75
  %616 = load i32, i32* %615, align 8
  %617 = icmp slt i32 %616, 70
  br i1 %617, label %618, label %619

618:                                              ; preds = %614
  store i8 3, i8* %100, align 8
  br label %619

619:                                              ; preds = %618, %614
  %620 = icmp sgt i32 %588, 230399
  br i1 %620, label %621, label %622

621:                                              ; preds = %619
  store i32 2, i32* %155, align 8
  br label %622

622:                                              ; preds = %590, %621, %619, %516, %408, %347, %232, %221, %218, %171, %139
  %623 = phi i32 [ %591, %590 ], [ %603, %621 ], [ %603, %619 ], [ %395, %516 ], [ %395, %408 ], [ %134, %347 ], [ %134, %232 ], [ %134, %221 ], [ %134, %218 ], [ %134, %171 ], [ %134, %139 ]
  %624 = icmp eq i32 %623, 0
  br i1 %624, label %644, label %625

625:                                              ; preds = %622
  %626 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 3
  %627 = load i32, i32* %626, align 16
  %628 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 4
  %629 = load i32, i32* %628, align 4
  %630 = mul nsw i32 %629, %627
  %631 = icmp slt i32 %630, 76801
  br i1 %631, label %632, label %644

632:                                              ; preds = %625
  %633 = load i32, i32* %34, align 8
  %634 = icmp eq i32 %633, 3
  br i1 %634, label %635, label %644

635:                                              ; preds = %632
  %636 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 31, i64 1
  %637 = load i32, i32* %636, align 4
  %638 = icmp sgt i32 %637, 208
  br i1 %638, label %639, label %644

639:                                              ; preds = %635
  %640 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 77
  %641 = load i32, i32* %640, align 4
  %642 = icmp ugt i32 %641, 8
  br i1 %642, label %643, label %644

643:                                              ; preds = %639
  store i32 1, i32* %152, align 4
  br label %644

644:                                              ; preds = %643, %639, %635, %632, %625, %622
  %645 = load i32, i32* %154, align 4
  %646 = icmp eq i32 %645, 0
  br i1 %646, label %648, label %647

647:                                              ; preds = %644
  store i32 5, i32* %34, align 8
  br label %648

648:                                              ; preds = %647, %644
  %649 = load i32, i32* %147, align 8
  %650 = icmp eq i32 %649, 0
  br i1 %650, label %687, label %651

651:                                              ; preds = %648
  %652 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %653 = load i32, i32* %652, align 4
  %654 = icmp eq i32 %653, 0
  %655 = or i1 %624, %654
  br i1 %655, label %657, label %656

656:                                              ; preds = %651
  store i32 1, i32* %34, align 8
  store i8 12, i8* %95, align 4
  br label %657

657:                                              ; preds = %651, %656
  %658 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 157
  %659 = load i8*, i8** %658, align 8
  %660 = icmp eq i8* %659, null
  br i1 %660, label %661, label %672

661:                                              ; preds = %657
  %662 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 36
  %663 = load i32, i32* %662, align 4
  %664 = ashr i32 %663, 3
  %665 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 33
  %666 = load i32, i32* %665, align 16
  %667 = ashr i32 %666, 3
  %668 = add nsw i32 %667, 1
  %669 = mul nsw i32 %668, %664
  %670 = sext i32 %669 to i64
  %671 = tail call i8* @vpx_calloc(i64 %670, i64 1) #4
  store i8* %671, i8** %658, align 8
  br label %672

672:                                              ; preds = %661, %657
  %673 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 158
  %674 = load i8*, i8** %673, align 16
  %675 = icmp eq i8* %674, null
  br i1 %675, label %676, label %687

676:                                              ; preds = %672
  %677 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 36
  %678 = load i32, i32* %677, align 4
  %679 = ashr i32 %678, 3
  %680 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 33
  %681 = load i32, i32* %680, align 16
  %682 = ashr i32 %681, 3
  %683 = add nsw i32 %682, 1
  %684 = mul nsw i32 %683, %679
  %685 = sext i32 %684 to i64
  %686 = tail call i8* @vpx_calloc(i64 %685, i64 1) #4
  store i8* %686, i8** %673, align 16
  br label %687

687:                                              ; preds = %676, %672, %648
  %688 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 57
  %689 = load i8, i8* %688, align 1
  %690 = icmp eq i8 %689, 0
  br i1 %690, label %692, label %691

691:                                              ; preds = %687
  store i32 1, i32* %34, align 8
  store i8 12, i8* %95, align 4
  br label %692

692:                                              ; preds = %691, %687
  %693 = load i32, i32* %130, align 4
  %694 = icmp eq i32 %693, 1
  br i1 %694, label %695, label %708

695:                                              ; preds = %692
  %696 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 11
  %697 = load i32, i32* %696, align 8
  %698 = icmp sgt i32 %697, 4
  br i1 %698, label %699, label %708

699:                                              ; preds = %695
  %700 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 44
  %701 = load i32, i32* %700, align 4
  %702 = icmp eq i32 %701, 0
  br i1 %702, label %703, label %707

703:                                              ; preds = %699
  %704 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 104, i32 35, i64 0
  %705 = load i32, i32* %704, align 4
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %708, label %707

707:                                              ; preds = %703, %699
  store i32 1, i32* %4, align 8
  store i32 2, i32* %24, align 8
  br label %708

708:                                              ; preds = %707, %703, %695, %692
  %709 = icmp slt i32 %1, 4
  br i1 %709, label %710, label %765

710:                                              ; preds = %708
  %711 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 31
  %712 = load i32, i32* %711, align 4
  %713 = icmp eq i32 %712, 3
  br i1 %713, label %714, label %765

714:                                              ; preds = %710
  store i32 0, i32* %711, align 4
  br label %765

715:                                              ; preds = %217, %213, %209, %205, %201, %196, %189
  %716 = load i32, i32* %190, align 4
  %717 = icmp eq i32 %716, -1
  br i1 %717, label %740, label %718

718:                                              ; preds = %715
  %719 = sext i32 %716 to i64
  %720 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 15, i64 %719
  %721 = load i32, i32* %720, align 4
  %722 = icmp eq i32 %721, -1
  br i1 %722, label %740, label %723

723:                                              ; preds = %718
  %724 = load i32, i32* %193, align 16
  %725 = and i32 %724, 2
  %726 = icmp eq i32 %725, 0
  br i1 %726, label %740, label %727

727:                                              ; preds = %723
  %728 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 1, i32 2, i32 0
  %729 = load i32, i32* %728, align 8
  %730 = icmp eq i32 %729, -1
  br i1 %730, label %740, label %731

731:                                              ; preds = %727
  %732 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 1, i32 2, i32 1
  %733 = load i32, i32* %732, align 4
  %734 = icmp eq i32 %733, -1
  br i1 %734, label %740, label %735

735:                                              ; preds = %731
  %736 = icmp eq i32 %729, 16384
  %737 = icmp eq i32 %733, 16384
  %738 = and i1 %736, %737
  br i1 %738, label %740, label %739

739:                                              ; preds = %735
  store i32 0, i32* %33, align 4
  br label %740

740:                                              ; preds = %739, %735, %731, %727, %723, %718, %715
  %741 = load i32, i32* %192, align 4
  %742 = icmp eq i32 %741, -1
  br i1 %742, label %218, label %743

743:                                              ; preds = %740
  %744 = sext i32 %741 to i64
  %745 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 15, i64 %744
  %746 = load i32, i32* %745, align 4
  %747 = icmp eq i32 %746, -1
  br i1 %747, label %218, label %748

748:                                              ; preds = %743
  %749 = load i32, i32* %193, align 16
  %750 = and i32 %749, 4
  %751 = icmp eq i32 %750, 0
  br i1 %751, label %218, label %752

752:                                              ; preds = %748
  %753 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 2, i32 2, i32 0
  %754 = load i32, i32* %753, align 8
  %755 = icmp eq i32 %754, -1
  br i1 %755, label %218, label %756

756:                                              ; preds = %752
  %757 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 8, i32 17, i64 2, i32 2, i32 1
  %758 = load i32, i32* %757, align 4
  %759 = icmp eq i32 %758, -1
  br i1 %759, label %218, label %760

760:                                              ; preds = %756
  %761 = icmp eq i32 %754, 16384
  %762 = icmp eq i32 %758, 16384
  %763 = and i1 %761, %762
  br i1 %763, label %218, label %764

764:                                              ; preds = %760
  store i32 0, i32* %33, align 4
  br label %218

765:                                              ; preds = %714, %710, %708, %125
  %766 = load i64, i64* bitcast (i32 (%struct.macroblock*, %struct.search_site_config*, %struct.mv*, %struct.mv*, i32, i32, i32*, %struct.vp9_variance_vtable*, %struct.mv*)** @vp9_diamond_search_sad to i64*), align 8
  %767 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 88
  %768 = bitcast i32 (%struct.macroblock*, %struct.search_site_config*, %struct.mv*, %struct.mv*, i32, i32, i32*, %struct.vp9_variance_vtable*, %struct.mv*)** %767 to i64*
  store i64 %766, i64* %768, align 8
  %769 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 16
  %770 = load i32, i32* %769, align 4
  switch i32 %770, label %773 [
    i32 1, label %772
    i32 0, label %771
  ]

771:                                              ; preds = %765
  store i32 0, i32* %5, align 8
  br label %772

772:                                              ; preds = %765, %771
  store i32 0, i32* %20, align 4
  br label %773

773:                                              ; preds = %772, %765
  %774 = load i32, i32* %8, align 4
  %775 = icmp eq i32 %774, 3
  br i1 %775, label %783, label %776

776:                                              ; preds = %773
  %777 = load i32, i32* %6, align 4
  %778 = icmp ult i32 %777, 4
  br i1 %778, label %779, label %786

779:                                              ; preds = %776
  %780 = sext i32 %777 to i64
  %781 = getelementptr inbounds [4 x i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)*], [4 x i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)*]* @switch.table.vp9_set_speed_features_framesize_independent, i64 0, i64 %780
  %782 = load i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)*, i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)** %781, align 8
  br label %783

783:                                              ; preds = %779, %773
  %784 = phi i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)* [ @vp9_skip_sub_pixel_tree, %773 ], [ %782, %779 ]
  %785 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 86
  store i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)* %784, i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)** %785, align 16
  br label %786

786:                                              ; preds = %776, %783
  %787 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 70
  %788 = load i32, i32* %787, align 4
  switch i32 %788, label %793 [
    i32 1, label %790
    i32 2, label %789
  ]

789:                                              ; preds = %786
  br label %790

790:                                              ; preds = %786, %789
  %791 = phi i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)* [ @vp9_return_min_sub_pixel_mv, %789 ], [ @vp9_return_max_sub_pixel_mv, %786 ]
  %792 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 86
  store i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)* %791, i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)** %792, align 16
  br label %793

793:                                              ; preds = %790, %786
  %794 = load i32, i32* %20, align 4
  %795 = icmp eq i32 %794, 1
  %796 = icmp ne i32 %770, 1
  %797 = and i1 %796, %795
  %798 = zext i1 %797 to i32
  %799 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 3, i32 0, i32 42
  store i32 %798, i32* %799, align 8
  %800 = load i8, i8* %43, align 1
  %801 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 3, i32 0, i32 19
  store i8 %800, i8* %801, align 4
  %802 = load i8, i8* %42, align 2
  %803 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 3, i32 0, i32 20
  store i8 %802, i8* %803, align 1
  %804 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 36
  %805 = load i32, i32* %804, align 8
  %806 = icmp eq i32 %805, 0
  br i1 %806, label %807, label %808

807:                                              ; preds = %793
  store i32 0, i32* %49, align 4
  br label %808

808:                                              ; preds = %793, %807
  %809 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 7
  %810 = load i32, i32* %809, align 4
  %811 = icmp eq i32 %810, 0
  br i1 %811, label %812, label %821

812:                                              ; preds = %808
  %813 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 147
  %814 = load i32, i32* %813, align 4
  %815 = icmp eq i32 %814, 0
  br i1 %815, label %821, label %816

816:                                              ; preds = %812
  %817 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 9, i32 58
  %818 = load i32, i32* %817, align 4
  %819 = icmp sgt i32 %818, 1
  br i1 %819, label %820, label %821

820:                                              ; preds = %816
  store i32 0, i32* %112, align 8
  br label %821

821:                                              ; preds = %812, %808, %820, %816
  ret void
}

declare i32 @vp9_skip_sub_pixel_tree(%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32) #2

declare i32 @vp9_find_best_sub_pixel_tree(%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32) #2

declare i32 @vp9_find_best_sub_pixel_tree_pruned(%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32) #2

declare i32 @vp9_find_best_sub_pixel_tree_pruned_more(%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32) #2

declare i32 @vp9_find_best_sub_pixel_tree_pruned_evenmore(%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32) #2

declare i32 @vp9_return_max_sub_pixel_mv(%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32) #2

declare i32 @vp9_return_min_sub_pixel_mv(%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32) #2

declare i8* @vpx_calloc(i64, i64) local_unnamed_addr #2

declare i32 @vp9_noise_estimate_extract_level(%struct.noise_estimate*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
