; ModuleID = '../../base/task/common/scoped_defer_task_posting.cc'
source_filename = "../../base/task/common/scoped_defer_task_posting.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [8 x i8] }
%"class.base::ScopedDeferTaskPosting" = type <{ %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"class.std::__1::__compressed_pair" }
%"struct.base::ScopedDeferTaskPosting::DeferredTask" = type { %class.scoped_refptr, %"class.base::Location", %"class.base::OnceCallback", %"class.base::TimeDelta" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.2", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.base::ScopedDeferTaskPosting::DeferredTask"* }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN4base22ScopedDeferTaskPosting12DeferredTaskENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

@_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls = internal global i64 0, align 8

@_ZN4base22ScopedDeferTaskPostingC1Ev = hidden unnamed_addr alias void (%"class.base::ScopedDeferTaskPosting"*), void (%"class.base::ScopedDeferTaskPosting"*)* @_ZN4base22ScopedDeferTaskPostingC2Ev
@_ZN4base22ScopedDeferTaskPostingD1Ev = hidden unnamed_addr alias void (%"class.base::ScopedDeferTaskPosting"*), void (%"class.base::ScopedDeferTaskPosting"*)* @_ZN4base22ScopedDeferTaskPostingD2Ev
@_ZN4base22ScopedDeferTaskPosting12DeferredTaskC1E13scoped_refptrINS_19SequencedTaskRunnerEENS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE = hidden unnamed_addr alias void (%"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64), void (%"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)* @_ZN4base22ScopedDeferTaskPosting12DeferredTaskC2E13scoped_refptrINS_19SequencedTaskRunnerEENS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE
@_ZN4base22ScopedDeferTaskPosting12DeferredTaskC1EOS1_ = hidden unnamed_addr alias void (%"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"*), void (%"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"*)* @_ZN4base22ScopedDeferTaskPosting12DeferredTaskC2EOS1_
@_ZN4base22ScopedDeferTaskPosting12DeferredTaskD1Ev = hidden unnamed_addr alias void (%"struct.base::ScopedDeferTaskPosting::DeferredTask"*), void (%"struct.base::ScopedDeferTaskPosting::DeferredTask"*)* @_ZN4base22ScopedDeferTaskPosting12DeferredTaskD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base22ScopedDeferTaskPosting11PostOrDeferE13scoped_refptrINS_19SequencedTaskRunnerEERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::SequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13, !prof !2

9:                                                ; preds = %4
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls) #9
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls) #9
  br label %13

13:                                               ; preds = %4, %9, %12
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*)) #9
  %15 = icmp eq i8* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %13
  %17 = bitcast i8* %14 to %"class.base::ScopedDeferTaskPosting"*
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %20, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  call void @_ZN4base22ScopedDeferTaskPosting16DeferTaskPostingE13scoped_refptrINS_19SequencedTaskRunnerEERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::ScopedDeferTaskPosting"* nonnull %17, %"class.base::SequencedTaskRunner"* %0, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %5, i64 %3)
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #9
  br label %43

23:                                               ; preds = %13
  %24 = bitcast %"class.base::SequencedTaskRunner"* %0 to %"class.base::TaskRunner"*
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %29 = bitcast %"class.base::SequencedTaskRunner"* %0 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %30 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %29, align 8
  %31 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %30, align 8
  %32 = call zeroext i1 %31(%"class.base::TaskRunner"* %24, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %6, i64 %3) #9
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #9
  %34 = icmp eq %"class.base::SequencedTaskRunner"* %0, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %0, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe"* %41 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %42) #9
  br label %43

43:                                               ; preds = %16, %23, %35, %40
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::ScopedDeferTaskPosting"* @_ZN4base22ScopedDeferTaskPosting3GetEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls) #9
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*)) #9
  %9 = bitcast i8* %8 to %"class.base::ScopedDeferTaskPosting"*
  ret %"class.base::ScopedDeferTaskPosting"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base22ScopedDeferTaskPosting16DeferTaskPostingE13scoped_refptrINS_19SequencedTaskRunnerEERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::ScopedDeferTaskPosting"*, %"class.base::SequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.base::ScopedDeferTaskPosting::DeferredTask", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = ptrtoint %"class.base::SequencedTaskRunner"* %1 to i64
  %10 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #9
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %7, %"class.base::Location"* dereferenceable(32) %2) #9
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %14 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %6 to i64*
  store i64 %9, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %6, i64 0, i32 1
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %15, %"class.base::Location"* nonnull dereferenceable(32) %7) #9
  %16 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %6, i64 0, i32 2
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.base::OnceCallback"* %16 to i64*
  store i64 %13, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  %19 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %6, i64 0, i32 3, i32 0
  store i64 %4, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::ScopedDeferTaskPosting", %"class.base::ScopedDeferTaskPosting"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = load %"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"** %20, align 8
  %22 = getelementptr inbounds %"class.base::ScopedDeferTaskPosting", %"class.base::ScopedDeferTaskPosting"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = load %"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"** %22, align 8
  %24 = icmp ult %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %21, %23
  br i1 %24, label %25, label %39

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %6, i64 0, i32 0, i32 0
  %27 = load i64, i64* %14, align 8
  %28 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %21 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %26, align 8
  %29 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %21, i64 0, i32 1
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %29, %"class.base::Location"* dereferenceable(32) %15) #9
  %30 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %21, i64 0, i32 2
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %16, i64 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %18, align 8
  %33 = bitcast %"class.base::OnceCallback"* %30 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8
  %34 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %21, i64 0, i32 3, i32 0
  %35 = load i64, i64* %19, align 8
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %21, i64 1
  %37 = ptrtoint %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %36 to i64
  %38 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"** %20 to i64*
  store i64 %37, i64* %38, align 8
  br label %41

39:                                               ; preds = %5
  %40 = getelementptr inbounds %"class.base::ScopedDeferTaskPosting", %"class.base::ScopedDeferTaskPosting"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN4base22ScopedDeferTaskPosting12DeferredTaskENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %40, %"struct.base::ScopedDeferTaskPosting::DeferredTask"* nonnull dereferenceable(56) %6) #9
  br label %41

41:                                               ; preds = %25, %39
  %42 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %6, i64 0, i32 2, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %42) #9
  %43 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %6, i64 0, i32 0, i32 0
  %44 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %43, align 8
  %45 = icmp eq %"class.base::SequencedTaskRunner"* %44, null
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %44, i64 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw sub i32* %48, i32 1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %47, i64 -2
  %53 = bitcast %"class.base::RefCountedThreadSafe"* %52 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %53) #9
  br label %54

54:                                               ; preds = %51, %46, %41
  %55 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base22ScopedDeferTaskPosting3SetEPS0_(%"class.base::ScopedDeferTaskPosting"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls) #9
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*)) #9
  %10 = icmp ne i8* %9, null
  %11 = icmp ne %"class.base::ScopedDeferTaskPosting"* %0, null
  %12 = and i1 %11, %10
  br i1 %12, label %22, label %13

13:                                               ; preds = %8
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20, !prof !2

16:                                               ; preds = %13
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls) #9
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls) #9
  br label %20

20:                                               ; preds = %13, %16, %19
  %21 = bitcast %"class.base::ScopedDeferTaskPosting"* %0 to i8*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*), i8* %21) #9
  br label %22

22:                                               ; preds = %8, %20
  %23 = phi i1 [ true, %20 ], [ false, %8 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base22ScopedDeferTaskPosting9IsPresentEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls) #9
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_128GetScopedDeferTaskPostingTLSEvE3tls to %"class.base::ThreadLocalStorage::Slot"*)) #9
  %9 = icmp ne i8* %8, null
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base22ScopedDeferTaskPostingC2Ev(%"class.base::ScopedDeferTaskPosting"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::ScopedDeferTaskPosting", %"class.base::ScopedDeferTaskPosting"* %0, i64 0, i32 1
  %3 = bitcast %"class.base::ScopedDeferTaskPosting"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 25, i1 false)
  %4 = tail call zeroext i1 @_ZN4base22ScopedDeferTaskPosting3SetEPS0_(%"class.base::ScopedDeferTaskPosting"* %0)
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base22ScopedDeferTaskPostingD2Ev(%"class.base::ScopedDeferTaskPosting"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.base::ScopedDeferTaskPosting", %"class.base::ScopedDeferTaskPosting"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %34, label %6

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZN4base22ScopedDeferTaskPosting3SetEPS0_(%"class.base::ScopedDeferTaskPosting"* null)
  %8 = getelementptr inbounds %"class.base::ScopedDeferTaskPosting", %"class.base::ScopedDeferTaskPosting"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"** %8, align 8
  %10 = getelementptr inbounds %"class.base::ScopedDeferTaskPosting", %"class.base::ScopedDeferTaskPosting"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"** %10, align 8
  %12 = icmp eq %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %9, %11
  br i1 %12, label %34, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  br label %16

16:                                               ; preds = %13, %16
  %17 = phi %"struct.base::ScopedDeferTaskPosting::DeferredTask"* [ %9, %13 ], [ %32, %16 ]
  %18 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %18, align 8
  %20 = bitcast %"class.base::SequencedTaskRunner"* %19 to %"class.base::TaskRunner"*
  %21 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %17, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %17, i64 0, i32 2
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback"* %22 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %26 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %17, i64 0, i32 3, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::SequencedTaskRunner"* %19 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %29 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %28, align 8
  %30 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %29, align 8
  %31 = call zeroext i1 %30(%"class.base::TaskRunner"* %20, %"class.base::Location"* dereferenceable(32) %21, %"class.base::OnceCallback"* nonnull %2, i64 %27) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #9
  %32 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %17, i64 1
  %33 = icmp eq %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %32, %11
  br i1 %33, label %34, label %16

34:                                               ; preds = %16, %6, %1
  %35 = getelementptr inbounds %"class.base::ScopedDeferTaskPosting", %"class.base::ScopedDeferTaskPosting"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"** %35, align 8
  %37 = icmp eq %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %36, null
  br i1 %37, label %65, label %38

38:                                               ; preds = %34
  %39 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %36 to i8*
  %40 = getelementptr inbounds %"class.base::ScopedDeferTaskPosting", %"class.base::ScopedDeferTaskPosting"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load %"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"** %40, align 8
  %42 = icmp eq %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %41, %36
  br i1 %42, label %63, label %43

43:                                               ; preds = %38, %58
  %44 = phi %"struct.base::ScopedDeferTaskPosting::DeferredTask"* [ %45, %58 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %44, i64 -1
  %46 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %44, i64 -1, i32 2, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %46) #9
  %47 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %45, i64 0, i32 0, i32 0
  %48 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %47, align 8
  %49 = icmp eq %"class.base::SequencedTaskRunner"* %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %48, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw sub i32* %52, i32 1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 -2
  %57 = bitcast %"class.base::RefCountedThreadSafe"* %56 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %57) #9
  br label %58

58:                                               ; preds = %55, %50, %43
  %59 = icmp eq %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %45, %36
  br i1 %59, label %60, label %43

60:                                               ; preds = %58
  %61 = bitcast %"class.base::ScopedDeferTaskPosting"* %0 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %38
  %64 = phi i8* [ %62, %60 ], [ %39, %38 ]
  store %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %36, %"struct.base::ScopedDeferTaskPosting::DeferredTask"** %40, align 8
  call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %34, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base22ScopedDeferTaskPosting12DeferredTaskC2E13scoped_refptrINS_19SequencedTaskRunnerEENS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"class.base::SequencedTaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"* nocapture, i64) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.base::SequencedTaskRunner"* %1 to i64
  %7 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %0, i64 0, i32 1
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %8, %"class.base::Location"* dereferenceable(32) %2) #9
  %9 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %0, i64 0, i32 3, i32 0
  store i64 %4, i64* %14, align 8
  ret void
}

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base22ScopedDeferTaskPosting12DeferredTaskC2EOS1_(%"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %0 to i64*
  store i64 %5, i64* %6, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %3, align 8
  %7 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %1, i64 0, i32 1
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %7, %"class.base::Location"* dereferenceable(32) %8) #9
  %9 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %1, i64 0, i32 2
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %1, i64 0, i32 3, i32 0
  %16 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %0, i64 0, i32 3, i32 0
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base22ScopedDeferTaskPosting12DeferredTaskD2Ev(%"struct.base::ScopedDeferTaskPosting::DeferredTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #9
  %3 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #9
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base22ScopedDeferTaskPosting12DeferredTaskENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"* dereferenceable(56)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 329406144173384850
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 56
  %20 = icmp ult i64 %19, 164703072086692425
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 329406144173384850, %14 ]
  %28 = mul i64 %27, 56
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.base::ScopedDeferTaskPosting::DeferredTask"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.base::ScopedDeferTaskPosting::DeferredTask"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %33, i64 %32
  %36 = ptrtoint %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %35 to i64
  %37 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %1, i64 0, i32 0, i32 0
  %38 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %34 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %37, align 8
  %41 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %33, i64 %9, i32 1
  %42 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %1, i64 0, i32 1
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %41, %"class.base::Location"* dereferenceable(32) %42) #9
  %43 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %33, i64 %9, i32 2
  %44 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %1, i64 0, i32 2
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.base::OnceCallback"* %44 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.base::OnceCallback"* %43 to i64*
  store i64 %47, i64* %48, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %45, align 8
  %49 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %1, i64 0, i32 3, i32 0
  %50 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %33, i64 %9, i32 3, i32 0
  %51 = load i64, i64* %49, align 8
  store i64 %51, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %34, i64 1
  %53 = ptrtoint %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %55 = load %"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"** %54, align 8
  %56 = load %"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"** %3, align 8
  %57 = icmp eq %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %56, %55
  br i1 %57, label %58, label %60

58:                                               ; preds = %31
  %59 = ptrtoint %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %55 to i64
  br label %84

60:                                               ; preds = %31, %60
  %61 = phi %"struct.base::ScopedDeferTaskPosting::DeferredTask"* [ %63, %60 ], [ %34, %31 ]
  %62 = phi %"struct.base::ScopedDeferTaskPosting::DeferredTask"* [ %64, %60 ], [ %56, %31 ]
  %63 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %61, i64 -1
  %64 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %62, i64 -1
  %65 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %65, align 8
  %69 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %61, i64 -1, i32 1
  %70 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %62, i64 -1, i32 1
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %69, %"class.base::Location"* dereferenceable(32) %70) #9
  %71 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %61, i64 -1, i32 2
  %72 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %62, i64 -1, i32 2
  %73 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.base::OnceCallback"* %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::OnceCallback"* %71 to i64*
  store i64 %75, i64* %76, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %73, align 8
  %77 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %62, i64 -1, i32 3, i32 0
  %78 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %61, i64 -1, i32 3, i32 0
  %79 = load i64, i64* %77, align 8
  store i64 %79, i64* %78, align 8
  %80 = icmp eq %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %64, %55
  br i1 %80, label %81, label %60

81:                                               ; preds = %60
  %82 = load i64, i64* %6, align 8
  %83 = load %"struct.base::ScopedDeferTaskPosting::DeferredTask"*, %"struct.base::ScopedDeferTaskPosting::DeferredTask"** %3, align 8
  br label %84

84:                                               ; preds = %58, %81
  %85 = phi %"struct.base::ScopedDeferTaskPosting::DeferredTask"* [ %55, %58 ], [ %83, %81 ]
  %86 = phi %"struct.base::ScopedDeferTaskPosting::DeferredTask"* [ %34, %58 ], [ %63, %81 ]
  %87 = phi i64 [ %59, %58 ], [ %82, %81 ]
  %88 = ptrtoint %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %86 to i64
  store i64 %88, i64* %6, align 8
  store i64 %53, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %89 = inttoptr i64 %87 to %"struct.base::ScopedDeferTaskPosting::DeferredTask"*
  %90 = icmp eq %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %85, %89
  br i1 %90, label %108, label %91

91:                                               ; preds = %84, %106
  %92 = phi %"struct.base::ScopedDeferTaskPosting::DeferredTask"* [ %93, %106 ], [ %85, %84 ]
  %93 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %92, i64 -1
  %94 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %92, i64 -1, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %94) #9
  %95 = getelementptr inbounds %"struct.base::ScopedDeferTaskPosting::DeferredTask", %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %93, i64 0, i32 0, i32 0
  %96 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %95, align 8
  %97 = icmp eq %"class.base::SequencedTaskRunner"* %96, null
  br i1 %97, label %106, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %96, i64 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw sub i32* %100, i32 1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %99, i64 -2
  %105 = bitcast %"class.base::RefCountedThreadSafe"* %104 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %105) #9
  br label %106

106:                                              ; preds = %103, %98, %91
  %107 = icmp eq %"struct.base::ScopedDeferTaskPosting::DeferredTask"* %93, %89
  br i1 %107, label %108, label %91

108:                                              ; preds = %106, %84
  %109 = icmp eq i64 %87, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = inttoptr i64 %87 to i8*
  tail call void @_ZdlPv(i8* %111) #10
  br label %112

112:                                              ; preds = %108, %110
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
