; ModuleID = '../../v8/src/compiler/escape-analysis-reducer.cc'
source_filename = "../../v8/src/compiler/escape-analysis-reducer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::EscapeAnalysisReducer" = type { %"class.v8::internal::compiler::AdvancedReducer", %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::EscapeAnalysisResult", %"class.v8::internal::ZoneVector.666", %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::ZoneSet", %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::AdvancedReducer" = type { %"class.v8::internal::compiler::Reducer", %"class.v8::internal::compiler::AdvancedReducer::Editor"* }
%"class.v8::internal::compiler::Reducer" = type { i32 (...)** }
%"class.v8::internal::compiler::EscapeAnalysisResult" = type { %"class.v8::internal::compiler::EscapeAnalysisTracker"* }
%"class.v8::internal::ZoneVector.666" = type { %"class.std::__1::vector.667" }
%"class.std::__1::vector.667" = type { %"class.std::__1::__vector_base.668" }
%"class.std::__1::__vector_base.668" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.669" }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670", %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::compiler::Node"** }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::ZoneAllocator.672" }
%"class.v8::internal::ZoneAllocator.672" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::NodeHashCache" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneVector.666" }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.8" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneUnorderedSet" = type { %"class.std::__1::unordered_set.673" }
%"class.std::__1::unordered_set.673" = type { %"class.std::__1::__hash_table.674" }
%"class.std::__1::__hash_table.674" = type <{ %"class.std::__1::unique_ptr.675", %"class.std::__1::__compressed_pair.684", %"class.std::__1::__compressed_pair.688", %"class.std::__1::__compressed_pair.690", [4 x i8] }>
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677", %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"struct.std::__1::__hash_node_base.678"** }
%"struct.std::__1::__hash_node_base.678" = type { %"struct.std::__1::__hash_node_base.678"* }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.std::__1::__bucket_list_deallocator.680" }
%"class.std::__1::__bucket_list_deallocator.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.v8::internal::ZoneAllocator.683" }
%"class.v8::internal::ZoneAllocator.683" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685", %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"struct.std::__1::__hash_node_base.678" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.v8::internal::ZoneAllocator.687" }
%"class.v8::internal::ZoneAllocator.687" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { float }
%"class.v8::internal::ZoneSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.693", %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694", %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::ZoneAllocator.696" }
%"class.v8::internal::ZoneAllocator.696" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::compiler::AdvancedReducer::Editor" = type { i32 (...)** }
%"class.v8::internal::compiler::JSGraph" = type { %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::JSOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::MachineGraph" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::MachineOperatorBuilder" = type <{ %"class.v8::internal::Zone"*, %"struct.v8::internal::compiler::MachineOperatorGlobalCache"*, i8, [3 x i8], %"class.v8::base::Flags.11", %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements", [4 x i8] }>
%"struct.v8::internal::compiler::MachineOperatorGlobalCache" = type opaque
%"class.v8::base::Flags.11" = type { i32 }
%"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements" = type { i32, %"class.v8::base::EnumSet", %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.v8::internal::compiler::CommonNodeCache" = type { %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.56", %"class.v8::internal::compiler::NodeCache.83" }
%"class.v8::internal::compiler::NodeCache" = type { %"class.v8::internal::ZoneUnorderedMap" }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.12", %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.26", [4 x i8] }>
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.v8::internal::ZoneAllocator.19" }
%"class.v8::internal::ZoneAllocator.19" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.v8::internal::ZoneAllocator.23" }
%"class.v8::internal::ZoneAllocator.23" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::compiler::NodeCache.29" = type { %"class.v8::internal::ZoneUnorderedMap.30" }
%"class.v8::internal::ZoneUnorderedMap.30" = type { %"class.std::__1::unordered_map.31" }
%"class.std::__1::unordered_map.31" = type { %"class.std::__1::__hash_table.32" }
%"class.std::__1::__hash_table.32" = type <{ %"class.std::__1::unique_ptr.33", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50", [4 x i8] }>
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base.36"** }
%"struct.std::__1::__hash_node_base.36" = type { %"struct.std::__1::__hash_node_base.36"* }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::__bucket_list_deallocator.38" }
%"class.std::__1::__bucket_list_deallocator.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.v8::internal::ZoneAllocator.41" }
%"class.v8::internal::ZoneAllocator.41" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43", %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base.36" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.v8::internal::ZoneAllocator.45" }
%"class.v8::internal::ZoneAllocator.45" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::compiler::NodeCache.56" = type { %"class.v8::internal::ZoneUnorderedMap.57" }
%"class.v8::internal::ZoneUnorderedMap.57" = type { %"class.std::__1::unordered_map.58" }
%"class.std::__1::unordered_map.58" = type { %"class.std::__1::__hash_table.59" }
%"class.std::__1::__hash_table.59" = type <{ %"class.std::__1::unique_ptr.60", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.77", [4 x i8] }>
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62", %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base.63"** }
%"struct.std::__1::__hash_node_base.63" = type { %"struct.std::__1::__hash_node_base.63"* }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.std::__1::__bucket_list_deallocator.65" }
%"class.std::__1::__bucket_list_deallocator.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.v8::internal::ZoneAllocator.68" }
%"class.v8::internal::ZoneAllocator.68" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70", %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base.63" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.v8::internal::ZoneAllocator.72" }
%"class.v8::internal::ZoneAllocator.72" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::compiler::NodeCache.83" = type { %"class.v8::internal::ZoneUnorderedMap.84" }
%"class.v8::internal::ZoneUnorderedMap.84" = type { %"class.std::__1::unordered_map.85" }
%"class.std::__1::unordered_map.85" = type { %"class.std::__1::__hash_table.86" }
%"class.std::__1::__hash_table.86" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.104", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base.90"** }
%"struct.std::__1::__hash_node_base.90" = type { %"struct.std::__1::__hash_node_base.90"* }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::__bucket_list_deallocator.92" }
%"class.std::__1::__bucket_list_deallocator.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.v8::internal::ZoneAllocator.95" }
%"class.v8::internal::ZoneAllocator.95" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base.90" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.v8::internal::ZoneAllocator.99" }
%"class.v8::internal::ZoneAllocator.99" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.115", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.441", %"class.std::__1::unique_ptr.442", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.448", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.463", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.470", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.480", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.490", %"struct.std::__1::atomic.167", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.524", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.541"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.542", i32, i8, i8, i32, i32, %"class.std::__1::vector.548", %"class.std::__1::vector.548", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.555", i64, %"class.std::__1::unordered_map.556", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.316", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.175", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.615", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.621", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.655", %"class.std::__1::vector.659", %"class.std::__1::vector.659", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.110", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.110" = type { %"struct.std::__1::__atomic_base.111" }
%"struct.std::__1::__atomic_base.111" = type { %"struct.std::__1::__cxx_atomic_impl.112" }
%"struct.std::__1::__cxx_atomic_impl.112" = type { %"struct.std::__1::__cxx_atomic_base_impl.113" }
%"struct.std::__1::__cxx_atomic_base_impl.113" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map.121", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.150", %"class.std::__1::vector.154", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.161", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.176", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.180", %"class.std::__1::vector.180", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.271", %"class.std::__1::shared_ptr.277", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.278", %"class.std::__1::unique_ptr.304", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.310", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.323", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set", i8, [7 x i8], %"class.std::__1::unordered_map.352", %"class.std::__1::unordered_map.378", %"class.std::__1::unordered_map.352", %"class.std::__1::unordered_map.402", %"class.std::__1::vector.428", i8, %"class.std::__1::unique_ptr.435", i32, i32 }
%"class.std::__1::unordered_map.121" = type { %"class.std::__1::__hash_table.122" }
%"class.std::__1::__hash_table.122" = type <{ %"class.std::__1::unique_ptr.123", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.139", [4 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125", %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.126"** }
%"struct.std::__1::__hash_node_base.126" = type { %"struct.std::__1::__hash_node_base.126"* }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::__bucket_list_deallocator.128" }
%"class.std::__1::__bucket_list_deallocator.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.126" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.145", %"struct.std::__1::atomic.145", %"struct.std::__1::atomic.145" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__atomic_base.147" }
%"struct.std::__1::__atomic_base.147" = type { %"struct.std::__1::__cxx_atomic_impl.148" }
%"struct.std::__1::__cxx_atomic_impl.148" = type { %"struct.std::__1::__cxx_atomic_base_impl.149" }
%"struct.std::__1::__cxx_atomic_base_impl.149" = type { i64 }
%"struct.std::__1::atomic.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i32 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.156" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type opaque
%"class.v8::internal::Space" = type opaque
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.167", %"struct.std::__1::atomic.171", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__cxx_atomic_impl.173" }
%"struct.std::__1::__cxx_atomic_impl.173" = type { %"struct.std::__1::__cxx_atomic_base_impl.174" }
%"struct.std::__1::__cxx_atomic_base_impl.174" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.175" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.182" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.277" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.278" = type { %"class.std::__1::__hash_table.279" }
%"class.std::__1::__hash_table.279" = type <{ %"class.std::__1::unique_ptr.280", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282", %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::__hash_node_base.283"** }
%"struct.std::__1::__hash_node_base.283" = type { %"struct.std::__1::__hash_node_base.283"* }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.std::__1::__bucket_list_deallocator.285" }
%"class.std::__1::__bucket_list_deallocator.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__hash_node_base.283" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.316", %"class.std::__1::vector.316" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.347", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.378" = type { %"class.std::__1::__hash_table.379" }
%"class.std::__1::__hash_table.379" = type <{ %"class.std::__1::unique_ptr.380", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", %"class.std::__1::__compressed_pair.398", [4 x i8] }>
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382", %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.std::__1::__hash_node_base.383"** }
%"struct.std::__1::__hash_node_base.383" = type { %"struct.std::__1::__hash_node_base.383"* }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.std::__1::__bucket_list_deallocator.385" }
%"class.std::__1::__bucket_list_deallocator.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::__hash_node_base.383" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.352" = type { %"class.std::__1::__hash_table.353" }
%"class.std::__1::__hash_table.353" = type <{ %"class.std::__1::unique_ptr.354", %"class.std::__1::__compressed_pair.364", %"class.std::__1::__compressed_pair.369", %"class.std::__1::__compressed_pair.372", [4 x i8] }>
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356", %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"struct.std::__1::__hash_node_base.357"** }
%"struct.std::__1::__hash_node_base.357" = type { %"struct.std::__1::__hash_node_base.357"* }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.std::__1::__bucket_list_deallocator.359" }
%"class.std::__1::__bucket_list_deallocator.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node_base.357" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.424", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.428" = type { %"class.std::__1::__vector_base.429" }
%"class.std::__1::__vector_base.429" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.430" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.316" }
%"class.std::__1::shared_ptr.441" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type opaque
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type opaque
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.448" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type opaque
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type opaque
%"class.v8::internal::StubCache" = type opaque
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type opaque
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.449", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.455", %"class.v8::internal::DetachableVector.456", %"class.v8::internal::DetachableVector.455", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.456" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.455" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type opaque
%"class.v8::internal::EternalHandles" = type opaque
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.457" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { i32*, i32*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { i32* }
%"class.v8::internal::DateCache" = type { i32 (...)**, %"class.v8::internal::Smi", [32 x %"struct.v8::internal::DateCache::DST"], i32, %"struct.v8::internal::DateCache::DST"*, %"struct.v8::internal::DateCache::DST"*, i32, i8, i32, i32, i32, i32, i8*, i8*, %"class.v8::base::TimezoneCache"* }
%"class.v8::internal::Smi" = type { %"class.v8::internal::Object" }
%"struct.v8::internal::DateCache::DST" = type { i32, i32, i32, i32 }
%"class.v8::base::TimezoneCache" = type { i32 (...)** }
%"class.v8::base::RandomNumberGenerator" = type opaque
%"struct.std::__1::atomic.470" = type { %"struct.std::__1::__atomic_base.471" }
%"struct.std::__1::__atomic_base.471" = type { %"struct.std::__1::__cxx_atomic_impl.472" }
%"struct.std::__1::__cxx_atomic_impl.472" = type { %"struct.std::__1::__cxx_atomic_base_impl.473" }
%"struct.std::__1::__cxx_atomic_base_impl.473" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.480" = type { %"struct.std::__1::__atomic_base.481" }
%"struct.std::__1::__atomic_base.481" = type { %"struct.std::__1::__cxx_atomic_impl.482" }
%"struct.std::__1::__cxx_atomic_impl.482" = type { %"struct.std::__1::__cxx_atomic_base_impl.483" }
%"struct.std::__1::__cxx_atomic_base_impl.483" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.490" = type { %"class.std::__1::__hash_table.491" }
%"class.std::__1::__hash_table.491" = type <{ %"class.std::__1::unique_ptr.492", %"class.std::__1::__compressed_pair.502", %"class.std::__1::__compressed_pair.507", %"class.std::__1::__compressed_pair.510", [4 x i8] }>
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494", %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"struct.std::__1::__hash_node_base.495"** }
%"struct.std::__1::__hash_node_base.495" = type { %"struct.std::__1::__hash_node_base.495"* }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.std::__1::__bucket_list_deallocator.497" }
%"class.std::__1::__bucket_list_deallocator.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"struct.std::__1::__hash_node_base.495" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.516", %"class.v8::internal::Handle.522", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.523", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.522" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.523" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type opaque
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type opaque
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.536" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.530"**, %"struct.std::__1::pair.530"**, %"struct.std::__1::pair.530"**, %"class.std::__1::__compressed_pair.531" }
%"struct.std::__1::pair.530" = type opaque
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"struct.std::__1::pair.530"** }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.541" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.475", i32, %"class.v8::Local.114" }
%"class.v8::Local.475" = type { %"class.v8::Promise"* }
%"class.v8::Local.114" = type { %"class.v8::Value"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type opaque
%"class.std::__1::vector.548" = type { %"class.std::__1::__vector_base.549" }
%"class.std::__1::__vector_base.549" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.555" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.556" = type { %"class.std::__1::__hash_table.557" }
%"class.std::__1::__hash_table.557" = type <{ %"class.std::__1::unique_ptr.558", %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.578", [4 x i8] }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.std::__1::__hash_node_base.561"** }
%"struct.std::__1::__hash_node_base.561" = type { %"struct.std::__1::__hash_node_base.561"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::__bucket_list_deallocator.563" }
%"class.std::__1::__bucket_list_deallocator.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.561" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.175" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.584", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.613", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.584" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.609, %union.anon.611, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.609 = type { i64 }
%union.anon.611 = type { i64 }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.613" = type { %"class.v8::PersistentBase.614" }
%"class.v8::PersistentBase.614" = type { %"class.v8::Context"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.585", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.585" = type { %"class.std::__1::__hash_table.586" }
%"class.std::__1::__hash_table.586" = type <{ %"class.std::__1::unique_ptr.587", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.602", %"class.std::__1::__compressed_pair.605", [4 x i8] }>
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589", %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"struct.std::__1::__hash_node_base.590"** }
%"struct.std::__1::__hash_node_base.590" = type { %"struct.std::__1::__hash_node_base.590"* }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.std::__1::__bucket_list_deallocator.592" }
%"class.std::__1::__bucket_list_deallocator.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"struct.std::__1::__hash_node_base.590" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type opaque
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.476", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.476" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.629" }
%"class.std::__1::unordered_map.629" = type { %"class.std::__1::__hash_table.630" }
%"class.std::__1::__hash_table.630" = type <{ %"class.std::__1::unique_ptr.631", %"class.std::__1::__compressed_pair.641", %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.649", [4 x i8] }>
%"class.std::__1::unique_ptr.631" = type { %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633", %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"struct.std::__1::__hash_node_base.634"** }
%"struct.std::__1::__hash_node_base.634" = type { %"struct.std::__1::__hash_node_base.634"* }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.std::__1::__bucket_list_deallocator.636" }
%"class.std::__1::__bucket_list_deallocator.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"struct.std::__1::__hash_node_base.634" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.655" = type { %"struct.std::__1::__atomic_base.656" }
%"struct.std::__1::__atomic_base.656" = type { %"struct.std::__1::__cxx_atomic_impl.657" }
%"struct.std::__1::__cxx_atomic_impl.657" = type { %"struct.std::__1::__cxx_atomic_base_impl.658" }
%"struct.std::__1::__cxx_atomic_base_impl.658" = type { %"class.std::__1::vector.659"* }
%"class.std::__1::vector.659" = type { %"class.std::__1::__vector_base.660" }
%"class.std::__1::__vector_base.660" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.661" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::compiler::JSOperatorBuilder" = type { %"struct.v8::internal::compiler::JSOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::JSOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::SimplifiedOperatorBuilder" = type { %"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::EscapeAnalysisTracker" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::NodeHashCache::Constructor" = type { %"class.v8::internal::compiler::NodeHashCache"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::VirtualObject" = type { %"class.v8::internal::compiler::Dependable", i8, i32, %"class.v8::internal::ZoneVector.700" }
%"class.v8::internal::compiler::Dependable" = type { %"class.v8::internal::ZoneVector.666" }
%"class.v8::internal::ZoneVector.700" = type { %"class.std::__1::vector.701" }
%"class.std::__1::vector.701" = type { %"class.std::__1::__vector_base.702" }
%"class.std::__1::__vector_base.702" = type { %"class.v8::internal::compiler::Variable"*, %"class.v8::internal::compiler::Variable"*, %"class.std::__1::__compressed_pair.703" }
%"class.v8::internal::compiler::Variable" = type { i32 }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704", %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.v8::internal::compiler::Variable"* }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.v8::internal::ZoneAllocator.706" }
%"class.v8::internal::ZoneAllocator.706" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.v8::internal::compiler::Node"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.v8::internal::compiler::Deduplicator" = type { %"class.v8::internal::ZoneVector.708" }
%"class.v8::internal::ZoneVector.708" = type { %"class.std::__1::vector.709" }
%"class.std::__1::vector.709" = type { i64*, i64, %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.v8::internal::ZoneAllocator.712" }
%"class.v8::internal::ZoneAllocator.712" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"class.std::__1::vector.713" = type { %"class.std::__1::__vector_base.714" }
%"class.std::__1::__vector_base.714" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::compiler::AllNodes" = type <{ %"class.v8::internal::ZoneVector.666", %"class.v8::internal::ZoneVector.708", i8, [7 x i8] }>
%"struct.std::__1::array.744" = type { [2 x %"class.v8::internal::compiler::Node"*] }
%"class.v8::internal::compiler::Node::UseEdges" = type { %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::NewArgumentsElementsParameters" = type { i8, i32 }
%"struct.v8::internal::compiler::FieldAccess" = type <{ i8, [3 x i8], i32, %"class.v8::internal::MaybeHandle", %"class.v8::internal::MaybeHandle.719", %"class.v8::internal::compiler::Type", %"class.v8::internal::MachineType", i8, i8, i32, %"struct.v8::internal::compiler::ConstFieldInfo", i8, [7 x i8] }>
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::internal::MaybeHandle.719" = type { i64* }
%"class.v8::internal::MachineType" = type { i8, i8 }
%"struct.v8::internal::compiler::ConstFieldInfo" = type { %"class.v8::internal::MaybeHandle.719" }
%"class.v8::internal::compiler::TypeCache" = type { %"class.v8::internal::AccountingAllocator", %"class.v8::internal::Zone", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type" }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.678", i64, %"class.v8::internal::compiler::Node"* }

$_ZN2v88internal8compiler13NodeHashCacheC2EPNS1_5GraphEPNS0_4ZoneE = comdat any

$_ZN2v88internal8compiler21EscapeAnalysisReducerD2Ev = comdat any

$_ZN2v88internal8compiler21EscapeAnalysisReducerD0Ev = comdat any

$_ZNK2v88internal8compiler21EscapeAnalysisReducer12reducer_nameEv = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_ = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_ = comdat any

@_ZTVN2v88internal8compiler21EscapeAnalysisReducerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::EscapeAnalysisReducer"*)* @_ZN2v88internal8compiler21EscapeAnalysisReducerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::EscapeAnalysisReducer"*)* @_ZN2v88internal8compiler21EscapeAnalysisReducerD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::compiler::EscapeAnalysisReducer"*)* @_ZNK2v88internal8compiler21EscapeAnalysisReducer12reducer_nameEv to i8*), i8* bitcast (void (%"class.v8::internal::compiler::EscapeAnalysisReducer"*)* @_ZN2v88internal8compiler21EscapeAnalysisReducer8FinalizeEv to i8*), i8* bitcast (%"class.v8::internal::compiler::Node"* (%"class.v8::internal::compiler::EscapeAnalysisReducer"*, %"class.v8::internal::compiler::Node"*)* @_ZN2v88internal8compiler21EscapeAnalysisReducer6ReduceEPNS1_4NodeE to i8*)] }, align 8
@.ref.tmp = private constant [6 x i32] [i32 5, i32 4, i32 0, i32 3, i32 1, i32 2], align 4
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"(field) != nullptr\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"Escape analysis failed to remove node %s#%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"index < node->op()->EffectInputCount()\00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"index < node->op()->ControlInputCount()\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"index < node->op()->ValueInputCount()\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"EscapeAnalysisReducer\00", align 1

@_ZN2v88internal8compiler21EscapeAnalysisReducerC1EPNS1_15AdvancedReducer6EditorEPNS1_7JSGraphENS1_20EscapeAnalysisResultEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::EscapeAnalysisReducer"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::EscapeAnalysisReducer"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler21EscapeAnalysisReducerC2EPNS1_15AdvancedReducer6EditorEPNS1_7JSGraphENS1_20EscapeAnalysisResultEPNS0_4ZoneE
@_ZN2v88internal8compiler13NodeHashCache11ConstructorC1EPS2_PKNS1_8OperatorEiPPNS1_4NodeENS1_4TypeE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::NodeHashCache::Constructor"*, %"class.v8::internal::compiler::NodeHashCache"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i64), void (%"class.v8::internal::compiler::NodeHashCache::Constructor"*, %"class.v8::internal::compiler::NodeHashCache"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i64)* @_ZN2v88internal8compiler13NodeHashCache11ConstructorC2EPS2_PKNS1_8OperatorEiPPNS1_4NodeENS1_4TypeE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21EscapeAnalysisReducerC2EPNS1_15AdvancedReducer6EditorEPNS1_7JSGraphENS1_20EscapeAnalysisResultEPNS0_4ZoneE(%"class.v8::internal::compiler::EscapeAnalysisReducer"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::EscapeAnalysisTracker"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal8compiler21EscapeAnalysisReducerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::JSGraph"* %2, %"class.v8::internal::compiler::JSGraph"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 2, i32 0
  store %"class.v8::internal::compiler::EscapeAnalysisTracker"* %3, %"class.v8::internal::compiler::EscapeAnalysisTracker"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 3
  %11 = ptrtoint %"class.v8::internal::Zone"* %4 to i64
  %12 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 1
  %13 = bitcast %"struct.std::__1::__compressed_pair_elem.671"* %12 to i64*
  %14 = bitcast %"class.v8::internal::ZoneVector.666"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #9
  store i64 %11, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2, i64 0, i32 0, i32 0
  %17 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %16, align 8
  tail call void @_ZN2v88internal8compiler13NodeHashCacheC2EPNS1_5GraphEPNS0_4ZoneE(%"class.v8::internal::compiler::NodeHashCache"* %15, %"class.v8::internal::compiler::Graph"* %17, %"class.v8::internal::Zone"* %4)
  %18 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 1
  %20 = bitcast %"struct.std::__1::__compressed_pair_elem.695"* %19 to i64*
  %21 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__compressed_pair.693"* %21 to i64*
  store i64 0, i64* %22, align 8
  store i64 %11, i64* %20, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %24, %"class.std::__1::__tree_end_node"** %18, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 6
  store %"class.v8::internal::Zone"* %4, %"class.v8::internal::Zone"** %25, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler13NodeHashCacheC2EPNS1_5GraphEPNS0_4ZoneE(%"class.v8::internal::compiler::NodeHashCache"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::Zone"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Graph"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %0, i64 0, i32 1
  %6 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %7 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::__compressed_pair_elem.682"* %8 to i64*
  %10 = bitcast %"class.v8::internal::ZoneUnorderedSet"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #9
  store i64 %6, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.678"* null, %"struct.std::__1::__hash_node_base.678"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %13 = bitcast %"struct.std::__1::__compressed_pair_elem.686"* %12 to i64*
  store i64 %6, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %16 = bitcast %"class.std::__1::__compressed_pair.690"* %15 to i32*
  store i32 1065353216, i32* %16, align 4
  %17 = tail call i64 @_ZNSt3__112__next_primeEm(i64 100) #9
  %18 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %17, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %3
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.674"* %7, i64 %17) #9
  br label %51

22:                                               ; preds = %3
  %23 = icmp ult i64 %17, %19
  br i1 %23, label %24, label %51

24:                                               ; preds = %22
  %25 = icmp ugt i64 %19, 2
  %26 = tail call i64 @llvm.ctpop.i64(i64 %19) #9, !range !2
  %27 = icmp ult i64 %26, 2
  %28 = and i1 %25, %27
  %29 = load i64, i64* %14, align 8
  %30 = uitofp i64 %29 to float
  %31 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = fdiv float %30, %32
  %34 = tail call float @llvm.ceil.f32(float %33) #9
  %35 = fptoui float %34 to i64
  br i1 %28, label %36, label %43

36:                                               ; preds = %24
  %37 = icmp ult i64 %35, 2
  br i1 %37, label %45, label %38

38:                                               ; preds = %36
  %39 = add i64 %35, -1
  %40 = tail call i64 @llvm.ctlz.i64(i64 %39, i1 true) #9, !range !2
  %41 = sub nuw nsw i64 64, %40
  %42 = shl i64 1, %41
  br label %45

43:                                               ; preds = %24
  %44 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %35) #9
  br label %45

45:                                               ; preds = %43, %38, %36
  %46 = phi i64 [ %44, %43 ], [ %42, %38 ], [ %35, %36 ]
  %47 = icmp ult i64 %17, %46
  %48 = select i1 %47, i64 %46, i64 %17
  %49 = icmp ult i64 %48, %19
  br i1 %49, label %50, label %51

50:                                               ; preds = %45
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.674"* %7, i64 %48) #9
  br label %51

51:                                               ; preds = %21, %22, %45, %50
  %52 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %0, i64 0, i32 2
  %53 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %54 = bitcast %"struct.std::__1::__compressed_pair_elem.671"* %53 to i64*
  %55 = bitcast %"class.v8::internal::ZoneVector.666"* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  store i64 %6, i64* %54, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21EscapeAnalysisReducer11ReplaceNodeEPNS1_4NodeES4_(%"class.v8::internal::compiler::EscapeAnalysisReducer"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::EscapeAnalysisResult", align 8
  %5 = alloca %"class.v8::internal::compiler::Type", align 8
  %6 = bitcast %"class.v8::internal::compiler::EscapeAnalysisResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 2, i32 0
  %8 = bitcast %"class.v8::internal::compiler::EscapeAnalysisTracker"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.v8::internal::compiler::EscapeAnalysisResult"* %4 to i64*
  store i64 %9, i64* %10, align 8
  %11 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler20EscapeAnalysisResult16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisResult"* nonnull %4, %"class.v8::internal::compiler::Node"* %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %13 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %13, i64 0, i32 2
  %15 = load i16, i16* %14, align 8
  %16 = icmp eq i16 %15, 62
  br i1 %16, label %23, label %17

17:                                               ; preds = %3
  %18 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %11, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %11, i64 0, i32 1
  %21 = load i8, i8* %20, align 8, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %19, %3
  %24 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 0, i32 1
  %25 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %24, align 8
  %26 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %25 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %27 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %27, i64 4
  %29 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %28, align 8
  call void %29(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %25, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #9
  br label %147

30:                                               ; preds = %19, %17
  %31 = bitcast %"class.v8::internal::compiler::Type"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 1, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %5, i64 0, i32 0
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 1, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %33, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %30
  %39 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %5, i64 %36) #9
  br i1 %39, label %40, label %47

40:                                               ; preds = %30, %38
  %41 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 0, i32 1
  %42 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %41, align 8
  %43 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %42 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %44 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %44, i64 4
  %46 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %45, align 8
  call void %46(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %42, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #9
  br label %145

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %49 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %49, i64 0, i32 6
  %51 = load i32, i32* %50, align 8
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %54, label %53, !prof !4

53:                                               ; preds = %47
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0)) #10
  unreachable

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %49, i64 0, i32 5
  %56 = load i32, i32* %55, align 4
  %57 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %49) #9
  %58 = zext i1 %57 to i32
  %59 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %48, align 8
  %60 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %59) #9
  %61 = zext i1 %60 to i32
  %62 = add i32 %56, %58
  %63 = add i32 %62, %61
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 251658240
  %67 = icmp eq i32 %66, 251658240
  %68 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %69 = add i64 %68, 32
  br i1 %67, label %70, label %74

70:                                               ; preds = %54
  %71 = inttoptr i64 %69 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 16
  br label %74

74:                                               ; preds = %54, %70
  %75 = phi i64 [ %73, %70 ], [ %69, %54 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::Node"**
  %77 = sext i32 %63 to i64
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 %77
  %79 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, align 8
  %80 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %48, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %80, i64 0, i32 7
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %85, label %84, !prof !4

84:                                               ; preds = %74
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0)) #10
  unreachable

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %80, i64 0, i32 5
  %87 = load i32, i32* %86, align 4
  %88 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %80) #9
  %89 = zext i1 %88 to i32
  %90 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %48, align 8
  %91 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %90) #9
  %92 = zext i1 %91 to i32
  %93 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %48, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %93, i64 0, i32 6
  %95 = load i32, i32* %94, align 8
  %96 = add i32 %87, %89
  %97 = add i32 %96, %92
  %98 = add i32 %97, %95
  %99 = load i32, i32* %64, align 4
  %100 = and i32 %99, 251658240
  %101 = icmp eq i32 %100, 251658240
  br i1 %101, label %102, label %106

102:                                              ; preds = %85
  %103 = inttoptr i64 %69 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 16
  br label %106

106:                                              ; preds = %85, %102
  %107 = phi i64 [ %105, %102 ], [ %69, %85 ]
  %108 = inttoptr i64 %107 to %"class.v8::internal::compiler::Node"**
  %109 = sext i32 %98 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %108, i64 %109
  %111 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %110, align 8
  call void @_ZN2v88internal8compiler4Node14TrimInputCountEi(%"class.v8::internal::compiler::Node"* %1, i32 0) #9
  %112 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 1
  %113 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %115, i64 0, i32 0
  %117 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %116, align 8
  call void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::Zone"* %117, %"class.v8::internal::compiler::Node"* %2) #9
  %118 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %112, align 8
  %119 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %118, i64 0, i32 0, i32 0
  %120 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %120, i64 0, i32 0
  %122 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %121, align 8
  call void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::Zone"* %122, %"class.v8::internal::compiler::Node"* %79) #9
  %123 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %112, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %123, i64 0, i32 0, i32 0
  %125 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %125, i64 0, i32 0
  %127 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %126, align 8
  call void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::Zone"* %127, %"class.v8::internal::compiler::Node"* %111) #9
  %128 = load i64, i64* %34, align 8
  %129 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %112, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %131, i64 0, i32 0
  %133 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %132, align 8
  %134 = call i64 @_ZN2v88internal8compiler4Type9IntersectES2_S2_PNS0_4ZoneE(i64 %36, i64 %128, %"class.v8::internal::Zone"* %133) #9
  store i64 %134, i64* %35, align 8
  %135 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %112, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %135, i64 0, i32 0, i32 1
  %137 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %136, align 8
  %138 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9TypeGuardENS1_4TypeE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %137, i64 %36) #9
  call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Operator"* %138) #9
  %139 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 0, i32 1
  %140 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %140 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %142 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %142, i64 4
  %144 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %143, align 8
  call void %144(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %140, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %111) #9
  br label %145

145:                                              ; preds = %106, %40
  %146 = phi %"class.v8::internal::compiler::Node"* [ %2, %40 ], [ null, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %147

147:                                              ; preds = %145, %23
  %148 = phi %"class.v8::internal::compiler::Node"* [ %2, %23 ], [ %146, %145 ]
  ret %"class.v8::internal::compiler::Node"* %148
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler20EscapeAnalysisResult16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisResult"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal8compiler4Node14TrimInputCountEi(%"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal8compiler4Type9IntersectES2_S2_PNS0_4ZoneE(i64, i64, %"class.v8::internal::Zone"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9TypeGuardENS1_4TypeE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21EscapeAnalysisReducer12ObjectIdNodeEPKNS1_13VirtualObjectE(%"class.v8::internal::compiler::EscapeAnalysisReducer"*, %"class.v8::internal::compiler::VirtualObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 3, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::Node"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.667"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ugt i64 %13, %5
  %15 = inttoptr i64 %11 to %"class.v8::internal::compiler::Node"**
  br i1 %14, label %28, label %16

16:                                               ; preds = %2
  %17 = add i32 %4, 1
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %13, %18
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = sub nsw i64 %18, %13
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.667"* %6, i64 %21) #9
  %22 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %6, i64 0, i32 0, i32 0
  %23 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %22, align 8
  br label %28

24:                                               ; preds = %16
  %25 = icmp ugt i64 %13, %18
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, i64 %18
  store %"class.v8::internal::compiler::Node"** %27, %"class.v8::internal::compiler::Node"*** %7, align 8
  br label %28

28:                                               ; preds = %26, %24, %20, %2
  %29 = phi %"class.v8::internal::compiler::Node"** [ %15, %26 ], [ %15, %24 ], [ %23, %20 ], [ %15, %2 ]
  %30 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %6, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %5
  %32 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %33 = icmp eq %"class.v8::internal::compiler::Node"* %32, null
  br i1 %33, label %34, label %46

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 1
  %36 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %36, i64 0, i32 0, i32 1
  %40 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %39, align 8
  %41 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder8ObjectIdEj(%"class.v8::internal::compiler::CommonOperatorBuilder"* %40, i32 %4) #9
  %42 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %38, %"class.v8::internal::compiler::Operator"* %41, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #9
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %42, i64 0, i32 1, i32 0
  store i64 73859073, i64* %43, align 8
  %44 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %30, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %44, i64 %5
  store %"class.v8::internal::compiler::Node"* %42, %"class.v8::internal::compiler::Node"** %45, align 8
  br label %46

46:                                               ; preds = %28, %34
  %47 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %30, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %47, i64 %5
  %49 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, align 8
  ret %"class.v8::internal::compiler::Node"* %49
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder8ObjectIdEj(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21EscapeAnalysisReducer6ReduceEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisReducer"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::EscapeAnalysisResult", align 8
  %4 = alloca %"class.v8::internal::compiler::EscapeAnalysisResult", align 8
  %5 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %6 = bitcast %"class.v8::internal::compiler::EscapeAnalysisResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 2, i32 0
  %8 = bitcast %"class.v8::internal::compiler::EscapeAnalysisTracker"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.v8::internal::compiler::EscapeAnalysisResult"* %3 to i64*
  store i64 %9, i64* %10, align 8
  %11 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler20EscapeAnalysisResult16GetReplacementOfEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisResult"* nonnull %3, %"class.v8::internal::compiler::Node"* %1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %12 = icmp eq %"class.v8::internal::compiler::Node"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21EscapeAnalysisReducer11ReplaceNodeEPNS1_4NodeES4_(%"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %11)
  br label %168

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %17 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %17, i64 0, i32 2
  %19 = load i16, i16* %18, align 8
  switch i16 %19, label %163 [
    i16 197, label %20
    i16 59, label %20
    i16 40, label %37
    i16 237, label %84
  ]

20:                                               ; preds = %15, %15
  %21 = bitcast %"class.v8::internal::compiler::EscapeAnalysisResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = load i64, i64* %8, align 8
  %23 = bitcast %"class.v8::internal::compiler::EscapeAnalysisResult"* %4 to i64*
  store i64 %22, i64* %23, align 8
  %24 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler20EscapeAnalysisResult16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisResult"* nonnull %4, %"class.v8::internal::compiler::Node"* %1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %25 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %24, null
  br i1 %25, label %168, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %24, i64 0, i32 1
  %28 = load i8, i8* %27, align 8, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %168

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 0, i32 1
  %32 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %31, align 8
  %33 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %32 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %34 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %34, i64 4
  %36 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %35, align 8
  call void %36(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %32, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #9
  br label %168

37:                                               ; preds = %15
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %17, i64 0, i32 6
  %39 = load i32, i32* %38, align 8
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %42, label %41, !prof !4

41:                                               ; preds = %37
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0)) #10
  unreachable

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %17, i64 0, i32 5
  %44 = load i32, i32* %43, align 4
  %45 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %17) #9
  %46 = zext i1 %45 to i32
  %47 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %48 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %47) #9
  %49 = zext i1 %48 to i32
  %50 = add i32 %44, %46
  %51 = add i32 %50, %49
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 251658240
  %55 = icmp eq i32 %54, 251658240
  %56 = add i64 %5, 32
  br i1 %55, label %57, label %61

57:                                               ; preds = %42
  %58 = inttoptr i64 %56 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, 16
  br label %61

61:                                               ; preds = %42, %57
  %62 = phi i64 [ %60, %57 ], [ %56, %42 ]
  %63 = inttoptr i64 %62 to %"class.v8::internal::compiler::Node"**
  %64 = sext i32 %51 to i64
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %63, i64 %64
  %66 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %66, i64 0, i32 0
  %68 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %68, i64 0, i32 2
  %70 = load i16, i16* %69, align 8
  %71 = icmp eq i16 %70, 39
  br i1 %71, label %72, label %168

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 0, i32 1
  %74 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %73, align 8
  %75 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %74 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %76 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %76, i64 4
  %78 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %77, align 8
  call void %78(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %74, %"class.v8::internal::compiler::Node"* %66, %"class.v8::internal::compiler::Node"* %66, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #9
  %79 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %73, align 8
  %80 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %79 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %81 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %81, i64 4
  %83 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %82, align 8
  call void %83(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %79, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #9
  br label %168

84:                                               ; preds = %15
  %85 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0
  %86 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %87 = bitcast %"class.std::__1::__tree_end_node"* %86 to %"class.std::__1::__tree_node"**
  %88 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node"* %88, null
  br i1 %89, label %118, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %92

92:                                               ; preds = %114, %90
  %93 = phi %"class.std::__1::__tree_node"* [ %117, %114 ], [ %88, %90 ]
  %94 = phi %"class.std::__1::__tree_node_base"** [ %116, %114 ], [ %91, %90 ]
  %95 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 1
  %96 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, align 8
  %97 = icmp ugt %"class.v8::internal::compiler::Node"* %96, %1
  br i1 %97, label %98, label %104

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %114

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 0, i32 0
  br label %120

104:                                              ; preds = %92
  %105 = icmp ult %"class.v8::internal::compiler::Node"* %96, %1
  br i1 %105, label %106, label %112

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 0, i32 1
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, null
  br i1 %109, label %110, label %114

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 0, i32 0
  br label %120

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 0, i32 0
  br label %120

114:                                              ; preds = %106, %98
  %115 = phi %"class.std::__1::__tree_node_base"* [ %100, %98 ], [ %108, %106 ]
  %116 = phi %"class.std::__1::__tree_node_base"** [ %99, %98 ], [ %107, %106 ]
  %117 = bitcast %"class.std::__1::__tree_node_base"* %115 to %"class.std::__1::__tree_node"*
  br label %92

118:                                              ; preds = %84
  %119 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 0, i32 0
  br label %120

120:                                              ; preds = %118, %112, %110, %102
  %121 = phi %"class.std::__1::__tree_end_node"* [ %86, %118 ], [ %103, %102 ], [ %111, %110 ], [ %113, %112 ]
  %122 = phi %"class.std::__1::__tree_node_base"** [ %119, %118 ], [ %99, %102 ], [ %107, %110 ], [ %94, %112 ]
  %123 = bitcast %"class.std::__1::__tree_node_base"** %122 to %"class.std::__1::__tree_node"**
  %124 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node"* %124, null
  br i1 %125, label %126, label %168

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %128 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %127, align 8, !noalias !5
  %129 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %128, i64 0, i32 2
  %130 = load i64, i64* %129, align 8, !noalias !5
  %131 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %128, i64 0, i32 3
  %132 = load i64, i64* %131, align 8, !noalias !5
  %133 = sub i64 %132, %130
  %134 = icmp ult i64 %133, 40
  br i1 %134, label %135, label %137, !prof !8

135:                                              ; preds = %126
  %136 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %128, i64 40) #9, !noalias !5
  br label %139

137:                                              ; preds = %126
  %138 = add i64 %130, 40
  store i64 %138, i64* %129, align 8, !noalias !5
  br label %139

139:                                              ; preds = %137, %135
  %140 = phi i64 [ %136, %135 ], [ %130, %137 ]
  %141 = inttoptr i64 %140 to %"class.std::__1::__tree_node"*
  %142 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %141, i64 0, i32 1
  %143 = bitcast %"class.v8::internal::compiler::Node"** %142 to i64*
  store i64 %5, i64* %143, align 8, !noalias !5
  %144 = inttoptr i64 %140 to %"class.std::__1::__tree_node_base"*
  %145 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %144, i64 0, i32 2
  %146 = inttoptr i64 %140 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %121, %"class.std::__1::__tree_end_node"** %145, align 8
  store %"class.std::__1::__tree_node_base"* %144, %"class.std::__1::__tree_node_base"** %122, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %85, i64 0, i32 0
  %148 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %147, align 8
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %148, i64 0, i32 0
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %150, null
  br i1 %151, label %156, label %152

152:                                              ; preds = %139
  %153 = ptrtoint %"class.std::__1::__tree_node_base"* %150 to i64
  %154 = bitcast %"class.std::__1::__tree"* %85 to i64*
  store i64 %153, i64* %154, align 8
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  br label %156

156:                                              ; preds = %152, %139
  %157 = phi %"class.std::__1::__tree_node_base"* [ %144, %139 ], [ %155, %152 ]
  %158 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %159 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %158, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %159, %"class.std::__1::__tree_node_base"* %157) #9
  %160 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = add i64 %161, 1
  store i64 %162, i64* %160, align 8
  br label %168

163:                                              ; preds = %15
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %17, i64 0, i32 6
  %165 = load i32, i32* %164, align 8
  %166 = icmp sgt i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %163
  call void @_ZN2v88internal8compiler21EscapeAnalysisReducer22ReduceFrameStateInputsEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %168

168:                                              ; preds = %156, %120, %26, %163, %167, %61, %72, %30, %20, %13
  %169 = phi %"class.v8::internal::compiler::Node"* [ %14, %13 ], [ null, %20 ], [ null, %30 ], [ null, %26 ], [ null, %72 ], [ null, %61 ], [ null, %167 ], [ null, %163 ], [ null, %120 ], [ null, %156 ]
  ret %"class.v8::internal::compiler::Node"* %169
}

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler20EscapeAnalysisResult16GetReplacementOfEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisResult"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21EscapeAnalysisReducer22ReduceFrameStateInputsEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisReducer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::Deduplicator", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %6 = add i64 %5, 32
  %7 = inttoptr i64 %6 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %8 = inttoptr i64 %6 to %"class.v8::internal::compiler::Node"**
  %9 = inttoptr i64 %6 to i64*
  %10 = bitcast %"class.v8::internal::compiler::Deduplicator"* %3 to i8*
  %11 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 6
  %12 = bitcast %"class.v8::internal::Zone"** %11 to i64*
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Deduplicator", %"class.v8::internal::compiler::Deduplicator"* %3, i64 0, i32 0, i32 0, i32 2, i32 1
  %14 = bitcast %"struct.std::__1::__compressed_pair_elem.711"* %13 to i64*
  %15 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  %16 = inttoptr i64 %6 to %"struct.v8::internal::compiler::Node::Use"**
  br label %17

17:                                               ; preds = %76, %2
  %18 = phi i64 [ %77, %76 ], [ 0, %2 ]
  %19 = load i32, i32* %4, align 4
  %20 = and i32 %19, 251658240
  %21 = icmp eq i32 %20, 251658240
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = lshr i32 %19, 24
  %24 = and i32 %23, 15
  br label %29

25:                                               ; preds = %17
  %26 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %7, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %22, %25
  %30 = phi i32 [ %24, %22 ], [ %28, %25 ]
  %31 = sext i32 %30 to i64
  %32 = icmp slt i64 %18, %31
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  ret void

34:                                               ; preds = %29
  br i1 %21, label %35, label %39

35:                                               ; preds = %34
  %36 = load i64, i64* %9, align 8
  %37 = add i64 %36, 16
  %38 = inttoptr i64 %37 to %"class.v8::internal::compiler::Node"**
  br label %39

39:                                               ; preds = %34, %35
  %40 = phi %"class.v8::internal::compiler::Node"** [ %38, %35 ], [ %8, %34 ]
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, i64 %18
  %42 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %42, i64 0, i32 0
  %44 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %44, i64 0, i32 2
  %46 = load i16, i16* %45, align 8
  %47 = icmp eq i16 %46, 41
  br i1 %47, label %48, label %76

48:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #9
  %49 = load i64, i64* %12, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #9
  store i64 %49, i64* %14, align 8
  %50 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21EscapeAnalysisReducer16ReduceDeoptStateEPNS1_4NodeES4_PNS1_12DeduplicatorE(%"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, %"class.v8::internal::compiler::Node"* %42, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Deduplicator"* nonnull %3)
  %51 = icmp eq %"class.v8::internal::compiler::Node"* %50, null
  br i1 %51, label %75, label %52

52:                                               ; preds = %48
  %53 = load i32, i32* %4, align 4
  %54 = and i32 %53, 251658240
  %55 = icmp eq i32 %54, 251658240
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = load i64, i64* %9, align 8
  %58 = add i64 %57, 16
  %59 = inttoptr i64 %58 to %"class.v8::internal::compiler::Node"**
  br label %60

60:                                               ; preds = %52, %56
  %61 = phi %"class.v8::internal::compiler::Node"** [ %59, %56 ], [ %8, %52 ]
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %61, i64 %18
  %63 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %62, align 8
  %64 = icmp eq %"class.v8::internal::compiler::Node"* %63, %50
  br i1 %64, label %75, label %65

65:                                               ; preds = %60
  br i1 %55, label %66, label %68

66:                                               ; preds = %65
  %67 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %16, align 8
  br label %68

68:                                               ; preds = %65, %66
  %69 = phi %"struct.v8::internal::compiler::Node::Use"* [ %67, %66 ], [ %15, %65 ]
  %70 = xor i64 %18, -1
  %71 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %69, i64 %70
  %72 = icmp eq %"class.v8::internal::compiler::Node"* %63, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %68
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %63, %"struct.v8::internal::compiler::Node::Use"* %71) #9
  br label %74

74:                                               ; preds = %68, %73
  store %"class.v8::internal::compiler::Node"* %50, %"class.v8::internal::compiler::Node"** %62, align 8
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %50, %"struct.v8::internal::compiler::Node::Use"* %71) #9
  br label %75

75:                                               ; preds = %74, %60, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #9
  br label %76

76:                                               ; preds = %75, %39
  %77 = add nuw nsw i64 %18, 1
  br label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21EscapeAnalysisReducer16ReduceDeoptStateEPNS1_4NodeES4_PNS1_12DeduplicatorE(%"class.v8::internal::compiler::EscapeAnalysisReducer"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Deduplicator"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::compiler::NodeHashCache::Constructor", align 8
  %6 = alloca %"class.v8::internal::compiler::NodeHashCache::Constructor", align 8
  %7 = alloca %"class.v8::internal::compiler::EscapeAnalysisResult", align 8
  %8 = alloca %"class.std::__1::vector.713", align 8
  %9 = alloca %"class.v8::internal::compiler::EscapeAnalysisResult", align 8
  %10 = alloca %"class.v8::internal::compiler::NodeHashCache::Constructor", align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %12 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %12, i64 0, i32 2
  %14 = load i16, i16* %13, align 8
  switch i16 %14, label %170 [
    i16 41, label %15
    i16 42, label %102
  ]

15:                                               ; preds = %4
  %16 = bitcast %"class.v8::internal::compiler::NodeHashCache::Constructor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %5, i64 0, i32 0
  store %"class.v8::internal::compiler::NodeHashCache"* %17, %"class.v8::internal::compiler::NodeHashCache"** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %5, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %5, i64 0, i32 2
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %22 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %23 = add i64 %22, 32
  %24 = inttoptr i64 %23 to i64*
  br label %27

25:                                               ; preds = %99
  %26 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13NodeHashCache11Constructor3GetEv(%"class.v8::internal::compiler::NodeHashCache::Constructor"* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  br label %438

27:                                               ; preds = %15, %99
  %28 = phi i32* [ getelementptr inbounds ([6 x i32], [6 x i32]* @.ref.tmp, i64 0, i64 0), %15 ], [ %100, %99 ]
  %29 = load i32, i32* %28, align 4
  %30 = load i32, i32* %21, align 4
  %31 = and i32 %30, 251658240
  %32 = icmp eq i32 %31, 251658240
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = load i64, i64* %24, align 8
  %35 = add i64 %34, 16
  br label %36

36:                                               ; preds = %27, %33
  %37 = phi i64 [ %35, %33 ], [ %23, %27 ]
  %38 = inttoptr i64 %37 to %"class.v8::internal::compiler::Node"**
  %39 = sext i32 %29 to i64
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, i64 %39
  %41 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, align 8
  %42 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21EscapeAnalysisReducer16ReduceDeoptStateEPNS1_4NodeES4_PNS1_12DeduplicatorE(%"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, %"class.v8::internal::compiler::Node"* %41, %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Deduplicator"* %3)
  %43 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %20, align 8
  %44 = icmp eq %"class.v8::internal::compiler::Node"* %43, null
  br i1 %44, label %45, label %64

45:                                               ; preds = %36
  %46 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %46, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 251658240
  %50 = icmp eq i32 %49, 251658240
  %51 = ptrtoint %"class.v8::internal::compiler::Node"* %46 to i64
  %52 = add i64 %51, 32
  br i1 %50, label %53, label %57

53:                                               ; preds = %45
  %54 = inttoptr i64 %52 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 16
  br label %57

57:                                               ; preds = %45, %53
  %58 = phi i64 [ %56, %53 ], [ %52, %45 ]
  %59 = inttoptr i64 %58 to %"class.v8::internal::compiler::Node"**
  %60 = sext i32 %29 to i64
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, i64 %60
  %62 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %61, align 8
  %63 = icmp eq %"class.v8::internal::compiler::Node"* %62, %42
  br i1 %63, label %99, label %64

64:                                               ; preds = %57, %36
  %65 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13NodeHashCache11Constructor11MutableNodeEv(%"class.v8::internal::compiler::NodeHashCache::Constructor"* nonnull %5) #9
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %65, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 251658240
  %69 = icmp eq i32 %68, 251658240
  %70 = ptrtoint %"class.v8::internal::compiler::Node"* %65 to i64
  %71 = add i64 %70, 32
  br i1 %69, label %72, label %76

72:                                               ; preds = %64
  %73 = inttoptr i64 %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 16
  br label %76

76:                                               ; preds = %64, %72
  %77 = phi i64 [ %75, %72 ], [ %71, %64 ]
  %78 = inttoptr i64 %77 to %"class.v8::internal::compiler::Node"**
  %79 = sext i32 %29 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 %79
  %81 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %80, align 8
  %82 = icmp eq %"class.v8::internal::compiler::Node"* %81, %42
  br i1 %82, label %99, label %83

83:                                               ; preds = %76
  br i1 %69, label %86, label %84

84:                                               ; preds = %83
  %85 = bitcast %"class.v8::internal::compiler::Node"* %65 to %"struct.v8::internal::compiler::Node::Use"*
  br label %89

86:                                               ; preds = %83
  %87 = inttoptr i64 %71 to %"struct.v8::internal::compiler::Node::Use"**
  %88 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %87, align 8
  br label %89

89:                                               ; preds = %86, %84
  %90 = phi %"struct.v8::internal::compiler::Node::Use"* [ %85, %84 ], [ %88, %86 ]
  %91 = xor i32 %29, -1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %90, i64 %92
  %94 = icmp eq %"class.v8::internal::compiler::Node"* %81, null
  br i1 %94, label %96, label %95

95:                                               ; preds = %89
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %81, %"struct.v8::internal::compiler::Node::Use"* %93) #9
  br label %96

96:                                               ; preds = %95, %89
  store %"class.v8::internal::compiler::Node"* %42, %"class.v8::internal::compiler::Node"** %80, align 8
  %97 = icmp eq %"class.v8::internal::compiler::Node"* %42, null
  br i1 %97, label %99, label %98

98:                                               ; preds = %96
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %42, %"struct.v8::internal::compiler::Node::Use"* %93) #9
  br label %99

99:                                               ; preds = %98, %96, %76, %57
  %100 = getelementptr inbounds i32, i32* %28, i64 1
  %101 = icmp eq i32* %100, getelementptr inbounds ([6 x i32], [6 x i32]* @.ref.tmp, i64 1, i64 0)
  br i1 %101, label %25, label %27

102:                                              ; preds = %4
  %103 = bitcast %"class.v8::internal::compiler::NodeHashCache::Constructor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #9
  %104 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 4
  %105 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::NodeHashCache"* %104, %"class.v8::internal::compiler::NodeHashCache"** %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %12, i64 0, i32 5
  %109 = load i32, i32* %108, align 4
  %110 = icmp sgt i32 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %113 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %114 = add i64 %113, 32
  %115 = inttoptr i64 %114 to i64*
  br label %118

116:                                              ; preds = %163, %102
  %117 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13NodeHashCache11Constructor3GetEv(%"class.v8::internal::compiler::NodeHashCache::Constructor"* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #9
  br label %438

118:                                              ; preds = %111, %163
  %119 = phi i64 [ 0, %111 ], [ %164, %163 ]
  %120 = load i32, i32* %112, align 4
  %121 = and i32 %120, 251658240
  %122 = icmp eq i32 %121, 251658240
  br i1 %122, label %123, label %126

123:                                              ; preds = %118
  %124 = load i64, i64* %115, align 8
  %125 = add i64 %124, 16
  br label %126

126:                                              ; preds = %118, %123
  %127 = phi i64 [ %125, %123 ], [ %114, %118 ]
  %128 = inttoptr i64 %127 to %"class.v8::internal::compiler::Node"**
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 %119
  %130 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, align 8
  %131 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21EscapeAnalysisReducer16ReduceDeoptStateEPNS1_4NodeES4_PNS1_12DeduplicatorE(%"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, %"class.v8::internal::compiler::Node"* %130, %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Deduplicator"* %3)
  %132 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, align 8
  %133 = icmp eq %"class.v8::internal::compiler::Node"* %132, null
  br i1 %133, label %134, label %160

134:                                              ; preds = %126
  %135 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %106, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %135, i64 0, i32 0
  %137 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %137, i64 0, i32 5
  %139 = load i32, i32* %138, align 4
  %140 = sext i32 %139 to i64
  %141 = icmp slt i64 %119, %140
  br i1 %141, label %143, label %142, !prof !4

142:                                              ; preds = %134
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #10
  unreachable

143:                                              ; preds = %134
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %135, i64 0, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = and i32 %145, 251658240
  %147 = icmp eq i32 %146, 251658240
  %148 = ptrtoint %"class.v8::internal::compiler::Node"* %135 to i64
  %149 = add i64 %148, 32
  br i1 %147, label %150, label %154

150:                                              ; preds = %143
  %151 = inttoptr i64 %149 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = add i64 %152, 16
  br label %154

154:                                              ; preds = %143, %150
  %155 = phi i64 [ %153, %150 ], [ %149, %143 ]
  %156 = inttoptr i64 %155 to %"class.v8::internal::compiler::Node"**
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %156, i64 %119
  %158 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %157, align 8
  %159 = icmp eq %"class.v8::internal::compiler::Node"* %158, %131
  br i1 %159, label %163, label %160

160:                                              ; preds = %154, %126
  %161 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13NodeHashCache11Constructor11MutableNodeEv(%"class.v8::internal::compiler::NodeHashCache::Constructor"* nonnull %6) #9
  %162 = trunc i64 %119 to i32
  tail call void @_ZN2v88internal8compiler14NodeProperties17ReplaceValueInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %161, %"class.v8::internal::compiler::Node"* %131, i32 %162) #9
  br label %163

163:                                              ; preds = %154, %160
  %164 = add nuw nsw i64 %119, 1
  %165 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %11, align 8
  %166 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %165, i64 0, i32 5
  %167 = load i32, i32* %166, align 4
  %168 = sext i32 %167 to i64
  %169 = icmp slt i64 %164, %168
  br i1 %169, label %118, label %116

170:                                              ; preds = %4
  %171 = bitcast %"class.v8::internal::compiler::EscapeAnalysisResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #9
  %172 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 2, i32 0
  %173 = bitcast %"class.v8::internal::compiler::EscapeAnalysisTracker"** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.v8::internal::compiler::EscapeAnalysisResult"* %7 to i64*
  store i64 %174, i64* %175, align 8
  %176 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  br label %177

177:                                              ; preds = %222, %170
  %178 = phi i64 [ %176, %170 ], [ %224, %222 ]
  %179 = inttoptr i64 %178 to %"class.v8::internal::compiler::Node"*
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %179, i64 0, i32 0
  %181 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %181, i64 0, i32 2
  %183 = load i16, i16* %182, align 8
  switch i16 %183, label %225 [
    i16 59, label %184
    i16 58, label %202
  ]

184:                                              ; preds = %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %181, i64 0, i32 5
  %186 = load i32, i32* %185, align 4
  %187 = icmp sgt i32 %186, 0
  br i1 %187, label %189, label %188, !prof !4

188:                                              ; preds = %184
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #10
  unreachable

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %179, i64 0, i32 3
  %191 = load i32, i32* %190, align 4
  %192 = and i32 %191, 251658240
  %193 = icmp eq i32 %192, 251658240
  %194 = add i64 %178, 32
  br i1 %193, label %195, label %199

195:                                              ; preds = %189
  %196 = inttoptr i64 %194 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = add i64 %197, 16
  br label %199

199:                                              ; preds = %195, %189
  %200 = phi i64 [ %198, %195 ], [ %194, %189 ]
  %201 = inttoptr i64 %200 to i64*
  br label %222

202:                                              ; preds = %177
  %203 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %181, i64 0, i32 5
  %204 = load i32, i32* %203, align 4
  %205 = icmp sgt i32 %204, 1
  br i1 %205, label %207, label %206, !prof !4

206:                                              ; preds = %202
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #10
  unreachable

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %179, i64 0, i32 3
  %209 = load i32, i32* %208, align 4
  %210 = and i32 %209, 251658240
  %211 = icmp eq i32 %210, 251658240
  %212 = add i64 %178, 32
  br i1 %211, label %213, label %217

213:                                              ; preds = %207
  %214 = inttoptr i64 %212 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = add i64 %215, 16
  br label %217

217:                                              ; preds = %213, %207
  %218 = phi i64 [ %216, %213 ], [ %212, %207 ]
  %219 = inttoptr i64 %218 to %"class.v8::internal::compiler::Node"**
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %219, i64 1
  %221 = bitcast %"class.v8::internal::compiler::Node"** %220 to i64*
  br label %222

222:                                              ; preds = %217, %199
  %223 = phi i64* [ %221, %217 ], [ %201, %199 ]
  %224 = load i64, i64* %223, align 8
  br label %177

225:                                              ; preds = %177
  %226 = inttoptr i64 %178 to %"class.v8::internal::compiler::Node"*
  %227 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler20EscapeAnalysisResult16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisResult"* nonnull %7, %"class.v8::internal::compiler::Node"* %226) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #9
  %228 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %227, null
  br i1 %228, label %438, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %227, i64 0, i32 1
  %231 = load i8, i8* %230, align 8, !range !3
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %233, label %438

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %227, i64 0, i32 2
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds %"class.v8::internal::compiler::Deduplicator", %"class.v8::internal::compiler::Deduplicator"* %3, i64 0, i32 0, i32 0, i32 1
  %238 = load i64, i64* %237, align 8
  %239 = icmp ugt i64 %238, %236
  br i1 %239, label %244, label %240

240:                                              ; preds = %233
  %241 = getelementptr inbounds %"class.v8::internal::compiler::Deduplicator", %"class.v8::internal::compiler::Deduplicator"* %3, i64 0, i32 0, i32 0
  %242 = add i32 %235, 1
  %243 = zext i32 %242 to i64
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.709"* %241, i64 %243, i1 zeroext false) #9
  br label %244

244:                                              ; preds = %233, %240
  %245 = getelementptr inbounds %"class.v8::internal::compiler::Deduplicator", %"class.v8::internal::compiler::Deduplicator"* %3, i64 0, i32 0, i32 0, i32 0
  %246 = load i64*, i64** %245, align 8
  %247 = lshr i64 %236, 6
  %248 = getelementptr inbounds i64, i64* %246, i64 %247
  %249 = and i64 %236, 63
  %250 = shl i64 1, %249
  %251 = load i64, i64* %248, align 8
  %252 = and i64 %251, %250
  %253 = icmp eq i64 %252, 0
  %254 = or i64 %251, %250
  store i64 %254, i64* %248, align 8
  br i1 %253, label %303, label %255

255:                                              ; preds = %244
  %256 = load i32, i32* %234, align 4
  %257 = zext i32 %256 to i64
  %258 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 3, i32 0
  %259 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %260 = bitcast %"class.v8::internal::compiler::Node"*** %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"class.std::__1::vector.667"* %258 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = sub i64 %261, %263
  %265 = ashr exact i64 %264, 3
  %266 = icmp ugt i64 %265, %257
  %267 = inttoptr i64 %263 to %"class.v8::internal::compiler::Node"**
  br i1 %266, label %280, label %268

268:                                              ; preds = %255
  %269 = add i32 %256, 1
  %270 = zext i32 %269 to i64
  %271 = icmp ult i64 %265, %270
  br i1 %271, label %272, label %276

272:                                              ; preds = %268
  %273 = sub nsw i64 %270, %265
  call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.667"* %258, i64 %273) #9
  %274 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %258, i64 0, i32 0, i32 0
  %275 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %274, align 8
  br label %280

276:                                              ; preds = %268
  %277 = icmp ugt i64 %265, %270
  br i1 %277, label %278, label %280

278:                                              ; preds = %276
  %279 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %267, i64 %270
  store %"class.v8::internal::compiler::Node"** %279, %"class.v8::internal::compiler::Node"*** %259, align 8
  br label %280

280:                                              ; preds = %278, %276, %272, %255
  %281 = phi %"class.v8::internal::compiler::Node"** [ %267, %278 ], [ %267, %276 ], [ %275, %272 ], [ %267, %255 ]
  %282 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %258, i64 0, i32 0, i32 0
  %283 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %281, i64 %257
  %284 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %283, align 8
  %285 = icmp eq %"class.v8::internal::compiler::Node"* %284, null
  br i1 %285, label %286, label %299

286:                                              ; preds = %280
  %287 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 1
  %288 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %287, align 8
  %289 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %288, i64 0, i32 0, i32 0
  %290 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %289, align 8
  %291 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %288, i64 0, i32 0, i32 1
  %292 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %291, align 8
  %293 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder8ObjectIdEj(%"class.v8::internal::compiler::CommonOperatorBuilder"* %292, i32 %256) #9
  %294 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %290, %"class.v8::internal::compiler::Operator"* %293, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #9
  %295 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %294, i64 0, i32 1, i32 0
  store i64 73859073, i64* %295, align 8
  %296 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %282, align 8
  %297 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %296, i64 %257
  store %"class.v8::internal::compiler::Node"* %294, %"class.v8::internal::compiler::Node"** %297, align 8
  %298 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %282, align 8
  br label %299

299:                                              ; preds = %280, %286
  %300 = phi %"class.v8::internal::compiler::Node"** [ %281, %280 ], [ %298, %286 ]
  %301 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %300, i64 %257
  %302 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %301, align 8
  br label %438

303:                                              ; preds = %244
  %304 = bitcast %"class.std::__1::vector.713"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %304) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %304, i8 0, i64 24, i1 false) #9
  %305 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %227, i64 0, i32 3, i32 0
  %306 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %227, i64 0, i32 3, i32 0, i32 0, i32 1
  %307 = bitcast %"class.v8::internal::compiler::Variable"** %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = bitcast %"class.std::__1::vector.701"* %305 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = sub i64 %308, %310
  %312 = trunc i64 %311 to i32
  %313 = and i32 %312, -4
  %314 = icmp sgt i32 %313, 0
  br i1 %314, label %315, label %327

315:                                              ; preds = %303
  %316 = bitcast %"class.v8::internal::compiler::EscapeAnalysisResult"* %9 to i8*
  %317 = bitcast %"class.v8::internal::compiler::EscapeAnalysisResult"* %9 to i64*
  %318 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 1
  %319 = getelementptr inbounds %"class.std::__1::vector.713", %"class.std::__1::vector.713"* %8, i64 0, i32 0, i32 1
  %320 = getelementptr inbounds %"class.std::__1::vector.713", %"class.std::__1::vector.713"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %321 = bitcast %"class.v8::internal::compiler::Node"*** %319 to i64*
  %322 = bitcast %"class.std::__1::vector.713"* %8 to i64*
  %323 = bitcast %"class.v8::internal::compiler::Node"*** %320 to i64*
  br label %354

324:                                              ; preds = %430
  %325 = load i64, i64* %321, align 8
  %326 = load i64, i64* %322, align 8
  br label %327

327:                                              ; preds = %303, %324
  %328 = phi i64 [ %326, %324 ], [ 0, %303 ]
  %329 = phi i64 [ %325, %324 ], [ 0, %303 ]
  %330 = sub i64 %329, %328
  %331 = lshr exact i64 %330, 3
  %332 = trunc i64 %331 to i32
  %333 = bitcast %"class.v8::internal::compiler::NodeHashCache::Constructor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %333) #9
  %334 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 4
  %335 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 1
  %336 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %335, align 8
  %337 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %336, i64 0, i32 0, i32 1
  %338 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %337, align 8
  %339 = load i32, i32* %234, align 4
  %340 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder11ObjectStateEji(%"class.v8::internal::compiler::CommonOperatorBuilder"* %338, i32 %339, i32 %332) #9
  %341 = getelementptr inbounds %"class.std::__1::vector.713", %"class.std::__1::vector.713"* %8, i64 0, i32 0, i32 0
  %342 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %341, align 8
  %343 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 1, i32 0
  %344 = load i64, i64* %343, align 8
  call void @_ZN2v88internal8compiler13NodeHashCache11ConstructorC2EPS2_PKNS1_8OperatorEiPPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::NodeHashCache::Constructor"* nonnull %10, %"class.v8::internal::compiler::NodeHashCache"* %334, %"class.v8::internal::compiler::Operator"* %340, i32 %332, %"class.v8::internal::compiler::Node"** %342, i64 %344)
  %345 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13NodeHashCache11Constructor3GetEv(%"class.v8::internal::compiler::NodeHashCache::Constructor"* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %333) #9
  %346 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %341, align 8
  %347 = icmp eq %"class.v8::internal::compiler::Node"** %346, null
  br i1 %347, label %353, label %348

348:                                              ; preds = %327
  %349 = getelementptr inbounds %"class.std::__1::vector.713", %"class.std::__1::vector.713"* %8, i64 0, i32 0, i32 1
  %350 = bitcast %"class.v8::internal::compiler::Node"*** %349 to i64*
  %351 = ptrtoint %"class.v8::internal::compiler::Node"** %346 to i64
  store i64 %351, i64* %350, align 8
  %352 = bitcast %"class.v8::internal::compiler::Node"** %346 to i8*
  call void @_ZdlPv(i8* %352) #11
  br label %353

353:                                              ; preds = %327, %348
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %304) #9
  br label %438

354:                                              ; preds = %315, %430
  %355 = phi i32 [ 0, %315 ], [ %431, %430 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %316) #9
  %356 = load i64, i64* %173, align 8
  store i64 %356, i64* %317, align 8
  %357 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler20EscapeAnalysisResult21GetVirtualObjectFieldEPKNS1_13VirtualObjectEiPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisResult"* nonnull %9, %"class.v8::internal::compiler::VirtualObject"* nonnull %227, i32 %355, %"class.v8::internal::compiler::Node"* %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %316) #9
  %358 = icmp eq %"class.v8::internal::compiler::Node"* %357, null
  br i1 %358, label %359, label %360, !prof !8

359:                                              ; preds = %354
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #10
  unreachable

360:                                              ; preds = %354
  %361 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %318, align 8
  %362 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %361, i64 0, i32 0, i32 4
  %363 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %362, align 8
  %364 = icmp eq %"class.v8::internal::compiler::Node"* %363, null
  br i1 %364, label %365, label %372

365:                                              ; preds = %360
  %366 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %361, i64 0, i32 0, i32 0
  %367 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %366, align 8
  %368 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %361, i64 0, i32 0, i32 1
  %369 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %368, align 8
  %370 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %369) #9
  %371 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %367, %"class.v8::internal::compiler::Operator"* %370, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #9
  store %"class.v8::internal::compiler::Node"* %371, %"class.v8::internal::compiler::Node"** %362, align 8
  br label %372

372:                                              ; preds = %360, %365
  %373 = phi %"class.v8::internal::compiler::Node"* [ %371, %365 ], [ %363, %360 ]
  %374 = icmp eq %"class.v8::internal::compiler::Node"* %357, %373
  br i1 %374, label %430, label %375

375:                                              ; preds = %372
  %376 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler21EscapeAnalysisReducer16ReduceDeoptStateEPNS1_4NodeES4_PNS1_12DeduplicatorE(%"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, %"class.v8::internal::compiler::Node"* nonnull %357, %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Deduplicator"* %3)
  %377 = ptrtoint %"class.v8::internal::compiler::Node"* %376 to i64
  %378 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %319, align 8
  %379 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %320, align 8
  %380 = icmp ult %"class.v8::internal::compiler::Node"** %378, %379
  %381 = ptrtoint %"class.v8::internal::compiler::Node"** %379 to i64
  br i1 %380, label %382, label %386

382:                                              ; preds = %375
  %383 = bitcast %"class.v8::internal::compiler::Node"** %378 to i64*
  store i64 %377, i64* %383, align 8
  %384 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %378, i64 1
  %385 = ptrtoint %"class.v8::internal::compiler::Node"** %384 to i64
  store i64 %385, i64* %321, align 8
  br label %430

386:                                              ; preds = %375
  %387 = ptrtoint %"class.v8::internal::compiler::Node"** %378 to i64
  %388 = load i64, i64* %322, align 8
  %389 = sub i64 %387, %388
  %390 = ashr exact i64 %389, 3
  %391 = add nsw i64 %390, 1
  %392 = icmp ugt i64 %391, 2305843009213693951
  br i1 %392, label %393, label %395

393:                                              ; preds = %386
  %394 = bitcast %"class.std::__1::vector.713"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %394) #10
  unreachable

395:                                              ; preds = %386
  %396 = sub i64 %381, %388
  %397 = ashr exact i64 %396, 3
  %398 = icmp ult i64 %397, 1152921504606846975
  br i1 %398, label %399, label %407

399:                                              ; preds = %395
  %400 = ashr exact i64 %396, 2
  %401 = icmp ult i64 %400, %391
  %402 = select i1 %401, i64 %391, i64 %400
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %412, label %404

404:                                              ; preds = %399
  %405 = icmp ugt i64 %402, 2305843009213693951
  br i1 %405, label %406, label %407

406:                                              ; preds = %404
  call void @abort() #10
  unreachable

407:                                              ; preds = %404, %395
  %408 = phi i64 [ %402, %404 ], [ 2305843009213693951, %395 ]
  %409 = shl i64 %408, 3
  %410 = call i8* @_Znwm(i64 %409) #11
  %411 = bitcast i8* %410 to %"class.v8::internal::compiler::Node"**
  br label %412

412:                                              ; preds = %407, %399
  %413 = phi i64 [ %408, %407 ], [ 0, %399 ]
  %414 = phi i8* [ %410, %407 ], [ null, %399 ]
  %415 = phi %"class.v8::internal::compiler::Node"** [ %411, %407 ], [ null, %399 ]
  %416 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %415, i64 %390
  %417 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %415, i64 %413
  %418 = ptrtoint %"class.v8::internal::compiler::Node"** %417 to i64
  %419 = bitcast %"class.v8::internal::compiler::Node"** %416 to i64*
  store i64 %377, i64* %419, align 8
  %420 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %416, i64 1
  %421 = ptrtoint %"class.v8::internal::compiler::Node"** %420 to i64
  %422 = ptrtoint %"class.v8::internal::compiler::Node"** %415 to i64
  %423 = icmp sgt i64 %389, 0
  br i1 %423, label %424, label %426

424:                                              ; preds = %412
  %425 = inttoptr i64 %388 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %414, i8* align 8 %425, i64 %389, i1 false) #9
  br label %426

426:                                              ; preds = %424, %412
  store i64 %422, i64* %322, align 8
  store i64 %421, i64* %321, align 8
  store i64 %418, i64* %323, align 8
  %427 = icmp eq i64 %388, 0
  br i1 %427, label %430, label %428

428:                                              ; preds = %426
  %429 = inttoptr i64 %388 to i8*
  call void @_ZdlPv(i8* %429) #11
  br label %430

430:                                              ; preds = %428, %426, %382, %372
  %431 = add nuw nsw i32 %355, 4
  %432 = load i64, i64* %307, align 8
  %433 = load i64, i64* %309, align 8
  %434 = sub i64 %432, %433
  %435 = trunc i64 %434 to i32
  %436 = and i32 %435, -4
  %437 = icmp slt i32 %431, %436
  br i1 %437, label %354, label %324

438:                                              ; preds = %229, %299, %353, %225, %116, %25
  %439 = phi %"class.v8::internal::compiler::Node"* [ %26, %25 ], [ %117, %116 ], [ %302, %299 ], [ %345, %353 ], [ %1, %229 ], [ %1, %225 ]
  ret %"class.v8::internal::compiler::Node"* %439
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13NodeHashCache11Constructor3GetEv(%"class.v8::internal::compiler::NodeHashCache::Constructor"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::compiler::Node"*, align 8
  %3 = alloca %"class.v8::internal::compiler::Node"*, align 8
  %4 = alloca %"class.v8::internal::compiler::Node"*, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %0, i64 0, i32 2
  %6 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"* %6, null
  %8 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::NodeHashCache"*, %"class.v8::internal::compiler::NodeHashCache"** %8, align 8
  br i1 %7, label %10, label %27

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %0, i64 0, i32 1
  %12 = bitcast %"class.v8::internal::compiler::Node"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::compiler::Node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = bitcast %"class.v8::internal::compiler::Node"** %4 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %9, i64 0, i32 1, i32 0, i32 0
  %17 = call %"struct.std::__1::__hash_node_base.678"* @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.674"* %16, %"class.v8::internal::compiler::Node"** nonnull dereferenceable(8) %4) #9
  %18 = icmp eq %"struct.std::__1::__hash_node_base.678"* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  br label %25

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %17, i64 2
  %22 = bitcast %"struct.std::__1::__hash_node_base.678"* %21 to %"class.v8::internal::compiler::Node"**
  %23 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  %24 = icmp eq %"class.v8::internal::compiler::Node"* %23, null
  br i1 %24, label %25, label %287

25:                                               ; preds = %19, %20
  %26 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %11, align 8
  br label %287

27:                                               ; preds = %1
  %28 = bitcast %"class.v8::internal::compiler::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  store %"class.v8::internal::compiler::Node"* %6, %"class.v8::internal::compiler::Node"** %3, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %9, i64 0, i32 1, i32 0, i32 0
  %30 = call %"struct.std::__1::__hash_node_base.678"* @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.674"* %29, %"class.v8::internal::compiler::Node"** nonnull dereferenceable(8) %3) #9
  %31 = icmp eq %"struct.std::__1::__hash_node_base.678"* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  br label %281

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %30, i64 2
  %35 = bitcast %"struct.std::__1::__hash_node_base.678"* %34 to %"class.v8::internal::compiler::Node"**
  %36 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  %37 = icmp eq %"class.v8::internal::compiler::Node"* %36, null
  br i1 %37, label %281, label %38

38:                                               ; preds = %33
  %39 = load %"class.v8::internal::compiler::NodeHashCache"*, %"class.v8::internal::compiler::NodeHashCache"** %8, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %39, i64 0, i32 2, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %39, i64 0, i32 2, i32 0, i32 0, i32 1
  %42 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %39, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %44 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %43, align 8
  %45 = icmp eq %"class.v8::internal::compiler::Node"** %42, %44
  %46 = ptrtoint %"class.v8::internal::compiler::Node"** %44 to i64
  br i1 %45, label %54, label %47

47:                                               ; preds = %38
  %48 = bitcast %"class.v8::internal::compiler::Node"** %5 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.v8::internal::compiler::Node"** %42 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %42, i64 1
  %52 = ptrtoint %"class.v8::internal::compiler::Node"** %51 to i64
  %53 = bitcast %"class.v8::internal::compiler::Node"*** %41 to i64*
  store i64 %52, i64* %53, align 8
  br label %287

54:                                               ; preds = %38
  %55 = ptrtoint %"class.v8::internal::compiler::Node"** %42 to i64
  %56 = bitcast %"class.v8::internal::compiler::Node"*** %41 to i64*
  %57 = bitcast %"class.std::__1::vector.667"* %40 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %55, %58
  %60 = ashr exact i64 %59, 3
  %61 = add nsw i64 %60, 1
  %62 = icmp ugt i64 %61, 268435455
  br i1 %62, label %63, label %65

63:                                               ; preds = %54
  %64 = bitcast %"class.std::__1::vector.667"* %40 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %64) #10
  unreachable

65:                                               ; preds = %54
  %66 = bitcast %"class.v8::internal::compiler::Node"*** %43 to i64*
  %67 = sub i64 %46, %58
  %68 = ashr exact i64 %67, 3
  %69 = icmp ult i64 %68, 134217727
  br i1 %69, label %70, label %75

70:                                               ; preds = %65
  %71 = ashr exact i64 %67, 2
  %72 = icmp ult i64 %71, %61
  %73 = select i1 %72, i64 %61, i64 %71
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %93, label %75

75:                                               ; preds = %70, %65
  %76 = phi i64 [ %73, %70 ], [ 268435455, %65 ]
  %77 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %39, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %78 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %77, align 8
  %79 = shl i64 %76, 3
  %80 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %78, i64 0, i32 2
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %78, i64 0, i32 3
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %83, %81
  %85 = icmp ugt i64 %79, %84
  br i1 %85, label %86, label %88, !prof !8

86:                                               ; preds = %75
  %87 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %78, i64 %79) #9
  br label %90

88:                                               ; preds = %75
  %89 = add i64 %81, %79
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %88, %86
  %91 = phi i64 [ %87, %86 ], [ %81, %88 ]
  %92 = inttoptr i64 %91 to %"class.v8::internal::compiler::Node"**
  br label %93

93:                                               ; preds = %90, %70
  %94 = phi i64 [ %76, %90 ], [ 0, %70 ]
  %95 = phi %"class.v8::internal::compiler::Node"** [ %92, %90 ], [ null, %70 ]
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, i64 %60
  %97 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, i64 %94
  %98 = ptrtoint %"class.v8::internal::compiler::Node"** %97 to i64
  %99 = bitcast %"class.v8::internal::compiler::Node"** %5 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.v8::internal::compiler::Node"** %96 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %96, i64 1
  %103 = ptrtoint %"class.v8::internal::compiler::Node"** %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %40, i64 0, i32 0, i32 0
  %105 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %104, align 8
  %106 = ptrtoint %"class.v8::internal::compiler::Node"** %105 to i64
  %107 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %41, align 8
  %108 = icmp eq %"class.v8::internal::compiler::Node"** %107, %105
  br i1 %108, label %278, label %109

109:                                              ; preds = %93
  %110 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 -1
  %111 = ptrtoint %"class.v8::internal::compiler::Node"** %110 to i64
  %112 = sub i64 %111, %106
  %113 = lshr i64 %112, 3
  %114 = add nuw nsw i64 %113, 1
  %115 = icmp ult i64 %114, 4
  br i1 %115, label %208, label %116

116:                                              ; preds = %109
  %117 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 -1
  %118 = ptrtoint %"class.v8::internal::compiler::Node"** %117 to i64
  %119 = sub i64 %118, %106
  %120 = lshr i64 %119, 3
  %121 = xor i64 %120, -1
  %122 = add nsw i64 %60, %121
  %123 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, i64 %122
  %124 = xor i64 %120, -1
  %125 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 %124
  %126 = icmp ult %"class.v8::internal::compiler::Node"** %123, %107
  %127 = icmp ult %"class.v8::internal::compiler::Node"** %125, %96
  %128 = and i1 %126, %127
  br i1 %128, label %208, label %129

129:                                              ; preds = %116
  %130 = and i64 %114, 4611686018427387900
  %131 = sub nsw i64 0, %130
  %132 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %96, i64 %131
  %133 = sub nsw i64 0, %130
  %134 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 %133
  %135 = add nsw i64 %130, -4
  %136 = lshr exact i64 %135, 2
  %137 = add nuw nsw i64 %136, 1
  %138 = and i64 %137, 1
  %139 = icmp eq i64 %135, 0
  br i1 %139, label %186, label %140

140:                                              ; preds = %129
  %141 = sub nuw nsw i64 %137, %138
  %142 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %96, i64 -1
  %143 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 -1
  %144 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %96, i64 -1
  %145 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 -1
  br label %146

146:                                              ; preds = %146, %140
  %147 = phi i64 [ 0, %140 ], [ %181, %146 ]
  %148 = phi i64 [ %141, %140 ], [ %182, %146 ]
  %149 = sub i64 0, %147
  %150 = sub i64 0, %147
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %142, i64 %149
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, i64 %150
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, i64 -1
  %154 = bitcast %"class.v8::internal::compiler::Node"** %153 to <2 x i64>*
  %155 = load <2 x i64>, <2 x i64>* %154, align 8, !alias.scope !9
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, i64 -2
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %156, i64 -1
  %158 = bitcast %"class.v8::internal::compiler::Node"** %157 to <2 x i64>*
  %159 = load <2 x i64>, <2 x i64>* %158, align 8, !alias.scope !9
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %151, i64 -1
  %161 = bitcast %"class.v8::internal::compiler::Node"** %160 to <2 x i64>*
  store <2 x i64> %155, <2 x i64>* %161, align 8, !alias.scope !12, !noalias !9
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %151, i64 -2
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 -1
  %164 = bitcast %"class.v8::internal::compiler::Node"** %163 to <2 x i64>*
  store <2 x i64> %159, <2 x i64>* %164, align 8, !alias.scope !12, !noalias !9
  %165 = sub nuw nsw i64 -4, %147
  %166 = sub nuw nsw i64 -4, %147
  %167 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %144, i64 %165
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, i64 %166
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -1
  %170 = bitcast %"class.v8::internal::compiler::Node"** %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !9
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -2
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %172, i64 -1
  %174 = bitcast %"class.v8::internal::compiler::Node"** %173 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 8, !alias.scope !9
  %176 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %167, i64 -1
  %177 = bitcast %"class.v8::internal::compiler::Node"** %176 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %177, align 8, !alias.scope !12, !noalias !9
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %167, i64 -2
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %178, i64 -1
  %180 = bitcast %"class.v8::internal::compiler::Node"** %179 to <2 x i64>*
  store <2 x i64> %175, <2 x i64>* %180, align 8, !alias.scope !12, !noalias !9
  %181 = add i64 %147, 8
  %182 = add i64 %148, -2
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %146, !llvm.loop !14

184:                                              ; preds = %146
  %185 = sub nuw nsw i64 -8, %147
  br label %186

186:                                              ; preds = %184, %129
  %187 = phi i64 [ 0, %129 ], [ %185, %184 ]
  %188 = icmp eq i64 %138, 0
  br i1 %188, label %206, label %189

189:                                              ; preds = %186
  %190 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %96, i64 -1
  %191 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 -1
  %192 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %190, i64 %187
  %193 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %191, i64 %187
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::Node"** %194 to <2 x i64>*
  %196 = load <2 x i64>, <2 x i64>* %195, align 8, !alias.scope !9
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %193, i64 -2
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to <2 x i64>*
  %200 = load <2 x i64>, <2 x i64>* %199, align 8, !alias.scope !9
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %192, i64 -1
  %202 = bitcast %"class.v8::internal::compiler::Node"** %201 to <2 x i64>*
  store <2 x i64> %196, <2 x i64>* %202, align 8, !alias.scope !12, !noalias !9
  %203 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %192, i64 -2
  %204 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %203, i64 -1
  %205 = bitcast %"class.v8::internal::compiler::Node"** %204 to <2 x i64>*
  store <2 x i64> %200, <2 x i64>* %205, align 8, !alias.scope !12, !noalias !9
  br label %206

206:                                              ; preds = %186, %189
  %207 = icmp eq i64 %114, %130
  br i1 %207, label %278, label %208

208:                                              ; preds = %206, %116, %109
  %209 = phi %"class.v8::internal::compiler::Node"** [ %96, %116 ], [ %96, %109 ], [ %132, %206 ]
  %210 = phi %"class.v8::internal::compiler::Node"** [ %107, %116 ], [ %107, %109 ], [ %134, %206 ]
  %211 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 -1
  %212 = ptrtoint %"class.v8::internal::compiler::Node"** %211 to i64
  %213 = sub i64 %212, %106
  %214 = lshr i64 %213, 3
  %215 = add nuw nsw i64 %214, 1
  %216 = and i64 %215, 7
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %229, label %218

218:                                              ; preds = %208, %218
  %219 = phi %"class.v8::internal::compiler::Node"** [ %222, %218 ], [ %209, %208 ]
  %220 = phi %"class.v8::internal::compiler::Node"** [ %223, %218 ], [ %210, %208 ]
  %221 = phi i64 [ %227, %218 ], [ %216, %208 ]
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %219, i64 -1
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %220, i64 -1
  %224 = bitcast %"class.v8::internal::compiler::Node"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.v8::internal::compiler::Node"** %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = add i64 %221, -1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %218, !llvm.loop !16

229:                                              ; preds = %218, %208
  %230 = phi %"class.v8::internal::compiler::Node"** [ undef, %208 ], [ %222, %218 ]
  %231 = phi %"class.v8::internal::compiler::Node"** [ %209, %208 ], [ %222, %218 ]
  %232 = phi %"class.v8::internal::compiler::Node"** [ %210, %208 ], [ %223, %218 ]
  %233 = icmp ult i64 %213, 56
  br i1 %233, label %278, label %234

234:                                              ; preds = %229, %234
  %235 = phi %"class.v8::internal::compiler::Node"** [ %272, %234 ], [ %231, %229 ]
  %236 = phi %"class.v8::internal::compiler::Node"** [ %273, %234 ], [ %232, %229 ]
  %237 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %235, i64 -1
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %236, i64 -1
  %239 = bitcast %"class.v8::internal::compiler::Node"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.v8::internal::compiler::Node"** %237 to i64*
  store i64 %240, i64* %241, align 8
  %242 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %235, i64 -2
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %236, i64 -2
  %244 = bitcast %"class.v8::internal::compiler::Node"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %"class.v8::internal::compiler::Node"** %242 to i64*
  store i64 %245, i64* %246, align 8
  %247 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %235, i64 -3
  %248 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %236, i64 -3
  %249 = bitcast %"class.v8::internal::compiler::Node"** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.v8::internal::compiler::Node"** %247 to i64*
  store i64 %250, i64* %251, align 8
  %252 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %235, i64 -4
  %253 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %236, i64 -4
  %254 = bitcast %"class.v8::internal::compiler::Node"** %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %"class.v8::internal::compiler::Node"** %252 to i64*
  store i64 %255, i64* %256, align 8
  %257 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %235, i64 -5
  %258 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %236, i64 -5
  %259 = bitcast %"class.v8::internal::compiler::Node"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.v8::internal::compiler::Node"** %257 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %235, i64 -6
  %263 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %236, i64 -6
  %264 = bitcast %"class.v8::internal::compiler::Node"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = bitcast %"class.v8::internal::compiler::Node"** %262 to i64*
  store i64 %265, i64* %266, align 8
  %267 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %235, i64 -7
  %268 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %236, i64 -7
  %269 = bitcast %"class.v8::internal::compiler::Node"** %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast %"class.v8::internal::compiler::Node"** %267 to i64*
  store i64 %270, i64* %271, align 8
  %272 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %235, i64 -8
  %273 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %236, i64 -8
  %274 = bitcast %"class.v8::internal::compiler::Node"** %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = bitcast %"class.v8::internal::compiler::Node"** %272 to i64*
  store i64 %275, i64* %276, align 8
  %277 = icmp eq %"class.v8::internal::compiler::Node"** %273, %105
  br i1 %277, label %278, label %234, !llvm.loop !18

278:                                              ; preds = %229, %234, %206, %93
  %279 = phi %"class.v8::internal::compiler::Node"** [ %96, %93 ], [ %132, %206 ], [ %230, %229 ], [ %272, %234 ]
  %280 = ptrtoint %"class.v8::internal::compiler::Node"** %279 to i64
  store i64 %280, i64* %57, align 8
  store i64 %103, i64* %56, align 8
  store i64 %98, i64* %66, align 8
  br label %287

281:                                              ; preds = %32, %33
  %282 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %5, align 8
  %283 = load %"class.v8::internal::compiler::NodeHashCache"*, %"class.v8::internal::compiler::NodeHashCache"** %8, align 8
  %284 = bitcast %"class.v8::internal::compiler::Node"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %284)
  store %"class.v8::internal::compiler::Node"* %282, %"class.v8::internal::compiler::Node"** %2, align 8
  %285 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %283, i64 0, i32 1, i32 0, i32 0
  %286 = call { %"struct.std::__1::__hash_node_base.678"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.674"* %285, %"class.v8::internal::compiler::Node"** nonnull dereferenceable(8) %2, %"class.v8::internal::compiler::Node"** nonnull dereferenceable(8) %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %284)
  br label %287

287:                                              ; preds = %278, %47, %20, %281, %25
  %288 = phi %"class.v8::internal::compiler::Node"* [ %282, %281 ], [ %23, %20 ], [ %26, %25 ], [ %36, %47 ], [ %36, %278 ]
  %289 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %0, i64 0, i32 1
  %290 = bitcast %"class.v8::internal::compiler::Node"** %289 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %290, i8 0, i64 16, i1 false)
  ret %"class.v8::internal::compiler::Node"* %288
}

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler20EscapeAnalysisResult21GetVirtualObjectFieldEPKNS1_13VirtualObjectEiPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisResult"*, %"class.v8::internal::compiler::VirtualObject"*, i32, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder11ObjectStateEji(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler21EscapeAnalysisReducer17VerifyReplacementEv(%"class.v8::internal::compiler::EscapeAnalysisReducer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::compiler::AllNodes", align 8
  %3 = alloca %"class.v8::internal::compiler::EscapeAnalysisResult", align 8
  %4 = bitcast %"class.v8::internal::compiler::AllNodes"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 6
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %9, align 8
  call void @_ZN2v88internal8compiler8AllNodesC1EPNS0_4ZoneEPKNS1_5GraphEb(%"class.v8::internal::compiler::AllNodes"* nonnull %2, %"class.v8::internal::Zone"* %6, %"class.v8::internal::compiler::Graph"* %10, i1 zeroext true) #9
  %11 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, align 8
  %15 = icmp eq %"class.v8::internal::compiler::Node"** %12, %14
  br i1 %15, label %23, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.v8::internal::compiler::EscapeAnalysisResult"* %3 to i8*
  %18 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 2, i32 0
  %19 = bitcast %"class.v8::internal::compiler::EscapeAnalysisTracker"** %18 to i64*
  %20 = bitcast %"class.v8::internal::compiler::EscapeAnalysisResult"* %3 to i64*
  br label %30

21:                                               ; preds = %54
  %22 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, align 8
  br label %23

23:                                               ; preds = %21, %1
  %24 = phi %"class.v8::internal::compiler::Node"** [ %22, %21 ], [ %12, %1 ]
  %25 = icmp eq %"class.v8::internal::compiler::Node"** %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = ptrtoint %"class.v8::internal::compiler::Node"** %24 to i64
  %28 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i64*
  store i64 %27, i64* %28, align 8
  br label %29

29:                                               ; preds = %23, %26
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #9
  ret void

30:                                               ; preds = %16, %54
  %31 = phi %"class.v8::internal::compiler::Node"** [ %12, %16 ], [ %55, %54 ]
  %32 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 0
  %34 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %34, i64 0, i32 2
  %36 = load i16, i16* %35, align 8
  %37 = icmp eq i16 %36, 197
  br i1 %37, label %38, label %54

38:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %39 = load i64, i64* %19, align 8
  store i64 %39, i64* %20, align 8
  %40 = call %"class.v8::internal::compiler::VirtualObject"* @_ZN2v88internal8compiler20EscapeAnalysisResult16GetVirtualObjectEPNS1_4NodeE(%"class.v8::internal::compiler::EscapeAnalysisResult"* nonnull %3, %"class.v8::internal::compiler::Node"* %32) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %41 = icmp eq %"class.v8::internal::compiler::VirtualObject"* %40, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.v8::internal::compiler::VirtualObject", %"class.v8::internal::compiler::VirtualObject"* %40, i64 0, i32 1
  %44 = load i8, i8* %43, align 8, !range !3
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %54

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 0
  %48 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %48, i64 0, i32 1
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 16777215
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i8* %50, i32 %53) #10
  unreachable

54:                                               ; preds = %42, %38, %30
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, i64 1
  %56 = icmp eq %"class.v8::internal::compiler::Node"** %55, %14
  br i1 %56, label %21, label %30
}

declare void @_ZN2v88internal8compiler8AllNodesC1EPNS0_4ZoneEPKNS1_5GraphEb(%"class.v8::internal::compiler::AllNodes"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Graph"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21EscapeAnalysisReducer8FinalizeEv(%"class.v8::internal::compiler::EscapeAnalysisReducer"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.std::__1::array.744", align 8
  %3 = alloca %"struct.std::__1::array.744", align 8
  %4 = alloca %"class.v8::internal::ZoneVector.666", align 8
  %5 = alloca %"class.v8::internal::compiler::Node::UseEdges", align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = icmp eq %"class.std::__1::__tree_end_node"* %7, %8
  br i1 %9, label %34, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 1
  %12 = bitcast %"class.v8::internal::ZoneVector.666"* %4 to i8*
  %13 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 6
  %14 = bitcast %"class.v8::internal::Zone"** %13 to i64*
  %15 = getelementptr inbounds %"class.v8::internal::ZoneVector.666", %"class.v8::internal::ZoneVector.666"* %4, i64 0, i32 0, i32 0, i32 2, i32 1
  %16 = bitcast %"struct.std::__1::__compressed_pair_elem.671"* %15 to i64*
  %17 = bitcast %"class.v8::internal::compiler::Node::UseEdges"* %5 to i8*
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node::UseEdges", %"class.v8::internal::compiler::Node::UseEdges"* %5, i64 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::ZoneVector.666", %"class.v8::internal::ZoneVector.666"* %4, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.v8::internal::ZoneVector.666", %"class.v8::internal::ZoneVector.666"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.v8::internal::compiler::Node"*** %19 to i64*
  %22 = bitcast %"class.v8::internal::ZoneVector.666"* %4 to i64*
  %23 = bitcast %"class.v8::internal::compiler::Node"*** %20 to i64*
  %24 = getelementptr inbounds %"class.v8::internal::ZoneVector.666", %"class.v8::internal::ZoneVector.666"* %4, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::ZoneVector.666", %"class.v8::internal::ZoneVector.666"* %4, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 0, i32 1
  %27 = bitcast %"struct.std::__1::array.744"* %2 to i8*
  %28 = getelementptr inbounds %"struct.std::__1::array.744", %"struct.std::__1::array.744"* %2, i64 0, i32 0, i64 0
  %29 = bitcast %"struct.std::__1::array.744"* %2 to i64*
  %30 = getelementptr inbounds %"struct.std::__1::array.744", %"struct.std::__1::array.744"* %2, i64 0, i32 0, i64 1
  %31 = bitcast %"struct.std::__1::array.744"* %3 to i8*
  %32 = getelementptr inbounds %"struct.std::__1::array.744", %"struct.std::__1::array.744"* %3, i64 0, i32 0, i64 0
  %33 = getelementptr inbounds %"struct.std::__1::array.744", %"struct.std::__1::array.744"* %3, i64 0, i32 0, i64 1
  br label %35

34:                                               ; preds = %811, %1
  ret void

35:                                               ; preds = %10, %811
  %36 = phi %"class.std::__1::__tree_end_node"* [ %7, %10 ], [ %812, %811 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 4
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.v8::internal::compiler::Node"**
  %39 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %39, i64 0, i32 0
  %41 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %40, align 8
  %42 = call dereferenceable(8) %"class.v8::internal::compiler::NewArgumentsElementsParameters"* @_ZN2v88internal8compiler32NewArgumentsElementsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %41) #9
  %43 = getelementptr inbounds %"class.v8::internal::compiler::NewArgumentsElementsParameters", %"class.v8::internal::compiler::NewArgumentsElementsParameters"* %42, i64 0, i32 0
  %44 = load i8, i8* %43, align 4
  %45 = icmp ne i8 %44, 0
  %46 = getelementptr inbounds %"class.v8::internal::compiler::NewArgumentsElementsParameters", %"class.v8::internal::compiler::NewArgumentsElementsParameters"* %42, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %40, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %48, i64 0, i32 5
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %53, label %52, !prof !4

52:                                               ; preds = %35
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #10
  unreachable

53:                                               ; preds = %35
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %39, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 251658240
  %57 = icmp eq i32 %56, 251658240
  %58 = ptrtoint %"class.v8::internal::compiler::Node"* %39 to i64
  %59 = add i64 %58, 32
  br i1 %57, label %60, label %64

60:                                               ; preds = %53
  %61 = inttoptr i64 %59 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 16
  br label %64

64:                                               ; preds = %53, %60
  %65 = phi i64 [ %63, %60 ], [ %59, %53 ]
  %66 = inttoptr i64 %65 to %"class.v8::internal::compiler::Node"**
  %67 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %67, i64 0, i32 0
  %69 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %69, i64 0, i32 2
  %71 = load i16, i16* %70, align 8
  %72 = icmp eq i16 %71, 199
  br i1 %72, label %73, label %783

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %67, i64 0, i32 4
  %75 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %74, align 8
  %76 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %75, null
  br i1 %76, label %77, label %85

77:                                               ; preds = %135, %73
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #9
  %78 = load i64, i64* %14, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #9
  store i64 %78, i64* %16, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %39, i64 0, i32 4
  %80 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %79, align 8
  %81 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %80, null
  br i1 %81, label %637, label %82

82:                                               ; preds = %77
  %83 = icmp eq i32 %47, 0
  %84 = or i1 %45, %83
  br label %138

85:                                               ; preds = %73, %135
  %86 = phi %"class.v8::internal::compiler::Node"* [ %136, %135 ], [ null, %73 ]
  %87 = phi %"struct.v8::internal::compiler::Node::Use"* [ %89, %135 ], [ %75, %73 ]
  %88 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %87, i64 0, i32 0
  %89 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %88, align 8
  %90 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %87, i64 0, i32 2
  %91 = load i32, i32* %90, align 8
  %92 = lshr i32 %91, 1
  %93 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %87, i64 1
  %94 = zext i32 %92 to i64
  %95 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %93, i64 %94
  %96 = and i32 %91, 1
  %97 = icmp eq i32 %96, 0
  %98 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %95 to i64
  %99 = select i1 %97, i64 16, i64 32
  %100 = add i64 %99, %98
  %101 = inttoptr i64 %100 to %"class.v8::internal::compiler::Node"**
  %102 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %101, i64 %94
  br i1 %97, label %105, label %103

103:                                              ; preds = %85
  %104 = bitcast %"struct.v8::internal::compiler::Node::Use"* %95 to %"class.v8::internal::compiler::Node"*
  br label %108

105:                                              ; preds = %85
  %106 = bitcast %"struct.v8::internal::compiler::Node::Use"* %95 to %"class.v8::internal::compiler::Node"**
  %107 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %106, align 8
  br label %108

108:                                              ; preds = %103, %105
  %109 = phi %"class.v8::internal::compiler::Node"* [ %104, %103 ], [ %107, %105 ]
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %109, i64 0, i32 0
  %111 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %111, i64 0, i32 2
  %113 = load i16, i16* %112, align 8
  switch i16 %113, label %135 [
    i16 46, label %114
    i16 48, label %114
    i16 42, label %114
    i16 43, label %114
  ]

114:                                              ; preds = %108, %108, %108, %108
  %115 = icmp eq %"class.v8::internal::compiler::Node"* %86, null
  br i1 %115, label %116, label %125

116:                                              ; preds = %114
  %117 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %11, align 8
  %118 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %117, i64 0, i32 0, i32 0
  %119 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %117, i64 0, i32 0, i32 1
  %121 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %120, align 8
  %122 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder20ArgumentsLengthStateEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %121) #9
  %123 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %119, %"class.v8::internal::compiler::Operator"* %122, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #9
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %123, i64 0, i32 1, i32 0
  store i64 16777217, i64* %124, align 8
  br label %125

125:                                              ; preds = %114, %116
  %126 = phi %"class.v8::internal::compiler::Node"* [ %86, %114 ], [ %123, %116 ]
  %127 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %102, align 8
  %128 = icmp eq %"class.v8::internal::compiler::Node"* %127, %126
  br i1 %128, label %135, label %129

129:                                              ; preds = %125
  %130 = icmp eq %"class.v8::internal::compiler::Node"* %127, null
  br i1 %130, label %132, label %131

131:                                              ; preds = %129
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %127, %"struct.v8::internal::compiler::Node::Use"* nonnull %87) #9
  br label %132

132:                                              ; preds = %131, %129
  store %"class.v8::internal::compiler::Node"* %126, %"class.v8::internal::compiler::Node"** %102, align 8
  %133 = icmp eq %"class.v8::internal::compiler::Node"* %126, null
  br i1 %133, label %135, label %134

134:                                              ; preds = %132
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %126, %"struct.v8::internal::compiler::Node::Use"* nonnull %87) #9
  br label %135

135:                                              ; preds = %134, %132, %125, %108
  %136 = phi %"class.v8::internal::compiler::Node"* [ %86, %108 ], [ %126, %125 ], [ null, %132 ], [ %126, %134 ]
  %137 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %89, null
  br i1 %137, label %77, label %85

138:                                              ; preds = %634, %82
  %139 = phi %"class.v8::internal::compiler::Node"** [ null, %82 ], [ %635, %634 ]
  %140 = phi %"struct.v8::internal::compiler::Node::Use"* [ %80, %82 ], [ %142, %634 ]
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %140, i64 0, i32 0
  %142 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %141, align 8
  %143 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %140, i64 0, i32 2
  %144 = load i32, i32* %143, align 8
  %145 = lshr i32 %144, 1
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %140, i64 1
  %147 = zext i32 %145 to i64
  %148 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %146, i64 %147
  %149 = and i32 %144, 1
  %150 = icmp eq i32 %149, 0
  %151 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %148 to i64
  %152 = select i1 %150, i64 16, i64 32
  %153 = add i64 %152, %151
  %154 = inttoptr i64 %153 to %"class.v8::internal::compiler::Node"**
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %154, i64 %147
  br i1 %150, label %158, label %156

156:                                              ; preds = %138
  %157 = bitcast %"struct.v8::internal::compiler::Node::Use"* %148 to %"class.v8::internal::compiler::Node"*
  br label %161

158:                                              ; preds = %138
  %159 = bitcast %"struct.v8::internal::compiler::Node::Use"* %148 to %"class.v8::internal::compiler::Node"**
  %160 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %159, align 8
  br label %161

161:                                              ; preds = %156, %158
  %162 = phi %"class.v8::internal::compiler::Node"* [ %157, %156 ], [ %160, %158 ]
  %163 = ptrtoint %"class.v8::internal::compiler::Node"* %162 to i64
  %164 = call zeroext i1 @_ZN2v88internal8compiler14NodeProperties11IsValueEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %140, %"class.v8::internal::compiler::Node"** %155) #9
  br i1 %164, label %165, label %634

165:                                              ; preds = %161
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  store %"class.v8::internal::compiler::Node"* %162, %"class.v8::internal::compiler::Node"** %18, align 8
  %166 = call zeroext i1 @_ZNK2v88internal8compiler4Node8UseEdges5emptyEv(%"class.v8::internal::compiler::Node::UseEdges"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br i1 %166, label %634, label %167

167:                                              ; preds = %165
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %162, i64 0, i32 0
  %169 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %168, align 8
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %169, i64 0, i32 2
  %171 = load i16, i16* %170, align 8
  switch i16 %171, label %775 [
    i16 42, label %634
    i16 43, label %634
    i16 46, label %634
    i16 48, label %634
    i16 229, label %172
    i16 230, label %399
  ]

172:                                              ; preds = %167
  br i1 %84, label %173, label %775

173:                                              ; preds = %172
  %174 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %20, align 8
  %175 = icmp eq %"class.v8::internal::compiler::Node"** %139, %174
  br i1 %175, label %180, label %176

176:                                              ; preds = %173
  %177 = bitcast %"class.v8::internal::compiler::Node"** %139 to i64*
  store i64 %163, i64* %177, align 8
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %139, i64 1
  %179 = ptrtoint %"class.v8::internal::compiler::Node"** %178 to i64
  store i64 %179, i64* %21, align 8
  br label %634

180:                                              ; preds = %173
  %181 = ptrtoint %"class.v8::internal::compiler::Node"** %174 to i64
  %182 = load i64, i64* %22, align 8
  %183 = sub i64 %181, %182
  %184 = ashr exact i64 %183, 3
  %185 = add nsw i64 %184, 1
  %186 = icmp ugt i64 %185, 268435455
  br i1 %186, label %187, label %189

187:                                              ; preds = %180
  %188 = bitcast %"class.v8::internal::ZoneVector.666"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %188) #10
  unreachable

189:                                              ; preds = %180
  %190 = icmp ult i64 %184, 134217727
  br i1 %190, label %191, label %196

191:                                              ; preds = %189
  %192 = ashr exact i64 %183, 2
  %193 = icmp ult i64 %192, %185
  %194 = select i1 %193, i64 %185, i64 %192
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %213, label %196

196:                                              ; preds = %191, %189
  %197 = phi i64 [ %194, %191 ], [ 268435455, %189 ]
  %198 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %24, align 8
  %199 = shl i64 %197, 3
  %200 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %198, i64 0, i32 2
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %198, i64 0, i32 3
  %203 = load i64, i64* %202, align 8
  %204 = sub i64 %203, %201
  %205 = icmp ugt i64 %199, %204
  br i1 %205, label %206, label %208, !prof !8

206:                                              ; preds = %196
  %207 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %198, i64 %199) #9
  br label %210

208:                                              ; preds = %196
  %209 = add i64 %201, %199
  store i64 %209, i64* %200, align 8
  br label %210

210:                                              ; preds = %208, %206
  %211 = phi i64 [ %207, %206 ], [ %201, %208 ]
  %212 = inttoptr i64 %211 to %"class.v8::internal::compiler::Node"**
  br label %213

213:                                              ; preds = %210, %191
  %214 = phi i64 [ %197, %210 ], [ 0, %191 ]
  %215 = phi %"class.v8::internal::compiler::Node"** [ %212, %210 ], [ null, %191 ]
  %216 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %184
  %217 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %214
  %218 = ptrtoint %"class.v8::internal::compiler::Node"** %217 to i64
  %219 = bitcast %"class.v8::internal::compiler::Node"** %216 to i64*
  store i64 %163, i64* %219, align 8
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %216, i64 1
  %221 = ptrtoint %"class.v8::internal::compiler::Node"** %220 to i64
  %222 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %25, align 8
  %223 = ptrtoint %"class.v8::internal::compiler::Node"** %222 to i64
  %224 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %19, align 8
  %225 = icmp eq %"class.v8::internal::compiler::Node"** %224, %222
  br i1 %225, label %396, label %226

226:                                              ; preds = %213
  %227 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %224, i64 -1
  %228 = ptrtoint %"class.v8::internal::compiler::Node"** %227 to i64
  %229 = sub i64 %228, %223
  %230 = lshr i64 %229, 3
  %231 = add nuw nsw i64 %230, 1
  %232 = icmp ult i64 %231, 4
  br i1 %232, label %326, label %233

233:                                              ; preds = %226
  %234 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 -1
  %235 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %224, i64 -1
  %236 = ptrtoint %"class.v8::internal::compiler::Node"** %235 to i64
  %237 = sub i64 %236, %223
  %238 = lshr i64 %237, 3
  %239 = sub nsw i64 %184, %238
  %240 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %234, i64 %239
  %241 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %224, i64 -1
  %242 = sub nsw i64 0, %238
  %243 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %241, i64 %242
  %244 = icmp ult %"class.v8::internal::compiler::Node"** %240, %224
  %245 = icmp ult %"class.v8::internal::compiler::Node"** %243, %216
  %246 = and i1 %244, %245
  br i1 %246, label %326, label %247

247:                                              ; preds = %233
  %248 = and i64 %231, 4611686018427387900
  %249 = sub nsw i64 0, %248
  %250 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %216, i64 %249
  %251 = sub nsw i64 0, %248
  %252 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %224, i64 %251
  %253 = add nsw i64 %248, -4
  %254 = lshr exact i64 %253, 2
  %255 = add nuw nsw i64 %254, 1
  %256 = and i64 %255, 1
  %257 = icmp eq i64 %253, 0
  br i1 %257, label %302, label %258

258:                                              ; preds = %247
  %259 = sub nuw nsw i64 %255, %256
  %260 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %216, i64 -1
  %261 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %224, i64 -1
  %262 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %216, i64 -1
  %263 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %224, i64 -1
  br label %264

264:                                              ; preds = %264, %258
  %265 = phi i64 [ 0, %258 ], [ %299, %264 ]
  %266 = phi i64 [ %259, %258 ], [ %300, %264 ]
  %267 = sub i64 0, %265
  %268 = sub i64 0, %265
  %269 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %260, i64 %267
  %270 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %261, i64 %268
  %271 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %270, i64 -1
  %272 = bitcast %"class.v8::internal::compiler::Node"** %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !19
  %274 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %270, i64 -2
  %275 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %274, i64 -1
  %276 = bitcast %"class.v8::internal::compiler::Node"** %275 to <2 x i64>*
  %277 = load <2 x i64>, <2 x i64>* %276, align 8, !alias.scope !19
  %278 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %269, i64 -1
  %279 = bitcast %"class.v8::internal::compiler::Node"** %278 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %279, align 8, !alias.scope !22, !noalias !19
  %280 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %269, i64 -2
  %281 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %280, i64 -1
  %282 = bitcast %"class.v8::internal::compiler::Node"** %281 to <2 x i64>*
  store <2 x i64> %277, <2 x i64>* %282, align 8, !alias.scope !22, !noalias !19
  %283 = sub nuw nsw i64 -4, %265
  %284 = sub nuw nsw i64 -4, %265
  %285 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %262, i64 %283
  %286 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %263, i64 %284
  %287 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %286, i64 -1
  %288 = bitcast %"class.v8::internal::compiler::Node"** %287 to <2 x i64>*
  %289 = load <2 x i64>, <2 x i64>* %288, align 8, !alias.scope !19
  %290 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %286, i64 -2
  %291 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %290, i64 -1
  %292 = bitcast %"class.v8::internal::compiler::Node"** %291 to <2 x i64>*
  %293 = load <2 x i64>, <2 x i64>* %292, align 8, !alias.scope !19
  %294 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %285, i64 -1
  %295 = bitcast %"class.v8::internal::compiler::Node"** %294 to <2 x i64>*
  store <2 x i64> %289, <2 x i64>* %295, align 8, !alias.scope !22, !noalias !19
  %296 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %285, i64 -2
  %297 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %296, i64 -1
  %298 = bitcast %"class.v8::internal::compiler::Node"** %297 to <2 x i64>*
  store <2 x i64> %293, <2 x i64>* %298, align 8, !alias.scope !22, !noalias !19
  %299 = add i64 %265, 8
  %300 = add i64 %266, -2
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %264, !llvm.loop !24

302:                                              ; preds = %264, %247
  %303 = phi i64 [ 0, %247 ], [ %299, %264 ]
  %304 = icmp eq i64 %256, 0
  br i1 %304, label %324, label %305

305:                                              ; preds = %302
  %306 = sub i64 0, %303
  %307 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %216, i64 -1
  %308 = sub i64 0, %303
  %309 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %224, i64 -1
  %310 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %307, i64 %306
  %311 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %309, i64 %308
  %312 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %311, i64 -1
  %313 = bitcast %"class.v8::internal::compiler::Node"** %312 to <2 x i64>*
  %314 = load <2 x i64>, <2 x i64>* %313, align 8, !alias.scope !19
  %315 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %311, i64 -2
  %316 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %315, i64 -1
  %317 = bitcast %"class.v8::internal::compiler::Node"** %316 to <2 x i64>*
  %318 = load <2 x i64>, <2 x i64>* %317, align 8, !alias.scope !19
  %319 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %310, i64 -1
  %320 = bitcast %"class.v8::internal::compiler::Node"** %319 to <2 x i64>*
  store <2 x i64> %314, <2 x i64>* %320, align 8, !alias.scope !22, !noalias !19
  %321 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %310, i64 -2
  %322 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %321, i64 -1
  %323 = bitcast %"class.v8::internal::compiler::Node"** %322 to <2 x i64>*
  store <2 x i64> %318, <2 x i64>* %323, align 8, !alias.scope !22, !noalias !19
  br label %324

324:                                              ; preds = %302, %305
  %325 = icmp eq i64 %231, %248
  br i1 %325, label %396, label %326

326:                                              ; preds = %324, %233, %226
  %327 = phi %"class.v8::internal::compiler::Node"** [ %216, %233 ], [ %216, %226 ], [ %250, %324 ]
  %328 = phi %"class.v8::internal::compiler::Node"** [ %224, %233 ], [ %224, %226 ], [ %252, %324 ]
  %329 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %328, i64 -1
  %330 = ptrtoint %"class.v8::internal::compiler::Node"** %329 to i64
  %331 = sub i64 %330, %223
  %332 = lshr i64 %331, 3
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %347, label %336

336:                                              ; preds = %326, %336
  %337 = phi %"class.v8::internal::compiler::Node"** [ %340, %336 ], [ %327, %326 ]
  %338 = phi %"class.v8::internal::compiler::Node"** [ %341, %336 ], [ %328, %326 ]
  %339 = phi i64 [ %345, %336 ], [ %334, %326 ]
  %340 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %337, i64 -1
  %341 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %338, i64 -1
  %342 = bitcast %"class.v8::internal::compiler::Node"** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"class.v8::internal::compiler::Node"** %340 to i64*
  store i64 %343, i64* %344, align 8
  %345 = add i64 %339, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %336, !llvm.loop !25

347:                                              ; preds = %336, %326
  %348 = phi %"class.v8::internal::compiler::Node"** [ undef, %326 ], [ %340, %336 ]
  %349 = phi %"class.v8::internal::compiler::Node"** [ %327, %326 ], [ %340, %336 ]
  %350 = phi %"class.v8::internal::compiler::Node"** [ %328, %326 ], [ %341, %336 ]
  %351 = icmp ult i64 %331, 56
  br i1 %351, label %396, label %352

352:                                              ; preds = %347, %352
  %353 = phi %"class.v8::internal::compiler::Node"** [ %390, %352 ], [ %349, %347 ]
  %354 = phi %"class.v8::internal::compiler::Node"** [ %391, %352 ], [ %350, %347 ]
  %355 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %353, i64 -1
  %356 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %354, i64 -1
  %357 = bitcast %"class.v8::internal::compiler::Node"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"class.v8::internal::compiler::Node"** %355 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %353, i64 -2
  %361 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %354, i64 -2
  %362 = bitcast %"class.v8::internal::compiler::Node"** %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"class.v8::internal::compiler::Node"** %360 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %353, i64 -3
  %366 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %354, i64 -3
  %367 = bitcast %"class.v8::internal::compiler::Node"** %366 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"class.v8::internal::compiler::Node"** %365 to i64*
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %353, i64 -4
  %371 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %354, i64 -4
  %372 = bitcast %"class.v8::internal::compiler::Node"** %371 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = bitcast %"class.v8::internal::compiler::Node"** %370 to i64*
  store i64 %373, i64* %374, align 8
  %375 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %353, i64 -5
  %376 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %354, i64 -5
  %377 = bitcast %"class.v8::internal::compiler::Node"** %376 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = bitcast %"class.v8::internal::compiler::Node"** %375 to i64*
  store i64 %378, i64* %379, align 8
  %380 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %353, i64 -6
  %381 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %354, i64 -6
  %382 = bitcast %"class.v8::internal::compiler::Node"** %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = bitcast %"class.v8::internal::compiler::Node"** %380 to i64*
  store i64 %383, i64* %384, align 8
  %385 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %353, i64 -7
  %386 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %354, i64 -7
  %387 = bitcast %"class.v8::internal::compiler::Node"** %386 to i64*
  %388 = load i64, i64* %387, align 8
  %389 = bitcast %"class.v8::internal::compiler::Node"** %385 to i64*
  store i64 %388, i64* %389, align 8
  %390 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %353, i64 -8
  %391 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %354, i64 -8
  %392 = bitcast %"class.v8::internal::compiler::Node"** %391 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = bitcast %"class.v8::internal::compiler::Node"** %390 to i64*
  store i64 %393, i64* %394, align 8
  %395 = icmp eq %"class.v8::internal::compiler::Node"** %391, %222
  br i1 %395, label %396, label %352, !llvm.loop !26

396:                                              ; preds = %347, %352, %324, %213
  %397 = phi %"class.v8::internal::compiler::Node"** [ %216, %213 ], [ %250, %324 ], [ %348, %347 ], [ %390, %352 ]
  %398 = ptrtoint %"class.v8::internal::compiler::Node"** %397 to i64
  store i64 %398, i64* %22, align 8
  store i64 %221, i64* %21, align 8
  store i64 %218, i64* %23, align 8
  br label %634

399:                                              ; preds = %167
  %400 = call dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %169) #9
  %401 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %400, i64 0, i32 2
  %402 = load i32, i32* %401, align 4
  %403 = icmp eq i32 %402, 4
  br i1 %403, label %404, label %775

404:                                              ; preds = %399
  %405 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %19, align 8
  %406 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %20, align 8
  %407 = icmp eq %"class.v8::internal::compiler::Node"** %405, %406
  %408 = ptrtoint %"class.v8::internal::compiler::Node"** %406 to i64
  br i1 %407, label %413, label %409

409:                                              ; preds = %404
  %410 = bitcast %"class.v8::internal::compiler::Node"** %405 to i64*
  store i64 %163, i64* %410, align 8
  %411 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 1
  %412 = ptrtoint %"class.v8::internal::compiler::Node"** %411 to i64
  store i64 %412, i64* %21, align 8
  br label %634

413:                                              ; preds = %404
  %414 = ptrtoint %"class.v8::internal::compiler::Node"** %405 to i64
  %415 = load i64, i64* %22, align 8
  %416 = sub i64 %414, %415
  %417 = ashr exact i64 %416, 3
  %418 = add nsw i64 %417, 1
  %419 = icmp ugt i64 %418, 268435455
  br i1 %419, label %420, label %422

420:                                              ; preds = %413
  %421 = bitcast %"class.v8::internal::ZoneVector.666"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %421) #10
  unreachable

422:                                              ; preds = %413
  %423 = sub i64 %408, %415
  %424 = ashr exact i64 %423, 3
  %425 = icmp ult i64 %424, 134217727
  br i1 %425, label %426, label %431

426:                                              ; preds = %422
  %427 = ashr exact i64 %423, 2
  %428 = icmp ult i64 %427, %418
  %429 = select i1 %428, i64 %418, i64 %427
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %448, label %431

431:                                              ; preds = %426, %422
  %432 = phi i64 [ %429, %426 ], [ 268435455, %422 ]
  %433 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %24, align 8
  %434 = shl i64 %432, 3
  %435 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %433, i64 0, i32 2
  %436 = load i64, i64* %435, align 8
  %437 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %433, i64 0, i32 3
  %438 = load i64, i64* %437, align 8
  %439 = sub i64 %438, %436
  %440 = icmp ugt i64 %434, %439
  br i1 %440, label %441, label %443, !prof !8

441:                                              ; preds = %431
  %442 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %433, i64 %434) #9
  br label %445

443:                                              ; preds = %431
  %444 = add i64 %436, %434
  store i64 %444, i64* %435, align 8
  br label %445

445:                                              ; preds = %443, %441
  %446 = phi i64 [ %442, %441 ], [ %436, %443 ]
  %447 = inttoptr i64 %446 to %"class.v8::internal::compiler::Node"**
  br label %448

448:                                              ; preds = %445, %426
  %449 = phi i64 [ %432, %445 ], [ 0, %426 ]
  %450 = phi %"class.v8::internal::compiler::Node"** [ %447, %445 ], [ null, %426 ]
  %451 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %450, i64 %417
  %452 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %450, i64 %449
  %453 = ptrtoint %"class.v8::internal::compiler::Node"** %452 to i64
  %454 = bitcast %"class.v8::internal::compiler::Node"** %451 to i64*
  store i64 %163, i64* %454, align 8
  %455 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 1
  %456 = ptrtoint %"class.v8::internal::compiler::Node"** %455 to i64
  %457 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %25, align 8
  %458 = ptrtoint %"class.v8::internal::compiler::Node"** %457 to i64
  %459 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %19, align 8
  %460 = icmp eq %"class.v8::internal::compiler::Node"** %459, %457
  br i1 %460, label %631, label %461

461:                                              ; preds = %448
  %462 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 -1
  %463 = ptrtoint %"class.v8::internal::compiler::Node"** %462 to i64
  %464 = sub i64 %463, %458
  %465 = lshr i64 %464, 3
  %466 = add nuw nsw i64 %465, 1
  %467 = icmp ult i64 %466, 4
  br i1 %467, label %561, label %468

468:                                              ; preds = %461
  %469 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %450, i64 -1
  %470 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 -1
  %471 = ptrtoint %"class.v8::internal::compiler::Node"** %470 to i64
  %472 = sub i64 %471, %458
  %473 = lshr i64 %472, 3
  %474 = sub nsw i64 %417, %473
  %475 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %469, i64 %474
  %476 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 -1
  %477 = sub nsw i64 0, %473
  %478 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %476, i64 %477
  %479 = icmp ult %"class.v8::internal::compiler::Node"** %475, %459
  %480 = icmp ult %"class.v8::internal::compiler::Node"** %478, %451
  %481 = and i1 %479, %480
  br i1 %481, label %561, label %482

482:                                              ; preds = %468
  %483 = and i64 %466, 4611686018427387900
  %484 = sub nsw i64 0, %483
  %485 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 %484
  %486 = sub nsw i64 0, %483
  %487 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 %486
  %488 = add nsw i64 %483, -4
  %489 = lshr exact i64 %488, 2
  %490 = add nuw nsw i64 %489, 1
  %491 = and i64 %490, 1
  %492 = icmp eq i64 %488, 0
  br i1 %492, label %537, label %493

493:                                              ; preds = %482
  %494 = sub nuw nsw i64 %490, %491
  %495 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 -1
  %496 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 -1
  %497 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 -1
  %498 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 -1
  br label %499

499:                                              ; preds = %499, %493
  %500 = phi i64 [ 0, %493 ], [ %534, %499 ]
  %501 = phi i64 [ %494, %493 ], [ %535, %499 ]
  %502 = sub i64 0, %500
  %503 = sub i64 0, %500
  %504 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %495, i64 %502
  %505 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %496, i64 %503
  %506 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %505, i64 -1
  %507 = bitcast %"class.v8::internal::compiler::Node"** %506 to <2 x i64>*
  %508 = load <2 x i64>, <2 x i64>* %507, align 8, !alias.scope !27
  %509 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %505, i64 -2
  %510 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %509, i64 -1
  %511 = bitcast %"class.v8::internal::compiler::Node"** %510 to <2 x i64>*
  %512 = load <2 x i64>, <2 x i64>* %511, align 8, !alias.scope !27
  %513 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %504, i64 -1
  %514 = bitcast %"class.v8::internal::compiler::Node"** %513 to <2 x i64>*
  store <2 x i64> %508, <2 x i64>* %514, align 8, !alias.scope !30, !noalias !27
  %515 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %504, i64 -2
  %516 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %515, i64 -1
  %517 = bitcast %"class.v8::internal::compiler::Node"** %516 to <2 x i64>*
  store <2 x i64> %512, <2 x i64>* %517, align 8, !alias.scope !30, !noalias !27
  %518 = sub nuw nsw i64 -4, %500
  %519 = sub nuw nsw i64 -4, %500
  %520 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %497, i64 %518
  %521 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %498, i64 %519
  %522 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %521, i64 -1
  %523 = bitcast %"class.v8::internal::compiler::Node"** %522 to <2 x i64>*
  %524 = load <2 x i64>, <2 x i64>* %523, align 8, !alias.scope !27
  %525 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %521, i64 -2
  %526 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %525, i64 -1
  %527 = bitcast %"class.v8::internal::compiler::Node"** %526 to <2 x i64>*
  %528 = load <2 x i64>, <2 x i64>* %527, align 8, !alias.scope !27
  %529 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %520, i64 -1
  %530 = bitcast %"class.v8::internal::compiler::Node"** %529 to <2 x i64>*
  store <2 x i64> %524, <2 x i64>* %530, align 8, !alias.scope !30, !noalias !27
  %531 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %520, i64 -2
  %532 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %531, i64 -1
  %533 = bitcast %"class.v8::internal::compiler::Node"** %532 to <2 x i64>*
  store <2 x i64> %528, <2 x i64>* %533, align 8, !alias.scope !30, !noalias !27
  %534 = add i64 %500, 8
  %535 = add i64 %501, -2
  %536 = icmp eq i64 %535, 0
  br i1 %536, label %537, label %499, !llvm.loop !32

537:                                              ; preds = %499, %482
  %538 = phi i64 [ 0, %482 ], [ %534, %499 ]
  %539 = icmp eq i64 %491, 0
  br i1 %539, label %559, label %540

540:                                              ; preds = %537
  %541 = sub i64 0, %538
  %542 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 -1
  %543 = sub i64 0, %538
  %544 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 -1
  %545 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %542, i64 %541
  %546 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %544, i64 %543
  %547 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %546, i64 -1
  %548 = bitcast %"class.v8::internal::compiler::Node"** %547 to <2 x i64>*
  %549 = load <2 x i64>, <2 x i64>* %548, align 8, !alias.scope !27
  %550 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %546, i64 -2
  %551 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %550, i64 -1
  %552 = bitcast %"class.v8::internal::compiler::Node"** %551 to <2 x i64>*
  %553 = load <2 x i64>, <2 x i64>* %552, align 8, !alias.scope !27
  %554 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %545, i64 -1
  %555 = bitcast %"class.v8::internal::compiler::Node"** %554 to <2 x i64>*
  store <2 x i64> %549, <2 x i64>* %555, align 8, !alias.scope !30, !noalias !27
  %556 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %545, i64 -2
  %557 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %556, i64 -1
  %558 = bitcast %"class.v8::internal::compiler::Node"** %557 to <2 x i64>*
  store <2 x i64> %553, <2 x i64>* %558, align 8, !alias.scope !30, !noalias !27
  br label %559

559:                                              ; preds = %537, %540
  %560 = icmp eq i64 %466, %483
  br i1 %560, label %631, label %561

561:                                              ; preds = %559, %468, %461
  %562 = phi %"class.v8::internal::compiler::Node"** [ %451, %468 ], [ %451, %461 ], [ %485, %559 ]
  %563 = phi %"class.v8::internal::compiler::Node"** [ %459, %468 ], [ %459, %461 ], [ %487, %559 ]
  %564 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %563, i64 -1
  %565 = ptrtoint %"class.v8::internal::compiler::Node"** %564 to i64
  %566 = sub i64 %565, %458
  %567 = lshr i64 %566, 3
  %568 = add nuw nsw i64 %567, 1
  %569 = and i64 %568, 7
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %582, label %571

571:                                              ; preds = %561, %571
  %572 = phi %"class.v8::internal::compiler::Node"** [ %575, %571 ], [ %562, %561 ]
  %573 = phi %"class.v8::internal::compiler::Node"** [ %576, %571 ], [ %563, %561 ]
  %574 = phi i64 [ %580, %571 ], [ %569, %561 ]
  %575 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %572, i64 -1
  %576 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %573, i64 -1
  %577 = bitcast %"class.v8::internal::compiler::Node"** %576 to i64*
  %578 = load i64, i64* %577, align 8
  %579 = bitcast %"class.v8::internal::compiler::Node"** %575 to i64*
  store i64 %578, i64* %579, align 8
  %580 = add i64 %574, -1
  %581 = icmp eq i64 %580, 0
  br i1 %581, label %582, label %571, !llvm.loop !33

582:                                              ; preds = %571, %561
  %583 = phi %"class.v8::internal::compiler::Node"** [ undef, %561 ], [ %575, %571 ]
  %584 = phi %"class.v8::internal::compiler::Node"** [ %562, %561 ], [ %575, %571 ]
  %585 = phi %"class.v8::internal::compiler::Node"** [ %563, %561 ], [ %576, %571 ]
  %586 = icmp ult i64 %566, 56
  br i1 %586, label %631, label %587

587:                                              ; preds = %582, %587
  %588 = phi %"class.v8::internal::compiler::Node"** [ %625, %587 ], [ %584, %582 ]
  %589 = phi %"class.v8::internal::compiler::Node"** [ %626, %587 ], [ %585, %582 ]
  %590 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %588, i64 -1
  %591 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %589, i64 -1
  %592 = bitcast %"class.v8::internal::compiler::Node"** %591 to i64*
  %593 = load i64, i64* %592, align 8
  %594 = bitcast %"class.v8::internal::compiler::Node"** %590 to i64*
  store i64 %593, i64* %594, align 8
  %595 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %588, i64 -2
  %596 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %589, i64 -2
  %597 = bitcast %"class.v8::internal::compiler::Node"** %596 to i64*
  %598 = load i64, i64* %597, align 8
  %599 = bitcast %"class.v8::internal::compiler::Node"** %595 to i64*
  store i64 %598, i64* %599, align 8
  %600 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %588, i64 -3
  %601 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %589, i64 -3
  %602 = bitcast %"class.v8::internal::compiler::Node"** %601 to i64*
  %603 = load i64, i64* %602, align 8
  %604 = bitcast %"class.v8::internal::compiler::Node"** %600 to i64*
  store i64 %603, i64* %604, align 8
  %605 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %588, i64 -4
  %606 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %589, i64 -4
  %607 = bitcast %"class.v8::internal::compiler::Node"** %606 to i64*
  %608 = load i64, i64* %607, align 8
  %609 = bitcast %"class.v8::internal::compiler::Node"** %605 to i64*
  store i64 %608, i64* %609, align 8
  %610 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %588, i64 -5
  %611 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %589, i64 -5
  %612 = bitcast %"class.v8::internal::compiler::Node"** %611 to i64*
  %613 = load i64, i64* %612, align 8
  %614 = bitcast %"class.v8::internal::compiler::Node"** %610 to i64*
  store i64 %613, i64* %614, align 8
  %615 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %588, i64 -6
  %616 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %589, i64 -6
  %617 = bitcast %"class.v8::internal::compiler::Node"** %616 to i64*
  %618 = load i64, i64* %617, align 8
  %619 = bitcast %"class.v8::internal::compiler::Node"** %615 to i64*
  store i64 %618, i64* %619, align 8
  %620 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %588, i64 -7
  %621 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %589, i64 -7
  %622 = bitcast %"class.v8::internal::compiler::Node"** %621 to i64*
  %623 = load i64, i64* %622, align 8
  %624 = bitcast %"class.v8::internal::compiler::Node"** %620 to i64*
  store i64 %623, i64* %624, align 8
  %625 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %588, i64 -8
  %626 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %589, i64 -8
  %627 = bitcast %"class.v8::internal::compiler::Node"** %626 to i64*
  %628 = load i64, i64* %627, align 8
  %629 = bitcast %"class.v8::internal::compiler::Node"** %625 to i64*
  store i64 %628, i64* %629, align 8
  %630 = icmp eq %"class.v8::internal::compiler::Node"** %626, %457
  br i1 %630, label %631, label %587, !llvm.loop !34

631:                                              ; preds = %582, %587, %559, %448
  %632 = phi %"class.v8::internal::compiler::Node"** [ %451, %448 ], [ %485, %559 ], [ %583, %582 ], [ %625, %587 ]
  %633 = ptrtoint %"class.v8::internal::compiler::Node"** %632 to i64
  store i64 %633, i64* %22, align 8
  store i64 %456, i64* %21, align 8
  store i64 %453, i64* %23, align 8
  br label %634

634:                                              ; preds = %167, %167, %167, %167, %176, %396, %409, %631, %161, %165
  %635 = phi %"class.v8::internal::compiler::Node"** [ %139, %167 ], [ %139, %167 ], [ %139, %167 ], [ %139, %167 ], [ %178, %176 ], [ %220, %396 ], [ %411, %409 ], [ %455, %631 ], [ %139, %161 ], [ %139, %165 ]
  %636 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %142, null
  br i1 %636, label %637, label %138

637:                                              ; preds = %634, %77
  %638 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %11, align 8
  %639 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %638, i64 0, i32 0, i32 0
  %640 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %639, align 8
  %641 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %638, i64 0, i32 0, i32 1
  %642 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %641, align 8
  %643 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder22ArgumentsElementsStateENS0_19CreateArgumentsTypeE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %642, i8 zeroext %44) #9
  %644 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %640, %"class.v8::internal::compiler::Operator"* %643, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #9
  %645 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %644, i64 0, i32 1, i32 0
  store i64 16777217, i64* %645, align 8
  %646 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %26, align 8
  %647 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %646 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %648 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %647, align 8
  %649 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %648, i64 4
  %650 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %649, align 8
  call void %650(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %646, %"class.v8::internal::compiler::Node"* %39, %"class.v8::internal::compiler::Node"* %644, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #9
  %651 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %25, align 8
  %652 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %19, align 8
  %653 = icmp eq %"class.v8::internal::compiler::Node"** %651, %652
  br i1 %653, label %777, label %654

654:                                              ; preds = %637
  %655 = inttoptr i64 %59 to i64*
  %656 = icmp eq i8 %44, 2
  br label %657

657:                                              ; preds = %654, %772
  %658 = phi %"class.v8::internal::compiler::Node"** [ %651, %654 ], [ %773, %772 ]
  %659 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %658, align 8
  %660 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %659, i64 0, i32 0
  %661 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %660, align 8
  %662 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %661, i64 0, i32 2
  %663 = load i16, i16* %662, align 8
  switch i16 %663, label %771 [
    i16 229, label %664
    i16 230, label %749
  ]

664:                                              ; preds = %657
  %665 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %661, i64 0, i32 5
  %666 = load i32, i32* %665, align 4
  %667 = icmp sgt i32 %666, 1
  br i1 %667, label %669, label %668, !prof !4

668:                                              ; preds = %664
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #10
  unreachable

669:                                              ; preds = %664
  %670 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %659, i64 0, i32 3
  %671 = load i32, i32* %670, align 4
  %672 = and i32 %671, 251658240
  %673 = icmp eq i32 %672, 251658240
  %674 = ptrtoint %"class.v8::internal::compiler::Node"* %659 to i64
  %675 = add i64 %674, 32
  br i1 %673, label %676, label %680

676:                                              ; preds = %669
  %677 = inttoptr i64 %675 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = add i64 %678, 16
  br label %680

680:                                              ; preds = %669, %676
  %681 = phi i64 [ %679, %676 ], [ %675, %669 ]
  %682 = inttoptr i64 %681 to %"class.v8::internal::compiler::Node"**
  %683 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %682, i64 1
  %684 = bitcast %"class.v8::internal::compiler::Node"** %683 to i64*
  %685 = load i64, i64* %684, align 8
  %686 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %11, align 8
  %687 = load i32, i32* %46, align 4
  %688 = sitofp i32 %687 to double
  %689 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantEd(%"class.v8::internal::compiler::JSGraph"* %686, double %688) #9
  %690 = load i32, i32* %46, align 4
  %691 = sitofp i32 %690 to double
  %692 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %11, align 8
  %693 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %692, i64 0, i32 0, i32 0
  %694 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %693, align 8
  %695 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %694, i64 0, i32 0
  %696 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %695, align 8
  %697 = call i64 @_ZN2v88internal8compiler4Type8ConstantEdPNS0_4ZoneE(double %691, %"class.v8::internal::Zone"* %696) #9
  %698 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %689, i64 0, i32 1, i32 0
  store i64 %697, i64* %698, align 8
  %699 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %11, align 8
  %700 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantEd(%"class.v8::internal::compiler::JSGraph"* %699, double 2.000000e+00) #9
  %701 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %700, i64 0, i32 1, i32 0
  %702 = load i64, i64* %701, align 8
  %703 = icmp eq i64 %702, 0
  br i1 %703, label %704, label %711

704:                                              ; preds = %680
  %705 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %11, align 8
  %706 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %705, i64 0, i32 0, i32 0
  %707 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %706, align 8
  %708 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %707, i64 0, i32 0
  %709 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %708, align 8
  %710 = call i64 @_ZN2v88internal8compiler4Type8ConstantEdPNS0_4ZoneE(double 2.000000e+00, %"class.v8::internal::Zone"* %709) #9
  store i64 %710, i64* %701, align 8
  br label %711

711:                                              ; preds = %680, %704
  %712 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %11, align 8
  %713 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %712, i64 0, i32 0, i32 0
  %714 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %713, align 8
  %715 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %712, i64 0, i32 3
  %716 = load %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"** %715, align 8
  %717 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder9NumberAddEv(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %716) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #9
  store i64 %685, i64* %29, align 8
  store %"class.v8::internal::compiler::Node"* %700, %"class.v8::internal::compiler::Node"** %30, align 8
  %718 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %714, %"class.v8::internal::compiler::Operator"* %717, i32 2, %"class.v8::internal::compiler::Node"** nonnull %28, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #9
  br i1 %656, label %719, label %731

719:                                              ; preds = %711
  %720 = call %"class.v8::internal::compiler::TypeCache"* @_ZN2v88internal8compiler9TypeCache3GetEv() #9
  %721 = getelementptr inbounds %"class.v8::internal::compiler::TypeCache", %"class.v8::internal::compiler::TypeCache"* %720, i64 0, i32 62, i32 0
  %722 = load i64, i64* %721, align 8
  %723 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %718, i64 0, i32 1, i32 0
  store i64 %722, i64* %723, align 8
  %724 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %11, align 8
  %725 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %724, i64 0, i32 0, i32 0
  %726 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %725, align 8
  %727 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %724, i64 0, i32 3
  %728 = load %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"** %727, align 8
  %729 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder9NumberAddEv(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %728) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #9
  store %"class.v8::internal::compiler::Node"* %718, %"class.v8::internal::compiler::Node"** %32, align 8
  store %"class.v8::internal::compiler::Node"* %689, %"class.v8::internal::compiler::Node"** %33, align 8
  %730 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %726, %"class.v8::internal::compiler::Operator"* %729, i32 2, %"class.v8::internal::compiler::Node"** nonnull %32, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #9
  br label %731

731:                                              ; preds = %719, %711
  %732 = phi %"class.v8::internal::compiler::Node"* [ %730, %719 ], [ %718, %711 ]
  %733 = call %"class.v8::internal::compiler::TypeCache"* @_ZN2v88internal8compiler9TypeCache3GetEv() #9
  %734 = getelementptr inbounds %"class.v8::internal::compiler::TypeCache", %"class.v8::internal::compiler::TypeCache"* %733, i64 0, i32 62, i32 0
  %735 = load i64, i64* %734, align 8
  %736 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %732, i64 0, i32 1, i32 0
  store i64 %735, i64* %736, align 8
  %737 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %11, align 8
  %738 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %737, i64 0, i32 0, i32 0
  %739 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %738, align 8
  %740 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %737, i64 0, i32 0, i32 2
  %741 = load %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"** %740, align 8
  %742 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder16LoadFramePointerEv(%"class.v8::internal::compiler::MachineOperatorBuilder"* %741) #9
  %743 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %739, %"class.v8::internal::compiler::Operator"* %742, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #9
  %744 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %743, i64 0, i32 1, i32 0
  store i64 33554433, i64* %744, align 8
  call void @_ZN2v88internal8compiler14NodeProperties17ReplaceValueInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %659, %"class.v8::internal::compiler::Node"* %743, i32 0) #9
  call void @_ZN2v88internal8compiler14NodeProperties17ReplaceValueInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %659, %"class.v8::internal::compiler::Node"* %732, i32 1) #9
  %745 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %11, align 8
  %746 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %745, i64 0, i32 3
  %747 = load %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"** %746, align 8
  %748 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder17LoadStackArgumentEv(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %747) #9
  call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %659, %"class.v8::internal::compiler::Operator"* %748) #9
  br label %772

749:                                              ; preds = %657
  %750 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %40, align 8
  %751 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %750, i64 0, i32 5
  %752 = load i32, i32* %751, align 4
  %753 = icmp sgt i32 %752, 0
  br i1 %753, label %755, label %754, !prof !4

754:                                              ; preds = %749
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #10
  unreachable

755:                                              ; preds = %749
  %756 = load i32, i32* %54, align 4
  %757 = and i32 %756, 251658240
  %758 = icmp eq i32 %757, 251658240
  br i1 %758, label %759, label %762

759:                                              ; preds = %755
  %760 = load i64, i64* %655, align 8
  %761 = add i64 %760, 16
  br label %762

762:                                              ; preds = %755, %759
  %763 = phi i64 [ %761, %759 ], [ %59, %755 ]
  %764 = inttoptr i64 %763 to %"class.v8::internal::compiler::Node"**
  %765 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %764, align 8
  %766 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %26, align 8
  %767 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %766 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %768 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %767, align 8
  %769 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %768, i64 4
  %770 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %769, align 8
  call void %770(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %766, %"class.v8::internal::compiler::Node"* %659, %"class.v8::internal::compiler::Node"* %765, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #9
  br label %772

771:                                              ; preds = %657
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #10
  unreachable

772:                                              ; preds = %762, %731
  %773 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %658, i64 1
  %774 = icmp eq %"class.v8::internal::compiler::Node"** %773, %652
  br i1 %774, label %775, label %657

775:                                              ; preds = %172, %399, %167, %772
  %776 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %25, align 8
  br label %777

777:                                              ; preds = %775, %637
  %778 = phi %"class.v8::internal::compiler::Node"** [ %776, %775 ], [ %651, %637 ]
  %779 = icmp eq %"class.v8::internal::compiler::Node"** %778, null
  br i1 %779, label %782, label %780

780:                                              ; preds = %777
  %781 = ptrtoint %"class.v8::internal::compiler::Node"** %778 to i64
  store i64 %781, i64* %21, align 8
  br label %782

782:                                              ; preds = %777, %780
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #9
  br label %783

783:                                              ; preds = %64, %782
  %784 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 1, i32 0
  %785 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %784, align 8
  %786 = icmp eq %"class.std::__1::__tree_node_base"* %785, null
  br i1 %786, label %787, label %795

787:                                              ; preds = %783
  %788 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node_base"*
  %789 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 2
  %790 = bitcast %"class.std::__1::__tree_end_node"* %789 to %"class.std::__1::__tree_end_node"**
  %791 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %790, align 8
  %792 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %791, i64 0, i32 0
  %793 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %792, align 8
  %794 = icmp eq %"class.std::__1::__tree_node_base"* %793, %788
  br i1 %794, label %811, label %802

795:                                              ; preds = %783, %795
  %796 = phi %"class.std::__1::__tree_node_base"* [ %798, %795 ], [ %785, %783 ]
  %797 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %796, i64 0, i32 0, i32 0
  %798 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %797, align 8
  %799 = icmp eq %"class.std::__1::__tree_node_base"* %798, null
  br i1 %799, label %800, label %795

800:                                              ; preds = %795
  %801 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %796, i64 0, i32 0
  br label %811

802:                                              ; preds = %787, %802
  %803 = phi %"class.std::__1::__tree_end_node"** [ %806, %802 ], [ %790, %787 ]
  %804 = bitcast %"class.std::__1::__tree_end_node"** %803 to %"class.std::__1::__tree_node_base"**
  %805 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %804, align 8
  %806 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %805, i64 0, i32 2
  %807 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %806, align 8
  %808 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %807, i64 0, i32 0
  %809 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %808, align 8
  %810 = icmp eq %"class.std::__1::__tree_node_base"* %809, %805
  br i1 %810, label %811, label %802

811:                                              ; preds = %802, %787, %800
  %812 = phi %"class.std::__1::__tree_end_node"* [ %801, %800 ], [ %791, %787 ], [ %807, %802 ]
  %813 = icmp eq %"class.std::__1::__tree_end_node"* %812, %8
  br i1 %813, label %34, label %35
}

declare dereferenceable(8) %"class.v8::internal::compiler::NewArgumentsElementsParameters"* @_ZN2v88internal8compiler32NewArgumentsElementsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder20ArgumentsLengthStateEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties11IsValueEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal8compiler4Node8UseEdges5emptyEv(%"class.v8::internal::compiler::Node::UseEdges"*) local_unnamed_addr #2

declare dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder22ArgumentsElementsStateENS0_19CreateArgumentsTypeE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantEd(%"class.v8::internal::compiler::JSGraph"*, double) local_unnamed_addr #2

declare i64 @_ZN2v88internal8compiler4Type8ConstantEdPNS0_4ZoneE(double, %"class.v8::internal::Zone"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder9NumberAddEv(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::TypeCache"* @_ZN2v88internal8compiler9TypeCache3GetEv() local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder16LoadFramePointerEv(%"class.v8::internal::compiler::MachineOperatorBuilder"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties17ReplaceValueInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder17LoadStackArgumentEv(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13NodeHashCache5QueryEPNS1_4NodeE(%"class.v8::internal::compiler::NodeHashCache"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::Node"*, align 8
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = call %"struct.std::__1::__hash_node_base.678"* @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.674"* %4, %"class.v8::internal::compiler::Node"** nonnull dereferenceable(8) %3) #9
  %6 = icmp eq %"struct.std::__1::__hash_node_base.678"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %5, i64 2
  %9 = bitcast %"struct.std::__1::__hash_node_base.678"* %8 to %"class.v8::internal::compiler::Node"**
  %10 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %9, align 8
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi %"class.v8::internal::compiler::Node"* [ %10, %7 ], [ null, %2 ]
  ret %"class.v8::internal::compiler::Node"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13NodeHashCache11ConstructorC2EPS2_PKNS1_8OperatorEiPPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::NodeHashCache::Constructor"* nocapture, %"class.v8::internal::compiler::NodeHashCache"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i64) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::NodeHashCache"* %1, %"class.v8::internal::compiler::NodeHashCache"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %1, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::compiler::Node"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.667"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %12, %14
  br i1 %15, label %104, label %16

16:                                               ; preds = %6
  %17 = inttoptr i64 %12 to %"class.v8::internal::compiler::Node"**
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, i64 -1
  %19 = bitcast %"class.v8::internal::compiler::Node"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %0, i64 0, i32 2
  %22 = bitcast %"class.v8::internal::compiler::Node"** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %10, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %23, i64 -1
  store %"class.v8::internal::compiler::Node"** %24, %"class.v8::internal::compiler::Node"*** %10, align 8
  %25 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %21, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %25, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 251658240
  %29 = icmp eq i32 %28, 251658240
  br i1 %29, label %33, label %30

30:                                               ; preds = %16
  %31 = lshr i32 %27, 24
  %32 = and i32 %31, 15
  br label %40

33:                                               ; preds = %16
  %34 = ptrtoint %"class.v8::internal::compiler::Node"* %25 to i64
  %35 = add i64 %34, 32
  %36 = inttoptr i64 %35 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %37 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %36, align 8
  %38 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %37, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  br label %40

40:                                               ; preds = %30, %33
  %41 = phi i32 [ %32, %30 ], [ %39, %33 ]
  %42 = icmp slt i32 %41, %3
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  tail call void @_ZN2v88internal8compiler4Node14TrimInputCountEi(%"class.v8::internal::compiler::Node"* %25, i32 %3) #9
  br label %44

44:                                               ; preds = %40, %43
  %45 = icmp sgt i32 %3, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %44
  %47 = sext i32 %41 to i64
  %48 = zext i32 %3 to i64
  br label %52

49:                                               ; preds = %100, %44
  %50 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %21, align 8
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %50, %"class.v8::internal::compiler::Operator"* %2) #9
  %51 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %21, align 8
  br label %109

52:                                               ; preds = %100, %46
  %53 = phi i64 [ 0, %46 ], [ %101, %100 ]
  %54 = phi i32 [ 0, %46 ], [ %102, %100 ]
  %55 = icmp slt i64 %53, %47
  %56 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %21, align 8
  br i1 %55, label %57, label %92

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, i64 %53
  %59 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %56, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 251658240
  %63 = icmp eq i32 %62, 251658240
  %64 = ptrtoint %"class.v8::internal::compiler::Node"* %56 to i64
  %65 = add i64 %64, 32
  br i1 %63, label %66, label %70

66:                                               ; preds = %57
  %67 = inttoptr i64 %65 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 16
  br label %70

70:                                               ; preds = %57, %66
  %71 = phi i64 [ %69, %66 ], [ %65, %57 ]
  %72 = inttoptr i64 %71 to %"class.v8::internal::compiler::Node"**
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, i64 %53
  %74 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, align 8
  %75 = icmp eq %"class.v8::internal::compiler::Node"* %74, %59
  br i1 %75, label %100, label %76

76:                                               ; preds = %70
  br i1 %63, label %79, label %77

77:                                               ; preds = %76
  %78 = bitcast %"class.v8::internal::compiler::Node"* %56 to %"struct.v8::internal::compiler::Node::Use"*
  br label %82

79:                                               ; preds = %76
  %80 = inttoptr i64 %65 to %"struct.v8::internal::compiler::Node::Use"**
  %81 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %80, align 8
  br label %82

82:                                               ; preds = %79, %77
  %83 = phi %"struct.v8::internal::compiler::Node::Use"* [ %78, %77 ], [ %81, %79 ]
  %84 = xor i32 %54, -1
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %83, i64 %85
  %87 = icmp eq %"class.v8::internal::compiler::Node"* %74, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %82
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %74, %"struct.v8::internal::compiler::Node::Use"* %86) #9
  br label %89

89:                                               ; preds = %88, %82
  store %"class.v8::internal::compiler::Node"* %59, %"class.v8::internal::compiler::Node"** %73, align 8
  %90 = icmp eq %"class.v8::internal::compiler::Node"* %59, null
  br i1 %90, label %100, label %91

91:                                               ; preds = %89
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %59, %"struct.v8::internal::compiler::Node::Use"* %86) #9
  br label %100

92:                                               ; preds = %52
  %93 = load %"class.v8::internal::compiler::NodeHashCache"*, %"class.v8::internal::compiler::NodeHashCache"** %7, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %93, i64 0, i32 0
  %95 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %95, i64 0, i32 0
  %97 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, i64 %53
  %99 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %98, align 8
  tail call void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"* %56, %"class.v8::internal::Zone"* %97, %"class.v8::internal::compiler::Node"* %99) #9
  br label %100

100:                                              ; preds = %91, %89, %70, %92
  %101 = add nuw nsw i64 %53, 1
  %102 = add nuw nsw i32 %54, 1
  %103 = icmp eq i64 %101, %48
  br i1 %103, label %49, label %52

104:                                              ; preds = %6
  %105 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %1, i64 0, i32 0
  %106 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %105, align 8
  %107 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %106, %"class.v8::internal::compiler::Operator"* %2, i32 %3, %"class.v8::internal::compiler::Node"** %4, i1 zeroext false) #9
  %108 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %0, i64 0, i32 2
  store %"class.v8::internal::compiler::Node"* %107, %"class.v8::internal::compiler::Node"** %108, align 8
  br label %109

109:                                              ; preds = %104, %49
  %110 = phi %"class.v8::internal::compiler::Node"* [ %107, %104 ], [ %51, %49 ]
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %110, i64 0, i32 1, i32 0
  store i64 %5, i64* %111, align 8
  ret void
}

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13NodeHashCache11Constructor11MutableNodeEv(%"class.v8::internal::compiler::NodeHashCache::Constructor"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %0, i64 0, i32 2
  %3 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, align 8
  %4 = icmp eq %"class.v8::internal::compiler::Node"* %3, null
  br i1 %4, label %5, label %159

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::NodeHashCache"*, %"class.v8::internal::compiler::NodeHashCache"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %7, i64 0, i32 2, i32 0, i32 0, i32 1
  %11 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::Node"** %9, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %7, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %0, i64 0, i32 1
  %17 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %16, align 8
  %18 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph9CloneNodeEPKNS1_4NodeE(%"class.v8::internal::compiler::Graph"* %15, %"class.v8::internal::compiler::Node"* %17) #9
  store %"class.v8::internal::compiler::Node"* %18, %"class.v8::internal::compiler::Node"** %2, align 8
  br label %159

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %11, i64 -1
  %21 = bitcast %"class.v8::internal::compiler::Node"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.v8::internal::compiler::Node"** %2 to i64*
  store i64 %22, i64* %23, align 8
  %24 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %10, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, i64 -1
  store %"class.v8::internal::compiler::Node"** %25, %"class.v8::internal::compiler::Node"*** %10, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache::Constructor", %"class.v8::internal::compiler::NodeHashCache::Constructor"* %0, i64 0, i32 1
  %27 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %27, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 251658240
  %31 = icmp eq i32 %30, 251658240
  br i1 %31, label %35, label %32

32:                                               ; preds = %19
  %33 = lshr i32 %29, 24
  %34 = and i32 %33, 15
  br label %42

35:                                               ; preds = %19
  %36 = ptrtoint %"class.v8::internal::compiler::Node"* %27 to i64
  %37 = add i64 %36, 32
  %38 = inttoptr i64 %37 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %39 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %38, align 8
  %40 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %39, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  br label %42

42:                                               ; preds = %32, %35
  %43 = phi i32 [ %34, %32 ], [ %41, %35 ]
  %44 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %44, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 251658240
  %48 = icmp eq i32 %47, 251658240
  br i1 %48, label %52, label %49

49:                                               ; preds = %42
  %50 = lshr i32 %46, 24
  %51 = and i32 %50, 15
  br label %59

52:                                               ; preds = %42
  %53 = ptrtoint %"class.v8::internal::compiler::Node"* %44 to i64
  %54 = add i64 %53, 32
  %55 = inttoptr i64 %54 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %56 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %55, align 8
  %57 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %56, i64 0, i32 1
  %58 = load i32, i32* %57, align 8
  br label %59

59:                                               ; preds = %49, %52
  %60 = phi i32 [ %51, %49 ], [ %58, %52 ]
  %61 = icmp sgt i32 %43, %60
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  tail call void @_ZN2v88internal8compiler4Node14TrimInputCountEi(%"class.v8::internal::compiler::Node"* %44, i32 %43) #9
  br label %63

63:                                               ; preds = %59, %62
  %64 = icmp sgt i32 %43, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %63
  %66 = sext i32 %60 to i64
  %67 = zext i32 %43 to i64
  br label %79

68:                                               ; preds = %155, %63
  %69 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, align 8
  %70 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %70, i64 0, i32 1, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %69, i64 0, i32 1, i32 0
  store i64 %72, i64* %73, align 8
  %74 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, align 8
  %75 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %75, i64 0, i32 0
  %77 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %76, align 8
  tail call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %74, %"class.v8::internal::compiler::Operator"* %77) #9
  %78 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, align 8
  br label %159

79:                                               ; preds = %155, %65
  %80 = phi i64 [ 0, %65 ], [ %156, %155 ]
  %81 = phi i32 [ 0, %65 ], [ %157, %155 ]
  %82 = icmp slt i64 %80, %66
  %83 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, align 8
  br i1 %82, label %84, label %133

84:                                               ; preds = %79
  %85 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %85, i64 0, i32 3
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, 251658240
  %89 = icmp eq i32 %88, 251658240
  %90 = ptrtoint %"class.v8::internal::compiler::Node"* %85 to i64
  %91 = add i64 %90, 32
  br i1 %89, label %92, label %96

92:                                               ; preds = %84
  %93 = inttoptr i64 %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 16
  br label %96

96:                                               ; preds = %84, %92
  %97 = phi i64 [ %95, %92 ], [ %91, %84 ]
  %98 = inttoptr i64 %97 to %"class.v8::internal::compiler::Node"**
  %99 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %98, i64 %80
  %100 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %83, i64 0, i32 3
  %102 = load i32, i32* %101, align 4
  %103 = and i32 %102, 251658240
  %104 = icmp eq i32 %103, 251658240
  %105 = ptrtoint %"class.v8::internal::compiler::Node"* %83 to i64
  %106 = add i64 %105, 32
  br i1 %104, label %107, label %111

107:                                              ; preds = %96
  %108 = inttoptr i64 %106 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = add i64 %109, 16
  br label %111

111:                                              ; preds = %96, %107
  %112 = phi i64 [ %110, %107 ], [ %106, %96 ]
  %113 = inttoptr i64 %112 to %"class.v8::internal::compiler::Node"**
  %114 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %113, i64 %80
  %115 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %114, align 8
  %116 = icmp eq %"class.v8::internal::compiler::Node"* %115, %100
  br i1 %116, label %155, label %117

117:                                              ; preds = %111
  br i1 %104, label %120, label %118

118:                                              ; preds = %117
  %119 = bitcast %"class.v8::internal::compiler::Node"* %83 to %"struct.v8::internal::compiler::Node::Use"*
  br label %123

120:                                              ; preds = %117
  %121 = inttoptr i64 %106 to %"struct.v8::internal::compiler::Node::Use"**
  %122 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %121, align 8
  br label %123

123:                                              ; preds = %120, %118
  %124 = phi %"struct.v8::internal::compiler::Node::Use"* [ %119, %118 ], [ %122, %120 ]
  %125 = xor i32 %81, -1
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %124, i64 %126
  %128 = icmp eq %"class.v8::internal::compiler::Node"* %115, null
  br i1 %128, label %130, label %129

129:                                              ; preds = %123
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %115, %"struct.v8::internal::compiler::Node::Use"* %127) #9
  br label %130

130:                                              ; preds = %129, %123
  store %"class.v8::internal::compiler::Node"* %100, %"class.v8::internal::compiler::Node"** %114, align 8
  %131 = icmp eq %"class.v8::internal::compiler::Node"* %100, null
  br i1 %131, label %155, label %132

132:                                              ; preds = %130
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %100, %"struct.v8::internal::compiler::Node::Use"* %127) #9
  br label %155

133:                                              ; preds = %79
  %134 = load %"class.v8::internal::compiler::NodeHashCache"*, %"class.v8::internal::compiler::NodeHashCache"** %6, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::NodeHashCache", %"class.v8::internal::compiler::NodeHashCache"* %134, i64 0, i32 0
  %136 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %136, i64 0, i32 0
  %138 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %137, align 8
  %139 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %139, i64 0, i32 3
  %141 = load i32, i32* %140, align 4
  %142 = and i32 %141, 251658240
  %143 = icmp eq i32 %142, 251658240
  %144 = ptrtoint %"class.v8::internal::compiler::Node"* %139 to i64
  %145 = add i64 %144, 32
  br i1 %143, label %146, label %150

146:                                              ; preds = %133
  %147 = inttoptr i64 %145 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = add i64 %148, 16
  br label %150

150:                                              ; preds = %133, %146
  %151 = phi i64 [ %149, %146 ], [ %145, %133 ]
  %152 = inttoptr i64 %151 to %"class.v8::internal::compiler::Node"**
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, i64 %80
  %154 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, align 8
  tail call void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"* %83, %"class.v8::internal::Zone"* %138, %"class.v8::internal::compiler::Node"* %154) #9
  br label %155

155:                                              ; preds = %132, %130, %111, %150
  %156 = add nuw nsw i64 %80, 1
  %157 = add nuw nsw i32 %81, 1
  %158 = icmp eq i64 %156, %67
  br i1 %158, label %68, label %79

159:                                              ; preds = %1, %13, %68
  %160 = phi %"class.v8::internal::compiler::Node"* [ %3, %1 ], [ %18, %13 ], [ %78, %68 ]
  ret %"class.v8::internal::compiler::Node"* %160
}

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph9CloneNodeEPKNS1_4NodeE(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler21EscapeAnalysisReducerD2Ev(%"class.v8::internal::compiler::EscapeAnalysisReducer"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal8compiler21EscapeAnalysisReducerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::Node"** %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"class.v8::internal::compiler::Node"** %8 to i64
  %12 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::compiler::Node"*** %12 to i64*
  store i64 %11, i64* %13, align 8
  br label %14

14:                                               ; preds = %10, %1
  %15 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %15, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base.678"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14, %18
  %19 = phi %"struct.std::__1::__hash_node_base.678"* [ %21, %18 ], [ %16, %14 ]
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %19, i64 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.678"* %21, null
  br i1 %22, label %23, label %18

23:                                               ; preds = %18, %14
  %24 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.678"** null, %"struct.std::__1::__hash_node_base.678"*** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %25, align 8
  %27 = icmp eq %"class.v8::internal::compiler::Node"** %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = ptrtoint %"class.v8::internal::compiler::Node"** %26 to i64
  %30 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %23, %28
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler21EscapeAnalysisReducerD0Ev(%"class.v8::internal::compiler::EscapeAnalysisReducer"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal8compiler21EscapeAnalysisReducerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::Node"** %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"class.v8::internal::compiler::Node"** %8 to i64
  %12 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::compiler::Node"*** %12 to i64*
  store i64 %11, i64* %13, align 8
  br label %14

14:                                               ; preds = %10, %1
  %15 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %15, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base.678"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14, %18
  %19 = phi %"struct.std::__1::__hash_node_base.678"* [ %21, %18 ], [ %16, %14 ]
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %19, i64 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.678"* %21, null
  br i1 %22, label %23, label %18

23:                                               ; preds = %18, %14
  %24 = getelementptr inbounds %"class.v8::internal::compiler::EscapeAnalysisReducer", %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.678"** null, %"struct.std::__1::__hash_node_base.678"*** %24, align 8
  %25 = bitcast %"class.v8::internal::compiler::EscapeAnalysisReducer"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal8compiler21EscapeAnalysisReducer12reducer_nameEv(%"class.v8::internal::compiler::EscapeAnalysisReducer"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.674"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #9
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.674"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #9, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #9
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #9, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #9
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.674"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.674"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %208, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !8

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %7) #9
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, %7
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__hash_node_base.678"**
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.678"** %20, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %22, align 8
  store %"struct.std::__1::__hash_node_base.678"* null, %"struct.std::__1::__hash_node_base.678"** %20, align 8
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = add i64 %1, -1
  %26 = add i64 %1, -2
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %25, %27
  br label %47

31:                                               ; preds = %47, %24
  %32 = phi i64 [ 1, %24 ], [ %61, %47 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.678"* null, %"struct.std::__1::__hash_node_base.678"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !35

42:                                               ; preds = %31, %34, %18
  %43 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.678"* %45, null
  br i1 %46, label %210, label %64

47:                                               ; preds = %47, %29
  %48 = phi i64 [ 1, %29 ], [ %61, %47 ]
  %49 = phi i64 [ %30, %29 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base.678"* null, %"struct.std::__1::__hash_node_base.678"** %51, align 8
  %52 = add nuw nsw i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.678"* null, %"struct.std::__1::__hash_node_base.678"** %54, align 8
  %55 = add nuw nsw i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.678"* null, %"struct.std::__1::__hash_node_base.678"** %57, align 8
  %58 = add nuw i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.678"* null, %"struct.std::__1::__hash_node_base.678"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %31, label %47

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %45, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.678"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !2
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = add i64 %1, -1
  %72 = and i64 %67, %71
  br label %77

73:                                               ; preds = %64
  %74 = icmp ult i64 %67, %1
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %67, %1
  br label %77

77:                                               ; preds = %70, %73, %75
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %67, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base.678"* %43, %"struct.std::__1::__hash_node_base.678"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %45, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.678"* %82, null
  br i1 %83, label %210, label %84

84:                                               ; preds = %77
  %85 = add i64 %1, -1
  br i1 %69, label %86, label %149

86:                                               ; preds = %84, %131
  %87 = phi %"struct.std::__1::__hash_node_base.678"* [ %135, %131 ], [ %82, %84 ]
  %88 = phi i64 [ %133, %131 ], [ %78, %84 ]
  %89 = phi %"struct.std::__1::__hash_node_base.678"* [ %132, %131 ], [ %45, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %87, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.678"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = urem i64 %92, %1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i64 [ %95, %94 ], [ %92, %86 ]
  %98 = icmp eq i64 %97, %88
  br i1 %98, label %131, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %100, i64 %97
  %102 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.678"* %102, null
  br i1 %103, label %130, label %137

104:                                              ; preds = %110
  %105 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %114, i64 2
  %107 = bitcast %"struct.std::__1::__hash_node_base.678"* %106 to %"class.v8::internal::compiler::Node"**
  %108 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, align 8
  %109 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties6EqualsEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %105, %"class.v8::internal::compiler::Node"* %108) #9
  br i1 %109, label %110, label %116

110:                                              ; preds = %141, %104
  %111 = phi %"struct.std::__1::__hash_node_base.678"** [ %113, %104 ], [ %138, %141 ]
  %112 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %112, i64 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %113, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.678"* %114, null
  br i1 %115, label %116, label %104

116:                                              ; preds = %104, %110, %141, %137
  %117 = phi %"struct.std::__1::__hash_node_base.678"* [ %87, %137 ], [ %87, %141 ], [ %112, %110 ], [ %112, %104 ]
  %118 = bitcast %"struct.std::__1::__hash_node_base.678"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::__hash_node_base.678"* %89 to i64*
  store i64 %119, i64* %120, align 8
  %121 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %121, i64 %97
  %123 = bitcast %"struct.std::__1::__hash_node_base.678"** %122 to i64**
  %124 = load i64*, i64** %123, align 8
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %118, align 8
  %126 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %126, i64 %97
  %128 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %128, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.678"* %87, %"struct.std::__1::__hash_node_base.678"** %129, align 8
  br label %131

130:                                              ; preds = %99
  store %"struct.std::__1::__hash_node_base.678"* %89, %"struct.std::__1::__hash_node_base.678"** %101, align 8
  br label %131

131:                                              ; preds = %130, %116, %96
  %132 = phi %"struct.std::__1::__hash_node_base.678"* [ %87, %130 ], [ %89, %116 ], [ %87, %96 ]
  %133 = phi i64 [ %97, %130 ], [ %88, %116 ], [ %88, %96 ]
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %132, i64 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.678"* %135, null
  br i1 %136, label %210, label %86

137:                                              ; preds = %99
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %87, i64 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base.678"* %139, null
  br i1 %140, label %116, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %87, i64 2
  %143 = bitcast %"struct.std::__1::__hash_node_base.678"* %142 to %"class.v8::internal::compiler::Node"**
  %144 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %139, i64 2
  %146 = bitcast %"struct.std::__1::__hash_node_base.678"* %145 to %"class.v8::internal::compiler::Node"**
  %147 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %146, align 8
  %148 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties6EqualsEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %144, %"class.v8::internal::compiler::Node"* %147) #9
  br i1 %148, label %110, label %116

149:                                              ; preds = %84, %202
  %150 = phi %"struct.std::__1::__hash_node_base.678"* [ %206, %202 ], [ %82, %84 ]
  %151 = phi i64 [ %204, %202 ], [ %78, %84 ]
  %152 = phi %"struct.std::__1::__hash_node_base.678"* [ %203, %202 ], [ %45, %84 ]
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %150, i64 1
  %154 = bitcast %"struct.std::__1::__hash_node_base.678"* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %85
  %157 = icmp eq i64 %156, %151
  br i1 %157, label %202, label %158

158:                                              ; preds = %149
  %159 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %159, i64 %156
  %161 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %160, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base.678"* %161, null
  br i1 %162, label %175, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %150, i64 0, i32 0
  %165 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %164, align 8
  %166 = icmp eq %"struct.std::__1::__hash_node_base.678"* %165, null
  br i1 %166, label %188, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %150, i64 2
  %169 = bitcast %"struct.std::__1::__hash_node_base.678"* %168 to %"class.v8::internal::compiler::Node"**
  %170 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, align 8
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %165, i64 2
  %172 = bitcast %"struct.std::__1::__hash_node_base.678"* %171 to %"class.v8::internal::compiler::Node"**
  %173 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %172, align 8
  %174 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties6EqualsEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %170, %"class.v8::internal::compiler::Node"* %173) #9
  br i1 %174, label %182, label %188

175:                                              ; preds = %158
  store %"struct.std::__1::__hash_node_base.678"* %152, %"struct.std::__1::__hash_node_base.678"** %160, align 8
  br label %202

176:                                              ; preds = %182
  %177 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, align 8
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %186, i64 2
  %179 = bitcast %"struct.std::__1::__hash_node_base.678"* %178 to %"class.v8::internal::compiler::Node"**
  %180 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, align 8
  %181 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties6EqualsEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %177, %"class.v8::internal::compiler::Node"* %180) #9
  br i1 %181, label %182, label %188

182:                                              ; preds = %167, %176
  %183 = phi %"struct.std::__1::__hash_node_base.678"** [ %185, %176 ], [ %164, %167 ]
  %184 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %183, align 8
  %185 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %184, i64 0, i32 0
  %186 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %185, align 8
  %187 = icmp eq %"struct.std::__1::__hash_node_base.678"* %186, null
  br i1 %187, label %188, label %176

188:                                              ; preds = %182, %176, %167, %163
  %189 = phi %"struct.std::__1::__hash_node_base.678"* [ %150, %163 ], [ %150, %167 ], [ %184, %176 ], [ %184, %182 ]
  %190 = bitcast %"struct.std::__1::__hash_node_base.678"* %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"struct.std::__1::__hash_node_base.678"* %152 to i64*
  store i64 %191, i64* %192, align 8
  %193 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %194 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %193, i64 %156
  %195 = bitcast %"struct.std::__1::__hash_node_base.678"** %194 to i64**
  %196 = load i64*, i64** %195, align 8
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %190, align 8
  %198 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %198, i64 %156
  %200 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %199, align 8
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %200, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.678"* %150, %"struct.std::__1::__hash_node_base.678"** %201, align 8
  br label %202

202:                                              ; preds = %149, %188, %175
  %203 = phi %"struct.std::__1::__hash_node_base.678"* [ %150, %175 ], [ %152, %188 ], [ %150, %149 ]
  %204 = phi i64 [ %156, %175 ], [ %151, %188 ], [ %151, %149 ]
  %205 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %203, i64 0, i32 0
  %206 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %205, align 8
  %207 = icmp eq %"struct.std::__1::__hash_node_base.678"* %206, null
  br i1 %207, label %210, label %149

208:                                              ; preds = %2
  %209 = bitcast %"class.std::__1::__hash_table.674"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 16, i1 false)
  br label %210

210:                                              ; preds = %202, %131, %77, %42, %208
  ret void
}

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties6EqualsEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #5

declare zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.709"*, i64, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.709", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %159

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = sub i64 %1, %6
  %13 = icmp ult i64 %11, %12
  %14 = sub i64 %11, %12
  %15 = icmp ugt i64 %6, %14
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %0, i64 0, i32 0
  %19 = load i64*, i64** %18, align 8, !noalias !36
  %20 = lshr i64 %6, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = trunc i64 %6 to i32
  %23 = and i32 %22, 63
  %24 = ptrtoint i64* %21 to i64
  store i64 %1, i64* %5, align 8
  br label %86

25:                                               ; preds = %8
  %26 = bitcast %"class.std::__1::vector.709"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %0, i64 0, i32 2, i32 1, i32 0
  %28 = bitcast %"class.v8::internal::ZoneAllocator.712"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %4, i64 0, i32 2, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %4, i64 0, i32 2, i32 1
  %32 = bitcast %"struct.std::__1::__compressed_pair_elem.711"* %31 to i64*
  %33 = bitcast %"class.std::__1::vector.709"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 24, i1 false)
  store i64 %29, i64* %32, align 8
  %34 = icmp ugt i64 %1, 17179869120
  br i1 %34, label %35, label %37

35:                                               ; preds = %25
  %36 = bitcast %"class.std::__1::vector.709"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #10
  unreachable

37:                                               ; preds = %25
  %38 = icmp ult i64 %11, 8589934560
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = shl i64 %10, 7
  %41 = add nuw nsw i64 %1, 63
  %42 = and i64 %41, -64
  %43 = icmp ult i64 %40, %42
  %44 = select i1 %43, i64 %42, i64 %40
  br label %45

45:                                               ; preds = %39, %37
  %46 = phi i64 [ %44, %39 ], [ 17179869120, %37 ]
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm(%"class.std::__1::vector.709"* nonnull %4, i64 %46)
  %47 = load i64, i64* %5, align 8
  %48 = add i64 %47, %12
  %49 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %4, i64 0, i32 1
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %0, i64 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = bitcast %"class.std::__1::vector.709"* %4 to i64*
  %53 = load i64, i64* %52, align 16, !noalias !41
  %54 = icmp sgt i64 %47, 0
  br i1 %54, label %55, label %76

55:                                               ; preds = %45
  %56 = inttoptr i64 %53 to i8*
  %57 = lshr i64 %47, 6
  %58 = bitcast i64* %51 to i8*
  %59 = shl nuw nsw i64 %57, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %58, i64 %59, i1 false) #9, !noalias !46
  %60 = and i64 %47, 63
  %61 = inttoptr i64 %53 to i64*
  %62 = getelementptr inbounds i64, i64* %61, i64 %57
  %63 = ptrtoint i64* %62 to i64
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds i64, i64* %51, i64 %57
  %67 = sub nuw nsw i64 64, %60
  %68 = lshr i64 -1, %67
  %69 = load i64, i64* %66, align 8, !noalias !49
  %70 = and i64 %69, %68
  %71 = xor i64 %68, -1
  %72 = load i64, i64* %62, align 8, !noalias !46
  %73 = and i64 %72, %71
  %74 = or i64 %73, %70
  store i64 %74, i64* %62, align 8, !noalias !46
  %75 = trunc i64 %60 to i32
  br label %76

76:                                               ; preds = %55, %45, %65
  %77 = phi i32 [ %75, %65 ], [ 0, %55 ], [ 0, %45 ]
  %78 = phi i64 [ %63, %65 ], [ %63, %55 ], [ %53, %45 ]
  %79 = bitcast %"class.std::__1::vector.709"* %4 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 16
  %81 = bitcast %"class.std::__1::vector.709"* %0 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8
  %83 = bitcast %"class.std::__1::vector.709"* %0 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8
  %84 = bitcast %"class.std::__1::vector.709"* %4 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %84, align 16
  %85 = load i64, i64* %30, align 16
  store i64 %85, i64* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #9
  br label %86

86:                                               ; preds = %76, %17
  %87 = phi i64 [ %78, %76 ], [ %24, %17 ]
  %88 = phi i32 [ %77, %76 ], [ %23, %17 ]
  %89 = inttoptr i64 %87 to i64*
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %88, 0
  br i1 %2, label %93, label %125

93:                                               ; preds = %91
  br i1 %92, label %94, label %96

94:                                               ; preds = %93
  %95 = inttoptr i64 %87 to i8*
  br label %111

96:                                               ; preds = %93
  %97 = sub nuw nsw i32 64, %88
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %12, %98
  %100 = select i1 %99, i64 %12, i64 %98
  %101 = zext i32 %88 to i64
  %102 = shl i64 -1, %101
  %103 = sub nsw i64 %98, %100
  %104 = lshr i64 -1, %103
  %105 = and i64 %104, %102
  %106 = load i64, i64* %89, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %89, align 8
  %108 = sub i64 %12, %100
  %109 = getelementptr inbounds i64, i64* %89, i64 1
  %110 = bitcast i64* %109 to i8*
  br label %111

111:                                              ; preds = %96, %94
  %112 = phi i64* [ %89, %94 ], [ %109, %96 ]
  %113 = phi i8* [ %95, %94 ], [ %110, %96 ]
  %114 = phi i64 [ %12, %94 ], [ %108, %96 ]
  %115 = lshr i64 %114, 6
  %116 = shl nuw nsw i64 %115, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 -1, i64 %116, i1 false) #9
  %117 = and i64 %114, 63
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %160, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds i64, i64* %112, i64 %115
  %121 = sub nuw nsw i64 64, %117
  %122 = lshr i64 -1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %123, %122
  store i64 %124, i64* %120, align 8
  br label %160

125:                                              ; preds = %91
  br i1 %92, label %126, label %128

126:                                              ; preds = %125
  %127 = inttoptr i64 %87 to i8*
  br label %144

128:                                              ; preds = %125
  %129 = sub nuw nsw i32 64, %88
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %12, %130
  %132 = select i1 %131, i64 %12, i64 %130
  %133 = zext i32 %88 to i64
  %134 = shl i64 -1, %133
  %135 = sub nsw i64 %130, %132
  %136 = lshr i64 -1, %135
  %137 = and i64 %136, %134
  %138 = xor i64 %137, -1
  %139 = load i64, i64* %89, align 8
  %140 = and i64 %139, %138
  store i64 %140, i64* %89, align 8
  %141 = sub i64 %12, %132
  %142 = getelementptr inbounds i64, i64* %89, i64 1
  %143 = bitcast i64* %142 to i8*
  br label %144

144:                                              ; preds = %128, %126
  %145 = phi i64* [ %89, %126 ], [ %142, %128 ]
  %146 = phi i8* [ %127, %126 ], [ %143, %128 ]
  %147 = phi i64 [ %12, %126 ], [ %141, %128 ]
  %148 = lshr i64 %147, 6
  %149 = shl nuw nsw i64 %148, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 %149, i1 false) #9
  %150 = and i64 %147, 63
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds i64, i64* %145, i64 %148
  %154 = sub nuw nsw i64 64, %150
  %155 = lshr i64 -1, %154
  %156 = xor i64 %155, -1
  %157 = load i64, i64* %153, align 8
  %158 = and i64 %157, %156
  store i64 %158, i64* %153, align 8
  br label %160

159:                                              ; preds = %3
  store i64 %1, i64* %5, align 8
  br label %160

160:                                              ; preds = %152, %144, %119, %111, %86, %159
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm(%"class.std::__1::vector.709"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.709", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %63

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.709"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %0, i64 0, i32 2, i32 1, i32 0
  %13 = bitcast %"class.v8::internal::ZoneAllocator.712"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %3, i64 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %3, i64 0, i32 2, i32 1
  %17 = bitcast %"struct.std::__1::__compressed_pair_elem.711"* %16 to i64*
  %18 = bitcast %"class.std::__1::vector.709"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 24, i1 false)
  store i64 %14, i64* %17, align 8
  %19 = icmp ugt i64 %1, 17179869120
  %20 = inttoptr i64 %14 to %"class.v8::internal::Zone"*
  br i1 %19, label %21, label %23

21:                                               ; preds = %10
  %22 = bitcast %"class.std::__1::vector.709"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #10
  unreachable

23:                                               ; preds = %10
  %24 = add nsw i64 %1, -1
  %25 = lshr i64 %24, 6
  %26 = add nuw nsw i64 %25, 1
  %27 = shl nuw nsw i64 %26, 3
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ugt i64 %27, %32
  br i1 %33, label %34, label %36, !prof !8

34:                                               ; preds = %23
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %20, i64 %27) #9
  br label %38

36:                                               ; preds = %23
  %37 = add i64 %29, %27
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %34, %36
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to i64*
  %41 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %3, i64 0, i32 0
  store i64* %40, i64** %41, align 16
  %42 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %3, i64 0, i32 1
  store i64 0, i64* %42, align 8
  store i64 %26, i64* %15, align 16
  %43 = bitcast %"class.std::__1::vector.709"* %0 to i64*
  %44 = load i64, i64* %43, align 8, !noalias !52
  %45 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %44, i64* %45, align 8, !alias.scope !52
  %46 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %46, align 8, !alias.scope !52
  %47 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %0, i64 0, i32 1
  %48 = load i64, i64* %47, align 8, !noalias !57
  %49 = inttoptr i64 %44 to i64*
  %50 = lshr i64 %48, 6
  %51 = getelementptr inbounds i64, i64* %49, i64 %50
  %52 = trunc i64 %48 to i32
  %53 = and i32 %52, 63
  %54 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %51, i64** %54, align 8, !alias.scope !60
  %55 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %53, i32* %55, align 8, !alias.scope !60
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_(%"class.std::__1::vector.709"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %56 = load i64, i64* %43, align 8
  %57 = bitcast %"class.std::__1::vector.709"* %3 to i64*
  %58 = bitcast %"class.std::__1::vector.709"* %3 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 16
  store i64 %56, i64* %57, align 16
  %60 = load i64, i64* %47, align 8
  %61 = bitcast %"class.std::__1::vector.709"* %0 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %61, align 8
  store i64 %60, i64* %42, align 8
  %62 = load i64, i64* %15, align 16
  store i64 %62, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #9
  br label %63

63:                                               ; preds = %38, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_(%"class.std::__1::vector.709"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.709", %"class.std::__1::vector.709"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !63
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #9
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !66
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !66
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !66
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #9, !noalias !66
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !66
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !66
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !66
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !69
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !69
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !72
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !72
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !72
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !72
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !72
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !72
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #9
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #9
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.678"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.674"*, %"class.v8::internal::compiler::Node"** dereferenceable(8), %"class.v8::internal::compiler::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, align 8
  %5 = tail call i64 @_ZN2v88internal8compiler14NodeProperties8HashCodeEPNS1_4NodeE(%"class.v8::internal::compiler::Node"* %4) #9
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %70, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #9, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ult i64 %5, %7
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.678"* %24, null
  br i1 %25, label %70, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br i1 %11, label %28, label %51

28:                                               ; preds = %26, %45
  %29 = phi %"struct.std::__1::__hash_node_base.678"* [ %31, %45 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.678"* %31, null
  br i1 %32, label %70, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.678"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = icmp ult i64 %36, %7
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %36, %7
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %36, %38 ]
  %44 = icmp eq i64 %43, %20
  br i1 %44, label %45, label %70

45:                                               ; preds = %42, %33
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %31, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base.678"* %46 to %"class.v8::internal::compiler::Node"**
  %48 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %47, align 8
  %49 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, align 8
  %50 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties6EqualsEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %48, %"class.v8::internal::compiler::Node"* %49) #9
  br i1 %50, label %172, label %28

51:                                               ; preds = %26, %64
  %52 = phi %"struct.std::__1::__hash_node_base.678"* [ %54, %64 ], [ %24, %26 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %52, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.678"* %54, null
  br i1 %55, label %70, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %54, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.678"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %5
  %61 = and i64 %59, %27
  %62 = icmp eq i64 %61, %20
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %70

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %54, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.678"* %65 to %"class.v8::internal::compiler::Node"**
  %67 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %66, align 8
  %68 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, align 8
  %69 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties6EqualsEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %67, %"class.v8::internal::compiler::Node"* %68) #9
  br i1 %69, label %172, label %51

70:                                               ; preds = %56, %51, %42, %28, %19, %3
  %71 = phi i64 [ %20, %19 ], [ undef, %3 ], [ %20, %28 ], [ %20, %42 ], [ %20, %51 ], [ %20, %56 ]
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %73 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %72, align 8, !noalias !73
  %74 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %73, i64 0, i32 2
  %75 = load i64, i64* %74, align 8, !noalias !73
  %76 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %73, i64 0, i32 3
  %77 = load i64, i64* %76, align 8, !noalias !73
  %78 = sub i64 %77, %75
  %79 = icmp ult i64 %78, 24
  br i1 %79, label %80, label %82, !prof !8

80:                                               ; preds = %70
  %81 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %73, i64 24) #9, !noalias !73
  br label %84

82:                                               ; preds = %70
  %83 = add i64 %75, 24
  store i64 %83, i64* %74, align 8, !noalias !73
  br label %84

84:                                               ; preds = %80, %82
  %85 = phi i64 [ %81, %80 ], [ %75, %82 ]
  %86 = inttoptr i64 %85 to %"struct.std::__1::__hash_node"*
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 2
  %88 = bitcast %"class.v8::internal::compiler::Node"** %2 to i64*
  %89 = load i64, i64* %88, align 8, !noalias !73
  %90 = bitcast %"class.v8::internal::compiler::Node"** %87 to i64*
  store i64 %89, i64* %90, align 8, !noalias !73
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 1
  store i64 %5, i64* %91, align 8, !noalias !73
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.678"* null, %"struct.std::__1::__hash_node_base.678"** %92, align 8, !noalias !73
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 1
  %96 = uitofp i64 %95 to float
  %97 = uitofp i64 %7 to float
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 3, i32 0, i32 0
  %99 = load float, float* %98, align 4
  %100 = fmul float %99, %97
  %101 = fcmp olt float %100, %96
  %102 = or i1 %8, %101
  br i1 %102, label %103, label %126

103:                                              ; preds = %84
  %104 = shl i64 %7, 1
  %105 = icmp ult i64 %7, 3
  %106 = tail call i64 @llvm.ctpop.i64(i64 %7) #9, !range !2
  %107 = icmp ugt i64 %106, 1
  %108 = or i1 %105, %107
  %109 = zext i1 %108 to i64
  %110 = or i64 %104, %109
  %111 = fdiv float %96, %99
  %112 = tail call float @llvm.ceil.f32(float %111) #9
  %113 = fptoui float %112 to i64
  %114 = icmp ult i64 %110, %113
  %115 = select i1 %114, i64 %113, i64 %110
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.674"* %0, i64 %115)
  %116 = load i64, i64* %6, align 8
  %117 = tail call i64 @llvm.ctpop.i64(i64 %116) #9, !range !2
  %118 = icmp ugt i64 %117, 1
  br i1 %118, label %122, label %119

119:                                              ; preds = %103
  %120 = add i64 %116, -1
  %121 = and i64 %120, %5
  br label %126

122:                                              ; preds = %103
  %123 = icmp ult i64 %5, %116
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %5, %116
  br label %126

126:                                              ; preds = %124, %122, %119, %84
  %127 = phi i64 [ %7, %84 ], [ %116, %119 ], [ %116, %122 ], [ %116, %124 ]
  %128 = phi i64 [ %71, %84 ], [ %121, %119 ], [ %5, %122 ], [ %125, %124 ]
  %129 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %130, i64 %128
  %132 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.678"* %132, null
  br i1 %133, label %134, label %162

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 1, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %135, i64 0, i32 0
  %137 = bitcast %"struct.std::__1::__hash_node_base.678"* %135 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = inttoptr i64 %85 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.678"* %140, %"struct.std::__1::__hash_node_base.678"** %136, align 8
  %141 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %129, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %141, i64 %128
  store %"struct.std::__1::__hash_node_base.678"* %135, %"struct.std::__1::__hash_node_base.678"** %142, align 8
  %143 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %92, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.678"* %143, null
  br i1 %144, label %168, label %145

145:                                              ; preds = %134
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %143, i64 1
  %147 = bitcast %"struct.std::__1::__hash_node_base.678"* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = tail call i64 @llvm.ctpop.i64(i64 %127) #9, !range !2
  %150 = icmp ugt i64 %149, 1
  br i1 %150, label %154, label %151

151:                                              ; preds = %145
  %152 = add i64 %127, -1
  %153 = and i64 %148, %152
  br label %158

154:                                              ; preds = %145
  %155 = icmp ult i64 %148, %127
  br i1 %155, label %158, label %156

156:                                              ; preds = %154
  %157 = urem i64 %148, %127
  br label %158

158:                                              ; preds = %151, %154, %156
  %159 = phi i64 [ %153, %151 ], [ %157, %156 ], [ %148, %154 ]
  %160 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %129, align 8
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %160, i64 %159
  store %"struct.std::__1::__hash_node_base.678"* %140, %"struct.std::__1::__hash_node_base.678"** %161, align 8
  br label %168

162:                                              ; preds = %126
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %132, i64 0, i32 0
  %164 = bitcast %"struct.std::__1::__hash_node_base.678"* %132 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = inttoptr i64 %85 to i64*
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.678"* %167, %"struct.std::__1::__hash_node_base.678"** %163, align 8
  br label %168

168:                                              ; preds = %134, %158, %162
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 0
  %170 = load i64, i64* %93, align 8
  %171 = add i64 %170, 1
  store i64 %171, i64* %93, align 8
  br label %172

172:                                              ; preds = %64, %45, %168
  %173 = phi i8 [ 1, %168 ], [ 0, %45 ], [ 0, %64 ]
  %174 = phi %"struct.std::__1::__hash_node_base.678"* [ %169, %168 ], [ %31, %45 ], [ %54, %64 ]
  %175 = insertvalue { %"struct.std::__1::__hash_node_base.678"*, i8 } undef, %"struct.std::__1::__hash_node_base.678"* %174, 0
  %176 = insertvalue { %"struct.std::__1::__hash_node_base.678"*, i8 } %175, i8 %173, 1
  ret { %"struct.std::__1::__hash_node_base.678"*, i8 } %176
}

declare i64 @_ZN2v88internal8compiler14NodeProperties8HashCodeEPNS1_4NodeE(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %7) #9
  %8 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.667"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.v8::internal::compiler::Node"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.v8::internal::compiler::Node"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.v8::internal::compiler::Node"**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %13, i64 %18
  %20 = bitcast %"class.v8::internal::compiler::Node"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #9
  %26 = ptrtoint %"class.v8::internal::compiler::Node"** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  ret void

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.667"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 268435455
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.667"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 134217727
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %65, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 268435455, %38 ]
  %49 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %49, align 8
  %51 = shl i64 %48, 3
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 3
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %55, %53
  %57 = icmp ugt i64 %51, %56
  br i1 %57, label %58, label %60, !prof !8

58:                                               ; preds = %47
  %59 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %50, i64 %51) #9
  br label %62

60:                                               ; preds = %47
  %61 = add i64 %53, %51
  store i64 %61, i64* %52, align 8
  br label %62

62:                                               ; preds = %60, %58
  %63 = phi i64 [ %59, %58 ], [ %53, %60 ]
  %64 = inttoptr i64 %63 to %"class.v8::internal::compiler::Node"**
  br label %65

65:                                               ; preds = %62, %42
  %66 = phi i64 [ %48, %62 ], [ 0, %42 ]
  %67 = phi %"class.v8::internal::compiler::Node"** [ %64, %62 ], [ null, %42 ]
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 %33
  %69 = bitcast %"class.v8::internal::compiler::Node"** %68 to i8*
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 %66
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 %1
  %72 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 %72, i1 false) #9
  %73 = ptrtoint %"class.v8::internal::compiler::Node"** %70 to i64
  %74 = ptrtoint %"class.v8::internal::compiler::Node"** %71 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 0, i32 0
  %76 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %75, align 8
  %77 = ptrtoint %"class.v8::internal::compiler::Node"** %76 to i64
  %78 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %6, align 8
  %79 = icmp eq %"class.v8::internal::compiler::Node"** %78, %76
  br i1 %79, label %249, label %80

80:                                               ; preds = %65
  %81 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  %82 = ptrtoint %"class.v8::internal::compiler::Node"** %81 to i64
  %83 = sub i64 %82, %77
  %84 = lshr i64 %83, 3
  %85 = add nuw nsw i64 %84, 1
  %86 = icmp ult i64 %85, 4
  br i1 %86, label %179, label %87

87:                                               ; preds = %80
  %88 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  %89 = ptrtoint %"class.v8::internal::compiler::Node"** %88 to i64
  %90 = sub i64 %89, %77
  %91 = lshr i64 %90, 3
  %92 = xor i64 %91, -1
  %93 = add nsw i64 %33, %92
  %94 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 %93
  %95 = xor i64 %91, -1
  %96 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 %95
  %97 = icmp ult %"class.v8::internal::compiler::Node"** %94, %78
  %98 = icmp ult %"class.v8::internal::compiler::Node"** %96, %68
  %99 = and i1 %97, %98
  br i1 %99, label %179, label %100

100:                                              ; preds = %87
  %101 = and i64 %85, 4611686018427387900
  %102 = sub nsw i64 0, %101
  %103 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 %102
  %104 = sub nsw i64 0, %101
  %105 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 %104
  %106 = add nsw i64 %101, -4
  %107 = lshr exact i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = and i64 %108, 1
  %110 = icmp eq i64 %106, 0
  br i1 %110, label %157, label %111

111:                                              ; preds = %100
  %112 = sub nuw nsw i64 %108, %109
  %113 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 -1
  %114 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  %115 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 -1
  %116 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  br label %117

117:                                              ; preds = %117, %111
  %118 = phi i64 [ 0, %111 ], [ %152, %117 ]
  %119 = phi i64 [ %112, %111 ], [ %153, %117 ]
  %120 = sub i64 0, %118
  %121 = sub i64 0, %118
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %113, i64 %120
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %114, i64 %121
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %123, i64 -1
  %125 = bitcast %"class.v8::internal::compiler::Node"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !76
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %123, i64 -2
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 -1
  %129 = bitcast %"class.v8::internal::compiler::Node"** %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !76
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 -1
  %132 = bitcast %"class.v8::internal::compiler::Node"** %131 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %132, align 8, !alias.scope !79, !noalias !76
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 -2
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, i64 -1
  %135 = bitcast %"class.v8::internal::compiler::Node"** %134 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %135, align 8, !alias.scope !79, !noalias !76
  %136 = sub nuw nsw i64 -4, %118
  %137 = sub nuw nsw i64 -4, %118
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %115, i64 %136
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %116, i64 %137
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %139, i64 -1
  %141 = bitcast %"class.v8::internal::compiler::Node"** %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !76
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %139, i64 -2
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, i64 -1
  %145 = bitcast %"class.v8::internal::compiler::Node"** %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !alias.scope !76
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, i64 -1
  %148 = bitcast %"class.v8::internal::compiler::Node"** %147 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %148, align 8, !alias.scope !79, !noalias !76
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, i64 -2
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %149, i64 -1
  %151 = bitcast %"class.v8::internal::compiler::Node"** %150 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %151, align 8, !alias.scope !79, !noalias !76
  %152 = add i64 %118, 8
  %153 = add i64 %119, -2
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %117, !llvm.loop !81

155:                                              ; preds = %117
  %156 = sub nuw nsw i64 -8, %118
  br label %157

157:                                              ; preds = %155, %100
  %158 = phi i64 [ 0, %100 ], [ %156, %155 ]
  %159 = icmp eq i64 %109, 0
  br i1 %159, label %177, label %160

160:                                              ; preds = %157
  %161 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 -1
  %162 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %161, i64 %158
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 %158
  %165 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 -1
  %166 = bitcast %"class.v8::internal::compiler::Node"** %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !76
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 -2
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -1
  %170 = bitcast %"class.v8::internal::compiler::Node"** %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !76
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -1
  %173 = bitcast %"class.v8::internal::compiler::Node"** %172 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %173, align 8, !alias.scope !79, !noalias !76
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -2
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %174, i64 -1
  %176 = bitcast %"class.v8::internal::compiler::Node"** %175 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %176, align 8, !alias.scope !79, !noalias !76
  br label %177

177:                                              ; preds = %157, %160
  %178 = icmp eq i64 %85, %101
  br i1 %178, label %249, label %179

179:                                              ; preds = %177, %87, %80
  %180 = phi %"class.v8::internal::compiler::Node"** [ %68, %87 ], [ %68, %80 ], [ %103, %177 ]
  %181 = phi %"class.v8::internal::compiler::Node"** [ %78, %87 ], [ %78, %80 ], [ %105, %177 ]
  %182 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 -1
  %183 = ptrtoint %"class.v8::internal::compiler::Node"** %182 to i64
  %184 = sub i64 %183, %77
  %185 = lshr i64 %184, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = and i64 %186, 7
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %200, label %189

189:                                              ; preds = %179, %189
  %190 = phi %"class.v8::internal::compiler::Node"** [ %193, %189 ], [ %180, %179 ]
  %191 = phi %"class.v8::internal::compiler::Node"** [ %194, %189 ], [ %181, %179 ]
  %192 = phi i64 [ %198, %189 ], [ %187, %179 ]
  %193 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %190, i64 -1
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %191, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::Node"** %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::Node"** %193 to i64*
  store i64 %196, i64* %197, align 8
  %198 = add i64 %192, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %189, !llvm.loop !82

200:                                              ; preds = %189, %179
  %201 = phi %"class.v8::internal::compiler::Node"** [ undef, %179 ], [ %193, %189 ]
  %202 = phi %"class.v8::internal::compiler::Node"** [ %180, %179 ], [ %193, %189 ]
  %203 = phi %"class.v8::internal::compiler::Node"** [ %181, %179 ], [ %194, %189 ]
  %204 = icmp ult i64 %184, 56
  br i1 %204, label %249, label %205

205:                                              ; preds = %200, %205
  %206 = phi %"class.v8::internal::compiler::Node"** [ %243, %205 ], [ %202, %200 ]
  %207 = phi %"class.v8::internal::compiler::Node"** [ %244, %205 ], [ %203, %200 ]
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -1
  %209 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -1
  %210 = bitcast %"class.v8::internal::compiler::Node"** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"class.v8::internal::compiler::Node"** %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -2
  %214 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -2
  %215 = bitcast %"class.v8::internal::compiler::Node"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"class.v8::internal::compiler::Node"** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -3
  %219 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -3
  %220 = bitcast %"class.v8::internal::compiler::Node"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.v8::internal::compiler::Node"** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -4
  %224 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -4
  %225 = bitcast %"class.v8::internal::compiler::Node"** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.v8::internal::compiler::Node"** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -5
  %229 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -5
  %230 = bitcast %"class.v8::internal::compiler::Node"** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"class.v8::internal::compiler::Node"** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -6
  %234 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -6
  %235 = bitcast %"class.v8::internal::compiler::Node"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"class.v8::internal::compiler::Node"** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -7
  %239 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -7
  %240 = bitcast %"class.v8::internal::compiler::Node"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.v8::internal::compiler::Node"** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -8
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -8
  %245 = bitcast %"class.v8::internal::compiler::Node"** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.v8::internal::compiler::Node"** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = icmp eq %"class.v8::internal::compiler::Node"** %244, %76
  br i1 %248, label %249, label %205, !llvm.loop !83

249:                                              ; preds = %200, %205, %177, %65
  %250 = phi %"class.v8::internal::compiler::Node"** [ %68, %65 ], [ %103, %177 ], [ %201, %200 ], [ %243, %205 ]
  %251 = ptrtoint %"class.v8::internal::compiler::Node"** %250 to i64
  store i64 %251, i64* %30, align 8
  store i64 %74, i64* %7, align 8
  store i64 %73, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.678"* @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.674"*, %"class.v8::internal::compiler::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, align 8
  %4 = tail call i64 @_ZN2v88internal8compiler14NodeProperties8HashCodeEPNS1_4NodeE(%"class.v8::internal::compiler::Node"* %3) #9
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %73, label %8

8:                                                ; preds = %2
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #9, !range !2
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ult i64 %4, %6
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.674", %"class.std::__1::__hash_table.674"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.678"**, %"struct.std::__1::__hash_node_base.678"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.678"* %23, null
  br i1 %24, label %73, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.678"* %27, null
  br i1 %28, label %73, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  br i1 %10, label %31, label %54

31:                                               ; preds = %29, %50
  %32 = phi %"struct.std::__1::__hash_node_base.678"* [ %52, %50 ], [ %27, %29 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %32, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base.678"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %44, label %37

37:                                               ; preds = %31
  %38 = icmp ult i64 %35, %6
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = urem i64 %35, %6
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %40, %39 ], [ %35, %37 ]
  %43 = icmp eq i64 %42, %19
  br i1 %43, label %50, label %73

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %32, i64 2
  %46 = bitcast %"struct.std::__1::__hash_node_base.678"* %45 to %"class.v8::internal::compiler::Node"**
  %47 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %46, align 8
  %48 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, align 8
  %49 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties6EqualsEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %47, %"class.v8::internal::compiler::Node"* %48) #9
  br i1 %49, label %73, label %50

50:                                               ; preds = %44, %41
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %32, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.678"* %52, null
  br i1 %53, label %73, label %31

54:                                               ; preds = %29, %69
  %55 = phi %"struct.std::__1::__hash_node_base.678"* [ %71, %69 ], [ %27, %29 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %55, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.678"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %4
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = and i64 %58, %30
  %62 = icmp eq i64 %61, %19
  br i1 %62, label %69, label %73

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %55, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.678"* %64 to %"class.v8::internal::compiler::Node"**
  %66 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %65, align 8
  %67 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, align 8
  %68 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties6EqualsEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %66, %"class.v8::internal::compiler::Node"* %67) #9
  br i1 %68, label %73, label %69

69:                                               ; preds = %60, %63
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.678", %"struct.std::__1::__hash_node_base.678"* %55, i64 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.678"*, %"struct.std::__1::__hash_node_base.678"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.678"* %71, null
  br i1 %72, label %73, label %54

73:                                               ; preds = %63, %69, %60, %44, %50, %41, %25, %2, %18
  %74 = phi %"struct.std::__1::__hash_node_base.678"* [ null, %18 ], [ null, %2 ], [ null, %25 ], [ %32, %44 ], [ null, %50 ], [ null, %41 ], [ %55, %63 ], [ null, %69 ], [ null, %60 ]
  ret %"struct.std::__1::__hash_node_base.678"* %74
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_"}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !15}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !15}
!25 = distinct !{!25, !17}
!26 = distinct !{!26, !15}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !15}
!33 = distinct !{!33, !17}
!34 = distinct !{!34, !15}
!35 = distinct !{!35, !17}
!36 = !{!37, !39}
!37 = distinct !{!37, !38, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!39 = distinct !{!39, !40, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv"}
!41 = !{!42, !44}
!42 = distinct !{!42, !43, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!44 = distinct !{!44, !45, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!49 = !{!47, !50}
!50 = distinct !{!50, !51, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!52 = !{!53, !55}
!53 = distinct !{!53, !54, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!54 = distinct !{!54, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!55 = distinct !{!55, !56, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv"}
!60 = !{!61, !58}
!61 = distinct !{!61, !62, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!62 = distinct !{!62, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!65 = distinct !{!65, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!68 = distinct !{!68, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!69 = !{!67, !70}
!70 = distinct !{!70, !71, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!71 = distinct !{!71, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!72 = !{!70}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE21__construct_node_hashIRKS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!75 = distinct !{!75, !"_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS3_13NodeHashCache12NodeHashCodeENS6_10NodeEqualsENS2_13ZoneAllocatorIS5_EEE21__construct_node_hashIRKS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!76 = !{!77}
!77 = distinct !{!77, !78}
!78 = distinct !{!78, !"LVerDomain"}
!79 = !{!80}
!80 = distinct !{!80, !78}
!81 = distinct !{!81, !15}
!82 = distinct !{!82, !17}
!83 = distinct !{!83, !15}
