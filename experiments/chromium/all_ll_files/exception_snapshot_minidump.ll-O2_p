; ModuleID = '../../third_party/crashpad/crashpad/snapshot/minidump/exception_snapshot_minidump.cc'
source_filename = "../../third_party/crashpad/crashpad/snapshot/minidump/exception_snapshot_minidump.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.crashpad::internal::ExceptionSnapshotMinidump" = type <{ %"class.crashpad::ExceptionSnapshot", %struct.MINIDUMP_EXCEPTION_STREAM, %"class.crashpad::internal::MinidumpContextConverter", %"class.std::__1::vector.11", %"class.crashpad::InitializationState", [7 x i8] }>
%"class.crashpad::ExceptionSnapshot" = type { i32 (...)** }
%struct.MINIDUMP_EXCEPTION_STREAM = type { i32, i32, %struct.MINIDUMP_EXCEPTION, %struct.MINIDUMP_LOCATION_DESCRIPTOR }
%struct.MINIDUMP_EXCEPTION = type { i32, i32, i64, i64, i32, i32, [15 x i64] }
%struct.MINIDUMP_LOCATION_DESCRIPTOR = type { i32, i32 }
%"class.crashpad::internal::MinidumpContextConverter" = type { %"struct.crashpad::CPUContext", %"class.std::__1::vector", [0 x i8] }
%"struct.crashpad::CPUContext" = type { i32, %union.anon }
%union.anon = type { %"struct.crashpad::CPUContextX86"* }
%"struct.crashpad::CPUContextX86" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, %"struct.crashpad::CPUContextX86::Fxsave", i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.crashpad::CPUContextX86::Fxsave" = type { i16, i16, i8, i8, i16, i32, i16, i16, i32, i16, i16, i32, i32, [8 x %"union.crashpad::CPUContextX86::X87OrMMXRegister"], [8 x [16 x i8]], [176 x i8], [48 x i8] }
%"union.crashpad::CPUContextX86::X87OrMMXRegister" = type { %struct.anon }
%struct.anon = type { [10 x i8], [6 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { i64*, i64*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64* }
%"class.crashpad::InitializationState" = type { i8 }
%"class.crashpad::FileReaderInterface" = type { %"class.crashpad::FileSeekerInterface" }
%"class.crashpad::FileSeekerInterface" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.crashpad::MemorySnapshot"**, %"class.crashpad::MemorySnapshot"**, %"class.std::__1::__compressed_pair.20" }
%"class.crashpad::MemorySnapshot" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.crashpad::MemorySnapshot"** }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@_ZTVN8crashpad8internal25ExceptionSnapshotMinidumpE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::internal::ExceptionSnapshotMinidump"*)* @_ZN8crashpad8internal25ExceptionSnapshotMinidumpD2Ev to i8*), i8* bitcast (void (%"class.crashpad::internal::ExceptionSnapshotMinidump"*)* @_ZN8crashpad8internal25ExceptionSnapshotMinidumpD0Ev to i8*), i8* bitcast (%"struct.crashpad::CPUContext"* (%"class.crashpad::internal::ExceptionSnapshotMinidump"*)* @_ZNK8crashpad8internal25ExceptionSnapshotMinidump7ContextEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::ExceptionSnapshotMinidump"*)* @_ZNK8crashpad8internal25ExceptionSnapshotMinidump8ThreadIDEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::ExceptionSnapshotMinidump"*)* @_ZNK8crashpad8internal25ExceptionSnapshotMinidump9ExceptionEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::ExceptionSnapshotMinidump"*)* @_ZNK8crashpad8internal25ExceptionSnapshotMinidump13ExceptionInfoEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::ExceptionSnapshotMinidump"*)* @_ZNK8crashpad8internal25ExceptionSnapshotMinidump16ExceptionAddressEv to i8*), i8* bitcast (%"class.std::__1::vector.11"* (%"class.crashpad::internal::ExceptionSnapshotMinidump"*)* @_ZNK8crashpad8internal25ExceptionSnapshotMinidump5CodesEv to i8*), i8* bitcast (void (%"class.std::__1::vector.18"*, %"class.crashpad::internal::ExceptionSnapshotMinidump"*)* @_ZNK8crashpad8internal25ExceptionSnapshotMinidump11ExtraMemoryEv to i8*)] }, align 8

@_ZN8crashpad8internal25ExceptionSnapshotMinidumpC1Ev = hidden unnamed_addr alias void (%"class.crashpad::internal::ExceptionSnapshotMinidump"*), void (%"class.crashpad::internal::ExceptionSnapshotMinidump"*)* @_ZN8crashpad8internal25ExceptionSnapshotMinidumpC2Ev
@_ZN8crashpad8internal25ExceptionSnapshotMinidumpD1Ev = hidden unnamed_addr alias void (%"class.crashpad::internal::ExceptionSnapshotMinidump"*), void (%"class.crashpad::internal::ExceptionSnapshotMinidump"*)* @_ZN8crashpad8internal25ExceptionSnapshotMinidumpD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal25ExceptionSnapshotMinidumpC2Ev(%"class.crashpad::internal::ExceptionSnapshotMinidump"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8crashpad8internal25ExceptionSnapshotMinidumpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 1
  %4 = bitcast %struct.MINIDUMP_EXCEPTION_STREAM* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 168, i1 false)
  %5 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 2
  tail call void @_ZN8crashpad8internal24MinidumpContextConverterC1Ev(%"class.crashpad::internal::MinidumpContextConverter"* %5) #9
  %6 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 3
  %7 = bitcast %"class.std::__1::vector.11"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 4, i32 0
  store volatile i8 0, i8* %8, align 1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8crashpad8internal24MinidumpContextConverterC1Ev(%"class.crashpad::internal::MinidumpContextConverter"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal25ExceptionSnapshotMinidumpD2Ev(%"class.crashpad::internal::ExceptionSnapshotMinidump"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8crashpad8internal25ExceptionSnapshotMinidumpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 4, i32 0
  store volatile i8 3, i8* %3, align 1
  %4 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = icmp eq i64* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = bitcast i64** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast i64* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = ptrtoint i8* %14 to i64
  %18 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  store i64 %17, i64* %19, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #10
  br label %20

20:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal25ExceptionSnapshotMinidumpD0Ev(%"class.crashpad::internal::ExceptionSnapshotMinidump"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8crashpad8internal25ExceptionSnapshotMinidumpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 4, i32 0
  store volatile i8 3, i8* %3, align 1
  %4 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = icmp eq i64* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = bitcast i64** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast i64* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %7, %1
  %13 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = ptrtoint i8* %14 to i64
  %18 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  store i64 %17, i64* %19, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #10
  br label %20

20:                                               ; preds = %12, %16
  %21 = bitcast %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad8internal25ExceptionSnapshotMinidump10InitializeEPNS_19FileReaderInterfaceENS_15CPUArchitectureEj(%"class.crashpad::internal::ExceptionSnapshotMinidump"*, %"class.crashpad::FileReaderInterface"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 4, i32 0
  store volatile i8 1, i8* %6, align 1
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #9
  %10 = bitcast %"class.crashpad::FileReaderInterface"* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -32
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.crashpad::FileReaderInterface"* %1 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = bitcast i8* %16 to %"class.crashpad::FileSeekerInterface"*
  %18 = zext i32 %3 to i64
  %19 = tail call zeroext i1 @_ZN8crashpad19FileSeekerInterface7SeekSetEl(%"class.crashpad::FileSeekerInterface"* %17, i64 %18) #9
  br i1 %19, label %20, label %145

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 1
  %22 = bitcast %struct.MINIDUMP_EXCEPTION_STREAM* %21 to i8*
  %23 = tail call zeroext i1 @_ZN8crashpad19FileReaderInterface11ReadExactlyEPvm(%"class.crashpad::FileReaderInterface"* %1, i8* %22, i64 168) #9
  br i1 %23, label %24, label %145

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 1, i32 2, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = icmp eq i32 %26, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 3, i32 0, i32 1
  %32 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast i64** %31 to i64*
  %34 = bitcast %"class.std::__1::vector.11"* %30 to i64*
  %35 = bitcast i64** %32 to i64*
  %36 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %30, i64 0, i32 0, i32 0
  br label %48

37:                                               ; preds = %112, %24
  %38 = load i8*, i8** %10, align 8
  %39 = getelementptr i8, i8* %38, i64 -32
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds i8, i8* %15, i64 %41
  %43 = bitcast i8* %42 to %"class.crashpad::FileSeekerInterface"*
  %44 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 1, i32 3, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = tail call zeroext i1 @_ZN8crashpad19FileSeekerInterface7SeekSetEl(%"class.crashpad::FileSeekerInterface"* %43, i64 %46) #9
  br i1 %47, label %115, label %145

48:                                               ; preds = %112, %29
  %49 = phi i64 [ 0, %29 ], [ %113, %112 ]
  %50 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 1, i32 2, i32 6, i64 %49
  %51 = load i64*, i64** %31, align 8
  %52 = load i64*, i64** %32, align 8
  %53 = icmp eq i64* %51, %52
  %54 = ptrtoint i64* %52 to i64
  br i1 %53, label %59, label %55

55:                                               ; preds = %48
  %56 = load i64, i64* %50, align 8
  store i64 %56, i64* %51, align 8
  %57 = getelementptr inbounds i64, i64* %51, i64 1
  %58 = ptrtoint i64* %57 to i64
  store i64 %58, i64* %33, align 8
  br label %112

59:                                               ; preds = %48
  %60 = ptrtoint i64* %51 to i64
  %61 = load i64, i64* %34, align 8
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = add nsw i64 %63, 1
  %65 = icmp ugt i64 %64, 2305843009213693951
  br i1 %65, label %66, label %68

66:                                               ; preds = %59
  %67 = bitcast %"class.std::__1::vector.11"* %30 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %67) #11
  unreachable

68:                                               ; preds = %59
  %69 = sub i64 %54, %61
  %70 = ashr exact i64 %69, 3
  %71 = icmp ult i64 %70, 1152921504606846975
  br i1 %71, label %72, label %80

72:                                               ; preds = %68
  %73 = ashr exact i64 %69, 2
  %74 = icmp ult i64 %73, %64
  %75 = select i1 %74, i64 %64, i64 %73
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %72
  %78 = icmp ugt i64 %75, 2305843009213693951
  br i1 %78, label %79, label %80

79:                                               ; preds = %77
  tail call void @abort() #11
  unreachable

80:                                               ; preds = %77, %68
  %81 = phi i64 [ %75, %77 ], [ 2305843009213693951, %68 ]
  %82 = shl i64 %81, 3
  %83 = tail call i8* @_Znwm(i64 %82) #10
  %84 = bitcast i8* %83 to i64*
  br label %85

85:                                               ; preds = %80, %72
  %86 = phi i64 [ %81, %80 ], [ 0, %72 ]
  %87 = phi i64* [ %84, %80 ], [ null, %72 ]
  %88 = getelementptr inbounds i64, i64* %87, i64 %63
  %89 = getelementptr inbounds i64, i64* %87, i64 %86
  %90 = ptrtoint i64* %89 to i64
  %91 = load i64, i64* %50, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds i64, i64* %88, i64 1
  %93 = ptrtoint i64* %92 to i64
  %94 = load i64*, i64** %36, align 8
  %95 = load i64, i64* %33, align 8
  %96 = ptrtoint i64* %94 to i64
  %97 = sub i64 %95, %96
  %98 = ashr exact i64 %97, 3
  %99 = sub nsw i64 0, %98
  %100 = getelementptr inbounds i64, i64* %88, i64 %99
  %101 = ptrtoint i64* %100 to i64
  %102 = icmp sgt i64 %97, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %85
  %104 = bitcast i64* %100 to i8*
  %105 = bitcast i64* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 %97, i1 false) #9
  %106 = load i64*, i64** %36, align 8
  br label %107

107:                                              ; preds = %103, %85
  %108 = phi i64* [ %94, %85 ], [ %106, %103 ]
  store i64 %101, i64* %34, align 8
  store i64 %93, i64* %33, align 8
  store i64 %90, i64* %35, align 8
  %109 = icmp eq i64* %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %107
  %111 = bitcast i64* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #10
  br label %112

112:                                              ; preds = %55, %107, %110
  %113 = add nuw nsw i64 %49, 1
  %114 = icmp eq i64 %113, %27
  br i1 %114, label %37, label %48

115:                                              ; preds = %37
  %116 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 1, i32 3, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = zext i32 %117 to i64
  %119 = bitcast i8** %9 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.std::__1::vector"* %5 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = sub i64 %120, %122
  %124 = icmp ult i64 %123, %118
  %125 = inttoptr i64 %122 to i8*
  br i1 %124, label %126, label %130

126:                                              ; preds = %115
  %127 = sub i64 %118, %123
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* nonnull %5, i64 %127) #9
  %128 = load i8*, i8** %8, align 8
  %129 = load i64, i64* %119, align 8
  br label %135

130:                                              ; preds = %115
  %131 = icmp ugt i64 %123, %118
  br i1 %131, label %132, label %135

132:                                              ; preds = %130
  %133 = getelementptr inbounds i8, i8* %125, i64 %118
  store i8* %133, i8** %9, align 8
  %134 = ptrtoint i8* %133 to i64
  br label %135

135:                                              ; preds = %126, %130, %132
  %136 = phi i64 [ %129, %126 ], [ %120, %130 ], [ %134, %132 ]
  %137 = phi i8* [ %128, %126 ], [ %125, %130 ], [ %125, %132 ]
  %138 = ptrtoint i8* %137 to i64
  %139 = sub i64 %136, %138
  %140 = call zeroext i1 @_ZN8crashpad19FileReaderInterface11ReadExactlyEPvm(%"class.crashpad::FileReaderInterface"* %1, i8* %137, i64 %139) #9
  br i1 %140, label %141, label %145

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 2
  %143 = call zeroext i1 @_ZN8crashpad8internal24MinidumpContextConverter10InitializeENS_15CPUArchitectureERKNSt3__16vectorIhNS3_9allocatorIhEEEE(%"class.crashpad::internal::MinidumpContextConverter"* %142, i32 %2, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #9
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  store volatile i8 2, i8* %6, align 1
  br label %145

145:                                              ; preds = %144, %37, %135, %141, %20, %4
  %146 = phi i1 [ false, %4 ], [ false, %20 ], [ true, %144 ], [ false, %37 ], [ false, %135 ], [ false, %141 ]
  %147 = load i8*, i8** %8, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %152, label %149

149:                                              ; preds = %145
  %150 = ptrtoint i8* %147 to i64
  %151 = bitcast i8** %9 to i64*
  store i64 %150, i64* %151, align 8
  call void @_ZdlPv(i8* nonnull %147) #10
  br label %152

152:                                              ; preds = %145, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret i1 %146
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN8crashpad19FileSeekerInterface7SeekSetEl(%"class.crashpad::FileSeekerInterface"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN8crashpad19FileReaderInterface11ReadExactlyEPvm(%"class.crashpad::FileReaderInterface"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN8crashpad8internal24MinidumpContextConverter10InitializeENS_15CPUArchitectureERKNSt3__16vectorIhNS3_9allocatorIhEEEE(%"class.crashpad::internal::MinidumpContextConverter"*, i32, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"struct.crashpad::CPUContext"* @_ZNK8crashpad8internal25ExceptionSnapshotMinidump7ContextEv(%"class.crashpad::internal::ExceptionSnapshotMinidump"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 2, i32 0
  ret %"struct.crashpad::CPUContext"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK8crashpad8internal25ExceptionSnapshotMinidump8ThreadIDEv(%"class.crashpad::internal::ExceptionSnapshotMinidump"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = zext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8crashpad8internal25ExceptionSnapshotMinidump9ExceptionEv(%"class.crashpad::internal::ExceptionSnapshotMinidump"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 1, i32 2, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8crashpad8internal25ExceptionSnapshotMinidump13ExceptionInfoEv(%"class.crashpad::internal::ExceptionSnapshotMinidump"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 1, i32 2, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK8crashpad8internal25ExceptionSnapshotMinidump16ExceptionAddressEv(%"class.crashpad::internal::ExceptionSnapshotMinidump"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 1, i32 2, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.11"* @_ZNK8crashpad8internal25ExceptionSnapshotMinidump5CodesEv(%"class.crashpad::internal::ExceptionSnapshotMinidump"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::ExceptionSnapshotMinidump", %"class.crashpad::internal::ExceptionSnapshotMinidump"* %0, i64 0, i32 3
  ret %"class.std::__1::vector.11"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8crashpad8internal25ExceptionSnapshotMinidump11ExtraMemoryEv(%"class.std::__1::vector.18"* noalias nocapture sret, %"class.crashpad::internal::ExceptionSnapshotMinidump"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector.18"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #9
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #9
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #11
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #9
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #9
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #10
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
