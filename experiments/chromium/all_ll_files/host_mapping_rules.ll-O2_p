; ModuleID = '../../net/base/host_mapping_rules.cc'
source_filename = "../../net/base/host_mapping_rules.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.net::HostMappingRules" = type { %"class.std::__1::vector", %"class.std::__1::vector.6" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"*, %"class.std::__1::__compressed_pair.1" }
%"struct.net::HostMappingRules::MapRule" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.net::HostMappingRules::MapRule"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"*, %"class.std::__1::__compressed_pair.8" }
%"struct.net::HostMappingRules::ExclusionRule" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.net::HostMappingRules::ExclusionRule"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.16" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::BasicStringPiece"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorIN3net16HostMappingRules7MapRuleENS_9allocatorIS3_EEEC2ERKS6_ = comdat any

$_ZNSt3__16vectorIN3net16HostMappingRules7MapRuleENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__16vectorIN3net16HostMappingRules13ExclusionRuleENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__16vectorIN3net16HostMappingRules13ExclusionRuleENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIN3net16HostMappingRules7MapRuleENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"exclude\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"map\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"../../net/base/host_mapping_rules.cc\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"Failed parsing rule: \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3net16HostMappingRulesC1Ev = hidden unnamed_addr alias void (%"class.net::HostMappingRules"*), void (%"class.net::HostMappingRules"*)* @_ZN3net16HostMappingRulesC2Ev
@_ZN3net16HostMappingRulesC1ERKS0_ = hidden unnamed_addr alias void (%"class.net::HostMappingRules"*, %"class.net::HostMappingRules"*), void (%"class.net::HostMappingRules"*, %"class.net::HostMappingRules"*)* @_ZN3net16HostMappingRulesC2ERKS0_
@_ZN3net16HostMappingRulesD1Ev = hidden unnamed_addr alias void (%"class.net::HostMappingRules"*), void (%"class.net::HostMappingRules"*)* @_ZN3net16HostMappingRulesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HostMappingRulesC2Ev(%"class.net::HostMappingRules"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.net::HostMappingRules"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HostMappingRulesC2ERKS0_(%"class.net::HostMappingRules"*, %"class.net::HostMappingRules"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %1, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN3net16HostMappingRules7MapRuleENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector"* %3, %"class.std::__1::vector"* dereferenceable(24) %4)
  %5 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector.6"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %8 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %1, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.net::HostMappingRules::ExclusionRule"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.6"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %58, label %16

16:                                               ; preds = %2
  %17 = icmp ugt i64 %14, 768614336404564650
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector.6"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #9
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #10
  %22 = bitcast i8* %21 to %"struct.net::HostMappingRules::ExclusionRule"*
  %23 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast %"struct.net::HostMappingRules::ExclusionRule"** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector.6"* %5 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %22, i64 %14
  %27 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.net::HostMappingRules::ExclusionRule"* %26, %"struct.net::HostMappingRules::ExclusionRule"** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %6, i64 0, i32 0, i32 0
  %29 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %28, align 8
  %30 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %8, align 8
  %31 = bitcast %"struct.net::HostMappingRules::ExclusionRule"** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %29, %30
  br i1 %33, label %56, label %34

34:                                               ; preds = %20, %50
  %35 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %52, %50 ], [ %22, %20 ]
  %36 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %51, %50 ], [ %29, %20 ]
  %37 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %35 to i8*
  %43 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #8
  br label %50

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %35, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %45, i8* %47, i64 %49) #8
  br label %50

50:                                               ; preds = %44, %41
  %51 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %36, i64 1
  %52 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %35, i64 1
  %53 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %51, %30
  br i1 %53, label %54, label %34

54:                                               ; preds = %50
  %55 = ptrtoint %"struct.net::HostMappingRules::ExclusionRule"* %52 to i64
  br label %56

56:                                               ; preds = %54, %20
  %57 = phi i64 [ %32, %20 ], [ %55, %54 ]
  store i64 %57, i64* %31, align 8
  br label %58

58:                                               ; preds = %2, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net16HostMappingRules7MapRuleENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.net::HostMappingRules::MapRule"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 56
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %74, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 329406144173384850
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #9
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #10
  %18 = bitcast i8* %17 to %"struct.net::HostMappingRules::MapRule"*
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"struct.net::HostMappingRules::MapRule"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.net::HostMappingRules::MapRule"* %22, %"struct.net::HostMappingRules::MapRule"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %25 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %24, align 8
  %26 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %4, align 8
  %27 = bitcast %"struct.net::HostMappingRules::MapRule"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.net::HostMappingRules::MapRule"* %25, %26
  br i1 %29, label %72, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"struct.net::HostMappingRules::MapRule"*
  br label %32

32:                                               ; preds = %63, %30
  %33 = phi %"struct.net::HostMappingRules::MapRule"* [ %68, %63 ], [ %31, %30 ]
  %34 = phi %"struct.net::HostMappingRules::MapRule"* [ %67, %63 ], [ %25, %30 ]
  %35 = bitcast %"struct.net::HostMappingRules::MapRule"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"struct.net::HostMappingRules::MapRule"* %33 to i8*
  %41 = bitcast %"struct.net::HostMappingRules::MapRule"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #8
  br label %48

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %33, i64 0, i32 0
  %44 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %43, i8* %45, i64 %47) #8
  br label %48

48:                                               ; preds = %42, %39
  %49 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %33, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %34, i64 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #8
  br label %63

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %34, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %49, i8* %60, i64 %62) #8
  br label %63

63:                                               ; preds = %58, %55
  %64 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %33, i64 0, i32 2
  %65 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %34, i64 0, i32 2
  %66 = load i32, i32* %65, align 8
  store i32 %66, i32* %64, align 8
  %67 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %34, i64 1
  %68 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %33, i64 1
  %69 = icmp eq %"struct.net::HostMappingRules::MapRule"* %67, %26
  br i1 %69, label %70, label %32

70:                                               ; preds = %63
  %71 = ptrtoint %"struct.net::HostMappingRules::MapRule"* %68 to i64
  br label %72

72:                                               ; preds = %16, %70
  %73 = phi i64 [ %28, %16 ], [ %71, %70 ]
  store i64 %73, i64* %27, align 8
  br label %74

74:                                               ; preds = %2, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HostMappingRulesD2Ev(%"class.net::HostMappingRules"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %3, align 8
  %5 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %4 to i8*
  %8 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %8, align 8
  %10 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %12, i64 -1
  %14 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.6"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"struct.net::HostMappingRules::ExclusionRule"* %4, %"struct.net::HostMappingRules::ExclusionRule"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %29, align 8
  %31 = icmp eq %"struct.net::HostMappingRules::MapRule"* %30, null
  br i1 %31, label %63, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.net::HostMappingRules::MapRule"* %30 to i8*
  %34 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %34, align 8
  %36 = icmp eq %"struct.net::HostMappingRules::MapRule"* %35, %30
  br i1 %36, label %61, label %37

37:                                               ; preds = %32, %56
  %38 = phi %"struct.net::HostMappingRules::MapRule"* [ %39, %56 ], [ %35, %32 ]
  %39 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %38, i64 -1
  %40 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %38, i64 -1, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #10
  br label %48

48:                                               ; preds = %45, %37
  %49 = bitcast %"struct.net::HostMappingRules::MapRule"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #10
  br label %56

56:                                               ; preds = %53, %48
  %57 = icmp eq %"struct.net::HostMappingRules::MapRule"* %39, %30
  br i1 %57, label %58, label %37

58:                                               ; preds = %56
  %59 = bitcast %"class.net::HostMappingRules"* %0 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %32
  %62 = phi i8* [ %60, %58 ], [ %33, %32 ]
  store %"struct.net::HostMappingRules::MapRule"* %30, %"struct.net::HostMappingRules::MapRule"** %34, align 8
  tail call void @_ZdlPv(i8* %62) #10
  br label %63

63:                                               ; preds = %28, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.net::HostMappingRules"* @_ZN3net16HostMappingRulesaSERKS0_(%"class.net::HostMappingRules"* returned, %"class.net::HostMappingRules"* readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.net::HostMappingRules"* %0, %1
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %6, align 8
  %8 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %8, align 8
  tail call void @_ZNSt3__16vectorIN3net16HostMappingRules7MapRuleENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"* %5, %"struct.net::HostMappingRules::MapRule"* %7, %"struct.net::HostMappingRules::MapRule"* %9) #8
  %10 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %1, i64 0, i32 1, i32 0, i32 0
  %12 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %11, align 8
  %13 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %1, i64 0, i32 1, i32 0, i32 1
  %14 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %13, align 8
  tail call void @_ZNSt3__16vectorIN3net16HostMappingRules13ExclusionRuleENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.6"* %10, %"struct.net::HostMappingRules::ExclusionRule"* %12, %"struct.net::HostMappingRules::ExclusionRule"* %14) #8
  br label %15

15:                                               ; preds = %2, %4
  ret %"class.net::HostMappingRules"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net16HostMappingRules11RewriteHostEPNS_12HostPortPairE(%"class.net::HostMappingRules"* nocapture readonly, %"class.net::HostPortPair"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %4, align 8
  %6 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %6, align 8
  %8 = icmp eq %"struct.net::HostMappingRules::MapRule"* %5, %7
  br i1 %8, label %138, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.net::HostPortPair"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.net::HostPortPair"* %1 to i8*
  %14 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %21

21:                                               ; preds = %9, %135
  %22 = phi %"struct.net::HostMappingRules::MapRule"* [ %5, %9 ], [ %136, %135 ]
  %23 = load i8, i8* %11, align 1
  %24 = icmp slt i8 %23, 0
  %25 = load i8*, i8** %12, align 8
  %26 = select i1 %24, i8* %25, i8* %13
  %27 = load i64, i64* %14, align 8
  %28 = zext i8 %23 to i64
  %29 = select i1 %24, i64 %27, i64 %28
  %30 = bitcast %"struct.net::HostMappingRules::MapRule"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %"struct.net::HostMappingRules::MapRule"* %22 to i8*
  %37 = select i1 %33, i8* %35, i8* %36
  %38 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %32 to i64
  %41 = select i1 %33, i64 %39, i64 %40
  %42 = call zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %26, i64 %29, i8* %37, i64 %41) #8
  br i1 %42, label %64, label %43

43:                                               ; preds = %21
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call void @_ZNK3net12HostPortPair8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.net::HostPortPair"* %1) #8
  %44 = load i8, i8* %19, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i8*, i8** %16, align 8
  %47 = select i1 %45, i8* %46, i8* %15
  %48 = load i64, i64* %17, align 8
  %49 = zext i8 %44 to i64
  %50 = select i1 %45, i64 %48, i64 %49
  %51 = load i8, i8* %31, align 1
  %52 = icmp slt i8 %51, 0
  %53 = load i8*, i8** %34, align 8
  %54 = select i1 %52, i8* %53, i8* %36
  %55 = load i64, i64* %38, align 8
  %56 = zext i8 %51 to i64
  %57 = select i1 %52, i64 %55, i64 %56
  %58 = call zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %47, i64 %50, i8* %54, i64 %57) #8
  %59 = load i8, i8* %19, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %43
  %62 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %62) #10
  br label %63

63:                                               ; preds = %43, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  br i1 %58, label %64, label %135

64:                                               ; preds = %21, %63
  %65 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 0
  %66 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1, i32 0, i32 0
  %67 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %66, align 8
  %68 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1, i32 0, i32 1
  %69 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %68, align 8
  %70 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %67, %69
  br i1 %70, label %99, label %73

71:                                               ; preds = %73
  %72 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %98, %69
  br i1 %72, label %99, label %73

73:                                               ; preds = %64, %71
  %74 = phi i1 [ %97, %71 ], [ undef, %64 ]
  %75 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %98, %71 ], [ %67, %64 ]
  %76 = load i8, i8* %11, align 1
  %77 = icmp slt i8 %76, 0
  %78 = load i8*, i8** %12, align 8
  %79 = select i1 %77, i8* %78, i8* %13
  %80 = load i64, i64* %14, align 8
  %81 = zext i8 %76 to i64
  %82 = select i1 %77, i64 %80, i64 %81
  %83 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %75 to i8*
  %90 = select i1 %86, i8* %88, i8* %89
  %91 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = zext i8 %85 to i64
  %94 = select i1 %86, i64 %92, i64 %93
  %95 = call zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %79, i64 %82, i8* %90, i64 %94) #8
  %96 = xor i1 %95, true
  %97 = and i1 %74, %96
  %98 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %75, i64 1
  br i1 %95, label %138, label %71

99:                                               ; preds = %71, %64
  %100 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %22, i64 0, i32 1
  %101 = icmp eq %"class.std::__1::basic_string"* %65, %100
  br i1 %101, label %128, label %102

102:                                              ; preds = %99
  %103 = load i8, i8* %11, align 1
  %104 = icmp slt i8 %103, 0
  %105 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %104, label %118, label %109

109:                                              ; preds = %102
  br i1 %108, label %112, label %110

110:                                              ; preds = %109
  %111 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %111, i64 24, i1 false) #8
  br label %128

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %65, i8* %114, i64 %116) #8
  br label %128

118:                                              ; preds = %102
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  %124 = zext i8 %107 to i64
  %125 = select i1 %108, i8* %120, i8* %123
  %126 = select i1 %108, i64 %122, i64 %124
  %127 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %65, i8* %125, i64 %126) #8
  br label %128

128:                                              ; preds = %99, %110, %112, %118
  %129 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %22, i64 0, i32 2
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %130, -1
  br i1 %131, label %138, label %132

132:                                              ; preds = %128
  %133 = trunc i32 %130 to i16
  %134 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 1
  store i16 %133, i16* %134, align 8
  br label %138

135:                                              ; preds = %63
  %136 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %22, i64 1
  %137 = icmp eq %"struct.net::HostMappingRules::MapRule"* %136, %7
  br i1 %137, label %138, label %21

138:                                              ; preds = %135, %73, %2, %132, %128
  %139 = phi i1 [ true, %132 ], [ true, %128 ], [ false, %2 ], [ %97, %73 ], [ false, %135 ]
  ret i1 %139
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZNK3net12HostPortPair8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.net::HostPortPair"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net16HostMappingRules17AddRuleFromStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HostMappingRules"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.14", align 8
  %5 = alloca %"struct.net::HostMappingRules::ExclusionRule", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.net::HostMappingRules::MapRule", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.std::__1::vector.14"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %4, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %4, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::vector.14"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = tail call { i8*, i64 } @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsE(i8* %1, i64 %2, i32 3) #8
  %14 = extractvalue { i8*, i64 } %13, 0
  %15 = extractvalue { i8*, i64 } %13, 1
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.14"* nonnull sret %4, i8* %14, i64 %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 1, i32 0) #8
  %16 = bitcast %"class.base::BasicStringPiece"** %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.14"* %4 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = icmp eq i64 %20, 32
  %22 = inttoptr i64 %19 to %"class.base::BasicStringPiece"*
  br i1 %21, label %23, label %72

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %22, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %22, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %25, i64 %27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7) #8
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = load i64, i64* %16, align 8
  %31 = load i64, i64* %18, align 8
  %32 = inttoptr i64 %31 to %"class.base::BasicStringPiece"*
  br label %72

33:                                               ; preds = %23
  %34 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #8
  %37 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #8
  %38 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %10, align 8
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %38, i64 1, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %38, i64 1, i32 1
  %42 = load i64, i64* %41, align 8
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i8* %40, i64 %42) #8
  %43 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1, i32 0, i32 1
  %46 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %45, align 8
  %47 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %46 to i8*
  %48 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %49 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %48, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %37, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #8
  %50 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1, i32 0, i32 1
  %51 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %46, %49
  br i1 %51, label %64, label %52

52:                                               ; preds = %33
  %53 = load i8, i8* %44, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %52
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %34, i64 24, i1 false) #8
  br label %60

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %46, i64 0, i32 0
  %58 = load i8*, i8** %35, align 8
  %59 = load i64, i64* %36, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %57, i8* %58, i64 %59) #8
  br label %60

60:                                               ; preds = %56, %55
  %61 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %46, i64 1
  %62 = ptrtoint %"struct.net::HostMappingRules::ExclusionRule"* %61 to i64
  %63 = bitcast %"struct.net::HostMappingRules::ExclusionRule"** %50 to i64*
  store i64 %62, i64* %63, align 8
  br label %66

64:                                               ; preds = %33
  %65 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorIN3net16HostMappingRules13ExclusionRuleENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.6"* %65, %"struct.net::HostMappingRules::ExclusionRule"* nonnull dereferenceable(24) %5) #8
  br label %66

66:                                               ; preds = %60, %64
  %67 = load i8, i8* %44, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %70) #10
  br label %71

71:                                               ; preds = %66, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #8
  br label %157

72:                                               ; preds = %29, %3
  %73 = phi %"class.base::BasicStringPiece"* [ %32, %29 ], [ %22, %3 ]
  %74 = phi i64 [ %31, %29 ], [ %19, %3 ]
  %75 = phi i64 [ %30, %29 ], [ %17, %3 ]
  %76 = sub i64 %75, %74
  %77 = icmp eq i64 %76, 48
  br i1 %77, label %78, label %160

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %73, i64 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %73, i64 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %80, i64 %82, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3) #8
  br i1 %83, label %84, label %157

84:                                               ; preds = %78
  %85 = bitcast %"struct.net::HostMappingRules::MapRule"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %85) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 56, i1 false)
  %86 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %7, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 48, i1 false) #8
  store i32 -1, i32* %86, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #8
  %88 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %10, align 8
  %89 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %88, i64 1, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %88, i64 1, i32 1
  %92 = load i64, i64* %91, align 8
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %8, i8* %90, i64 %92) #8
  %93 = bitcast %"struct.net::HostMappingRules::MapRule"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %10, align 8
  %96 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %95, i64 2, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %95, i64 2, i32 1
  %99 = load i64, i64* %98, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %85, i8* nonnull align 8 %87, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #8
  %100 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %7, i64 0, i32 1
  %101 = call zeroext i1 @_ZN3net16ParseHostAndPortEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEEPi(i8* %97, i64 %99, %"class.std::__1::basic_string"* %100, i32* %86) #8
  br i1 %101, label %102, label %141

102:                                              ; preds = %84
  %103 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 0, i32 0, i32 1
  %104 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %103, align 8
  %105 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %106 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %105, align 8
  %107 = icmp eq %"struct.net::HostMappingRules::MapRule"* %104, %106
  br i1 %107, label %139, label %108

108:                                              ; preds = %102
  %109 = load i8, i8* %94, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %108
  %112 = bitcast %"struct.net::HostMappingRules::MapRule"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* nonnull align 8 %85, i64 24, i1 false) #8
  br label %119

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %104, i64 0, i32 0
  %115 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %114, i8* %116, i64 %118) #8
  br label %119

119:                                              ; preds = %113, %111
  %120 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %104, i64 0, i32 1
  %121 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %119
  %126 = bitcast %"class.std::__1::basic_string"* %120 to i8*
  %127 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 24, i1 false) #8
  br label %133

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %120, i8* %130, i64 %132) #8
  br label %133

133:                                              ; preds = %128, %125
  %134 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %104, i64 0, i32 2
  %135 = load i32, i32* %86, align 8
  store i32 %135, i32* %134, align 8
  %136 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %104, i64 1
  %137 = ptrtoint %"struct.net::HostMappingRules::MapRule"* %136 to i64
  %138 = bitcast %"struct.net::HostMappingRules::MapRule"** %103 to i64*
  store i64 %137, i64* %138, align 8
  br label %141

139:                                              ; preds = %102
  %140 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN3net16HostMappingRules7MapRuleENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* %140, %"struct.net::HostMappingRules::MapRule"* nonnull dereferenceable(56) %7) #8
  br label %141

141:                                              ; preds = %139, %133, %84
  %142 = phi i1 [ false, %84 ], [ true, %133 ], [ true, %139 ]
  %143 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #10
  br label %150

150:                                              ; preds = %147, %141
  %151 = load i8, i8* %94, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  call void @_ZdlPv(i8* %155) #10
  br label %156

156:                                              ; preds = %150, %153
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %85) #8
  br label %157

157:                                              ; preds = %71, %156, %78
  %158 = phi i1 [ false, %78 ], [ %142, %156 ], [ true, %71 ]
  %159 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %10, align 8
  br label %160

160:                                              ; preds = %157, %72
  %161 = phi %"class.base::BasicStringPiece"* [ %159, %157 ], [ %73, %72 ]
  %162 = phi i1 [ %158, %157 ], [ false, %72 ]
  %163 = icmp eq %"class.base::BasicStringPiece"* %161, null
  br i1 %163, label %167, label %164

164:                                              ; preds = %160
  %165 = ptrtoint %"class.base::BasicStringPiece"* %161 to i64
  store i64 %165, i64* %16, align 8
  %166 = bitcast %"class.base::BasicStringPiece"* %161 to i8*
  call void @_ZdlPv(i8* %166) #10
  br label %167

167:                                              ; preds = %160, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8
  ret i1 %162
}

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.14"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

declare { i8*, i64 } @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsE(i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN3net16ParseHostAndPortEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEEPi(i8*, i64, %"class.std::__1::basic_string"*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HostMappingRules18SetRulesFromStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HostMappingRules"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.14", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %6, align 8
  %8 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %8, align 8
  %10 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %9, %7
  br i1 %10, label %23, label %11

11:                                               ; preds = %3, %21
  %12 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %13, %21 ], [ %9, %3 ]
  %13 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %12, i64 -1
  %14 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %13, %7
  br i1 %22, label %23, label %11

23:                                               ; preds = %21, %3
  store %"struct.net::HostMappingRules::ExclusionRule"* %7, %"struct.net::HostMappingRules::ExclusionRule"** %8, align 8
  %24 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 0, i32 0, i32 0
  %25 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %24, align 8
  %26 = getelementptr inbounds %"class.net::HostMappingRules", %"class.net::HostMappingRules"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %26, align 8
  %28 = icmp eq %"struct.net::HostMappingRules::MapRule"* %27, %25
  br i1 %28, label %50, label %29

29:                                               ; preds = %23, %48
  %30 = phi %"struct.net::HostMappingRules::MapRule"* [ %31, %48 ], [ %27, %23 ]
  %31 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %30, i64 -1
  %32 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %30, i64 -1, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #10
  br label %40

40:                                               ; preds = %37, %29
  %41 = bitcast %"struct.net::HostMappingRules::MapRule"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #10
  br label %48

48:                                               ; preds = %45, %40
  %49 = icmp eq %"struct.net::HostMappingRules::MapRule"* %31, %25
  br i1 %49, label %50, label %29

50:                                               ; preds = %48, %23
  store %"struct.net::HostMappingRules::MapRule"* %25, %"struct.net::HostMappingRules::MapRule"** %26, align 8
  %51 = bitcast %"class.std::__1::vector.14"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #8
  %52 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %4, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %4, i64 0, i32 0, i32 1
  %54 = bitcast %"class.std::__1::vector.14"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 24, i1 false)
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.14"* nonnull sret %4, i8* %1, i64 %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1, i32 1, i32 0) #8
  %55 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %52, align 8
  %56 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %53, align 8
  %57 = icmp eq %"class.base::BasicStringPiece"* %55, %56
  br i1 %57, label %64, label %58

58:                                               ; preds = %50
  %59 = bitcast %"class.logging::LogMessage"* %5 to i8*
  %60 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %61 = bitcast %"class.std::__1::basic_ostringstream"* %60 to %"class.std::__1::basic_ostream"*
  br label %72

62:                                               ; preds = %85
  %63 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %52, align 8
  br label %64

64:                                               ; preds = %62, %50
  %65 = phi %"class.base::BasicStringPiece"* [ %63, %62 ], [ %55, %50 ]
  %66 = icmp eq %"class.base::BasicStringPiece"* %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = ptrtoint %"class.base::BasicStringPiece"* %65 to i64
  %69 = bitcast %"class.base::BasicStringPiece"** %53 to i64*
  store i64 %68, i64* %69, align 8
  %70 = bitcast %"class.base::BasicStringPiece"* %65 to i8*
  call void @_ZdlPv(i8* %70) #10
  br label %71

71:                                               ; preds = %64, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #8
  ret void

72:                                               ; preds = %58, %85
  %73 = phi %"class.base::BasicStringPiece"* [ %55, %58 ], [ %86, %85 ]
  %74 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %73, i64 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %73, i64 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = call zeroext i1 @_ZN3net16HostMappingRules17AddRuleFromStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HostMappingRules"* %0, i8* %75, i64 %77)
  %79 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  %80 = xor i1 %79, true
  %81 = or i1 %78, %80
  br i1 %81, label %85, label %82

82:                                               ; preds = %72
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %59) #8
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 110, i32 2) #8
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i64 21) #8
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_16BasicStringPieceIcS3_EE(%"class.std::__1::basic_ostream"* dereferenceable(160) %83, i8* %75, i64 %77) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %59) #8
  br label %85

85:                                               ; preds = %72, %82
  %86 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %73, i64 1
  %87 = icmp eq %"class.base::BasicStringPiece"* %86, %56
  br i1 %87, label %62, label %72
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_16BasicStringPieceIcS3_EE(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net16HostMappingRules7MapRuleENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"*, %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.net::HostMappingRules::MapRule"* %2 to i64
  %5 = ptrtoint %"struct.net::HostMappingRules::MapRule"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 56
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.net::HostMappingRules::MapRule"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 56
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.net::HostMappingRules::MapRule"*
  br i1 %15, label %173, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.net::HostMappingRules::MapRule"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 56
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %1, i64 %22
  %25 = select i1 %23, %"struct.net::HostMappingRules::MapRule"* %24, %"struct.net::HostMappingRules::MapRule"* %2
  %26 = icmp eq %"struct.net::HostMappingRules::MapRule"* %25, %1
  br i1 %26, label %99, label %27

27:                                               ; preds = %17, %92
  %28 = phi %"struct.net::HostMappingRules::MapRule"* [ %97, %92 ], [ %16, %17 ]
  %29 = phi %"struct.net::HostMappingRules::MapRule"* [ %96, %92 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %28, i64 0, i32 0
  %31 = icmp eq %"struct.net::HostMappingRules::MapRule"* %28, %29
  br i1 %31, label %92, label %32

32:                                               ; preds = %27
  %33 = bitcast %"struct.net::HostMappingRules::MapRule"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = bitcast %"struct.net::HostMappingRules::MapRule"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %36, label %51, label %41

41:                                               ; preds = %32
  br i1 %40, label %45, label %42

42:                                               ; preds = %41
  %43 = bitcast %"struct.net::HostMappingRules::MapRule"* %28 to i8*
  %44 = bitcast %"struct.net::HostMappingRules::MapRule"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #8
  br label %61

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %47, i64 %49) #8
  br label %61

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.net::HostMappingRules::MapRule"* %29 to i8*
  %57 = zext i8 %39 to i64
  %58 = select i1 %40, i8* %53, i8* %56
  %59 = select i1 %40, i64 %55, i64 %57
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %58, i64 %59) #8
  br label %61

61:                                               ; preds = %51, %45, %42
  %62 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %28, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %29, i64 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %67, label %82, label %72

72:                                               ; preds = %61
  br i1 %71, label %76, label %73

73:                                               ; preds = %72
  %74 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %75 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false) #8
  br label %92

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %62, i8* %78, i64 %80) #8
  br label %92

82:                                               ; preds = %61
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  %88 = zext i8 %70 to i64
  %89 = select i1 %71, i8* %84, i8* %87
  %90 = select i1 %71, i64 %86, i64 %88
  %91 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %62, i8* %89, i64 %90) #8
  br label %92

92:                                               ; preds = %82, %76, %73, %27
  %93 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %29, i64 0, i32 2
  %94 = load i32, i32* %93, align 8
  %95 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %28, i64 0, i32 2
  store i32 %94, i32* %95, align 8
  %96 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %29, i64 1
  %97 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %28, i64 1
  %98 = icmp eq %"struct.net::HostMappingRules::MapRule"* %96, %25
  br i1 %98, label %99, label %27

99:                                               ; preds = %92, %17
  %100 = phi %"struct.net::HostMappingRules::MapRule"* [ %16, %17 ], [ %97, %92 ]
  br i1 %23, label %101, label %148

101:                                              ; preds = %99
  %102 = load i64, i64* %19, align 8
  %103 = icmp eq %"struct.net::HostMappingRules::MapRule"* %25, %2
  br i1 %103, label %146, label %104

104:                                              ; preds = %101
  %105 = inttoptr i64 %102 to %"struct.net::HostMappingRules::MapRule"*
  br label %106

106:                                              ; preds = %137, %104
  %107 = phi %"struct.net::HostMappingRules::MapRule"* [ %142, %137 ], [ %105, %104 ]
  %108 = phi %"struct.net::HostMappingRules::MapRule"* [ %141, %137 ], [ %24, %104 ]
  %109 = bitcast %"struct.net::HostMappingRules::MapRule"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %106
  %114 = bitcast %"struct.net::HostMappingRules::MapRule"* %107 to i8*
  %115 = bitcast %"struct.net::HostMappingRules::MapRule"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 24, i1 false) #8
  br label %122

116:                                              ; preds = %106
  %117 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %107, i64 0, i32 0
  %118 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  %120 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %117, i8* %119, i64 %121) #8
  br label %122

122:                                              ; preds = %116, %113
  %123 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %107, i64 0, i32 1
  %124 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %108, i64 0, i32 1
  %125 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %122
  %130 = bitcast %"class.std::__1::basic_string"* %123 to i8*
  %131 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 24, i1 false) #8
  br label %137

132:                                              ; preds = %122
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %108, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %123, i8* %134, i64 %136) #8
  br label %137

137:                                              ; preds = %132, %129
  %138 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %107, i64 0, i32 2
  %139 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %108, i64 0, i32 2
  %140 = load i32, i32* %139, align 8
  store i32 %140, i32* %138, align 8
  %141 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %108, i64 1
  %142 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %107, i64 1
  %143 = icmp eq %"struct.net::HostMappingRules::MapRule"* %141, %2
  br i1 %143, label %144, label %106

144:                                              ; preds = %137
  %145 = ptrtoint %"struct.net::HostMappingRules::MapRule"* %142 to i64
  br label %146

146:                                              ; preds = %101, %144
  %147 = phi i64 [ %102, %101 ], [ %145, %144 ]
  store i64 %147, i64* %19, align 8
  br label %273

148:                                              ; preds = %99
  %149 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %18, align 8
  %150 = icmp eq %"struct.net::HostMappingRules::MapRule"* %149, %100
  br i1 %150, label %172, label %151

151:                                              ; preds = %148, %170
  %152 = phi %"struct.net::HostMappingRules::MapRule"* [ %153, %170 ], [ %149, %148 ]
  %153 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %152, i64 -1
  %154 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %152, i64 -1, i32 1
  %155 = bitcast %"class.std::__1::basic_string"* %154 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  %157 = load i8, i8* %156, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8
  tail call void @_ZdlPv(i8* %161) #10
  br label %162

162:                                              ; preds = %159, %151
  %163 = bitcast %"struct.net::HostMappingRules::MapRule"* %153 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  tail call void @_ZdlPv(i8* %169) #10
  br label %170

170:                                              ; preds = %167, %162
  %171 = icmp eq %"struct.net::HostMappingRules::MapRule"* %153, %100
  br i1 %171, label %172, label %151

172:                                              ; preds = %170, %148
  store %"struct.net::HostMappingRules::MapRule"* %100, %"struct.net::HostMappingRules::MapRule"** %18, align 8
  br label %273

173:                                              ; preds = %3
  %174 = icmp eq i64 %12, 0
  br i1 %174, label %207, label %175

175:                                              ; preds = %173
  %176 = inttoptr i64 %12 to i8*
  %177 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %178 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %177, align 8
  %179 = icmp eq %"struct.net::HostMappingRules::MapRule"* %178, %16
  br i1 %179, label %204, label %180

180:                                              ; preds = %175, %199
  %181 = phi %"struct.net::HostMappingRules::MapRule"* [ %182, %199 ], [ %178, %175 ]
  %182 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %181, i64 -1
  %183 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %181, i64 -1, i32 1
  %184 = bitcast %"class.std::__1::basic_string"* %183 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  br i1 %187, label %188, label %191

188:                                              ; preds = %180
  %189 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %183, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load i8*, i8** %189, align 8
  tail call void @_ZdlPv(i8* %190) #10
  br label %191

191:                                              ; preds = %188, %180
  %192 = bitcast %"struct.net::HostMappingRules::MapRule"* %182 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %182, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  tail call void @_ZdlPv(i8* %198) #10
  br label %199

199:                                              ; preds = %196, %191
  %200 = icmp eq %"struct.net::HostMappingRules::MapRule"* %182, %16
  br i1 %200, label %201, label %180

201:                                              ; preds = %199
  %202 = bitcast %"class.std::__1::vector"* %0 to i8**
  %203 = load i8*, i8** %202, align 8
  br label %204

204:                                              ; preds = %201, %175
  %205 = phi i8* [ %203, %201 ], [ %176, %175 ]
  store %"struct.net::HostMappingRules::MapRule"* %16, %"struct.net::HostMappingRules::MapRule"** %177, align 8
  tail call void @_ZdlPv(i8* %205) #10
  %206 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %206, i8 0, i64 24, i1 false) #8
  br label %207

207:                                              ; preds = %173, %204
  %208 = phi i64 [ %10, %173 ], [ 0, %204 ]
  %209 = icmp ugt i64 %7, 329406144173384850
  br i1 %209, label %210, label %212

210:                                              ; preds = %207
  %211 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %211) #9
  unreachable

212:                                              ; preds = %207
  %213 = sdiv exact i64 %208, 56
  %214 = icmp ult i64 %213, 164703072086692425
  br i1 %214, label %215, label %219

215:                                              ; preds = %212
  %216 = shl nsw i64 %213, 1
  %217 = icmp ult i64 %216, %7
  %218 = select i1 %217, i64 %7, i64 %216
  br label %219

219:                                              ; preds = %215, %212
  %220 = phi i64 [ %218, %215 ], [ 329406144173384850, %212 ]
  %221 = mul i64 %220, 56
  %222 = tail call i8* @_Znwm(i64 %221) #10
  %223 = bitcast i8* %222 to %"struct.net::HostMappingRules::MapRule"*
  %224 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %225 = bitcast %"struct.net::HostMappingRules::MapRule"** %224 to i8**
  store i8* %222, i8** %225, align 8
  %226 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %222, i8** %226, align 8
  %227 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %223, i64 %220
  store %"struct.net::HostMappingRules::MapRule"* %227, %"struct.net::HostMappingRules::MapRule"** %8, align 8
  %228 = bitcast %"struct.net::HostMappingRules::MapRule"** %224 to i64*
  %229 = ptrtoint i8* %222 to i64
  %230 = icmp eq %"struct.net::HostMappingRules::MapRule"* %1, %2
  br i1 %230, label %271, label %231

231:                                              ; preds = %219, %262
  %232 = phi %"struct.net::HostMappingRules::MapRule"* [ %267, %262 ], [ %223, %219 ]
  %233 = phi %"struct.net::HostMappingRules::MapRule"* [ %266, %262 ], [ %1, %219 ]
  %234 = bitcast %"struct.net::HostMappingRules::MapRule"* %233 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %241, label %238

238:                                              ; preds = %231
  %239 = bitcast %"struct.net::HostMappingRules::MapRule"* %232 to i8*
  %240 = bitcast %"struct.net::HostMappingRules::MapRule"* %233 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %239, i8* align 8 %240, i64 24, i1 false) #8
  br label %247

241:                                              ; preds = %231
  %242 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %232, i64 0, i32 0
  %243 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  %245 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %246 = load i64, i64* %245, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %242, i8* %244, i64 %246) #8
  br label %247

247:                                              ; preds = %241, %238
  %248 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %232, i64 0, i32 1
  %249 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %233, i64 0, i32 1
  %250 = bitcast %"class.std::__1::basic_string"* %249 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %251 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %250, i64 0, i32 1, i32 0
  %252 = load i8, i8* %251, align 1
  %253 = icmp slt i8 %252, 0
  br i1 %253, label %257, label %254

254:                                              ; preds = %247
  %255 = bitcast %"class.std::__1::basic_string"* %248 to i8*
  %256 = bitcast %"class.std::__1::basic_string"* %249 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %255, i8* align 8 %256, i64 24, i1 false) #8
  br label %262

257:                                              ; preds = %247
  %258 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %249, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  %260 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %233, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %261 = load i64, i64* %260, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %248, i8* %259, i64 %261) #8
  br label %262

262:                                              ; preds = %257, %254
  %263 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %232, i64 0, i32 2
  %264 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %233, i64 0, i32 2
  %265 = load i32, i32* %264, align 8
  store i32 %265, i32* %263, align 8
  %266 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %233, i64 1
  %267 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %232, i64 1
  %268 = icmp eq %"struct.net::HostMappingRules::MapRule"* %266, %2
  br i1 %268, label %269, label %231

269:                                              ; preds = %262
  %270 = ptrtoint %"struct.net::HostMappingRules::MapRule"* %267 to i64
  br label %271

271:                                              ; preds = %219, %269
  %272 = phi i64 [ %229, %219 ], [ %270, %269 ]
  store i64 %272, i64* %228, align 8
  br label %273

273:                                              ; preds = %146, %172, %271
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net16HostMappingRules13ExclusionRuleENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.6"*, %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.net::HostMappingRules::ExclusionRule"* %2 to i64
  %5 = ptrtoint %"struct.net::HostMappingRules::ExclusionRule"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.net::HostMappingRules::ExclusionRule"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.net::HostMappingRules::ExclusionRule"*
  br i1 %15, label %112, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.net::HostMappingRules::ExclusionRule"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %1, i64 %22
  %25 = select i1 %23, %"struct.net::HostMappingRules::ExclusionRule"* %24, %"struct.net::HostMappingRules::ExclusionRule"* %2
  %26 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %25, %1
  br i1 %26, label %65, label %27

27:                                               ; preds = %17, %61
  %28 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %63, %61 ], [ %16, %17 ]
  %29 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %62, %61 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %28, i64 0, i32 0
  %31 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %28, %29
  br i1 %31, label %61, label %32

32:                                               ; preds = %27
  %33 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %36, label %51, label %41

41:                                               ; preds = %32
  br i1 %40, label %45, label %42

42:                                               ; preds = %41
  %43 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %28 to i8*
  %44 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #8
  br label %61

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %47, i64 %49) #8
  br label %61

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %29 to i8*
  %57 = zext i8 %39 to i64
  %58 = select i1 %40, i8* %53, i8* %56
  %59 = select i1 %40, i64 %55, i64 %57
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %58, i64 %59) #8
  br label %61

61:                                               ; preds = %51, %45, %42, %27
  %62 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %29, i64 1
  %63 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %28, i64 1
  %64 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %62, %25
  br i1 %64, label %65, label %27

65:                                               ; preds = %61, %17
  %66 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %16, %17 ], [ %63, %61 ]
  br i1 %23, label %67, label %96

67:                                               ; preds = %65
  %68 = load i64, i64* %19, align 8
  %69 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %25, %2
  br i1 %69, label %94, label %70

70:                                               ; preds = %67
  %71 = inttoptr i64 %68 to %"struct.net::HostMappingRules::ExclusionRule"*
  br label %72

72:                                               ; preds = %88, %70
  %73 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %90, %88 ], [ %71, %70 ]
  %74 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %89, %88 ], [ %24, %70 ]
  %75 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %72
  %80 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %73 to i8*
  %81 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 24, i1 false) #8
  br label %88

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %73, i64 0, i32 0
  %84 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %83, i8* %85, i64 %87) #8
  br label %88

88:                                               ; preds = %82, %79
  %89 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %74, i64 1
  %90 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %73, i64 1
  %91 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %89, %2
  br i1 %91, label %92, label %72

92:                                               ; preds = %88
  %93 = ptrtoint %"struct.net::HostMappingRules::ExclusionRule"* %90 to i64
  br label %94

94:                                               ; preds = %67, %92
  %95 = phi i64 [ %68, %67 ], [ %93, %92 ]
  store i64 %95, i64* %19, align 8
  br label %185

96:                                               ; preds = %65
  %97 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %18, align 8
  %98 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %97, %66
  br i1 %98, label %111, label %99

99:                                               ; preds = %96, %109
  %100 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %101, %109 ], [ %97, %96 ]
  %101 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %100, i64 -1
  %102 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  tail call void @_ZdlPv(i8* %108) #10
  br label %109

109:                                              ; preds = %106, %99
  %110 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %101, %66
  br i1 %110, label %111, label %99

111:                                              ; preds = %109, %96
  store %"struct.net::HostMappingRules::ExclusionRule"* %66, %"struct.net::HostMappingRules::ExclusionRule"** %18, align 8
  br label %185

112:                                              ; preds = %3
  %113 = icmp eq i64 %12, 0
  br i1 %113, label %137, label %114

114:                                              ; preds = %112
  %115 = inttoptr i64 %12 to i8*
  %116 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %117 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %116, align 8
  %118 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %117, %16
  br i1 %118, label %134, label %119

119:                                              ; preds = %114, %129
  %120 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %121, %129 ], [ %117, %114 ]
  %121 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %120, i64 -1
  %122 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  tail call void @_ZdlPv(i8* %128) #10
  br label %129

129:                                              ; preds = %126, %119
  %130 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %121, %16
  br i1 %130, label %131, label %119

131:                                              ; preds = %129
  %132 = bitcast %"class.std::__1::vector.6"* %0 to i8**
  %133 = load i8*, i8** %132, align 8
  br label %134

134:                                              ; preds = %131, %114
  %135 = phi i8* [ %133, %131 ], [ %115, %114 ]
  store %"struct.net::HostMappingRules::ExclusionRule"* %16, %"struct.net::HostMappingRules::ExclusionRule"** %116, align 8
  tail call void @_ZdlPv(i8* %135) #10
  %136 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 24, i1 false) #8
  br label %137

137:                                              ; preds = %112, %134
  %138 = phi i64 [ %10, %112 ], [ 0, %134 ]
  %139 = icmp ugt i64 %7, 768614336404564650
  br i1 %139, label %140, label %142

140:                                              ; preds = %137
  %141 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %141) #9
  unreachable

142:                                              ; preds = %137
  %143 = sdiv exact i64 %138, 24
  %144 = icmp ult i64 %143, 384307168202282325
  br i1 %144, label %145, label %149

145:                                              ; preds = %142
  %146 = shl nsw i64 %143, 1
  %147 = icmp ult i64 %146, %7
  %148 = select i1 %147, i64 %7, i64 %146
  br label %149

149:                                              ; preds = %145, %142
  %150 = phi i64 [ %148, %145 ], [ 768614336404564650, %142 ]
  %151 = mul i64 %150, 24
  %152 = tail call i8* @_Znwm(i64 %151) #10
  %153 = bitcast i8* %152 to %"struct.net::HostMappingRules::ExclusionRule"*
  %154 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %155 = bitcast %"struct.net::HostMappingRules::ExclusionRule"** %154 to i8**
  store i8* %152, i8** %155, align 8
  %156 = bitcast %"class.std::__1::vector.6"* %0 to i8**
  store i8* %152, i8** %156, align 8
  %157 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %153, i64 %150
  store %"struct.net::HostMappingRules::ExclusionRule"* %157, %"struct.net::HostMappingRules::ExclusionRule"** %8, align 8
  %158 = bitcast %"struct.net::HostMappingRules::ExclusionRule"** %154 to i64*
  %159 = ptrtoint i8* %152 to i64
  %160 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %1, %2
  br i1 %160, label %183, label %161

161:                                              ; preds = %149, %177
  %162 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %179, %177 ], [ %153, %149 ]
  %163 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %178, %177 ], [ %1, %149 ]
  %164 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %163 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %164, i64 0, i32 1, i32 0
  %166 = load i8, i8* %165, align 1
  %167 = icmp slt i8 %166, 0
  br i1 %167, label %171, label %168

168:                                              ; preds = %161
  %169 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %162 to i8*
  %170 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %163 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 24, i1 false) #8
  br label %177

171:                                              ; preds = %161
  %172 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %162, i64 0, i32 0
  %173 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  %175 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %176 = load i64, i64* %175, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %172, i8* %174, i64 %176) #8
  br label %177

177:                                              ; preds = %171, %168
  %178 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %163, i64 1
  %179 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %162, i64 1
  %180 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %178, %2
  br i1 %180, label %181, label %161

181:                                              ; preds = %177
  %182 = ptrtoint %"struct.net::HostMappingRules::ExclusionRule"* %179 to i64
  br label %183

183:                                              ; preds = %149, %181
  %184 = phi i64 [ %159, %149 ], [ %182, %181 ]
  store i64 %184, i64* %158, align 8
  br label %185

185:                                              ; preds = %94, %111, %183
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net16HostMappingRules13ExclusionRuleENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.6"*, %"struct.net::HostMappingRules::ExclusionRule"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::HostMappingRules::ExclusionRule"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::HostMappingRules::ExclusionRule"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.net::HostMappingRules::ExclusionRule"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %33, i64 %32
  %36 = ptrtoint %"struct.net::HostMappingRules::ExclusionRule"* %35 to i64
  %37 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %34 to i8*
  %43 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #8
  br label %50

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %34, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %45, i8* %47, i64 %49) #8
  br label %50

50:                                               ; preds = %41, %44
  %51 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %34, i64 1
  %52 = ptrtoint %"struct.net::HostMappingRules::ExclusionRule"* %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 0
  %54 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %53, align 8
  %55 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %3, align 8
  %56 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %55, %54
  br i1 %56, label %57, label %59

57:                                               ; preds = %50
  %58 = ptrtoint %"struct.net::HostMappingRules::ExclusionRule"* %54 to i64
  br label %70

59:                                               ; preds = %50, %59
  %60 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %62, %59 ], [ %34, %50 ]
  %61 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %63, %59 ], [ %55, %50 ]
  %62 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %60, i64 -1
  %63 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %61, i64 -1
  %64 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %62 to i8*
  %65 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #8
  %66 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %63, %54
  br i1 %66, label %67, label %59

67:                                               ; preds = %59
  %68 = load i64, i64* %6, align 8
  %69 = load %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"** %3, align 8
  br label %70

70:                                               ; preds = %57, %67
  %71 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %54, %57 ], [ %69, %67 ]
  %72 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %34, %57 ], [ %62, %67 ]
  %73 = phi i64 [ %58, %57 ], [ %68, %67 ]
  %74 = ptrtoint %"struct.net::HostMappingRules::ExclusionRule"* %72 to i64
  store i64 %74, i64* %6, align 8
  store i64 %52, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %75 = inttoptr i64 %73 to %"struct.net::HostMappingRules::ExclusionRule"*
  %76 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %71, %75
  br i1 %76, label %89, label %77

77:                                               ; preds = %70, %87
  %78 = phi %"struct.net::HostMappingRules::ExclusionRule"* [ %79, %87 ], [ %71, %70 ]
  %79 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %78, i64 -1
  %80 = bitcast %"struct.net::HostMappingRules::ExclusionRule"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"struct.net::HostMappingRules::ExclusionRule", %"struct.net::HostMappingRules::ExclusionRule"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  tail call void @_ZdlPv(i8* %86) #10
  br label %87

87:                                               ; preds = %84, %77
  %88 = icmp eq %"struct.net::HostMappingRules::ExclusionRule"* %79, %75
  br i1 %88, label %89, label %77

89:                                               ; preds = %87, %70
  %90 = icmp eq i64 %73, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %92) #10
  br label %93

93:                                               ; preds = %89, %91
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net16HostMappingRules7MapRuleENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"*, %"struct.net::HostMappingRules::MapRule"* dereferenceable(56)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::HostMappingRules::MapRule"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 329406144173384850
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::HostMappingRules::MapRule"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 56
  %20 = icmp ult i64 %19, 164703072086692425
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 329406144173384850, %14 ]
  %28 = mul i64 %27, 56
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.net::HostMappingRules::MapRule"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.net::HostMappingRules::MapRule"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %33, i64 %32
  %36 = ptrtoint %"struct.net::HostMappingRules::MapRule"* %35 to i64
  %37 = bitcast %"struct.net::HostMappingRules::MapRule"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"struct.net::HostMappingRules::MapRule"* %34 to i8*
  %43 = bitcast %"struct.net::HostMappingRules::MapRule"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #8
  br label %50

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %34, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %45, i8* %47, i64 %49) #8
  br label %50

50:                                               ; preds = %44, %41
  %51 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %33, i64 %9, i32 1
  %52 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %1, i64 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %59 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false) #8
  br label %65

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %51, i8* %62, i64 %64) #8
  br label %65

65:                                               ; preds = %57, %60
  %66 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %33, i64 %9, i32 2
  %67 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %1, i64 0, i32 2
  %68 = load i32, i32* %67, align 8
  store i32 %68, i32* %66, align 8
  %69 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %34, i64 1
  %70 = ptrtoint %"struct.net::HostMappingRules::MapRule"* %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %72 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %71, align 8
  %73 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %3, align 8
  %74 = icmp eq %"struct.net::HostMappingRules::MapRule"* %73, %72
  br i1 %74, label %75, label %77

75:                                               ; preds = %65
  %76 = ptrtoint %"struct.net::HostMappingRules::MapRule"* %72 to i64
  br label %95

77:                                               ; preds = %65, %77
  %78 = phi %"struct.net::HostMappingRules::MapRule"* [ %80, %77 ], [ %34, %65 ]
  %79 = phi %"struct.net::HostMappingRules::MapRule"* [ %81, %77 ], [ %73, %65 ]
  %80 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %78, i64 -1
  %81 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %79, i64 -1
  %82 = bitcast %"struct.net::HostMappingRules::MapRule"* %80 to i8*
  %83 = bitcast %"struct.net::HostMappingRules::MapRule"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #8
  %84 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %78, i64 -1, i32 1
  %85 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %79, i64 -1, i32 1
  %86 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  %87 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #8
  %88 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %78, i64 -1, i32 2
  %89 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %79, i64 -1, i32 2
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %88, align 8
  %91 = icmp eq %"struct.net::HostMappingRules::MapRule"* %81, %72
  br i1 %91, label %92, label %77

92:                                               ; preds = %77
  %93 = load i64, i64* %6, align 8
  %94 = load %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"** %3, align 8
  br label %95

95:                                               ; preds = %75, %92
  %96 = phi %"struct.net::HostMappingRules::MapRule"* [ %72, %75 ], [ %94, %92 ]
  %97 = phi %"struct.net::HostMappingRules::MapRule"* [ %34, %75 ], [ %80, %92 ]
  %98 = phi i64 [ %76, %75 ], [ %93, %92 ]
  %99 = ptrtoint %"struct.net::HostMappingRules::MapRule"* %97 to i64
  store i64 %99, i64* %6, align 8
  store i64 %70, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %100 = inttoptr i64 %98 to %"struct.net::HostMappingRules::MapRule"*
  %101 = icmp eq %"struct.net::HostMappingRules::MapRule"* %96, %100
  br i1 %101, label %123, label %102

102:                                              ; preds = %95, %121
  %103 = phi %"struct.net::HostMappingRules::MapRule"* [ %104, %121 ], [ %96, %95 ]
  %104 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %103, i64 -1
  %105 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %103, i64 -1, i32 1
  %106 = bitcast %"class.std::__1::basic_string"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  tail call void @_ZdlPv(i8* %112) #10
  br label %113

113:                                              ; preds = %110, %102
  %114 = bitcast %"struct.net::HostMappingRules::MapRule"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"struct.net::HostMappingRules::MapRule", %"struct.net::HostMappingRules::MapRule"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  tail call void @_ZdlPv(i8* %120) #10
  br label %121

121:                                              ; preds = %118, %113
  %122 = icmp eq %"struct.net::HostMappingRules::MapRule"* %104, %100
  br i1 %122, label %123, label %102

123:                                              ; preds = %121, %95
  %124 = icmp eq i64 %98, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %123
  %126 = inttoptr i64 %98 to i8*
  tail call void @_ZdlPv(i8* %126) #10
  br label %127

127:                                              ; preds = %123, %125
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
