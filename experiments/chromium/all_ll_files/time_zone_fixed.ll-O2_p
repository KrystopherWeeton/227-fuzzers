; ModuleID = '../../third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_fixed.cc'
source_filename = "../../third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_fixed.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::chrono::duration" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

@.str = private unnamed_addr constant [4 x i8] c"UTC\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"UTC0\00", align 1
@_ZN4absl13time_internal4cctz12_GLOBAL__N_116kFixedZonePrefixE = internal unnamed_addr constant [10 x i8] c"Fixed/UTC\00", align 1
@_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE = internal constant [11 x i8] c"0123456789\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4absl13time_internal4cctz19FixedOffsetFromNameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS2_6chrono8durationIlNS2_5ratioILl1ELl1EEEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::chrono::duration"* nocapture) local_unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 3
  br i1 %11, label %12, label %19

12:                                               ; preds = %2
  %13 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #7
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %33, label %15

15:                                               ; preds = %12
  %16 = load i8, i8* %4, align 1
  %17 = load i64, i64* %7, align 8
  %18 = zext i8 %16 to i64
  br label %19

19:                                               ; preds = %15, %2
  %20 = phi i64 [ %18, %15 ], [ %9, %2 ]
  %21 = phi i64 [ %17, %15 ], [ %8, %2 ]
  %22 = phi i8 [ %16, %15 ], [ %5, %2 ]
  %23 = icmp slt i8 %22, 0
  %24 = select i1 %23, i64 %21, i64 %20
  %25 = icmp eq i64 %24, 4
  br i1 %25, label %26, label %35

26:                                               ; preds = %19
  %27 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #7
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = load i8, i8* %4, align 1
  %31 = load i64, i64* %7, align 8
  %32 = zext i8 %30 to i64
  br label %35

33:                                               ; preds = %26, %12
  %34 = getelementptr inbounds %"class.std::__1::chrono::duration", %"class.std::__1::chrono::duration"* %1, i64 0, i32 0
  store i64 0, i64* %34, align 8
  br label %139

35:                                               ; preds = %29, %19
  %36 = phi i64 [ %32, %29 ], [ %20, %19 ]
  %37 = phi i64 [ %31, %29 ], [ %21, %19 ]
  %38 = phi i8 [ %30, %29 ], [ %22, %19 ]
  %39 = icmp slt i8 %38, 0
  %40 = select i1 %39, i64 %37, i64 %36
  %41 = icmp eq i64 %40, 18
  br i1 %41, label %42, label %139

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %46 = select i1 %39, i8* %44, i8* %45
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 70
  br i1 %48, label %49, label %139

49:                                               ; preds = %42
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 105
  br i1 %52, label %141, label %139

53:                                               ; preds = %169, %169
  %54 = getelementptr inbounds i8, i8* %46, i64 12
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 58
  br i1 %56, label %57, label %139

57:                                               ; preds = %53
  %58 = getelementptr inbounds i8, i8* %46, i64 15
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 58
  br i1 %60, label %61, label %139

61:                                               ; preds = %57
  %62 = getelementptr inbounds i8, i8* %46, i64 10
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = tail call i8* @memchr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE, i64 0, i64 0), i32 %64, i64 11) #7
  %66 = icmp eq i8* %65, null
  br i1 %66, label %139, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds i8, i8* %46, i64 11
  %69 = load i8, i8* %68, align 1
  %70 = sext i8 %69 to i32
  %71 = tail call i8* @memchr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE, i64 0, i64 0), i32 %70, i64 11) #7
  %72 = icmp eq i8* %71, null
  br i1 %72, label %139, label %73

73:                                               ; preds = %67
  %74 = ptrtoint i8* %65 to i64
  %75 = trunc i64 %74 to i32
  %76 = sub i32 %75, ptrtoint ([11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE to i32)
  %77 = mul nsw i32 %76, 10
  %78 = ptrtoint i8* %71 to i64
  %79 = trunc i64 %78 to i32
  %80 = sub i32 %77, ptrtoint ([11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE to i32)
  %81 = add i32 %80, %79
  %82 = icmp eq i32 %81, -1
  br i1 %82, label %139, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds i8, i8* %46, i64 13
  %85 = load i8, i8* %84, align 1
  %86 = sext i8 %85 to i32
  %87 = tail call i8* @memchr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE, i64 0, i64 0), i32 %86, i64 11) #7
  %88 = icmp eq i8* %87, null
  br i1 %88, label %139, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %46, i64 14
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = tail call i8* @memchr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE, i64 0, i64 0), i32 %92, i64 11) #7
  %94 = icmp eq i8* %93, null
  br i1 %94, label %139, label %95

95:                                               ; preds = %89
  %96 = ptrtoint i8* %87 to i64
  %97 = trunc i64 %96 to i32
  %98 = sub i32 %97, ptrtoint ([11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE to i32)
  %99 = mul nsw i32 %98, 10
  %100 = ptrtoint i8* %93 to i64
  %101 = trunc i64 %100 to i32
  %102 = sub i32 %99, ptrtoint ([11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE to i32)
  %103 = add i32 %102, %101
  %104 = icmp eq i32 %103, -1
  br i1 %104, label %139, label %105

105:                                              ; preds = %95
  %106 = getelementptr inbounds i8, i8* %46, i64 16
  %107 = load i8, i8* %106, align 1
  %108 = sext i8 %107 to i32
  %109 = tail call i8* @memchr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE, i64 0, i64 0), i32 %108, i64 11) #7
  %110 = icmp eq i8* %109, null
  br i1 %110, label %139, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds i8, i8* %46, i64 17
  %113 = load i8, i8* %112, align 1
  %114 = sext i8 %113 to i32
  %115 = tail call i8* @memchr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE, i64 0, i64 0), i32 %114, i64 11) #7
  %116 = icmp eq i8* %115, null
  br i1 %116, label %139, label %117

117:                                              ; preds = %111
  %118 = ptrtoint i8* %109 to i64
  %119 = trunc i64 %118 to i32
  %120 = sub i32 %119, ptrtoint ([11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE to i32)
  %121 = mul nsw i32 %120, 10
  %122 = ptrtoint i8* %115 to i64
  %123 = trunc i64 %122 to i32
  %124 = sub i32 %121, ptrtoint ([11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE to i32)
  %125 = add i32 %124, %123
  %126 = icmp eq i32 %125, -1
  br i1 %126, label %139, label %127

127:                                              ; preds = %117
  %128 = mul nsw i32 %81, 60
  %129 = add nsw i32 %103, %128
  %130 = mul nsw i32 %129, 60
  %131 = add nsw i32 %125, %130
  %132 = icmp sgt i32 %131, 86400
  br i1 %132, label %139, label %133

133:                                              ; preds = %127
  %134 = icmp eq i8 %171, 45
  %135 = select i1 %134, i32 -1, i32 1
  %136 = mul nsw i32 %131, %135
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds %"class.std::__1::chrono::duration", %"class.std::__1::chrono::duration"* %1, i64 0, i32 0
  store i64 %137, i64* %138, align 8
  br label %139

139:                                              ; preds = %42, %49, %141, %145, %149, %153, %157, %161, %165, %111, %105, %89, %83, %67, %61, %35, %73, %133, %117, %127, %95, %53, %57, %169, %33
  %140 = phi i1 [ true, %33 ], [ false, %35 ], [ false, %169 ], [ false, %57 ], [ false, %53 ], [ false, %73 ], [ false, %95 ], [ true, %133 ], [ false, %117 ], [ false, %127 ], [ false, %61 ], [ false, %67 ], [ false, %83 ], [ false, %89 ], [ false, %105 ], [ false, %111 ], [ false, %165 ], [ false, %161 ], [ false, %157 ], [ false, %153 ], [ false, %149 ], [ false, %145 ], [ false, %141 ], [ false, %49 ], [ false, %42 ]
  ret i1 %140

141:                                              ; preds = %49
  %142 = getelementptr inbounds i8, i8* %46, i64 2
  %143 = load i8, i8* %142, align 1
  %144 = icmp eq i8 %143, 120
  br i1 %144, label %145, label %139

145:                                              ; preds = %141
  %146 = getelementptr inbounds i8, i8* %46, i64 3
  %147 = load i8, i8* %146, align 1
  %148 = icmp eq i8 %147, 101
  br i1 %148, label %149, label %139

149:                                              ; preds = %145
  %150 = getelementptr inbounds i8, i8* %46, i64 4
  %151 = load i8, i8* %150, align 1
  %152 = icmp eq i8 %151, 100
  br i1 %152, label %153, label %139

153:                                              ; preds = %149
  %154 = getelementptr inbounds i8, i8* %46, i64 5
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, 47
  br i1 %156, label %157, label %139

157:                                              ; preds = %153
  %158 = getelementptr inbounds i8, i8* %46, i64 6
  %159 = load i8, i8* %158, align 1
  %160 = icmp eq i8 %159, 85
  br i1 %160, label %161, label %139

161:                                              ; preds = %157
  %162 = getelementptr inbounds i8, i8* %46, i64 7
  %163 = load i8, i8* %162, align 1
  %164 = icmp eq i8 %163, 84
  br i1 %164, label %165, label %139

165:                                              ; preds = %161
  %166 = getelementptr inbounds i8, i8* %46, i64 8
  %167 = load i8, i8* %166, align 1
  %168 = icmp eq i8 %167, 67
  br i1 %168, label %169, label %139

169:                                              ; preds = %165
  %170 = getelementptr inbounds i8, i8* %46, i64 9
  %171 = load i8, i8* %170, align 1
  switch i8 %171, label %139 [
    i8 43, label %53
    i8 45, label %53
  ]
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13time_internal4cctz17FixedOffsetToNameERKNSt3__16chrono8durationIlNS2_5ratioILl1ELl1EEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::chrono::duration"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca [19 x i8], align 16
  %4 = getelementptr inbounds %"class.std::__1::chrono::duration", %"class.std::__1::chrono::duration"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 3, i8* %9, align 1
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #7
  %11 = getelementptr inbounds i8, i8* %10, i64 3
  store i8 0, i8* %11, align 1
  br label %102

12:                                               ; preds = %2
  %13 = add i64 %5, 86400
  %14 = icmp ugt i64 %13, 172800
  br i1 %14, label %15, label %20

15:                                               ; preds = %12
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 3, i8* %17, align 1
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #7
  %19 = getelementptr inbounds i8, i8* %18, i64 3
  store i8 0, i8* %19, align 1
  br label %102

20:                                               ; preds = %12
  %21 = trunc i64 %5 to i32
  %22 = icmp slt i32 %21, 0
  %23 = select i1 %22, i8 45, i8 43
  %24 = sdiv i32 %21, 60
  %25 = srem i32 %21, 60
  br i1 %22, label %26, label %34

26:                                               ; preds = %20
  %27 = icmp sgt i32 %25, 0
  %28 = add nsw i32 %25, -60
  %29 = zext i1 %27 to i32
  %30 = add nsw i32 %24, %29
  %31 = select i1 %27, i32 %28, i32 %25
  %32 = sub nsw i32 0, %31
  %33 = sub nsw i32 0, %30
  br label %34

34:                                               ; preds = %26, %20
  %35 = phi i32 [ %33, %26 ], [ %24, %20 ]
  %36 = phi i32 [ %32, %26 ], [ %25, %20 ]
  %37 = sdiv i32 %35, 60
  %38 = srem i32 %35, 60
  %39 = getelementptr inbounds [19 x i8], [19 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %39) #7
  %40 = getelementptr inbounds [19 x i8], [19 x i8]* %3, i64 0, i64 9
  %41 = getelementptr inbounds [19 x i8], [19 x i8]* %3, i64 0, i64 10
  %42 = getelementptr inbounds [19 x i8], [19 x i8]* %3, i64 0, i64 11
  %43 = getelementptr inbounds [19 x i8], [19 x i8]* %3, i64 0, i64 12
  %44 = getelementptr inbounds [19 x i8], [19 x i8]* %3, i64 0, i64 13
  %45 = getelementptr inbounds [19 x i8], [19 x i8]* %3, i64 0, i64 14
  %46 = getelementptr inbounds [19 x i8], [19 x i8]* %3, i64 0, i64 15
  %47 = getelementptr inbounds [19 x i8], [19 x i8]* %3, i64 0, i64 16
  %48 = getelementptr inbounds [19 x i8], [19 x i8]* %3, i64 0, i64 17
  %49 = getelementptr inbounds [19 x i8], [19 x i8]* %3, i64 0, i64 18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %39, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_116kFixedZonePrefixE, i64 0, i64 0), i64 9, i1 false) #7
  store i8 %23, i8* %40, align 1
  %50 = sdiv i32 %35, 600
  %51 = srem i32 %50, 10
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [11 x i8], [11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  store i8 %54, i8* %41, align 2
  %55 = srem i32 %37, 10
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [11 x i8], [11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  store i8 %58, i8* %42, align 1
  store i8 58, i8* %43, align 4
  %59 = sdiv i32 %38, 10
  %60 = srem i32 %59, 10
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [11 x i8], [11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE, i64 0, i64 %61
  %63 = load i8, i8* %62, align 1
  store i8 %63, i8* %44, align 1
  %64 = srem i32 %38, 10
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [11 x i8], [11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE, i64 0, i64 %65
  %67 = load i8, i8* %66, align 1
  store i8 %67, i8* %45, align 2
  store i8 58, i8* %46, align 1
  %68 = sdiv i32 %36, 10
  %69 = srem i32 %68, 10
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [11 x i8], [11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  store i8 %72, i8* %47, align 16
  %73 = srem i32 %36, 10
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [11 x i8], [11 x i8]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_17kDigitsE, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  store i8 %76, i8* %48, align 1
  store i8 0, i8* %49, align 2
  %77 = call i64 @strlen(i8* nonnull %39) #7
  %78 = icmp ugt i64 %77, -17
  br i1 %78, label %79, label %81

79:                                               ; preds = %34
  %80 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %80) #8
  unreachable

81:                                               ; preds = %34
  %82 = icmp ult i64 %77, 23
  br i1 %82, label %91, label %83

83:                                               ; preds = %81
  %84 = add nuw i64 %77, 16
  %85 = and i64 %84, -16
  %86 = tail call i8* @_Znwm(i64 %85) #9
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %86, i8** %87, align 8
  %88 = or i64 %85, -9223372036854775808
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %77, i64* %90, align 8
  br label %97

91:                                               ; preds = %81
  %92 = trunc i64 %77 to i8
  %93 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  store i8 %92, i8* %94, align 1
  %95 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %96 = icmp eq i64 %77, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %91, %83
  %98 = phi i8* [ %86, %83 ], [ %95, %91 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %98, i8* nonnull align 16 %39, i64 %77, i1 false) #7
  br label %99

99:                                               ; preds = %91, %97
  %100 = phi i8* [ %95, %91 ], [ %98, %97 ]
  %101 = getelementptr inbounds i8, i8* %100, i64 %77
  store i8 0, i8* %101, align 1
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %39) #7
  br label %102

102:                                              ; preds = %99, %15, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13time_internal4cctz17FixedOffsetToAbbrERKNSt3__16chrono8durationIlNS2_5ratioILl1ELl1EEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::chrono::duration"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 24, i1 false)
  tail call void @_ZN4absl13time_internal4cctz17FixedOffsetToNameERKNSt3__16chrono8durationIlNS2_5ratioILl1ELl1EEEEE(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::chrono::duration"* dereferenceable(8) %1)
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = load i64, i64* %4, align 8
  %11 = zext i8 %8 to i64
  %12 = select i1 %9, i64 %10, i64 %11
  %13 = icmp eq i64 %12, 18
  br i1 %13, label %14, label %72

14:                                               ; preds = %2
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %0, i64 0, i64 9) #7
  %15 = load i8, i8* %7, align 1
  %16 = icmp slt i8 %15, 0
  %17 = load i64, i64* %4, align 8
  %18 = zext i8 %15 to i64
  %19 = select i1 %16, i64 %17, i64 %18
  %20 = icmp ult i64 %19, 6
  br i1 %20, label %21, label %23

21:                                               ; preds = %14
  %22 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %22) #8
  unreachable

23:                                               ; preds = %14
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %0, i64 6, i64 1) #7
  %24 = load i8, i8* %7, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i64, i64* %4, align 8
  %27 = zext i8 %24 to i64
  %28 = select i1 %25, i64 %26, i64 %27
  %29 = icmp ult i64 %28, 3
  br i1 %29, label %30, label %32

30:                                               ; preds = %23
  %31 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %31) #8
  unreachable

32:                                               ; preds = %23
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %0, i64 3, i64 1) #7
  %33 = load i8, i8* %7, align 1
  %34 = icmp slt i8 %33, 0
  %35 = load i8*, i8** %3, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %37 = select i1 %34, i8* %35, i8* %36
  %38 = getelementptr inbounds i8, i8* %37, i64 5
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 48
  br i1 %40, label %41, label %72

41:                                               ; preds = %32
  %42 = getelementptr inbounds i8, i8* %37, i64 6
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 48
  br i1 %44, label %45, label %72

45:                                               ; preds = %41
  %46 = load i64, i64* %4, align 8
  %47 = zext i8 %33 to i64
  %48 = select i1 %34, i64 %46, i64 %47
  %49 = icmp ult i64 %48, 5
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %51) #8
  unreachable

52:                                               ; preds = %45
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %0, i64 5, i64 2) #7
  %53 = load i8, i8* %7, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i8*, i8** %3, align 8
  %56 = select i1 %54, i8* %55, i8* %36
  %57 = getelementptr inbounds i8, i8* %56, i64 3
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 48
  br i1 %59, label %60, label %72

60:                                               ; preds = %52
  %61 = getelementptr inbounds i8, i8* %56, i64 4
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 48
  br i1 %63, label %64, label %72

64:                                               ; preds = %60
  %65 = load i64, i64* %4, align 8
  %66 = zext i8 %53 to i64
  %67 = select i1 %54, i64 %65, i64 %66
  %68 = icmp ult i64 %67, 3
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  %70 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %70) #8
  unreachable

71:                                               ; preds = %64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %0, i64 3, i64 2) #7
  br label %72

72:                                               ; preds = %2, %52, %60, %71, %41, %32
  ret void
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
