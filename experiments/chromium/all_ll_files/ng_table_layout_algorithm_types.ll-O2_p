; ModuleID = '../../third_party/blink/renderer/core/layout/ng/table/ng_table_layout_algorithm_types.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/table/ng_table_layout_algorithm_types.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::NGTableGroupedChildren" = type { %"class.WTF::Vector.1690", %"class.WTF::Vector.1690", %"class.blink::NGBlockNode", %"class.WTF::Vector.1690", %"class.blink::NGBlockNode" }
%"class.WTF::Vector.1690" = type { %"class.WTF::VectorBuffer.1691" }
%"class.WTF::VectorBuffer.1691" = type { %"class.WTF::VectorBufferBase.1692" }
%"class.WTF::VectorBufferBase.1692" = type { %"class.blink::NGBlockNode"*, i32, i32 }
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1636, %"class.WTF::Vector.1637", %"class.std::__1::unique_ptr.1642", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1663, %"class.blink::Persistent.1664" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1727 }
%class.scoped_refptr.1727 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1728", %"class.WTF::Vector.630", %"class.WTF::Vector.1730", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1728" = type { %"class.base::RefCounted.1729" }
%"class.base::RefCounted.1729" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1730" = type { %"class.WTF::VectorBuffer.1731" }
%"class.WTF::VectorBuffer.1731" = type { %"class.WTF::VectorBufferBase.1732" }
%"class.WTF::VectorBufferBase.1732" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1733 }
%union.anon.1733 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1713" }
%"class.blink::Member.1713" = type { %"class.blink::MemberBase.1714" }
%"class.blink::MemberBase.1714" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1715" }
%"class.blink::Member.1715" = type { %"class.blink::MemberBase.1716" }
%"class.blink::MemberBase.1716" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1741 }
%class.scoped_refptr.1741 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1751" }
%"class.blink::Member.1751" = type { %"class.blink::MemberBase.1752" }
%"class.blink::MemberBase.1752" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1747" }
%"class.blink::MemberBase.1747" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1748" }
%"class.blink::MemberBase.1748" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1749" }
%"class.blink::MemberBase.1749" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1750" }
%"class.blink::MemberBase.1750" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1742", %"class.WTF::Vector.1742" }
%"class.WTF::Vector.1742" = type { %"class.WTF::VectorBuffer.1743" }
%"class.WTF::VectorBuffer.1743" = type { %"class.WTF::VectorBufferBase.1744" }
%"class.WTF::VectorBufferBase.1744" = type { %class.scoped_refptr.1741*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1717" }
%"class.WTF::Vector.1717" = type { %"class.WTF::VectorBuffer.1718" }
%"class.WTF::VectorBuffer.1718" = type { %"class.WTF::VectorBufferBase.1719" }
%"class.WTF::VectorBufferBase.1719" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1722", %"class.absl::optional.1722", %"class.absl::optional.1722" }
%"class.absl::optional.1722" = type { %"class.absl::optional_internal::optional_data.1723" }
%"class.absl::optional_internal::optional_data.1723" = type { %"class.absl::optional_internal::optional_data_base.1724" }
%"class.absl::optional_internal::optional_data_base.1724" = type { %"class.absl::optional_internal::optional_data_dtor_base.1725" }
%"class.absl::optional_internal::optional_data_dtor_base.1725" = type { i8, %union.anon.1726 }
%union.anon.1726 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1737" }
%"class.WTF::VectorBuffer.1737" = type { %"class.WTF::VectorBufferBase.1738", [32 x i8] }
%"class.WTF::VectorBufferBase.1738" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1636 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1637" = type { %"class.WTF::VectorBuffer.1638" }
%"class.WTF::VectorBuffer.1638" = type { %"class.WTF::VectorBufferBase.1639", [8 x i8] }
%"class.WTF::VectorBufferBase.1639" = type { %class.scoped_refptr.1636*, i32, i32 }
%"class.std::__1::unique_ptr.1642" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1645", %"class.absl::optional.1650", %"class.absl::optional.1655" }
%"class.absl::optional.1645" = type { %"class.absl::optional_internal::optional_data.1646" }
%"class.absl::optional_internal::optional_data.1646" = type { %"class.absl::optional_internal::optional_data_base.1647" }
%"class.absl::optional_internal::optional_data_base.1647" = type { %"class.absl::optional_internal::optional_data_dtor_base.1648" }
%"class.absl::optional_internal::optional_data_dtor_base.1648" = type { i8, %union.anon.1649 }
%union.anon.1649 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1650" = type { %"class.absl::optional_internal::optional_data.1651" }
%"class.absl::optional_internal::optional_data.1651" = type { %"class.absl::optional_internal::optional_data_base.1652" }
%"class.absl::optional_internal::optional_data_base.1652" = type { %"class.absl::optional_internal::optional_data_dtor_base.1653" }
%"class.absl::optional_internal::optional_data_dtor_base.1653" = type { i8, [3 x i8], %union.anon.1654 }
%union.anon.1654 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1655" = type { %"class.absl::optional_internal::optional_data.1656" }
%"class.absl::optional_internal::optional_data.1656" = type { %"class.absl::optional_internal::optional_data_base.1657" }
%"class.absl::optional_internal::optional_data_base.1657" = type { %"class.absl::optional_internal::optional_data_dtor_base.1658" }
%"class.absl::optional_internal::optional_data_dtor_base.1658" = type { i8, %union.anon.1659 }
%union.anon.1659 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1663 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1664" = type { %"class.blink::PersistentBase.1665" }
%"class.blink::PersistentBase.1665" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1668", %"struct.blink::PhysicalRect", %"class.blink::Member.1678" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1668" = type { %"class.std::__1::__compressed_pair.1669" }
%"class.std::__1::__compressed_pair.1669" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"struct.std::__1::__compressed_pair_elem.1670" = type { %"class.WTF::HashSet.1671"* }
%"class.WTF::HashSet.1671" = type { %"class.WTF::HashTable.1672" }
%"class.WTF::HashTable.1672" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1678" = type { %"class.blink::MemberBase.1679" }
%"class.blink::MemberBase.1679" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::NGTableGroupedChildrenIterator" = type <{ %"struct.blink::NGTableGroupedChildren"*, %"class.blink::NGBlockNode"*, i32, [4 x i8] }>
%"struct.blink::NGTableTypes::Column" = type { %"class.absl::optional.1631", %"class.absl::optional.1631", %"class.absl::optional", %"class.blink::LayoutUnit", i8, i8, i8, i8 }
%"class.absl::optional.1631" = type { %"class.absl::optional_internal::optional_data.1632" }
%"class.absl::optional_internal::optional_data.1632" = type { %"class.absl::optional_internal::optional_data_base.1633" }
%"class.absl::optional_internal::optional_data_base.1633" = type { %"class.absl::optional_internal::optional_data_dtor_base.1634" }
%"class.absl::optional_internal::optional_data_dtor_base.1634" = type { i8, %union.anon.1635 }
%union.anon.1635 = type { %"class.blink::LayoutUnit" }
%"class.blink::CalculationValue" = type <{ %"class.WTF::RefCounted.1753", [4 x i8], %"union.blink::CalculationValue::DataUnion", i8, [7 x i8] }>
%"class.WTF::RefCounted.1753" = type { %"class.base::RefCounted.1754" }
%"class.base::RefCounted.1754" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::CalculationValue::DataUnion" = type { %class.scoped_refptr.1755 }
%class.scoped_refptr.1755 = type { %"class.blink::CalculationExpressionNode"* }
%"class.blink::CalculationExpressionNode" = type opaque
%"struct.blink::NGTableTypes::CellInlineConstraint" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1680" = type { %"class.absl::optional_internal::optional_data.1681" }
%"class.absl::optional_internal::optional_data.1681" = type { %"class.absl::optional_internal::optional_data_base.1682" }
%"class.absl::optional_internal::optional_data_base.1682" = type { %"class.absl::optional_internal::optional_data_dtor_base.1683" }
%"class.absl::optional_internal::optional_data_dtor_base.1683" = type { i8, %union.anon.1684 }
%union.anon.1684 = type { %"struct.blink::MinMaxSizes" }
%class.anon = type { %"class.absl::optional.1680"*, i8*, %"class.blink::ComputedStyle"*, %"struct.blink::NGBoxStrut"*, i8*, %"class.blink::NGBlockNode"* }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.1912" }
%"class.WTF::Vector.1912" = type { %"class.WTF::VectorBuffer.1913" }
%"class.WTF::VectorBuffer.1913" = type { %"class.WTF::VectorBufferBase.1914", [64 x i8] }
%"class.WTF::VectorBufferBase.1914" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::NGConstraintSpaceBuilder" = type { %"class.blink::NGConstraintSpace", %"class.blink::LayoutUnit", i8, i8, i8, i8 }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1760, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1760 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1761 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1761 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1785 }
%class.scoped_refptr.1785 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1786", [4 x i8], %"class.std::__1::unique_ptr.1788", i64, %"class.WTF::Vector.1792", %"class.WTF::Vector.1797", %"class.WTF::Vector.1803", %"class.WTF::Vector.1821", %class.scoped_refptr.1546, %"class.WTF::HashMap.1827", %"class.WTF::Vector.1832", %"class.WTF::Vector.1792", %"class.WTF::Vector.1837", %"class.WTF::HashMap.1842", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1786" = type { %"class.base::RefCountedThreadSafe.1787" }
%"class.base::RefCountedThreadSafe.1787" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1788" = type { %"class.std::__1::__compressed_pair.1789" }
%"class.std::__1::__compressed_pair.1789" = type { %"struct.std::__1::__compressed_pair_elem.1790" }
%"struct.std::__1::__compressed_pair_elem.1790" = type { i8* }
%"class.WTF::Vector.1797" = type { %"class.WTF::VectorBuffer.1798" }
%"class.WTF::VectorBuffer.1798" = type { %"class.WTF::VectorBufferBase.1799", [8 x i8] }
%"class.WTF::VectorBufferBase.1799" = type { %class.scoped_refptr.1800*, i32, i32 }
%class.scoped_refptr.1800 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1807", %"class.std::__1::unique_ptr.1813" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1806 }
%class.scoped_refptr.1806 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1807" = type { %"class.std::__1::__compressed_pair.1808" }
%"class.std::__1::__compressed_pair.1808" = type { %"struct.std::__1::__compressed_pair_elem.1809" }
%"struct.std::__1::__compressed_pair_elem.1809" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1821" = type { %"class.WTF::VectorBuffer.1822" }
%"class.WTF::VectorBuffer.1822" = type { %"class.WTF::VectorBufferBase.1823" }
%"class.WTF::VectorBufferBase.1823" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1824", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1824" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1827" = type { %"class.WTF::HashTable.1828" }
%"class.WTF::HashTable.1828" = type <{ %"struct.WTF::KeyValuePair.1831"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1831" = type opaque
%"class.WTF::Vector.1832" = type { %"class.WTF::VectorBuffer.1833" }
%"class.WTF::VectorBuffer.1833" = type { %"class.WTF::VectorBufferBase.1834" }
%"class.WTF::VectorBufferBase.1834" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1792" = type { %"class.WTF::VectorBuffer.1793" }
%"class.WTF::VectorBuffer.1793" = type { %"class.WTF::VectorBufferBase.1794", [16 x i8] }
%"class.WTF::VectorBufferBase.1794" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1837" = type { %"class.WTF::VectorBuffer.1838" }
%"class.WTF::VectorBuffer.1838" = type { %"class.WTF::VectorBufferBase.1839" }
%"class.WTF::VectorBufferBase.1839" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1842" = type { %"class.WTF::HashTable.1843" }
%"class.WTF::HashTable.1843" = type <{ %"struct.WTF::KeyValuePair.1846"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1846" = type { i8**, %"class.std::__1::unique_ptr.1847" }
%"class.std::__1::unique_ptr.1847" = type { %"class.std::__1::__compressed_pair.1848" }
%"class.std::__1::__compressed_pair.1848" = type { %"struct.std::__1::__compressed_pair_elem.1849" }
%"struct.std::__1::__compressed_pair_elem.1849" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1853" }
%"class.std::__1::unique_ptr.1853" = type { %"class.std::__1::__compressed_pair.1854" }
%"class.std::__1::__compressed_pair.1854" = type { %"struct.std::__1::__compressed_pair_elem.1855" }
%"struct.std::__1::__compressed_pair_elem.1855" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1856, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1873" }
%class.scoped_refptr.1856 = type { %"class.base::RefCountedData.1857"* }
%"class.base::RefCountedData.1857" = type { %"class.base::RefCountedThreadSafe.1858", %"class.WTF::Vector.1859" }
%"class.base::RefCountedThreadSafe.1858" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1859" = type { %"class.WTF::VectorBuffer.1860" }
%"class.WTF::VectorBuffer.1860" = type { %"class.WTF::VectorBufferBase.1861" }
%"class.WTF::VectorBufferBase.1861" = type { %class.scoped_refptr.1862*, i32, i32 }
%class.scoped_refptr.1862 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1863", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1865" }
%"class.WTF::RefCounted.1863" = type { %"class.base::RefCounted.1864" }
%"class.base::RefCounted.1864" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1865" = type { %"class.std::__1::__compressed_pair.1866" }
%"class.std::__1::__compressed_pair.1866" = type { %"struct.std::__1::__compressed_pair_elem.1867" }
%"struct.std::__1::__compressed_pair_elem.1867" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.std::__1::unique_ptr.1873" = type { %"class.std::__1::__compressed_pair.1874" }
%"class.std::__1::__compressed_pair.1874" = type { %"struct.std::__1::__compressed_pair_elem.1875" }
%"struct.std::__1::__compressed_pair_elem.1875" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1876", %"class.WTF::Vector.1889", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1876" = type { %"class.WTF::VectorBuffer.1877" }
%"class.WTF::VectorBuffer.1877" = type { %"class.WTF::VectorBufferBase.1878", [320 x i8] }
%"class.WTF::VectorBufferBase.1878" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1879", %"class.WTF::Vector.1879", %class.scoped_refptr.1884, i8, [7 x i8] }>
%"class.WTF::Vector.1879" = type { %"class.WTF::VectorBuffer.1880" }
%"class.WTF::VectorBuffer.1880" = type { %"class.WTF::VectorBufferBase.1881", [8 x i8] }
%"class.WTF::VectorBufferBase.1881" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1884 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1885", %"class.WTF::Vector.1859", %"class.WTF::Vector.1859" }
%"class.WTF::RefCounted.1885" = type { %"class.base::RefCounted.1886" }
%"class.base::RefCounted.1886" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1889" = type { %"class.WTF::VectorBuffer.1890" }
%"class.WTF::VectorBuffer.1890" = type { %"class.WTF::VectorBufferBase.1891", [288 x i8] }
%"class.WTF::VectorBufferBase.1891" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1879", %"class.WTF::Vector.1879" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1892 }
%class.scoped_refptr.1892 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"struct.blink::NGTableTypes::Section" = type <{ i32, i32, %"class.blink::LayoutUnit", %"class.absl::optional", i8, i8, i8, i8 }>
%"struct.blink::NGTableTypes::CellBlockConstraint" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBoxStrut", i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.blink::NGTableTypes::RowspanCell" = type { %"struct.blink::NGTableTypes::CellBlockConstraint", i32, i32 }
%"class.absl::optional.1685" = type { %"class.absl::optional_internal::optional_data.1686" }
%"class.absl::optional_internal::optional_data.1686" = type { %"class.absl::optional_internal::optional_data_base.1687" }
%"class.absl::optional_internal::optional_data_base.1687" = type { %"class.absl::optional_internal::optional_data_dtor_base.1688" }
%"class.absl::optional_internal::optional_data_dtor_base.1688" = type { i8, [3 x i8], %union.anon.1689 }
%union.anon.1689 = type { %"struct.blink::NGTableTypes::CellInlineConstraint" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.1896" = type { i8 }
%"class.blink::NGTableConstraintSpaceData" = type <{ %"class.WTF::RefCounted.1763", [4 x i8], %"class.WTF::Vector.1765", %"class.WTF::Vector.1770", %"class.WTF::Vector.1775", %"class.WTF::Vector.1780", %"class.blink::LayoutUnit", %"class.blink::WritingDirectionMode", [2 x i8], %"struct.blink::LogicalSize", i8, i8, i8, [5 x i8] }>
%"class.WTF::RefCounted.1763" = type { %"class.base::RefCounted.1764" }
%"class.base::RefCounted.1764" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1765" = type { %"class.WTF::VectorBuffer.1766" }
%"class.WTF::VectorBuffer.1766" = type { %"class.WTF::VectorBufferBase.1767" }
%"class.WTF::VectorBufferBase.1767" = type { %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::ColumnLocation" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1770" = type { %"class.WTF::VectorBuffer.1771" }
%"class.WTF::VectorBuffer.1771" = type { %"class.WTF::VectorBufferBase.1772" }
%"class.WTF::VectorBufferBase.1772" = type { %"struct.blink::NGTableConstraintSpaceData::Section"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Section" = type { i32, i32 }
%"class.WTF::Vector.1775" = type { %"class.WTF::VectorBuffer.1776" }
%"class.WTF::VectorBuffer.1776" = type { %"class.WTF::VectorBufferBase.1777" }
%"class.WTF::VectorBufferBase.1777" = type { %"struct.blink::NGTableConstraintSpaceData::Row"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Row" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1780" = type { %"class.WTF::VectorBuffer.1781" }
%"class.WTF::VectorBuffer.1781" = type { %"class.WTF::VectorBufferBase.1782" }
%"class.WTF::VectorBufferBase.1782" = type { %"struct.blink::NGTableConstraintSpaceData::Cell"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Cell" = type <{ %"struct.blink::NGBoxStrut", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink17NGConstraintSpaceD2Ev = comdat any

$_ZN5blink17NGConstraintSpace8RareDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink17NGShapeExclusionsD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF6VectorIN5blink11NGBlockNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11NGBlockNodeEEEmm = comdat any

@_ZN5blink12NGTableTypes19kTableMaxInlineSizeE = hidden local_unnamed_addr constant %"class.blink::LayoutUnit" { i32 64000000 }, align 4
@_ZN5blink10html_names11kNowrapAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11NGBlockNodeEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGBlockNode]\00", align 1

@_ZN5blink22NGTableGroupedChildrenC1ERKNS_11NGBlockNodeE = hidden unnamed_addr alias void (%"struct.blink::NGTableGroupedChildren"*, %"class.blink::NGBlockNode"*), void (%"struct.blink::NGTableGroupedChildren"*, %"class.blink::NGBlockNode"*)* @_ZN5blink22NGTableGroupedChildrenC2ERKNS_11NGBlockNodeE
@_ZN5blink30NGTableGroupedChildrenIteratorC1ERKNS_22NGTableGroupedChildrenEb = hidden unnamed_addr alias void (%"class.blink::NGTableGroupedChildrenIterator"*, %"struct.blink::NGTableGroupedChildren"*, i1), void (%"class.blink::NGTableGroupedChildrenIterator"*, %"struct.blink::NGTableGroupedChildren"*, i1)* @_ZN5blink30NGTableGroupedChildrenIteratorC2ERKNS_22NGTableGroupedChildrenEb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12NGTableTypes12CreateColumnERKNS_13ComputedStyleEN4absl8optionalINS_10LayoutUnitEEEb(%"struct.blink::NGTableTypes::Column"* noalias nocapture sret, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.absl::optional.1631"*
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.absl::optional.1631"*
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.absl::optional.1631"*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.absl::optional"*
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #15
  store i64 -6148914691236517376, i64* %5, align 8
  %16 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  store i64 -6148914691236517376, i64* %7, align 8
  %17 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  store i64 -6148914691236517376, i64* %9, align 8
  %18 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  store i64 -1431655936, i64* %11, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_120InlineSizesFromStyleERKNS_13ComputedStyleENS_10LayoutUnitEbPN4absl8optionalIS4_EES8_S8_PNS6_IfEE(%"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 0, i1 zeroext true, %"class.absl::optional.1631"* nonnull %6, %"class.absl::optional.1631"* nonnull %8, %"class.absl::optional.1631"* nonnull %10, %"class.absl::optional"* nonnull %12)
  %19 = load i8, i8* %15, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %4
  store i64 %2, i64* %5, align 8
  %22 = trunc i64 %2 to i8
  br label %23

23:                                               ; preds = %4, %21
  %24 = phi i8 [ 1, %4 ], [ %22, %21 ]
  %25 = load i8, i8* %16, align 8, !range !2
  %26 = icmp ne i8 %25, 0
  %27 = icmp ne i8 %24, 0
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %41

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %30, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %31, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %33, %35
  %37 = select i1 %36, %"class.blink::LayoutUnit"* %31, %"class.blink::LayoutUnit"* %30
  %38 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %37, i64 0, i32 0
  %39 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %40 = load i32, i32* %38, align 4
  store i32 %40, i32* %39, align 4
  br label %41

41:                                               ; preds = %29, %23
  %42 = load i8, i8* %18, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %46 = load float, float* %45, align 4
  %47 = fcmp oeq float %46, 0.000000e+00
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  store i8 0, i8* %18, align 8
  br label %49

49:                                               ; preds = %41, %48, %44
  %50 = phi i8 [ 0, %41 ], [ 0, %48 ], [ 1, %44 ]
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %52 = bitcast [20 x i8]* %51 to i160*
  %53 = load i160, i160* %52, align 8
  %54 = and i160 %53, 3802951800684688204490109616128
  %55 = icmp eq i160 %54, 2535301200456458802993406410752
  br i1 %3, label %73, label %56

56:                                               ; preds = %49
  %57 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57)
  store i32 0, i32* %13, align 4
  %58 = icmp eq i8 %24, 0
  %59 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %60 = bitcast i32* %13 to %"class.blink::LayoutUnit"*
  %61 = select i1 %58, %"class.blink::LayoutUnit"* %60, %"class.blink::LayoutUnit"* %59
  %62 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %61, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %71

65:                                               ; preds = %56
  %66 = icmp eq i8 %50, 0
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = load float, float* %67, align 4
  %69 = select i1 %66, float 0.000000e+00, float %68
  %70 = fcmp oeq float %69, 0.000000e+00
  br label %71

71:                                               ; preds = %65, %56
  %72 = phi i1 [ false, %56 ], [ %70, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57)
  br label %73

73:                                               ; preds = %49, %71
  %74 = phi i1 [ %72, %71 ], [ false, %49 ]
  %75 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75)
  store i32 0, i32* %14, align 4
  %76 = icmp eq i8 %25, 0
  %77 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %78 = bitcast i32* %14 to %"class.blink::LayoutUnit"*
  %79 = select i1 %76, %"class.blink::LayoutUnit"* %78, %"class.blink::LayoutUnit"* %77
  %80 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %79, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i1 %55 to i8
  %83 = zext i1 %3 to i8
  %84 = zext i1 %74 to i8
  %85 = bitcast %"struct.blink::NGTableTypes::Column"* %0 to i64*
  %86 = zext i32 %81 to i64
  %87 = shl nuw i64 %86, 32
  %88 = or i64 %87, 1
  store i64 %88, i64* %85, align 4
  %89 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %5, align 8
  store i64 %91, i64* %90, align 4
  %92 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %93 = bitcast i8* %92 to i64*
  %94 = load i64, i64* %11, align 8
  store i64 %94, i64* %93, align 4
  %95 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %95, align 4
  %96 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 4
  store i8 %24, i8* %96, align 4
  %97 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 5
  store i8 %82, i8* %97, align 1
  %98 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 6
  store i8 %83, i8* %98, align 2
  %99 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 7
  store i8 %84, i8* %99, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_120InlineSizesFromStyleERKNS_13ComputedStyleENS_10LayoutUnitEbPN4absl8optionalIS4_EES8_S8_PNS6_IfEE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i32, i1 zeroext, %"class.absl::optional.1631"* nocapture, %"class.absl::optional.1631"* nocapture, %"class.absl::optional.1631"* nocapture, %"class.absl::optional"* nocapture) unnamed_addr #2 {
  %8 = alloca float, align 4
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 0
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %14, align 8
  br i1 %2, label %16, label %26

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 3
  %19 = select i1 %13, %"class.blink::Length"* %17, %"class.blink::Length"* %18
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 7
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 6
  %22 = select i1 %13, %"class.blink::Length"* %20, %"class.blink::Length"* %21
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 5
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 4
  %25 = select i1 %13, %"class.blink::Length"* %23, %"class.blink::Length"* %24
  br label %36

26:                                               ; preds = %7
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 3
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 8
  %29 = select i1 %13, %"class.blink::Length"* %27, %"class.blink::Length"* %28
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 6
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 7
  %32 = select i1 %13, %"class.blink::Length"* %30, %"class.blink::Length"* %31
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 4
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 5
  %35 = select i1 %13, %"class.blink::Length"* %33, %"class.blink::Length"* %34
  br label %36

36:                                               ; preds = %26, %16
  %37 = phi %"class.blink::Length"* [ %22, %16 ], [ %32, %26 ]
  %38 = phi %"class.blink::Length"* [ %19, %16 ], [ %29, %26 ]
  %39 = phi %"class.blink::Length"* [ %25, %16 ], [ %35, %26 ]
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 11
  %41 = load i8, i8* %40, align 4
  %42 = and i8 %41, 2
  %43 = icmp ne i8 %42, 0
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 2
  br i1 %46, label %47, label %81

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 3
  %49 = load i8, i8* %48, align 2, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.blink::Length"* %38 to float*
  %53 = load float, float* %52, align 4
  br label %58

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = sitofp i32 %56 to float
  br label %58

58:                                               ; preds = %51, %54
  %59 = phi float [ %53, %51 ], [ %57, %54 ]
  %60 = fmul float %59, 6.400000e+01
  %61 = fcmp ult float %60, 0xC1E0000000000000
  %62 = fcmp ugt float %60, 0x41DFFFFFE0000000
  %63 = fcmp ogt float %60, 0xC1E0000000000000
  %64 = select i1 %63, float %60, float 0xC1E0000000000000
  %65 = fptosi float %64 to i32
  %66 = select i1 %61, i32 0, i32 2147483647
  %67 = select i1 %62, i32 %66, i32 %65
  %68 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 4, !range !2
  %70 = icmp eq i8 %69, 0
  %71 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %67, i32* %71, align 4
  br i1 %70, label %72, label %73

72:                                               ; preds = %58
  store i8 1, i8* %68, align 4
  br label %73

73:                                               ; preds = %58, %72
  br i1 %43, label %74, label %81

74:                                               ; preds = %73
  %75 = icmp slt i32 %1, 0
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %67, i32 %1) #15
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !3
  store i32 %80, i32* %71, align 4
  br label %81

81:                                               ; preds = %73, %74, %36
  %82 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %37, i64 0, i32 2
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 2
  br i1 %84, label %85, label %119

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %37, i64 0, i32 3
  %87 = load i8, i8* %86, align 2, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %85
  %90 = bitcast %"class.blink::Length"* %37 to float*
  %91 = load float, float* %90, align 4
  br label %96

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %37, i64 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = sitofp i32 %94 to float
  br label %96

96:                                               ; preds = %89, %92
  %97 = phi float [ %91, %89 ], [ %95, %92 ]
  %98 = fmul float %97, 6.400000e+01
  %99 = fcmp ult float %98, 0xC1E0000000000000
  %100 = fcmp ugt float %98, 0x41DFFFFFE0000000
  %101 = fcmp ogt float %98, 0xC1E0000000000000
  %102 = select i1 %101, float %98, float 0xC1E0000000000000
  %103 = fptosi float %102 to i32
  %104 = select i1 %99, i32 0, i32 2147483647
  %105 = select i1 %100, i32 %104, i32 %103
  %106 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8, i8* %106, align 4, !range !2
  %108 = icmp eq i8 %107, 0
  %109 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %105, i32* %109, align 4
  br i1 %108, label %110, label %111

110:                                              ; preds = %96
  store i8 1, i8* %106, align 4
  br label %111

111:                                              ; preds = %96, %110
  br i1 %43, label %112, label %119

112:                                              ; preds = %111
  %113 = icmp slt i32 %1, 0
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %1) #15
  %116 = extractvalue { i32, i1 } %115, 1
  %117 = extractvalue { i32, i1 } %115, 0
  %118 = select i1 %116, i32 %114, i32 %117, !prof !3
  store i32 %118, i32* %109, align 4
  br label %119

119:                                              ; preds = %111, %112, %81
  %120 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %39, i64 0, i32 2
  %121 = load i8, i8* %120, align 1
  %122 = icmp eq i8 %121, 2
  br i1 %122, label %123, label %171

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %39, i64 0, i32 3
  %125 = load i8, i8* %124, align 2, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %123
  %128 = bitcast %"class.blink::Length"* %39 to float*
  %129 = load float, float* %128, align 4
  br label %134

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %39, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = sitofp i32 %132 to float
  br label %134

134:                                              ; preds = %127, %130
  %135 = phi float [ %129, %127 ], [ %133, %130 ]
  %136 = fmul float %135, 6.400000e+01
  %137 = fcmp ult float %136, 0xC1E0000000000000
  %138 = fcmp ugt float %136, 0x41DFFFFFE0000000
  %139 = fcmp ogt float %136, 0xC1E0000000000000
  %140 = select i1 %139, float %136, float 0xC1E0000000000000
  %141 = fptosi float %140 to i32
  %142 = select i1 %137, i32 0, i32 2147483647
  %143 = select i1 %138, i32 %142, i32 %141
  %144 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8, i8* %144, align 4, !range !2
  %146 = icmp eq i8 %145, 0
  %147 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %143, i32* %147, align 4
  br i1 %146, label %148, label %149

148:                                              ; preds = %134
  store i8 1, i8* %144, align 4
  br label %149

149:                                              ; preds = %134, %148
  br i1 %43, label %150, label %157

150:                                              ; preds = %149
  %151 = icmp slt i32 %1, 0
  %152 = select i1 %151, i32 -2147483648, i32 2147483647
  %153 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %143, i32 %1) #15
  %154 = extractvalue { i32, i1 } %153, 1
  %155 = extractvalue { i32, i1 } %153, 0
  %156 = select i1 %154, i32 %152, i32 %155, !prof !3
  store i32 %156, i32* %147, align 4
  br label %157

157:                                              ; preds = %150, %149
  %158 = phi i32 [ %156, %150 ], [ %143, %149 ]
  %159 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i8, i8* %159, align 4, !range !2
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %171, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %164 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %165 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %163, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = icmp slt i32 %166, %158
  %168 = select i1 %167, %"class.blink::LayoutUnit"* %164, %"class.blink::LayoutUnit"* %163
  %169 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %168, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  store i32 %170, i32* %147, align 4
  br label %171

171:                                              ; preds = %157, %162, %119
  %172 = load i8, i8* %44, align 1
  switch i8 %172, label %208 [
    i8 1, label %173
    i8 8, label %191
  ]

173:                                              ; preds = %171
  %174 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 3
  %175 = load i8, i8* %174, align 2, !range !2
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %173
  %178 = bitcast %"class.blink::Length"* %38 to float*
  %179 = load float, float* %178, align 4
  br label %184

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 0, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = sitofp i32 %182 to float
  br label %184

184:                                              ; preds = %177, %180
  %185 = phi float [ %179, %177 ], [ %183, %180 ]
  %186 = bitcast float %185 to i32
  %187 = bitcast %"class.absl::optional"* %6 to i64*
  %188 = zext i32 %186 to i64
  %189 = shl nuw i64 %188, 32
  %190 = or i64 %189, 1
  store i64 %190, i64* %187, align 4
  br label %208

191:                                              ; preds = %171
  %192 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %38) #15
  %193 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %192, i64 0, i32 3
  %194 = load i8, i8* %193, align 8
  %195 = and i8 %194, 1
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %197, label %208

197:                                              ; preds = %191
  %198 = tail call <2 x float> @_ZNK5blink6Length19GetPixelsAndPercentEv(%"class.blink::Length"* %38) #15
  %199 = extractelement <2 x float> %198, i32 0
  %200 = fcmp oeq float %199, 0.000000e+00
  br i1 %200, label %201, label %208

201:                                              ; preds = %197
  %202 = bitcast <2 x float> %198 to <2 x i32>
  %203 = extractelement <2 x i32> %202, i32 1
  %204 = bitcast %"class.absl::optional"* %6 to i64*
  %205 = zext i32 %203 to i64
  %206 = shl nuw i64 %205, 32
  %207 = or i64 %206, 1
  store i64 %207, i64* %204, align 4
  br label %208

208:                                              ; preds = %191, %171, %197, %201, %184
  %209 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %210 = load i8, i8* %209, align 4, !range !2
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %239, label %212

212:                                              ; preds = %208
  %213 = load i8, i8* %120, align 1
  %214 = icmp eq i8 %213, 1
  br i1 %214, label %215, label %239

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %217 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %217)
  %218 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %39, i64 0, i32 3
  %219 = load i8, i8* %218, align 2, !range !2
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %224, label %221

221:                                              ; preds = %215
  %222 = bitcast %"class.blink::Length"* %39 to float*
  %223 = load float, float* %222, align 4
  br label %228

224:                                              ; preds = %215
  %225 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %39, i64 0, i32 0, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = sitofp i32 %226 to float
  br label %228

228:                                              ; preds = %221, %224
  %229 = phi float [ %223, %221 ], [ %227, %224 ]
  store float %229, float* %8, align 4
  %230 = load float, float* %216, align 4
  %231 = fcmp olt float %229, %230
  %232 = select i1 %231, float* %8, float* %216
  %233 = bitcast float* %232 to i32*
  %234 = load i32, i32* %233, align 4
  %235 = bitcast %"class.absl::optional"* %6 to i64*
  %236 = zext i32 %234 to i64
  %237 = shl nuw i64 %236, 32
  %238 = or i64 %237, 1
  store i64 %238, i64* %235, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %217)
  br label %239

239:                                              ; preds = %208, %228, %212
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12NGTableTypes26CreateCellInlineConstraintERKNS_11NGBlockNodeENS_11WritingModeEbRKNS_10NGBoxStrutES7_(%"struct.blink::NGTableTypes::CellInlineConstraint"* noalias nocapture sret, %"class.blink::NGBlockNode"* dereferenceable(16), i8 zeroext, i1 zeroext, %"struct.blink::NGBoxStrut"* dereferenceable(16), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %7 = alloca i8, align 1
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.absl::optional.1631"*
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"class.absl::optional.1631"*
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"class.absl::optional.1631"*
  %14 = alloca i64, align 8
  %15 = bitcast i64* %14 to %"class.absl::optional"*
  %16 = alloca i8, align 1
  %17 = alloca %"class.absl::optional.1680", align 4
  %18 = alloca %class.anon, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store i8 %2, i8* %7, align 1
  %23 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  store i64 -6148914691236517376, i64* %8, align 8
  %24 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  store i64 -6148914691236517376, i64* %10, align 8
  %25 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  store i64 -6148914691236517376, i64* %12, align 8
  %26 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #15
  store i64 -1431655936, i64* %14, align 8
  %27 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::LayoutObject"**
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 5, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #15
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 9
  %32 = bitcast [20 x i8]* %31 to i160*
  %33 = load i160, i160* %32, align 8
  %34 = icmp ne i8 %2, 0
  %35 = and i160 %33, 15211807202738752817960438464512
  %36 = icmp eq i160 %35, 0
  %37 = xor i1 %34, %36
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %16, align 1
  %39 = getelementptr inbounds %"class.absl::optional.1680", %"class.absl::optional.1680"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %39) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %39, i8 -86, i64 12, i1 false)
  store i8 0, i8* %39, align 4
  %40 = bitcast %class.anon* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %40) #15
  %41 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 0
  %42 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 1
  %43 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 2
  %44 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 3
  %45 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 4
  %46 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 5
  store %"class.absl::optional.1680"* %17, %"class.absl::optional.1680"** %41, align 8
  store i8* %7, i8** %42, align 8
  store %"class.blink::ComputedStyle"* %30, %"class.blink::ComputedStyle"** %43, align 8
  store %"struct.blink::NGBoxStrut"* %4, %"struct.blink::NGBoxStrut"** %44, align 8
  store i8* %16, i8** %45, align 8
  store %"class.blink::NGBlockNode"* %1, %"class.blink::NGBlockNode"** %46, align 8
  %47 = bitcast %"struct.blink::NGBoxStrut"* %4 to i64*
  %48 = load i64, i64* %47, align 4
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = trunc i64 %50 to i32
  %52 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %5, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, 0
  %55 = select i1 %54, i32 -2147483648, i32 2147483647
  %56 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %53) #15
  %57 = extractvalue { i32, i1 } %56, 1
  %58 = extractvalue { i32, i1 } %56, 0
  %59 = select i1 %57, i32 %55, i32 %58, !prof !3
  %60 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %5, i64 0, i32 1, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %61, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 %61) #15
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !3
  %68 = icmp slt i32 %67, 0
  %69 = select i1 %68, i32 -2147483648, i32 2147483647
  %70 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %67) #15
  %71 = extractvalue { i32, i1 } %70, 1
  %72 = extractvalue { i32, i1 } %70, 0
  %73 = select i1 %71, i32 %69, i32 %72, !prof !3
  call fastcc void @_ZN5blink12_GLOBAL__N_120InlineSizesFromStyleERKNS_13ComputedStyleENS_10LayoutUnitEbPN4absl8optionalIS4_EES8_S8_PNS6_IfEE(%"class.blink::ComputedStyle"* dereferenceable(104) %30, i32 %73, i1 zeroext %37, %"class.absl::optional.1631"* nonnull %9, %"class.absl::optional.1631"* nonnull %11, %"class.absl::optional.1631"* nonnull %13, %"class.absl::optional"* nonnull %15)
  %74 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74)
  store i32 0, i32* %19, align 4
  br i1 %3, label %75, label %77

75:                                               ; preds = %6
  %76 = load i8, i8* %23, align 8, !range !2
  br label %195

77:                                               ; preds = %6
  %78 = call fastcc i64 @"_ZZN5blink12NGTableTypes26CreateCellInlineConstraintERKNS_11NGBlockNodeENS_11WritingModeEbRKNS_10NGBoxStrutES7_ENK3$_0clEv"(%class.anon* nonnull %18)
  %79 = trunc i64 %78 to i32
  %80 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80)
  store i32 0, i32* %20, align 4
  %81 = load i8, i8* %24, align 8, !range !2
  %82 = icmp eq i8 %81, 0
  %83 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %84 = bitcast i32* %20 to %"class.blink::LayoutUnit"*
  %85 = select i1 %82, %"class.blink::LayoutUnit"* %84, %"class.blink::LayoutUnit"* %83
  %86 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %87, %79
  %89 = select i1 %88, i32 %87, i32 %79
  store i32 %89, i32* %19, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80)
  %90 = load i8, i8* %23, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %195, label %92

92:                                               ; preds = %77
  %93 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %94 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %93, i64 0, i32 6, i32 0, i32 0
  %95 = load %"class.blink::Node"*, %"class.blink::Node"** %94, align 8
  %96 = icmp eq %"class.blink::Node"* %95, null
  br i1 %96, label %97, label %104

97:                                               ; preds = %92, %97
  %98 = phi %"class.blink::LayoutObject"* [ %100, %97 ], [ %93, %92 ]
  %99 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %98, i64 0, i32 7
  %100 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %100, i64 0, i32 6, i32 0, i32 0
  %102 = load %"class.blink::Node"*, %"class.blink::Node"** %101, align 8
  %103 = icmp eq %"class.blink::Node"* %102, null
  br i1 %103, label %97, label %104

104:                                              ; preds = %97, %92
  %105 = phi %"class.blink::Node"* [ %95, %92 ], [ %102, %97 ]
  %106 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %105, i64 0, i32 3, i32 0, i32 0
  %107 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %107, i64 0, i32 2, i32 0, i32 0
  %109 = load %"class.blink::Document"*, %"class.blink::Document"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %109, i64 0, i32 33
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %195

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %93, i64 0, i32 4
  %115 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %114 to i96*
  %116 = load i96, i96* %115, align 4
  %117 = and i96 %116, 16777216
  %118 = icmp eq i96 %117, 0
  %119 = bitcast %"class.blink::Node"* %95 to %"class.blink::Element"*
  %120 = select i1 %118, %"class.blink::Element"* %119, %"class.blink::Element"* null
  %121 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kNowrapAttrE, align 8
  %122 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %120, i64 0, i32 3, i32 0, i32 0
  %123 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %122, align 8
  %124 = icmp eq %"class.blink::ElementData"* %123, null
  br i1 %124, label %175, label %125

125:                                              ; preds = %113
  %126 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %123, i64 0, i32 0, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %137, label %130

130:                                              ; preds = %125
  %131 = bitcast %"class.blink::ElementData"* %123 to %"class.blink::UniqueElementData"*
  %132 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %123, i64 1, i32 1
  %133 = bitcast %"class.blink::Member.354"* %132 to %"class.blink::Attribute"**
  %134 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %131, i64 0, i32 2, i32 0, i32 0, i32 2
  %136 = load i32, i32* %135, align 4
  br label %142

137:                                              ; preds = %125
  %138 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %123, i64 1
  %139 = bitcast %"class.blink::ElementData"* %138 to %"class.blink::Attribute"*
  %140 = lshr i32 %127, 1
  %141 = and i32 %140, 268435455
  br label %142

142:                                              ; preds = %137, %130
  %143 = phi %"class.blink::Attribute"* [ %139, %137 ], [ %134, %130 ]
  %144 = phi i32 [ %141, %137 ], [ %136, %130 ]
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %143, i64 %145
  %147 = icmp eq i32 %144, 0
  br i1 %147, label %175, label %148

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %121, i64 0, i32 0, i32 0
  %150 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %150, i64 0, i32 3, i32 0, i32 0, i32 0
  %152 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %150, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %153

153:                                              ; preds = %168, %148
  %154 = phi %"class.blink::Attribute"* [ %143, %148 ], [ %169, %168 ]
  %155 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %154, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %155, align 8
  %157 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %156, %150
  br i1 %157, label %171, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %156, i64 0, i32 3, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %160, %161
  br i1 %162, label %163, label %168

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %156, i64 0, i32 4, i32 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %165, %166
  br i1 %167, label %171, label %168

168:                                              ; preds = %163, %158
  %169 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %154, i64 1
  %170 = icmp eq %"class.blink::Attribute"* %169, %146
  br i1 %170, label %175, label %153

171:                                              ; preds = %163, %153
  %172 = icmp eq %"class.blink::Attribute"* %154, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %171
  %174 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %154, i64 0, i32 1
  br label %177

175:                                              ; preds = %168, %171, %142, %113
  %176 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %177

177:                                              ; preds = %173, %175
  %178 = phi %"class.WTF::AtomicString"* [ %176, %175 ], [ %174, %173 ]
  %179 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %178, i64 0, i32 0, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %177
  %183 = load i160, i160* %32, align 8
  %184 = and i160 %183, 73728
  %185 = icmp eq i160 %184, 0
  br i1 %185, label %186, label %195

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %188 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %187, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp slt i32 %89, %189
  %191 = bitcast i32* %19 to %"class.blink::LayoutUnit"*
  %192 = select i1 %190, %"class.blink::LayoutUnit"* %187, %"class.blink::LayoutUnit"* %191
  %193 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %192, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %19, align 4
  br label %195

195:                                              ; preds = %75, %77, %182, %186, %177, %104
  %196 = phi i32 [ 0, %75 ], [ %89, %77 ], [ %89, %182 ], [ %194, %186 ], [ %89, %177 ], [ %89, %104 ]
  %197 = phi i8 [ %76, %75 ], [ 0, %77 ], [ %90, %182 ], [ %90, %186 ], [ %90, %177 ], [ %90, %104 ]
  %198 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %198)
  store i32 -1431655766, i32* %21, align 4
  %199 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199)
  %200 = call fastcc i64 @"_ZZN5blink12NGTableTypes26CreateCellInlineConstraintERKNS_11NGBlockNodeENS_11WritingModeEbRKNS_10NGBoxStrutES7_ENK3$_0clEv"(%class.anon* nonnull %18)
  %201 = lshr i64 %200, 32
  %202 = trunc i64 %201 to i32
  store i32 %202, i32* %22, align 4
  %203 = icmp eq i8 %197, 0
  %204 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %205 = bitcast i32* %22 to %"class.blink::LayoutUnit"*
  %206 = select i1 %203, %"class.blink::LayoutUnit"* %205, %"class.blink::LayoutUnit"* %204
  %207 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %206, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  store i32 %208, i32* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199)
  %209 = load i8, i8* %25, align 8, !range !2
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %225, label %211

211:                                              ; preds = %195
  %212 = getelementptr inbounds %"class.absl::optional.1631", %"class.absl::optional.1631"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %213 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %212, i64 0, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = icmp slt i32 %214, %208
  %216 = bitcast i32* %21 to %"class.blink::LayoutUnit"*
  %217 = select i1 %215, %"class.blink::LayoutUnit"* %212, %"class.blink::LayoutUnit"* %216
  %218 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %217, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  store i32 %219, i32* %21, align 4
  %220 = icmp slt i32 %214, %196
  %221 = bitcast i32* %19 to %"class.blink::LayoutUnit"*
  %222 = select i1 %220, %"class.blink::LayoutUnit"* %212, %"class.blink::LayoutUnit"* %221
  %223 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %222, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  store i32 %224, i32* %19, align 4
  br label %225

225:                                              ; preds = %195, %211
  %226 = phi i32 [ %208, %195 ], [ %219, %211 ]
  %227 = phi i32 [ %196, %195 ], [ %224, %211 ]
  %228 = icmp slt i32 %227, %226
  %229 = select i1 %228, i32 %226, i32 %227
  %230 = load i8, i8* %26, align 8
  %231 = icmp ne i8 %230, 0
  %232 = and i1 %231, %3
  br i1 %232, label %233, label %265

233:                                              ; preds = %225
  %234 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 5, i32 0, i32 0
  %235 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %235, i64 0, i32 11
  %237 = load i8, i8* %236, align 4
  %238 = and i8 %237, 2
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %265, label %240

240:                                              ; preds = %233
  %241 = load i64, i64* %47, align 4
  %242 = trunc i64 %241 to i32
  %243 = lshr i64 %241, 32
  %244 = trunc i64 %243 to i32
  %245 = load i32, i32* %52, align 4
  %246 = icmp slt i32 %245, 0
  %247 = select i1 %246, i32 -2147483648, i32 2147483647
  %248 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %242, i32 %245) #15
  %249 = extractvalue { i32, i1 } %248, 1
  %250 = extractvalue { i32, i1 } %248, 0
  %251 = select i1 %249, i32 %247, i32 %250, !prof !3
  %252 = load i32, i32* %60, align 4
  %253 = icmp slt i32 %252, 0
  %254 = select i1 %253, i32 -2147483648, i32 2147483647
  %255 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %244, i32 %252) #15
  %256 = extractvalue { i32, i1 } %255, 1
  %257 = extractvalue { i32, i1 } %255, 0
  %258 = select i1 %256, i32 %254, i32 %257, !prof !3
  %259 = icmp slt i32 %258, 0
  %260 = select i1 %259, i32 -2147483648, i32 2147483647
  %261 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %251, i32 %258) #15
  %262 = extractvalue { i32, i1 } %261, 1
  %263 = extractvalue { i32, i1 } %261, 0
  %264 = select i1 %262, i32 %260, i32 %263, !prof !3
  br label %265

265:                                              ; preds = %233, %240, %225
  %266 = phi i32 [ %264, %240 ], [ 0, %233 ], [ 0, %225 ]
  %267 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 0, i32 0
  store i32 %227, i32* %267, align 4
  %268 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 1, i32 0
  store i32 %229, i32* %268, align 4
  %269 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %270 = bitcast i8* %269 to i64*
  %271 = load i64, i64* %14, align 8
  store i64 %271, i64* %270, align 4
  %272 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 3, i32 0
  store i32 %266, i32* %272, align 4
  %273 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 4
  store i8 %197, i8* %273, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %198)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc i64 @"_ZZN5blink12NGTableTypes26CreateCellInlineConstraintERKNS_11NGBlockNodeENS_11WritingModeEbRKNS_10NGBoxStrutES7_ENK3$_0clEv"(%class.anon* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = alloca %"class.blink::NGConstraintSpaceBuilder", align 8
  %3 = alloca %"class.blink::NGConstraintSpace", align 8
  %4 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %5 = load %"class.absl::optional.1680"*, %"class.absl::optional.1680"** %4, align 8
  %6 = getelementptr inbounds %"class.absl::optional.1680", %"class.absl::optional.1680"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %147

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  %11 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = lshr i160 %18, 102
  %20 = trunc i160 %19 to i16
  %21 = and i16 %20, 3
  %22 = lshr i160 %18, 108
  %23 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 -64, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 0, i32 3, i32 0
  %27 = shl nuw nsw i16 %21, 4
  %28 = trunc i160 %22 to i16
  %29 = and i16 %28, 128
  %30 = or i16 %27, %29
  %31 = zext i16 %30 to i32
  %32 = bitcast %union.anon.1760* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #15
  %33 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 1, i32 0
  store i32 -64, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 2
  %35 = icmp ne i8 %13, 0
  %36 = icmp eq i16 %21, 0
  %37 = xor i1 %35, %36
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %34, align 4
  %39 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %39, align 1
  %40 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %40, align 2
  %41 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 5
  store i8 1, i8* %41, align 1
  %42 = select i1 %37, i32 1024, i32 3072
  %43 = or i32 %42, %31
  store i32 %43, i32* %26, align 8
  %44 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 3
  %45 = load %"struct.blink::NGBoxStrut"*, %"struct.blink::NGBoxStrut"** %44, align 8
  %46 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %45, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %9
  %50 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %45, i64 0, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %61

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %45, i64 0, i32 2, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %45, i64 0, i32 3, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %81, label %61

61:                                               ; preds = %57, %53, %49, %9
  %62 = tail call noalias i8* @malloc(i64 88) #15
  %63 = getelementptr inbounds i8, i8* %62, i64 24
  %64 = bitcast i8* %63 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 24, i1 false)
  store i32 -64, i32* %64, align 4
  %65 = getelementptr inbounds i8, i8* %62, i64 28
  %66 = bitcast i8* %65 to i32*
  store i32 0, i32* %66, align 4
  %67 = getelementptr inbounds i8, i8* %62, i64 32
  %68 = bitcast i8* %67 to i16*
  %69 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 0, i32 1, i32 0
  %70 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %69 to i8**
  store i8* %62, i8** %70, align 8
  %71 = or i32 %43, 1
  store i32 %71, i32* %26, align 8
  %72 = ptrtoint i8* %62 to i64
  store i16 2, i16* %68, align 8
  %73 = getelementptr inbounds i8, i8* %62, i64 40
  %74 = getelementptr inbounds i8, i8* %62, i64 64
  %75 = bitcast i8* %74 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %73, i8 0, i64 40, i1 false) #15
  store i32 -1, i32* %75, align 4
  %76 = getelementptr inbounds i8, i8* %62, i64 68
  store i8 0, i8* %76, align 4
  %77 = getelementptr inbounds i8, i8* %62, i64 76
  store i8 0, i8* %77, align 4
  %78 = getelementptr inbounds i8, i8* %62, i64 77
  store i8 0, i8* %78, align 1
  %79 = getelementptr inbounds i8, i8* %62, i64 40
  %80 = bitcast %"struct.blink::NGBoxStrut"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %80, i64 16, i1 false) #15
  br label %81

81:                                               ; preds = %57, %61
  %82 = phi i64 [ 0, %57 ], [ %72, %61 ]
  %83 = phi i32 [ %43, %57 ], [ %71, %61 ]
  %84 = or i32 %83, 65792
  store i32 %84, i32* %26, align 8
  %85 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 4
  %86 = load i8*, i8** %85, align 8
  %87 = load i8, i8* %86, align 1, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %100

89:                                               ; preds = %81
  %90 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 5
  %91 = bitcast %"class.blink::NGBlockNode"** %90 to %"class.blink::NGLayoutInputNode"**
  %92 = load %"class.blink::NGLayoutInputNode"*, %"class.blink::NGLayoutInputNode"** %91, align 8
  %93 = tail call i64 @_ZNK5blink17NGLayoutInputNode26InitialContainingBlockSizeEv(%"class.blink::NGLayoutInputNode"* %92) #15
  %94 = lshr i64 %93, 32
  %95 = load i8*, i8** %11, align 8
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %96, 0
  %98 = select i1 %97, i64 %94, i64 %93
  %99 = trunc i64 %98 to i32
  store i32 %99, i32* %33, align 8
  br label %100

100:                                              ; preds = %81, %89
  %101 = phi i8* [ %12, %81 ], [ %95, %89 ]
  %102 = phi i32 [ -64, %81 ], [ %99, %89 ]
  %103 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %2 to i64*
  store i64 -270582939712, i64* %103, align 8
  br i1 %37, label %105, label %104, !prof !4

104:                                              ; preds = %100
  store i32 -64, i32* %24, align 4
  store i32 %102, i32* %23, align 8
  br label %105

105:                                              ; preds = %100, %104
  %106 = bitcast %"class.blink::NGConstraintSpace"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %106) #15
  %107 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 3, i32 0
  %108 = bitcast %"class.blink::NGConstraintSpace"* %3 to i64*
  %109 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 1
  %110 = bitcast %union.anon.1760* %109 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 24, i1 false)
  %111 = load i64, i64* %103, align 8, !noalias !5
  store i64 %111, i64* %108, align 8, !alias.scope !5
  %112 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 2
  %113 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %113, align 8, !noalias !5
  %114 = bitcast %"class.blink::NGExclusionSpace"* %112 to i64*
  store i64 0, i64* %114, align 8, !alias.scope !5
  store i32 %84, i32* %107, align 8, !alias.scope !5
  %115 = and i32 %83, 1
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %105
  %118 = getelementptr inbounds %union.anon.1760, %union.anon.1760* %25, i64 0, i32 0
  %119 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 1
  %120 = bitcast %union.anon.1760* %119 to i64*
  store i64 %82, i64* %120, align 8, !alias.scope !5
  store %"struct.blink::NGConstraintSpace::RareData"* null, %"struct.blink::NGConstraintSpace::RareData"** %118, align 8, !noalias !5
  br label %124

121:                                              ; preds = %105
  %122 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %3, i64 0, i32 1
  %123 = bitcast %union.anon.1760* %122 to i64*
  store i64 %82, i64* %123, align 8, !alias.scope !5
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 5
  %126 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %125, align 8
  %127 = load i8, i8* %101, align 1
  %128 = call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %126, i8 zeroext %127, i32 1, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %3, i64 0) #15
  %129 = extractvalue { i64, i8 } %128, 0
  %130 = load %"class.absl::optional.1680"*, %"class.absl::optional.1680"** %4, align 8
  %131 = getelementptr inbounds %"class.absl::optional.1680", %"class.absl::optional.1680"* %130, i64 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i8, i8* %131, align 4, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %137, label %134

134:                                              ; preds = %124
  %135 = getelementptr inbounds %"class.absl::optional.1680", %"class.absl::optional.1680"* %130, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %136 = bitcast %"struct.blink::MinMaxSizes"* %135 to i64*
  store i64 %129, i64* %136, align 4
  br label %140

137:                                              ; preds = %124
  %138 = getelementptr inbounds %"class.absl::optional.1680", %"class.absl::optional.1680"* %130, i64 0, i32 0, i32 0, i32 0, i32 1
  %139 = bitcast %union.anon.1684* %138 to i64*
  store i64 %129, i64* %139, align 4
  store i8 1, i8* %131, align 4
  br label %140

140:                                              ; preds = %137, %134
  call void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #15
  %141 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %2, i64 0, i32 0
  call void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"* nonnull %141) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #15
  %142 = load %"class.absl::optional.1680"*, %"class.absl::optional.1680"** %4, align 8
  %143 = getelementptr inbounds %"class.absl::optional.1680", %"class.absl::optional.1680"* %142, i64 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8, i8* %143, align 4, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %147, !prof !3

146:                                              ; preds = %140
  call void @llvm.trap() #15
  unreachable

147:                                              ; preds = %1, %140
  %148 = phi %"class.absl::optional.1680"* [ %142, %140 ], [ %5, %1 ]
  %149 = getelementptr inbounds %"class.absl::optional.1680", %"class.absl::optional.1680"* %148, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %150 = bitcast %"struct.blink::MinMaxSizes"* %149 to i64*
  %151 = load i64, i64* %150, align 4
  ret i64 %151
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12NGTableTypes13CreateSectionERKNS_17NGLayoutInputNodeEjjNS_10LayoutUnitEb(%"struct.blink::NGTableTypes::Section"* noalias nocapture sret, %"class.blink::NGLayoutInputNode"* nocapture readonly dereferenceable(16), i32, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = zext i1 %5 to i8
  %8 = bitcast %"class.blink::NGLayoutInputNode"* %1 to %"class.blink::LayoutObject"**
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 15211807202738752817960438464512
  %16 = icmp eq i160 %15, 0
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %18, i64 0, i32 3
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %18, i64 0, i32 8
  %21 = select i1 %16, %"class.blink::Length"* %19, %"class.blink::Length"* %20
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %21, i64 0, i32 2
  %23 = load i8, i8* %22, align 1
  switch i8 %23, label %40 [
    i8 2, label %41
    i8 1, label %24
  ]

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %21, i64 0, i32 3
  %26 = load i8, i8* %25, align 2, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::Length"* %21 to float*
  %30 = load float, float* %29, align 4
  br label %35

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %21, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = sitofp i32 %33 to float
  br label %35

35:                                               ; preds = %28, %31
  %36 = phi float [ %30, %28 ], [ %34, %31 ]
  %37 = bitcast float %36 to i32
  %38 = zext i32 %37 to i64
  %39 = shl nuw i64 %38, 32
  br label %41

40:                                               ; preds = %6
  br label %41

41:                                               ; preds = %6, %40, %35
  %42 = phi i8 [ 1, %35 ], [ 1, %6 ], [ 0, %40 ]
  %43 = phi i64 [ 1, %35 ], [ 0, %6 ], [ 0, %40 ]
  %44 = phi i64 [ %39, %35 ], [ -1431655936, %6 ], [ -1431655936, %40 ]
  %45 = getelementptr inbounds %"struct.blink::NGTableTypes::Section", %"struct.blink::NGTableTypes::Section"* %0, i64 0, i32 0
  store i32 %2, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.blink::NGTableTypes::Section", %"struct.blink::NGTableTypes::Section"* %0, i64 0, i32 1
  store i32 %3, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.blink::NGTableTypes::Section", %"struct.blink::NGTableTypes::Section"* %0, i64 0, i32 2, i32 0
  store i32 %4, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.blink::NGTableTypes::Section", %"struct.blink::NGTableTypes::Section"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %49 = bitcast i8* %48 to i64*
  %50 = or i64 %44, %43
  store i64 %50, i64* %49, align 4
  %51 = getelementptr inbounds %"struct.blink::NGTableTypes::Section", %"struct.blink::NGTableTypes::Section"* %0, i64 0, i32 4
  store i8 %42, i8* %51, align 4
  %52 = getelementptr inbounds %"struct.blink::NGTableTypes::Section", %"struct.blink::NGTableTypes::Section"* %0, i64 0, i32 5
  store i8 %7, i8* %52, align 1
  %53 = getelementptr inbounds %"struct.blink::NGTableTypes::Section", %"struct.blink::NGTableTypes::Section"* %0, i64 0, i32 6
  store i8 0, i8* %53, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink12NGTableTypes25CreateCellBlockConstraintERKNS_17NGLayoutInputNodeENS_10LayoutUnitES4_RKNS_10NGBoxStrutEjjj(%"struct.blink::NGTableTypes::CellBlockConstraint"* noalias nocapture sret, %"class.blink::NGLayoutInputNode"* nocapture readonly dereferenceable(16), i32, i32, %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), i32, i32, i32) local_unnamed_addr #4 align 2 {
  %9 = bitcast %"class.blink::NGLayoutInputNode"* %1 to %"class.blink::LayoutObject"**
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = and i160 %15, 15211807202738752817960438464512
  %17 = icmp eq i160 %16, 0
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 5, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %19, i64 0, i32 3
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %19, i64 0, i32 8
  %22 = select i1 %17, %"class.blink::Length"* %20, %"class.blink::Length"* %21
  %23 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %22, i64 0, i32 2
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 2
  %26 = bitcast %"struct.blink::NGBoxStrut"* %4 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 4
  %28 = lshr i160 %15, 64
  %29 = trunc i160 %28 to i32
  %30 = and i32 %29, 15
  %31 = zext i1 %25 to i8
  %32 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %0, i64 0, i32 0, i32 0
  store i32 %2, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %0, i64 0, i32 1, i32 0
  store i32 %3, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %0, i64 0, i32 2
  %35 = bitcast %"struct.blink::NGBoxStrut"* %34 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %35, align 4
  %36 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %0, i64 0, i32 3
  store i32 %5, i32* %36, align 4
  %37 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %0, i64 0, i32 4
  store i32 %6, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %0, i64 0, i32 5
  store i32 %7, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %0, i64 0, i32 6
  store i32 %30, i32* %39, align 4
  %40 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %0, i64 0, i32 7
  store i8 %31, i8* %40, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12NGTableTypes17CreateRowspanCellEjjPNS0_19CellBlockConstraintEN4absl8optionalINS_10LayoutUnitEEE(%"struct.blink::NGTableTypes::RowspanCell"* noalias nocapture sret, i32, i32, %"struct.blink::NGTableTypes::CellBlockConstraint"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = trunc i64 %4 to i8
  %8 = lshr i64 %4, 32
  %9 = trunc i64 %8 to i32
  store i32 %9, i32* %6, align 4
  %10 = icmp eq i8 %7, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::NGTableTypes::CellBlockConstraint", %"struct.blink::NGTableTypes::CellBlockConstraint"* %3, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, %9
  %16 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %17 = select i1 %15, %"class.blink::LayoutUnit"* %16, %"class.blink::LayoutUnit"* %12
  %18 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %13, align 4
  br label %20

20:                                               ; preds = %5, %11
  %21 = bitcast %"struct.blink::NGTableTypes::RowspanCell"* %0 to i8*
  %22 = bitcast %"struct.blink::NGTableTypes::CellBlockConstraint"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 44, i1 false) #15
  %23 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 0, i32 1
  store i32 %1, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.blink::NGTableTypes::RowspanCell", %"struct.blink::NGTableTypes::RowspanCell"* %0, i64 0, i32 2
  store i32 %2, i32* %24, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink12NGTableTypes20CellInlineConstraint9EncompassERKS1_(%"struct.blink::NGTableTypes::CellInlineConstraint"* nocapture, %"struct.blink::NGTableTypes::CellInlineConstraint"* nocapture readonly dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  store i32 %6, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %2
  %12 = phi i32 [ %6, %10 ], [ %8, %2 ]
  %13 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %1, i64 0, i32 4
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %14, %16
  br i1 %17, label %38, label %18

18:                                               ; preds = %11
  %19 = icmp eq i8 %14, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %5, align 4
  %25 = icmp slt i32 %23, %24
  %26 = select i1 %25, %"class.blink::LayoutUnit"* %3, %"class.blink::LayoutUnit"* %21
  %27 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %22, align 4
  br label %52

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %12, %32
  %34 = select i1 %33, %"class.blink::LayoutUnit"* %30, %"class.blink::LayoutUnit"* %4
  %35 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %34, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 1, i32 0
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %36, align 4
  br label %50

38:                                               ; preds = %11
  %39 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %1, i64 0, i32 1
  %41 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %39, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %40, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %42, %44
  %46 = select i1 %45, %"class.blink::LayoutUnit"* %40, %"class.blink::LayoutUnit"* %39
  %47 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %46, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %41, align 4
  %49 = icmp eq i8 %14, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %29, %38
  %51 = load i8, i8* %15, align 4, !range !2
  br label %52

52:                                               ; preds = %20, %38, %50
  %53 = phi i8 [ 1, %38 ], [ %51, %50 ], [ 1, %20 ]
  store i8 %53, i8* %13, align 4
  %54 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %1, i64 0, i32 2
  %55 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 2
  %56 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8, i8* %56, align 4, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %76, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8, i8* %60, align 4, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = load float, float* %66, align 4
  %68 = fcmp ogt float %65, %67
  br i1 %68, label %69, label %76

69:                                               ; preds = %59, %63
  %70 = bitcast %"class.absl::optional"* %54 to i64*
  %71 = bitcast %"class.absl::optional"* %55 to i64*
  %72 = load i64, i64* %70, align 4
  store i64 %72, i64* %71, align 4
  %73 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %1, i64 0, i32 3, i32 0
  %74 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %0, i64 0, i32 3, i32 0
  %75 = load i32, i32* %73, align 4
  store i32 %75, i32* %74, align 4
  br label %76

76:                                               ; preds = %52, %69, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12NGTableTypes6Column9EncompassERKN4absl8optionalINS0_20CellInlineConstraintEEE(%"struct.blink::NGTableTypes::Column"* nocapture, %"class.absl::optional.1685"* readonly dereferenceable(28)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.absl::optional.1685", %"class.absl::optional.1685"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %158, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 6
  %13 = load i8, i8* %12, align 2, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %11, label %16, label %15

15:                                               ; preds = %8
  br i1 %14, label %17, label %158

16:                                               ; preds = %8
  br i1 %14, label %17, label %22

17:                                               ; preds = %15, %16
  %18 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 7
  store i8 0, i8* %18, align 1
  %19 = load i8, i8* %5, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %17
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %16, %17
  %23 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = getelementptr inbounds %"class.absl::optional.1685", %"class.absl::optional.1685"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %27 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %26, i64 0, i32 0
  br i1 %25, label %97, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %26, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %30, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %28
  store i32 %32, i32* %29, align 4
  br label %35

35:                                               ; preds = %34, %28
  %36 = phi i32 [ %32, %34 ], [ %30, %28 ]
  br i1 %11, label %71, label %37

37:                                               ; preds = %35
  %38 = load i8, i8* %5, align 4, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %37
  tail call void @llvm.trap() #15
  unreachable

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 4, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %46, !prof !3

45:                                               ; preds = %41
  tail call void @llvm.trap() #15
  unreachable

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.absl::optional.1685", %"class.absl::optional.1685"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %48 = load i8, i8* %47, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  %50 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %49, label %62, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.absl::optional.1685", %"class.absl::optional.1685"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %53 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %50, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %52, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %54, %56
  %58 = select i1 %57, %"class.blink::LayoutUnit"* %52, %"class.blink::LayoutUnit"* %50
  %59 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %58, i64 0, i32 0
  %60 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %61 = load i32, i32* %59, align 4
  store i32 %61, i32* %60, align 4
  br label %112

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %50, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = load i32, i32* %31, align 4
  %66 = icmp slt i32 %64, %65
  %67 = select i1 %66, %"class.blink::LayoutUnit"* %27, %"class.blink::LayoutUnit"* %50
  %68 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %67, i64 0, i32 0
  %69 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %70 = load i32, i32* %68, align 4
  store i32 %70, i32* %69, align 4
  br label %112

71:                                               ; preds = %35
  %72 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72)
  %73 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73)
  store i32 0, i32* %4, align 4
  %74 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %75 = load i8, i8* %74, align 4, !range !2
  %76 = icmp eq i8 %75, 0
  %77 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %78 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %79 = select i1 %76, %"class.blink::LayoutUnit"* %78, %"class.blink::LayoutUnit"* %77
  %80 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %79, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %3, align 4
  %82 = load i8, i8* %5, align 4, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %85, !prof !3

84:                                               ; preds = %71
  tail call void @llvm.trap() #15
  unreachable

85:                                               ; preds = %71
  %86 = getelementptr inbounds %"class.absl::optional.1685", %"class.absl::optional.1685"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %87 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %86, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %81, %88
  %90 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %91 = select i1 %89, %"class.blink::LayoutUnit"* %86, %"class.blink::LayoutUnit"* %90
  %92 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %91, i64 0, i32 0
  %93 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %94 = load i32, i32* %92, align 4
  store i32 %94, i32* %93, align 4
  br i1 %76, label %95, label %96

95:                                               ; preds = %85
  store i8 1, i8* %74, align 4
  br label %96

96:                                               ; preds = %85, %95
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72)
  br label %112

97:                                               ; preds = %22
  %98 = getelementptr inbounds %"struct.blink::NGTableTypes::CellInlineConstraint", %"struct.blink::NGTableTypes::CellInlineConstraint"* %26, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %100 = load i32, i32* %98, align 4
  store i32 %100, i32* %99, align 4
  store i8 1, i8* %23, align 4
  %101 = load i8, i8* %5, align 4, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %97
  tail call void @llvm.trap() #15
  unreachable

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %106 = load i8, i8* %105, align 4, !range !2
  %107 = icmp eq i8 %106, 0
  %108 = getelementptr inbounds %"class.absl::optional.1685", %"class.absl::optional.1685"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %109 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %110 = load i32, i32* %108, align 4
  store i32 %110, i32* %109, align 4
  br i1 %107, label %111, label %112

111:                                              ; preds = %104
  store i8 1, i8* %105, align 4
  br label %112

112:                                              ; preds = %51, %62, %96, %104, %111
  %113 = phi i32 [ %110, %111 ], [ %110, %104 ], [ %94, %96 ], [ %70, %62 ], [ %61, %51 ]
  %114 = phi i32 [ %100, %111 ], [ %100, %104 ], [ %36, %96 ], [ %36, %62 ], [ %36, %51 ]
  %115 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %116 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %117 = icmp slt i32 %114, %113
  %118 = select i1 %117, %"class.blink::LayoutUnit"* %116, %"class.blink::LayoutUnit"* %115
  %119 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %118, i64 0, i32 0
  %120 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %121 = load i32, i32* %119, align 4
  store i32 %121, i32* %120, align 4
  %122 = load i8, i8* %5, align 4, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %125, !prof !3

124:                                              ; preds = %112
  tail call void @llvm.trap() #15
  unreachable

125:                                              ; preds = %112
  %126 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 2
  %127 = getelementptr inbounds %"class.absl::optional.1685", %"class.absl::optional.1685"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %128 = load i8, i8* %127, align 4, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %154, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %126, i64 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i8, i8* %131, align 4, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %140, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.absl::optional.1685", %"class.absl::optional.1685"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %136 = load float, float* %135, align 4
  %137 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %138 = load float, float* %137, align 4
  %139 = fcmp ogt float %136, %138
  br i1 %139, label %140, label %154

140:                                              ; preds = %130, %134
  %141 = bitcast i8* %127 to i64*
  %142 = bitcast %"class.absl::optional"* %126 to i64*
  %143 = load i64, i64* %141, align 4
  store i64 %143, i64* %142, align 4
  %144 = load i8, i8* %5, align 4, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %147, !prof !3

146:                                              ; preds = %140
  tail call void @llvm.trap() #15
  unreachable

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.absl::optional.1685", %"class.absl::optional.1685"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3, i32 0
  %149 = getelementptr inbounds %"struct.blink::NGTableTypes::Column", %"struct.blink::NGTableTypes::Column"* %0, i64 0, i32 3, i32 0
  %150 = load i32, i32* %148, align 4
  store i32 %150, i32* %149, align 4
  %151 = load i8, i8* %5, align 4, !range !2
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %153, label %154, !prof !3

153:                                              ; preds = %147
  tail call void @llvm.trap() #15
  unreachable

154:                                              ; preds = %134, %125, %147
  %155 = getelementptr inbounds %"class.absl::optional.1685", %"class.absl::optional.1685"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %156 = load i8, i8* %155, align 4, !range !2
  %157 = or i8 %156, %10
  store i8 %157, i8* %9, align 4
  br label %158

158:                                              ; preds = %2, %15, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGTableGroupedChildrenC2ERKNS_11NGBlockNodeE(%"struct.blink::NGTableGroupedChildren"*, %"class.blink::NGBlockNode"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca { %"class.blink::LayoutBox"*, i64 }, align 8
  %4 = bitcast { %"class.blink::LayoutBox"*, i64 }* %3 to %"class.blink::NGLayoutInputNode"*
  %5 = alloca %"class.blink::NGBlockNode", align 8
  %6 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %8, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast %"struct.blink::NGTableGroupedChildren"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 40, i1 false)
  %12 = load i8, i8* %10, align 8
  %13 = and i8 %12, -2
  store i8 %13, i8* %10, align 8
  %14 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %15, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 4, i32 0, i32 1
  %18 = bitcast %"class.WTF::Vector.1690"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false)
  %19 = load i8, i8* %17, align 8
  %20 = and i8 %19, -2
  store i8 %20, i8* %17, align 8
  %21 = bitcast { %"class.blink::LayoutBox"*, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #15
  %22 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %3, i64 0, i32 0
  %23 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %3, i64 0, i32 1
  %24 = bitcast i64* %23 to i8*
  %25 = tail call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode10FirstChildEv(%"class.blink::NGBlockNode"* %1) #15
  %26 = extractvalue { %"class.blink::LayoutBox"*, i64 } %25, 0
  store %"class.blink::LayoutBox"* %26, %"class.blink::LayoutBox"** %22, align 8
  %27 = extractvalue { %"class.blink::LayoutBox"*, i64 } %25, 1
  store i64 %27, i64* %23, align 8
  %28 = icmp eq %"class.blink::LayoutBox"* %26, null
  br i1 %28, label %45, label %29

29:                                               ; preds = %2
  %30 = bitcast %"class.blink::NGBlockNode"* %5 to i8*
  %31 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %5, i64 0, i32 0, i32 1
  %32 = bitcast %"class.blink::NGBlockNode"* %5 to %"class.blink::LayoutObject"**
  %33 = bitcast { %"class.blink::LayoutBox"*, i64 }* %3 to %"class.blink::LayoutObject"**
  %34 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %35 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::Vector.1690", %"class.WTF::Vector.1690"* %14, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.blink::NGBlockNode"* %15 to i8*
  %38 = bitcast %"class.blink::NGBlockNode"* %8 to i8*
  %39 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %40 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.WTF::Vector.1690", %"class.WTF::Vector.1690"* %7, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %43 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %46

45:                                               ; preds = %140, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #15
  ret void

46:                                               ; preds = %29, %140
  %47 = phi %"class.blink::LayoutBox"* [ %26, %29 ], [ %142, %140 ]
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %47, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %21, i64 16, i1 false)
  %49 = load i8, i8* %31, align 8
  %50 = and i8 %49, 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %73

52:                                               ; preds = %46
  %53 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %54 = bitcast %"class.blink::LayoutObject"* %53 to i1 (%"class.blink::LayoutObject"*, i32)***
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, i64 92
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, align 8
  %58 = call zeroext i1 %57(%"class.blink::LayoutObject"* %53, i32 45) #15
  br i1 %58, label %61, label %59

59:                                               ; preds = %52
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  br label %73

61:                                               ; preds = %52
  %62 = load i32, i32* %42, align 4
  %63 = load i32, i32* %43, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %72, label %65, !prof !3

65:                                               ; preds = %61
  %66 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %44, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %66, i64 %67
  %69 = bitcast %"class.blink::NGBlockNode"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 8 %30, i64 16, i1 false) #15
  %70 = load i32, i32* %42, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %42, align 4
  br label %140

72:                                               ; preds = %61
  call void @_ZN3WTF6VectorIN5blink11NGBlockNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1690"* %6, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %5) #15
  br label %140

73:                                               ; preds = %59, %46
  %74 = phi %"class.blink::LayoutObject"* [ %60, %59 ], [ %48, %46 ]
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %74, i64 0, i32 5, i32 0
  %76 = bitcast %"class.blink::ComputedStyle"** %75 to %"class.blink::ComputedStyleBase"**
  %77 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %77, i64 0, i32 9
  %79 = bitcast [20 x i8]* %78 to i160*
  %80 = load i160, i160* %79, align 8
  %81 = lshr i160 %80, 32
  %82 = trunc i160 %81 to i32
  %83 = and i32 %82, 31
  switch i32 %83, label %140 [
    i32 11, label %84
    i32 10, label %84
    i32 7, label %96
    i32 6, label %112
    i32 8, label %124
  ]

84:                                               ; preds = %73, %73
  %85 = load i32, i32* %39, align 4
  %86 = load i32, i32* %40, align 8
  %87 = icmp eq i32 %85, %86
  br i1 %87, label %95, label %88, !prof !3

88:                                               ; preds = %84
  %89 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %41, align 8
  %90 = zext i32 %85 to i64
  %91 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %89, i64 %90
  %92 = bitcast %"class.blink::NGBlockNode"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* nonnull align 8 %30, i64 16, i1 false) #15
  %93 = load i32, i32* %39, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %39, align 4
  br label %140

95:                                               ; preds = %84
  call void @_ZN3WTF6VectorIN5blink11NGBlockNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1690"* %7, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %5) #15
  br label %140

96:                                               ; preds = %73
  %97 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %9, align 8
  %98 = icmp eq %"class.blink::LayoutBox"* %97, null
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %30, i64 9, i1 false)
  br label %140

100:                                              ; preds = %96
  %101 = load i32, i32* %34, align 4
  %102 = load i32, i32* %35, align 8
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %111, label %104, !prof !3

104:                                              ; preds = %100
  %105 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %36, align 8
  %106 = zext i32 %101 to i64
  %107 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %105, i64 %106
  %108 = bitcast %"class.blink::NGBlockNode"* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* nonnull align 8 %30, i64 16, i1 false) #15
  %109 = load i32, i32* %34, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %34, align 4
  br label %140

111:                                              ; preds = %100
  call void @_ZN3WTF6VectorIN5blink11NGBlockNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1690"* %14, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %5) #15
  br label %140

112:                                              ; preds = %73
  %113 = load i32, i32* %34, align 4
  %114 = load i32, i32* %35, align 8
  %115 = icmp eq i32 %113, %114
  br i1 %115, label %123, label %116, !prof !3

116:                                              ; preds = %112
  %117 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %36, align 8
  %118 = zext i32 %113 to i64
  %119 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %117, i64 %118
  %120 = bitcast %"class.blink::NGBlockNode"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 8 %30, i64 16, i1 false) #15
  %121 = load i32, i32* %34, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %34, align 4
  br label %140

123:                                              ; preds = %112
  call void @_ZN3WTF6VectorIN5blink11NGBlockNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1690"* %14, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %5) #15
  br label %140

124:                                              ; preds = %73
  %125 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %16, align 8
  %126 = icmp eq %"class.blink::LayoutBox"* %125, null
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* nonnull align 8 %30, i64 9, i1 false)
  br label %140

128:                                              ; preds = %124
  %129 = load i32, i32* %34, align 4
  %130 = load i32, i32* %35, align 8
  %131 = icmp eq i32 %129, %130
  br i1 %131, label %139, label %132, !prof !3

132:                                              ; preds = %128
  %133 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %36, align 8
  %134 = zext i32 %129 to i64
  %135 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %133, i64 %134
  %136 = bitcast %"class.blink::NGBlockNode"* %135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* nonnull align 8 %30, i64 16, i1 false) #15
  %137 = load i32, i32* %34, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %34, align 4
  br label %140

139:                                              ; preds = %128
  call void @_ZN3WTF6VectorIN5blink11NGBlockNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1690"* %14, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %5) #15
  br label %140

140:                                              ; preds = %139, %132, %123, %116, %111, %104, %95, %88, %72, %65, %99, %127, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #15
  %141 = call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink17NGLayoutInputNode11NextSiblingEv(%"class.blink::NGLayoutInputNode"* nonnull %4) #15
  %142 = extractvalue { %"class.blink::LayoutBox"*, i64 } %141, 0
  %143 = extractvalue { %"class.blink::LayoutBox"*, i64 } %141, 1
  store %"class.blink::LayoutBox"* %142, %"class.blink::LayoutBox"** %22, align 8
  %144 = trunc i64 %143 to i8
  store i8 %144, i8* %24, align 8
  %145 = icmp eq %"class.blink::LayoutBox"* %142, null
  br i1 %145, label %45, label %46
}

declare { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode10FirstChildEv(%"class.blink::NGBlockNode"*) local_unnamed_addr #5

declare { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink17NGLayoutInputNode11NextSiblingEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5blink22NGTableGroupedChildren5beginEv(%"class.blink::NGTableGroupedChildrenIterator"* noalias nocapture sret, %"struct.blink::NGTableGroupedChildren"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 0
  store %"struct.blink::NGTableGroupedChildren"* %1, %"struct.blink::NGTableGroupedChildren"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %1, i64 0, i32 4, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %1, i64 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.blink::NGBlockNode"** %7 to i64*
  %11 = bitcast %"class.blink::NGBlockNode"** %5 to i64*
  br label %12

12:                                               ; preds = %24, %2
  %13 = phi i32 [ 0, %2 ], [ %25, %24 ]
  switch i32 %13, label %27 [
    i32 0, label %14
    i32 1, label %17
    i32 2, label %21
    i32 3, label %26
  ]

14:                                               ; preds = %12
  store i32 1, i32* %4, align 8
  %15 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %9, align 8
  %16 = icmp eq %"class.blink::LayoutBox"* %15, null
  br i1 %16, label %24, label %28

17:                                               ; preds = %12
  store i32 2, i32* %4, align 8
  %18 = load i64, i64* %10, align 8
  store i64 %18, i64* %11, align 8
  %19 = load i32, i32* %8, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %28

21:                                               ; preds = %12
  store i32 3, i32* %4, align 8
  %22 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %6, align 8
  %23 = icmp eq %"class.blink::LayoutBox"* %22, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %21, %17, %14
  %25 = phi i32 [ 1, %14 ], [ 2, %17 ], [ 3, %21 ]
  br label %12

26:                                               ; preds = %12
  store i32 4, i32* %4, align 8
  br label %28

27:                                               ; preds = %12
  unreachable

28:                                               ; preds = %14, %17, %21, %26
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK5blink22NGTableGroupedChildren3endEv(%"class.blink::NGTableGroupedChildrenIterator"* noalias nocapture sret, %"struct.blink::NGTableGroupedChildren"*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 0
  store %"struct.blink::NGTableGroupedChildren"* %1, %"struct.blink::NGTableGroupedChildren"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 2
  store i32 4, i32* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink30NGTableGroupedChildrenIteratorC2ERKNS_22NGTableGroupedChildrenEb(%"class.blink::NGTableGroupedChildrenIterator"* nocapture, %"struct.blink::NGTableGroupedChildren"* dereferenceable(80), i1 zeroext) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 0
  store %"struct.blink::NGTableGroupedChildren"* %1, %"struct.blink::NGTableGroupedChildren"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 8
  br i1 %2, label %6, label %7

6:                                                ; preds = %3
  store i32 4, i32* %5, align 8
  br label %32

7:                                                ; preds = %3
  store i32 0, i32* %5, align 8
  %8 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %1, i64 0, i32 4, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %1, i64 0, i32 2, i32 0, i32 0
  br label %13

13:                                               ; preds = %28, %7
  %14 = phi i32 [ 0, %7 ], [ %29, %28 ]
  switch i32 %14, label %31 [
    i32 0, label %15
    i32 1, label %18
    i32 2, label %25
    i32 3, label %30
  ]

15:                                               ; preds = %13
  store i32 1, i32* %5, align 8
  %16 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %12, align 8
  %17 = icmp eq %"class.blink::LayoutBox"* %16, null
  br i1 %17, label %28, label %32

18:                                               ; preds = %13
  store i32 2, i32* %5, align 8
  %19 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %10, align 8
  store %"class.blink::NGBlockNode"* %19, %"class.blink::NGBlockNode"** %8, align 8
  %20 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %10, align 8
  %21 = load i32, i32* %11, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %20, i64 %22
  %24 = icmp eq %"class.blink::NGBlockNode"* %19, %23
  br i1 %24, label %28, label %32

25:                                               ; preds = %13
  store i32 3, i32* %5, align 8
  %26 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %9, align 8
  %27 = icmp eq %"class.blink::LayoutBox"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %25, %18, %15
  %29 = phi i32 [ 1, %15 ], [ 2, %18 ], [ 3, %25 ]
  br label %13

30:                                               ; preds = %13
  store i32 4, i32* %5, align 8
  br label %32

31:                                               ; preds = %13
  unreachable

32:                                               ; preds = %25, %18, %15, %30, %6
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink30NGTableGroupedChildrenIterator24AdvanceToNonEmptySectionEv(%"class.blink::NGTableGroupedChildrenIterator"*) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 1
  %5 = load i32, i32* %2, align 8
  br label %6

6:                                                ; preds = %13, %1
  %7 = phi i32 [ %5, %1 ], [ %14, %13 ]
  switch i32 %7, label %31 [
    i32 0, label %8
    i32 1, label %15
    i32 2, label %25
    i32 3, label %30
  ]

8:                                                ; preds = %6
  store i32 1, i32* %2, align 8
  %9 = load %"struct.blink::NGTableGroupedChildren"*, %"struct.blink::NGTableGroupedChildren"** %3, align 8
  %10 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %10, align 8
  %12 = icmp eq %"class.blink::LayoutBox"* %11, null
  br i1 %12, label %13, label %31

13:                                               ; preds = %8, %15, %25
  %14 = phi i32 [ 1, %8 ], [ 2, %15 ], [ 3, %25 ]
  br label %6

15:                                               ; preds = %6
  store i32 2, i32* %2, align 8
  %16 = load %"struct.blink::NGTableGroupedChildren"*, %"struct.blink::NGTableGroupedChildren"** %3, align 8
  %17 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %17, align 8
  store %"class.blink::NGBlockNode"* %18, %"class.blink::NGBlockNode"** %4, align 8
  %19 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %17, align 8
  %20 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %16, i64 0, i32 3, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %19, i64 %22
  %24 = icmp eq %"class.blink::NGBlockNode"* %18, %23
  br i1 %24, label %13, label %31

25:                                               ; preds = %6
  store i32 3, i32* %2, align 8
  %26 = load %"struct.blink::NGTableGroupedChildren"*, %"struct.blink::NGTableGroupedChildren"** %3, align 8
  %27 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %26, i64 0, i32 4, i32 0, i32 0
  %28 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %27, align 8
  %29 = icmp eq %"class.blink::LayoutBox"* %28, null
  br i1 %29, label %13, label %31

30:                                               ; preds = %6
  store i32 4, i32* %2, align 8
  br label %31

31:                                               ; preds = %8, %25, %15, %6, %30
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(24) %"class.blink::NGTableGroupedChildrenIterator"* @_ZN5blink30NGTableGroupedChildrenIteratorppEv(%"class.blink::NGTableGroupedChildrenIterator"* returned) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %67 [
    i32 1, label %4
    i32 3, label %4
    i32 2, label %32
  ]

4:                                                ; preds = %1, %1
  %5 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 1
  br label %7

7:                                                ; preds = %29, %4
  %8 = phi i32 [ %3, %4 ], [ %30, %29 ]
  switch i32 %8, label %67 [
    i32 0, label %9
    i32 1, label %14
    i32 2, label %24
    i32 3, label %31
  ]

9:                                                ; preds = %7
  store i32 1, i32* %2, align 8
  %10 = load %"struct.blink::NGTableGroupedChildren"*, %"struct.blink::NGTableGroupedChildren"** %5, align 8
  %11 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %11, align 8
  %13 = icmp eq %"class.blink::LayoutBox"* %12, null
  br i1 %13, label %29, label %67

14:                                               ; preds = %7
  store i32 2, i32* %2, align 8
  %15 = load %"struct.blink::NGTableGroupedChildren"*, %"struct.blink::NGTableGroupedChildren"** %5, align 8
  %16 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %16, align 8
  store %"class.blink::NGBlockNode"* %17, %"class.blink::NGBlockNode"** %6, align 8
  %18 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %16, align 8
  %19 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %15, i64 0, i32 3, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %18, i64 %21
  %23 = icmp eq %"class.blink::NGBlockNode"* %17, %22
  br i1 %23, label %29, label %67

24:                                               ; preds = %7
  store i32 3, i32* %2, align 8
  %25 = load %"struct.blink::NGTableGroupedChildren"*, %"struct.blink::NGTableGroupedChildren"** %5, align 8
  %26 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %25, i64 0, i32 4, i32 0, i32 0
  %27 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %26, align 8
  %28 = icmp eq %"class.blink::LayoutBox"* %27, null
  br i1 %28, label %29, label %67

29:                                               ; preds = %24, %14, %9
  %30 = phi i32 [ 1, %9 ], [ 2, %14 ], [ 3, %24 ]
  br label %7

31:                                               ; preds = %7
  store i32 4, i32* %2, align 8
  br label %67

32:                                               ; preds = %1
  %33 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 1
  %34 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %34, i64 1
  store %"class.blink::NGBlockNode"* %35, %"class.blink::NGBlockNode"** %33, align 8
  %36 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 0
  %37 = load %"struct.blink::NGTableGroupedChildren"*, %"struct.blink::NGTableGroupedChildren"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %38, align 8
  %40 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %37, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %39, i64 %42
  %44 = icmp eq %"class.blink::NGBlockNode"* %35, %43
  br i1 %44, label %45, label %67

45:                                               ; preds = %32
  %46 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %37, i64 0, i32 4, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %37, i64 0, i32 2, i32 0, i32 0
  br label %48

48:                                               ; preds = %63, %45
  %49 = phi i32 [ 2, %45 ], [ %64, %63 ]
  switch i32 %49, label %66 [
    i32 0, label %50
    i32 1, label %53
    i32 2, label %60
    i32 3, label %65
  ]

50:                                               ; preds = %48
  store i32 1, i32* %2, align 8
  %51 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %47, align 8
  %52 = icmp eq %"class.blink::LayoutBox"* %51, null
  br i1 %52, label %63, label %67

53:                                               ; preds = %48
  store i32 2, i32* %2, align 8
  %54 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %38, align 8
  store %"class.blink::NGBlockNode"* %54, %"class.blink::NGBlockNode"** %33, align 8
  %55 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %38, align 8
  %56 = load i32, i32* %40, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %55, i64 %57
  %59 = icmp eq %"class.blink::NGBlockNode"* %54, %58
  br i1 %59, label %63, label %67

60:                                               ; preds = %48
  store i32 3, i32* %2, align 8
  %61 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %46, align 8
  %62 = icmp eq %"class.blink::LayoutBox"* %61, null
  br i1 %62, label %63, label %67

63:                                               ; preds = %60, %53, %50
  %64 = phi i32 [ 1, %50 ], [ 2, %53 ], [ 3, %60 ]
  br label %48

65:                                               ; preds = %48
  store i32 4, i32* %2, align 8
  br label %67

66:                                               ; preds = %48
  unreachable

67:                                               ; preds = %60, %53, %50, %24, %14, %9, %7, %65, %31, %32, %1
  ret %"class.blink::NGTableGroupedChildrenIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink30NGTableGroupedChildrenIteratordeEv(%"class.blink::NGTableGroupedChildrenIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %29 [
    i32 1, label %4
    i32 3, label %12
    i32 2, label %20
    i32 4, label %30
    i32 0, label %30
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 0
  %6 = load %"struct.blink::NGTableGroupedChildren"*, %"struct.blink::NGTableGroupedChildren"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %6, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  br label %30

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 0
  %14 = load %"struct.blink::NGTableGroupedChildren"*, %"struct.blink::NGTableGroupedChildren"** %13, align 8
  %15 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %14, i64 0, i32 4, i32 0, i32 0
  %16 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %15, align 8
  %17 = getelementptr inbounds %"struct.blink::NGTableGroupedChildren", %"struct.blink::NGTableGroupedChildren"* %14, i64 0, i32 4, i32 0, i32 1
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  br label %30

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 1
  %22 = bitcast %"class.blink::NGBlockNode"** %21 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast i8* %23 to %"class.blink::LayoutBox"**
  %25 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %24, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 8
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  br label %30

29:                                               ; preds = %1
  unreachable

30:                                               ; preds = %1, %1, %20, %12, %4
  %31 = phi i64 [ %28, %20 ], [ %19, %12 ], [ %11, %4 ], [ 0, %1 ], [ 0, %1 ]
  %32 = phi %"class.blink::LayoutBox"* [ %25, %20 ], [ %16, %12 ], [ %8, %4 ], [ null, %1 ], [ null, %1 ]
  %33 = insertvalue { %"class.blink::LayoutBox"*, i64 } undef, %"class.blink::LayoutBox"* %32, 0
  %34 = insertvalue { %"class.blink::LayoutBox"*, i64 } %33, i64 %31, 1
  ret { %"class.blink::LayoutBox"*, i64 } %34
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink30NGTableGroupedChildrenIteratoreqERKS0_(%"class.blink::NGTableGroupedChildrenIterator"* nocapture readonly, %"class.blink::NGTableGroupedChildrenIterator"* nocapture readonly dereferenceable(24)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = icmp eq i32 %4, 2
  br i1 %9, label %10, label %16

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %1, i64 0, i32 1
  %12 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 1
  %14 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %13, align 8
  %15 = icmp eq %"class.blink::NGBlockNode"* %12, %14
  br label %16

16:                                               ; preds = %8, %2, %10
  %17 = phi i1 [ %15, %10 ], [ false, %2 ], [ true, %8 ]
  ret i1 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink30NGTableGroupedChildrenIteratorneERKS0_(%"class.blink::NGTableGroupedChildrenIterator"* nocapture readonly, %"class.blink::NGTableGroupedChildrenIterator"* nocapture readonly dereferenceable(24)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = icmp eq i32 %4, 2
  br i1 %9, label %10, label %16

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %1, i64 0, i32 1
  %12 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NGTableGroupedChildrenIterator", %"class.blink::NGTableGroupedChildrenIterator"* %0, i64 0, i32 1
  %14 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %13, align 8
  %15 = icmp ne %"class.blink::NGBlockNode"* %12, %14
  br label %16

16:                                               ; preds = %2, %8, %10
  %17 = phi i1 [ %15, %10 ], [ true, %2 ], [ false, %8 ]
  ret i1 %17
}

declare dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"*) local_unnamed_addr #5

declare <2 x float> @_ZNK5blink6Length19GetPixelsAndPercentEv(%"class.blink::Length"*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #10

declare i64 @_ZNK5blink17NGLayoutInputNode26InitialContainingBlockSizeEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #5

declare { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"*, i8 zeroext, i32, %"class.blink::NGConstraintSpace"* dereferenceable(32), i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %8 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %7, align 8
  %9 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  tail call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %8) #15
  %11 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %8 to i8*
  tail call void @free(i8* %11) #15
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %13, align 8
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %13, align 8
  %15 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %14, null
  br i1 %15, label %76, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %14, i64 0, i32 6
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.1873", %"class.std::__1::unique_ptr.1873"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %18, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %18, align 8
  %20 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::unique_ptr.1873"* %17 to %"struct.std::__1::default_delete.1896"*
  tail call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1896"* %22, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %19) #15
  br label %23

23:                                               ; preds = %21, %16
  %24 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %14, i64 0, i32 0, i32 0
  %25 = load %"class.base::RefCountedData.1857"*, %"class.base::RefCountedData.1857"** %24, align 8
  %26 = icmp eq %"class.base::RefCountedData.1857"* %25, null
  br i1 %26, label %74, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.base::RefCountedData.1857", %"class.base::RefCountedData.1857"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %74

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.base::RefCountedData.1857", %"class.base::RefCountedData.1857"* %25, i64 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector.1859", %"class.WTF::Vector.1859"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %class.scoped_refptr.1862*, %class.scoped_refptr.1862** %33, align 8
  %35 = icmp eq %class.scoped_refptr.1862* %34, null
  br i1 %35, label %72, label %36, !prof !4

36:                                               ; preds = %31
  %37 = bitcast %class.scoped_refptr.1862* %34 to i8*
  %38 = getelementptr inbounds %"class.base::RefCountedData.1857", %"class.base::RefCountedData.1857"* %25, i64 0, i32 1, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %70, label %41, !prof !3

41:                                               ; preds = %36
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %class.scoped_refptr.1862, %class.scoped_refptr.1862* %34, i64 %42
  br label %44

44:                                               ; preds = %64, %41
  %45 = phi %class.scoped_refptr.1862* [ %65, %64 ], [ %34, %41 ]
  %46 = getelementptr inbounds %class.scoped_refptr.1862, %class.scoped_refptr.1862* %45, i64 0, i32 0
  %47 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %46, align 8
  %48 = icmp eq %"struct.blink::NGExclusion"* %47, null
  br i1 %48, label %64, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %47, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %50) #15
  %51 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %64

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %47, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.base::RefCounted.1864", %"class.base::RefCounted.1864"* %55, i64 8
  %57 = bitcast %"class.base::RefCounted.1864"* %56 to %"struct.blink::NGExclusionShapeData"**
  %58 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %57, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusionShapeData"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %54
  %61 = bitcast %"struct.blink::NGExclusionShapeData"* %58 to i8*
  tail call void @_ZdlPv(i8* %61) #16
  br label %62

62:                                               ; preds = %60, %54
  %63 = bitcast %"struct.blink::NGExclusion"* %47 to i8*
  tail call void @free(i8* %63) #15
  br label %64

64:                                               ; preds = %62, %49, %44
  %65 = getelementptr inbounds %class.scoped_refptr.1862, %class.scoped_refptr.1862* %45, i64 1
  %66 = icmp eq %class.scoped_refptr.1862* %65, %43
  br i1 %66, label %67, label %44

67:                                               ; preds = %64
  store i32 0, i32* %38, align 4
  %68 = bitcast %"class.WTF::Vector.1859"* %32 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %36
  %71 = phi i8* [ %69, %67 ], [ %37, %36 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %71) #15
  br label %72

72:                                               ; preds = %31, %70
  %73 = bitcast %"class.base::RefCountedData.1857"* %25 to i8*
  tail call void @_ZdlPv(i8* %73) #16
  br label %74

74:                                               ; preds = %72, %27, %23
  %75 = bitcast %"class.blink::NGExclusionSpaceInternal"* %14 to i8*
  tail call void @free(i8* %75) #15
  br label %76

76:                                               ; preds = %12, %74
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = zext i16 %4 to i32
  switch i32 %5, label %128 [
    i32 5, label %118
    i32 4, label %62
    i32 3, label %6
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %8 = bitcast %union.anon.1761* %7 to %"class.blink::NGTableConstraintSpaceData"**
  %9 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %8, align 8
  %10 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %9, null
  br i1 %10, label %128, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #15
  %13 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %128

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  %19 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %18, null
  %20 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %18 to i8*
  br i1 %19, label %27, label %21, !prof !4

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !3

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #15
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  %30 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %29, null
  %31 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %29 to i8*
  br i1 %30, label %38, label %32, !prof !4

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #15
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  br label %38

38:                                               ; preds = %37, %27
  %39 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  %41 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %40, null
  %42 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %40 to i8*
  br i1 %41, label %49, label %43, !prof !4

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !3

47:                                               ; preds = %43
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %43
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #15
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  br label %49

49:                                               ; preds = %48, %38
  %50 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %50, align 8
  %52 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51, null
  %53 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51 to i8*
  br i1 %52, label %60, label %54, !prof !4

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !3

58:                                               ; preds = %54
  store i32 0, i32* %55, align 4
  br label %59

59:                                               ; preds = %58, %54
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #15
  br label %60

60:                                               ; preds = %49, %59
  %61 = bitcast %"class.blink::NGTableConstraintSpaceData"* %9 to i8*
  tail call void @free(i8* %61) #15
  br label %128

62:                                               ; preds = %1
  %63 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %64 = bitcast %union.anon.1761* %63 to %"class.blink::NGTableConstraintSpaceData"**
  %65 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %64, align 8
  %66 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %65, null
  br i1 %66, label %128, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %68) #15
  %69 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %128

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 0
  %74 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  %75 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %74, null
  %76 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %74 to i8*
  br i1 %75, label %83, label %77, !prof !4

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81, !prof !3

81:                                               ; preds = %77
  store i32 0, i32* %78, align 4
  br label %82

82:                                               ; preds = %81, %77
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #15
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  br label %83

83:                                               ; preds = %82, %72
  %84 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %85 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  %86 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %85, null
  %87 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %85 to i8*
  br i1 %86, label %94, label %88, !prof !4

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92, !prof !3

92:                                               ; preds = %88
  store i32 0, i32* %89, align 4
  br label %93

93:                                               ; preds = %92, %88
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %87) #15
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  br label %94

94:                                               ; preds = %93, %83
  %95 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  %97 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %96, null
  %98 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %96 to i8*
  br i1 %97, label %105, label %99, !prof !4

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %104, label %103, !prof !3

103:                                              ; preds = %99
  store i32 0, i32* %100, align 4
  br label %104

104:                                              ; preds = %103, %99
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %98) #15
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  br label %105

105:                                              ; preds = %104, %94
  %106 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 0
  %107 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %106, align 8
  %108 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107, null
  %109 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107 to i8*
  br i1 %108, label %116, label %110, !prof !4

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114, !prof !3

114:                                              ; preds = %110
  store i32 0, i32* %111, align 4
  br label %115

115:                                              ; preds = %114, %110
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %109) #15
  br label %116

116:                                              ; preds = %105, %115
  %117 = bitcast %"class.blink::NGTableConstraintSpaceData"* %65 to i8*
  tail call void @free(i8* %117) #15
  br label %128

118:                                              ; preds = %1
  %119 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %120 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %119, align 8
  %121 = icmp eq %"class.blink::SerializedScriptValue"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw sub i32* %123, i32 1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %120) #15
  %127 = bitcast %"class.blink::SerializedScriptValue"* %120 to i8*
  tail call void @free(i8* %127) #15
  br label %128

128:                                              ; preds = %126, %122, %118, %116, %67, %62, %60, %11, %6, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1896"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, null
  br i1 %3, label %127, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::Vector.1889", %"class.WTF::Vector.1889"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %8, label %58, label %10, !prof !3

10:                                               ; preds = %4
  %11 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %11, i64 %12
  br label %14

14:                                               ; preds = %54, %10
  %15 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %55, %54 ], [ %11, %10 ]
  %16 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %14
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %14
  %22 = getelementptr inbounds %"class.WTF::Vector.1879", %"class.WTF::Vector.1879"* %16, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 1, i64 0
  %25 = bitcast i8* %24 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %26 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23, %25
  br i1 %26, label %29, label %27, !prof !4

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::Vector.1879", %"class.WTF::Vector.1879"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1880"* %28, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23) #15
  br label %29

29:                                               ; preds = %27, %21
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %30 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %29
  store i32 0, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %"class.WTF::Vector.1879", %"class.WTF::Vector.1879"* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %40 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37, %39
  br i1 %40, label %43, label %41, !prof !4

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::Vector.1879", %"class.WTF::Vector.1879"* %30, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1880"* %42, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37) #15
  br label %43

43:                                               ; preds = %41, %35
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 0, i32 1, i32 0
  %45 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %44, align 8
  %46 = icmp eq %"class.blink::NGShapeExclusions"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #15
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %45) #15
  %53 = bitcast %"class.blink::NGShapeExclusions"* %45 to i8*
  tail call void @free(i8* %53) #15
  br label %54

54:                                               ; preds = %43, %47, %52
  %55 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 1
  %56 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %55, %13
  br i1 %56, label %57, label %14

57:                                               ; preds = %54
  store i32 0, i32* %6, align 4
  br label %58

58:                                               ; preds = %57, %4
  %59 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*
  %62 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59, %61
  br i1 %62, label %65, label %63, !prof !4

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector.1889", %"class.WTF::Vector.1889"* %5, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1890"* %64, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59) #15
  br label %65

65:                                               ; preds = %63, %58
  store %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* null, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %66 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %68, label %118, label %70, !prof !3

70:                                               ; preds = %65
  %71 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %71, i64 %72
  br label %74

74:                                               ; preds = %114, %70
  %75 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %115, %114 ], [ %71, %70 ]
  %76 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 6, i32 0
  %77 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %76, align 8
  %78 = icmp eq %"class.blink::NGShapeExclusions"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %80) #15
  %81 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %77) #15
  %85 = bitcast %"class.blink::NGShapeExclusions"* %77 to i8*
  tail call void @free(i8* %85) #15
  br label %86

86:                                               ; preds = %84, %79, %74
  %87 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5
  %88 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91, !prof !3

91:                                               ; preds = %86
  store i32 0, i32* %88, align 4
  br label %92

92:                                               ; preds = %91, %86
  %93 = getelementptr inbounds %"class.WTF::Vector.1879", %"class.WTF::Vector.1879"* %87, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %95 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 1, i64 0
  %96 = bitcast i8* %95 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %97 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94, %96
  br i1 %97, label %100, label %98, !prof !4

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::Vector.1879", %"class.WTF::Vector.1879"* %87, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1880"* %99, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94) #15
  br label %100

100:                                              ; preds = %98, %92
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %101 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4
  %102 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !3

105:                                              ; preds = %100
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %100
  %107 = getelementptr inbounds %"class.WTF::Vector.1879", %"class.WTF::Vector.1879"* %101, i64 0, i32 0, i32 0, i32 0
  %108 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %109 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 1, i64 0
  %110 = bitcast i8* %109 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %111 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108, %110
  br i1 %111, label %114, label %112, !prof !4

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.WTF::Vector.1879", %"class.WTF::Vector.1879"* %101, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1880"* %113, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108) #15
  br label %114

114:                                              ; preds = %106, %112
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %115 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 1
  %116 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %115, %73
  br i1 %116, label %117, label %74

117:                                              ; preds = %114
  store i32 0, i32* %66, align 4
  br label %118

118:                                              ; preds = %117, %65
  %119 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %120 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %121 = bitcast i8* %120 to %"struct.blink::NGExclusionSpaceInternal::NGShelf"*
  %122 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119, %121
  br i1 %122, label %125, label %123, !prof !4

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1877"* %124, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119) #15
  br label %125

125:                                              ; preds = %118, %123
  %126 = bitcast %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1 to i8*
  tail call void @free(i8* %126) #15
  br label %127

127:                                              ; preds = %125, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1880"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.1859", %"class.WTF::Vector.1859"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.1862*, %class.scoped_refptr.1862** %3, align 8
  %5 = icmp eq %class.scoped_refptr.1862* %4, null
  br i1 %5, label %42, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.1862* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %40, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.1862, %class.scoped_refptr.1862* %4, i64 %12
  br label %14

14:                                               ; preds = %34, %11
  %15 = phi %class.scoped_refptr.1862* [ %35, %34 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.1862, %class.scoped_refptr.1862* %15, i64 0, i32 0
  %17 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %16, align 8
  %18 = icmp eq %"struct.blink::NGExclusion"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #15
  %21 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.1864", %"class.base::RefCounted.1864"* %25, i64 8
  %27 = bitcast %"class.base::RefCounted.1864"* %26 to %"struct.blink::NGExclusionShapeData"**
  %28 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %27, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %27, align 8
  %29 = icmp eq %"struct.blink::NGExclusionShapeData"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.blink::NGExclusionShapeData"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  br label %32

32:                                               ; preds = %30, %24
  %33 = bitcast %"struct.blink::NGExclusion"* %17 to i8*
  tail call void @free(i8* %33) #15
  br label %34

34:                                               ; preds = %32, %19, %14
  %35 = getelementptr inbounds %class.scoped_refptr.1862, %class.scoped_refptr.1862* %15, i64 1
  %36 = icmp eq %class.scoped_refptr.1862* %35, %13
  br i1 %36, label %37, label %14

37:                                               ; preds = %34
  store i32 0, i32* %8, align 4
  %38 = bitcast %"class.WTF::Vector.1859"* %2 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %6
  %41 = phi i8* [ %39, %37 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #15
  store %class.scoped_refptr.1862* null, %class.scoped_refptr.1862** %3, align 8
  br label %42

42:                                               ; preds = %1, %40
  %43 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector.1859", %"class.WTF::Vector.1859"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.scoped_refptr.1862*, %class.scoped_refptr.1862** %44, align 8
  %46 = icmp eq %class.scoped_refptr.1862* %45, null
  br i1 %46, label %83, label %47, !prof !4

47:                                               ; preds = %42
  %48 = bitcast %class.scoped_refptr.1862* %45 to i8*
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %81, label %52, !prof !3

52:                                               ; preds = %47
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds %class.scoped_refptr.1862, %class.scoped_refptr.1862* %45, i64 %53
  br label %55

55:                                               ; preds = %75, %52
  %56 = phi %class.scoped_refptr.1862* [ %76, %75 ], [ %45, %52 ]
  %57 = getelementptr inbounds %class.scoped_refptr.1862, %class.scoped_refptr.1862* %56, i64 0, i32 0
  %58 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusion"* %58, null
  br i1 %59, label %75, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #15
  %62 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.base::RefCounted.1864", %"class.base::RefCounted.1864"* %66, i64 8
  %68 = bitcast %"class.base::RefCounted.1864"* %67 to %"struct.blink::NGExclusionShapeData"**
  %69 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %68, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %68, align 8
  %70 = icmp eq %"struct.blink::NGExclusionShapeData"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = bitcast %"struct.blink::NGExclusionShapeData"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #16
  br label %73

73:                                               ; preds = %71, %65
  %74 = bitcast %"struct.blink::NGExclusion"* %58 to i8*
  tail call void @free(i8* %74) #15
  br label %75

75:                                               ; preds = %73, %60, %55
  %76 = getelementptr inbounds %class.scoped_refptr.1862, %class.scoped_refptr.1862* %56, i64 1
  %77 = icmp eq %class.scoped_refptr.1862* %76, %54
  br i1 %77, label %78, label %55

78:                                               ; preds = %75
  store i32 0, i32* %49, align 4
  %79 = bitcast %"class.WTF::Vector.1859"* %43 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %47
  %82 = phi i8* [ %80, %78 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #15
  store %class.scoped_refptr.1862* null, %class.scoped_refptr.1862** %44, align 8
  br label %83

83:                                               ; preds = %42, %81
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1890"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1877"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11NGBlockNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1690"*, %"class.blink::NGBlockNode"* dereferenceable(16)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1690", %"class.WTF::Vector.1690"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1690", %"class.WTF::Vector.1690"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %6, align 8
  %8 = icmp ugt %"class.blink::NGBlockNode"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %7, i64 %10
  %12 = icmp ugt %"class.blink::NGBlockNode"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1690", %"class.WTF::Vector.1690"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::NGBlockNode"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11NGBlockNodeEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11NGBlockNodeEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1690"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::NGBlockNode"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::NGBlockNode"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::NGBlockNode"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.1690"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.1690"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::NGBlockNode"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::NGBlockNode"* %1 to i64
  %56 = ptrtoint %"class.blink::NGBlockNode"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.1690", %"class.WTF::Vector.1690"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::NGBlockNode"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11NGBlockNodeEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11NGBlockNodeEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1690"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::NGBlockNode"*, %"class.blink::NGBlockNode"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::NGBlockNode"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::NGBlockNode"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.1690"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.1690"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::NGBlockNode"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::NGBlockNode"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::NGBlockNode"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::NGBlockNode"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %100, i64 %103
  %105 = bitcast %"class.blink::NGBlockNode"* %104 to i8*
  %106 = bitcast %"class.blink::NGBlockNode"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 16, i1 false) #15
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11NGBlockNodeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!7 = distinct !{!7, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv"}
