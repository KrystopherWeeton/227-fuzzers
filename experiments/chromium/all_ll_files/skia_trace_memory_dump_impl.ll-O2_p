; ModuleID = '../../skia/ext/skia_trace_memory_dump_impl.cc'
source_filename = "../../skia/ext/skia_trace_memory_dump_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skia::SkiaTraceMemoryDumpImpl" = type <{ %class.SkTraceMemoryDump, %"class.std::__1::basic_string", %"class.base::trace_event::ProcessMemoryDump"*, i32, [4 x i8] }>
%class.SkTraceMemoryDump = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map", %"class.std::__1::map.9", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::map.9" = type { %"class.std::__1::__tree.10" }
%"class.std::__1::__tree.10" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.std::__1::optional", %"class.std::__1::vector" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.std::__1::optional" = type { %"struct.std::__1::__optional_move_assign_base.base", [7 x i8] }
%"struct.std::__1::__optional_move_assign_base.base" = type { %"struct.std::__1::__optional_copy_assign_base.base" }
%"struct.std::__1::__optional_copy_assign_base.base" = type { %"struct.std::__1::__optional_move_base.base" }
%"struct.std::__1::__optional_move_base.base" = type { %"struct.std::__1::__optional_copy_base.base" }
%"struct.std::__1::__optional_copy_base.base" = type { %"struct.std::__1::__optional_storage_base.base" }
%"struct.std::__1::__optional_storage_base.base" = type { %"struct.std::__1::__optional_destruct_base.base" }
%"struct.std::__1::__optional_destruct_base.base" = type <{ %union.anon.22, i8 }>
%union.anon.22 = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.23" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::trace_event::MemoryDumpManager" = type <{ i32 (...)**, %"class.std::__1::set", %"class.base::RepeatingCallback", i8, [7 x i8], %"class.base::Lock", %"class.std::__1::unique_ptr.37", i64, i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.29" }
%"class.std::__1::__tree.29" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.base::Thread"* }
%"class.base::Thread" = type opaque
%class.SkDiscardableMemory = type { i32 (...)** }
%class.SkDiscardableMemoryChrome = type { %class.SkDiscardableMemory, %"class.std::__1::unique_ptr.43" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.base::DiscardableMemory"* }
%"class.base::DiscardableMemory" = type opaque

$_ZN17SkTraceMemoryDump16dumpWrappedStateEPKcb = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN4skia23SkiaTraceMemoryDumpImplE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skia::SkiaTraceMemoryDumpImpl"*, i8*, i8*, i8*, i64)* @_ZN4skia23SkiaTraceMemoryDumpImpl16dumpNumericValueEPKcS2_S2_m to i8*), i8* bitcast (void (%"class.skia::SkiaTraceMemoryDumpImpl"*, i8*, i8*, i8*)* @_ZN4skia23SkiaTraceMemoryDumpImpl15dumpStringValueEPKcS2_S2_ to i8*), i8* bitcast (void (%"class.skia::SkiaTraceMemoryDumpImpl"*, i8*, i8*, i8*)* @_ZN4skia23SkiaTraceMemoryDumpImpl16setMemoryBackingEPKcS2_S2_ to i8*), i8* bitcast (void (%"class.skia::SkiaTraceMemoryDumpImpl"*, i8*, %class.SkDiscardableMemory*)* @_ZN4skia23SkiaTraceMemoryDumpImpl27setDiscardableMemoryBackingEPKcRK19SkDiscardableMemory to i8*), i8* bitcast (i32 (%"class.skia::SkiaTraceMemoryDumpImpl"*)* @_ZNK4skia23SkiaTraceMemoryDumpImpl19getRequestedDetailsEv to i8*), i8* bitcast (i1 (%"class.skia::SkiaTraceMemoryDumpImpl"*)* @_ZNK4skia23SkiaTraceMemoryDumpImpl24shouldDumpWrappedObjectsEv to i8*), i8* bitcast (void (%class.SkTraceMemoryDump*, i8*, i1)* @_ZN17SkTraceMemoryDump16dumpWrappedStateEPKcb to i8*), i8* bitcast (void (%"class.skia::SkiaTraceMemoryDumpImpl"*)* @_ZN4skia23SkiaTraceMemoryDumpImplD2Ev to i8*), i8* bitcast (void (%"class.skia::SkiaTraceMemoryDumpImpl"*)* @_ZN4skia23SkiaTraceMemoryDumpImplD0Ev to i8*)] }, align 8
@_ZN4skia12_GLOBAL__N_118kMallocBackingTypeE = internal constant [7 x i8] c"malloc\00", align 1
@_ZN4base11trace_event17MemoryDumpManager24kSystemAllocatorPoolNameE = external local_unnamed_addr constant i8*, align 8

@_ZN4skia23SkiaTraceMemoryDumpImplC1EN4base11trace_event23MemoryDumpLevelOfDetailEPNS2_17ProcessMemoryDumpE = hidden unnamed_addr alias void (%"class.skia::SkiaTraceMemoryDumpImpl"*, i32, %"class.base::trace_event::ProcessMemoryDump"*), void (%"class.skia::SkiaTraceMemoryDumpImpl"*, i32, %"class.base::trace_event::ProcessMemoryDump"*)* @_ZN4skia23SkiaTraceMemoryDumpImplC2EN4base11trace_event23MemoryDumpLevelOfDetailEPNS2_17ProcessMemoryDumpE
@_ZN4skia23SkiaTraceMemoryDumpImplC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base11trace_event23MemoryDumpLevelOfDetailEPNSB_17ProcessMemoryDumpE = hidden unnamed_addr alias void (%"class.skia::SkiaTraceMemoryDumpImpl"*, %"class.std::__1::basic_string"*, i32, %"class.base::trace_event::ProcessMemoryDump"*), void (%"class.skia::SkiaTraceMemoryDumpImpl"*, %"class.std::__1::basic_string"*, i32, %"class.base::trace_event::ProcessMemoryDump"*)* @_ZN4skia23SkiaTraceMemoryDumpImplC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base11trace_event23MemoryDumpLevelOfDetailEPNSB_17ProcessMemoryDumpE
@_ZN4skia23SkiaTraceMemoryDumpImplD1Ev = hidden unnamed_addr alias void (%"class.skia::SkiaTraceMemoryDumpImpl"*), void (%"class.skia::SkiaTraceMemoryDumpImpl"*)* @_ZN4skia23SkiaTraceMemoryDumpImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4skia23SkiaTraceMemoryDumpImplC2EN4base11trace_event23MemoryDumpLevelOfDetailEPNS2_17ProcessMemoryDumpE(%"class.skia::SkiaTraceMemoryDumpImpl"*, i32, %"class.base::trace_event::ProcessMemoryDump"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 0, i8* %7, align 1
  store i8 0, i8* %5, align 8
  %8 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4skia23SkiaTraceMemoryDumpImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* nonnull align 8 %5, i64 24, i1 false) #10
  %11 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 2
  store %"class.base::trace_event::ProcessMemoryDump"* %2, %"class.base::trace_event::ProcessMemoryDump"** %11, align 8
  %12 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 3
  %13 = icmp ne i32 %1, 1
  %14 = zext i1 %13 to i32
  store i32 %14, i32* %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4skia23SkiaTraceMemoryDumpImplC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base11trace_event23MemoryDumpLevelOfDetailEPNSB_17ProcessMemoryDumpE(%"class.skia::SkiaTraceMemoryDumpImpl"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32, %"class.base::trace_event::ProcessMemoryDump"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4skia23SkiaTraceMemoryDumpImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #10
  br label %19

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %16, i64 %18) #10
  br label %19

19:                                               ; preds = %11, %14
  %20 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 2
  store %"class.base::trace_event::ProcessMemoryDump"* %3, %"class.base::trace_event::ProcessMemoryDump"** %20, align 8
  %21 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 3
  %22 = icmp ne i32 %2, 1
  %23 = zext i1 %22 to i32
  store i32 %23, i32* %21, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4skia23SkiaTraceMemoryDumpImplD2Ev(%"class.skia::SkiaTraceMemoryDumpImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4skia23SkiaTraceMemoryDumpImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4skia23SkiaTraceMemoryDumpImplD0Ev(%"class.skia::SkiaTraceMemoryDumpImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4skia23SkiaTraceMemoryDumpImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.skia::SkiaTraceMemoryDumpImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4skia23SkiaTraceMemoryDumpImpl16dumpNumericValueEPKcS2_S2_m(%"class.skia::SkiaTraceMemoryDumpImpl"* nocapture readonly, i8* nocapture readonly, i8*, i8*, i64) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 2
  %8 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = tail call i64 @strlen(i8* %1) #10
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %5
  %13 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %13) #12
  unreachable

14:                                               ; preds = %5
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %25, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #11
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %30

25:                                               ; preds = %14
  %26 = trunc i64 %10 to i8
  %27 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 %26, i8* %28, align 1
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %25, %16
  %31 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %27, %25 ], [ %24, %16 ]
  %32 = phi i8* [ %9, %25 ], [ %19, %16 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %1, i64 %10, i1 false) #10
  br label %33

33:                                               ; preds = %25, %30
  %34 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %27, %25 ], [ %31, %30 ]
  %35 = phi i8* [ %9, %25 ], [ %32, %30 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 %10
  store i8 0, i8* %36, align 1
  %37 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump24GetOrCreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #10
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #11
  br label %44

44:                                               ; preds = %33, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %37, i8* %2, i8* %3, i64 %4) #10
  ret void
}

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump24GetOrCreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4skia23SkiaTraceMemoryDumpImpl15dumpStringValueEPKcS2_S2_(%"class.skia::SkiaTraceMemoryDumpImpl"* nocapture readonly, i8* nocapture readonly, i8*, i8* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 2
  %8 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = tail call i64 @strlen(i8* %1) #10
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %13) #12
  unreachable

14:                                               ; preds = %4
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %25, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #11
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %30

25:                                               ; preds = %14
  %26 = trunc i64 %10 to i8
  %27 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 %26, i8* %28, align 1
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %25, %16
  %31 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %27, %25 ], [ %24, %16 ]
  %32 = phi i8* [ %9, %25 ], [ %19, %16 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %1, i64 %10, i1 false) #10
  br label %33

33:                                               ; preds = %25, %30
  %34 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %27, %25 ], [ %31, %30 ]
  %35 = phi i8* [ %9, %25 ], [ %32, %30 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 %10
  store i8 0, i8* %36, align 1
  %37 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump24GetOrCreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #10
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #11
  br label %44

44:                                               ; preds = %33, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  %45 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #10
  %46 = call i64 @strlen(i8* %3) #10
  %47 = icmp ugt i64 %46, -17
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %49) #12
  unreachable

50:                                               ; preds = %44
  %51 = icmp ult i64 %46, 23
  br i1 %51, label %61, label %52

52:                                               ; preds = %50
  %53 = add nuw i64 %46, 16
  %54 = and i64 %53, -16
  %55 = call i8* @_Znwm(i64 %54) #11
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %55, i8** %56, align 8
  %57 = or i64 %54, -9223372036854775808
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %46, i64* %59, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %66

61:                                               ; preds = %50
  %62 = trunc i64 %46 to i8
  %63 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  store i8 %62, i8* %64, align 1
  %65 = icmp eq i64 %46, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %61, %52
  %67 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %63, %61 ], [ %60, %52 ]
  %68 = phi i8* [ %45, %61 ], [ %55, %52 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* align 1 %3, i64 %46, i1 false) #10
  br label %69

69:                                               ; preds = %61, %66
  %70 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %63, %61 ], [ %67, %66 ]
  %71 = phi i8* [ %45, %61 ], [ %68, %66 ]
  %72 = getelementptr inbounds i8, i8* %71, i64 %46
  store i8 0, i8* %72, align 1
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddStringEPKcS3_RKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.base::trace_event::MemoryAllocatorDump"* %37, i8* %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #10
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #11
  br label %79

79:                                               ; preds = %69, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #10
  ret void
}

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddStringEPKcS3_RKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4skia23SkiaTraceMemoryDumpImpl16setMemoryBackingEPKcS2_S2_(%"class.skia::SkiaTraceMemoryDumpImpl"* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN4skia12_GLOBAL__N_118kMallocBackingTypeE, i64 0, i64 0)) #13
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %89

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 2
  %11 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = tail call i64 @strlen(i8* %1) #10
  %14 = icmp ugt i64 %13, -17
  br i1 %14, label %15, label %17

15:                                               ; preds = %9
  %16 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %16) #12
  unreachable

17:                                               ; preds = %9
  %18 = icmp ult i64 %13, 23
  br i1 %18, label %28, label %19

19:                                               ; preds = %17
  %20 = add nuw i64 %13, 16
  %21 = and i64 %20, -16
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %13, i64* %26, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %33

28:                                               ; preds = %17
  %29 = trunc i64 %13 to i8
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1
  %32 = icmp eq i64 %13, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %19
  %34 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %27, %19 ]
  %35 = phi i8* [ %12, %28 ], [ %22, %19 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 1 %1, i64 %13, i1 false) #10
  br label %36

36:                                               ; preds = %28, %33
  %37 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %34, %33 ]
  %38 = phi i8* [ %12, %28 ], [ %35, %33 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %13
  store i8 0, i8* %39, align 1
  %40 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump24GetOrCreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #10
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #11
  br label %47

47:                                               ; preds = %36, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  %48 = call %"class.base::trace_event::MemoryDumpManager"* @_ZN4base11trace_event17MemoryDumpManager11GetInstanceEv() #10
  %49 = load i8*, i8** @_ZN4base11trace_event17MemoryDumpManager24kSystemAllocatorPoolNameE, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %89, label %51

51:                                               ; preds = %47
  %52 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %10, align 8
  %53 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %40, i64 0, i32 1
  %54 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #10
  %55 = call i64 @strlen(i8* nonnull %49) #10
  %56 = icmp ugt i64 %55, -17
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %58) #12
  unreachable

59:                                               ; preds = %51
  %60 = icmp ult i64 %55, 23
  br i1 %60, label %70, label %61

61:                                               ; preds = %59
  %62 = add nuw i64 %55, 16
  %63 = and i64 %62, -16
  %64 = call i8* @_Znwm(i64 %63) #11
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %64, i8** %65, align 8
  %66 = or i64 %63, -9223372036854775808
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %68, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %75

70:                                               ; preds = %59
  %71 = trunc i64 %55 to i8
  %72 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  store i8 %71, i8* %73, align 1
  %74 = icmp eq i64 %55, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %70, %61
  %76 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %72, %70 ], [ %69, %61 ]
  %77 = phi i8* [ %54, %70 ], [ %64, %61 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %77, i8* nonnull align 1 %49, i64 %55, i1 false) #10
  br label %78

78:                                               ; preds = %70, %75
  %79 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %72, %70 ], [ %76, %75 ]
  %80 = phi i8* [ %54, %70 ], [ %77, %75 ]
  %81 = getelementptr inbounds i8, i8* %80, i64 %55
  store i8 0, i8* %81, align 1
  call void @_ZN4base11trace_event17ProcessMemoryDump16AddSuballocationERKNS0_23MemoryAllocatorDumpGuidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %52, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %53, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #10
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #11
  br label %88

88:                                               ; preds = %78, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #10
  br label %89

89:                                               ; preds = %88, %47, %4
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

declare %"class.base::trace_event::MemoryDumpManager"* @_ZN4base11trace_event17MemoryDumpManager11GetInstanceEv() local_unnamed_addr #3

declare void @_ZN4base11trace_event17ProcessMemoryDump16AddSuballocationERKNS0_23MemoryAllocatorDumpGuidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4skia23SkiaTraceMemoryDumpImpl27setDiscardableMemoryBackingEPKcRK19SkDiscardableMemory(%"class.skia::SkiaTraceMemoryDumpImpl"* nocapture readonly, i8*, %class.SkDiscardableMemory* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #10, !alias.scope !2
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1, !noalias !2
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !2
  %17 = tail call i64 @strlen(i8* %1) #10, !noalias !2
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8, !noalias !2
  br label %24

20:                                               ; preds = %3
  %21 = zext i8 %12 to i64
  %22 = tail call i64 @strlen(i8* %1) #10, !noalias !2
  %23 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  br label %24

24:                                               ; preds = %20, %14
  %25 = phi i64 [ %17, %14 ], [ %22, %20 ]
  %26 = phi i64 [ %16, %14 ], [ %21, %20 ]
  %27 = phi i8* [ %19, %14 ], [ %23, %20 ]
  %28 = add i64 %26, %25
  %29 = icmp ugt i64 %28, -17
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %31) #12
  unreachable

32:                                               ; preds = %24
  %33 = icmp ult i64 %28, 23
  br i1 %33, label %34, label %38

34:                                               ; preds = %32
  %35 = trunc i64 %26 to i8
  %36 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  store i8 %35, i8* %37, align 1, !alias.scope !2
  br label %43

38:                                               ; preds = %32
  %39 = add nuw i64 %28, 16
  %40 = and i64 %39, -16
  %41 = tail call i8* @_Znwm(i64 %40) #11
  store i8* %41, i8** %6, align 8, !alias.scope !2
  %42 = or i64 %40, -9223372036854775808
  store i64 %42, i64* %8, align 8, !alias.scope !2
  store i64 %26, i64* %7, align 8, !alias.scope !2
  br label %43

43:                                               ; preds = %38, %34
  %44 = phi i8* [ %5, %34 ], [ %41, %38 ]
  %45 = icmp eq i64 %26, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %43
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %44, i8* align 1 %27, i64 %26, i1 false) #10
  br label %47

47:                                               ; preds = %43, %46
  %48 = getelementptr inbounds i8, i8* %44, i64 %26
  store i8 0, i8* %48, align 1
  %49 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %1, i64 %25) #10
  %50 = bitcast %class.SkDiscardableMemory* %2 to %class.SkDiscardableMemoryChrome*
  %51 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i8*, i8** %6, align 8
  %56 = select i1 %54, i8* %55, i8* %5
  %57 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 2
  %58 = load %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::ProcessMemoryDump"** %57, align 8
  %59 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZNK25SkDiscardableMemoryChrome25CreateMemoryAllocatorDumpEPKcPN4base11trace_event17ProcessMemoryDumpE(%class.SkDiscardableMemoryChrome* %50, i8* %56, %"class.base::trace_event::ProcessMemoryDump"* %58) #10
  %60 = load i8, i8* %52, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %47
  %63 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %63) #11
  br label %64

64:                                               ; preds = %47, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret void
}

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZNK25SkDiscardableMemoryChrome25CreateMemoryAllocatorDumpEPKcPN4base11trace_event17ProcessMemoryDumpE(%class.SkDiscardableMemoryChrome*, i8*, %"class.base::trace_event::ProcessMemoryDump"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4skia23SkiaTraceMemoryDumpImpl19getRequestedDetailsEv(%"class.skia::SkiaTraceMemoryDumpImpl"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.skia::SkiaTraceMemoryDumpImpl", %"class.skia::SkiaTraceMemoryDumpImpl"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK4skia23SkiaTraceMemoryDumpImpl24shouldDumpWrappedObjectsEv(%"class.skia::SkiaTraceMemoryDumpImpl"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17SkTraceMemoryDump16dumpWrappedStateEPKcb(%class.SkTraceMemoryDump*, i8*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
