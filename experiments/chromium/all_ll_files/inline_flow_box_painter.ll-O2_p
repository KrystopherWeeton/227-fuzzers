; ModuleID = '../../third_party/blink/renderer/core/paint/inline_flow_box_painter.cc'
source_filename = "../../third_party/blink/renderer/core/paint/inline_flow_box_painter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::InlineFlowBoxPainter" = type { %"class.blink::InlineBoxPainterBase", %"class.blink::InlineFlowBox"* }
%"class.blink::InlineBoxPainterBase" = type { i32 (...)**, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::Node"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"* }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1902" }
%"class.blink::Member.1902" = type { %"class.blink::MemberBase.1903" }
%"class.blink::MemberBase.1903" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1904" }
%"class.blink::Member.1904" = type { %"class.blink::MemberBase.1905" }
%"class.blink::MemberBase.1905" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1925 }
%class.scoped_refptr.1925 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1935" }
%"class.blink::Member.1935" = type { %"class.blink::MemberBase.1936" }
%"class.blink::MemberBase.1936" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1931" }
%"class.blink::MemberBase.1931" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1932" }
%"class.blink::MemberBase.1932" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1933" }
%"class.blink::MemberBase.1933" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1934" }
%"class.blink::MemberBase.1934" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1926", %"class.WTF::Vector.1926" }
%"class.WTF::Vector.1926" = type { %"class.WTF::VectorBuffer.1927" }
%"class.WTF::VectorBuffer.1927" = type { %"class.WTF::VectorBufferBase.1928" }
%"class.WTF::VectorBufferBase.1928" = type { %class.scoped_refptr.1925*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1911 }
%class.scoped_refptr.1911 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1912", %"class.WTF::Vector.630", %"class.WTF::Vector.1914", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1912" = type { %"class.base::RefCounted.1913" }
%"class.base::RefCounted.1913" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1914" = type { %"class.WTF::VectorBuffer.1915" }
%"class.WTF::VectorBuffer.1915" = type { %"class.WTF::VectorBufferBase.1916" }
%"class.WTF::VectorBufferBase.1916" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1917 }
%union.anon.1917 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1906" }
%"class.WTF::Vector.1906" = type { %"class.WTF::VectorBuffer.1907" }
%"class.WTF::VectorBuffer.1907" = type { %"class.WTF::VectorBufferBase.1908" }
%"class.WTF::VectorBufferBase.1908" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1821", %"class.absl::optional.1821", %"class.absl::optional.1821" }
%"class.absl::optional.1821" = type { %"class.absl::optional_internal::optional_data.1822" }
%"class.absl::optional_internal::optional_data.1822" = type { %"class.absl::optional_internal::optional_data_base.1823" }
%"class.absl::optional_internal::optional_data_base.1823" = type { %"class.absl::optional_internal::optional_data_dtor_base.1824" }
%"class.absl::optional_internal::optional_data_dtor_base.1824" = type { i8, %union.anon.1825 }
%union.anon.1825 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1921" }
%"class.WTF::VectorBuffer.1921" = type { %"class.WTF::VectorBufferBase.1922", [32 x i8] }
%"class.WTF::VectorBufferBase.1922" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.blink::PaintInfo" = type <{ %"class.blink::GraphicsContext"*, i32, %"class.blink::CullRect", [4 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.1706", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.1786", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1631, %class.scoped_refptr.1631, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1686", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1691", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1631 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1639" }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1634", i32, [4 x i8] }>
%"class.WTF::Vector.1634" = type { %"class.WTF::VectorBuffer.1635" }
%"class.WTF::VectorBuffer.1635" = type { %"class.WTF::VectorBufferBase.1636" }
%"class.WTF::VectorBufferBase.1636" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1639" = type { %"class.WTF::VectorBuffer.1640" }
%"class.WTF::VectorBuffer.1640" = type { %"class.WTF::VectorBufferBase.1641" }
%"class.WTF::VectorBufferBase.1641" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1642", %"class.std::__1::unique_ptr.1658", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1642" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1645", %"class.WTF::Vector.1650", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1645" = type { %"class.WTF::VectorBuffer.1646" }
%"class.WTF::VectorBuffer.1646" = type { %"class.WTF::VectorBufferBase.1647" }
%"class.WTF::VectorBufferBase.1647" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1650" = type { %"class.WTF::VectorBuffer.1651" }
%"class.WTF::VectorBuffer.1651" = type { %"class.WTF::VectorBufferBase.1652" }
%"class.WTF::VectorBufferBase.1652" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1658" = type { %"class.std::__1::__compressed_pair.1659" }
%"class.std::__1::__compressed_pair.1659" = type { %"struct.std::__1::__compressed_pair_elem.1660" }
%"struct.std::__1::__compressed_pair_elem.1660" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1661", %"class.absl::optional.1661" }
%"class.absl::optional.1661" = type { %"class.absl::optional_internal::optional_data.1662" }
%"class.absl::optional_internal::optional_data.1662" = type { %"class.absl::optional_internal::optional_data_base.1663" }
%"class.absl::optional_internal::optional_data_base.1663" = type { %"class.absl::optional_internal::optional_data_dtor_base.1664" }
%"class.absl::optional_internal::optional_data_dtor_base.1664" = type { i8, [3 x i8], %union.anon.1665 }
%union.anon.1665 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1639"*, %"class.absl::optional.1671", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1671" = type { %"class.absl::optional_internal::optional_data.1672" }
%"class.absl::optional_internal::optional_data.1672" = type { %"class.absl::optional_internal::optional_data_base.1673" }
%"class.absl::optional_internal::optional_data_base.1673" = type { %"class.absl::optional_internal::optional_data_dtor_base.1674" }
%"class.absl::optional_internal::optional_data_dtor_base.1674" = type { i8, %union.anon.1675 }
%union.anon.1675 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1676", %"class.WTF::Vector.1681" }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678", [128 x i8] }
%"class.WTF::VectorBufferBase.1678" = type { i32*, i32, i32 }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683", [128 x i8] }
%"class.WTF::VectorBufferBase.1683" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1686" = type { %"class.WTF::VectorBuffer.1687" }
%"class.WTF::VectorBuffer.1687" = type { %"class.WTF::VectorBufferBase.1688" }
%"class.WTF::VectorBufferBase.1688" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1691" = type { %"class.WTF::HashTable.1692" }
%"class.WTF::HashTable.1692" = type <{ %"struct.WTF::KeyValuePair.1695"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1695" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1696", %"class.WTF::Vector.1701" }
%"class.WTF::HashMap.1696" = type { %"class.WTF::HashTable.1697" }
%"class.WTF::HashTable.1697" = type <{ %"struct.WTF::KeyValuePair.1700"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1700" = type opaque
%"class.WTF::Vector.1701" = type { %"class.WTF::VectorBuffer.1702" }
%"class.WTF::VectorBuffer.1702" = type { %"class.WTF::VectorBufferBase.1703" }
%"class.WTF::VectorBufferBase.1703" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.WTF::Vector.1706" = type { %"class.WTF::VectorBuffer.1707" }
%"class.WTF::VectorBuffer.1707" = type { %"class.WTF::VectorBufferBase.1708" }
%"class.WTF::VectorBufferBase.1708" = type { %"class.std::__1::unique_ptr.1709"*, i32, i32 }
%"class.std::__1::unique_ptr.1709" = type { %"class.std::__1::__compressed_pair.1710" }
%"class.std::__1::__compressed_pair.1710" = type { %"struct.std::__1::__compressed_pair_elem.1711" }
%"struct.std::__1::__compressed_pair_elem.1711" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp.1712, %class.sk_sp.1713, %class.sk_sp.1751, %class.sk_sp.1752, %class.sk_sp.1753, %class.sk_sp.817, i32, float, float, i32, %union.anon.1754, [4 x i8] }>
%class.sk_sp.1712 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1713 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.1714", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.1722, i32, %"class.absl::optional.1738", %"class.std::__1::vector.842", %"class.std::__1::vector.1743", %class.sk_sp.1750, %class.sk_sp.1719, i32, [4 x i8] }>
%"class.absl::optional.1714" = type { %"class.absl::optional_internal::optional_data.1715" }
%"class.absl::optional_internal::optional_data.1715" = type { %"class.absl::optional_internal::optional_data_base.1716" }
%"class.absl::optional_internal::optional_data_base.1716" = type { %"class.absl::optional_internal::optional_data_dtor_base.1717" }
%"class.absl::optional_internal::optional_data_dtor_base.1717" = type { i8, %union.anon.1718 }
%union.anon.1718 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.cc::PaintImage" = type { %class.sk_sp.1719, %class.sk_sp.1722, %"class.gfx::Rect", i32, %class.sk_sp.1727, %class.sk_sp.1735, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.1719, %class.scoped_refptr.1736 }
%class.sk_sp.1727 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.1728" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1720, i32, i32 }
%class.sk_sp.1720 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.1721, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.1721 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.1728" = type { %"class.std::__1::__vector_base.1729" }
%"class.std::__1::__vector_base.1729" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.1730" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.1730" = type { %"struct.std::__1::__compressed_pair_elem.1731" }
%"struct.std::__1::__compressed_pair_elem.1731" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.1735 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.1736 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1737", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1737" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.1722 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.1723", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1723" = type { %"class.std::__1::__compressed_pair.1724" }
%"class.std::__1::__compressed_pair.1724" = type { %"struct.std::__1::__compressed_pair_elem.1725" }
%"struct.std::__1::__compressed_pair_elem.1725" = type { i8* }
%"class.absl::optional.1738" = type { %"class.absl::optional_internal::optional_data.1739" }
%"class.absl::optional_internal::optional_data.1739" = type { %"class.absl::optional_internal::optional_data_base.1740" }
%"class.absl::optional_internal::optional_data_base.1740" = type { %"class.absl::optional_internal::optional_data_dtor_base.1741" }
%"class.absl::optional_internal::optional_data_dtor_base.1741" = type { i8, %union.anon.1742 }
%union.anon.1742 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.1743" = type { %"class.std::__1::__vector_base.1744" }
%"class.std::__1::__vector_base.1744" = type { float*, float*, %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { float* }
%class.sk_sp.1750 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.238", [7 x i8] }>
%class.sk_sp.1719 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.1751 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1752 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1753 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.1754 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.1712 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.1760, %"class.std::__1::unique_ptr.1761" }
%class.scoped_refptr.1760 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.1764", %struct.SkRect }
%"class.absl::optional.1764" = type { %"class.absl::optional_internal::optional_data.1765" }
%"class.absl::optional_internal::optional_data.1765" = type { %"class.absl::optional_internal::optional_data_base.1766" }
%"class.absl::optional_internal::optional_data_base.1766" = type { %"class.absl::optional_internal::optional_data_dtor_base.1767" }
%"class.absl::optional_internal::optional_data_dtor_base.1767" = type { i8, %union.anon.1768 }
%union.anon.1768 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.1769, [384 x i64], %class.sk_sp.1770, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.1771", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.1777" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.1769 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1770 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.1771" = type { %"class.std::__1::__compressed_pair.1772" }
%"class.std::__1::__compressed_pair.1772" = type { %"struct.std::__1::__compressed_pair_elem.1773" }
%"struct.std::__1::__compressed_pair_elem.1773" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.1777" = type { %"class.std::__1::__compressed_pair.1778" }
%"class.std::__1::__compressed_pair.1778" = type { %"struct.std::__1::__compressed_pair_elem.1779" }
%"struct.std::__1::__compressed_pair_elem.1779" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.1786" = type { %"class.std::__1::__compressed_pair.1787" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.1807", %"class.std::__1::unique_ptr.1812" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.1789", %"class.std::__1::unique_ptr.1789", %"class.std::__1::unique_ptr.1795", %"class.std::__1::unique_ptr.1801", %class.sk_sp.1752 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1789" = type { %"class.std::__1::__compressed_pair.1790" }
%"class.std::__1::__compressed_pair.1790" = type { %"struct.std::__1::__compressed_pair_elem.1791" }
%"struct.std::__1::__compressed_pair_elem.1791" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.1795" = type { %"class.std::__1::__compressed_pair.1796" }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.1801" = type { %"class.std::__1::__compressed_pair.1802" }
%"class.std::__1::__compressed_pair.1802" = type { %"struct.std::__1::__compressed_pair_elem.1803" }
%"struct.std::__1::__compressed_pair_elem.1803" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.1807" = type { %"class.absl::optional_internal::optional_data.1808" }
%"class.absl::optional_internal::optional_data.1808" = type { %"class.absl::optional_internal::optional_data_base.1809" }
%"class.absl::optional_internal::optional_data_base.1809" = type { %"class.absl::optional_internal::optional_data_dtor_base.1810" }
%"class.absl::optional_internal::optional_data_dtor_base.1810" = type { i8, %union.anon.1811 }
%union.anon.1811 = type { i32 }
%"class.std::__1::unique_ptr.1812" = type { %"class.std::__1::__compressed_pair.1813" }
%"class.std::__1::__compressed_pair.1813" = type { %"struct.std::__1::__compressed_pair_elem.1814" }
%"struct.std::__1::__compressed_pair_elem.1814" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::DrawingRecorder" = type <{ %"class.blink::GraphicsContext"*, %"class.blink::DisplayItemClient"*, i32, %"class.blink::IntRect", %"class.absl::optional.1821", [4 x i8] }>
%"class.blink::BackgroundImageGeometry" = type <{ %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"struct.blink::PhysicalSize", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::BoxModelObjectPainter" = type { %"class.blink::BoxPainterBase", %"class.blink::LayoutBoxModelObject"*, %"class.blink::InlineFlowBox"* }
%"class.blink::BoxPainterBase" = type { i32 (...)**, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::Node"* }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1826, %"class.std::__1::unique_ptr.1827", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1826 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1882", i16, %class.scoped_refptr.1826 }
%"class.WTF::ThreadSafeRefCounted.1882" = type { %"class.base::RefCountedThreadSafe.1883" }
%"class.base::RefCountedThreadSafe.1883" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"class.WTF::Vector.1830"* }
%"class.WTF::Vector.1830" = type { %"class.WTF::VectorBuffer.1831" }
%"class.WTF::VectorBuffer.1831" = type { %"class.WTF::VectorBufferBase.1832" }
%"class.WTF::VectorBufferBase.1832" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1833, %"class.WTF::Vector.1834", %"class.std::__1::unique_ptr.1839", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1860, %"class.blink::Persistent.1861" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1833 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1834" = type { %"class.WTF::VectorBuffer.1835" }
%"class.WTF::VectorBuffer.1835" = type { %"class.WTF::VectorBufferBase.1836", [8 x i8] }
%"class.WTF::VectorBufferBase.1836" = type { %class.scoped_refptr.1833*, i32, i32 }
%"class.std::__1::unique_ptr.1839" = type { %"class.std::__1::__compressed_pair.1840" }
%"class.std::__1::__compressed_pair.1840" = type { %"struct.std::__1::__compressed_pair_elem.1841" }
%"struct.std::__1::__compressed_pair_elem.1841" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1842", %"class.absl::optional.1847", %"class.absl::optional.1852" }
%"class.absl::optional.1842" = type { %"class.absl::optional_internal::optional_data.1843" }
%"class.absl::optional_internal::optional_data.1843" = type { %"class.absl::optional_internal::optional_data_base.1844" }
%"class.absl::optional_internal::optional_data_base.1844" = type { %"class.absl::optional_internal::optional_data_dtor_base.1845" }
%"class.absl::optional_internal::optional_data_dtor_base.1845" = type { i8, %union.anon.1846 }
%union.anon.1846 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1847" = type { %"class.absl::optional_internal::optional_data.1848" }
%"class.absl::optional_internal::optional_data.1848" = type { %"class.absl::optional_internal::optional_data_base.1849" }
%"class.absl::optional_internal::optional_data_base.1849" = type { %"class.absl::optional_internal::optional_data_dtor_base.1850" }
%"class.absl::optional_internal::optional_data_dtor_base.1850" = type { i8, [3 x i8], %union.anon.1851 }
%union.anon.1851 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1852" = type { %"class.absl::optional_internal::optional_data.1853" }
%"class.absl::optional_internal::optional_data.1853" = type { %"class.absl::optional_internal::optional_data_base.1854" }
%"class.absl::optional_internal::optional_data_base.1854" = type { %"class.absl::optional_internal::optional_data_dtor_base.1855" }
%"class.absl::optional_internal::optional_data_dtor_base.1855" = type { i8, %union.anon.1856 }
%union.anon.1856 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1860 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1861" = type { %"class.blink::PersistentBase.1862" }
%"class.blink::PersistentBase.1862" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1865", %"struct.blink::PhysicalRect", %"class.blink::Member.1875" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1865" = type { %"class.std::__1::__compressed_pair.1866" }
%"class.std::__1::__compressed_pair.1866" = type { %"struct.std::__1::__compressed_pair_elem.1867" }
%"struct.std::__1::__compressed_pair_elem.1867" = type { %"class.WTF::HashSet.1868"* }
%"class.WTF::HashSet.1868" = type { %"class.WTF::HashTable.1869" }
%"class.WTF::HashTable.1869" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1875" = type { %"class.blink::MemberBase.1876" }
%"class.blink::MemberBase.1876" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque

$_ZNK5blink14LineLayoutItem8StyleRefEb = comdat any

$_ZNK5blink9PaintInfo18IntersectsCullRectERKNS_12PhysicalRectERKNS_14PhysicalOffsetE = comdat any

$_ZNK5blink13InlineFlowBox26PhysicalVisualOverflowRectENS_10LayoutUnitES1_ = comdat any

$_ZNK5blink20BorderImageLengthBox7NonZeroEv = comdat any

@_ZTVN5blink20InlineFlowBoxPainterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InlineFlowBoxPainter"*, %"struct.blink::PaintInfo"*, %"class.blink::ComputedStyle"*, %"struct.blink::PhysicalRect"*)* @_ZN5blink20InlineFlowBoxPainter20PaintNormalBoxShadowERKNS_9PaintInfoERKNS_13ComputedStyleERKNS_12PhysicalRectE to i8*), i8* bitcast (void (%"class.blink::InlineFlowBoxPainter"*, %"struct.blink::PaintInfo"*, %"class.blink::ComputedStyle"*, %"struct.blink::PhysicalRect"*)* @_ZN5blink20InlineFlowBoxPainter19PaintInsetBoxShadowERKNS_9PaintInfoERKNS_13ComputedStyleERKNS_12PhysicalRectE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::InlineFlowBoxPainter"*, %"struct.blink::PhysicalRect"*, i8)* @_ZNK5blink20InlineFlowBoxPainter22PaintRectForImageStripERKNS_12PhysicalRectENS_13TextDirectionE to i8*), i8* bitcast (i32 (%"class.blink::InlineFlowBoxPainter"*, %"struct.blink::PhysicalRect"*, %"class.blink::IntRect"*, i1)* @_ZNK5blink20InlineFlowBoxPainter18GetBorderPaintTypeERKNS_12PhysicalRectERNS_7IntRectEb to i8*)] }, align 8
@.str = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1

@_ZN5blink20InlineFlowBoxPainterC1ERKNS_13InlineFlowBoxE = hidden unnamed_addr alias void (%"class.blink::InlineFlowBoxPainter"*, %"class.blink::InlineFlowBox"*), void (%"class.blink::InlineFlowBoxPainter"*, %"class.blink::InlineFlowBox"*)* @_ZN5blink20InlineFlowBoxPainterC2ERKNS_13InlineFlowBoxE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineFlowBoxPainterC2ERKNS_13InlineFlowBoxE(%"class.blink::InlineFlowBoxPainter"* nocapture, %"class.blink::InlineFlowBox"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LineLayoutItem", align 8
  %4 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %1, i64 0, i32 0, i32 4, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 33554432
  %10 = icmp eq i96 %9, 0
  %11 = bitcast %"class.blink::LayoutObject"* %5 to %"class.blink::LayoutBoxModelObject"*
  %12 = select i1 %10, %"class.blink::LayoutBoxModelObject"* %11, %"class.blink::LayoutBoxModelObject"* null
  %13 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %12, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %12, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %12, i64 0, i32 0, i32 6, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %18, label %25

18:                                               ; preds = %2, %18
  %19 = phi %"class.blink::LayoutObject"* [ %21, %18 ], [ %14, %2 ]
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 7
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 6, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %18, label %25

25:                                               ; preds = %18, %2
  %26 = phi %"class.blink::Node"* [ %16, %2 ], [ %23, %18 ]
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.blink::Document"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq %"class.blink::LayoutBoxModelObject"* %12, null
  br i1 %32, label %76, label %33

33:                                               ; preds = %25, %67
  %34 = phi %"class.blink::LayoutObject"* [ %70, %67 ], [ %14, %25 ]
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 4
  %36 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %35 to i96*
  %37 = load i96, i96* %36, align 4
  %38 = and i96 %37, 16777216
  %39 = icmp eq i96 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 6, i32 0, i32 0
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %41, align 8
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %43, label %52, label %44

44:                                               ; preds = %40
  %45 = bitcast %"class.blink::Node"* %42 to i8 (%"class.blink::Node"*)***
  %46 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %45, align 8
  %47 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %46, i64 34
  %48 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %47, align 8
  %49 = tail call zeroext i8 %48(%"class.blink::Node"* nonnull %42) #6
  %50 = icmp ne i8 %49, 0
  %51 = load i96, i96* %36, align 4
  br label %52

52:                                               ; preds = %44, %40, %33
  %53 = phi i96 [ %37, %40 ], [ %51, %44 ], [ %37, %33 ]
  %54 = phi i1 [ false, %40 ], [ %50, %44 ], [ false, %33 ]
  %55 = and i96 %53, 16777216
  %56 = icmp eq i96 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 6, i32 0, i32 0
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %58, align 8
  br label %60

60:                                               ; preds = %57, %52
  %61 = phi %"class.blink::Node"* [ %59, %57 ], [ null, %52 ]
  br i1 %54, label %62, label %67

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 2, i32 0, i32 0
  %64 = bitcast %"class.blink::Node"** %63 to %"class.blink::ContainerNode"**
  %65 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %65, i64 0, i32 0
  br label %67

67:                                               ; preds = %62, %60
  %68 = phi %"class.blink::Node"* [ %66, %62 ], [ %61, %60 ]
  %69 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 7
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %71 = icmp ne %"class.blink::LayoutObject"* %70, null
  %72 = icmp eq %"class.blink::Node"* %68, null
  %73 = and i1 %72, %71
  br i1 %73, label %33, label %74

74:                                               ; preds = %67
  %75 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  br label %76

76:                                               ; preds = %74, %25
  %77 = phi %"class.blink::LayoutObject"* [ %5, %25 ], [ %75, %74 ]
  %78 = phi %"class.blink::Node"* [ null, %25 ], [ %68, %74 ]
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %77, i64 0, i32 5, i32 0
  %80 = bitcast %"class.blink::ComputedStyle"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.blink::LineLayoutItem"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #6
  %83 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %3, i64 0, i32 0
  store %"class.blink::LayoutObject"* %77, %"class.blink::LayoutObject"** %83, align 8
  %84 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %1, i64 0, i32 0, i32 7, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, 1
  %87 = icmp ne i32 %86, 0
  %88 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"* nonnull %3, i1 zeroext %87)
  %89 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 0, i32 1
  store %"class.blink::ImageResourceObserver"* %13, %"class.blink::ImageResourceObserver"** %90, align 8
  %91 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 0, i32 2
  %92 = bitcast %"class.blink::Document"** %91 to i64*
  store i64 %31, i64* %92, align 8
  %93 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 0, i32 3
  store %"class.blink::Node"* %78, %"class.blink::Node"** %93, align 8
  %94 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 0, i32 4
  %95 = bitcast %"class.blink::ComputedStyle"** %94 to i64*
  store i64 %81, i64* %95, align 8
  %96 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 0, i32 5
  store %"class.blink::ComputedStyle"* %88, %"class.blink::ComputedStyle"** %96, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink20InlineFlowBoxPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 8
  %97 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 1
  store %"class.blink::InlineFlowBox"* %1, %"class.blink::InlineFlowBox"** %97, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  br i1 %1, label %6, label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %5, %6 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %6
  %18 = phi %"class.blink::Node"* [ %8, %6 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 59, i32 0, i32 0
  %24 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %24, i64 0, i32 31, i32 0, i32 0
  %26 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 11
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #6
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  br label %34

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %5) #6
  %40 = icmp eq %"class.blink::ComputedStyle"* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %2, %34, %38
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.blink::ComputedStyle"* [ %39, %38 ], [ %43, %41 ]
  ret %"class.blink::ComputedStyle"* %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineFlowBoxPainter5PaintERKNS_9PaintInfoERKNS_14PhysicalOffsetENS_10LayoutUnitES7_(%"class.blink::InlineFlowBoxPainter"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %8 = alloca %"struct.blink::PaintInfo", align 8
  %9 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 1
  %11 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %10, align 8
  %12 = tail call { i64, i64 } @_ZNK5blink13InlineFlowBox26PhysicalVisualOverflowRectENS_10LayoutUnitES1_(%"class.blink::InlineFlowBox"* %11, i32 %3, i32 %4)
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %14 = extractvalue { i64, i64 } %12, 0
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %16 = extractvalue { i64, i64 } %12, 1
  store i64 %16, i64* %15, align 8
  %17 = call zeroext i1 @_ZNK5blink9PaintInfo18IntersectsCullRectERKNS_12PhysicalRectERKNS_14PhysicalOffsetE(%"struct.blink::PaintInfo"* %1, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6
  br i1 %17, label %18, label %52

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %23 [
    i32 12, label %21
    i32 5, label %22
  ]

21:                                               ; preds = %18
  call void @_ZN5blink20InlineFlowBoxPainter9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::InlineFlowBoxPainter"* %0, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2)
  br label %52

22:                                               ; preds = %18
  call void @_ZN5blink20InlineFlowBoxPainter27PaintBackgroundBorderShadowERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::InlineFlowBoxPainter"* %0, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2)
  br label %23

23:                                               ; preds = %18, %22
  %24 = bitcast %"struct.blink::PaintInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %24) #6
  %25 = bitcast %"struct.blink::PaintInfo"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %25, i64 56, i1 false)
  %26 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %10, align 8
  %27 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %26, i64 0, i32 2
  %28 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %27, align 8
  %29 = icmp eq %"class.blink::InlineBox"* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %48, %23
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %24) #6
  br label %52

31:                                               ; preds = %23, %48
  %32 = phi %"class.blink::InlineBox"* [ %50, %48 ], [ %28, %23 ]
  %33 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %32, i64 0, i32 4, i32 0
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 4
  %36 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %35 to i96*
  %37 = load i96, i96* %36, align 4
  %38 = and i96 %37, 33554432
  %39 = icmp eq i96 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %31
  %41 = bitcast %"class.blink::LayoutObject"* %34 to %"class.blink::LayoutBoxModelObject"*
  %42 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %41) #6
  br i1 %42, label %48, label %43

43:                                               ; preds = %31, %40
  %44 = bitcast %"class.blink::InlineBox"* %32 to void (%"class.blink::InlineBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, i32, i32)***
  %45 = load void (%"class.blink::InlineBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, i32, i32)**, void (%"class.blink::InlineBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, i32, i32)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::InlineBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, i32, i32)*, void (%"class.blink::InlineBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, i32, i32)** %45, i64 11
  %47 = load void (%"class.blink::InlineBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, i32, i32)*, void (%"class.blink::InlineBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, i32, i32)** %46, align 8
  call void %47(%"class.blink::InlineBox"* nonnull %32, %"struct.blink::PaintInfo"* nonnull dereferenceable(56) %8, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, i32 %3, i32 %4) #6
  br label %48

48:                                               ; preds = %40, %43
  %49 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %32, i64 0, i32 1
  %50 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %49, align 8
  %51 = icmp eq %"class.blink::InlineBox"* %50, null
  br i1 %51, label %30, label %31

52:                                               ; preds = %5, %30, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9PaintInfo18IntersectsCullRectERKNS_12PhysicalRectERKNS_14PhysicalOffsetE(%"struct.blink::PaintInfo"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::IntRect"*
  %6 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %0, i64 0, i32 2
  %7 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, i32 -2147483648, i32 2147483647
  %14 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 %11) #6
  %15 = extractvalue { i32, i1 } %14, 1
  %16 = extractvalue { i32, i1 } %14, 0
  %17 = select i1 %15, i32 %13, i32 %16, !prof !3
  %18 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 0
  %23 = select i1 %22, i32 -2147483648, i32 2147483647
  %24 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %21) #6
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 %23, i32 %26, !prof !3
  %28 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1
  %29 = bitcast %"struct.blink::PhysicalSize"* %28 to i64*
  %30 = load i64, i64* %29, align 4
  %31 = icmp slt i32 %17, -2147483584
  %32 = ashr i32 %17, 6
  %33 = select i1 %31, i32 -33554432, i32 %32, !prof !3
  %34 = icmp slt i32 %27, -2147483584
  %35 = ashr i32 %27, 6
  %36 = select i1 %34, i32 -33554432, i32 %35, !prof !3
  %37 = zext i32 %36 to i64
  %38 = shl nuw i64 %37, 32
  %39 = trunc i64 %30 to i32
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %39) #6
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !3
  %46 = lshr i64 %30, 32
  %47 = trunc i64 %46 to i32
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %47) #6
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !3
  %54 = icmp sgt i32 %45, 2147483583
  br i1 %54, label %62, label %55, !prof !3

55:                                               ; preds = %3
  %56 = icmp sgt i32 %45, -1
  br i1 %56, label %57, label %60

57:                                               ; preds = %55
  %58 = add nuw nsw i32 %45, 63
  %59 = sdiv i32 %58, 64
  br label %62

60:                                               ; preds = %55
  %61 = sdiv i32 %45, 64
  br label %62

62:                                               ; preds = %60, %57, %3
  %63 = phi i32 [ %59, %57 ], [ %61, %60 ], [ 33554431, %3 ]
  %64 = icmp sgt i32 %53, 2147483583
  br i1 %64, label %72, label %65, !prof !3

65:                                               ; preds = %62
  %66 = icmp sgt i32 %53, -1
  br i1 %66, label %67, label %70

67:                                               ; preds = %65
  %68 = add nuw nsw i32 %53, 63
  %69 = sdiv i32 %68, 64
  br label %72

70:                                               ; preds = %65
  %71 = sdiv i32 %53, 64
  br label %72

72:                                               ; preds = %62, %67, %70
  %73 = phi i32 [ %69, %67 ], [ %71, %70 ], [ 33554431, %62 ]
  %74 = sub nsw i32 %63, %33
  %75 = sub nsw i32 %73, %36
  %76 = zext i32 %75 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %74 to i64
  %79 = or i64 %77, %78
  %80 = zext i32 %33 to i64
  %81 = or i64 %38, %80
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %79, i64* %83, align 8
  %84 = call zeroext i1 @_ZNK5blink8CullRect10IntersectsERKNS_7IntRectE(%"class.blink::CullRect"* %6, %"class.blink::IntRect"* nonnull dereferenceable(16) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #6
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink13InlineFlowBox26PhysicalVisualOverflowRectENS_10LayoutUnitES1_(%"class.blink::InlineFlowBox"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::LayoutRect"*
  %6 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %7 = bitcast { i64, i64 }* %4 to i32*
  %8 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %5, i64 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %10 = bitcast i64* %9 to i32*
  %11 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %5, i64 0, i32 1, i32 1, i32 0
  %12 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load %"struct.blink::SimpleOverflowModel"*, %"struct.blink::SimpleOverflowModel"** %12, align 8
  %15 = icmp eq %"struct.blink::SimpleOverflowModel"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.blink::LayoutRect"* %21 to i64*
  %23 = load i64, i64* %22, align 4
  %24 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %25 = bitcast %"class.blink::LayoutSize"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  br label %67

27:                                               ; preds = %16, %3
  %28 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %0, i64 0, i32 0, i32 7, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 2048
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %43, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %0, i64 0, i32 0, i32 6, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %1, -1
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %2, i32 %1) #6
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !3
  br label %54

43:                                               ; preds = %27
  %44 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %0, i64 0, i32 0, i32 5, i32 1, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %1, -1
  %47 = select i1 %46, i32 -2147483648, i32 2147483647
  %48 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %2, i32 %1) #6
  %49 = extractvalue { i32, i1 } %48, 1
  %50 = extractvalue { i32, i1 } %48, 0
  %51 = select i1 %49, i32 %47, i32 %50, !prof !3
  %52 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %0, i64 0, i32 0, i32 6, i32 0
  %53 = load i32, i32* %52, align 8
  br label %54

54:                                               ; preds = %43, %32
  %55 = phi i32 [ %1, %32 ], [ %45, %43 ]
  %56 = phi i32 [ %34, %32 ], [ %1, %43 ]
  %57 = phi i32 [ %36, %32 ], [ %51, %43 ]
  %58 = phi i32 [ %42, %32 ], [ %53, %43 ]
  %59 = zext i32 %55 to i64
  %60 = shl nuw i64 %59, 32
  %61 = zext i32 %56 to i64
  %62 = or i64 %60, %61
  %63 = zext i32 %58 to i64
  %64 = shl nuw i64 %63, 32
  %65 = zext i32 %57 to i64
  %66 = or i64 %64, %65
  br label %67

67:                                               ; preds = %20, %54
  %68 = phi i64 [ %23, %20 ], [ %62, %54 ]
  %69 = phi i64 [ %26, %20 ], [ %66, %54 ]
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %68, i64* %70, align 8
  store i64 %69, i64* %9, align 8
  %71 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %0, i64 0, i32 0
  call void @_ZNK5blink9InlineBox18FlipForWritingModeERNS_10LayoutRectE(%"class.blink::InlineBox"* %71, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %5) #6
  %72 = load i32, i32* %7, align 8
  %73 = load i32, i32* %8, align 4
  %74 = load i32, i32* %10, align 8
  %75 = load i32, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  %76 = zext i32 %73 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %72 to i64
  %79 = or i64 %77, %78
  %80 = insertvalue { i64, i64 } undef, i64 %79, 0
  %81 = zext i32 %75 to i64
  %82 = shl nuw i64 %81, 32
  %83 = zext i32 %74 to i64
  %84 = or i64 %82, %83
  %85 = insertvalue { i64, i64 } %80, i64 %84, 1
  ret { i64, i64 } %85
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineFlowBoxPainter9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::InlineFlowBoxPainter"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutRect", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %7 = alloca %"class.blink::DrawingRecorder", align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"class.blink::IntRect"*
  %10 = alloca %"class.blink::BackgroundImageGeometry", align 8
  %11 = alloca %"class.blink::BoxModelObjectPainter", align 8
  %12 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 0, i32 4
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %18, i64 0, i32 13, i32 5
  %20 = bitcast [7 x i8]* %19 to i56*
  %21 = load i56, i56* %20, align 8
  %22 = and i56 %21, 281474976710656
  %23 = icmp eq i56 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %18, i64 0, i32 13
  tail call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %25) #6
  %26 = load i56, i56* %20, align 8
  br label %27

27:                                               ; preds = %24, %3
  %28 = phi i56 [ %21, %3 ], [ %26, %24 ]
  %29 = and i56 %28, 8796093022208
  %30 = icmp eq i56 %29, 0
  br i1 %30, label %31, label %40

31:                                               ; preds = %27
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %15, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %32, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %34, i64 0, i32 14, i32 0, i32 0, i32 0
  %36 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %37, align 8
  %39 = icmp eq %"class.blink::StyleImage"* %38, null
  br i1 %39, label %162, label %40

40:                                               ; preds = %31, %27
  %41 = bitcast %"class.blink::ComputedStyle"** %13 to %"class.blink::ComputedStyleBase"**
  %42 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %42, i64 0, i32 9
  %44 = bitcast [20 x i8]* %43 to i160*
  %45 = load i160, i160* %44, align 8
  %46 = and i160 %45, 3802951800684688204490109616128
  %47 = icmp eq i160 %46, 1267650600228229401496703205376
  br i1 %47, label %48, label %162

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 0
  %50 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 1
  %52 = bitcast %"class.blink::InlineFlowBox"** %51 to %"class.blink::DisplayItemClient"**
  %53 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %52, align 8
  %54 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = add nsw i32 %55, 1
  %57 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %50, i64 0, i32 1
  %58 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %57, align 8
  %59 = tail call zeroext i1 @_ZN5blink15PaintController23UseCachedItemIfPossibleERKNS_17DisplayItemClientENS_11DisplayItem4TypeE(%"class.blink::PaintController"* %58, %"class.blink::DisplayItemClient"* dereferenceable(16) %53, i32 %56) #6
  br i1 %59, label %162, label %60

60:                                               ; preds = %48
  %61 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #6
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %63 = tail call { i64, i64 } @_ZNK5blink20InlineFlowBoxPainter42FrameRectClampedToLineTopAndBottomIfNeededEv(%"class.blink::InlineFlowBoxPainter"* %0) #6
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = bitcast %"class.blink::LayoutRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #6
  %67 = bitcast %"class.blink::LayoutRect"* %4 to i64*
  store i64 %64, i64* %67, align 8
  %68 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 1
  %69 = bitcast %"class.blink::LayoutSize"* %68 to i64*
  store i64 %65, i64* %69, align 8
  %70 = bitcast %"class.blink::InlineFlowBox"** %51 to %"class.blink::InlineBox"**
  %71 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %70, align 8
  call void @_ZNK5blink9InlineBox18FlipForWritingModeERNS_10LayoutRectE(%"class.blink::InlineBox"* %71, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %4) #6
  %72 = load i64, i64* %67, align 8
  %73 = lshr i64 %72, 32
  %74 = trunc i64 %73 to i32
  %75 = trunc i64 %72 to i32
  %76 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %75, 0
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %77, i32 %75) #6
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 %79, i32 %82, !prof !3
  %84 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp slt i32 %74, 0
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %85, i32 %74) #6
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !3
  %92 = zext i32 %91 to i64
  %93 = shl nuw i64 %92, 32
  %94 = zext i32 %83 to i64
  %95 = or i64 %93, %94
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #6
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %95, i64* %96, align 8
  store i64 %65, i64* %62, align 8
  %97 = bitcast %"class.blink::DrawingRecorder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %97) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 48, i1 false)
  %98 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %49, align 8
  %99 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %52, align 8
  %100 = load i32, i32* %54, align 8
  %101 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #6
  %102 = call { i64, i64 } @_ZNK5blink20InlineFlowBoxPainter10VisualRectERKNS_12PhysicalRectE(%"class.blink::InlineFlowBoxPainter"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6)
  %103 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %104 = extractvalue { i64, i64 } %102, 0
  store i64 %104, i64* %103, align 8
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %106 = extractvalue { i64, i64 } %102, 1
  store i64 %106, i64* %105, align 8
  %107 = add nsw i32 %100, 1
  call void @_ZN5blink15DrawingRecorderC2ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE(%"class.blink::DrawingRecorder"* nonnull %7, %"class.blink::GraphicsContext"* dereferenceable(112) %98, %"class.blink::DisplayItemClient"* dereferenceable(16) %99, i32 %107, %"class.blink::IntRect"* nonnull dereferenceable(16) %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #6
  %108 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %51, align 8
  %109 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %108, i64 0, i32 4
  %110 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %109, align 8
  %111 = icmp eq %"class.blink::InlineFlowBox"* %110, null
  br i1 %111, label %112, label %116

112:                                              ; preds = %60
  %113 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %108, i64 0, i32 5
  %114 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %113, align 8
  %115 = icmp ne %"class.blink::InlineFlowBox"* %114, null
  br label %116

116:                                              ; preds = %60, %112
  %117 = phi i1 [ true, %60 ], [ %115, %112 ]
  %118 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %108, i64 0, i32 0, i32 4, i32 0
  %119 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %119, i64 0, i32 4
  %121 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %120 to i96*
  %122 = load i96, i96* %121, align 4
  %123 = and i96 %122, 33554432
  %124 = icmp eq i96 %123, 0
  %125 = bitcast %"class.blink::LayoutObject"* %119 to %"class.blink::LayoutBoxModelObject"*
  %126 = select i1 %124, %"class.blink::LayoutBoxModelObject"* %125, %"class.blink::LayoutBoxModelObject"* null
  %127 = bitcast %"class.blink::BackgroundImageGeometry"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %127) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 -86, i64 96, i1 false)
  call void @_ZN5blink23BackgroundImageGeometryC1ERKNS_20LayoutBoxModelObjectE(%"class.blink::BackgroundImageGeometry"* nonnull %10, %"class.blink::LayoutBoxModelObject"* dereferenceable(88) %126) #6
  %128 = bitcast %"class.blink::BoxModelObjectPainter"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %128) #6
  %129 = bitcast %"class.blink::BoxModelObjectPainter"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 -86, i64 48, i1 false)
  %130 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %51, align 8
  call void @_ZN5blink21BoxModelObjectPainterC1ERKNS_20LayoutBoxModelObjectEPKNS_13InlineFlowBoxE(%"class.blink::BoxModelObjectPainter"* nonnull %11, %"class.blink::LayoutBoxModelObject"* dereferenceable(88) %126, %"class.blink::InlineFlowBox"* %130) #6
  %131 = getelementptr inbounds %"class.blink::BoxModelObjectPainter", %"class.blink::BoxModelObjectPainter"* %11, i64 0, i32 0
  %132 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %51, align 8
  %133 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %132, i64 0, i32 6
  %134 = load i32, i32* %133, align 8
  %135 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %132, i64 0, i32 0, i32 4, i32 0
  %136 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %136, i64 0, i32 5, i32 0
  %138 = bitcast %"class.blink::ComputedStyle"** %137 to %"class.blink::ComputedStyleBase"**
  %139 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %139, i64 0, i32 9
  %141 = bitcast [20 x i8]* %140 to i160*
  %142 = load i160, i160* %141, align 8
  %143 = and i160 %142, 15211807202738752817960438464512
  %144 = icmp eq i160 %143, 0
  br i1 %144, label %145, label %150

145:                                              ; preds = %116
  %146 = shl i32 %134, 24
  %147 = and i32 %146, 16777216
  %148 = shl i32 %134, 7
  %149 = and i32 %148, 256
  br label %154

150:                                              ; preds = %116
  %151 = and i32 %134, 1
  %152 = shl i32 %134, 15
  %153 = and i32 %152, 65536
  br label %154

154:                                              ; preds = %145, %150
  %155 = phi i32 [ 1, %145 ], [ %151, %150 ]
  %156 = phi i32 [ %149, %145 ], [ 256, %150 ]
  %157 = phi i32 [ 65536, %145 ], [ %153, %150 ]
  %158 = phi i32 [ %147, %145 ], [ 16777216, %150 ]
  %159 = or i32 %156, %155
  %160 = or i32 %159, %157
  %161 = or i32 %160, %158
  call void @_ZN5blink20InlineBoxPainterBase9PaintMaskERNS_14BoxPainterBaseERKNS_9PaintInfoERKNS_12PhysicalRectERNS_23BackgroundImageGeometryEbNS_16PhysicalBoxSidesE(%"class.blink::InlineBoxPainterBase"* %12, %"class.blink::BoxPainterBase"* nonnull dereferenceable(32) %131, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6, %"class.blink::BackgroundImageGeometry"* nonnull dereferenceable(96) %10, i1 zeroext %117, i32 %161) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %128) #6
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %127) #6
  call void @_ZN5blink15DrawingRecorderD1Ev(%"class.blink::DrawingRecorder"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %97) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #6
  br label %162

162:                                              ; preds = %31, %40, %48, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineFlowBoxPainter27PaintBackgroundBorderShadowERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::InlineFlowBoxPainter"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutRect", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %7 = alloca %"class.blink::DrawingRecorder", align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"class.blink::IntRect"*
  %10 = alloca %"class.blink::BackgroundImageGeometry", align 8
  %11 = alloca %"class.blink::BoxModelObjectPainter", align 8
  %12 = alloca %"class.blink::BackgroundImageGeometry", align 8
  %13 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 1
  %14 = bitcast %"class.blink::InlineFlowBox"** %13 to %"class.blink::InlineBox"**
  %15 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %15, i64 0, i32 4, i32 0
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 5, i32 0
  %19 = bitcast %"class.blink::ComputedStyle"** %18 to %"class.blink::ComputedStyleBase"**
  %20 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %20, i64 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = and i160 %23, 3802951800684688204490109616128
  %25 = icmp eq i160 %24, 1267650600228229401496703205376
  br i1 %25, label %26, label %165

26:                                               ; preds = %3
  tail call void @_ZN5blink20InlineFlowBoxPainter17RecordHitTestDataERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::InlineFlowBoxPainter"* %0, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2)
  %27 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %14, align 8
  %28 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %27, i64 0, i32 3
  %29 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %28, align 8
  %30 = icmp eq %"class.blink::InlineFlowBox"* %29, null
  %31 = bitcast %"class.blink::InlineBox"* %27 to %"class.blink::DisplayItemClient"*
  br i1 %30, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %27, i64 0, i32 4, i32 0
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 4
  %36 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %35 to i96*
  %37 = load i96, i96* %36, align 4
  %38 = and i96 %37, 2251799813685248
  %39 = icmp eq i96 %38, 0
  br i1 %39, label %165, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.blink::InlineFlowBox"** %13 to %"class.blink::DisplayItemClient"**
  br label %56

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %27, i64 0, i32 7, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %165, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 0, i32 5
  %49 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 0, i32 4
  %51 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %50, align 8
  %52 = tail call zeroext i1 @_ZNK5blink13ComputedStyleeqERKS0_(%"class.blink::ComputedStyle"* %49, %"class.blink::ComputedStyle"* dereferenceable(104) %51) #6
  br i1 %52, label %165, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.blink::InlineFlowBox"** %13 to %"class.blink::DisplayItemClient"**
  %55 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %54, align 8
  br label %56

56:                                               ; preds = %40, %53
  %57 = phi %"class.blink::DisplayItemClient"** [ %41, %40 ], [ %54, %53 ]
  %58 = phi %"class.blink::DisplayItemClient"* [ %31, %40 ], [ %55, %53 ]
  %59 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 0
  %60 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %60, i64 0, i32 1
  %62 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %61, align 8
  %63 = tail call zeroext i1 @_ZN5blink15PaintController23UseCachedItemIfPossibleERKNS_17DisplayItemClientENS_11DisplayItem4TypeE(%"class.blink::PaintController"* %62, %"class.blink::DisplayItemClient"* dereferenceable(16) %58, i32 14) #6
  br i1 %63, label %165, label %64

64:                                               ; preds = %56
  %65 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #6
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %67 = tail call { i64, i64 } @_ZNK5blink20InlineFlowBoxPainter42FrameRectClampedToLineTopAndBottomIfNeededEv(%"class.blink::InlineFlowBoxPainter"* %0) #6
  %68 = extractvalue { i64, i64 } %67, 0
  %69 = extractvalue { i64, i64 } %67, 1
  %70 = bitcast %"class.blink::LayoutRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #6
  %71 = bitcast %"class.blink::LayoutRect"* %4 to i64*
  store i64 %68, i64* %71, align 8
  %72 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 1
  %73 = bitcast %"class.blink::LayoutSize"* %72 to i64*
  store i64 %69, i64* %73, align 8
  %74 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %14, align 8
  call void @_ZNK5blink9InlineBox18FlipForWritingModeERNS_10LayoutRectE(%"class.blink::InlineBox"* %74, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %4) #6
  %75 = load i64, i64* %71, align 8
  %76 = lshr i64 %75, 32
  %77 = trunc i64 %76 to i32
  %78 = trunc i64 %75 to i32
  %79 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp slt i32 %78, 0
  %82 = select i1 %81, i32 -2147483648, i32 2147483647
  %83 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %80, i32 %78) #6
  %84 = extractvalue { i32, i1 } %83, 1
  %85 = extractvalue { i32, i1 } %83, 0
  %86 = select i1 %84, i32 %82, i32 %85, !prof !3
  %87 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %77, 0
  %90 = select i1 %89, i32 -2147483648, i32 2147483647
  %91 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %88, i32 %77) #6
  %92 = extractvalue { i32, i1 } %91, 1
  %93 = extractvalue { i32, i1 } %91, 0
  %94 = select i1 %92, i32 %90, i32 %93, !prof !3
  %95 = zext i32 %94 to i64
  %96 = shl nuw i64 %95, 32
  %97 = zext i32 %86 to i64
  %98 = or i64 %96, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #6
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %98, i64* %99, align 8
  store i64 %69, i64* %66, align 8
  %100 = bitcast %"class.blink::DrawingRecorder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %100) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 48, i1 false)
  %101 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %59, align 8
  %102 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %57, align 8
  %103 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #6
  %104 = call { i64, i64 } @_ZNK5blink20InlineFlowBoxPainter10VisualRectERKNS_12PhysicalRectE(%"class.blink::InlineFlowBoxPainter"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6)
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %106 = extractvalue { i64, i64 } %104, 0
  store i64 %106, i64* %105, align 8
  %107 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %108 = extractvalue { i64, i64 } %104, 1
  store i64 %108, i64* %107, align 8
  call void @_ZN5blink15DrawingRecorderC1ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE(%"class.blink::DrawingRecorder"* nonnull %7, %"class.blink::GraphicsContext"* dereferenceable(112) %101, %"class.blink::DisplayItemClient"* dereferenceable(16) %102, i32 14, %"class.blink::IntRect"* nonnull dereferenceable(16) %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #6
  %109 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %13, align 8
  %110 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %109, i64 0, i32 4
  %111 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %110, align 8
  %112 = icmp eq %"class.blink::InlineFlowBox"* %111, null
  br i1 %112, label %113, label %117

113:                                              ; preds = %64
  %114 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %109, i64 0, i32 5
  %115 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %114, align 8
  %116 = icmp ne %"class.blink::InlineFlowBox"* %115, null
  br label %117

117:                                              ; preds = %64, %113
  %118 = phi i1 [ true, %64 ], [ %116, %113 ]
  %119 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %109, i64 0, i32 0, i32 4, i32 0
  %120 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %120, i64 0, i32 4
  %122 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %121 to i96*
  %123 = load i96, i96* %122, align 4
  %124 = and i96 %123, 33554432
  %125 = icmp eq i96 %124, 0
  %126 = bitcast %"class.blink::LayoutObject"* %120 to %"class.blink::LayoutBoxModelObject"*
  %127 = select i1 %125, %"class.blink::LayoutBoxModelObject"* %126, %"class.blink::LayoutBoxModelObject"* null
  %128 = bitcast %"class.blink::BackgroundImageGeometry"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %128) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 96, i1 false)
  call void @_ZN5blink23BackgroundImageGeometryC1ERKNS_20LayoutBoxModelObjectE(%"class.blink::BackgroundImageGeometry"* nonnull %10, %"class.blink::LayoutBoxModelObject"* dereferenceable(88) %127) #6
  %129 = bitcast %"class.blink::BoxModelObjectPainter"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %129) #6
  %130 = bitcast %"class.blink::BoxModelObjectPainter"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 -86, i64 48, i1 false)
  %131 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %13, align 8
  call void @_ZN5blink21BoxModelObjectPainterC1ERKNS_20LayoutBoxModelObjectEPKNS_13InlineFlowBoxE(%"class.blink::BoxModelObjectPainter"* nonnull %11, %"class.blink::LayoutBoxModelObject"* dereferenceable(88) %127, %"class.blink::InlineFlowBox"* %131) #6
  %132 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 0
  %133 = getelementptr inbounds %"class.blink::BoxModelObjectPainter", %"class.blink::BoxModelObjectPainter"* %11, i64 0, i32 0
  %134 = bitcast %"class.blink::BackgroundImageGeometry"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %134, i8* nonnull align 8 %128, i64 96, i1 false)
  %135 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %13, align 8
  %136 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %135, i64 0, i32 6
  %137 = load i32, i32* %136, align 8
  %138 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %135, i64 0, i32 0, i32 4, i32 0
  %139 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %139, i64 0, i32 5, i32 0
  %141 = bitcast %"class.blink::ComputedStyle"** %140 to %"class.blink::ComputedStyleBase"**
  %142 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %142, i64 0, i32 9
  %144 = bitcast [20 x i8]* %143 to i160*
  %145 = load i160, i160* %144, align 8
  %146 = and i160 %145, 15211807202738752817960438464512
  %147 = icmp eq i160 %146, 0
  br i1 %147, label %148, label %153

148:                                              ; preds = %117
  %149 = shl i32 %137, 24
  %150 = and i32 %149, 16777216
  %151 = shl i32 %137, 7
  %152 = and i32 %151, 256
  br label %157

153:                                              ; preds = %117
  %154 = and i32 %137, 1
  %155 = shl i32 %137, 15
  %156 = and i32 %155, 65536
  br label %157

157:                                              ; preds = %148, %153
  %158 = phi i32 [ 1, %148 ], [ %154, %153 ]
  %159 = phi i32 [ %152, %148 ], [ 256, %153 ]
  %160 = phi i32 [ 65536, %148 ], [ %156, %153 ]
  %161 = phi i32 [ %150, %148 ], [ 16777216, %153 ]
  %162 = or i32 %159, %158
  %163 = or i32 %162, %160
  %164 = or i32 %163, %161
  call void @_ZN5blink20InlineBoxPainterBase28PaintBoxDecorationBackgroundERNS_14BoxPainterBaseERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_12PhysicalRectENS_23BackgroundImageGeometryEbNS_16PhysicalBoxSidesE(%"class.blink::InlineBoxPainterBase"* %132, %"class.blink::BoxPainterBase"* nonnull dereferenceable(32) %133, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6, %"class.blink::BackgroundImageGeometry"* nonnull byval(%"class.blink::BackgroundImageGeometry") align 8 %12, i1 zeroext %118, i32 %164) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %129) #6
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %128) #6
  call void @_ZN5blink15DrawingRecorderD1Ev(%"class.blink::DrawingRecorder"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %100) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #6
  br label %165

165:                                              ; preds = %47, %42, %32, %157, %56, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK5blink20InlineFlowBoxPainter22PaintRectForImageStripERKNS_12PhysicalRectENS_13TextDirectionE(%"class.blink::InlineFlowBoxPainter"* nocapture readonly, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), i8 zeroext) unnamed_addr #2 align 2 {
  %4 = icmp eq i8 %2, 0
  %5 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 1
  %6 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %5, align 8
  br i1 %4, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %6, i64 0, i32 5
  %9 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %8, align 8
  %10 = icmp eq %"class.blink::InlineFlowBox"* %9, null
  br i1 %10, label %46, label %49

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %6, i64 0, i32 4
  %13 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %12, align 8
  %14 = icmp eq %"class.blink::InlineFlowBox"* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %18, %11
  %16 = phi i32 [ 0, %11 ], [ %28, %18 ]
  %17 = icmp eq %"class.blink::InlineFlowBox"* %6, null
  br i1 %17, label %77, label %32

18:                                               ; preds = %11, %18
  %19 = phi %"class.blink::InlineFlowBox"* [ %30, %18 ], [ %13, %11 ]
  %20 = phi i32 [ %28, %18 ], [ 0, %11 ]
  %21 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %19, i64 0, i32 0, i32 6, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %20, i32 %22) #6
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !3
  %29 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %19, i64 0, i32 4
  %30 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %29, align 8
  %31 = icmp eq %"class.blink::InlineFlowBox"* %30, null
  br i1 %31, label %15, label %18

32:                                               ; preds = %15, %32
  %33 = phi %"class.blink::InlineFlowBox"* [ %44, %32 ], [ %6, %15 ]
  %34 = phi i32 [ %42, %32 ], [ %16, %15 ]
  %35 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %33, i64 0, i32 0, i32 6, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp slt i32 %36, 0
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 %36) #6
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !3
  %43 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %33, i64 0, i32 5
  %44 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %43, align 8
  %45 = icmp eq %"class.blink::InlineFlowBox"* %44, null
  br i1 %45, label %77, label %32

46:                                               ; preds = %49, %7
  %47 = phi i32 [ 0, %7 ], [ %59, %49 ]
  %48 = icmp eq %"class.blink::InlineFlowBox"* %6, null
  br i1 %48, label %77, label %63

49:                                               ; preds = %7, %49
  %50 = phi %"class.blink::InlineFlowBox"* [ %61, %49 ], [ %9, %7 ]
  %51 = phi i32 [ %59, %49 ], [ 0, %7 ]
  %52 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %50, i64 0, i32 0, i32 6, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp slt i32 %53, 0
  %55 = select i1 %54, i32 -2147483648, i32 2147483647
  %56 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 %53) #6
  %57 = extractvalue { i32, i1 } %56, 1
  %58 = extractvalue { i32, i1 } %56, 0
  %59 = select i1 %57, i32 %55, i32 %58, !prof !3
  %60 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %50, i64 0, i32 5
  %61 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %60, align 8
  %62 = icmp eq %"class.blink::InlineFlowBox"* %61, null
  br i1 %62, label %46, label %49

63:                                               ; preds = %46, %63
  %64 = phi %"class.blink::InlineFlowBox"* [ %75, %63 ], [ %6, %46 ]
  %65 = phi i32 [ %73, %63 ], [ %47, %46 ]
  %66 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %64, i64 0, i32 0, i32 6, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp slt i32 %67, 0
  %69 = select i1 %68, i32 -2147483648, i32 2147483647
  %70 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %65, i32 %67) #6
  %71 = extractvalue { i32, i1 } %70, 1
  %72 = extractvalue { i32, i1 } %70, 0
  %73 = select i1 %71, i32 %69, i32 %72, !prof !3
  %74 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %64, i64 0, i32 4
  %75 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %74, align 8
  %76 = icmp eq %"class.blink::InlineFlowBox"* %75, null
  br i1 %76, label %77, label %63

77:                                               ; preds = %63, %32, %46, %15
  %78 = phi i32 [ %16, %15 ], [ %47, %46 ], [ %42, %32 ], [ %73, %63 ]
  %79 = phi i32 [ %16, %15 ], [ %47, %46 ], [ %16, %32 ], [ %47, %63 ]
  %80 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %6, i64 0, i32 0, i32 7, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 2048
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %77
  %87 = icmp sgt i32 %79, -1
  br i1 %87, label %88, label %90

88:                                               ; preds = %77, %86
  %89 = phi i32 [ %79, %86 ], [ 0, %77 ]
  br label %90

90:                                               ; preds = %86, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %86 ]
  %92 = phi i32 [ -2147483648, %88 ], [ 2147483647, %86 ]
  %93 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %81, i32 %91) #6
  %94 = extractvalue { i32, i1 } %93, 1
  %95 = extractvalue { i32, i1 } %93, 0
  %96 = select i1 %94, i32 %92, i32 %95, !prof !3
  %97 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %85, label %109, label %99

99:                                               ; preds = %90
  %100 = icmp sgt i32 %79, -1
  %101 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %98, i32 %79) #6
  %102 = extractvalue { i32, i1 } %101, 1
  %103 = extractvalue { i32, i1 } %101, 0
  %104 = select i1 %102, i32 2147483647, i32 %103
  %105 = select i1 %102, i32 -2147483648, i32 %103
  %106 = select i1 %100, i32 %105, i32 %104
  %107 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  br label %112

109:                                              ; preds = %90
  %110 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %111 = load i32, i32* %110, align 4
  br label %112

112:                                              ; preds = %99, %109
  %113 = phi i32 [ %78, %109 ], [ %108, %99 ]
  %114 = phi i32 [ %98, %109 ], [ %106, %99 ]
  %115 = phi i32 [ %111, %109 ], [ %78, %99 ]
  %116 = zext i32 %114 to i64
  %117 = shl nuw i64 %116, 32
  %118 = zext i32 %96 to i64
  %119 = or i64 %117, %118
  %120 = insertvalue { i64, i64 } undef, i64 %119, 0
  %121 = zext i32 %115 to i64
  %122 = shl nuw i64 %121, 32
  %123 = zext i32 %113 to i64
  %124 = or i64 %122, %123
  %125 = insertvalue { i64, i64 } %120, i64 %124, 1
  ret { i64, i64 } %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20InlineFlowBoxPainter18GetBorderPaintTypeERKNS_12PhysicalRectERNS_7IntRectEb(%"class.blink::InlineFlowBoxPainter"* nocapture readonly, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::IntRect"* nocapture dereferenceable(16), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sdiv i32 %6, 64
  %8 = srem i32 %6, 64
  %9 = add nsw i32 %8, 32
  %10 = ashr i32 %9, 6
  %11 = add nsw i32 %10, %7
  %12 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sdiv i32 %13, 64
  %15 = srem i32 %13, 64
  %16 = add nsw i32 %15, 32
  %17 = ashr i32 %16, 6
  %18 = add nsw i32 %17, %14
  %19 = zext i32 %18 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %11 to i64
  %22 = or i64 %20, %21
  %23 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 0
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %8, i32 %24) #6
  %28 = extractvalue { i32, i1 } %27, 1
  %29 = extractvalue { i32, i1 } %27, 0
  %30 = select i1 %28, i32 %26, i32 %29, !prof !3
  %31 = sdiv i32 %30, 64
  %32 = srem i32 %30, 64
  %33 = add nsw i32 %32, 32
  %34 = ashr i32 %33, 6
  %35 = sub nsw i32 %31, %10
  %36 = add nsw i32 %34, %35
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %4
  %39 = add i32 %24, 4
  %40 = icmp ugt i32 %39, 8
  br i1 %40, label %41, label %44, !prof !4

41:                                               ; preds = %38
  %42 = icmp sgt i32 %24, 0
  %43 = select i1 %42, i32 1, i32 -1
  br label %44

44:                                               ; preds = %41, %38, %4
  %45 = phi i32 [ %43, %41 ], [ %36, %4 ], [ 0, %38 ]
  %46 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %47) #6
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !3
  %54 = sdiv i32 %53, 64
  %55 = srem i32 %53, 64
  %56 = add nsw i32 %55, 32
  %57 = ashr i32 %56, 6
  %58 = sub nsw i32 %54, %17
  %59 = add nsw i32 %57, %58
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %44
  %62 = add i32 %47, 4
  %63 = icmp ugt i32 %62, 8
  br i1 %63, label %64, label %67, !prof !4

64:                                               ; preds = %61
  %65 = icmp sgt i32 %47, 0
  %66 = select i1 %65, i32 1, i32 -1
  br label %67

67:                                               ; preds = %44, %61, %64
  %68 = phi i32 [ %66, %64 ], [ %59, %44 ], [ 0, %61 ]
  %69 = zext i32 %68 to i64
  %70 = shl nuw i64 %69, 32
  %71 = zext i32 %45 to i64
  %72 = or i64 %70, %71
  %73 = bitcast %"class.blink::IntRect"* %2 to i64*
  store i64 %22, i64* %73, align 4
  %74 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1
  %75 = bitcast %"class.blink::IntSize"* %74 to i64*
  store i64 %72, i64* %75, align 4
  %76 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 1
  %77 = bitcast %"class.blink::InlineFlowBox"** %76 to %"class.blink::InlineBox"**
  %78 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %78, i64 0, i32 3
  %80 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %79, align 8
  %81 = icmp eq %"class.blink::InlineFlowBox"* %80, null
  br i1 %81, label %256, label %82

82:                                               ; preds = %67
  %83 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 0, i32 4
  %84 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %84, i64 0, i32 0, i32 7, i32 0, i32 0
  %86 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %86, i64 0, i32 27
  %88 = load i16, i16* %87, align 8
  %89 = and i16 %88, 224
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %86, i64 0, i32 24, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp ne i32 %93, 0
  %95 = and i16 %88, 240
  %96 = icmp ne i16 %95, 0
  %97 = and i1 %96, %94
  br i1 %97, label %135, label %98

98:                                               ; preds = %91, %82
  %99 = and i16 %88, 3584
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %108, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %86, i64 0, i32 25, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp ne i32 %103, 0
  %105 = and i16 %88, 3840
  %106 = icmp ne i16 %105, 0
  %107 = and i1 %106, %104
  br i1 %107, label %135, label %108

108:                                              ; preds = %101, %98
  %109 = icmp ult i16 %88, 8192
  br i1 %109, label %114, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %86, i64 0, i32 26, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %135

114:                                              ; preds = %110, %108
  %115 = and i16 %88, 14
  %116 = icmp eq i16 %115, 0
  br i1 %116, label %124, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %86, i64 0, i32 23, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp ne i32 %119, 0
  %121 = and i16 %88, 15
  %122 = icmp ne i16 %121, 0
  %123 = and i1 %122, %120
  br i1 %123, label %135, label %124

124:                                              ; preds = %117, %114
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %86, i64 0, i32 2, i32 0, i32 0, i32 0
  %126 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %126, i64 0, i32 2, i32 0, i32 0
  %128 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %127, align 8
  %129 = icmp eq %"class.blink::StyleImage"* %128, null
  br i1 %129, label %256, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %126, i64 0, i32 1
  %132 = load i8, i8* %131, align 4
  %133 = and i8 %132, 1
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %256, label %135

135:                                              ; preds = %130, %117, %101, %91, %110
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %86, i64 0, i32 2
  %137 = getelementptr inbounds %"class.blink::NinePieceImage", %"class.blink::NinePieceImage"* %136, i64 0, i32 0, i32 0, i32 0
  %138 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %138, i64 0, i32 2, i32 0, i32 0
  %140 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %139, align 8
  %141 = icmp eq %"class.blink::StyleImage"* %140, null
  br i1 %141, label %256, label %142

142:                                              ; preds = %135
  %143 = bitcast %"class.blink::StyleImage"* %140 to i1 (%"class.blink::StyleImage"*)***
  %144 = load i1 (%"class.blink::StyleImage"*)**, i1 (%"class.blink::StyleImage"*)*** %143, align 8
  %145 = getelementptr inbounds i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %144, i64 4
  %146 = load i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %145, align 8
  %147 = tail call zeroext i1 %146(%"class.blink::StyleImage"* nonnull %140) #6
  br i1 %147, label %148, label %256

148:                                              ; preds = %142
  %149 = load i1 (%"class.blink::StyleImage"*)**, i1 (%"class.blink::StyleImage"*)*** %143, align 8
  %150 = getelementptr inbounds i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %149, i64 5
  %151 = load i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %150, align 8
  %152 = tail call zeroext i1 %151(%"class.blink::StyleImage"* nonnull %140) #6
  %153 = and i1 %152, %3
  %154 = zext i1 %152 to i32
  br i1 %153, label %155, label %256

155:                                              ; preds = %148
  %156 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %83, align 8
  %157 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %76, align 8
  %158 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %157, i64 0, i32 6
  %159 = load i32, i32* %158, align 8
  %160 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %157, i64 0, i32 0, i32 4, i32 0
  %161 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %161, i64 0, i32 5, i32 0
  %163 = bitcast %"class.blink::ComputedStyle"** %162 to %"class.blink::ComputedStyleBase"**
  %164 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %164, i64 0, i32 9
  %166 = bitcast [20 x i8]* %165 to i160*
  %167 = load i160, i160* %166, align 8
  %168 = and i160 %167, 15211807202738752817960438464512
  %169 = icmp eq i160 %168, 0
  br i1 %169, label %170, label %175

170:                                              ; preds = %155
  %171 = shl i32 %159, 24
  %172 = and i32 %171, 16777216
  %173 = shl i32 %159, 7
  %174 = and i32 %173, 256
  br label %179

175:                                              ; preds = %155
  %176 = and i32 %159, 1
  %177 = shl i32 %159, 15
  %178 = and i32 %177, 65536
  br label %179

179:                                              ; preds = %170, %175
  %180 = phi i32 [ 1, %170 ], [ %176, %175 ]
  %181 = phi i32 [ %174, %170 ], [ 256, %175 ]
  %182 = phi i32 [ 65536, %170 ], [ %178, %175 ]
  %183 = phi i32 [ %172, %170 ], [ 16777216, %175 ]
  %184 = or i32 %181, %180
  %185 = or i32 %184, %182
  %186 = or i32 %185, %183
  %187 = tail call { i64, i64 } @_ZN5blink20InlineBoxPainterBase30ClipRectForNinePieceImageStripERKNS_13ComputedStyleENS_16PhysicalBoxSidesERKNS_14NinePieceImageERKNS_12PhysicalRectE(%"class.blink::ComputedStyle"* dereferenceable(104) %156, i32 %186, %"class.blink::NinePieceImage"* dereferenceable(8) %136, %"struct.blink::PhysicalRect"* dereferenceable(16) %1) #6
  %188 = extractvalue { i64, i64 } %187, 0
  %189 = trunc i64 %188 to i32
  %190 = lshr i64 %188, 32
  %191 = trunc i64 %190 to i32
  %192 = extractvalue { i64, i64 } %187, 1
  %193 = sdiv i32 %189, 64
  %194 = srem i32 %189, 64
  %195 = add nsw i32 %194, 32
  %196 = ashr i32 %195, 6
  %197 = add nsw i32 %196, %193
  %198 = sdiv i32 %191, 64
  %199 = srem i32 %191, 64
  %200 = add nsw i32 %199, 32
  %201 = ashr i32 %200, 6
  %202 = add nsw i32 %201, %198
  %203 = zext i32 %202 to i64
  %204 = shl nuw i64 %203, 32
  %205 = zext i32 %197 to i64
  %206 = or i64 %204, %205
  %207 = trunc i64 %192 to i32
  %208 = icmp slt i32 %207, 0
  %209 = select i1 %208, i32 -2147483648, i32 2147483647
  %210 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %194, i32 %207) #6
  %211 = extractvalue { i32, i1 } %210, 1
  %212 = extractvalue { i32, i1 } %210, 0
  %213 = select i1 %211, i32 %209, i32 %212, !prof !3
  %214 = sdiv i32 %213, 64
  %215 = srem i32 %213, 64
  %216 = add nsw i32 %215, 32
  %217 = ashr i32 %216, 6
  %218 = sub nsw i32 %214, %196
  %219 = add nsw i32 %217, %218
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %227

221:                                              ; preds = %179
  %222 = add i32 %207, 4
  %223 = icmp ugt i32 %222, 8
  br i1 %223, label %224, label %227, !prof !4

224:                                              ; preds = %221
  %225 = icmp sgt i32 %207, 0
  %226 = select i1 %225, i32 1, i32 -1
  br label %227

227:                                              ; preds = %224, %221, %179
  %228 = phi i32 [ %226, %224 ], [ %219, %179 ], [ 0, %221 ]
  %229 = lshr i64 %192, 32
  %230 = trunc i64 %229 to i32
  %231 = icmp slt i32 %230, 0
  %232 = select i1 %231, i32 -2147483648, i32 2147483647
  %233 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %199, i32 %230) #6
  %234 = extractvalue { i32, i1 } %233, 1
  %235 = extractvalue { i32, i1 } %233, 0
  %236 = select i1 %234, i32 %232, i32 %235, !prof !3
  %237 = sdiv i32 %236, 64
  %238 = srem i32 %236, 64
  %239 = add nsw i32 %238, 32
  %240 = ashr i32 %239, 6
  %241 = sub nsw i32 %237, %201
  %242 = add nsw i32 %240, %241
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %250

244:                                              ; preds = %227
  %245 = add i32 %230, 4
  %246 = icmp ugt i32 %245, 8
  br i1 %246, label %247, label %250, !prof !4

247:                                              ; preds = %244
  %248 = icmp sgt i32 %230, 0
  %249 = select i1 %248, i32 1, i32 -1
  br label %250

250:                                              ; preds = %227, %244, %247
  %251 = phi i32 [ %249, %247 ], [ %242, %227 ], [ 0, %244 ]
  %252 = zext i32 %251 to i64
  %253 = shl nuw i64 %252, 32
  %254 = zext i32 %228 to i64
  %255 = or i64 %253, %254
  store i64 %206, i64* %73, align 4
  store i64 %255, i64* %75, align 4
  br label %256

256:                                              ; preds = %148, %130, %135, %124, %250, %142, %67
  %257 = phi i32 [ 0, %67 ], [ 0, %130 ], [ 2, %250 ], [ %154, %148 ], [ 1, %142 ], [ 0, %124 ], [ 1, %135 ]
  ret i32 %257
}

declare { i64, i64 } @_ZN5blink20InlineBoxPainterBase30ClipRectForNinePieceImageStripERKNS_13ComputedStyleENS_16PhysicalBoxSidesERKNS_14NinePieceImageERKNS_12PhysicalRectE(%"class.blink::ComputedStyle"* dereferenceable(104), i32, %"class.blink::NinePieceImage"* dereferenceable(8), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineFlowBoxPainter17RecordHitTestDataERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::InlineFlowBoxPainter"* nocapture readonly, %"struct.blink::PaintInfo"* nocapture readonly dereferenceable(56), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutRect", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.blink::IntRect"*
  %7 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 1
  %8 = bitcast %"class.blink::InlineFlowBox"** %7 to %"class.blink::InlineBox"**
  %9 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %9, i64 0, i32 4, i32 0
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 0
  %13 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %13, i64 0, i32 1
  %15 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %14, align 8
  %16 = bitcast %"class.blink::InlineBox"* %9 to %"class.blink::DisplayItemClient"*
  %17 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #6
  %18 = tail call { i64, i64 } @_ZNK5blink20InlineFlowBoxPainter42FrameRectClampedToLineTopAndBottomIfNeededEv(%"class.blink::InlineFlowBoxPainter"* %0) #6
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  %21 = bitcast %"class.blink::LayoutRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #6
  %22 = bitcast %"class.blink::LayoutRect"* %4 to i64*
  store i64 %19, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 1
  %24 = bitcast %"class.blink::LayoutSize"* %23 to i64*
  store i64 %20, i64* %24, align 8
  %25 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %8, align 8
  call void @_ZNK5blink9InlineBox18FlipForWritingModeERNS_10LayoutRectE(%"class.blink::InlineBox"* %25, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %4) #6
  %26 = load i64, i64* %22, align 8
  %27 = lshr i64 %26, 32
  %28 = trunc i64 %27 to i32
  %29 = trunc i64 %26 to i32
  %30 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %29, 0
  %33 = select i1 %32, i32 -2147483648, i32 2147483647
  %34 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %31, i32 %29) #6
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = select i1 %35, i32 %33, i32 %36, !prof !3
  %38 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %28, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %28) #6
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #6
  %46 = sdiv i32 %37, 64
  %47 = srem i32 %37, 64
  %48 = add nsw i32 %47, 32
  %49 = ashr i32 %48, 6
  %50 = add nsw i32 %49, %46
  %51 = sdiv i32 %45, 64
  %52 = srem i32 %45, 64
  %53 = add nsw i32 %52, 32
  %54 = ashr i32 %53, 6
  %55 = add nsw i32 %54, %51
  %56 = zext i32 %55 to i64
  %57 = shl nuw i64 %56, 32
  %58 = zext i32 %50 to i64
  %59 = or i64 %57, %58
  %60 = trunc i64 %20 to i32
  %61 = icmp slt i32 %60, 0
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 %60) #6
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = select i1 %64, i32 %62, i32 %65, !prof !3
  %67 = sdiv i32 %66, 64
  %68 = srem i32 %66, 64
  %69 = add nsw i32 %68, 32
  %70 = ashr i32 %69, 6
  %71 = sub nsw i32 %67, %49
  %72 = add nsw i32 %70, %71
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %3
  %75 = add i32 %60, 4
  %76 = icmp ugt i32 %75, 8
  br i1 %76, label %77, label %80, !prof !4

77:                                               ; preds = %74
  %78 = icmp sgt i32 %60, 0
  %79 = select i1 %78, i32 1, i32 -1
  br label %80

80:                                               ; preds = %77, %74, %3
  %81 = phi i32 [ %79, %77 ], [ %72, %3 ], [ 0, %74 ]
  %82 = lshr i64 %20, 32
  %83 = trunc i64 %82 to i32
  %84 = icmp slt i32 %83, 0
  %85 = select i1 %84, i32 -2147483648, i32 2147483647
  %86 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %52, i32 %83) #6
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 %85, i32 %88, !prof !3
  %90 = sdiv i32 %89, 64
  %91 = srem i32 %89, 64
  %92 = add nsw i32 %91, 32
  %93 = ashr i32 %92, 6
  %94 = sub nsw i32 %90, %54
  %95 = add nsw i32 %93, %94
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %103

97:                                               ; preds = %80
  %98 = add i32 %83, 4
  %99 = icmp ugt i32 %98, 8
  br i1 %99, label %100, label %103, !prof !4

100:                                              ; preds = %97
  %101 = icmp sgt i32 %83, 0
  %102 = select i1 %101, i32 1, i32 -1
  br label %103

103:                                              ; preds = %80, %97, %100
  %104 = phi i32 [ %102, %100 ], [ %95, %80 ], [ 0, %97 ]
  %105 = zext i32 %104 to i64
  %106 = shl nuw i64 %105, 32
  %107 = zext i32 %81 to i64
  %108 = or i64 %106, %107
  %109 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %59, i64* %109, align 8
  %110 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  store i64 %108, i64* %110, align 8
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 4
  %112 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %111 to i96*
  %113 = load i96, i96* %112, align 4
  %114 = and i96 %113, 144115188075855872
  %115 = icmp eq i96 %114, 0
  br i1 %115, label %116, label %127

116:                                              ; preds = %103
  %117 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 5, i32 0
  %118 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %118, i64 0, i32 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 2, i32 0, i32 0
  %122 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %122, i64 0, i32 18
  %124 = load i8, i8* %123, align 1
  %125 = and i8 %124, 127
  %126 = zext i8 %125 to i32
  br label %127

127:                                              ; preds = %103, %116
  %128 = phi i32 [ %126, %116 ], [ 0, %103 ]
  %129 = and i96 %113, 1152921504606846976
  %130 = icmp ne i96 %129, 0
  call void @_ZN5blink15PaintController17RecordHitTestDataERKNS_17DisplayItemClientERKNS_7IntRectEN2cc11TouchActionEb(%"class.blink::PaintController"* %15, %"class.blink::DisplayItemClient"* dereferenceable(16) %16, %"class.blink::IntRect"* nonnull dereferenceable(16) %6, i32 %128, i1 zeroext %130) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink20InlineFlowBoxPainter17AdjustedFrameRectERKNS_14PhysicalOffsetE(%"class.blink::InlineFlowBoxPainter"* nocapture readonly, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutRect", align 8
  %4 = tail call { i64, i64 } @_ZNK5blink20InlineFlowBoxPainter42FrameRectClampedToLineTopAndBottomIfNeededEv(%"class.blink::InlineFlowBoxPainter"* %0)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  %7 = bitcast %"class.blink::LayoutRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #6
  %8 = bitcast %"class.blink::LayoutRect"* %3 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %3, i64 0, i32 1
  %10 = bitcast %"class.blink::LayoutSize"* %9 to i64*
  store i64 %6, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 1
  %12 = bitcast %"class.blink::InlineFlowBox"** %11 to %"class.blink::InlineBox"**
  %13 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %12, align 8
  call void @_ZNK5blink9InlineBox18FlipForWritingModeERNS_10LayoutRectE(%"class.blink::InlineBox"* %13, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %3) #6
  %14 = load i64, i64* %8, align 8
  %15 = lshr i64 %14, 32
  %16 = trunc i64 %15 to i32
  %17 = trunc i64 %14 to i32
  %18 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %17, 0
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %17) #6
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !3
  %26 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %16, 0
  %29 = select i1 %28, i32 -2147483648, i32 2147483647
  %30 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %16) #6
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !3
  %34 = zext i32 %33 to i64
  %35 = shl nuw i64 %34, 32
  %36 = zext i32 %25 to i64
  %37 = or i64 %35, %36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #6
  %38 = insertvalue { i64, i64 } undef, i64 %37, 0
  %39 = insertvalue { i64, i64 } %38, i64 %6, 1
  ret { i64, i64 } %39
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink20InlineFlowBoxPainter10VisualRectERKNS_12PhysicalRectE(%"class.blink::InlineFlowBoxPainter"* nocapture readonly, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::PhysicalRect", align 4
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast %"struct.blink::PhysicalRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 1, i32 0
  %10 = bitcast %"struct.blink::PhysicalRect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 1
  %12 = bitcast %"class.blink::InlineFlowBox"** %11 to %"class.blink::InlineBox"**
  %13 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %13, i64 0, i32 4, i32 0
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 5, i32 0
  %21 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %20, align 8
  %22 = icmp eq %"class.blink::ShadowList"* %21, null
  br i1 %22, label %23, label %65

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 7, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %25, i64 0, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %28, align 8
  %30 = icmp eq %"class.blink::StyleImage"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %27, i64 0, i32 5
  %33 = tail call zeroext i1 @_ZNK5blink20BorderImageLengthBox7NonZeroEv(%"class.blink::BorderImageLengthBox"* %32) #6
  br i1 %33, label %65, label %34

34:                                               ; preds = %31
  %35 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  br label %36

36:                                               ; preds = %34, %23
  %37 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %35, %34 ], [ %19, %23 ]
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %39, i64 0, i32 13
  %41 = bitcast [3 x i8]* %40 to i24*
  %42 = load i24, i24* %41, align 8
  %43 = and i24 %42, 1920
  %44 = icmp eq i24 %43, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %39, i64 0, i32 8, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = sitofp i32 %47 to float
  %49 = fmul float %48, 1.562500e-02
  %50 = fcmp ogt float %49, 0.000000e+00
  %51 = and i24 %42, 1792
  %52 = icmp ne i24 %51, 0
  %53 = and i1 %52, %50
  br i1 %53, label %65, label %54

54:                                               ; preds = %45, %36
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %37, i64 0, i32 3, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %56, i64 0, i32 14, i32 0, i32 0, i32 0
  %58 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %58, i64 0, i32 2, i32 0, i32 0
  %60 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %59, align 8
  %61 = icmp eq %"class.blink::StyleImage"* %60, null
  br i1 %61, label %73, label %62

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %58, i64 0, i32 5
  %64 = tail call zeroext i1 @_ZNK5blink20BorderImageLengthBox7NonZeroEv(%"class.blink::BorderImageLengthBox"* %63) #6
  br i1 %64, label %65, label %73

65:                                               ; preds = %45, %2, %31, %62
  %66 = bitcast { i64, i64 }* %4 to %"class.blink::LayoutRectOutsets"*
  %67 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #6
  %68 = tail call { i64, i64 } @_ZNK5blink13ComputedStyle20BoxDecorationOutsetsEv(%"class.blink::ComputedStyle"* %17) #6
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %70 = extractvalue { i64, i64 } %68, 0
  store i64 %70, i64* %69, align 8
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %72 = extractvalue { i64, i64 } %68, 1
  store i64 %72, i64* %71, align 8
  call void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"* nonnull %3, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %66) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #6
  br label %73

73:                                               ; preds = %54, %65, %62
  %74 = load i32, i32* %6, align 4
  %75 = icmp slt i32 %74, -2147483584
  %76 = ashr i32 %74, 6
  %77 = select i1 %75, i32 -33554432, i32 %76, !prof !3
  %78 = load i32, i32* %7, align 4
  %79 = icmp slt i32 %78, -2147483584
  %80 = ashr i32 %78, 6
  %81 = select i1 %79, i32 -33554432, i32 %80, !prof !3
  %82 = zext i32 %81 to i64
  %83 = shl nuw i64 %82, 32
  %84 = load i32, i32* %8, align 4
  %85 = icmp slt i32 %84, 0
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %74, i32 %84) #6
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89, !prof !3
  %91 = load i32, i32* %9, align 4
  %92 = icmp slt i32 %91, 0
  %93 = select i1 %92, i32 -2147483648, i32 2147483647
  %94 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %78, i32 %91) #6
  %95 = extractvalue { i32, i1 } %94, 1
  %96 = extractvalue { i32, i1 } %94, 0
  %97 = select i1 %95, i32 %93, i32 %96, !prof !3
  %98 = icmp sgt i32 %90, 2147483583
  br i1 %98, label %106, label %99, !prof !3

99:                                               ; preds = %73
  %100 = icmp sgt i32 %90, -1
  br i1 %100, label %101, label %104

101:                                              ; preds = %99
  %102 = add nuw nsw i32 %90, 63
  %103 = sdiv i32 %102, 64
  br label %106

104:                                              ; preds = %99
  %105 = sdiv i32 %90, 64
  br label %106

106:                                              ; preds = %104, %101, %73
  %107 = phi i32 [ %103, %101 ], [ %105, %104 ], [ 33554431, %73 ]
  %108 = icmp sgt i32 %97, 2147483583
  br i1 %108, label %116, label %109, !prof !3

109:                                              ; preds = %106
  %110 = icmp sgt i32 %97, -1
  br i1 %110, label %111, label %114

111:                                              ; preds = %109
  %112 = add nuw nsw i32 %97, 63
  %113 = sdiv i32 %112, 64
  br label %116

114:                                              ; preds = %109
  %115 = sdiv i32 %97, 64
  br label %116

116:                                              ; preds = %106, %111, %114
  %117 = phi i32 [ %113, %111 ], [ %115, %114 ], [ 33554431, %106 ]
  %118 = sub nsw i32 %107, %77
  %119 = sub nsw i32 %117, %81
  %120 = zext i32 %119 to i64
  %121 = shl nuw i64 %120, 32
  %122 = zext i32 %118 to i64
  %123 = or i64 %121, %122
  %124 = zext i32 %77 to i64
  %125 = or i64 %83, %124
  %126 = insertvalue { i64, i64 } undef, i64 %125, 0
  %127 = insertvalue { i64, i64 } %126, i64 %123, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #6
  ret { i64, i64 } %127
}

declare void @_ZN5blink15DrawingRecorderC1ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE(%"class.blink::DrawingRecorder"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"class.blink::DisplayItemClient"* dereferenceable(16), i32, %"class.blink::IntRect"* dereferenceable(16)) unnamed_addr #3

declare void @_ZN5blink23BackgroundImageGeometryC1ERKNS_20LayoutBoxModelObjectE(%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutBoxModelObject"* dereferenceable(88)) unnamed_addr #3

declare void @_ZN5blink21BoxModelObjectPainterC1ERKNS_20LayoutBoxModelObjectEPKNS_13InlineFlowBoxE(%"class.blink::BoxModelObjectPainter"*, %"class.blink::LayoutBoxModelObject"* dereferenceable(88), %"class.blink::InlineFlowBox"*) unnamed_addr #3

declare void @_ZN5blink20InlineBoxPainterBase28PaintBoxDecorationBackgroundERNS_14BoxPainterBaseERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_12PhysicalRectENS_23BackgroundImageGeometryEbNS_16PhysicalBoxSidesE(%"class.blink::InlineBoxPainterBase"*, %"class.blink::BoxPainterBase"* dereferenceable(32), %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::BackgroundImageGeometry"* byval(%"class.blink::BackgroundImageGeometry") align 8, i1 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15DrawingRecorderD1Ev(%"class.blink::DrawingRecorder"*) unnamed_addr #4

declare void @_ZN5blink20InlineBoxPainterBase9PaintMaskERNS_14BoxPainterBaseERKNS_9PaintInfoERKNS_12PhysicalRectERNS_23BackgroundImageGeometryEbNS_16PhysicalBoxSidesE(%"class.blink::InlineBoxPainterBase"*, %"class.blink::BoxPainterBase"* dereferenceable(32), %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::BackgroundImageGeometry"* dereferenceable(96), i1 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink20InlineFlowBoxPainter42FrameRectClampedToLineTopAndBottomIfNeededEv(%"class.blink::InlineFlowBoxPainter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 1
  %3 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %2, align 8
  %4 = tail call { i64, i64 } @_ZNK5blink13InlineFlowBox9FrameRectEv(%"class.blink::InlineFlowBox"* %3) #6
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = trunc i64 %5 to i32
  %7 = lshr i64 %5, 32
  %8 = trunc i64 %7 to i32
  %9 = extractvalue { i64, i64 } %4, 1
  %10 = trunc i64 %9 to i32
  %11 = lshr i64 %9, 32
  %12 = trunc i64 %11 to i32
  %13 = bitcast %"class.blink::InlineFlowBox"** %2 to %"class.blink::InlineBox"**
  %14 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %14, i64 0, i32 4, i32 0
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %20, label %27

20:                                               ; preds = %1, %20
  %21 = phi %"class.blink::LayoutObject"* [ %23, %20 ], [ %16, %1 ]
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 7
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 6, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %20, label %27

27:                                               ; preds = %20, %1
  %28 = phi %"class.blink::Node"* [ %18, %1 ], [ %25, %20 ]
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %32, i64 0, i32 33
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 2
  br i1 %35, label %120, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %14, i64 1, i32 4
  %38 = bitcast %"class.blink::LineLayoutItem"* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 4
  %41 = icmp ne i32 %40, 0
  %42 = and i32 %39, 24
  %43 = icmp eq i32 %42, 24
  %44 = or i1 %41, %43
  br i1 %44, label %120, label %45

45:                                               ; preds = %36
  %46 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %14) #6
  %47 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %13, align 8
  %48 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %47, i64 0, i32 7, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 2048
  %51 = icmp ne i32 %50, 0
  %52 = select i1 %51, i32 %8, i32 %6
  %53 = select i1 %51, i32 %12, i32 %10
  %54 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %46, i64 0, i32 6, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %53, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %52, i32 %53) #6
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !3
  %62 = icmp slt i32 %61, %55
  %63 = select i1 %62, i32 %61, i32 %55
  %64 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %46, i64 0, i32 5, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp slt i32 %65, %52
  %67 = select i1 %66, i32 %52, i32 %65
  %68 = icmp sgt i32 %67, -1
  %69 = select i1 %68, i32 -2147483648, i32 2147483647
  %70 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %63, i32 %67) #6
  %71 = extractvalue { i32, i1 } %70, 1
  %72 = extractvalue { i32, i1 } %70, 0
  %73 = select i1 %71, i32 %69, i32 %72, !prof !3
  %74 = select i1 %51, i32 %6, i32 %67
  %75 = select i1 %51, i32 %67, i32 %8
  %76 = select i1 %51, i32 %10, i32 %73
  %77 = select i1 %51, i32 %73, i32 %12
  %78 = bitcast %"class.blink::InlineBox"* %47 to %"class.blink::InlineFlowBox"*
  %79 = tail call { i64, i64 } @_ZNK5blink13InlineFlowBox9FrameRectEv(%"class.blink::InlineFlowBox"* %78) #6
  %80 = extractvalue { i64, i64 } %79, 0
  %81 = extractvalue { i64, i64 } %79, 1
  %82 = trunc i64 %80 to i32
  %83 = lshr i64 %80, 32
  %84 = trunc i64 %83 to i32
  %85 = icmp eq i32 %74, %82
  %86 = icmp eq i32 %75, %84
  %87 = and i1 %85, %86
  %88 = trunc i64 %81 to i32
  %89 = icmp eq i32 %76, %88
  %90 = and i1 %89, %87
  br i1 %90, label %91, label %95

91:                                               ; preds = %45
  %92 = lshr i64 %81, 32
  %93 = trunc i64 %92 to i32
  %94 = icmp eq i32 %77, %93
  br i1 %94, label %120, label %95

95:                                               ; preds = %91, %45
  %96 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %13, align 8
  %97 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %96, i64 0, i32 4, i32 0
  %98 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %98, i64 0, i32 6, i32 0, i32 0
  %100 = load %"class.blink::Node"*, %"class.blink::Node"** %99, align 8
  %101 = icmp eq %"class.blink::Node"* %100, null
  br i1 %101, label %102, label %109

102:                                              ; preds = %95, %102
  %103 = phi %"class.blink::LayoutObject"* [ %105, %102 ], [ %98, %95 ]
  %104 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %103, i64 0, i32 7
  %105 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %105, i64 0, i32 6, i32 0, i32 0
  %107 = load %"class.blink::Node"*, %"class.blink::Node"** %106, align 8
  %108 = icmp eq %"class.blink::Node"* %107, null
  br i1 %108, label %102, label %109

109:                                              ; preds = %102, %95
  %110 = phi %"class.blink::Node"* [ %100, %95 ], [ %107, %102 ]
  %111 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %110, i64 0, i32 3, i32 0, i32 0
  %112 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %112, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::Document"*, %"class.blink::Document"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %114, i64 0, i32 2
  %116 = bitcast %"class.blink::UseCounter"* %115 to void (%"class.blink::UseCounter"*, i32)***
  %117 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %117, i64 3
  %119 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %118, align 8
  tail call void %119(%"class.blink::UseCounter"* %115, i32 2730) #6
  br label %120

120:                                              ; preds = %109, %91, %36, %27
  %121 = phi i32 [ %6, %27 ], [ %6, %36 ], [ %74, %91 ], [ %74, %109 ]
  %122 = phi i32 [ %8, %27 ], [ %8, %36 ], [ %75, %91 ], [ %75, %109 ]
  %123 = phi i32 [ %10, %27 ], [ %10, %36 ], [ %76, %91 ], [ %76, %109 ]
  %124 = phi i32 [ %12, %27 ], [ %12, %36 ], [ %77, %91 ], [ %77, %109 ]
  %125 = zext i32 %122 to i64
  %126 = shl nuw i64 %125, 32
  %127 = zext i32 %121 to i64
  %128 = or i64 %126, %127
  %129 = insertvalue { i64, i64 } undef, i64 %128, 0
  %130 = zext i32 %124 to i64
  %131 = shl nuw i64 %130, 32
  %132 = zext i32 %123 to i64
  %133 = or i64 %131, %132
  %134 = insertvalue { i64, i64 } %129, i64 %133, 1
  ret { i64, i64 } %134
}

declare { i64, i64 } @_ZNK5blink13InlineFlowBox9FrameRectEv(%"class.blink::InlineFlowBox"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"*) local_unnamed_addr #3

declare void @_ZNK5blink9InlineBox18FlipForWritingModeERNS_10LayoutRectE(%"class.blink::InlineBox"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"*, %"class.blink::LayoutRectOutsets"* dereferenceable(16)) local_unnamed_addr #3

declare { i64, i64 } @_ZNK5blink13ComputedStyle20BoxDecorationOutsetsEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

declare void @_ZN5blink15PaintController17RecordHitTestDataERKNS_17DisplayItemClientERKNS_7IntRectEN2cc11TouchActionEb(%"class.blink::PaintController"*, %"class.blink::DisplayItemClient"* dereferenceable(16), %"class.blink::IntRect"* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineFlowBoxPainter20PaintNormalBoxShadowERKNS_9PaintInfoERKNS_13ComputedStyleERKNS_12PhysicalRectE(%"class.blink::InlineFlowBoxPainter"* nocapture readonly, %"struct.blink::PaintInfo"* dereferenceable(56), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 1
  %6 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %6, i64 0, i32 0, i32 4, i32 0
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 5, i32 0
  %12 = bitcast %"class.blink::ComputedStyle"** %11 to %"class.blink::ComputedStyleBase"**
  %13 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %13, i64 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = and i160 %16, 15211807202738752817960438464512
  %18 = icmp eq i160 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %4
  %20 = shl i32 %8, 24
  %21 = and i32 %20, 16777216
  %22 = shl i32 %8, 7
  %23 = and i32 %22, 256
  br label %28

24:                                               ; preds = %4
  %25 = and i32 %8, 1
  %26 = shl i32 %8, 15
  %27 = and i32 %26, 65536
  br label %28

28:                                               ; preds = %19, %24
  %29 = phi i32 [ 1, %19 ], [ %25, %24 ]
  %30 = phi i32 [ %23, %19 ], [ 256, %24 ]
  %31 = phi i32 [ 65536, %19 ], [ %27, %24 ]
  %32 = phi i32 [ %21, %19 ], [ 16777216, %24 ]
  %33 = or i32 %30, %29
  %34 = or i32 %33, %31
  %35 = or i32 %34, %32
  tail call void @_ZN5blink14BoxPainterBase20PaintNormalBoxShadowERKNS_9PaintInfoERKNS_12PhysicalRectERKNS_13ComputedStyleENS_16PhysicalBoxSidesEb(%"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %3, %"class.blink::ComputedStyle"* dereferenceable(104) %2, i32 %35, i1 zeroext true) #6
  ret void
}

declare void @_ZN5blink14BoxPainterBase20PaintNormalBoxShadowERKNS_9PaintInfoERKNS_12PhysicalRectERKNS_13ComputedStyleENS_16PhysicalBoxSidesEb(%"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineFlowBoxPainter19PaintInsetBoxShadowERKNS_9PaintInfoERKNS_13ComputedStyleERKNS_12PhysicalRectE(%"class.blink::InlineFlowBoxPainter"* nocapture readonly, %"struct.blink::PaintInfo"* dereferenceable(56), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InlineFlowBoxPainter", %"class.blink::InlineFlowBoxPainter"* %0, i64 0, i32 1
  %6 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %6, i64 0, i32 0, i32 4, i32 0
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 5, i32 0
  %12 = bitcast %"class.blink::ComputedStyle"** %11 to %"class.blink::ComputedStyleBase"**
  %13 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %13, i64 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = and i160 %16, 15211807202738752817960438464512
  %18 = icmp eq i160 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %4
  %20 = shl i32 %8, 24
  %21 = and i32 %20, 16777216
  %22 = shl i32 %8, 7
  %23 = and i32 %22, 256
  br label %28

24:                                               ; preds = %4
  %25 = and i32 %8, 1
  %26 = shl i32 %8, 15
  %27 = and i32 %26, 65536
  br label %28

28:                                               ; preds = %19, %24
  %29 = phi i32 [ 1, %19 ], [ %25, %24 ]
  %30 = phi i32 [ %23, %19 ], [ 256, %24 ]
  %31 = phi i32 [ 65536, %19 ], [ %27, %24 ]
  %32 = phi i32 [ %21, %19 ], [ 16777216, %24 ]
  %33 = or i32 %30, %29
  %34 = or i32 %33, %31
  %35 = or i32 %34, %32
  tail call void @_ZN5blink14BoxPainterBase33PaintInsetBoxShadowWithBorderRectERKNS_9PaintInfoERKNS_12PhysicalRectERKNS_13ComputedStyleENS_16PhysicalBoxSidesE(%"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %3, %"class.blink::ComputedStyle"* dereferenceable(104) %2, i32 %35) #6
  ret void
}

declare void @_ZN5blink14BoxPainterBase33PaintInsetBoxShadowWithBorderRectERKNS_9PaintInfoERKNS_12PhysicalRectERKNS_13ComputedStyleENS_16PhysicalBoxSidesE(%"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #3

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare zeroext i1 @_ZNK5blink8CullRect10IntersectsERKNS_7IntRectE(%"class.blink::CullRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #5

declare zeroext i1 @_ZNK5blink13ComputedStyleeqERKS0_(%"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink15PaintController23UseCachedItemIfPossibleERKNS_17DisplayItemClientENS_11DisplayItem4TypeE(%"class.blink::PaintController"*, %"class.blink::DisplayItemClient"* dereferenceable(16), i32) local_unnamed_addr #3

declare void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"*) local_unnamed_addr #3

declare void @_ZN5blink15DrawingRecorderC2ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE(%"class.blink::DrawingRecorder"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"class.blink::DisplayItemClient"* dereferenceable(16), i32, %"class.blink::IntRect"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20BorderImageLengthBox7NonZeroEv(%"class.blink::BorderImageLengthBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %17

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 8
  br i1 %8, label %103, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 0, i32 0, i32 3
  %11 = load i8, i8* %10, align 2, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::BorderImageLengthBox"* %0 to float*
  %15 = load float, float* %14, align 4
  %16 = fcmp oeq float %15, 0.000000e+00
  br i1 %16, label %25, label %103

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 0, i32 1
  %19 = load double, double* %18, align 8
  %20 = fcmp oeq double %19, 0.000000e+00
  br i1 %20, label %25, label %103

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %103

25:                                               ; preds = %13, %17, %21
  %26 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 1, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 1, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 1, i32 0, i32 3
  %36 = load i8, i8* %35, align 2, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.blink::BorderImageLength"* %26 to float*
  %40 = load float, float* %39, align 4
  %41 = fcmp oeq float %40, 0.000000e+00
  br i1 %41, label %50, label %103

42:                                               ; preds = %25
  %43 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 1, i32 1
  %44 = load double, double* %43, align 8
  %45 = fcmp oeq double %44, 0.000000e+00
  br i1 %45, label %50, label %103

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %26, i64 0, i32 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %103

50:                                               ; preds = %38, %42, %46
  %51 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 2
  %52 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 2, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 2, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %103, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 2, i32 0, i32 3
  %61 = load i8, i8* %60, align 2, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.blink::BorderImageLength"* %51 to float*
  %65 = load float, float* %64, align 4
  %66 = fcmp oeq float %65, 0.000000e+00
  br i1 %66, label %75, label %103

67:                                               ; preds = %50
  %68 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 2, i32 1
  %69 = load double, double* %68, align 8
  %70 = fcmp oeq double %69, 0.000000e+00
  br i1 %70, label %75, label %103

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %51, i64 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %103

75:                                               ; preds = %63, %67, %71
  %76 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 3
  %77 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 3, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %96

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 3, i32 0, i32 2
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 8
  br i1 %83, label %100, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 3, i32 0, i32 3
  %86 = load i8, i8* %85, align 2, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = bitcast %"class.blink::BorderImageLength"* %76 to float*
  %90 = load float, float* %89, align 4
  %91 = fcmp oeq float %90, 0.000000e+00
  br label %100

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %76, i64 0, i32 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br label %100

96:                                               ; preds = %75
  %97 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 3, i32 1
  %98 = load double, double* %97, align 8
  %99 = fcmp oeq double %98, 0.000000e+00
  br label %100

100:                                              ; preds = %80, %88, %92, %96
  %101 = phi i1 [ %99, %96 ], [ false, %80 ], [ %91, %88 ], [ %95, %92 ]
  %102 = xor i1 %101, true
  br label %103

103:                                              ; preds = %55, %30, %5, %63, %67, %38, %42, %13, %17, %100, %71, %46, %21
  %104 = phi i1 [ true, %71 ], [ true, %46 ], [ true, %21 ], [ %102, %100 ], [ true, %17 ], [ true, %13 ], [ true, %42 ], [ true, %38 ], [ true, %67 ], [ true, %63 ], [ true, %5 ], [ true, %30 ], [ true, %55 ]
  ret i1 %104
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 4001, i32 4000000}
