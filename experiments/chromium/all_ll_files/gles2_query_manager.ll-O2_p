; ModuleID = '../../gpu/command_buffer/service/gles2_query_manager.cc'
source_filename = "../../gpu/command_buffer/service/gles2_query_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.gpu::gles2::GLES2QueryManager::GLES2Query" = type { %"class.gpu::QueryManager::Query", %"class.gpu::gles2::GLES2QueryManager"* }
%"class.gpu::QueryManager::Query" = type { i32 (...)**, %"class.base::RefCounted", %"class.gpu::QueryManager"*, i32, %class.scoped_refptr.42, %"struct.gpu::QuerySync"*, i32, i32, i8, %"class.std::__1::vector" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gpu::QueryManager" = type { i32 (...)**, i32, [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::unordered_set", %"class.std::__1::map", %"class.base::circular_deque" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.14" }
%"class.std::__1::__hash_table.14" = type <{ %"class.std::__1::unique_ptr.15", %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.32", [4 x i8] }>
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::__hash_node_base.18"** }
%"struct.std::__1::__hash_node_base.18" = type { %"struct.std::__1::__hash_node_base.18"* }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__bucket_list_deallocator.20" }
%"class.std::__1::__bucket_list_deallocator.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base.18" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %class.scoped_refptr*, i64 }
%class.scoped_refptr = type { %"class.gpu::QueryManager::Query"* }
%class.scoped_refptr.42 = type { %"class.gpu::Buffer"* }
%"class.gpu::Buffer" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr.44", i8*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.gpu::BufferBacking"* }
%"class.gpu::BufferBacking" = type { i32 (...)** }
%"struct.gpu::QuerySync" = type <{ i32, i64 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.50" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.48 }
%class.scoped_refptr.48 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.49", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.49" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.base::OnceCallback"* }
%"class.gpu::gles2::GLES2QueryManager" = type { %"class.gpu::QueryManager", %"class.gpu::gles2::GLES2Decoder"*, i8, i8, i8, i32, i32, i32, %class.scoped_refptr.64 }
%"class.gpu::gles2::GLES2Decoder" = type { %"class.gpu::CommonDecoder", %"class.gpu::DecoderContext", i8, i8, i8, %"class.gpu::gles2::Outputter"* }
%"class.gpu::CommonDecoder" = type { i32 (...)**, %"class.gpu::CommandBufferServiceBase"*, %"class.gpu::DecoderClient"*, i64, %"class.std::__1::map.55" }
%"class.gpu::CommandBufferServiceBase" = type opaque
%"class.gpu::DecoderClient" = type opaque
%"class.std::__1::map.55" = type { %"class.std::__1::__tree.56" }
%"class.std::__1::__tree.56" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.gpu::DecoderContext" = type { %"class.gpu::AsyncAPIInterface", %"class.gpu::GLContextVirtualDelegate" }
%"class.gpu::AsyncAPIInterface" = type { i32 (...)** }
%"class.gpu::GLContextVirtualDelegate" = type { i32 (...)** }
%"class.gpu::gles2::Outputter" = type opaque
%class.scoped_refptr.64 = type { %"class.gl::GPUTimingClient"* }
%"class.gl::GPUTimingClient" = type { i32 (...)**, %"class.base::RefCounted.65", %"class.gl::GPUTimingImpl"*, i32, i32 }
%"class.base::RefCounted.65" = type { %"class.base::subtle::RefCountedBase" }
%"class.gl::GPUTimingImpl" = type opaque
%"class.gpu::gles2::FeatureInfo" = type { %"class.base::RefCounted.66", i8, [3 x i8], %"struct.gpu::gles2::Validators", %"struct.gpu::gles2::DisallowedFeatures", i32, i8, %"class.base::internal::flat_tree", %"struct.gpu::gles2::FeatureInfo::FeatureFlags", %"class.gpu::GpuDriverBugWorkarounds", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.81" }
%"class.base::RefCounted.66" = type { %"class.base::subtle::RefCountedBase" }
%"struct.gpu::gles2::Validators" = type <{ %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BackbufferAttachmentValidator", %"class.gpu::gles2::Validators::BlitFilterValidator", %"class.gpu::gles2::Validators::BufferModeValidator", %"class.gpu::gles2::Validators::BufferParameterValidator", %"class.gpu::gles2::Validators::BufferParameter64Validator", %"class.gpu::gles2::Validators::BufferTargetValidator", %"class.gpu::gles2::Validators::BufferUsageValidator", i8, %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BufferfvValidator", %"class.gpu::gles2::Validators::BufferivValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::CmpFunctionValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::DrawModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::FaceModeValidator", %"class.gpu::gles2::Validators::FaceTypeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::GetMaxIndexTypeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::HintModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::IndexedBufferTargetValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::InternalFormatParameterValidator", %"class.gpu::gles2::Validators::MapBufferAccessValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::PixelStoreAlignmentValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::QueryObjectParameterValidator", %"class.gpu::gles2::Validators::QueryTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ResetStatusValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ShaderPrecisionValidator", %"class.gpu::gles2::Validators::ShaderTypeValidator", %"class.gpu::gles2::Validators::SharedImageAccessModeValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::StencilOpValidator", %"class.gpu::gles2::Validators::StringTypeValidator", %"class.gpu::gles2::Validators::SwapBuffersFlagsValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::SyncParameterValidator", %"class.gpu::gles2::Validators::Texture3DTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureCompareFuncValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureMagFilterModeValidator", %"class.gpu::gles2::Validators::TextureMinFilterModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSwizzleValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureUsageValidator", %"class.gpu::gles2::Validators::TextureWrapModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator", %"class.gpu::gles2::Validators::UniformBlockParameterValidator", %"class.gpu::gles2::Validators::UniformParameterValidator", %"class.gpu::gles2::Validators::VertexAttribITypeValidator", [4 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::WindowRectanglesModeValidator", [7 x i8] }>
%"class.gpu::gles2::Validators::BackbufferAttachmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::BlitFilterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameter64Validator" = type { i8 }
%"class.gpu::gles2::Validators::BufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferfvValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferivValidator" = type { i8 }
%"class.gpu::gles2::Validators::CmpFunctionValidator" = type { i8 }
%"class.gpu::gles2::Validators::DrawModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::GetMaxIndexTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::HintModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::IndexedBufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::InternalFormatParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::MapBufferAccessValidator" = type { i8 }
%"class.gpu::gles2::Validators::PixelStoreAlignmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryObjectParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::ResetStatusValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderPrecisionValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SharedImageAccessModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::StencilOpValidator" = type { i8 }
%"class.gpu::gles2::Validators::StringTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SwapBuffersFlagsValidator" = type { i8 }
%"class.gpu::gles2::Validators::SyncParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::Texture3DTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureCompareFuncValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMagFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMinFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSwizzleValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureWrapModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformBlockParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::VertexAttribITypeValidator" = type { i8 }
%"class.gpu::ValueValidator" = type { %"class.std::__1::vector.67" }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { i32*, i32*, %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i32* }
%"class.gpu::gles2::Validators::WindowRectanglesModeValidator" = type { i8 }
%"struct.gpu::gles2::DisallowedFeatures" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.74" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.76" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.base::BasicStringPiece"* }
%"struct.gpu::gles2::FeatureInfo::FeatureFlags" = type <{ %"struct.gpu::GpuMemoryBufferFormatSet", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"struct.gpu::GpuMemoryBufferFormatSet" = type { i32 }
%"class.gpu::GpuDriverBugWorkarounds" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted.87", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.130", %"class.gl::RealGLApi"*, %class.scoped_refptr.136, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.81", i8, [7 x i8] }>
%"class.base::RefCounted.87" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.88 }
%class.scoped_refptr.88 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.89", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.89" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.90" }
%"struct.std::__1::atomic.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__cxx_atomic_impl.93" }
%"struct.std::__1::__cxx_atomic_impl.93" = type { %"struct.std::__1::__cxx_atomic_base_impl.94" }
%"struct.std::__1::__cxx_atomic_base_impl.94" = type { i8 }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type opaque
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"class.gl::RealGLApi" = type opaque
%class.scoped_refptr.136 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.137", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.137" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.138" }
%"class.std::__1::__tree.138" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"struct.std::__1::pair.161" = type { i32, %class.scoped_refptr }
%"class.gl::GPUTimer" = type { i8, i32, %class.scoped_refptr.64, %class.scoped_refptr.157, %class.scoped_refptr.157 }
%class.scoped_refptr.157 = type { %"class.gl::QueryResult"* }
%"class.gl::QueryResult" = type opaque
%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery" = type { %"class.gpu::QueryManager::Query", %"class.std::__1::vector.67" }
%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery" = type { %"class.gpu::QueryManager::Query" }
%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery" = type { %"class.gpu::gles2::GLES2QueryManager::GLES2Query", %"class.base::SupportsWeakPtr.153" }
%"class.base::SupportsWeakPtr.153" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.162 }
%class.scoped_refptr.162 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery" = type { %"class.gpu::gles2::GLES2QueryManager::GLES2Query" }
%"class.gpu::gles2::ErrorState" = type { i32 (...)** }
%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery" = type { %"class.gpu::gles2::GLES2QueryManager::GLES2Query", %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.gl::GPUTimer"* }
%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery" = type { %"class.gpu::gles2::GLES2QueryManager::GLES2Query", %"class.std::__1::unique_ptr.154" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.gpu::gles2::(anonymous namespace)::BooleanQuery" = type { %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery" }
%"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery" = type { %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery" }

$_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv = comdat any

$_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIjJNS_4pairIjS6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

@_ZTVN3gpu5gles217GLES2QueryManager10GLES2QueryE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::gles2::GLES2QueryManager::GLES2Query"*)* @_ZN3gpu5gles217GLES2QueryManager10GLES2QueryD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::GLES2QueryManager::GLES2Query"*)* @_ZN3gpu5gles217GLES2QueryManager10GLES2QueryD0Ev to i8*)] }, align 8
@_ZTVN3gpu5gles217GLES2QueryManagerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::GLES2QueryManager"*)* @_ZN3gpu5gles217GLES2QueryManagerD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::GLES2QueryManager"*)* @_ZN3gpu5gles217GLES2QueryManagerD0Ev to i8*), i8* bitcast (%"class.gpu::QueryManager::Query"* (%"class.gpu::gles2::GLES2QueryManager"*, i32, i32, %"class.gpu::Buffer"*, %"struct.gpu::QuerySync"*)* @_ZN3gpu5gles217GLES2QueryManager11CreateQueryEjj13scoped_refptrINS_6BufferEEPNS_9QuerySyncE to i8*), i8* bitcast (i32 (%"class.gpu::gles2::GLES2QueryManager"*, i32)* @_ZN3gpu5gles217GLES2QueryManager24AdjustTargetForEmulationEj to i8*)] }, align 8
@_ZTVN3gpu5gles212_GLOBAL__N_119CommandLatencyQueryE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery5BeginEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery3EndEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery12QueryCounterEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery7ProcessEb to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery5PauseEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery6ResumeEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery7DestroyEb to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5QueryD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQueryD0Ev to i8*)] }, align 8
@_ZTVN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery5BeginEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery3EndEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery12QueryCounterEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery7ProcessEb to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery5PauseEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery6ResumeEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery7DestroyEb to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZTVN3gpu5gles212_GLOBAL__N_113GetErrorQueryE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery5BeginEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery3EndEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery12QueryCounterEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery7ProcessEb to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery5PauseEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery6ResumeEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery7DestroyEb to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::gles2::GLES2QueryManager::GLES2Query"*)* @_ZN3gpu5gles217GLES2QueryManager10GLES2QueryD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQueryD0Ev to i8*)] }, align 8
@_ZTVN3gpu5gles212_GLOBAL__N_116TimeElapsedQueryE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery5BeginEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery3EndEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery12QueryCounterEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery7ProcessEb to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery5PauseEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery6ResumeEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery7DestroyEb to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQueryD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQueryD0Ev to i8*)] }, align 8
@_ZTVN3gpu5gles212_GLOBAL__N_114TimeStampQueryE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery5BeginEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery3EndEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery12QueryCounterEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery7ProcessEb to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery5PauseEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery6ResumeEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery7DestroyEb to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQueryD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQueryD0Ev to i8*)] }, align 8
@_ZTVN3gpu5gles212_GLOBAL__N_112BooleanQueryE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery5BeginEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery3EndEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery12QueryCounterEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::BooleanQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_112BooleanQuery7ProcessEb to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery5PauseEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery6ResumeEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery7DestroyEb to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::BooleanQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_112BooleanQueryD0Ev to i8*)] }, align 8
@_ZTVN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery5BeginEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery3EndEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery12QueryCounterEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery5PauseEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery6ResumeEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery7DestroyEb to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryD0Ev to i8*)] }, align 8
@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8
@_ZTVN3gpu5gles212_GLOBAL__N_118SummedIntegerQueryE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery5BeginEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery3EndEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*, i32)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery12QueryCounterEi to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_118SummedIntegerQuery7ProcessEb to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery5PauseEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery6ResumeEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*, i1)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery7DestroyEb to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_118SummedIntegerQueryD0Ev to i8*)] }, align 8

@_ZN3gpu5gles217GLES2QueryManager10GLES2QueryD1Ev = hidden unnamed_addr alias void (%"class.gpu::gles2::GLES2QueryManager::GLES2Query"*), void (%"class.gpu::gles2::GLES2QueryManager::GLES2Query"*)* @_ZN3gpu5gles217GLES2QueryManager10GLES2QueryD2Ev
@_ZN3gpu5gles217GLES2QueryManagerC1EPNS0_12GLES2DecoderEPNS0_11FeatureInfoE = hidden unnamed_addr alias void (%"class.gpu::gles2::GLES2QueryManager"*, %"class.gpu::gles2::GLES2Decoder"*, %"class.gpu::gles2::FeatureInfo"*), void (%"class.gpu::gles2::GLES2QueryManager"*, %"class.gpu::gles2::GLES2Decoder"*, %"class.gpu::gles2::FeatureInfo"*)* @_ZN3gpu5gles217GLES2QueryManagerC2EPNS0_12GLES2DecoderEPNS0_11FeatureInfoE
@_ZN3gpu5gles217GLES2QueryManagerD1Ev = hidden unnamed_addr alias void (%"class.gpu::gles2::GLES2QueryManager"*), void (%"class.gpu::gles2::GLES2QueryManager"*)* @_ZN3gpu5gles217GLES2QueryManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217GLES2QueryManager10GLES2QueryC2EPS1_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::gles2::GLES2QueryManager::GLES2Query"*, %"class.gpu::gles2::GLES2QueryManager"*, i32, %"class.gpu::Buffer"*, %"struct.gpu::QuerySync"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager::GLES2Query", %"class.gpu::gles2::GLES2QueryManager::GLES2Query"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %1, i64 0, i32 0
  %8 = icmp eq %"class.gpu::Buffer"* %3, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  tail call void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"* %6, %"class.gpu::QueryManager"* %7, i32 %2, %"class.gpu::Buffer"* nonnull %3, %"struct.gpu::QuerySync"* %4) #15
  %12 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager::GLES2Query", %"class.gpu::gles2::GLES2QueryManager::GLES2Query"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles217GLES2QueryManager10GLES2QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager::GLES2Query", %"class.gpu::gles2::GLES2QueryManager::GLES2Query"* %0, i64 0, i32 1
  store %"class.gpu::gles2::GLES2QueryManager"* %1, %"class.gpu::gles2::GLES2QueryManager"** %13, align 8
  %14 = atomicrmw sub i32* %10, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %21

16:                                               ; preds = %9
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %3) #15
  %17 = bitcast %"class.gpu::Buffer"* %3 to i8*
  tail call void @_ZdlPv(i8* %17) #16
  br label %21

18:                                               ; preds = %5
  tail call void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"* %6, %"class.gpu::QueryManager"* %7, i32 %2, %"class.gpu::Buffer"* null, %"struct.gpu::QuerySync"* %4) #15
  %19 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager::GLES2Query", %"class.gpu::gles2::GLES2QueryManager::GLES2Query"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles217GLES2QueryManager10GLES2QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager::GLES2Query", %"class.gpu::gles2::GLES2QueryManager::GLES2Query"* %0, i64 0, i32 1
  store %"class.gpu::gles2::GLES2QueryManager"* %1, %"class.gpu::gles2::GLES2QueryManager"** %20, align 8
  br label %21

21:                                               ; preds = %18, %9, %16
  ret void
}

declare void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager"*, i32, %"class.gpu::Buffer"*, %"struct.gpu::QuerySync"*) unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217GLES2QueryManager10GLES2QueryD0Ev(%"class.gpu::gles2::GLES2QueryManager::GLES2Query"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217GLES2QueryManagerC2EPNS0_12GLES2DecoderEPNS0_11FeatureInfoE(%"class.gpu::gles2::GLES2QueryManager"*, %"class.gpu::gles2::GLES2Decoder"*, %"class.gpu::gles2::FeatureInfo"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0
  tail call void @_ZN3gpu12QueryManagerC2Ev(%"class.gpu::QueryManager"* %4) #15
  %5 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu5gles217GLES2QueryManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 1
  store %"class.gpu::gles2::GLES2Decoder"* %1, %"class.gpu::gles2::GLES2Decoder"** %6, align 8
  %7 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.gpu::gles2::FeatureInfo", %"class.gpu::gles2::FeatureInfo"* %2, i64 0, i32 8, i32 26
  %9 = load i8, i8* %8, align 1, !range !2
  store i8 %9, i8* %7, align 8
  %10 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.gpu::gles2::FeatureInfo", %"class.gpu::gles2::FeatureInfo"* %2, i64 0, i32 8, i32 27
  %12 = load i8, i8* %11, align 2, !range !2
  store i8 %12, i8* %10, align 1
  %13 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 4
  store i8 0, i8* %13, align 2
  %14 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 5
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 8
  %17 = getelementptr inbounds %class.scoped_refptr.64, %class.scoped_refptr.64* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.gpu::gles2::GLES2Decoder", %"class.gpu::gles2::GLES2Decoder"* %1, i64 0, i32 1
  %19 = bitcast %"class.gpu::DecoderContext"* %18 to %"class.gl::GLContext"* (%"class.gpu::DecoderContext"*)***
  %20 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  %21 = load %"class.gl::GLContext"* (%"class.gpu::DecoderContext"*)**, %"class.gl::GLContext"* (%"class.gpu::DecoderContext"*)*** %19, align 8
  %22 = getelementptr inbounds %"class.gl::GLContext"* (%"class.gpu::DecoderContext"*)*, %"class.gl::GLContext"* (%"class.gpu::DecoderContext"*)** %21, i64 10
  %23 = load %"class.gl::GLContext"* (%"class.gpu::DecoderContext"*)*, %"class.gl::GLContext"* (%"class.gpu::DecoderContext"*)** %22, align 8
  %24 = tail call %"class.gl::GLContext"* %23(%"class.gpu::DecoderContext"* %18) #15
  %25 = icmp eq %"class.gl::GLContext"* %24, null
  br i1 %25, label %49, label %26

26:                                               ; preds = %3
  %27 = bitcast %"class.gl::GLContext"* %24 to %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)***
  %28 = load %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)**, %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)*, %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)** %28, i64 4
  %30 = load %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)*, %"class.gl::GPUTimingClient"* (%"class.gl::GLContext"*)** %29, align 8
  %31 = tail call %"class.gl::GPUTimingClient"* %30(%"class.gl::GLContext"* nonnull %24) #15
  %32 = ptrtoint %"class.gl::GPUTimingClient"* %31 to i64
  %33 = bitcast %class.scoped_refptr.64* %16 to i64*
  %34 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %17, align 8
  store i64 %32, i64* %33, align 8
  %35 = icmp eq %"class.gl::GPUTimingClient"* %34, null
  br i1 %35, label %71, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %34, i64 0, i32 1
  %38 = getelementptr inbounds %"class.base::RefCounted.65", %"class.base::RefCounted.65"* %37, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %38) #15
  %39 = getelementptr inbounds %"class.base::RefCounted.65", %"class.base::RefCounted.65"* %37, i64 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %71

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.base::RefCounted.65", %"class.base::RefCounted.65"* %37, i64 -2
  %44 = bitcast %"class.base::RefCounted.65"* %43 to %"class.gl::GPUTimingClient"*
  %45 = bitcast %"class.base::RefCounted.65"* %43 to void (%"class.gl::GPUTimingClient"*)***
  %46 = load void (%"class.gl::GPUTimingClient"*)**, void (%"class.gl::GPUTimingClient"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %46, i64 1
  %48 = load void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %47, align 8
  tail call void %48(%"class.gl::GPUTimingClient"* nonnull %44) #15
  br label %71

49:                                               ; preds = %3
  %50 = tail call i8* @_Znwm(i64 32) #16
  %51 = bitcast i8* %50 to %"class.gl::GPUTimingClient"*
  tail call void @_ZN2gl15GPUTimingClientC1EPNS_13GPUTimingImplE(%"class.gl::GPUTimingClient"* nonnull %51, %"class.gl::GPUTimingImpl"* null) #15
  %52 = getelementptr inbounds i8, i8* %50, i64 8
  %53 = bitcast i8* %52 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %53) #15
  %54 = ptrtoint i8* %50 to i64
  %55 = bitcast %class.scoped_refptr.64* %16 to i64*
  %56 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %17, align 8
  store i64 %54, i64* %55, align 8
  %57 = icmp eq %"class.gl::GPUTimingClient"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %56, i64 0, i32 1
  %60 = getelementptr inbounds %"class.base::RefCounted.65", %"class.base::RefCounted.65"* %59, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %60) #15
  %61 = getelementptr inbounds %"class.base::RefCounted.65", %"class.base::RefCounted.65"* %59, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %71

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.base::RefCounted.65", %"class.base::RefCounted.65"* %59, i64 -2
  %66 = bitcast %"class.base::RefCounted.65"* %65 to %"class.gl::GPUTimingClient"*
  %67 = bitcast %"class.base::RefCounted.65"* %65 to void (%"class.gl::GPUTimingClient"*)***
  %68 = load void (%"class.gl::GPUTimingClient"*)**, void (%"class.gl::GPUTimingClient"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %68, i64 1
  %70 = load void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %69, align 8
  tail call void %70(%"class.gl::GPUTimingClient"* nonnull %66) #15
  br label %71

71:                                               ; preds = %64, %58, %49, %42, %36, %26
  ret void
}

declare void @_ZN3gpu12QueryManagerC2Ev(%"class.gpu::QueryManager"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN2gl15GPUTimingClientC1EPNS_13GPUTimingImplE(%"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingImpl"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217GLES2QueryManagerD2Ev(%"class.gpu::gles2::GLES2QueryManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu5gles217GLES2QueryManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 8, i32 0
  %4 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %3, align 8
  %5 = icmp eq %"class.gl::GPUTimingClient"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCounted.65", %"class.base::RefCounted.65"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #15
  %9 = getelementptr inbounds %"class.base::RefCounted.65", %"class.base::RefCounted.65"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.65", %"class.base::RefCounted.65"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.65"* %13 to %"class.gl::GPUTimingClient"*
  %15 = bitcast %"class.base::RefCounted.65"* %13 to void (%"class.gl::GPUTimingClient"*)***
  %16 = load void (%"class.gl::GPUTimingClient"*)**, void (%"class.gl::GPUTimingClient"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %16, i64 1
  %18 = load void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %17, align 8
  tail call void %18(%"class.gl::GPUTimingClient"* nonnull %14) #15
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0
  tail call void @_ZN3gpu12QueryManagerD2Ev(%"class.gpu::QueryManager"* %20) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gpu12QueryManagerD2Ev(%"class.gpu::QueryManager"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217GLES2QueryManagerD0Ev(%"class.gpu::gles2::GLES2QueryManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu5gles217GLES2QueryManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 8, i32 0
  %4 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %3, align 8
  %5 = icmp eq %"class.gl::GPUTimingClient"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCounted.65", %"class.base::RefCounted.65"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #15
  %9 = getelementptr inbounds %"class.base::RefCounted.65", %"class.base::RefCounted.65"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.65", %"class.base::RefCounted.65"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.65"* %13 to %"class.gl::GPUTimingClient"*
  %15 = bitcast %"class.base::RefCounted.65"* %13 to void (%"class.gl::GPUTimingClient"*)***
  %16 = load void (%"class.gl::GPUTimingClient"*)**, void (%"class.gl::GPUTimingClient"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %16, i64 1
  %18 = load void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %17, align 8
  tail call void %18(%"class.gl::GPUTimingClient"* nonnull %14) #15
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0
  tail call void @_ZN3gpu12QueryManagerD2Ev(%"class.gpu::QueryManager"* %20) #15
  %21 = bitcast %"class.gpu::gles2::GLES2QueryManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::QueryManager::Query"* @_ZN3gpu5gles217GLES2QueryManager11CreateQueryEjj13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::gles2::GLES2QueryManager"*, i32, i32, %"class.gpu::Buffer"*, %"struct.gpu::QuerySync"*) unnamed_addr #0 align 2 {
  %6 = alloca %"struct.std::__1::pair.161", align 8
  switch i32 %1, label %123 [
    i32 24583, label %7
    i32 24582, label %12
    i32 24579, label %35
    i32 35007, label %56
    i32 36392, label %82
    i32 35887, label %108
    i32 36202, label %108
    i32 35976, label %113
    i32 35092, label %118
  ]

7:                                                ; preds = %5
  %8 = tail call i8* @_Znwm(i64 88) #16
  %9 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0
  %10 = bitcast i8* %8 to %"class.gpu::QueryManager::Query"*
  tail call void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"* nonnull %10, %"class.gpu::QueryManager"* %9, i32 24583, %"class.gpu::Buffer"* %3, %"struct.gpu::QuerySync"* %4) #15
  %11 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_119CommandLatencyQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  br label %128

12:                                               ; preds = %5
  %13 = tail call i8* @_Znwm(i64 104) #16
  %14 = bitcast i8* %13 to %"class.gpu::QueryManager::Query"*
  %15 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0
  %16 = icmp eq %"class.gpu::Buffer"* %3, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  tail call void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"* nonnull %14, %"class.gpu::QueryManager"* %15, i32 24582, %"class.gpu::Buffer"* nonnull %3, %"struct.gpu::QuerySync"* %4) #15
  %20 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles217GLES2QueryManager10GLES2QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %13, i64 88
  %22 = bitcast i8* %21 to %"class.gpu::gles2::GLES2QueryManager"**
  store %"class.gpu::gles2::GLES2QueryManager"* %0, %"class.gpu::gles2::GLES2QueryManager"** %22, align 8
  %23 = atomicrmw sub i32* %18, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %17
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %3) #15
  %26 = bitcast %"class.gpu::Buffer"* %3 to i8*
  tail call void @_ZdlPv(i8* %26) #16
  br label %31

27:                                               ; preds = %12
  tail call void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"* nonnull %14, %"class.gpu::QueryManager"* %15, i32 24582, %"class.gpu::Buffer"* null, %"struct.gpu::QuerySync"* %4) #15
  %28 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles217GLES2QueryManager10GLES2QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %13, i64 88
  %30 = bitcast i8* %29 to %"class.gpu::gles2::GLES2QueryManager"**
  store %"class.gpu::gles2::GLES2QueryManager"* %0, %"class.gpu::gles2::GLES2QueryManager"** %30, align 8
  br label %31

31:                                               ; preds = %27, %25, %17
  %32 = phi i32 (...)*** [ %28, %27 ], [ %20, %25 ], [ %20, %17 ]
  %33 = getelementptr inbounds i8, i8* %13, i64 96
  %34 = bitcast i8* %33 to %"class.base::internal::WeakReferenceOwner"*
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %34) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  br label %128

35:                                               ; preds = %5
  %36 = tail call i8* @_Znwm(i64 96) #16
  %37 = bitcast i8* %36 to %"class.gpu::QueryManager::Query"*
  %38 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0
  %39 = icmp eq %"class.gpu::Buffer"* %3, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic
  tail call void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"* nonnull %37, %"class.gpu::QueryManager"* %38, i32 24579, %"class.gpu::Buffer"* nonnull %3, %"struct.gpu::QuerySync"* %4) #15
  %43 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles217GLES2QueryManager10GLES2QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds i8, i8* %36, i64 88
  %45 = bitcast i8* %44 to %"class.gpu::gles2::GLES2QueryManager"**
  store %"class.gpu::gles2::GLES2QueryManager"* %0, %"class.gpu::gles2::GLES2QueryManager"** %45, align 8
  %46 = atomicrmw sub i32* %41, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %40
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %3) #15
  %49 = bitcast %"class.gpu::Buffer"* %3 to i8*
  tail call void @_ZdlPv(i8* %49) #16
  br label %54

50:                                               ; preds = %35
  tail call void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"* nonnull %37, %"class.gpu::QueryManager"* %38, i32 24579, %"class.gpu::Buffer"* null, %"struct.gpu::QuerySync"* %4) #15
  %51 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles217GLES2QueryManager10GLES2QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds i8, i8* %36, i64 88
  %53 = bitcast i8* %52 to %"class.gpu::gles2::GLES2QueryManager"**
  store %"class.gpu::gles2::GLES2QueryManager"* %0, %"class.gpu::gles2::GLES2QueryManager"** %53, align 8
  br label %54

54:                                               ; preds = %50, %48, %40
  %55 = phi i32 (...)*** [ %51, %50 ], [ %43, %48 ], [ %43, %40 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_113GetErrorQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  br label %128

56:                                               ; preds = %5
  %57 = tail call i8* @_Znwm(i64 104) #16
  %58 = bitcast i8* %57 to %"class.gpu::QueryManager::Query"*
  %59 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0
  %60 = icmp eq %"class.gpu::Buffer"* %3, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 1 monotonic
  tail call void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"* nonnull %58, %"class.gpu::QueryManager"* %59, i32 35007, %"class.gpu::Buffer"* nonnull %3, %"struct.gpu::QuerySync"* %4) #15
  %64 = bitcast i8* %57 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles217GLES2QueryManager10GLES2QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds i8, i8* %57, i64 88
  %66 = bitcast i8* %65 to %"class.gpu::gles2::GLES2QueryManager"**
  store %"class.gpu::gles2::GLES2QueryManager"* %0, %"class.gpu::gles2::GLES2QueryManager"** %66, align 8
  %67 = atomicrmw sub i32* %62, i32 1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %75

69:                                               ; preds = %61
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %3) #15
  %70 = bitcast %"class.gpu::Buffer"* %3 to i8*
  tail call void @_ZdlPv(i8* %70) #16
  br label %75

71:                                               ; preds = %56
  tail call void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"* nonnull %58, %"class.gpu::QueryManager"* %59, i32 35007, %"class.gpu::Buffer"* null, %"struct.gpu::QuerySync"* %4) #15
  %72 = bitcast i8* %57 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles217GLES2QueryManager10GLES2QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %73 = getelementptr inbounds i8, i8* %57, i64 88
  %74 = bitcast i8* %73 to %"class.gpu::gles2::GLES2QueryManager"**
  store %"class.gpu::gles2::GLES2QueryManager"* %0, %"class.gpu::gles2::GLES2QueryManager"** %74, align 8
  br label %75

75:                                               ; preds = %71, %69, %61
  %76 = phi i32 (...)*** [ %72, %71 ], [ %64, %69 ], [ %64, %61 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_116TimeElapsedQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 8, i32 0
  %78 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %77, align 8
  %79 = tail call %"class.gl::GPUTimer"* @_ZN2gl15GPUTimingClient14CreateGPUTimerEb(%"class.gl::GPUTimingClient"* %78, i1 zeroext true) #15
  %80 = getelementptr inbounds i8, i8* %57, i64 96
  %81 = bitcast i8* %80 to %"class.gl::GPUTimer"**
  store %"class.gl::GPUTimer"* %79, %"class.gl::GPUTimer"** %81, align 8
  br label %128

82:                                               ; preds = %5
  %83 = tail call i8* @_Znwm(i64 104) #16
  %84 = bitcast i8* %83 to %"class.gpu::QueryManager::Query"*
  %85 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0
  %86 = icmp eq %"class.gpu::Buffer"* %3, null
  br i1 %86, label %97, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 1 monotonic
  tail call void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"* nonnull %84, %"class.gpu::QueryManager"* %85, i32 36392, %"class.gpu::Buffer"* nonnull %3, %"struct.gpu::QuerySync"* %4) #15
  %90 = bitcast i8* %83 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles217GLES2QueryManager10GLES2QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds i8, i8* %83, i64 88
  %92 = bitcast i8* %91 to %"class.gpu::gles2::GLES2QueryManager"**
  store %"class.gpu::gles2::GLES2QueryManager"* %0, %"class.gpu::gles2::GLES2QueryManager"** %92, align 8
  %93 = atomicrmw sub i32* %88, i32 1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %101

95:                                               ; preds = %87
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %3) #15
  %96 = bitcast %"class.gpu::Buffer"* %3 to i8*
  tail call void @_ZdlPv(i8* %96) #16
  br label %101

97:                                               ; preds = %82
  tail call void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"* nonnull %84, %"class.gpu::QueryManager"* %85, i32 36392, %"class.gpu::Buffer"* null, %"struct.gpu::QuerySync"* %4) #15
  %98 = bitcast i8* %83 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles217GLES2QueryManager10GLES2QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %99 = getelementptr inbounds i8, i8* %83, i64 88
  %100 = bitcast i8* %99 to %"class.gpu::gles2::GLES2QueryManager"**
  store %"class.gpu::gles2::GLES2QueryManager"* %0, %"class.gpu::gles2::GLES2QueryManager"** %100, align 8
  br label %101

101:                                              ; preds = %97, %95, %87
  %102 = phi i32 (...)*** [ %98, %97 ], [ %90, %95 ], [ %90, %87 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_114TimeStampQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 8, i32 0
  %104 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %103, align 8
  %105 = tail call %"class.gl::GPUTimer"* @_ZN2gl15GPUTimingClient14CreateGPUTimerEb(%"class.gl::GPUTimingClient"* %104, i1 zeroext false) #15
  %106 = getelementptr inbounds i8, i8* %83, i64 96
  %107 = bitcast i8* %106 to %"class.gl::GPUTimer"**
  store %"class.gl::GPUTimer"* %105, %"class.gl::GPUTimer"** %107, align 8
  br label %128

108:                                              ; preds = %5, %5
  %109 = tail call i8* @_Znwm(i64 112) #16
  %110 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0
  %111 = bitcast i8* %109 to %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*
  tail call fastcc void @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryC2EPNS_12QueryManagerEj13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* nonnull %111, %"class.gpu::QueryManager"* %110, i32 %1, %"class.gpu::Buffer"* %3, %"struct.gpu::QuerySync"* %4) #15
  %112 = bitcast i8* %109 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_112BooleanQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  br label %128

113:                                              ; preds = %5
  %114 = tail call i8* @_Znwm(i64 112) #16
  %115 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0
  %116 = bitcast i8* %114 to %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*
  tail call fastcc void @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryC2EPNS_12QueryManagerEj13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* nonnull %116, %"class.gpu::QueryManager"* %115, i32 35976, %"class.gpu::Buffer"* %3, %"struct.gpu::QuerySync"* %4) #15
  %117 = bitcast i8* %114 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_118SummedIntegerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  br label %128

118:                                              ; preds = %5
  %119 = tail call i8* @_Znwm(i64 112) #16
  %120 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0
  %121 = bitcast i8* %119 to %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*
  tail call fastcc void @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryC2EPNS_12QueryManagerEj13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* nonnull %121, %"class.gpu::QueryManager"* %120, i32 35092, %"class.gpu::Buffer"* %3, %"struct.gpu::QuerySync"* %4) #15
  %122 = bitcast i8* %119 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_118SummedIntegerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %122, align 8
  br label %128

123:                                              ; preds = %5
  %124 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0
  %125 = icmp eq %"class.gpu::Buffer"* %3, null
  br i1 %125, label %126, label %164

126:                                              ; preds = %123
  %127 = tail call %"class.gpu::QueryManager::Query"* @_ZN3gpu12QueryManager11CreateQueryEjj13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager"* %124, i32 %1, i32 %2, %"class.gpu::Buffer"* %3, %"struct.gpu::QuerySync"* %4) #15
  br label %173

128:                                              ; preds = %118, %113, %108, %101, %75, %54, %31, %7
  %129 = phi i8* [ %119, %118 ], [ %114, %113 ], [ %109, %108 ], [ %83, %101 ], [ %57, %75 ], [ %36, %54 ], [ %13, %31 ], [ %8, %7 ]
  %130 = getelementptr inbounds i8, i8* %129, i64 8
  %131 = bitcast i8* %130 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %131) #15
  %132 = bitcast %"struct.std::__1::pair.161"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #15
  %133 = bitcast i8* %129 to %"class.gpu::QueryManager::Query"*
  %134 = getelementptr inbounds i8, i8* %129, i64 8
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %131) #15
  %135 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %6, i64 0, i32 0
  store i32 %2, i32* %135, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %6, i64 0, i32 1, i32 0
  %137 = bitcast %"class.gpu::QueryManager::Query"** %136 to i8**
  store i8* %129, i8** %137, align 8
  %138 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0, i32 3, i32 0
  %139 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIjJNS_4pairIjS6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %138, i32* nonnull dereferenceable(4) %135, %"struct.std::__1::pair.161"* nonnull dereferenceable(16) %6) #15
  %140 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %136, align 8
  %141 = icmp eq %"class.gpu::QueryManager::Query"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %128
  %143 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %140, i64 0, i32 1
  %144 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %143, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %144) #15
  %145 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %143, i64 0, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %155

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %143, i64 -2
  %150 = bitcast %"class.base::RefCounted"* %149 to %"class.gpu::QueryManager::Query"*
  %151 = bitcast %"class.base::RefCounted"* %149 to void (%"class.gpu::QueryManager::Query"*)***
  %152 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %152, i64 10
  %154 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %153, align 8
  call void %154(%"class.gpu::QueryManager::Query"* nonnull %150) #15
  br label %155

155:                                              ; preds = %148, %142, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #15
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %131) #15
  %156 = bitcast i8* %134 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %173

159:                                              ; preds = %155
  %160 = bitcast i8* %129 to void (%"class.gpu::QueryManager::Query"*)***
  %161 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %161, i64 10
  %163 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %162, align 8
  call void %163(%"class.gpu::QueryManager::Query"* nonnull %133) #15
  br label %173

164:                                              ; preds = %123
  %165 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = atomicrmw add i32* %165, i32 1 monotonic
  %167 = tail call %"class.gpu::QueryManager::Query"* @_ZN3gpu12QueryManager11CreateQueryEjj13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager"* %124, i32 %1, i32 %2, %"class.gpu::Buffer"* nonnull %3, %"struct.gpu::QuerySync"* %4) #15
  %168 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = atomicrmw sub i32* %168, i32 1 acq_rel
  %170 = icmp eq i32 %169, 1
  br i1 %170, label %171, label %173

171:                                              ; preds = %164
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %3) #15
  %172 = bitcast %"class.gpu::Buffer"* %3 to i8*
  tail call void @_ZdlPv(i8* %172) #16
  br label %173

173:                                              ; preds = %126, %159, %155, %164, %171
  %174 = phi %"class.gpu::QueryManager::Query"* [ %167, %164 ], [ %167, %171 ], [ %133, %155 ], [ %133, %159 ], [ %127, %126 ]
  ret %"class.gpu::QueryManager::Query"* %174
}

declare %"class.gpu::QueryManager::Query"* @_ZN3gpu12QueryManager11CreateQueryEjj13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager"*, i32, i32, %"class.gpu::Buffer"*, %"struct.gpu::QuerySync"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217GLES2QueryManager24ProcessFrameBeginUpdatesEv(%"class.gpu::gles2::GLES2QueryManager"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %29, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 8, i32 0
  %11 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %10, align 8
  %12 = tail call zeroext i1 @_ZN2gl15GPUTimingClient24CheckAndResetTimerErrorsEv(%"class.gl::GPUTimingClient"* %11) #15
  br i1 %12, label %13, label %29

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 7
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 1
  %18 = bitcast %"class.gpu::gles2::GLES2Decoder"** %17 to %"class.gpu::CommonDecoder"**
  %19 = load %"class.gpu::CommonDecoder"*, %"class.gpu::CommonDecoder"** %18, align 8
  %20 = load i32, i32* %6, align 4
  %21 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 6
  %22 = load i32, i32* %21, align 8
  %23 = tail call i8* @_ZN3gpu13CommonDecoder22GetAddressAndCheckSizeEjjj(%"class.gpu::CommonDecoder"* %19, i32 %20, i32 %22, i32 4) #15
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %13
  store i32 -1, i32* %6, align 4
  store i32 0, i32* %21, align 8
  br label %29

26:                                               ; preds = %13
  %27 = load i32, i32* %14, align 4
  %28 = bitcast i8* %23 to i32*
  store atomic volatile i32 %27, i32* %28 release, align 4
  br label %29

29:                                               ; preds = %26, %25, %9, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217GLES2QueryManager19UpdateDisjointValueEv(%"class.gpu::gles2::GLES2QueryManager"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 8, i32 0
  %7 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %6, align 8
  %8 = tail call zeroext i1 @_ZN2gl15GPUTimingClient24CheckAndResetTimerErrorsEv(%"class.gl::GPUTimingClient"* %7) #15
  br i1 %8, label %9, label %25

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 7
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, 1
  store i32 %12, i32* %10, align 4
  %13 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 1
  %14 = bitcast %"class.gpu::gles2::GLES2Decoder"** %13 to %"class.gpu::CommonDecoder"**
  %15 = load %"class.gpu::CommonDecoder"*, %"class.gpu::CommonDecoder"** %14, align 8
  %16 = load i32, i32* %2, align 4
  %17 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 6
  %18 = load i32, i32* %17, align 8
  %19 = tail call i8* @_ZN3gpu13CommonDecoder22GetAddressAndCheckSizeEjjj(%"class.gpu::CommonDecoder"* %15, i32 %16, i32 %18, i32 4) #15
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %9
  store i32 -1, i32* %2, align 4
  store i32 0, i32* %17, align 8
  br label %25

22:                                               ; preds = %9
  %23 = load i32, i32* %10, align 4
  %24 = bitcast i8* %19 to i32*
  store atomic volatile i32 %23, i32* %24 release, align 4
  br label %25

25:                                               ; preds = %21, %22, %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu5gles217GLES2QueryManager15SetDisjointSyncEij(%"class.gpu::gles2::GLES2QueryManager"* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, -1
  %7 = icmp eq i32 %1, -1
  %8 = or i1 %7, %6
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 1
  %11 = bitcast %"class.gpu::gles2::GLES2Decoder"** %10 to %"class.gpu::CommonDecoder"**
  %12 = load %"class.gpu::CommonDecoder"*, %"class.gpu::CommonDecoder"** %11, align 8
  %13 = tail call i8* @_ZN3gpu13CommonDecoder22GetAddressAndCheckSizeEjjj(%"class.gpu::CommonDecoder"* %12, i32 %1, i32 %2, i32 4) #15
  %14 = icmp eq i8* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %9
  %16 = bitcast i8* %13 to i32*
  store atomic volatile i32 0, i32* %16 release, align 4
  %17 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 7
  store i32 0, i32* %17, align 4
  store i32 %1, i32* %4, align 4
  %18 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 6
  store i32 %2, i32* %18, align 8
  br label %19

19:                                               ; preds = %15, %9, %3
  %20 = phi i32 [ 4, %3 ], [ 0, %15 ], [ 2, %9 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GPUTimer"* @_ZN3gpu5gles217GLES2QueryManager14CreateGPUTimerEb(%"class.gpu::gles2::GLES2QueryManager"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 8, i32 0
  %4 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %3, align 8
  %5 = tail call %"class.gl::GPUTimer"* @_ZN2gl15GPUTimingClient14CreateGPUTimerEb(%"class.gl::GPUTimingClient"* %4, i1 zeroext %1) #15
  ret %"class.gl::GPUTimer"* %5
}

declare %"class.gl::GPUTimer"* @_ZN2gl15GPUTimingClient14CreateGPUTimerEb(%"class.gl::GPUTimingClient"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles217GLES2QueryManager18GPUTimingAvailableEv(%"class.gpu::gles2::GLES2QueryManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 8, i32 0
  %3 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %2, align 8
  %4 = tail call zeroext i1 @_ZN2gl15GPUTimingClient11IsAvailableEv(%"class.gl::GPUTimingClient"* %3) #15
  ret i1 %4
}

declare zeroext i1 @_ZN2gl15GPUTimingClient11IsAvailableEv(%"class.gl::GPUTimingClient"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3gpu5gles217GLES2QueryManager24AdjustTargetForEmulationEj(%"class.gpu::gles2::GLES2QueryManager"* nocapture readonly, i32) unnamed_addr #8 align 2 {
  switch i32 %1, label %12 [
    i32 36202, label %3
    i32 35887, label %3
  ]

3:                                                ; preds = %2, %2
  %4 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 3
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, i32 %1, i32 35092
  ret i32 %11

12:                                               ; preds = %3, %2
  %13 = phi i32 [ %1, %2 ], [ 35887, %3 ]
  ret i32 %13
}

declare zeroext i1 @_ZN2gl15GPUTimingClient24CheckAndResetTimerErrorsEv(%"class.gl::GPUTimingClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217GLES2QueryManager24SafelyResetDisjointValueEv(%"class.gpu::gles2::GLES2QueryManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 0
  %7 = tail call %"class.gpu::QueryManager::Query"* @_ZN3gpu12QueryManager14GetActiveQueryEj(%"class.gpu::QueryManager"* %6, i32 35007) #15
  %8 = icmp eq %"class.gpu::QueryManager::Query"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %0, i64 0, i32 8, i32 0
  %11 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %10, align 8
  %12 = tail call zeroext i1 @_ZN2gl15GPUTimingClient24CheckAndResetTimerErrorsEv(%"class.gl::GPUTimingClient"* %11) #15
  br label %13

13:                                               ; preds = %5, %1, %9
  ret void
}

declare %"class.gpu::QueryManager::Query"* @_ZN3gpu12QueryManager14GetActiveQueryEj(%"class.gpu::QueryManager"*, i32) local_unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv(%"class.gpu::QueryManager::Query"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv(%"class.gpu::QueryManager::Query"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery5BeginEv(%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery", %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* %0, i64 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery3EndEi(%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"*, i32) unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZN4base9TimeTicks3NowEv() #15
  %4 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery", %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery", %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* %0, i64 0, i32 0, i32 7
  store i32 3, i32* %5, align 4
  %6 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery", %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* %0, i64 0, i32 0, i32 6
  store i32 %1, i32* %6, align 8
  tail call void @_ZN3gpu12QueryManager5Query15MarkAsCompletedEm(%"class.gpu::QueryManager::Query"* %4, i64 %3) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery12QueryCounterEi(%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* nocapture, i32) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery7ProcessEb(%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* nocapture, i1 zeroext) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery5PauseEv(%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery", %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* %0, i64 0, i32 0, i32 7
  store i32 2, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery6ResumeEv(%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery", %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* %0, i64 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQuery7DestroyEb(%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* nocapture, i1 zeroext) unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery", %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* %0, i64 0, i32 0, i32 8
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i8 1, i8* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_119CommandLatencyQueryD0Ev(%"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery", %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* %0, i64 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %2) #15
  %3 = bitcast %"class.gpu::gles2::(anonymous namespace)::CommandLatencyQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #16
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare void @_ZN3gpu12QueryManager5Query15MarkAsCompletedEm(%"class.gpu::QueryManager::Query"*, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery5BeginEv(%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery", %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery3EndEi(%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery", %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 3, i32* %6, align 4
  %7 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery", %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0, i64 0, i32 0, i32 0, i32 6
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery", %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.gpu::gles2::GLES2QueryManager"*, %"class.gpu::gles2::GLES2QueryManager"** %8, align 8
  %10 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %9, i64 0, i32 1
  %11 = load %"class.gpu::gles2::GLES2Decoder"*, %"class.gpu::gles2::GLES2Decoder"** %10, align 8
  %12 = bitcast %"class.base::WeakPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery", %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0, i64 0, i32 1
  %14 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15, !noalias !3
  %15 = getelementptr inbounds %"class.base::SupportsWeakPtr.153", %"class.base::SupportsWeakPtr.153"* %13, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %15) #15, !noalias !3
  %16 = getelementptr inbounds %"class.base::SupportsWeakPtr.153", %"class.base::SupportsWeakPtr.153"* %13, i64 -12
  %17 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  %18 = ptrtoint %"class.base::SupportsWeakPtr.153"* %16 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %17, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %18) #15
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15, !noalias !3
  %19 = call i8* @_Znwm(i64 64) #16, !noalias !6
  %20 = bitcast i8* %19 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %20, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryEFvvEJNS_7WeakPtrIS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryEFvvEJNS_7WeakPtrIS5_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryEFvvEJNS_7WeakPtrIS6_EEEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE) #15, !noalias !6
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*)* @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery8CompleteEv to i64), i64 0>, <2 x i64>* %22, align 8, !noalias !6
  %23 = getelementptr inbounds i8, i8* %19, i64 48
  %24 = bitcast i8* %23 to %"class.base::internal::WeakReference"*
  %25 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %24, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %25) #15, !noalias !6
  %26 = getelementptr inbounds i8, i8* %19, i64 56
  %27 = bitcast i8* %26 to i64*
  %28 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !6
  store i64 %29, i64* %27, align 8, !noalias !6
  %30 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %19, i8** %30, align 8, !alias.scope !6
  %31 = bitcast %"class.gpu::gles2::GLES2Decoder"* %11 to void (%"class.gpu::gles2::GLES2Decoder"*, %"class.base::OnceCallback"*)***
  %32 = load void (%"class.gpu::gles2::GLES2Decoder"*, %"class.base::OnceCallback"*)**, void (%"class.gpu::gles2::GLES2Decoder"*, %"class.base::OnceCallback"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Decoder"*, %"class.base::OnceCallback"*)*, void (%"class.gpu::gles2::GLES2Decoder"*, %"class.base::OnceCallback"*)** %32, i64 29
  %34 = load void (%"class.gpu::gles2::GLES2Decoder"*, %"class.base::OnceCallback"*)*, void (%"class.gpu::gles2::GLES2Decoder"*, %"class.base::OnceCallback"*)** %33, align 8
  call void %34(%"class.gpu::gles2::GLES2Decoder"* %11, %"class.base::OnceCallback"* nonnull %4) #15
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #15
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery12QueryCounterEi(%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* nocapture, i32) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery7ProcessEb(%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* nocapture, i1 zeroext) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery5PauseEv(%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery", %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 2, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery6ResumeEv(%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery", %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery7DestroyEb(%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* nocapture, i1 zeroext) unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery", %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0, i64 0, i32 0, i32 0, i32 8
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i8 1, i8* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryD2Ev(%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery", %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %2) #15
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery", %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryD0Ev(%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery", %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %2) #15
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery", %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %3) #15
  %4 = bitcast %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #16
  ret void
}

declare void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQuery8CompleteEv(%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery", %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gpu12QueryManager5Query15MarkAsCompletedEm(%"class.gpu::QueryManager::Query"* %2, i64 1) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryEFvvEJNS_7WeakPtrIS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #15
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"**
  %10 = load %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*, %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"** %9, align 8
  %11 = icmp eq %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #15
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #15
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*)**
  %37 = load void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*)*, void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %28) #15
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryEFvvEJNS_7WeakPtrIS5_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #15
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #16
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryEFvvEJNS_7WeakPtrIS6_EEEEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #15
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"**
  %9 = load %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"*, %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"** %8, align 8
  %10 = icmp ne %"class.gpu::gles2::(anonymous namespace)::AsyncReadPixelsCompletedQuery"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #15
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #6

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #6

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery5BeginEv(%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery", %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery3EndEi(%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery", %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery", %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 3, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery", %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* %0, i64 0, i32 0, i32 0, i32 6
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery", %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.gpu::gles2::GLES2QueryManager"*, %"class.gpu::gles2::GLES2QueryManager"** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %7, i64 0, i32 1
  %9 = load %"class.gpu::gles2::GLES2Decoder"*, %"class.gpu::gles2::GLES2Decoder"** %8, align 8
  %10 = getelementptr inbounds %"class.gpu::gles2::GLES2Decoder", %"class.gpu::gles2::GLES2Decoder"* %9, i64 0, i32 1
  %11 = bitcast %"class.gpu::DecoderContext"* %10 to %"class.gpu::gles2::ErrorState"* (%"class.gpu::DecoderContext"*)***
  %12 = load %"class.gpu::gles2::ErrorState"* (%"class.gpu::DecoderContext"*)**, %"class.gpu::gles2::ErrorState"* (%"class.gpu::DecoderContext"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.gpu::gles2::ErrorState"* (%"class.gpu::DecoderContext"*)*, %"class.gpu::gles2::ErrorState"* (%"class.gpu::DecoderContext"*)** %12, i64 30
  %14 = load %"class.gpu::gles2::ErrorState"* (%"class.gpu::DecoderContext"*)*, %"class.gpu::gles2::ErrorState"* (%"class.gpu::DecoderContext"*)** %13, align 8
  %15 = tail call %"class.gpu::gles2::ErrorState"* %14(%"class.gpu::DecoderContext"* %10) #15
  %16 = bitcast %"class.gpu::gles2::ErrorState"* %15 to i32 (%"class.gpu::gles2::ErrorState"*)***
  %17 = load i32 (%"class.gpu::gles2::ErrorState"*)**, i32 (%"class.gpu::gles2::ErrorState"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.gpu::gles2::ErrorState"*)*, i32 (%"class.gpu::gles2::ErrorState"*)** %17, i64 2
  %19 = load i32 (%"class.gpu::gles2::ErrorState"*)*, i32 (%"class.gpu::gles2::ErrorState"*)** %18, align 8
  %20 = tail call i32 %19(%"class.gpu::gles2::ErrorState"* %15) #15
  %21 = zext i32 %20 to i64
  tail call void @_ZN3gpu12QueryManager5Query15MarkAsCompletedEm(%"class.gpu::QueryManager::Query"* %3, i64 %21) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery12QueryCounterEi(%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* nocapture, i32) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery7ProcessEb(%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* nocapture, i1 zeroext) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery5PauseEv(%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery", %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 2, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery6ResumeEv(%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery", %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQuery7DestroyEb(%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* nocapture, i1 zeroext) unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery", %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* %0, i64 0, i32 0, i32 0, i32 8
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i8 1, i8* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles217GLES2QueryManager10GLES2QueryD2Ev(%"class.gpu::gles2::GLES2QueryManager::GLES2Query"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager::GLES2Query", %"class.gpu::gles2::GLES2QueryManager::GLES2Query"* %0, i64 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_113GetErrorQueryD0Ev(%"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery", %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %2) #15
  %3 = bitcast %"class.gpu::gles2::(anonymous namespace)::GetErrorQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery5BeginEv(%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.gpu::gles2::GLES2QueryManager"*, %"class.gpu::gles2::GLES2QueryManager"** %2, align 8
  %4 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %3, i64 0, i32 4
  %5 = load i8, i8* %4, align 2, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %3, i64 0, i32 0
  %9 = tail call %"class.gpu::QueryManager::Query"* @_ZN3gpu12QueryManager14GetActiveQueryEj(%"class.gpu::QueryManager"* %8, i32 35007) #15
  %10 = icmp eq %"class.gpu::QueryManager::Query"* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %3, i64 0, i32 8, i32 0
  %13 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %12, align 8
  %14 = tail call zeroext i1 @_ZN2gl15GPUTimingClient24CheckAndResetTimerErrorsEv(%"class.gl::GPUTimingClient"* %13) #15
  br label %15

15:                                               ; preds = %1, %7, %11
  %16 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 1, i32* %16, align 4
  %17 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %17, align 8
  tail call void @_ZN2gl8GPUTimer5StartEv(%"class.gl::GPUTimer"* %18) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery3EndEi(%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %3, align 8
  tail call void @_ZN2gl8GPUTimer3EndEv(%"class.gl::GPUTimer"* %4) #15
  %5 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load %"class.gpu::QueryManager"*, %"class.gpu::QueryManager"** %6, align 8
  tail call void @_ZN3gpu12QueryManager15AddPendingQueryEPNS0_5QueryEi(%"class.gpu::QueryManager"* %7, %"class.gpu::QueryManager::Query"* %5, i32 %1) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery12QueryCounterEi(%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* nocapture, i32) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery7ProcessEb(%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %3, align 8
  %5 = tail call zeroext i1 @_ZN2gl8GPUTimer11IsAvailableEv(%"class.gl::GPUTimer"* %4) #15
  br i1 %5, label %6, label %37

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.gpu::gles2::GLES2QueryManager"*, %"class.gpu::gles2::GLES2QueryManager"** %7, align 8
  %9 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %8, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %32, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %8, i64 0, i32 8, i32 0
  %14 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %13, align 8
  %15 = tail call zeroext i1 @_ZN2gl15GPUTimingClient24CheckAndResetTimerErrorsEv(%"class.gl::GPUTimingClient"* %14) #15
  br i1 %15, label %16, label %32

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %8, i64 0, i32 7
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %8, i64 0, i32 1
  %21 = bitcast %"class.gpu::gles2::GLES2Decoder"** %20 to %"class.gpu::CommonDecoder"**
  %22 = load %"class.gpu::CommonDecoder"*, %"class.gpu::CommonDecoder"** %21, align 8
  %23 = load i32, i32* %9, align 4
  %24 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %8, i64 0, i32 6
  %25 = load i32, i32* %24, align 8
  %26 = tail call i8* @_ZN3gpu13CommonDecoder22GetAddressAndCheckSizeEjjj(%"class.gpu::CommonDecoder"* %22, i32 %23, i32 %25, i32 4) #15
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %16
  store i32 -1, i32* %9, align 4
  store i32 0, i32* %24, align 8
  br label %32

29:                                               ; preds = %16
  %30 = load i32, i32* %17, align 4
  %31 = bitcast i8* %26 to i32*
  store atomic volatile i32 %30, i32* %31 release, align 4
  br label %32

32:                                               ; preds = %6, %12, %28, %29
  %33 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %3, align 8
  %34 = tail call i64 @_ZN2gl8GPUTimer15GetDeltaElapsedEv(%"class.gl::GPUTimer"* %33) #15
  %35 = mul nsw i64 %34, 1000
  %36 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gpu12QueryManager5Query15MarkAsCompletedEm(%"class.gpu::QueryManager::Query"* %36, i64 %35) #15
  br label %37

37:                                               ; preds = %2, %32
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery5PauseEv(%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 2, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery6ResumeEv(%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQuery7DestroyEb(%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* nocapture readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %3, align 8
  tail call void @_ZN2gl8GPUTimer7DestroyEb(%"class.gl::GPUTimer"* %4, i1 zeroext %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQueryD2Ev(%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_116TimeElapsedQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %3, align 8
  store %"class.gl::GPUTimer"* null, %"class.gl::GPUTimer"** %3, align 8
  %5 = icmp eq %"class.gl::GPUTimer"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2gl8GPUTimerD1Ev(%"class.gl::GPUTimer"* nonnull %4) #15
  %7 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_116TimeElapsedQueryD0Ev(%"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_116TimeElapsedQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %3, align 8
  store %"class.gl::GPUTimer"* null, %"class.gl::GPUTimer"** %3, align 8
  %5 = icmp eq %"class.gl::GPUTimer"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2gl8GPUTimerD1Ev(%"class.gl::GPUTimer"* nonnull %4) #15
  %7 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery", %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %9) #15
  %10 = bitcast %"class.gpu::gles2::(anonymous namespace)::TimeElapsedQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  ret void
}

declare void @_ZN2gl8GPUTimer5StartEv(%"class.gl::GPUTimer"*) local_unnamed_addr #1

declare void @_ZN2gl8GPUTimer3EndEv(%"class.gl::GPUTimer"*) local_unnamed_addr #1

declare void @_ZN3gpu12QueryManager15AddPendingQueryEPNS0_5QueryEi(%"class.gpu::QueryManager"*, %"class.gpu::QueryManager::Query"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN2gl8GPUTimer11IsAvailableEv(%"class.gl::GPUTimer"*) local_unnamed_addr #1

declare i64 @_ZN2gl8GPUTimer15GetDeltaElapsedEv(%"class.gl::GPUTimer"*) local_unnamed_addr #1

declare void @_ZN2gl8GPUTimer7DestroyEb(%"class.gl::GPUTimer"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2gl8GPUTimerD1Ev(%"class.gl::GPUTimer"*) unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery5BeginEv(%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* nocapture) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery3EndEi(%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* nocapture, i32) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery12QueryCounterEi(%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.gpu::gles2::GLES2QueryManager"*, %"class.gpu::gles2::GLES2QueryManager"** %3, align 8
  %5 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %4, i64 0, i32 4
  %6 = load i8, i8* %5, align 2, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %4, i64 0, i32 0
  %10 = tail call %"class.gpu::QueryManager::Query"* @_ZN3gpu12QueryManager14GetActiveQueryEj(%"class.gpu::QueryManager"* %9, i32 35007) #15
  %11 = icmp eq %"class.gpu::QueryManager::Query"* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %4, i64 0, i32 8, i32 0
  %14 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %13, align 8
  %15 = tail call zeroext i1 @_ZN2gl15GPUTimingClient24CheckAndResetTimerErrorsEv(%"class.gl::GPUTimingClient"* %14) #15
  br label %16

16:                                               ; preds = %2, %8, %12
  %17 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 1, i32* %18, align 4
  %19 = load %"class.gpu::gles2::GLES2QueryManager"*, %"class.gpu::gles2::GLES2QueryManager"** %3, align 8
  %20 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %19, i64 0, i32 4
  store i8 1, i8* %20, align 2
  %21 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %21, align 8
  tail call void @_ZN2gl8GPUTimer14QueryTimeStampEv(%"class.gl::GPUTimer"* %22) #15
  %23 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load %"class.gpu::QueryManager"*, %"class.gpu::QueryManager"** %23, align 8
  tail call void @_ZN3gpu12QueryManager15AddPendingQueryEPNS0_5QueryEi(%"class.gpu::QueryManager"* %24, %"class.gpu::QueryManager::Query"* %17, i32 %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery7ProcessEb(%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %5, align 8
  %7 = tail call zeroext i1 @_ZN2gl8GPUTimer11IsAvailableEv(%"class.gl::GPUTimer"* %6) #15
  br i1 %7, label %8, label %41

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 0, i32 1
  %10 = load %"class.gpu::gles2::GLES2QueryManager"*, %"class.gpu::gles2::GLES2QueryManager"** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %10, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %34, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %10, i64 0, i32 8, i32 0
  %16 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %15, align 8
  %17 = tail call zeroext i1 @_ZN2gl15GPUTimingClient24CheckAndResetTimerErrorsEv(%"class.gl::GPUTimingClient"* %16) #15
  br i1 %17, label %18, label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %10, i64 0, i32 7
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %10, i64 0, i32 1
  %23 = bitcast %"class.gpu::gles2::GLES2Decoder"** %22 to %"class.gpu::CommonDecoder"**
  %24 = load %"class.gpu::CommonDecoder"*, %"class.gpu::CommonDecoder"** %23, align 8
  %25 = load i32, i32* %11, align 4
  %26 = getelementptr inbounds %"class.gpu::gles2::GLES2QueryManager", %"class.gpu::gles2::GLES2QueryManager"* %10, i64 0, i32 6
  %27 = load i32, i32* %26, align 8
  %28 = tail call i8* @_ZN3gpu13CommonDecoder22GetAddressAndCheckSizeEjjj(%"class.gpu::CommonDecoder"* %24, i32 %25, i32 %27, i32 4) #15
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %18
  store i32 -1, i32* %11, align 4
  store i32 0, i32* %26, align 8
  br label %34

31:                                               ; preds = %18
  %32 = load i32, i32* %19, align 4
  %33 = bitcast i8* %28 to i32*
  store atomic volatile i32 %32, i32* %33 release, align 4
  br label %34

34:                                               ; preds = %8, %14, %30, %31
  %35 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  store i64 0, i64* %3, align 8
  %36 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  store i64 0, i64* %4, align 8
  %37 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %5, align 8
  call void @_ZN2gl8GPUTimer21GetStartEndTimestampsEPlS1_(%"class.gl::GPUTimer"* %37, i64* nonnull %3, i64* nonnull %4) #15
  %38 = load i64, i64* %3, align 8
  %39 = mul nsw i64 %38, 1000
  %40 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 0, i32 0
  call void @_ZN3gpu12QueryManager5Query15MarkAsCompletedEm(%"class.gpu::QueryManager::Query"* %40, i64 %39) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  br label %41

41:                                               ; preds = %2, %34
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery5PauseEv(%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 2, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery6ResumeEv(%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQuery7DestroyEb(%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %3, align 8
  %5 = icmp eq %"class.gl::GPUTimer"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  tail call void @_ZN2gl8GPUTimer7DestroyEb(%"class.gl::GPUTimer"* nonnull %4, i1 zeroext %1) #15
  %7 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %3, align 8
  store %"class.gl::GPUTimer"* null, %"class.gl::GPUTimer"** %3, align 8
  %8 = icmp eq %"class.gl::GPUTimer"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  tail call void @_ZN2gl8GPUTimerD1Ev(%"class.gl::GPUTimer"* nonnull %7) #15
  %10 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %7, i64 0, i32 0
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %9, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQueryD2Ev(%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_114TimeStampQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %3, align 8
  store %"class.gl::GPUTimer"* null, %"class.gl::GPUTimer"** %3, align 8
  %5 = icmp eq %"class.gl::GPUTimer"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2gl8GPUTimerD1Ev(%"class.gl::GPUTimer"* nonnull %4) #15
  %7 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_114TimeStampQueryD0Ev(%"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_114TimeStampQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GPUTimer"*, %"class.gl::GPUTimer"** %3, align 8
  store %"class.gl::GPUTimer"* null, %"class.gl::GPUTimer"** %3, align 8
  %5 = icmp eq %"class.gl::GPUTimer"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2gl8GPUTimerD1Ev(%"class.gl::GPUTimer"* nonnull %4) #15
  %7 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery", %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %9) #15
  %10 = bitcast %"class.gpu::gles2::(anonymous namespace)::TimeStampQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  ret void
}

declare void @_ZN2gl8GPUTimer14QueryTimeStampEv(%"class.gl::GPUTimer"*) local_unnamed_addr #1

declare void @_ZN2gl8GPUTimer21GetStartEndTimestampsEPlS1_(%"class.gl::GPUTimer"*, i64*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryC2EPNS_12QueryManagerEj13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*, %"class.gpu::QueryManager"*, i32, %"class.gpu::Buffer"*, %"struct.gpu::QuerySync"*) unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"* %7, %"class.gpu::QueryManager"* %1, i32 %2, %"class.gpu::Buffer"* %3, %"struct.gpu::QuerySync"* %4) #15
  %8 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 1
  %10 = bitcast %"class.std::__1::vector.67"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #15
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #15
  store i32 0, i32* %6, align 4
  %12 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %13 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %12, i64 0, i32 0
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #15
  %15 = bitcast i8* %14 to %"class.gl::GLApi"**
  %16 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %15, align 8
  %17 = bitcast %"class.gl::GLApi"* %16 to void (%"class.gl::GLApi"*, i32, i32*)***
  %18 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %18, i64 152
  %20 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %19, align 8
  call void %20(%"class.gl::GLApi"* %16, i32 1, i32* nonnull %6) #15
  %21 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 1, i32 0, i32 1
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = icmp eq i32* %22, %24
  %26 = ptrtoint i32* %24 to i64
  br i1 %25, label %32, label %27

27:                                               ; preds = %5
  %28 = load i32, i32* %6, align 4
  store i32 %28, i32* %22, align 4
  %29 = getelementptr inbounds i32, i32* %22, i64 1
  %30 = ptrtoint i32* %29 to i64
  %31 = bitcast i32** %21 to i64*
  store i64 %30, i64* %31, align 8
  br label %89

32:                                               ; preds = %5
  %33 = ptrtoint i32* %22 to i64
  %34 = bitcast i32** %21 to i64*
  %35 = bitcast %"class.std::__1::vector.67"* %9 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %33, %36
  %38 = ashr exact i64 %37, 2
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 4611686018427387903
  br i1 %40, label %41, label %43

41:                                               ; preds = %32
  %42 = bitcast %"class.std::__1::vector.67"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #17
  unreachable

43:                                               ; preds = %32
  %44 = bitcast i32** %23 to i64*
  %45 = sub i64 %26, %36
  %46 = ashr exact i64 %45, 2
  %47 = icmp ult i64 %46, 2305843009213693951
  br i1 %47, label %48, label %56

48:                                               ; preds = %43
  %49 = ashr exact i64 %45, 1
  %50 = icmp ult i64 %49, %39
  %51 = select i1 %50, i64 %39, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %48
  %54 = icmp ugt i64 %51, 4611686018427387903
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  call void @abort() #17
  unreachable

56:                                               ; preds = %53, %43
  %57 = phi i64 [ %51, %53 ], [ 4611686018427387903, %43 ]
  %58 = shl i64 %57, 2
  %59 = call i8* @_Znwm(i64 %58) #16
  %60 = bitcast i8* %59 to i32*
  br label %61

61:                                               ; preds = %56, %48
  %62 = phi i64 [ %57, %56 ], [ 0, %48 ]
  %63 = phi i32* [ %60, %56 ], [ null, %48 ]
  %64 = getelementptr inbounds i32, i32* %63, i64 %38
  %65 = getelementptr inbounds i32, i32* %63, i64 %62
  %66 = ptrtoint i32* %65 to i64
  %67 = load i32, i32* %6, align 4
  store i32 %67, i32* %64, align 4
  %68 = getelementptr inbounds i32, i32* %64, i64 1
  %69 = ptrtoint i32* %68 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.67", %"class.std::__1::vector.67"* %9, i64 0, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = load i64, i64* %34, align 8
  %73 = ptrtoint i32* %71 to i64
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 2
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds i32, i32* %64, i64 %76
  %78 = ptrtoint i32* %77 to i64
  %79 = icmp sgt i64 %74, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %61
  %81 = bitcast i32* %77 to i8*
  %82 = bitcast i32* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %82, i64 %74, i1 false) #15
  %83 = load i32*, i32** %70, align 8
  br label %84

84:                                               ; preds = %80, %61
  %85 = phi i32* [ %71, %61 ], [ %83, %80 ]
  store i64 %78, i64* %35, align 8
  store i64 %69, i64* %34, align 8
  store i64 %66, i64* %44, align 8
  %86 = icmp eq i32* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %84
  %88 = bitcast i32* %85 to i8*
  call void @_ZdlPv(i8* %88) #16
  br label %89

89:                                               ; preds = %87, %84, %27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery5BeginEv(%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.67"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ugt i64 %10, 1
  %12 = inttoptr i64 %6 to i32*
  br i1 %11, label %13, label %45

13:                                               ; preds = %1
  %14 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %15 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %14, i64 0, i32 0
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #15
  %17 = bitcast i8* %16 to %"class.gl::GLApi"**
  %18 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %17, align 8
  %19 = load i64, i64* %5, align 8
  %20 = load i64, i64* %7, align 8
  %21 = sub i64 %19, %20
  %22 = lshr exact i64 %21, 2
  %23 = trunc i64 %22 to i32
  %24 = add i32 %23, -1
  %25 = inttoptr i64 %20 to i32*
  %26 = getelementptr inbounds i32, i32* %25, i64 1
  %27 = bitcast %"class.gl::GLApi"* %18 to void (%"class.gl::GLApi"*, i32, i32*)***
  %28 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %28, i64 90
  %30 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %29, align 8
  tail call void %30(%"class.gl::GLApi"* %18, i32 %24, i32* %26) #15
  %31 = load i64, i64* %5, align 8
  %32 = load i64, i64* %7, align 8
  %33 = sub i64 %31, %32
  %34 = ashr exact i64 %33, 2
  %35 = icmp eq i64 %33, 0
  %36 = inttoptr i64 %32 to i32*
  br i1 %35, label %37, label %40

37:                                               ; preds = %13
  %38 = sub nuw nsw i64 1, %34
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.67"* %3, i64 %38) #15
  %39 = load i32*, i32** %4, align 8
  br label %45

40:                                               ; preds = %13
  %41 = inttoptr i64 %31 to i32*
  %42 = icmp ugt i64 %34, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = getelementptr inbounds i32, i32* %36, i64 1
  store i32* %44, i32** %4, align 8
  br label %45

45:                                               ; preds = %43, %40, %37, %1
  %46 = phi i32* [ %44, %43 ], [ %41, %40 ], [ %39, %37 ], [ %12, %1 ]
  %47 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds i32, i32* %46, i64 -1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 2
  %52 = load %"class.gpu::QueryManager"*, %"class.gpu::QueryManager"** %51, align 8
  tail call void @_ZN3gpu12QueryManager16BeginQueryHelperEjj(%"class.gpu::QueryManager"* %52, i32 %48, i32 %50) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery3EndEi(%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.gpu::QueryManager"*, %"class.gpu::QueryManager"** %6, align 8
  tail call void @_ZN3gpu12QueryManager14EndQueryHelperEj(%"class.gpu::QueryManager"* %7, i32 %5) #15
  %8 = load %"class.gpu::QueryManager"*, %"class.gpu::QueryManager"** %6, align 8
  tail call void @_ZN3gpu12QueryManager15AddPendingQueryEPNS0_5QueryEi(%"class.gpu::QueryManager"* %8, %"class.gpu::QueryManager::Query"* %3, i32 %1) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery12QueryCounterEi(%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* nocapture, i32) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_112BooleanQuery7ProcessEb(%"class.gpu::gles2::(anonymous namespace)::BooleanQuery"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #15
  store i32 0, i32* %3, align 4
  %6 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %7 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %6, i64 0, i32 0
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #15
  %9 = bitcast i8* %8 to %"class.gl::GLApi"**
  %10 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::BooleanQuery", %"class.gpu::gles2::(anonymous namespace)::BooleanQuery"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 -1
  %14 = load i32, i32* %13, align 4
  %15 = bitcast %"class.gl::GLApi"* %10 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %16 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %16, i64 227
  %18 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %17, align 8
  call void %18(%"class.gl::GLApi"* %10, i32 %14, i32 34919, i32* nonnull %3) #15
  %19 = load i32, i32* %3, align 4
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #15
  br i1 %20, label %49, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::BooleanQuery", %"class.gpu::gles2::(anonymous namespace)::BooleanQuery"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = load i32*, i32** %11, align 8
  %25 = icmp eq i32* %23, %24
  br i1 %25, label %47, label %26

26:                                               ; preds = %21
  %27 = bitcast i32* %4 to i8*
  br label %28

28:                                               ; preds = %26, %42
  %29 = phi i32* [ %23, %26 ], [ %43, %42 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #15
  store i32 0, i32* %4, align 4
  %30 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %31 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %30, i64 0, i32 0
  %32 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %31) #15
  %33 = bitcast i8* %32 to %"class.gl::GLApi"**
  %34 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %33, align 8
  %35 = load i32, i32* %29, align 4
  %36 = bitcast %"class.gl::GLApi"* %34 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %37 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %37, i64 227
  %39 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %38, align 8
  call void %39(%"class.gl::GLApi"* %34, i32 %35, i32 34918, i32* nonnull %4) #15
  %40 = load i32, i32* %4, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #15
  %43 = getelementptr inbounds i32, i32* %29, i64 1
  %44 = icmp eq i32* %43, %24
  br i1 %44, label %47, label %28

45:                                               ; preds = %28
  %46 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::BooleanQuery", %"class.gpu::gles2::(anonymous namespace)::BooleanQuery"* %0, i64 0, i32 0, i32 0
  call void @_ZN3gpu12QueryManager5Query15MarkAsCompletedEm(%"class.gpu::QueryManager::Query"* %46, i64 1) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #15
  br label %49

47:                                               ; preds = %42, %21
  %48 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::BooleanQuery", %"class.gpu::gles2::(anonymous namespace)::BooleanQuery"* %0, i64 0, i32 0, i32 0
  call void @_ZN3gpu12QueryManager5Query15MarkAsCompletedEm(%"class.gpu::QueryManager::Query"* %48, i64 0) #15
  br label %49

49:                                               ; preds = %2, %45, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery5PauseEv(%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 7
  store i32 2, i32* %2, align 4
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.gpu::QueryManager"*, %"class.gpu::QueryManager"** %5, align 8
  tail call void @_ZN3gpu12QueryManager14EndQueryHelperEj(%"class.gpu::QueryManager"* %6, i32 %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery6ResumeEv(%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 7
  store i32 1, i32* %3, align 4
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #15
  store i32 0, i32* %2, align 4
  %5 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %6 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %5, i64 0, i32 0
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #15
  %8 = bitcast i8* %7 to %"class.gl::GLApi"**
  %9 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %8, align 8
  %10 = bitcast %"class.gl::GLApi"* %9 to void (%"class.gl::GLApi"*, i32, i32*)***
  %11 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %11, i64 152
  %13 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %12, align 8
  call void %13(%"class.gl::GLApi"* %9, i32 1, i32* nonnull %2) #15
  %14 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %16, %18
  %20 = ptrtoint i32* %18 to i64
  br i1 %19, label %26, label %21

21:                                               ; preds = %1
  %22 = load i32, i32* %2, align 4
  store i32 %22, i32* %16, align 4
  %23 = getelementptr inbounds i32, i32* %16, i64 1
  %24 = ptrtoint i32* %23 to i64
  %25 = bitcast i32** %15 to i64*
  store i64 %24, i64* %25, align 8
  br label %84

26:                                               ; preds = %1
  %27 = ptrtoint i32* %16 to i64
  %28 = bitcast i32** %15 to i64*
  %29 = bitcast %"class.std::__1::vector.67"* %14 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %27, %30
  %32 = ashr exact i64 %31, 2
  %33 = add nsw i64 %32, 1
  %34 = icmp ugt i64 %33, 4611686018427387903
  br i1 %34, label %35, label %37

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::vector.67"* %14 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #17
  unreachable

37:                                               ; preds = %26
  %38 = bitcast i32** %17 to i64*
  %39 = sub i64 %20, %30
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %37
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %33
  %45 = select i1 %44, i64 %33, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  call void @abort() #17
  unreachable

50:                                               ; preds = %47, %37
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %37 ]
  %52 = shl i64 %51, 2
  %53 = call i8* @_Znwm(i64 %52) #16
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %32
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = ptrtoint i32* %59 to i64
  %61 = load i32, i32* %2, align 4
  store i32 %61, i32* %58, align 4
  %62 = getelementptr inbounds i32, i32* %58, i64 1
  %63 = ptrtoint i32* %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.67", %"class.std::__1::vector.67"* %14, i64 0, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = load i64, i64* %28, align 8
  %67 = ptrtoint i32* %65 to i64
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 2
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds i32, i32* %58, i64 %70
  %72 = ptrtoint i32* %71 to i64
  %73 = icmp sgt i64 %68, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %55
  %75 = bitcast i32* %71 to i8*
  %76 = bitcast i32* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %76, i64 %68, i1 false) #15
  %77 = load i32*, i32** %64, align 8
  br label %78

78:                                               ; preds = %74, %55
  %79 = phi i32* [ %65, %55 ], [ %77, %74 ]
  store i64 %72, i64* %29, align 8
  store i64 %63, i64* %28, align 8
  store i64 %60, i64* %38, align 8
  %80 = icmp eq i32* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %78
  %82 = bitcast i32* %79 to i8*
  call void @_ZdlPv(i8* %82) #16
  %83 = load i32*, i32** %15, align 8
  br label %84

84:                                               ; preds = %21, %78, %81
  %85 = phi i32* [ %23, %21 ], [ %62, %78 ], [ %83, %81 ]
  %86 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 3
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds i32, i32* %85, i64 -1
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 2
  %91 = load %"class.gpu::QueryManager"*, %"class.gpu::QueryManager"** %90, align 8
  call void @_ZN3gpu12QueryManager16BeginQueryHelperEjj(%"class.gpu::QueryManager"* %91, i32 %87, i32 %89) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQuery7DestroyEb(%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  br i1 %1, label %3, label %28

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 8
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %28

7:                                                ; preds = %3
  %8 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %9 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %8, i64 0, i32 0
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #15
  %11 = bitcast i8* %10 to %"class.gl::GLApi"**
  %12 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %11, align 8
  %13 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.67"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = lshr exact i64 %19, 2
  %21 = trunc i64 %20 to i32
  %22 = inttoptr i64 %18 to i32*
  %23 = bitcast %"class.gl::GLApi"* %12 to void (%"class.gl::GLApi"*, i32, i32*)***
  %24 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %24, i64 90
  %26 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %25, align 8
  tail call void %26(%"class.gl::GLApi"* %12, i32 %21, i32* %22) #15
  %27 = load i64, i64* %17, align 8
  store i64 %27, i64* %15, align 8
  store i8 1, i8* %4, align 8
  br label %28

28:                                               ; preds = %3, %7, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_112BooleanQueryD0Ev(%"class.gpu::gles2::(anonymous namespace)::BooleanQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::BooleanQuery", %"class.gpu::gles2::(anonymous namespace)::BooleanQuery"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::BooleanQuery", %"class.gpu::gles2::(anonymous namespace)::BooleanQuery"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::BooleanQuery", %"class.gpu::gles2::(anonymous namespace)::BooleanQuery"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::BooleanQuery", %"class.gpu::gles2::(anonymous namespace)::BooleanQuery"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %12) #15
  %13 = bitcast %"class.gpu::gles2::(anonymous namespace)::BooleanQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #16
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryD0Ev(%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.67"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.67", %"class.std::__1::vector.67"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.67", %"class.std::__1::vector.67"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #15
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.67"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.67"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #17
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #17
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #16
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #15
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.67", %"class.std::__1::vector.67"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #15
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #16
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

declare void @_ZN3gpu12QueryManager16BeginQueryHelperEjj(%"class.gpu::QueryManager"*, i32, i32) local_unnamed_addr #1

declare void @_ZN3gpu12QueryManager14EndQueryHelperEj(%"class.gpu::QueryManager"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_118SummedIntegerQuery7ProcessEb(%"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #15
  store i32 0, i32* %3, align 4
  %6 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %7 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %6, i64 0, i32 0
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #15
  %9 = bitcast i8* %8 to %"class.gl::GLApi"**
  %10 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 -1
  %14 = load i32, i32* %13, align 4
  %15 = bitcast %"class.gl::GLApi"* %10 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %16 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %16, i64 227
  %18 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %17, align 8
  call void %18(%"class.gl::GLApi"* %10, i32 %14, i32 34919, i32* nonnull %3) #15
  %19 = load i32, i32* %3, align 4
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #15
  br i1 %20, label %50, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = load i32*, i32** %11, align 8
  %25 = icmp eq i32* %23, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  %27 = bitcast i32* %4 to i8*
  br label %33

28:                                               ; preds = %33
  %29 = zext i32 %47 to i64
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i64 [ 0, %21 ], [ %29, %28 ]
  %32 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery"* %0, i64 0, i32 0, i32 0
  call void @_ZN3gpu12QueryManager5Query15MarkAsCompletedEm(%"class.gpu::QueryManager::Query"* %32, i64 %31) #15
  br label %50

33:                                               ; preds = %26, %33
  %34 = phi i32 [ 0, %26 ], [ %47, %33 ]
  %35 = phi i32* [ %23, %26 ], [ %48, %33 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #15
  store i32 0, i32* %4, align 4
  %36 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %37 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %36, i64 0, i32 0
  %38 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #15
  %39 = bitcast i8* %38 to %"class.gl::GLApi"**
  %40 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %39, align 8
  %41 = load i32, i32* %35, align 4
  %42 = bitcast %"class.gl::GLApi"* %40 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %43 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %43, i64 227
  %45 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %44, align 8
  call void %45(%"class.gl::GLApi"* %40, i32 %41, i32 34918, i32* nonnull %4) #15
  %46 = load i32, i32* %4, align 4
  %47 = add i32 %46, %34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #15
  %48 = getelementptr inbounds i32, i32* %35, i64 1
  %49 = icmp eq i32* %48, %24
  br i1 %49, label %28, label %33

50:                                               ; preds = %2, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryD2Ev(%"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::AbstractIntegerQuery"* %0, i64 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_118SummedIntegerQueryD0Ev(%"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_120AbstractIntegerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery", %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %12) #15
  %13 = bitcast %"class.gpu::gles2::(anonymous namespace)::SummedIntegerQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #16
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"*) unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIjJNS_4pairIjS6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::pair.161"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #15, !range !11
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %147, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 32) #16, !noalias !12
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4, !noalias !12
  store i32 %59, i32* %57, align 8, !noalias !12
  %60 = getelementptr inbounds i8, i8* %55, i64 24
  %61 = getelementptr inbounds %"struct.std::__1::pair.161", %"struct.std::__1::pair.161"* %2, i64 0, i32 1
  %62 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %61, i64 0, i32 0
  %63 = bitcast %class.scoped_refptr* %61 to i64*
  %64 = load i64, i64* %63, align 8, !noalias !12
  %65 = bitcast i8* %60 to i64*
  store i64 %64, i64* %65, align 8, !noalias !12
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %62, align 8, !noalias !12
  %66 = getelementptr inbounds i8, i8* %55, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %5, i64* %67, align 8, !noalias !12
  %68 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %68, align 8, !noalias !12
  %69 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %7 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %8, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %53
  %80 = shl i64 %7, 1
  %81 = icmp ult i64 %7, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %7) #15, !range !11
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #15
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %91)
  %92 = load i64, i64* %6, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #15, !range !11
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %5
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %5
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %5, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %53
  %103 = phi i64 [ %7, %53 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %54, %53 ], [ %97, %95 ], [ %5, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %55 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i8**
  store i8* %55, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base"* %111, %"struct.std::__1::__hash_node_base"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #15, !range !11
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %55 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %55, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %48, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %48 ]
  %149 = phi %"struct.std::__1::__hash_node_base"* [ %144, %143 ], [ %31, %48 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !11
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !11
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !11
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !15

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !11
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #16
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

declare i8* @_ZN3gpu13CommonDecoder22GetAddressAndCheckSizeEjjj(%"class.gpu::CommonDecoder"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4base15SupportsWeakPtrIN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryEE9AsWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZN4base15SupportsWeakPtrIN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryEE9AsWeakPtrEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIMN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryEFvvEJNS_7WeakPtrIS4_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIMN3gpu5gles212_GLOBAL__N_129AsyncReadPixelsCompletedQueryEFvvEJNS_7WeakPtrIS4_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!11 = !{i64 0, i64 65}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashINS_4pairIjS6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashINS_4pairIjS6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISP_EEEEEEmOT_DpOT0_"}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
