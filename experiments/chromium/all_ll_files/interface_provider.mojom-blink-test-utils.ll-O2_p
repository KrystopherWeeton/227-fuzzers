; ModuleID = 'gen/services/service_manager/public/mojom/interface_provider.mojom-blink-test-utils.cc'
source_filename = "gen/services/service_manager/public/mojom/interface_provider.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.service_manager::mojom::blink::InterfaceProviderAsyncWaiter" = type { %"class.service_manager::mojom::blink::InterfaceProvider"* }
%"class.service_manager::mojom::blink::InterfaceProvider" = type { i32 (...)** }
%"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting" = type { %"class.service_manager::mojom::blink::InterfaceProvider" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }

$_ZN15service_manager5mojom5blink17InterfaceProviderD2Ev = comdat any

$_ZN15service_manager5mojom5blink38InterfaceProviderInterceptorForTestingD0Ev = comdat any

@_ZTVN15service_manager5mojom5blink38InterfaceProviderInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.service_manager::mojom::blink::InterfaceProvider"*)* @_ZN15service_manager5mojom5blink17InterfaceProviderD2Ev to i8*), i8* bitcast (void (%"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting"*)* @_ZN15service_manager5mojom5blink38InterfaceProviderInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting"*, %"class.WTF::String"*, %"class.mojo::ScopedHandleBase"*)* @_ZN15service_manager5mojom5blink38InterfaceProviderInterceptorForTesting12GetInterfaceERKN3WTF6StringEN4mojo16ScopedHandleBaseINS7_17MessagePipeHandleEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN15service_manager5mojom5blink28InterfaceProviderAsyncWaiterC1EPNS1_17InterfaceProviderE = hidden unnamed_addr alias void (%"class.service_manager::mojom::blink::InterfaceProviderAsyncWaiter"*, %"class.service_manager::mojom::blink::InterfaceProvider"*), void (%"class.service_manager::mojom::blink::InterfaceProviderAsyncWaiter"*, %"class.service_manager::mojom::blink::InterfaceProvider"*)* @_ZN15service_manager5mojom5blink28InterfaceProviderAsyncWaiterC2EPNS1_17InterfaceProviderE
@_ZN15service_manager5mojom5blink28InterfaceProviderAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.service_manager::mojom::blink::InterfaceProviderAsyncWaiter"*), void (%"class.service_manager::mojom::blink::InterfaceProviderAsyncWaiter"*)* @_ZN15service_manager5mojom5blink28InterfaceProviderAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15service_manager5mojom5blink38InterfaceProviderInterceptorForTesting12GetInterfaceERKN3WTF6StringEN4mojo16ScopedHandleBaseINS7_17MessagePipeHandleEEE(%"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.mojo::ScopedHandleBase"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = bitcast %"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting"* %0 to %"class.service_manager::mojom::blink::InterfaceProvider"* (%"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting"*)***
  %6 = load %"class.service_manager::mojom::blink::InterfaceProvider"* (%"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting"*)**, %"class.service_manager::mojom::blink::InterfaceProvider"* (%"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.service_manager::mojom::blink::InterfaceProvider"* (%"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting"*)*, %"class.service_manager::mojom::blink::InterfaceProvider"* (%"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting"*)** %6, i64 3
  %8 = load %"class.service_manager::mojom::blink::InterfaceProvider"* (%"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting"*)*, %"class.service_manager::mojom::blink::InterfaceProvider"* (%"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.service_manager::mojom::blink::InterfaceProvider"* %8(%"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting"* %0) #6
  %10 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4, !noalias !2
  store i32 %12, i32* %10, align 4, !alias.scope !2
  store i32 0, i32* %11, align 4, !noalias !2
  %13 = bitcast %"class.service_manager::mojom::blink::InterfaceProvider"* %9 to void (%"class.service_manager::mojom::blink::InterfaceProvider"*, %"class.WTF::String"*, %"class.mojo::ScopedHandleBase"*)***
  %14 = load void (%"class.service_manager::mojom::blink::InterfaceProvider"*, %"class.WTF::String"*, %"class.mojo::ScopedHandleBase"*)**, void (%"class.service_manager::mojom::blink::InterfaceProvider"*, %"class.WTF::String"*, %"class.mojo::ScopedHandleBase"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.service_manager::mojom::blink::InterfaceProvider"*, %"class.WTF::String"*, %"class.mojo::ScopedHandleBase"*)*, void (%"class.service_manager::mojom::blink::InterfaceProvider"*, %"class.WTF::String"*, %"class.mojo::ScopedHandleBase"*)** %14, i64 2
  %16 = load void (%"class.service_manager::mojom::blink::InterfaceProvider"*, %"class.WTF::String"*, %"class.mojo::ScopedHandleBase"*)*, void (%"class.service_manager::mojom::blink::InterfaceProvider"*, %"class.WTF::String"*, %"class.mojo::ScopedHandleBase"*)** %15, align 8
  call void %16(%"class.service_manager::mojom::blink::InterfaceProvider"* %9, %"class.WTF::String"* dereferenceable(8) %1, %"class.mojo::ScopedHandleBase"* nonnull %4) #6
  %17 = load i32, i32* %10, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %3
  %20 = call i32 @MojoClose(i32 %17) #6
  br label %21

21:                                               ; preds = %3, %19
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15service_manager5mojom5blink28InterfaceProviderAsyncWaiterC2EPNS1_17InterfaceProviderE(%"class.service_manager::mojom::blink::InterfaceProviderAsyncWaiter"* nocapture, %"class.service_manager::mojom::blink::InterfaceProvider"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.service_manager::mojom::blink::InterfaceProviderAsyncWaiter", %"class.service_manager::mojom::blink::InterfaceProviderAsyncWaiter"* %0, i64 0, i32 0
  store %"class.service_manager::mojom::blink::InterfaceProvider"* %1, %"class.service_manager::mojom::blink::InterfaceProvider"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN15service_manager5mojom5blink28InterfaceProviderAsyncWaiterD2Ev(%"class.service_manager::mojom::blink::InterfaceProviderAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15service_manager5mojom5blink17InterfaceProviderD2Ev(%"class.service_manager::mojom::blink::InterfaceProvider"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15service_manager5mojom5blink38InterfaceProviderInterceptorForTestingD0Ev(%"class.service_manager::mojom::blink::InterfaceProviderInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare i32 @MojoClose(i32) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!4 = distinct !{!4, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
