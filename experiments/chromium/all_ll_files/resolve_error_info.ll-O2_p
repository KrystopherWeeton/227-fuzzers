; ModuleID = '../../net/dns/public/resolve_error_info.cc'
source_filename = "../../net/dns/public/resolve_error_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>

@_ZN3net16ResolveErrorInfoC1Ev = hidden unnamed_addr alias void (%"struct.net::ResolveErrorInfo"*), void (%"struct.net::ResolveErrorInfo"*)* @_ZN3net16ResolveErrorInfoC2Ev
@_ZN3net16ResolveErrorInfoC1Eib = hidden unnamed_addr alias void (%"struct.net::ResolveErrorInfo"*, i32, i1), void (%"struct.net::ResolveErrorInfo"*, i32, i1)* @_ZN3net16ResolveErrorInfoC2Eib
@_ZN3net16ResolveErrorInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.net::ResolveErrorInfo"*, %"struct.net::ResolveErrorInfo"*), void (%"struct.net::ResolveErrorInfo"*, %"struct.net::ResolveErrorInfo"*)* @_ZN3net16ResolveErrorInfoC2ERKS0_
@_ZN3net16ResolveErrorInfoC1EOS0_ = hidden unnamed_addr alias void (%"struct.net::ResolveErrorInfo"*, %"struct.net::ResolveErrorInfo"*), void (%"struct.net::ResolveErrorInfo"*, %"struct.net::ResolveErrorInfo"*)* @_ZN3net16ResolveErrorInfoC2EOS0_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net16ResolveErrorInfoC2Ev(%"struct.net::ResolveErrorInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::ResolveErrorInfo", %"struct.net::ResolveErrorInfo"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.net::ResolveErrorInfo", %"struct.net::ResolveErrorInfo"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net16ResolveErrorInfoC2Eib(%"struct.net::ResolveErrorInfo"* nocapture, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"struct.net::ResolveErrorInfo", %"struct.net::ResolveErrorInfo"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.net::ResolveErrorInfo", %"struct.net::ResolveErrorInfo"* %0, i64 0, i32 1
  store i8 %4, i8* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16ResolveErrorInfoC2ERKS0_(%"struct.net::ResolveErrorInfo"* nocapture, %"struct.net::ResolveErrorInfo"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.net::ResolveErrorInfo"* %0 to i8*
  %4 = bitcast %"struct.net::ResolveErrorInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 5, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16ResolveErrorInfoC2EOS0_(%"struct.net::ResolveErrorInfo"* nocapture, %"struct.net::ResolveErrorInfo"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.net::ResolveErrorInfo"* %0 to i8*
  %4 = bitcast %"struct.net::ResolveErrorInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 5, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSERKS0_(%"struct.net::ResolveErrorInfo"* returned, %"struct.net::ResolveErrorInfo"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.net::ResolveErrorInfo"* %0 to i8*
  %4 = bitcast %"struct.net::ResolveErrorInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 5, i1 false)
  ret %"struct.net::ResolveErrorInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSEOS0_(%"struct.net::ResolveErrorInfo"* returned, %"struct.net::ResolveErrorInfo"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.net::ResolveErrorInfo"* %0 to i8*
  %4 = bitcast %"struct.net::ResolveErrorInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 5, i1 false)
  ret %"struct.net::ResolveErrorInfo"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net16ResolveErrorInfoeqERKS0_(%"struct.net::ResolveErrorInfo"* nocapture readonly, %"struct.net::ResolveErrorInfo"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.net::ResolveErrorInfo", %"struct.net::ResolveErrorInfo"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.net::ResolveErrorInfo", %"struct.net::ResolveErrorInfo"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.net::ResolveErrorInfo", %"struct.net::ResolveErrorInfo"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = getelementptr inbounds %"struct.net::ResolveErrorInfo", %"struct.net::ResolveErrorInfo"* %1, i64 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %10, %12
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net16ResolveErrorInfoneERKS0_(%"struct.net::ResolveErrorInfo"* nocapture readonly, %"struct.net::ResolveErrorInfo"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.net::ResolveErrorInfo", %"struct.net::ResolveErrorInfo"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.net::ResolveErrorInfo", %"struct.net::ResolveErrorInfo"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.net::ResolveErrorInfo", %"struct.net::ResolveErrorInfo"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = getelementptr inbounds %"struct.net::ResolveErrorInfo", %"struct.net::ResolveErrorInfo"* %1, i64 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp ne i8 %10, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ true, %2 ], [ %13, %8 ]
  ret i1 %15
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
