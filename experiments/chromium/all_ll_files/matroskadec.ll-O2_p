; ModuleID = '../../third_party/ffmpeg/libavformat/matroskadec.c'
source_filename = "../../third_party/ffmpeg/libavformat/matroskadec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32, i32 }
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, {}*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVCodecInternal = type { i32, i32, %struct.AVFrame*, %struct.AVBufferRef*, i8*, %struct.DecodeSimpleContext, %struct.AVBSFContext*, %struct.AVPacket*, %struct.AVFifoBuffer*, i8*, i32, i8*, %struct.EncodeSimpleContext, i32, i8*, i32, %struct.AVPacket*, %struct.AVFrame*, i32, i32, i64, i64, %struct.AVFrame*, %struct.AVPacket*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.DecodeSimpleContext = type { %struct.AVPacket* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVFifoBuffer = type { i8*, i8*, i8*, i8*, i32, i32 }
%struct.EncodeSimpleContext = type { %struct.AVFrame* }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext*, i32, %struct.AVCodecContext*, i32, i32, %struct.anon, i32, i32, %struct.FFFrac*, %struct.anon.0*, %struct.AVIndexEntry*, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], [17 x i64], i64, i8, i8, i32, %struct.AVRational, %struct.AVProbeData, %struct.AVPacketList* }
%struct.anon = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.anon.0 = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.CodecMime = type { [32 x i8], i32 }
%struct.EbmlSyntax = type { i32, i8, i8, i64, i64, %union.anon.2 }
%union.anon.2 = type { i64 }
%struct.CodecTags = type { [22 x i8], i32 }
%struct.AVMetadataConv = type { i8*, i8* }
%struct.AVSphericalMapping = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVContentLightMetadata = type { i32, i32 }
%struct.Ebml = type { i64, i64, i64, i8*, i64 }
%struct.MatroskaDemuxContext = type { %struct.AVClass*, %struct.AVFormatContext*, [16 x %struct.MatroskaLevel], i32, i32, i64, i32, i64, double, i8*, i8*, %struct.EbmlBin, %struct.EbmlList, %struct.EbmlList, %struct.EbmlList, %struct.EbmlList, %struct.EbmlList, %struct.EbmlList, i64, %struct.AVPacketList*, %struct.AVPacketList*, i32, i32, i64, i32, [64 x %struct.MatroskaLevel1Element], i32, %struct.MatroskaCluster, i32, i32 }
%struct.MatroskaLevel = type { i64, i64 }
%struct.EbmlBin = type { i32, %struct.AVBufferRef*, i8*, i64 }
%struct.EbmlList = type { i32, i32, i8* }
%struct.MatroskaLevel1Element = type { i64, i32, i32 }
%struct.MatroskaCluster = type { %struct.MatroskaBlock, i64, i64 }
%struct.MatroskaBlock = type { i64, %struct.CountedElement, i64, %struct.EbmlBin, i64, %struct.EbmlBin, i64 }
%struct.CountedElement = type { %union.anon.1, i32 }
%union.anon.1 = type { i64 }
%struct.MatroskaSeekhead = type { i64, i64 }
%struct.MatroskaTrack = type { i64, i64, i64, i8*, i8*, %struct.EbmlBin, i8*, double, i64, i64, i64, i64, i64, i64, i64, %struct.CountedElement, i64, %struct.MatroskaTrackVideo, %struct.MatroskaTrackAudio, %struct.MatroskaTrackOperation, %struct.EbmlList, i64, i64, %struct.AVStream*, i64, i32, i32, i64, [256 x i32], i32 }
%struct.MatroskaTrackVideo = type { double, i64, i64, i64, i64, %struct.EbmlBin, i64, i64, i64, i64, i64, %struct.EbmlList, %struct.MatroskaTrackVideoProjection }
%struct.MatroskaTrackVideoProjection = type { i64, %struct.EbmlBin, double, double, double }
%struct.MatroskaTrackAudio = type { double, double, i64, i64, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.MatroskaTrackOperation = type { %struct.EbmlList }
%struct.MatroskaTrackEncoding = type { i64, i64, %struct.MatroskaTrackCompression, %struct.MatroskaTrackEncryption }
%struct.MatroskaTrackCompression = type { i64, %struct.EbmlBin }
%struct.MatroskaTrackEncryption = type { i64, %struct.EbmlBin }
%struct.AVDictionaryEntry = type { i8*, i8* }
%struct.MatroskaTrackPlane = type { i64, i64 }
%struct.MatroskaTrackVideoColor = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.MatroskaMasteringMeta }
%struct.MatroskaMasteringMeta = type { double, double, double, double, double, double, double, double, double, %struct.CountedElement }
%struct.MatroskaAttachment = type { i64, i8*, i8*, i8*, %struct.EbmlBin, %struct.AVStream* }
%struct.MatroskaChapter = type { i64, i64, i64, i8*, %struct.AVChapter* }
%struct.MatroskaTags = type { %struct.MatroskaTagTarget, %struct.EbmlList }
%struct.MatroskaTagTarget = type { i8*, i64, i64, i64, i64 }
%struct.MatroskaIndex = type { i64, %struct.EbmlList }
%struct.MatroskaIndexPos = type { i64, i64 }
%struct.MatroskaTag = type { i8*, i8*, i8*, i64, %struct.EbmlList }

@.str = private unnamed_addr constant [14 x i8] c"matroska,webm\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"Matroska / WebM\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"mkv,mk3d,mka,mks,webm\00", align 1
@.str.3 = private unnamed_addr constant [56 x i8] c"audio/webm,audio/x-matroska,video/webm,video/x-matroska\00", align 1
@ff_matroska_demuxer = hidden local_unnamed_addr global %struct.AVInputFormat { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i32 0, i32 0), %struct.AVCodecTag** null, %struct.AVClass* null, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3, i32 0, i32 0), %struct.AVInputFormat* null, i32 0, i32 1672, i32 (%struct.AVProbeData*)* @matroska_probe, i32 (%struct.AVFormatContext*)* @matroska_read_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @matroska_read_packet, i32 (%struct.AVFormatContext*)* @matroska_read_close, i32 (%struct.AVFormatContext*, i32, i64, i32)* @matroska_read_seek, i64 (%struct.AVFormatContext*, i32, i64*, i64)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null }, align 8
@.str.4 = private unnamed_addr constant [19 x i8] c"webm_dash_manifest\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"WebM DASH Manifest\00", align 1
@webm_dash_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.140, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([3 x %struct.AVOption], [3 x %struct.AVOption]* @options, i32 0, i32 0), i32 3687524, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null, %struct.AVClass* (i8**)* null }, align 8
@ff_webm_dash_manifest_demuxer = hidden local_unnamed_addr global %struct.AVInputFormat { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i32 0, i32 0), i32 0, i8* null, %struct.AVCodecTag** null, %struct.AVClass* @webm_dash_class, i8* null, %struct.AVInputFormat* null, i32 0, i32 1672, i32 (%struct.AVProbeData*)* null, i32 (%struct.AVFormatContext*)* @webm_dash_manifest_read_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @webm_dash_manifest_read_packet, i32 (%struct.AVFormatContext*)* @matroska_read_close, i32 (%struct.AVFormatContext*, i32, i64, i32)* null, i64 (%struct.AVFormatContext*, i32, i64*, i64)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null }, align 8
@.str.6 = private unnamed_addr constant [9 x i8] c"matroska\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"webm\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"EBML header parsing failed\0A\00", align 1
@.str.9 = private unnamed_addr constant [46 x i8] c"EBML version %lu, doctype %s, doc version %lu\00", align 1
@.str.10 = private unnamed_addr constant [88 x i8] c"EBML header using unsupported features\0A(EBML version %lu, doctype %s, doc version %lu)\0A\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"Unknown EBML doctype '%s'\0A\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"encoder\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"incomplete attachment\0A\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"mimetype\00", align 1
@mkv_image_mime_tags = internal constant [5 x %struct.CodecMime] [%struct.CodecMime { [32 x i8] c"image/gif\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 97 }, %struct.CodecMime { [32 x i8] c"image/jpeg\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 7 }, %struct.CodecMime { [32 x i8] c"image/png\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 61 }, %struct.CodecMime { [32 x i8] c"image/tiff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 96 }, %struct.CodecMime zeroinitializer], align 16
@mkv_mime_tags = internal constant [6 x %struct.CodecMime] [%struct.CodecMime { [32 x i8] c"text/plain\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 94210 }, %struct.CodecMime { [32 x i8] c"application/x-truetype-font\00\00\00\00\00", i32 98304 }, %struct.CodecMime { [32 x i8] c"application/x-font\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 98304 }, %struct.CodecMime { [32 x i8] c"application/vnd.ms-opentype\00\00\00\00\00", i32 100355 }, %struct.CodecMime { [32 x i8] c"binary\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 100359 }, %struct.CodecMime zeroinitializer], align 16
@ebml_parse.max_lengths = internal unnamed_addr constant [10 x i64] [i64 -2, i64 8, i64 8, i64 8, i64 16777216, i64 16777216, i64 268435456, i64 0, i64 0, i64 0], align 16
@.str.17 = private unnamed_addr constant [44 x i8] c"File ended prematurely at pos. %lu (0x%lx)\0A\00", align 1
@.str.18 = private unnamed_addr constant [32 x i8] c"Unknown entry 0x%X at pos. %ld\0A\00", align 1
@.str.19 = private unnamed_addr constant [84 x i8] c"Element at 0x%lx ending at 0x%lx exceeds containing master element ending at 0x%lx\0A\00", align 1
@.str.20 = private unnamed_addr constant [63 x i8] c"Unknown-sized element at 0x%lx inside parent with finite size\0A\00", align 1
@.str.21 = private unnamed_addr constant [128 x i8] c"Found unknown-length element 0x%X other than a cluster at 0x%lx. Spec-incompliant, but parsing will nevertheless be attempted.\0A\00", align 1
@.str.22 = private unnamed_addr constant [64 x i8] c"Invalid length 0x%lx > 0x%lx for element with ID 0x%X at 0x%lx\0A\00", align 1
@.str.23 = private unnamed_addr constant [112 x i8] c"Element with ID 0x%X at pos. 0x%lx has unknown length, yet the length of an element of its type must be known.\0A\00", align 1
@.str.24 = private unnamed_addr constant [103 x i8] c"Found unknown-length element with ID 0x%X at pos. 0x%lx for which no syntax for parsing is available.\0A\00", align 1
@.str.25 = private unnamed_addr constant [141 x i8] c"Unknown element %X at pos. 0x%lx with length 0x%lx considered as invalid data. Last known good position 0x%lx, %d unknown elements in a row\0A\00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c"Duplicate element\0A\00", align 1
@.str.27 = private unnamed_addr constant [17 x i8] c"Invalid element\0A\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"Read error\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"File ended prematurely\0A\00", align 1
@ff_log2_tab = external local_unnamed_addr constant [256 x i8], align 16
@.str.30 = private unnamed_addr constant [65 x i8] c"0x00 at pos %ld (0x%lx) invalid as first byte of an EBML number\0A\00", align 1
@.str.31 = private unnamed_addr constant [101 x i8] c"Length %d indicated by an EBML number's first byte 0x%02x at pos %ld (0x%lx) exceeds max length %d.\0A\00", align 1
@.str.32 = private unnamed_addr constant [32 x i8] c"Read error at pos. %lu (0x%lx)\0A\00", align 1
@.str.33 = private unnamed_addr constant [43 x i8] c"File moves beyond max. allowed depth (%d)\0A\00", align 1
@.str.34 = private unnamed_addr constant [27 x i8] c"Too many level1 elements.\0A\00", align 1
@ebml_syntax = internal constant <{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 440786851, i8 7, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([8 x %struct.EbmlSyntax], [8 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @ebml_header to [8 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 408125543, i8 9, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax zeroinitializer }>, align 16
@.str.36 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@ebml_header = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 17143, i8 1, i8 0, i64 0, i64 0, %union.anon.2 { i64 1 } }, %struct.EbmlSyntax { i32 17139, i8 1, i8 0, i64 0, i64 8, %union.anon.2 { i64 8 } }, %struct.EbmlSyntax { i32 17138, i8 1, i8 0, i64 0, i64 16, %union.anon.2 { i64 4 } }, { i32, i8, i8, i64, i64, { i8* } } { i32 17026, i8 4, i8 0, i64 0, i64 24, { i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i32 0, i32 0) } }, %struct.EbmlSyntax { i32 17029, i8 1, i8 0, i64 0, i64 32, %union.anon.2 { i64 1 } }, %struct.EbmlSyntax { i32 17030, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 17031, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast (<{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @ebml_syntax to %struct.EbmlSyntax*) } } }>, align 16
@matroska_segments = internal constant <{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 408125543, i8 7, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([9 x %struct.EbmlSyntax], [9 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment to [9 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@.str.39 = private unnamed_addr constant [83 x i8] c"Seek to desired resync point failed. Seeking to earliest point available instead.\0A\00", align 1
@matroska_segment = internal constant <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ %struct.EbmlSyntax { i32 524531317, i8 9, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 357149030, i8 8, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([8 x %struct.EbmlSyntax], [8 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_info to [8 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 374648427, i8 8, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_tracks to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 423732329, i8 8, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_attachments to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 272869232, i8 8, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_chapters to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 475249515, i8 8, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_index to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 307544935, i8 8, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_tags to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 290298740, i8 8, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_seekhead to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_info = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 2807729, i8 1, i8 0, i64 0, i64 296, %union.anon.2 { i64 1000000 } }, %struct.EbmlSyntax { i32 17545, i8 3, i8 0, i64 0, i64 304, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 31657, i8 5, i8 0, i64 0, i64 312, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 22337, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 19840, i8 5, i8 0, i64 0, i64 320, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 17505, i8 6, i8 0, i64 0, i64 328, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 29604, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i32 0, i32 0) } } }>, align 16
@matroska_tracks = internal constant [2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }] [{ i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 174, i8 7, i8 0, i64 1544, i64 360, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([32 x %struct.EbmlSyntax], [32 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track to [32 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i32 0, i32 0) } }], align 16
@.str.43 = private unnamed_addr constant [4 x i8] c"eng\00", align 1
@matroska_track = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 215, i8 1, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21358, i8 5, i8 0, i64 0, i64 24, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 29637, i8 1, i8 0, i64 0, i64 8, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 131, i8 1, i8 0, i64 0, i64 16, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 134, i8 4, i8 0, i64 0, i64 32, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 25506, i8 6, i8 0, i64 0, i64 40, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 22186, i8 1, i8 0, i64 0, i64 464, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { i8* } } { i32 2274716, i8 4, i8 0, i64 0, i64 72, { i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0) } }, %struct.EbmlSyntax { i32 2352003, i8 1, i8 0, i64 0, i64 88, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { double } } { i32 2306383, i8 3, i8 0, i64 0, i64 80, { double } { double 1.000000e+00 } }, %struct.EbmlSyntax { i32 21935, i8 1, i8 0, i64 0, i64 112, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 136, i8 1, i8 0, i64 0, i64 96, %union.anon.2 { i64 1 } }, %struct.EbmlSyntax { i32 21930, i8 1, i8 0, i64 0, i64 104, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21931, i8 1, i8 0, i64 0, i64 120, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21932, i8 1, i8 0, i64 0, i64 128, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21933, i8 1, i8 0, i64 0, i64 136, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21934, i8 1, i8 1, i64 0, i64 144, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 224, i8 7, i8 0, i64 0, i64 168, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([19 x %struct.EbmlSyntax], [19 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track_video to [19 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 225, i8 7, i8 0, i64 0, i64 360, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([5 x %struct.EbmlSyntax], [5 x %struct.EbmlSyntax]* bitcast (<{ { i32, i8, i8, i64, i64, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track_audio to [5 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 226, i8 7, i8 0, i64 0, i64 432, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_track_operation to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 28032, i8 7, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_track_encodings to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 21998, i8 1, i8 0, i64 0, i64 504, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 22203, i8 1, i8 0, i64 0, i64 160, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 185, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 156, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 2459272, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 170, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 3883072, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 2536000, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 28135, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 28152, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_tracks to %struct.EbmlSyntax*) } } }>, align 16
@matroska_track_video = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 2327523, i8 3, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21680, i8 1, i8 0, i64 0, i64 8, %union.anon.2 { i64 -1 } }, %struct.EbmlSyntax { i32 21690, i8 1, i8 0, i64 0, i64 16, %union.anon.2 { i64 -1 } }, %struct.EbmlSyntax { i32 176, i8 1, i8 0, i64 0, i64 24, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 186, i8 1, i8 0, i64 0, i64 32, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 3061028, i8 6, i8 0, i64 0, i64 40, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21440, i8 1, i8 0, i64 0, i64 104, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 21936, i8 7, i8 0, i64 192, i64 112, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([15 x %struct.EbmlSyntax], [15 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track_video_color to [15 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 30320, i8 7, i8 0, i64 0, i64 128, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { double } }, { i32, i8, i8, i64, i64, { double } }, { i32, i8, i8, i64, i64, { double } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track_video_projection to [6 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 21674, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21691, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21708, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21725, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21682, i8 1, i8 0, i64 0, i64 72, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 154, i8 1, i8 0, i64 0, i64 80, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 157, i8 1, i8 0, i64 0, i64 88, %union.anon.2 { i64 2 } }, %struct.EbmlSyntax { i32 21432, i8 1, i8 0, i64 0, i64 96, %union.anon.2 { i64 15 } }, %struct.EbmlSyntax { i32 21683, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track, i32 0, i32 0) } } }>, align 16
@matroska_track_video_color = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 21937, i8 1, i8 0, i64 0, i64 0, %union.anon.2 { i64 2 } }, %struct.EbmlSyntax { i32 21938, i8 1, i8 0, i64 0, i64 8, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21939, i8 1, i8 0, i64 0, i64 16, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21940, i8 1, i8 0, i64 0, i64 24, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21941, i8 1, i8 0, i64 0, i64 32, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21942, i8 1, i8 0, i64 0, i64 40, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21943, i8 1, i8 0, i64 0, i64 48, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21944, i8 1, i8 0, i64 0, i64 56, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21945, i8 1, i8 0, i64 0, i64 64, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21946, i8 1, i8 0, i64 0, i64 72, %union.anon.2 { i64 2 } }, %struct.EbmlSyntax { i32 21947, i8 1, i8 0, i64 0, i64 80, %union.anon.2 { i64 2 } }, %struct.EbmlSyntax { i32 21948, i8 1, i8 0, i64 0, i64 88, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21949, i8 1, i8 0, i64 0, i64 96, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 21968, i8 7, i8 0, i64 0, i64 104, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([11 x %struct.EbmlSyntax], [11 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_mastering_meta to [11 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track_video, i32 0, i32 0) } } }>, align 16
@matroska_mastering_meta = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 21969, i8 3, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21970, i8 3, i8 0, i64 0, i64 8, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21971, i8 3, i8 0, i64 0, i64 16, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21972, i8 3, i8 0, i64 0, i64 24, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21973, i8 3, i8 0, i64 0, i64 32, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21974, i8 3, i8 0, i64 0, i64 40, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21975, i8 3, i8 0, i64 0, i64 48, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21976, i8 3, i8 0, i64 0, i64 56, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21978, i8 3, i8 1, i64 0, i64 72, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21977, i8 3, i8 0, i64 0, i64 64, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track_video_color, i32 0, i32 0) } } }>, align 16
@matroska_track_video_projection = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { double } }, { i32, i8, i8, i64, i64, { double } }, { i32, i8, i8, i64, i64, { double } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 30321, i8 1, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 30322, i8 6, i8 0, i64 0, i64 8, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { double } } { i32 30323, i8 3, i8 0, i64 0, i64 40, { double } zeroinitializer }, { i32, i8, i8, i64, i64, { double } } { i32 30324, i8 3, i8 0, i64 0, i64 48, { double } zeroinitializer }, { i32, i8, i8, i64, i64, { double } } { i32 30325, i8 3, i8 0, i64 0, i64 56, { double } zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track_video, i32 0, i32 0) } } }>, align 16
@matroska_track_audio = internal constant <{ { i32, i8, i8, i64, i64, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ { i32, i8, i8, i64, i64, { double } } { i32 181, i8 3, i8 0, i64 0, i64 0, { double } { double 8.000000e+03 } }, %struct.EbmlSyntax { i32 30901, i8 3, i8 0, i64 0, i64 8, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 25188, i8 1, i8 0, i64 0, i64 16, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 159, i8 1, i8 0, i64 0, i64 24, %union.anon.2 { i64 1 } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track, i32 0, i32 0) } } }>, align 16
@matroska_track_operation = internal constant [2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }] [{ i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 227, i8 7, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_track_combine_planes to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track, i32 0, i32 0) } }], align 16
@matroska_track_combine_planes = internal constant [2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }] [{ i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 228, i8 7, i8 0, i64 16, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([3 x %struct.EbmlSyntax], [3 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track_plane to [3 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_track_operation to %struct.EbmlSyntax*) } }], align 16
@matroska_track_plane = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 229, i8 1, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 230, i8 1, i8 0, i64 0, i64 8, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_track_combine_planes to %struct.EbmlSyntax*) } } }>, align 16
@matroska_track_encodings = internal constant [2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }] [{ i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 25152, i8 7, i8 0, i64 96, i64 448, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track_encoding to [6 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track, i32 0, i32 0) } }], align 16
@matroska_track_encoding = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 20530, i8 1, i8 0, i64 0, i64 0, %union.anon.2 { i64 1 } }, %struct.EbmlSyntax { i32 20531, i8 1, i8 0, i64 0, i64 8, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 20532, i8 7, i8 0, i64 0, i64 16, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([3 x %struct.EbmlSyntax], [3 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track_encoding_compression to [3 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 20533, i8 7, i8 0, i64 0, i64 56, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([8 x %struct.EbmlSyntax], [8 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track_encoding_encryption to [8 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 20529, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_track_encodings to %struct.EbmlSyntax*) } } }>, align 16
@matroska_track_encoding_compression = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 16980, i8 1, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 16981, i8 6, i8 0, i64 0, i64 8, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track_encoding, i32 0, i32 0) } } }>, align 16
@matroska_track_encoding_encryption = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 18401, i8 1, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 18402, i8 6, i8 0, i64 0, i64 8, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 18407, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 18405, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 18406, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 18404, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 18403, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_track_encoding, i32 0, i32 0) } } }>, align 16
@matroska_attachments = internal constant [2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }] [{ i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 24999, i8 7, i8 0, i64 72, i64 376, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_attachment to [6 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i32 0, i32 0) } }], align 16
@matroska_attachment = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 18094, i8 1, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 18030, i8 5, i8 0, i64 0, i64 8, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 18016, i8 4, i8 0, i64 0, i64 24, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 18012, i8 6, i8 0, i64 0, i64 32, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 18046, i8 5, i8 0, i64 0, i64 16, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_attachments to %struct.EbmlSyntax*) } } }>, align 16
@matroska_chapters = internal constant [2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }] [{ i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 17849, i8 7, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_chapter to [6 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i32 0, i32 0) } }], align 16
@matroska_chapter = internal constant <{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 182, i8 7, i8 0, i64 40, i64 392, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([9 x %struct.EbmlSyntax], [9 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_chapter_entry to [9 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 17852, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 17853, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 17883, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 17885, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_chapters to %struct.EbmlSyntax*) } } }>, align 16
@matroska_chapter_entry = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 145, i8 1, i8 0, i64 0, i64 0, %union.anon.2 { i64 -9223372036854775808 } }, %struct.EbmlSyntax { i32 146, i8 1, i8 0, i64 0, i64 8, %union.anon.2 { i64 -9223372036854775808 } }, %struct.EbmlSyntax { i32 29636, i8 1, i8 0, i64 0, i64 16, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 128, i8 7, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([4 x %struct.EbmlSyntax], [4 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_chapter_display to [4 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 152, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 17816, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 25539, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 182, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast (<{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_chapter to %struct.EbmlSyntax*) } } }>, align 16
@matroska_chapter_display = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 133, i8 5, i8 0, i64 0, i64 24, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 17276, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 17278, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_chapter_entry, i32 0, i32 0) } } }>, align 16
@matroska_index = internal constant [2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }] [{ i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 187, i8 7, i8 0, i64 24, i64 408, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([3 x %struct.EbmlSyntax], [3 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_index_entry to [3 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i32 0, i32 0) } }], align 16
@matroska_index_entry = internal constant <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 179, i8 1, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 183, i8 7, i8 0, i64 16, i64 8, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_index_pos to [6 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_index to %struct.EbmlSyntax*) } } }>, align 16
@matroska_index_pos = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 247, i8 1, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 241, i8 1, i8 0, i64 0, i64 8, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 240, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 178, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21368, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_index_entry, i32 0, i32 0) } } }>, align 16
@matroska_tags = internal constant [2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }] [{ i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 29555, i8 7, i8 0, i64 56, i64 424, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([3 x %struct.EbmlSyntax], [3 x %struct.EbmlSyntax]* bitcast ([3 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_tag to [3 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i32 0, i32 0) } }], align 16
@matroska_tag = internal constant [3 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }] [{ i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 26568, i8 7, i8 0, i64 48, i64 40, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([7 x %struct.EbmlSyntax], [7 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_simpletag to [7 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 25536, i8 7, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_tagtargets to [6 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_tags to %struct.EbmlSyntax*) } }], align 16
@.str.68 = private unnamed_addr constant [4 x i8] c"und\00", align 1
@matroska_simpletag = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 17827, i8 5, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 17543, i8 5, i8 0, i64 0, i64 8, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { i8* } } { i32 17530, i8 4, i8 0, i64 0, i64 16, { i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i32 0, i32 0) } }, %struct.EbmlSyntax { i32 17540, i8 1, i8 0, i64 0, i64 24, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 17588, i8 1, i8 0, i64 0, i64 24, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 26568, i8 7, i8 0, i64 48, i64 32, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([7 x %struct.EbmlSyntax], [7 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { i8* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_simpletag to [7 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast ([3 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_tag to %struct.EbmlSyntax*) } } }>, align 16
@matroska_tagtargets = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 25546, i8 4, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 26826, i8 1, i8 0, i64 0, i64 8, %union.anon.2 { i64 50 } }, %struct.EbmlSyntax { i32 25541, i8 1, i8 0, i64 0, i64 16, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 25540, i8 1, i8 0, i64 0, i64 24, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 25542, i8 1, i8 0, i64 0, i64 32, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast ([3 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_tag to %struct.EbmlSyntax*) } } }>, align 16
@matroska_seekhead = internal constant [2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }] [{ i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 19899, i8 7, i8 0, i64 16, i64 440, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([3 x %struct.EbmlSyntax], [3 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_seekhead_entry to [3 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i32 0, i32 0) } }], align 16
@matroska_seekhead_entry = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 21419, i8 1, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 21420, i8 1, i8 0, i64 0, i64 8, %union.anon.2 { i64 -1 } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_seekhead to %struct.EbmlSyntax*) } } }>, align 16
@.str.73 = private unnamed_addr constant [60 x i8] c"Max EBML element depth (%d) reached, cannot parse further.\0A\00", align 1
@.str.74 = private unnamed_addr constant [14 x i8] c"creation_time\00", align 1
@.str.75 = private unnamed_addr constant [39 x i8] c"Unknown or unsupported track type %lu\0A\00", align 1
@.str.76 = private unnamed_addr constant [25 x i8] c"Inconsistent track type\0A\00", align 1
@.str.77 = private unnamed_addr constant [53 x i8] c"Invalid sample rate %f, defaulting to 8000 instead.\0A\00", align 1
@.str.78 = private unnamed_addr constant [59 x i8] c"Invalid frame rate %e. Cannot calculate default duration.\0A\00", align 1
@.str.79 = private unnamed_addr constant [42 x i8] c"Multiple combined encodings not supported\00", align 1
@.str.80 = private unnamed_addr constant [26 x i8] c"Unsupported encoding type\00", align 1
@.str.81 = private unnamed_addr constant [37 x i8] c"Failed to decode codec private data\0A\00", align 1
@ff_mkv_codec_tags = external constant [0 x %struct.CodecTags], align 4
@.str.82 = private unnamed_addr constant [11 x i8] c"enc_key_id\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"V_MS/VFW/FOURCC\00", align 1
@ff_codec_bmp_tags = external constant [0 x %struct.AVCodecTag], align 4
@ff_codec_movvideo_tags = external constant [0 x %struct.AVCodecTag], align 4
@.str.84 = private unnamed_addr constant [9 x i8] c"A_MS/ACM\00", align 1
@.str.85 = private unnamed_addr constant [12 x i8] c"A_QUICKTIME\00", align 1
@ff_codec_movaudio_tags = external constant [0 x %struct.AVCodecTag], align 4
@.str.86 = private unnamed_addr constant [12 x i8] c"V_QUICKTIME\00", align 1
@.str.88 = private unnamed_addr constant [26 x i8] c"mov FourCC not found %s.\0A\00", align 1
@.str.89 = private unnamed_addr constant [4 x i8] c"SBR\00", align 1
@.str.91 = private unnamed_addr constant [69 x i8] c"Too large audio channel number %lu or bitdepth %lu. Skipping track.\0A\00", align 1
@.str.93 = private unnamed_addr constant [65 x i8] c"Assuming WavPack version 4.10 in absence of valid CodecPrivate.\0A\00", align 1
@.str.94 = private unnamed_addr constant [35 x i8] c"Unknown/unsupported AVCodecID %s.\0A\00", align 1
@.str.95 = private unnamed_addr constant [50 x i8] c"Track TimestampScale too small %f, assuming 1.0.\0A\00", align 1
@.str.96 = private unnamed_addr constant [9 x i8] c"language\00", align 1
@.str.97 = private unnamed_addr constant [12 x i8] c"stereo_mode\00", align 1
@ff_matroska_video_stereo_mode = external local_unnamed_addr constant [15 x i8*], align 16
@.str.98 = private unnamed_addr constant [11 x i8] c"alpha_mode\00", align 1
@.str.99 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"%s_%d\00", align 1
@ff_matroska_video_stereo_plane = external local_unnamed_addr constant [3 x i8*], align 16
@.str.101 = private unnamed_addr constant [18 x i8] c"D_WEBVTT/CAPTIONS\00", align 1
@.str.102 = private unnamed_addr constant [22 x i8] c"D_WEBVTT/DESCRIPTIONS\00", align 1
@.str.103 = private unnamed_addr constant [18 x i8] c"D_WEBVTT/METADATA\00", align 1
@.str.104 = private unnamed_addr constant [45 x i8] c"Compression size but no data in headerstrip\0A\00", align 1
@.str.105 = private unnamed_addr constant [5 x i8] c"MAIN\00", align 1
@.str.106 = private unnamed_addr constant [3 x i8] c"LC\00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"SSR\00", align 1
@avpriv_mpeg4audio_sample_rates = external local_unnamed_addr constant [16 x i32], align 16
@.str.108 = private unnamed_addr constant [27 x i8] c"Invalid FLAC private data\0A\00", align 1
@.str.109 = private unnamed_addr constant [34 x i8] c"WAVEFORMATEXTENSIBLE_CHANNEL_MASK\00", align 1
@.str.110 = private unnamed_addr constant [52 x i8] c"Invalid value of WAVEFORMATEXTENSIBLE_CHANNEL_MASK\0A\00", align 1
@.str.111 = private unnamed_addr constant [13 x i8] c"Lavf57.%d.%d\00", align 1
@.str.112 = private unnamed_addr constant [28 x i8] c"Unknown spherical metadata\0A\00", align 1
@.str.113 = private unnamed_addr constant [52 x i8] c"Invalid bounding rectangle coordinates %u,%u,%u,%u\0A\00", align 1
@.str.114 = private unnamed_addr constant [39 x i8] c"Missing projection private properties\0A\00", align 1
@.str.115 = private unnamed_addr constant [37 x i8] c"Unknown spherical cubemap layout %u\0A\00", align 1
@.str.116 = private unnamed_addr constant [37 x i8] c"Unknown spherical metadata type %lu\0A\00", align 1
@.str.117 = private unnamed_addr constant [35 x i8] c"Dropping apparently-broken index.\0A\00", align 1
@.str.118 = private unnamed_addr constant [26 x i8] c"Invalid track number %lu\0A\00", align 1
@.str.119 = private unnamed_addr constant [62 x i8] c"The tags at index %d refer to a non-existent attachment %ld.\0A\00", align 1
@.str.120 = private unnamed_addr constant [59 x i8] c"The tags at index %d refer to a non-existent chapter %ld.\0A\00", align 1
@.str.121 = private unnamed_addr constant [57 x i8] c"The tags at index %d refer to a non-existent track %ld.\0A\00", align 1
@.str.122 = private unnamed_addr constant [39 x i8] c"Skipping invalid tag with no TagName.\0A\00", align 1
@.str.123 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.124 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@ff_mkv_metadata_conv = external constant [0 x %struct.AVMetadataConv], align 8
@.str.125 = private unnamed_addr constant [33 x i8] c"Cannot append palette to packet\0A\00", align 1
@.str.126 = private unnamed_addr constant [37 x i8] c"File extends beyond end of segment.\0A\00", align 1
@matroska_cluster_enter = internal constant <{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 524531317, i8 7, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast (i8* getelementptr (i8, i8* bitcast (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_cluster_parsing to i8*), i64 64) to %struct.EbmlSyntax*) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_cluster_parsing = internal constant <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 163, i8 6, i8 0, i64 0, i64 32, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 160, i8 7, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([8 x %struct.EbmlSyntax], [8 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_blockgroup to [8 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 231, i8 1, i8 0, i64 0, i64 112, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 163, i8 9, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 160, i8 9, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 167, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 171, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i32 0, i32 0) } } }>, align 16
@.str.129 = private unnamed_addr constant [80 x i8] c"No stream associated to TrackNumber %lu. Ignoring Block with this TrackNumber.\0A\00", align 1
@.str.130 = private unnamed_addr constant [49 x i8] c"File is broken, keyframes not correctly marked!\0A\00", align 1
@.str.131 = private unnamed_addr constant [28 x i8] c"Error parsing frame sizes.\0A\00", align 1
@.str.132 = private unnamed_addr constant [41 x i8] c"Corrupt int4 RM-style audio packet size\0A\00", align 1
@.str.133 = private unnamed_addr constant [41 x i8] c"Corrupt sipr RM-style audio packet size\0A\00", align 1
@.str.134 = private unnamed_addr constant [44 x i8] c"Corrupt generic RM-style audio packet size\0A\00", align 1
@.str.135 = private unnamed_addr constant [32 x i8] c"Error parsing a wavpack block.\0A\00", align 1
@.str.136 = private unnamed_addr constant [31 x i8] c"Error parsing a prores block.\0A\00", align 1
@matroska_blockgroup = internal constant <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 161, i8 6, i8 0, i64 0, i64 32, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 30113, i8 7, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_blockadditions to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 155, i8 1, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 30114, i8 2, i8 0, i64 0, i64 104, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 251, i8 2, i8 1, i64 0, i64 8, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 164, i8 0, i8 0, i64 0, i64 0, %union.anon.2 zeroinitializer }, %struct.EbmlSyntax { i32 1, i8 1, i8 0, i64 0, i64 24, %union.anon.2 { i64 1 } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_cluster_parsing, i32 0, i32 0) } } }>, align 16
@matroska_blockadditions = internal constant [2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }] [{ i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 166, i8 7, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([3 x %struct.EbmlSyntax], [3 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_blockmore to [3 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_blockgroup, i32 0, i32 0) } }], align 16
@matroska_blockmore = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }> <{ %struct.EbmlSyntax { i32 238, i8 1, i8 0, i64 0, i64 64, %union.anon.2 { i64 1 } }, %struct.EbmlSyntax { i32 165, i8 6, i8 0, i64 0, i64 72, %union.anon.2 zeroinitializer }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } { i32 0, i8 0, i8 0, i64 0, i64 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* bitcast ([2 x { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }]* @matroska_blockadditions to %struct.EbmlSyntax*) } } }>, align 16
@.str.140 = private unnamed_addr constant [27 x i8] c"WebM DASH Manifest demuxer\00", align 1
@options = internal constant [3 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.142, i32 0, i32 0), i32 1664, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.144, i32 0, i32 0), i32 1668, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 2, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.141 = private unnamed_addr constant [5 x i8] c"live\00", align 1
@.str.142 = private unnamed_addr constant [73 x i8] c"flag indicating that the input is a live file that only has the headers.\00", align 1
@.str.143 = private unnamed_addr constant [10 x i8] c"bandwidth\00", align 1
@.str.144 = private unnamed_addr constant [63 x i8] c"bandwidth of this stream to be specified in the DASH manifest.\00", align 1
@.str.145 = private unnamed_addr constant [29 x i8] c"Failed to read file headers\0A\00", align 1
@.str.146 = private unnamed_addr constant [16 x i8] c"No track found\0A\00", align 1
@.str.147 = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.str.148 = private unnamed_addr constant [28 x i8] c"webm_dash_manifest_duration\00", align 1
@.str.149 = private unnamed_addr constant [40 x i8] c"webm_dash_manifest_initialization_range\00", align 1
@.str.150 = private unnamed_addr constant [29 x i8] c"webm_dash_manifest_file_name\00", align 1
@.str.151 = private unnamed_addr constant [32 x i8] c"webm_dash_manifest_track_number\00", align 1
@.str.152 = private unnamed_addr constant [20 x i8] c"Error parsing Cues\0A\00", align 1
@.str.153 = private unnamed_addr constant [29 x i8] c"webm_dash_manifest_bandwidth\00", align 1
@.str.154 = private unnamed_addr constant [30 x i8] c"webm_dash_manifest_cues_start\00", align 1
@.str.155 = private unnamed_addr constant [28 x i8] c"webm_dash_manifest_cues_end\00", align 1
@.str.156 = private unnamed_addr constant [36 x i8] c"webm_dash_manifest_cluster_keyframe\00", align 1
@.str.157 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.158 = private unnamed_addr constant [6 x i8] c"%ld%s\00", align 1
@.str.159 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.160 = private unnamed_addr constant [21 x i8] c"timestamp too long.\0A\00", align 1
@.str.161 = private unnamed_addr constant [34 x i8] c"webm_dash_manifest_cue_timestamps\00", align 1
@switch.table.matroska_read_header = private unnamed_addr constant [11 x i64] [i64 2, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 2, i64 2, i64 1, i64 2], align 8
@switch.table.matroska_read_header.162 = private unnamed_addr constant [11 x i64] [i64 1, i64 2, i64 2, i64 1, i64 1, i64 2, i64 2, i64 1, i64 1, i64 1, i64 1], align 8

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @matroska_probe(%struct.AVProbeData* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 1
  %6 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %5) #10, !srcloc !2
  %7 = icmp eq i32 %6, 440786851
  br i1 %7, label %8, label %69

8:                                                ; preds = %1
  %9 = getelementptr inbounds i8, i8* %3, i64 4
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i64
  %12 = icmp sgt i8 %10, -1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = and i64 %11, 64
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %82, label %18

16:                                               ; preds = %8
  %17 = and i64 %11, 127
  br label %28

18:                                               ; preds = %97, %94, %91, %88, %85, %82, %13
  %19 = phi i32 [ 8, %97 ], [ 7, %94 ], [ 6, %91 ], [ 5, %88 ], [ 4, %85 ], [ 3, %82 ], [ 2, %13 ]
  %20 = phi i64 [ 256, %97 ], [ 257, %94 ], [ 259, %91 ], [ 263, %88 ], [ 271, %85 ], [ 287, %82 ], [ 319, %13 ]
  %21 = and i64 %20, %11
  %22 = shl nuw nsw i64 %21, 8
  %23 = getelementptr inbounds i8, i8* %3, i64 5
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = or i64 %22, %25
  %27 = icmp eq i32 %19, 2
  br i1 %27, label %28, label %100

28:                                               ; preds = %18, %100, %107, %114, %121, %128, %135, %16
  %29 = phi i32 [ 1, %16 ], [ %19, %135 ], [ %19, %128 ], [ %19, %121 ], [ %19, %114 ], [ %19, %107 ], [ %19, %100 ], [ %19, %18 ]
  %30 = phi i64 [ %17, %16 ], [ %26, %18 ], [ %105, %100 ], [ %112, %107 ], [ %119, %114 ], [ %126, %121 ], [ %133, %128 ], [ %140, %135 ]
  %31 = add i64 %30, 1
  %32 = mul nuw nsw i32 %29, 7
  %33 = zext i32 %32 to i64
  %34 = shl i64 1, %33
  %35 = icmp eq i64 %31, %34
  %36 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  br i1 %35, label %38, label %45

38:                                               ; preds = %28
  %39 = sub nuw nsw i32 -4, %29
  %40 = add i32 %39, %37
  %41 = sext i32 %40 to i64
  %42 = add nuw nsw i32 %29, 4
  %43 = zext i32 %42 to i64
  %44 = add nsw i64 %41, %43
  br label %51

45:                                               ; preds = %28
  %46 = sext i32 %37 to i64
  %47 = add nuw nsw i32 %29, 4
  %48 = zext i32 %47 to i64
  %49 = add i64 %30, %48
  %50 = icmp ugt i64 %49, %46
  br i1 %50, label %69, label %51

51:                                               ; preds = %45, %38
  %52 = phi i64 [ %49, %45 ], [ %44, %38 ]
  %53 = phi i64 [ %48, %45 ], [ %43, %38 ]
  %54 = phi i64 [ %30, %45 ], [ %41, %38 ]
  %55 = icmp ult i64 %54, 8
  br i1 %55, label %67, label %56

56:                                               ; preds = %51
  %57 = add i64 %52, -8
  %58 = icmp ult i64 %57, %53
  br i1 %58, label %71, label %61

59:                                               ; preds = %61
  %60 = icmp ult i64 %57, %66
  br i1 %60, label %67, label %61

61:                                               ; preds = %56, %59
  %62 = phi i64 [ %66, %59 ], [ %53, %56 ]
  %63 = getelementptr inbounds i8, i8* %3, i64 %62
  %64 = tail call i32 @bcmp(i8* %63, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8)
  %65 = icmp eq i32 %64, 0
  %66 = add i64 %62, 1
  br i1 %65, label %69, label %59

67:                                               ; preds = %59, %51
  %68 = icmp ult i64 %54, 4
  br i1 %68, label %69, label %71

69:                                               ; preds = %61, %80, %74, %97, %67, %71, %45, %1
  %70 = phi i32 [ 0, %1 ], [ 0, %45 ], [ 50, %71 ], [ 50, %67 ], [ 0, %97 ], [ 50, %80 ], [ 100, %74 ], [ 100, %61 ]
  ret i32 %70

71:                                               ; preds = %56, %67
  %72 = add i64 %52, -4
  %73 = icmp ult i64 %72, %53
  br i1 %73, label %69, label %74

74:                                               ; preds = %71, %80
  %75 = phi i64 [ %79, %80 ], [ %53, %71 ]
  %76 = getelementptr inbounds i8, i8* %3, i64 %75
  %77 = tail call i32 @bcmp(i8* %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4)
  %78 = icmp eq i32 %77, 0
  %79 = add i64 %75, 1
  br i1 %78, label %69, label %80

80:                                               ; preds = %74
  %81 = icmp ult i64 %72, %79
  br i1 %81, label %69, label %74

82:                                               ; preds = %13
  %83 = and i64 %11, 32
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %18

85:                                               ; preds = %82
  %86 = and i64 %11, 16
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %18

88:                                               ; preds = %85
  %89 = and i64 %11, 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %18

91:                                               ; preds = %88
  %92 = and i64 %11, 4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %18

94:                                               ; preds = %91
  %95 = and i64 %11, 2
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %18

97:                                               ; preds = %94
  %98 = and i64 %11, 1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %69, label %18

100:                                              ; preds = %18
  %101 = shl nuw nsw i64 %26, 8
  %102 = getelementptr inbounds i8, i8* %3, i64 6
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = or i64 %101, %104
  %106 = icmp eq i32 %19, 3
  br i1 %106, label %28, label %107

107:                                              ; preds = %100
  %108 = shl nuw nsw i64 %105, 8
  %109 = getelementptr inbounds i8, i8* %3, i64 7
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i64
  %112 = or i64 %108, %111
  %113 = icmp eq i32 %19, 4
  br i1 %113, label %28, label %114

114:                                              ; preds = %107
  %115 = shl i64 %112, 8
  %116 = getelementptr inbounds i8, i8* %3, i64 8
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = or i64 %115, %118
  %120 = icmp eq i32 %19, 5
  br i1 %120, label %28, label %121

121:                                              ; preds = %114
  %122 = shl i64 %119, 8
  %123 = getelementptr inbounds i8, i8* %3, i64 9
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i64
  %126 = or i64 %122, %125
  %127 = icmp eq i32 %19, 6
  br i1 %127, label %28, label %128

128:                                              ; preds = %121
  %129 = shl i64 %126, 8
  %130 = getelementptr inbounds i8, i8* %3, i64 10
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = or i64 %129, %132
  %134 = icmp eq i32 %19, 7
  br i1 %134, label %28, label %135

135:                                              ; preds = %128
  %136 = shl i64 %133, 8
  %137 = getelementptr inbounds i8, i8* %3, i64 11
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i64
  %140 = or i64 %136, %139
  br label %28
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @matroska_read_header(%struct.AVFormatContext*) #1 {
  %2 = alloca %struct.AVSphericalMapping*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.AVContentLightMetadata*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.AVDictionary*, align 8
  %9 = alloca %struct.AVIOContext, align 8
  %10 = alloca [32 x i8], align 1
  %11 = alloca [32 x i8], align 16
  %12 = alloca %struct.Ebml, align 8
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast i8* %14 to %struct.MatroskaDemuxContext*
  %16 = getelementptr inbounds i8, i8* %14, i64 376
  %17 = getelementptr inbounds i8, i8* %14, i64 392
  %18 = bitcast %struct.Ebml* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 40, i1 false)
  %19 = getelementptr inbounds i8, i8* %14, i64 8
  %20 = bitcast i8* %19 to %struct.AVFormatContext**
  store %struct.AVFormatContext* %0, %struct.AVFormatContext** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 496
  %22 = bitcast i8* %21 to i32*
  store i32 1, i32* %22, align 8
  %23 = call fastcc i32 @ebml_parse(%struct.MatroskaDemuxContext* %15, %struct.EbmlSyntax* bitcast (<{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @ebml_syntax to %struct.EbmlSyntax*), i8* nonnull %18)
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %1
  %26 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %12, i64 0, i32 3
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %25, %1
  %30 = bitcast i8* %19 to i8**
  %31 = load i8*, i8** %30, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0)) #11
  call fastcc void @ebml_free(%struct.EbmlSyntax* bitcast (<{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @ebml_syntax to %struct.EbmlSyntax*), i8* nonnull %18)
  br label %2104

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %12, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %48, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %12, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, 8
  br i1 %39, label %48, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %12, i64 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %42, 4
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %12, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ugt i64 %46, 3
  br i1 %47, label %48, label %53

48:                                               ; preds = %44, %40, %36, %32
  %49 = bitcast i8* %19 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %12, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %50, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.9, i64 0, i64 0), i64 %34, i8* nonnull %27, i64 %52) #11
  call fastcc void @ebml_free(%struct.EbmlSyntax* bitcast (<{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @ebml_syntax to %struct.EbmlSyntax*), i8* nonnull %18)
  br label %2104

53:                                               ; preds = %44
  %54 = icmp eq i64 %46, 3
  br i1 %54, label %55, label %59

55:                                               ; preds = %53
  %56 = bitcast i8* %19 to i8**
  %57 = load i8*, i8** %56, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 24, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.10, i64 0, i64 0), i64 %34, i8* nonnull %27, i64 3) #11
  %58 = load i8*, i8** %26, align 8
  br label %59

59:                                               ; preds = %53, %55
  %60 = phi i8* [ %27, %53 ], [ %58, %55 ]
  %61 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #12
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)) #12
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %2126

66:                                               ; preds = %2126
  call fastcc void @ebml_free(%struct.EbmlSyntax* bitcast (<{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @ebml_syntax to %struct.EbmlSyntax*), i8* nonnull %18)
  br label %2104

67:                                               ; preds = %59, %63, %2126
  call fastcc void @ebml_free(%struct.EbmlSyntax* bitcast (<{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @ebml_syntax to %struct.EbmlSyntax*), i8* nonnull %18)
  %68 = load %struct.AVFormatContext*, %struct.AVFormatContext** %20, align 8
  %69 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %68, i64 0, i32 4
  %70 = load %struct.AVIOContext*, %struct.AVIOContext** %69, align 8
  %71 = call i64 @avio_seek(%struct.AVIOContext* %70, i64 0, i32 1) #11
  %72 = call fastcc i32 @ebml_parse(%struct.MatroskaDemuxContext* %15, %struct.EbmlSyntax* bitcast (<{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segments to %struct.EbmlSyntax*), i8* %14)
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %85, label %74

74:                                               ; preds = %67, %78
  %75 = phi i64 [ %82, %78 ], [ %71, %67 ]
  %76 = call fastcc i32 @matroska_resync(%struct.MatroskaDemuxContext* %15, i64 %75)
  %77 = icmp slt i32 %76, 0
  br i1 %77, label %2074, label %78

78:                                               ; preds = %74
  %79 = load %struct.AVFormatContext*, %struct.AVFormatContext** %20, align 8
  %80 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %79, i64 0, i32 4
  %81 = load %struct.AVIOContext*, %struct.AVIOContext** %80, align 8
  %82 = call i64 @avio_seek(%struct.AVIOContext* %81, i64 0, i32 1) #11
  %83 = call fastcc i32 @ebml_parse(%struct.MatroskaDemuxContext* %15, %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i64 0, i32 0), i8* %14)
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %74

85:                                               ; preds = %78, %67
  %86 = getelementptr inbounds i8, i8* %14, i64 276
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 524531317
  br i1 %89, label %90, label %99

90:                                               ; preds = %85
  %91 = load %struct.AVFormatContext*, %struct.AVFormatContext** %20, align 8
  %92 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %91, i64 0, i32 4
  %93 = load %struct.AVIOContext*, %struct.AVIOContext** %92, align 8
  %94 = call i64 @avio_seek(%struct.AVIOContext* %93, i64 0, i32 1) #11
  %95 = add nsw i64 %94, -4
  %96 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 55
  %97 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %96, align 8
  %98 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %97, i64 0, i32 3
  store i64 %95, i64* %98, align 8
  br label %99

99:                                               ; preds = %90, %85
  %100 = load %struct.AVFormatContext*, %struct.AVFormatContext** %20, align 8
  %101 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %100, i64 0, i32 4
  %102 = load %struct.AVIOContext*, %struct.AVIOContext** %101, align 8
  %103 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %102, i64 0, i32 19
  %104 = load i32, i32* %103, align 8
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %196, label %107

107:                                              ; preds = %99
  %108 = getelementptr inbounds i8, i8* %14, i64 440
  %109 = bitcast i8* %108 to i32*
  %110 = load i32, i32* %109, align 8
  %111 = icmp sgt i32 %110, 0
  br i1 %111, label %112, label %196

112:                                              ; preds = %107
  %113 = getelementptr inbounds i8, i8* %14, i64 448
  %114 = bitcast i8* %113 to %struct.MatroskaSeekhead**
  %115 = getelementptr inbounds i8, i8* %14, i64 456
  %116 = bitcast i8* %115 to i64*
  %117 = getelementptr inbounds i8, i8* %14, i64 1528
  %118 = bitcast i8* %117 to i32*
  %119 = bitcast i8* %19 to i8**
  br label %120

120:                                              ; preds = %191, %112
  %121 = phi i64 [ 0, %112 ], [ %192, %191 ]
  %122 = load %struct.MatroskaSeekhead*, %struct.MatroskaSeekhead** %114, align 8
  %123 = getelementptr inbounds %struct.MatroskaSeekhead, %struct.MatroskaSeekhead* %122, i64 %121, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = trunc i64 %124 to i32
  %126 = getelementptr inbounds %struct.MatroskaSeekhead, %struct.MatroskaSeekhead* %122, i64 %121, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = load i64, i64* %116, align 8
  %129 = add i64 %128, %127
  %130 = icmp ugt i64 %124, 4294967295
  %131 = icmp slt i64 %129, %128
  %132 = or i1 %130, %131
  br i1 %132, label %191, label %133

133:                                              ; preds = %120
  %134 = or i32 %125, 1
  %135 = call i32 @llvm.ctlz.i32(i32 %134, i1 true) #11, !range !3
  %136 = xor i32 %135, 31
  %137 = icmp eq i32 %125, 0
  br i1 %137, label %191, label %138

138:                                              ; preds = %133
  %139 = add nuw nsw i32 %136, 7
  %140 = lshr i32 %139, 3
  %141 = and i32 %136, 7
  %142 = sub nuw nsw i32 8, %141
  %143 = icmp ne i32 %140, %142
  %144 = icmp eq i32 %125, 524531317
  %145 = or i1 %144, %143
  br i1 %145, label %191, label %146

146:                                              ; preds = %138
  %147 = load i32, i32* %118, align 8
  %148 = icmp sgt i32 %147, 0
  br i1 %148, label %149, label %165

149:                                              ; preds = %146
  %150 = sext i32 %147 to i64
  br label %151

151:                                              ; preds = %162, %149
  %152 = phi i64 [ 0, %149 ], [ %163, %162 ]
  %153 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %15, i64 0, i32 25, i64 %152
  %154 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %15, i64 0, i32 25, i64 %152, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = icmp eq i32 %155, %125
  br i1 %156, label %157, label %162

157:                                              ; preds = %151
  %158 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %153, i64 0, i32 0
  %159 = load i64, i64* %158, align 8
  %160 = icmp eq i64 %159, %129
  br i1 %160, label %176, label %161

161:                                              ; preds = %157
  switch i32 %125, label %176 [
    i32 307544935, label %162
    i32 290298740, label %162
  ]

162:                                              ; preds = %161, %161, %151
  %163 = add nuw nsw i64 %152, 1
  %164 = icmp eq i64 %163, %150
  br i1 %164, label %165, label %151

165:                                              ; preds = %162, %146
  %166 = icmp ugt i32 %147, 63
  br i1 %166, label %167, label %169

167:                                              ; preds = %165
  %168 = load i8*, i8** %119, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %168, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.34, i64 0, i64 0)) #11
  br label %191

169:                                              ; preds = %165
  %170 = sext i32 %147 to i64
  %171 = add nuw nsw i32 %147, 1
  store i32 %171, i32* %118, align 8
  %172 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %15, i64 0, i32 25, i64 %170
  %173 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %172, i64 0, i32 0
  store i64 0, i64* %173, align 8
  %174 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %15, i64 0, i32 25, i64 %170, i32 1
  store i32 %125, i32* %174, align 8
  %175 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %15, i64 0, i32 25, i64 %170, i32 2
  store i32 0, i32* %175, align 4
  br label %176

176:                                              ; preds = %161, %157, %169
  %177 = phi %struct.MatroskaLevel1Element* [ %172, %169 ], [ %153, %157 ], [ %153, %161 ]
  %178 = icmp eq %struct.MatroskaLevel1Element* %177, null
  br i1 %178, label %191, label %179

179:                                              ; preds = %176
  %180 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %177, i64 0, i32 2
  %181 = load i32, i32* %180, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %191

183:                                              ; preds = %179
  %184 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %177, i64 0, i32 0
  store i64 %129, i64* %184, align 8
  %185 = icmp eq i32 %125, 475249515
  br i1 %185, label %191, label %186

186:                                              ; preds = %183
  %187 = call fastcc i32 @matroska_parse_seekhead_entry(%struct.MatroskaDemuxContext* %15, i64 %129) #11
  %188 = icmp slt i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  store i32 -1, i32* %22, align 8
  br label %196

190:                                              ; preds = %186
  store i32 1, i32* %180, align 4
  br label %191

191:                                              ; preds = %190, %183, %179, %176, %167, %138, %133, %120
  %192 = add nuw nsw i64 %121, 1
  %193 = load i32, i32* %109, align 8
  %194 = sext i32 %193 to i64
  %195 = icmp slt i64 %192, %194
  br i1 %195, label %120, label %196

196:                                              ; preds = %191, %99, %107, %189
  %197 = getelementptr inbounds i8, i8* %14, i64 296
  %198 = bitcast i8* %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %196
  store i64 1000000, i64* %198, align 8
  br label %202

202:                                              ; preds = %196, %201
  %203 = phi i64 [ %199, %196 ], [ 1000000, %201 ]
  %204 = getelementptr inbounds i8, i8* %14, i64 304
  %205 = bitcast i8* %204 to double*
  %206 = load double, double* %205, align 8
  %207 = fcmp nsz une double %206, 0.000000e+00
  br i1 %207, label %208, label %216

208:                                              ; preds = %202
  %209 = uitofp i64 %203 to double
  %210 = fmul nsz double %206, %209
  %211 = fmul nsz double %210, 1.000000e+03
  %212 = fdiv nsz double %211, 1.000000e+06
  %213 = fptosi double %212 to i64
  %214 = load %struct.AVFormatContext*, %struct.AVFormatContext** %20, align 8
  %215 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %214, i64 0, i32 11
  store i64 %213, i64* %215, align 8
  br label %216

216:                                              ; preds = %208, %202
  %217 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 29
  %218 = getelementptr inbounds i8, i8* %14, i64 312
  %219 = bitcast i8* %218 to i8**
  %220 = load i8*, i8** %219, align 8
  %221 = call i32 @av_dict_set(%struct.AVDictionary** %217, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8* %220, i32 0) #11
  %222 = getelementptr inbounds i8, i8* %14, i64 320
  %223 = bitcast i8* %222 to i8**
  %224 = load i8*, i8** %223, align 8
  %225 = call i32 @av_dict_set(%struct.AVDictionary** %217, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i8* %224, i32 0) #11
  %226 = getelementptr inbounds i8, i8* %14, i64 328
  %227 = bitcast i8* %226 to i32*
  %228 = load i32, i32* %227, align 8
  %229 = icmp eq i32 %228, 8
  br i1 %229, label %230, label %239

230:                                              ; preds = %216
  %231 = getelementptr inbounds i8, i8* %14, i64 344
  %232 = bitcast i8* %231 to i64**
  %233 = load i64*, i64** %232, align 8
  %234 = load i64, i64* %233, align 1
  %235 = call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %234) #10, !srcloc !4
  %236 = sdiv i64 %235, 1000
  %237 = add nsw i64 %236, 978307200000000
  %238 = call i32 @avpriv_dict_set_timestamp(%struct.AVDictionary** %217, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74, i64 0, i64 0), i64 %237) #11
  br label %239

239:                                              ; preds = %230, %216
  %240 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %240)
  %241 = bitcast i8** %13 to %struct.MatroskaDemuxContext**
  %242 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %241, align 8
  %243 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %242, i64 0, i32 12, i32 2
  %244 = bitcast i8** %243 to %struct.MatroskaTrack**
  %245 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %244, align 8
  %246 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %242, i64 0, i32 12, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = icmp sgt i32 %247, 0
  br i1 %248, label %249, label %1766

249:                                              ; preds = %239
  %250 = bitcast %struct.AVIOContext* %9 to i8*
  %251 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %242, i64 0, i32 1
  %252 = bitcast %struct.AVFormatContext** %251 to i8**
  %253 = bitcast %struct.AVDictionary** %8 to i8*
  %254 = bitcast %struct.AVFormatContext* %0 to i8*
  %255 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %242, i64 0, i32 8
  %256 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %242, i64 0, i32 7
  %257 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 0), align 16
  %258 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 1), align 4
  %259 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 2), align 8
  %260 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 3), align 4
  %261 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 4), align 16
  %262 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 5), align 4
  %263 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 6), align 8
  %264 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 7), align 4
  %265 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 8), align 16
  %266 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 9), align 4
  %267 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 10), align 8
  %268 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 11), align 4
  %269 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 12), align 16
  %270 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 13), align 4
  %271 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 14), align 8
  %272 = load i32, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 15), align 4
  %273 = bitcast i32* %6 to i8*
  %274 = bitcast i32* %7 to i8*
  %275 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %242, i64 0, i32 10
  %276 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %277 = bitcast i64* %4 to i8*
  %278 = bitcast %struct.AVContentLightMetadata** %5 to i8*
  %279 = bitcast %struct.AVSphericalMapping** %2 to i8*
  %280 = bitcast i64* %3 to i8*
  br label %281

281:                                              ; preds = %1760, %249
  %282 = phi i64 [ 0, %249 ], [ %1762, %1760 ]
  %283 = phi i32 [ undef, %249 ], [ %1761, %1760 ]
  %284 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 20, i32 2
  %285 = bitcast i8** %284 to %struct.MatroskaTrackEncoding**
  %286 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %285, align 8
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %250) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %250, i8 -86, i64 264, i1 false) #11
  %287 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 2
  %288 = load i64, i64* %287, align 8
  switch i64 %288, label %289 [
    i64 1, label %291
    i64 2, label %291
    i64 17, label %291
    i64 33, label %291
  ]

289:                                              ; preds = %281
  %290 = load i8*, i8** %252, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %290, i32 32, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.75, i64 0, i64 0), i64 %288) #11
  br label %1760

291:                                              ; preds = %281, %281, %281, %281
  %292 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 4
  %293 = load i8*, i8** %292, align 8
  %294 = icmp eq i8* %293, null
  br i1 %294, label %1760, label %295

295:                                              ; preds = %291
  switch i64 %288, label %308 [
    i64 2, label %296
    i64 1, label %299
    i64 17, label %302
    i64 33, label %304
  ]

296:                                              ; preds = %295
  %297 = load i8, i8* %293, align 1
  %298 = icmp eq i8 %297, 65
  br i1 %298, label %308, label %306

299:                                              ; preds = %295
  %300 = load i8, i8* %293, align 1
  %301 = icmp eq i8 %300, 86
  br i1 %301, label %308, label %306

302:                                              ; preds = %295
  %303 = load i8, i8* %293, align 1
  switch i8 %303, label %306 [
    i8 68, label %308
    i8 83, label %308
  ]

304:                                              ; preds = %295
  %305 = load i8, i8* %293, align 1
  switch i8 %305, label %306 [
    i8 68, label %308
    i8 83, label %308
  ]

306:                                              ; preds = %304, %302, %299, %296
  %307 = load i8*, i8** %252, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %307, i32 32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.76, i64 0, i64 0)) #11
  br label %1760

308:                                              ; preds = %304, %304, %302, %302, %299, %296, %295
  %309 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 0
  %310 = load double, double* %309, align 8
  %311 = fcmp nsz olt double %310, 0.000000e+00
  %312 = fcmp nsz ogt double %310, 0x41DFFFFFFFC00000
  %313 = or i1 %311, %312
  %314 = fcmp nsz uno double %310, 0.000000e+00
  %315 = or i1 %314, %313
  %316 = bitcast double %310 to i64
  br i1 %315, label %317, label %320

317:                                              ; preds = %308
  %318 = load i8*, i8** %252, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %318, i32 24, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.77, i64 0, i64 0), double %310) #11
  store double 8.000000e+03, double* %309, align 8
  %319 = load i64, i64* %287, align 8
  br label %320

320:                                              ; preds = %317, %308
  %321 = phi i64 [ %316, %308 ], [ 4665518107723300864, %317 ]
  %322 = phi i64 [ %288, %308 ], [ %319, %317 ]
  switch i64 %322, label %369 [
    i64 1, label %323
    i64 2, label %363
  ]

323:                                              ; preds = %320
  %324 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 8
  %325 = load i64, i64* %324, align 8
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %340

327:                                              ; preds = %323
  %328 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 0
  %329 = load double, double* %328, align 8
  %330 = fcmp nsz ogt double %329, 0.000000e+00
  br i1 %330, label %331, label %340

331:                                              ; preds = %327
  %332 = fdiv nsz double 1.000000e+09, %329
  %333 = fcmp nsz ogt double %332, 0x43F0000000000000
  %334 = fcmp nsz olt double %332, 0.000000e+00
  %335 = or i1 %333, %334
  br i1 %335, label %336, label %338

336:                                              ; preds = %331
  %337 = load i8*, i8** %252, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %337, i32 24, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.78, i64 0, i64 0), double %329) #11
  br label %340

338:                                              ; preds = %331
  %339 = fptoui double %332 to i64
  store i64 %339, i64* %324, align 8
  br label %340

340:                                              ; preds = %338, %336, %327, %323
  %341 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 1
  %342 = load i64, i64* %341, align 8
  %343 = icmp eq i64 %342, -1
  br i1 %343, label %344, label %347

344:                                              ; preds = %340
  %345 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 3
  %346 = load i64, i64* %345, align 8
  store i64 %346, i64* %341, align 8
  br label %347

347:                                              ; preds = %344, %340
  %348 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 2
  %349 = load i64, i64* %348, align 8
  %350 = icmp eq i64 %349, -1
  br i1 %350, label %351, label %354

351:                                              ; preds = %347
  %352 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 4
  %353 = load i64, i64* %352, align 8
  store i64 %353, i64* %348, align 8
  br label %354

354:                                              ; preds = %351, %347
  %355 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 5, i32 0
  %356 = load i32, i32* %355, align 8
  %357 = icmp eq i32 %356, 4
  br i1 %357, label %358, label %369

358:                                              ; preds = %354
  %359 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 5, i32 2
  %360 = bitcast i8** %359 to i32**
  %361 = load i32*, i32** %360, align 8
  %362 = load i32, i32* %361, align 1
  br label %369

363:                                              ; preds = %320
  %364 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 1
  %365 = load double, double* %364, align 8
  %366 = fcmp nsz une double %365, 0.000000e+00
  br i1 %366, label %369, label %367

367:                                              ; preds = %363
  %368 = bitcast double* %364 to i64*
  store i64 %321, i64* %368, align 8
  br label %369

369:                                              ; preds = %367, %363, %358, %354, %320
  %370 = phi i32 [ 0, %320 ], [ 0, %363 ], [ 0, %367 ], [ %362, %358 ], [ 0, %354 ]
  %371 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 20, i32 0
  %372 = load i32, i32* %371, align 8
  %373 = icmp sgt i32 %372, 1
  br i1 %373, label %374, label %376

374:                                              ; preds = %369
  %375 = load i8*, i8** %252, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %375, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.79, i64 0, i64 0)) #11
  br label %466

376:                                              ; preds = %369
  %377 = icmp eq i32 %372, 1
  br i1 %377, label %378, label %466

378:                                              ; preds = %376
  %379 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %286, i64 0, i32 1
  %380 = load i64, i64* %379, align 8
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %402, label %382

382:                                              ; preds = %378
  %383 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %286, i64 0, i32 3, i32 1, i32 0
  %384 = load i32, i32* %383, align 8
  %385 = icmp sgt i32 %384, 0
  br i1 %385, label %386, label %399

386:                                              ; preds = %382
  %387 = add nuw nsw i32 %384, 2
  %388 = sdiv i32 %387, 3
  %389 = shl nsw i32 %388, 2
  %390 = or i32 %389, 1
  %391 = sext i32 %390 to i64
  %392 = call noalias i8* @av_malloc(i64 %391) #11
  %393 = icmp eq i8* %392, null
  br i1 %393, label %1767, label %394

394:                                              ; preds = %386
  %395 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %286, i64 0, i32 3, i32 1, i32 2
  %396 = load i8*, i8** %395, align 8
  %397 = load i32, i32* %383, align 8
  %398 = call i8* @av_base64_encode(i8* nonnull %392, i32 %390, i8* %396, i32 %397) #11
  br label %466

399:                                              ; preds = %382
  %400 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %286, i64 0, i32 0
  store i64 0, i64* %400, align 8
  %401 = load i8*, i8** %252, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %401, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.80, i64 0, i64 0)) #11
  br label %466

402:                                              ; preds = %378
  %403 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %286, i64 0, i32 2, i32 0
  %404 = load i64, i64* %403, align 8
  %405 = icmp eq i64 %404, 3
  br i1 %405, label %409, label %406

406:                                              ; preds = %402
  %407 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %286, i64 0, i32 0
  store i64 0, i64* %407, align 8
  %408 = load i8*, i8** %252, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %408, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.80, i64 0, i64 0)) #11
  br label %466

409:                                              ; preds = %402
  %410 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %411 = load i32, i32* %410, align 8
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %466, label %413

413:                                              ; preds = %409
  %414 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %286, i64 0, i32 0
  %415 = load i64, i64* %414, align 8
  %416 = and i64 %415, 2
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %466, label %418

418:                                              ; preds = %413
  %419 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 2
  %420 = load i8*, i8** %419, align 8
  %421 = icmp ugt i32 %411, 9999999
  br i1 %421, label %449, label %422

422:                                              ; preds = %418
  %423 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %285, align 8
  %424 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %423, i64 0, i32 2, i32 0
  %425 = load i64, i64* %424, align 8
  %426 = icmp eq i64 %425, 3
  br i1 %426, label %427, label %449

427:                                              ; preds = %422
  %428 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %423, i64 0, i32 2, i32 1, i32 0
  %429 = load i32, i32* %428, align 8
  %430 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %423, i64 0, i32 2, i32 1, i32 2
  %431 = load i8*, i8** %430, align 8
  %432 = icmp eq i32 %429, 0
  %433 = icmp ne i8* %431, null
  %434 = or i1 %432, %433
  br i1 %434, label %436, label %435

435:                                              ; preds = %427
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.104, i64 0, i64 0)) #11
  br label %449

436:                                              ; preds = %427
  br i1 %432, label %466, label %437

437:                                              ; preds = %436
  %438 = add nsw i32 %429, %411
  %439 = add nsw i32 %438, 64
  %440 = sext i32 %439 to i64
  %441 = call noalias i8* @av_malloc(i64 %440) #11
  %442 = icmp eq i8* %441, null
  br i1 %442, label %449, label %443

443:                                              ; preds = %437
  %444 = sext i32 %429 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %441, i8* align 1 %431, i64 %444, i1 false) #11
  %445 = getelementptr inbounds i8, i8* %441, i64 %444
  %446 = sext i32 %411 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %445, i8* align 1 %420, i64 %446, i1 false) #11
  %447 = sext i32 %438 to i64
  %448 = getelementptr inbounds i8, i8* %441, i64 %447
  call void @llvm.memset.p0i8.i64(i8* align 1 %448, i8 0, i64 64, i1 false) #11
  store i8* %441, i8** %419, align 8
  store i32 %438, i32* %410, align 4
  br label %452

449:                                              ; preds = %437, %435, %422, %418
  store i8* null, i8** %419, align 8
  store i32 0, i32* %410, align 8
  %450 = load i8*, i8** %252, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %450, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.81, i64 0, i64 0)) #11
  %451 = load i8*, i8** %419, align 8
  br label %452

452:                                              ; preds = %449, %443
  %453 = phi i8* [ %441, %443 ], [ %451, %449 ]
  %454 = icmp eq i8* %420, %453
  br i1 %454, label %466, label %455

455:                                              ; preds = %452
  %456 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 1
  call void @av_buffer_unref(%struct.AVBufferRef** %456) #11
  %457 = load i8*, i8** %419, align 8
  %458 = icmp eq i8* %457, null
  br i1 %458, label %466, label %459

459:                                              ; preds = %455
  %460 = load i32, i32* %410, align 8
  %461 = add nsw i32 %460, 64
  %462 = call %struct.AVBufferRef* @av_buffer_create(i8* nonnull %457, i32 %461, void (i8*, i8*)* null, i8* null, i32 0) #11
  store %struct.AVBufferRef* %462, %struct.AVBufferRef** %456, align 8
  %463 = icmp eq %struct.AVBufferRef* %462, null
  br i1 %463, label %464, label %466

464:                                              ; preds = %459
  %465 = bitcast i8** %419 to i8*
  call void @av_freep(i8* %465) #11
  store i32 0, i32* %410, align 8
  br label %1767

466:                                              ; preds = %459, %455, %452, %436, %413, %409, %406, %399, %394, %376, %374
  %467 = phi i8* [ null, %374 ], [ null, %399 ], [ null, %406 ], [ null, %413 ], [ null, %409 ], [ null, %376 ], [ %392, %394 ], [ null, %459 ], [ null, %455 ], [ null, %452 ], [ null, %436 ]
  %468 = icmp eq %struct.MatroskaTrackEncoding* %286, null
  br i1 %468, label %486, label %469

469:                                              ; preds = %466
  %470 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %286, i64 0, i32 1
  %471 = load i64, i64* %470, align 8
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %486

473:                                              ; preds = %469
  %474 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %286, i64 0, i32 0
  %475 = load i64, i64* %474, align 8
  %476 = and i64 %475, 1
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %486, label %478

478:                                              ; preds = %473
  %479 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %286, i64 0, i32 2, i32 0
  %480 = load i64, i64* %479, align 8
  %481 = icmp eq i64 %480, 3
  br i1 %481, label %482, label %486

482:                                              ; preds = %478
  %483 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %286, i64 0, i32 2, i32 1, i32 0
  %484 = load i32, i32* %483, align 8
  %485 = icmp ne i32 %484, 0
  br label %486

486:                                              ; preds = %482, %478, %473, %469, %466
  %487 = phi i1 [ false, %473 ], [ false, %469 ], [ false, %466 ], [ true, %478 ], [ %485, %482 ]
  %488 = zext i1 %487 to i32
  %489 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 26
  store i32 %488, i32* %489, align 4
  %490 = load i32, i32* getelementptr inbounds ([0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_mkv_codec_tags, i64 0, i64 0, i32 1), align 4
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %507, label %492

492:                                              ; preds = %486
  %493 = load i8*, i8** %292, align 8
  %494 = call i32 @av_strstart(i8* %493, i8* getelementptr inbounds ([0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_mkv_codec_tags, i64 0, i64 0, i32 0, i64 0), i8** null) #11
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %507

496:                                              ; preds = %492, %501
  %497 = phi i64 [ %506, %501 ], [ 1, %492 ]
  %498 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_mkv_codec_tags, i64 0, i64 %497, i32 1
  %499 = load i32, i32* %498, align 4
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %507, label %501

501:                                              ; preds = %496
  %502 = load i8*, i8** %292, align 8
  %503 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_mkv_codec_tags, i64 0, i64 %497, i32 0, i64 0
  %504 = call i32 @av_strstart(i8* %502, i8* %503, i8** null) #11
  %505 = icmp eq i32 %504, 0
  %506 = add nuw i64 %497, 1
  br i1 %505, label %496, label %507

507:                                              ; preds = %496, %501, %492, %486
  %508 = phi i32 [ 0, %486 ], [ %490, %492 ], [ 0, %496 ], [ %499, %501 ]
  %509 = call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %0, %struct.AVCodec* null) #11
  %510 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 23
  store %struct.AVStream* %509, %struct.AVStream** %510, align 8
  %511 = icmp eq %struct.AVStream* %509, null
  br i1 %511, label %512, label %513

512:                                              ; preds = %507
  call void @av_free(i8* %467) #11
  br label %1767

513:                                              ; preds = %507
  %514 = icmp eq i8* %467, null
  br i1 %514, label %518, label %515

515:                                              ; preds = %513
  %516 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 11
  %517 = call i32 @av_dict_set(%struct.AVDictionary** %516, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0), i8* nonnull %467, i32 8) #11
  br label %518

518:                                              ; preds = %515, %513
  %519 = load i8*, i8** %292, align 8
  %520 = call i32 @strcmp(i8* %519, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i64 0, i64 0)) #12
  %521 = icmp eq i32 %520, 0
  br i1 %521, label %522, label %543

522:                                              ; preds = %518
  %523 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %524 = load i32, i32* %523, align 8
  %525 = icmp sgt i32 %524, 39
  br i1 %525, label %526, label %543

526:                                              ; preds = %522
  %527 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 2
  %528 = load i8*, i8** %527, align 8
  %529 = icmp eq i8* %528, null
  br i1 %529, label %543, label %530

530:                                              ; preds = %526
  %531 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 25
  store i32 1, i32* %531, align 8
  %532 = getelementptr inbounds i8, i8* %528, i64 14
  %533 = bitcast i8* %532 to i16*
  %534 = load i16, i16* %533, align 1
  %535 = zext i16 %534 to i32
  %536 = getelementptr inbounds i8, i8* %528, i64 16
  %537 = bitcast i8* %536 to i32*
  %538 = load i32, i32* %537, align 1
  %539 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_bmp_tags, i64 0, i64 0), i32 %538) #11
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %1011

541:                                              ; preds = %530
  %542 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i64 0, i64 0), i32 %538) #11
  br label %1025

543:                                              ; preds = %526, %522, %518
  %544 = call i32 @strcmp(i8* %519, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.84, i64 0, i64 0)) #12
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %546, label %570

546:                                              ; preds = %543
  %547 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %548 = load i32, i32* %547, align 8
  %549 = icmp sgt i32 %548, 13
  br i1 %549, label %550, label %570

550:                                              ; preds = %546
  %551 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 2
  %552 = load i8*, i8** %551, align 8
  %553 = icmp eq i8* %552, null
  br i1 %553, label %570, label %554

554:                                              ; preds = %550
  %555 = call i32 @ffio_init_context(%struct.AVIOContext* nonnull %9, i8* nonnull %552, i32 %548, i32 0, i8* null, i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)* null, i64 (i8*, i64, i32)* null) #11
  %556 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 19
  %557 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %556, align 8
  %558 = load i32, i32* %547, align 8
  %559 = call i32 @ff_get_wav_header(%struct.AVFormatContext* %0, %struct.AVIOContext* nonnull %9, %struct.AVCodecParameters* %557, i32 %558, i32 0) #11
  %560 = icmp slt i32 %559, 0
  br i1 %560, label %1767, label %561

561:                                              ; preds = %554
  %562 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %556, align 8
  %563 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %562, i64 0, i32 1
  %564 = load i32, i32* %563, align 4
  %565 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %562, i64 0, i32 2
  %566 = load i32, i32* %565, align 8
  %567 = load i32, i32* %547, align 8
  %568 = icmp slt i32 %567, 18
  %569 = select i1 %568, i32 %567, i32 18
  br label %1025

570:                                              ; preds = %550, %546, %543
  %571 = call i32 @strcmp(i8* %519, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.85, i64 0, i64 0)) #12
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %573, label %625

573:                                              ; preds = %570
  %574 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %575 = load i32, i32* %574, align 8
  %576 = icmp sgt i32 %575, 31
  br i1 %576, label %577, label %625

577:                                              ; preds = %573
  %578 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 2
  %579 = load i8*, i8** %578, align 8
  %580 = icmp eq i8* %579, null
  br i1 %580, label %625, label %581

581:                                              ; preds = %577
  %582 = bitcast i8* %579 to i32*
  %583 = load i64, i64* %287, align 8
  %584 = icmp eq i64 %583, 1
  %585 = select i1 %584, %struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i64 0, i64 0), %struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movaudio_tags, i64 0, i64 0)
  %586 = bitcast i8** %578 to i32**
  %587 = load i32, i32* %582, align 1
  %588 = call i32 @ff_codec_get_id(%struct.AVCodecTag* %585, i32 %587) #11
  %589 = icmp eq i32 %588, 0
  br i1 %589, label %607, label %590

590:                                              ; preds = %581
  %591 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 1
  %592 = load i32, i32* %574, align 8
  %593 = add nsw i32 %592, 68
  %594 = call i32 @av_buffer_realloc(%struct.AVBufferRef** %591, i32 %593) #11
  %595 = icmp slt i32 %594, 0
  br i1 %595, label %1767, label %596

596:                                              ; preds = %590
  %597 = load %struct.AVBufferRef*, %struct.AVBufferRef** %591, align 8
  %598 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %597, i64 0, i32 1
  %599 = load i8*, i8** %598, align 8
  store i8* %599, i8** %578, align 8
  %600 = getelementptr inbounds i8, i8* %599, i64 4
  %601 = load i32, i32* %574, align 8
  %602 = sext i32 %601 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %600, i8* align 1 %599, i64 %602, i1 false) #11
  %603 = load i32, i32* %574, align 8
  %604 = add nsw i32 %603, 4
  store i32 %604, i32* %574, align 8
  %605 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %604) #10, !srcloc !2
  %606 = load i32*, i32** %586, align 8
  store i32 %605, i32* %606, align 1
  br label %607

607:                                              ; preds = %596, %581
  %608 = load i8*, i8** %578, align 8
  %609 = getelementptr inbounds i8, i8* %608, i64 4
  %610 = bitcast i8* %609 to i32*
  %611 = load i32, i32* %610, align 1
  %612 = call i32 @ff_codec_get_id(%struct.AVCodecTag* %585, i32 %611) #11
  %613 = load i8*, i8** %578, align 8
  %614 = getelementptr inbounds i8, i8* %613, i64 26
  %615 = bitcast i8* %614 to i16*
  %616 = load i16, i16* %615, align 1
  switch i32 %611, label %1025 [
    i32 0, label %617
    i32 1953984371, label %623
    i32 1936684916, label %623
  ]

617:                                              ; preds = %607
  %618 = call i16 @llvm.bswap.i16(i16 %616) #11
  switch i16 %618, label %1025 [
    i16 8, label %619
    i16 16, label %621
  ]

619:                                              ; preds = %617
  %620 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movaudio_tags, i64 0, i64 0), i32 544694642) #11
  br label %1025

621:                                              ; preds = %617
  %622 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movaudio_tags, i64 0, i64 0), i32 1936684916) #11
  br label %1025

623:                                              ; preds = %607, %607
  %624 = icmp eq i16 %616, 2048
  br i1 %624, label %1021, label %1025

625:                                              ; preds = %577, %573, %570
  %626 = call i32 @strcmp(i8* %519, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.86, i64 0, i64 0)) #12
  %627 = icmp eq i32 %626, 0
  br i1 %627, label %628, label %701

628:                                              ; preds = %625
  %629 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %630 = load i32, i32* %629, align 8
  %631 = icmp sgt i32 %630, 20
  br i1 %631, label %632, label %701

632:                                              ; preds = %628
  %633 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 2
  %634 = load i8*, i8** %633, align 8
  %635 = icmp eq i8* %634, null
  br i1 %635, label %701, label %636

636:                                              ; preds = %632
  %637 = bitcast i8* %634 to i32*
  %638 = load i64, i64* %287, align 8
  %639 = icmp eq i64 %638, 1
  %640 = select i1 %639, %struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i64 0, i64 0), %struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movaudio_tags, i64 0, i64 0)
  %641 = bitcast i8** %633 to i32**
  %642 = load i32, i32* %637, align 1
  %643 = call i32 @ff_codec_get_id(%struct.AVCodecTag* %640, i32 %642) #11
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %662, label %645

645:                                              ; preds = %636
  %646 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 1
  %647 = load i32, i32* %629, align 8
  %648 = add nsw i32 %647, 68
  %649 = call i32 @av_buffer_realloc(%struct.AVBufferRef** %646, i32 %648) #11
  %650 = icmp slt i32 %649, 0
  br i1 %650, label %1767, label %651

651:                                              ; preds = %645
  %652 = load %struct.AVBufferRef*, %struct.AVBufferRef** %646, align 8
  %653 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %652, i64 0, i32 1
  %654 = load i8*, i8** %653, align 8
  store i8* %654, i8** %633, align 8
  %655 = getelementptr inbounds i8, i8* %654, i64 4
  %656 = load i32, i32* %629, align 8
  %657 = sext i32 %656 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %655, i8* align 1 %654, i64 %657, i1 false) #11
  %658 = load i32, i32* %629, align 8
  %659 = add nsw i32 %658, 4
  store i32 %659, i32* %629, align 8
  %660 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %659) #10, !srcloc !2
  %661 = load i32*, i32** %641, align 8
  store i32 %660, i32* %661, align 1
  br label %662

662:                                              ; preds = %651, %636
  %663 = load i8*, i8** %633, align 8
  %664 = getelementptr inbounds i8, i8* %663, i64 4
  %665 = bitcast i8* %664 to i32*
  %666 = load i32, i32* %665, align 1
  %667 = call i32 @ff_codec_get_id(%struct.AVCodecTag* %640, i32 %666) #11
  %668 = icmp eq i32 %667, 0
  br i1 %668, label %669, label %682

669:                                              ; preds = %662
  %670 = load i8*, i8** %633, align 8
  %671 = getelementptr inbounds i8, i8* %670, i64 4
  %672 = bitcast i8* %671 to i32*
  %673 = load i32, i32* %672, align 1
  %674 = icmp eq i32 %673, 541674835
  br i1 %674, label %675, label %678

675:                                              ; preds = %669
  %676 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i64 0, i64 0), i32 860968531) #11
  %677 = icmp eq i32 %676, 0
  br i1 %677, label %678, label %682

678:                                              ; preds = %675, %669
  %679 = phi i32 [ 860968531, %675 ], [ %666, %669 ]
  %680 = load i8*, i8** %252, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %240, i8 0, i64 32, i1 false) #11
  %681 = call i8* @av_fourcc_make_string(i8* nonnull %240, i32 %679) #11
  call void (i8*, i32, i8*, ...) @av_log(i8* %680, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.88, i64 0, i64 0), i8* %681) #11
  br label %682

682:                                              ; preds = %678, %675, %662
  %683 = phi i32 [ %679, %678 ], [ 860968531, %675 ], [ %666, %662 ]
  %684 = phi i32 [ 0, %678 ], [ %676, %675 ], [ %667, %662 ]
  %685 = load i32, i32* %629, align 8
  %686 = icmp sgt i32 %685, 85
  br i1 %686, label %687, label %1025

687:                                              ; preds = %682
  %688 = load i8*, i8** %633, align 8
  %689 = getelementptr inbounds i8, i8* %688, i64 82
  %690 = bitcast i8* %689 to i16*
  %691 = load i16, i16* %690, align 1
  %692 = call i16 @llvm.bswap.i16(i16 %691) #11
  %693 = zext i16 %692 to i32
  %694 = call i32 @ffio_init_context(%struct.AVIOContext* nonnull %9, i8* %688, i32 %685, i32 0, i8* null, i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)* null, i64 (i8*, i64, i32)* null) #11
  %695 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 28, i64 0
  %696 = call i32 @ff_get_qtpalette(i32 %684, %struct.AVIOContext* nonnull %9, i32* %695) #11
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %1025, label %698

698:                                              ; preds = %687
  %699 = and i32 %693, 31
  %700 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 29
  store i32 1, i32* %700, align 8
  br label %1025

701:                                              ; preds = %632, %628, %625
  switch i32 %508, label %1025 [
    i32 65537, label %702
    i32 65536, label %708
    i32 65557, label %714
    i32 86018, label %718
    i32 86032, label %830
    i32 86038, label %855
    i32 69, label %1011
    i32 68, label %1011
    i32 6, label %1011
    i32 5, label %1011
    i32 77824, label %907
    i32 86057, label %910
    i32 86047, label %910
    i32 86036, label %910
    i32 77825, label %910
    i32 86028, label %917
    i32 86041, label %982
    i32 147, label %992
    i32 167, label %1001
    i32 32797, label %1006
  ]

702:                                              ; preds = %701
  %703 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 2
  %704 = load i64, i64* %703, align 8
  switch i64 %704, label %1011 [
    i64 8, label %705
    i64 24, label %706
    i64 32, label %707
  ]

705:                                              ; preds = %702
  br label %1011

706:                                              ; preds = %702
  br label %1011

707:                                              ; preds = %702
  br label %1011

708:                                              ; preds = %701
  %709 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 2
  %710 = load i64, i64* %709, align 8
  switch i64 %710, label %1011 [
    i64 8, label %711
    i64 24, label %712
    i64 32, label %713
  ]

711:                                              ; preds = %708
  br label %1011

712:                                              ; preds = %708
  br label %1011

713:                                              ; preds = %708
  br label %1011

714:                                              ; preds = %701
  %715 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 2
  %716 = load i64, i64* %715, align 8
  %717 = icmp eq i64 %716, 64
  br i1 %717, label %1011, label %1021

718:                                              ; preds = %701
  %719 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %720 = load i32, i32* %719, align 8
  %721 = icmp eq i32 %720, 0
  br i1 %721, label %722, label %1021

722:                                              ; preds = %718
  %723 = call i8* @strstr(i8* %519, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i64 0, i64 0)) #12
  %724 = icmp eq i8* %723, null
  br i1 %724, label %725, label %732

725:                                              ; preds = %722
  %726 = call i8* @strstr(i8* %519, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.106, i64 0, i64 0)) #12
  %727 = icmp eq i8* %726, null
  br i1 %727, label %728, label %732

728:                                              ; preds = %725
  %729 = call i8* @strstr(i8* %519, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i64 0, i64 0)) #12
  %730 = icmp eq i8* %729, null
  %731 = select i1 %730, i32 32, i32 24
  br label %732

732:                                              ; preds = %728, %725, %722
  %733 = phi i32 [ %731, %728 ], [ 8, %722 ], [ 16, %725 ]
  %734 = load double, double* %309, align 8
  %735 = fptosi double %734 to i32
  %736 = icmp eq i32 %257, %735
  br i1 %736, label %768, label %737

737:                                              ; preds = %732
  %738 = icmp eq i32 %258, %735
  br i1 %738, label %768, label %739

739:                                              ; preds = %737
  %740 = icmp eq i32 %259, %735
  br i1 %740, label %768, label %741

741:                                              ; preds = %739
  %742 = icmp eq i32 %260, %735
  br i1 %742, label %768, label %743

743:                                              ; preds = %741
  %744 = icmp eq i32 %261, %735
  br i1 %744, label %768, label %745

745:                                              ; preds = %743
  %746 = icmp eq i32 %262, %735
  br i1 %746, label %768, label %747

747:                                              ; preds = %745
  %748 = icmp eq i32 %263, %735
  br i1 %748, label %768, label %749

749:                                              ; preds = %747
  %750 = icmp eq i32 %264, %735
  br i1 %750, label %768, label %751

751:                                              ; preds = %749
  %752 = icmp eq i32 %265, %735
  br i1 %752, label %768, label %753

753:                                              ; preds = %751
  %754 = icmp eq i32 %266, %735
  br i1 %754, label %768, label %755

755:                                              ; preds = %753
  %756 = icmp eq i32 %267, %735
  br i1 %756, label %768, label %757

757:                                              ; preds = %755
  %758 = icmp eq i32 %268, %735
  br i1 %758, label %768, label %759

759:                                              ; preds = %757
  %760 = icmp eq i32 %269, %735
  br i1 %760, label %768, label %761

761:                                              ; preds = %759
  %762 = icmp eq i32 %270, %735
  br i1 %762, label %768, label %763

763:                                              ; preds = %761
  %764 = icmp eq i32 %271, %735
  br i1 %764, label %768, label %765

765:                                              ; preds = %763
  %766 = icmp eq i32 %272, %735
  %767 = select i1 %766, i32 15, i32 16
  br label %768

768:                                              ; preds = %765, %763, %761, %759, %757, %755, %753, %751, %749, %747, %745, %743, %741, %739, %737, %732
  %769 = phi i32 [ %767, %765 ], [ 0, %732 ], [ 1, %737 ], [ 2, %739 ], [ 3, %741 ], [ 4, %743 ], [ 5, %745 ], [ 6, %747 ], [ 7, %749 ], [ 8, %751 ], [ 9, %753 ], [ 10, %755 ], [ 11, %757 ], [ 12, %759 ], [ 13, %761 ], [ 14, %763 ]
  %770 = call noalias i8* @av_mallocz(i64 69) #11
  %771 = icmp eq i8* %770, null
  br i1 %771, label %1767, label %772

772:                                              ; preds = %768
  %773 = lshr i32 %769, 1
  %774 = and i32 %773, 7
  %775 = or i32 %774, %733
  %776 = trunc i32 %775 to i8
  store i8 %776, i8* %770, align 1
  %777 = shl nuw nsw i32 %769, 7
  %778 = zext i32 %777 to i64
  %779 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 3
  %780 = load i64, i64* %779, align 8
  %781 = shl i64 %780, 3
  %782 = or i64 %781, %778
  %783 = trunc i64 %782 to i8
  %784 = getelementptr inbounds i8, i8* %770, i64 1
  store i8 %783, i8* %784, align 1
  %785 = load i8*, i8** %292, align 8
  %786 = call i8* @strstr(i8* %785, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.89, i64 0, i64 0)) #12
  %787 = icmp eq i8* %786, null
  br i1 %787, label %1011, label %788

788:                                              ; preds = %772
  %789 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 1
  %790 = load double, double* %789, align 8
  %791 = fptosi double %790 to i32
  %792 = icmp eq i32 %257, %791
  br i1 %792, label %824, label %793

793:                                              ; preds = %788
  %794 = icmp eq i32 %258, %791
  br i1 %794, label %824, label %795

795:                                              ; preds = %793
  %796 = icmp eq i32 %259, %791
  br i1 %796, label %824, label %797

797:                                              ; preds = %795
  %798 = icmp eq i32 %260, %791
  br i1 %798, label %824, label %799

799:                                              ; preds = %797
  %800 = icmp eq i32 %261, %791
  br i1 %800, label %824, label %801

801:                                              ; preds = %799
  %802 = icmp eq i32 %262, %791
  br i1 %802, label %824, label %803

803:                                              ; preds = %801
  %804 = icmp eq i32 %263, %791
  br i1 %804, label %824, label %805

805:                                              ; preds = %803
  %806 = icmp eq i32 %264, %791
  br i1 %806, label %824, label %807

807:                                              ; preds = %805
  %808 = icmp eq i32 %265, %791
  br i1 %808, label %824, label %809

809:                                              ; preds = %807
  %810 = icmp eq i32 %266, %791
  br i1 %810, label %824, label %811

811:                                              ; preds = %809
  %812 = icmp eq i32 %267, %791
  br i1 %812, label %824, label %813

813:                                              ; preds = %811
  %814 = icmp eq i32 %268, %791
  br i1 %814, label %824, label %815

815:                                              ; preds = %813
  %816 = icmp eq i32 %269, %791
  br i1 %816, label %824, label %817

817:                                              ; preds = %815
  %818 = icmp eq i32 %270, %791
  br i1 %818, label %824, label %819

819:                                              ; preds = %817
  %820 = icmp eq i32 %271, %791
  br i1 %820, label %824, label %821

821:                                              ; preds = %819
  %822 = icmp eq i32 %272, %791
  %823 = select i1 %822, i8 120, i8 -128
  br label %824

824:                                              ; preds = %821, %819, %817, %815, %813, %811, %809, %807, %805, %803, %801, %799, %797, %795, %793, %788
  %825 = phi i8 [ %823, %821 ], [ 0, %788 ], [ 8, %793 ], [ 16, %795 ], [ 24, %797 ], [ 32, %799 ], [ 40, %801 ], [ 48, %803 ], [ 56, %805 ], [ 64, %807 ], [ 72, %809 ], [ 80, %811 ], [ 88, %813 ], [ 96, %815 ], [ 104, %817 ], [ 112, %819 ]
  %826 = getelementptr inbounds i8, i8* %770, i64 2
  store i8 86, i8* %826, align 1
  %827 = getelementptr inbounds i8, i8* %770, i64 3
  store i8 -27, i8* %827, align 1
  %828 = or i8 %825, -128
  %829 = getelementptr inbounds i8, i8* %770, i64 4
  store i8 %828, i8* %829, align 1
  br label %1011

830:                                              ; preds = %701
  %831 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %832 = load i32, i32* %831, align 8
  %833 = icmp ne i32 %832, 0
  %834 = icmp slt i32 %832, 2147483571
  %835 = and i1 %833, %834
  br i1 %835, label %836, label %1021

836:                                              ; preds = %830
  %837 = add nsw i32 %832, 12
  %838 = add nsw i32 %832, 76
  %839 = sext i32 %838 to i64
  %840 = call noalias i8* @av_mallocz(i64 %839) #11
  %841 = icmp eq i8* %840, null
  br i1 %841, label %1767, label %842

842:                                              ; preds = %836
  %843 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %837) #10, !srcloc !2
  %844 = bitcast i8* %840 to i32*
  store i32 %843, i32* %844, align 1
  %845 = getelementptr inbounds i8, i8* %840, i64 4
  %846 = bitcast i8* %845 to i32*
  store i32 1667329121, i32* %846, align 1
  %847 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 0) #10, !srcloc !2
  %848 = getelementptr inbounds i8, i8* %840, i64 8
  %849 = bitcast i8* %848 to i32*
  store i32 %847, i32* %849, align 1
  %850 = getelementptr inbounds i8, i8* %840, i64 12
  %851 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 2
  %852 = load i8*, i8** %851, align 8
  %853 = load i32, i32* %831, align 8
  %854 = sext i32 %853 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %850, i8* align 1 %852, i64 %854, i1 false) #11
  br label %1011

855:                                              ; preds = %701
  %856 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 3
  %857 = load i64, i64* %856, align 8
  %858 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 2
  %859 = load i64, i64* %858, align 8
  %860 = or i64 %859, %857
  %861 = icmp ugt i64 %860, 65535
  br i1 %861, label %862, label %869

862:                                              ; preds = %855
  %863 = load i8*, i8** %252, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %863, i32 24, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.91, i64 0, i64 0), i64 %857, i64 %859) #11
  %864 = load %struct.AVFormatContext*, %struct.AVFormatContext** %251, align 8
  %865 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %864, i64 0, i32 32
  %866 = load i32, i32* %865, align 4
  %867 = and i32 %866, 8
  %868 = icmp eq i32 %867, 0
  br i1 %868, label %1760, label %1758

869:                                              ; preds = %855
  %870 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 1
  %871 = load double, double* %870, align 8
  %872 = fcmp nsz olt double %871, 0.000000e+00
  %873 = fcmp nsz ogt double %871, 0x41DFFFFFFFC00000
  %874 = or i1 %872, %873
  br i1 %874, label %1758, label %875

875:                                              ; preds = %869
  %876 = call noalias i8* @av_mallocz(i64 86) #11
  %877 = icmp eq i8* %876, null
  br i1 %877, label %1758, label %878

878:                                              ; preds = %875
  %879 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 826365012) #10, !srcloc !2
  %880 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %879) #10, !srcloc !2
  %881 = bitcast i8* %876 to i32*
  store i32 %880, i32* %881, align 1
  %882 = getelementptr inbounds i8, i8* %876, i64 4
  %883 = bitcast i8* %882 to i16*
  store i16 1, i16* %883, align 1
  %884 = getelementptr inbounds i8, i8* %876, i64 6
  %885 = load i64, i64* %856, align 8
  %886 = trunc i64 %885 to i16
  %887 = bitcast i8* %884 to i16*
  store i16 %886, i16* %887, align 1
  %888 = getelementptr inbounds i8, i8* %876, i64 8
  %889 = load i64, i64* %858, align 8
  %890 = trunc i64 %889 to i16
  %891 = bitcast i8* %888 to i16*
  store i16 %890, i16* %891, align 1
  %892 = getelementptr inbounds i8, i8* %876, i64 10
  %893 = load double, double* %870, align 8
  %894 = fptoui double %893 to i32
  %895 = bitcast i8* %892 to i32*
  store i32 %894, i32* %895, align 1
  %896 = getelementptr inbounds i8, i8* %876, i64 14
  %897 = load double, double* %255, align 8
  %898 = load i64, i64* %256, align 8
  %899 = uitofp i64 %898 to double
  %900 = fmul nsz double %897, %899
  %901 = fptosi double %900 to i64
  %902 = load double, double* %870, align 8
  %903 = fptosi double %902 to i64
  %904 = call i64 @av_rescale(i64 %901, i64 %903, i64 1000000000) #10
  %905 = trunc i64 %904 to i32
  %906 = bitcast i8* %896 to i32*
  store i32 %905, i32* %906, align 1
  br label %1011

907:                                              ; preds = %701
  %908 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 1
  store double 8.000000e+03, double* %908, align 8
  %909 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 3
  store i64 1, i64* %909, align 8
  br label %1011

910:                                              ; preds = %701, %701, %701, %701
  %911 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 2
  %912 = load i8*, i8** %911, align 8
  %913 = icmp eq i8* %912, null
  br i1 %913, label %914, label %1767

914:                                              ; preds = %910
  switch i32 %508, label %915 [
    i32 86028, label %917
    i32 86041, label %982
  ]

915:                                              ; preds = %914
  %916 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  br label %1037

917:                                              ; preds = %914, %701
  %918 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %919 = load i32, i32* %918, align 8
  %920 = icmp eq i32 %919, 0
  br i1 %920, label %1021, label %921

921:                                              ; preds = %917
  %922 = load %struct.AVStream*, %struct.AVStream** %510, align 8
  %923 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 2
  %924 = load i8*, i8** %923, align 8
  %925 = icmp slt i32 %919, 42
  br i1 %925, label %931, label %926

926:                                              ; preds = %921
  %927 = getelementptr inbounds i8, i8* %924, i64 4
  %928 = load i8, i8* %927, align 1
  %929 = and i8 %928, 127
  %930 = icmp eq i8 %929, 0
  br i1 %930, label %932, label %931

931:                                              ; preds = %926, %921
  call void (i8*, i32, i8*, ...) @av_log(i8* %254, i32 24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.108, i64 0, i64 0)) #11
  store i32 0, i32* %918, align 8
  br label %1011

932:                                              ; preds = %926
  store i32 42, i32* %918, align 8
  %933 = add nsw i32 %919, -42
  %934 = icmp sgt i32 %933, 3
  br i1 %934, label %935, label %1011

935:                                              ; preds = %932
  %936 = getelementptr inbounds i8, i8* %924, i64 42
  %937 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %922, i64 0, i32 19
  br label %938

938:                                              ; preds = %977, %935
  %939 = phi i32 [ %933, %935 ], [ %980, %977 ]
  %940 = phi i8* [ %936, %935 ], [ %979, %977 ]
  %941 = getelementptr inbounds i8, i8* %940, i64 1
  %942 = load i8, i8* %941, align 1
  %943 = zext i8 %942 to i32
  %944 = shl nuw nsw i32 %943, 16
  %945 = getelementptr inbounds i8, i8* %940, i64 2
  %946 = load i8, i8* %945, align 1
  %947 = zext i8 %946 to i32
  %948 = shl nuw nsw i32 %947, 8
  %949 = or i32 %948, %944
  %950 = getelementptr inbounds i8, i8* %940, i64 3
  %951 = load i8, i8* %950, align 1
  %952 = zext i8 %951 to i32
  %953 = or i32 %949, %952
  %954 = getelementptr inbounds i8, i8* %940, i64 4
  %955 = add nsw i32 %939, -4
  %956 = icmp slt i32 %955, %953
  br i1 %956, label %1025, label %957

957:                                              ; preds = %938
  %958 = load i8, i8* %940, align 1
  %959 = and i8 %958, 127
  %960 = icmp eq i8 %959, 4
  br i1 %960, label %961, label %977

961:                                              ; preds = %957
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #11
  store %struct.AVDictionary* null, %struct.AVDictionary** %8, align 8
  %962 = call i32 @ff_vorbis_comment(%struct.AVFormatContext* %0, %struct.AVDictionary** nonnull %8, i8* %954, i32 %953, i32 0) #11
  %963 = load %struct.AVDictionary*, %struct.AVDictionary** %8, align 8
  %964 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %963, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.109, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 0) #11
  %965 = icmp eq %struct.AVDictionaryEntry* %964, null
  br i1 %965, label %976, label %966

966:                                              ; preds = %961
  %967 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %964, i64 0, i32 1
  %968 = load i8*, i8** %967, align 8
  %969 = call i64 @strtol(i8* nocapture %968, i8** null, i32 0) #11
  %970 = add i64 %969, -1
  %971 = icmp ugt i64 %970, 262142
  br i1 %971, label %972, label %973

972:                                              ; preds = %966
  call void (i8*, i32, i8*, ...) @av_log(i8* %254, i32 24, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.110, i64 0, i64 0)) #11
  br label %976

973:                                              ; preds = %966
  %974 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %937, align 8
  %975 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %974, i64 0, i32 21
  store i64 %969, i64* %975, align 8
  br label %976

976:                                              ; preds = %973, %972, %961
  call void @av_dict_free(%struct.AVDictionary** nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #11
  br label %977

977:                                              ; preds = %976, %957
  %978 = zext i32 %953 to i64
  %979 = getelementptr inbounds i8, i8* %954, i64 %978
  %980 = sub nsw i32 %955, %953
  %981 = icmp sgt i32 %980, 3
  br i1 %981, label %938, label %1025

982:                                              ; preds = %914, %701
  %983 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %984 = load i32, i32* %983, align 8
  %985 = icmp slt i32 %984, 2
  br i1 %985, label %986, label %1021

986:                                              ; preds = %982
  %987 = load i8*, i8** %252, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %987, i32 32, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.93, i64 0, i64 0)) #11
  %988 = call noalias i8* @av_mallocz(i64 66) #11
  %989 = icmp eq i8* %988, null
  br i1 %989, label %1767, label %990

990:                                              ; preds = %986
  %991 = bitcast i8* %988 to i16*
  store i16 1040, i16* %991, align 1
  br label %1011

992:                                              ; preds = %701
  %993 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %994 = load i32, i32* %993, align 8
  %995 = icmp eq i32 %994, 4
  br i1 %995, label %996, label %1021

996:                                              ; preds = %992
  %997 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 2
  %998 = bitcast i8** %997 to i32**
  %999 = load i32*, i32** %998, align 8
  %1000 = load i32, i32* %999, align 1
  br label %1011

1001:                                             ; preds = %701
  %1002 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %1003 = load i32, i32* %1002, align 8
  %1004 = icmp eq i32 %1003, 0
  br i1 %1004, label %1011, label %1005

1005:                                             ; preds = %1001
  store i32 0, i32* %1002, align 8
  br label %1011

1006:                                             ; preds = %701
  %1007 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %1008 = load i32, i32* %1007, align 8
  %1009 = icmp eq i32 %1008, 0
  %1010 = select i1 %1009, i32 0, i32 4
  br label %1011

1011:                                             ; preds = %1006, %1005, %1001, %996, %990, %932, %931, %907, %878, %842, %824, %772, %714, %713, %712, %711, %708, %707, %706, %705, %702, %701, %701, %701, %701, %530
  %1012 = phi i32 [ 86028, %932 ], [ 86028, %931 ], [ 65559, %714 ], [ %539, %530 ], [ 65541, %705 ], [ 65549, %706 ], [ 65545, %707 ], [ 65537, %702 ], [ 65541, %711 ], [ 65548, %712 ], [ 65544, %713 ], [ 65536, %708 ], [ 86038, %878 ], [ 77824, %907 ], [ 167, %1005 ], [ 147, %996 ], [ 86041, %990 ], [ 86032, %842 ], [ 86018, %772 ], [ 86018, %824 ], [ 167, %1001 ], [ %508, %701 ], [ %508, %701 ], [ %508, %701 ], [ %508, %701 ], [ 32797, %1006 ]
  %1013 = phi i32 [ 8, %932 ], [ 0, %931 ], [ 0, %714 ], [ 40, %530 ], [ 0, %705 ], [ 0, %706 ], [ 0, %707 ], [ 0, %702 ], [ 0, %711 ], [ 0, %712 ], [ 0, %713 ], [ 0, %708 ], [ 0, %878 ], [ 0, %907 ], [ 0, %1005 ], [ 0, %996 ], [ 0, %990 ], [ 0, %842 ], [ 0, %772 ], [ 0, %824 ], [ 0, %1001 ], [ 26, %701 ], [ 26, %701 ], [ 26, %701 ], [ 26, %701 ], [ %1010, %1006 ]
  %1014 = phi i32 [ %370, %932 ], [ %370, %931 ], [ %370, %714 ], [ %538, %530 ], [ %370, %705 ], [ %370, %706 ], [ %370, %707 ], [ %370, %702 ], [ %370, %711 ], [ %370, %712 ], [ %370, %713 ], [ %370, %708 ], [ %370, %878 ], [ %370, %907 ], [ %370, %1005 ], [ %1000, %996 ], [ %370, %990 ], [ %370, %842 ], [ %370, %772 ], [ %370, %824 ], [ %370, %1001 ], [ %370, %701 ], [ %370, %701 ], [ %370, %701 ], [ %370, %701 ], [ %370, %1006 ]
  %1015 = phi i8* [ null, %932 ], [ null, %931 ], [ null, %714 ], [ null, %530 ], [ null, %705 ], [ null, %706 ], [ null, %707 ], [ null, %702 ], [ null, %711 ], [ null, %712 ], [ null, %713 ], [ null, %708 ], [ %876, %878 ], [ null, %907 ], [ null, %1005 ], [ null, %996 ], [ %988, %990 ], [ %840, %842 ], [ %770, %772 ], [ %770, %824 ], [ null, %1001 ], [ null, %701 ], [ null, %701 ], [ null, %701 ], [ null, %701 ], [ null, %1006 ]
  %1016 = phi i32 [ 0, %932 ], [ 0, %931 ], [ 0, %714 ], [ 0, %530 ], [ 0, %705 ], [ 0, %706 ], [ 0, %707 ], [ 0, %702 ], [ 0, %711 ], [ 0, %712 ], [ 0, %713 ], [ 0, %708 ], [ 22, %878 ], [ 0, %907 ], [ 0, %1005 ], [ 0, %996 ], [ 2, %990 ], [ %837, %842 ], [ 2, %772 ], [ 5, %824 ], [ 0, %1001 ], [ 0, %701 ], [ 0, %701 ], [ 0, %701 ], [ 0, %701 ], [ 0, %1006 ]
  %1017 = phi i32 [ -1, %932 ], [ -1, %931 ], [ -1, %714 ], [ %535, %530 ], [ -1, %705 ], [ -1, %706 ], [ -1, %707 ], [ -1, %702 ], [ -1, %711 ], [ -1, %712 ], [ -1, %713 ], [ -1, %708 ], [ -1, %878 ], [ -1, %907 ], [ -1, %1005 ], [ -1, %996 ], [ -1, %990 ], [ -1, %842 ], [ -1, %772 ], [ -1, %824 ], [ -1, %1001 ], [ -1, %701 ], [ -1, %701 ], [ -1, %701 ], [ -1, %701 ], [ -1, %1006 ]
  %1018 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %1019 = load i32, i32* %1018, align 8
  %1020 = sub nsw i32 %1019, %1013
  store i32 %1020, i32* %1018, align 8
  br label %1037

1021:                                             ; preds = %992, %982, %917, %830, %718, %714, %623
  %1022 = phi i32 [ 65540, %623 ], [ 86032, %830 ], [ 86028, %917 ], [ 86041, %982 ], [ 147, %992 ], [ 65557, %714 ], [ 86018, %718 ]
  %1023 = phi i32 [ %611, %623 ], [ %370, %830 ], [ %370, %917 ], [ %370, %982 ], [ %370, %992 ], [ %370, %714 ], [ %370, %718 ]
  %1024 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  br label %1037

1025:                                             ; preds = %977, %938, %701, %698, %687, %682, %623, %621, %619, %617, %607, %561, %541
  %1026 = phi i32 [ %542, %541 ], [ %564, %561 ], [ %622, %621 ], [ %612, %623 ], [ %620, %619 ], [ %612, %617 ], [ %684, %687 ], [ %684, %698 ], [ %684, %682 ], [ %612, %607 ], [ %508, %701 ], [ %508, %938 ], [ %508, %977 ]
  %1027 = phi i32 [ 40, %541 ], [ %569, %561 ], [ 0, %621 ], [ 0, %623 ], [ 0, %619 ], [ 0, %617 ], [ 0, %687 ], [ 0, %698 ], [ 0, %682 ], [ 0, %607 ], [ 0, %701 ], [ 8, %938 ], [ 8, %977 ]
  %1028 = phi i32 [ %538, %541 ], [ %566, %561 ], [ 1936684916, %621 ], [ %611, %623 ], [ 544694642, %619 ], [ 0, %617 ], [ %683, %687 ], [ %683, %698 ], [ %683, %682 ], [ %611, %607 ], [ %370, %701 ], [ %370, %938 ], [ %370, %977 ]
  %1029 = phi i32 [ %535, %541 ], [ -1, %561 ], [ -1, %621 ], [ -1, %623 ], [ -1, %619 ], [ -1, %617 ], [ %693, %687 ], [ %699, %698 ], [ -1, %682 ], [ -1, %607 ], [ -1, %701 ], [ -1, %938 ], [ -1, %977 ]
  %1030 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 0
  %1031 = load i32, i32* %1030, align 8
  %1032 = sub nsw i32 %1031, %1027
  store i32 %1032, i32* %1030, align 8
  %1033 = icmp eq i32 %1026, 0
  br i1 %1033, label %1034, label %1037

1034:                                             ; preds = %1025
  %1035 = load i8*, i8** %252, align 8
  %1036 = load i8*, i8** %292, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1035, i32 32, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.94, i64 0, i64 0), i8* %1036) #11
  br label %1037

1037:                                             ; preds = %1034, %1025, %1021, %1011, %915
  %1038 = phi i32* [ %1018, %1011 ], [ %1030, %1034 ], [ %1030, %1025 ], [ %1024, %1021 ], [ %916, %915 ]
  %1039 = phi i32 [ %1017, %1011 ], [ %1029, %1034 ], [ %1029, %1025 ], [ -1, %1021 ], [ -1, %915 ]
  %1040 = phi i32 [ %1016, %1011 ], [ 0, %1034 ], [ 0, %1025 ], [ 0, %1021 ], [ 0, %915 ]
  %1041 = phi i8* [ %1015, %1011 ], [ null, %1034 ], [ null, %1025 ], [ null, %1021 ], [ null, %915 ]
  %1042 = phi i32 [ %1014, %1011 ], [ %1028, %1034 ], [ %1028, %1025 ], [ %1023, %1021 ], [ %370, %915 ]
  %1043 = phi i32 [ %1013, %1011 ], [ %1027, %1034 ], [ %1027, %1025 ], [ 0, %1021 ], [ 0, %915 ]
  %1044 = phi i32 [ %1012, %1011 ], [ 0, %1034 ], [ %1026, %1025 ], [ %1022, %1021 ], [ %508, %915 ]
  %1045 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 7
  %1046 = load double, double* %1045, align 8
  %1047 = fcmp nsz olt double %1046, 1.000000e-02
  br i1 %1047, label %1048, label %1050

1048:                                             ; preds = %1037
  %1049 = load i8*, i8** %252, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1049, i32 24, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.95, i64 0, i64 0), double %1046) #11
  store double 1.000000e+00, double* %1045, align 8
  br label %1050

1050:                                             ; preds = %1048, %1037
  %1051 = phi double [ 1.000000e+00, %1048 ], [ %1046, %1037 ]
  %1052 = load i64, i64* %256, align 8
  %1053 = uitofp i64 %1052 to double
  %1054 = fmul nsz double %1051, %1053
  %1055 = fptoui double %1054 to i32
  call void @avpriv_set_pts_info(%struct.AVStream* %509, i32 64, i32 %1055, i32 1000000000) #11
  %1056 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 21
  %1057 = load i64, i64* %1056, align 8
  %1058 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 4
  %1059 = bitcast %struct.AVRational* %1058 to i64*
  %1060 = load i64, i64* %1059, align 8
  %1061 = call i64 @av_rescale_q(i64 %1057, i64 4294967296000000001, i64 %1060) #10
  %1062 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 22
  store i64 %1061, i64* %1062, align 8
  %1063 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 19
  %1064 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1065 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1064, i64 0, i32 1
  store i32 %1044, i32* %1065, align 4
  %1066 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 6
  %1067 = load i8*, i8** %1066, align 8
  %1068 = call i32 @strcmp(i8* %1067, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i64 0, i64 0)) #12
  %1069 = icmp eq i32 %1068, 0
  br i1 %1069, label %1073, label %1070

1070:                                             ; preds = %1050
  %1071 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 11
  %1072 = call i32 @av_dict_set(%struct.AVDictionary** %1071, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.96, i64 0, i64 0), i8* %1067, i32 0) #11
  br label %1073

1073:                                             ; preds = %1070, %1050
  %1074 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 11
  %1075 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 3
  %1076 = load i8*, i8** %1075, align 8
  %1077 = call i32 @av_dict_set(%struct.AVDictionary** %1074, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8* %1076, i32 0) #11
  %1078 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 9
  %1079 = load i64, i64* %1078, align 8
  %1080 = icmp eq i64 %1079, 0
  br i1 %1080, label %1085, label %1081

1081:                                             ; preds = %1073
  %1082 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 8
  %1083 = load i32, i32* %1082, align 8
  %1084 = or i32 %1083, 1
  store i32 %1084, i32* %1082, align 8
  br label %1085

1085:                                             ; preds = %1081, %1073
  %1086 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 10
  %1087 = load i64, i64* %1086, align 8
  %1088 = icmp eq i64 %1087, 0
  br i1 %1088, label %1093, label %1089

1089:                                             ; preds = %1085
  %1090 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 8
  %1091 = load i32, i32* %1090, align 8
  %1092 = or i32 %1091, 64
  store i32 %1092, i32* %1090, align 8
  br label %1093

1093:                                             ; preds = %1089, %1085
  %1094 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 11
  %1095 = load i64, i64* %1094, align 8
  %1096 = icmp eq i64 %1095, 0
  br i1 %1096, label %1101, label %1097

1097:                                             ; preds = %1093
  %1098 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 8
  %1099 = load i32, i32* %1098, align 8
  %1100 = or i32 %1099, 8
  store i32 %1100, i32* %1098, align 8
  br label %1101

1101:                                             ; preds = %1097, %1093
  %1102 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 12
  %1103 = load i64, i64* %1102, align 8
  %1104 = icmp eq i64 %1103, 0
  br i1 %1104, label %1109, label %1105

1105:                                             ; preds = %1101
  %1106 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 8
  %1107 = load i32, i32* %1106, align 8
  %1108 = or i32 %1107, 128
  store i32 %1108, i32* %1106, align 8
  br label %1109

1109:                                             ; preds = %1105, %1101
  %1110 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 13
  %1111 = load i64, i64* %1110, align 8
  %1112 = icmp eq i64 %1111, 0
  br i1 %1112, label %1117, label %1113

1113:                                             ; preds = %1109
  %1114 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 8
  %1115 = load i32, i32* %1114, align 8
  %1116 = or i32 %1115, 256
  store i32 %1116, i32* %1114, align 8
  br label %1117

1117:                                             ; preds = %1113, %1109
  %1118 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 15, i32 1
  %1119 = load i32, i32* %1118, align 8
  %1120 = icmp eq i32 %1119, 0
  br i1 %1120, label %1129, label %1121

1121:                                             ; preds = %1117
  %1122 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 15, i32 0, i32 0
  %1123 = load i64, i64* %1122, align 8
  %1124 = icmp eq i64 %1123, 0
  %1125 = select i1 %1124, i32 2, i32 4
  %1126 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 8
  %1127 = load i32, i32* %1126, align 8
  %1128 = or i32 %1125, %1127
  store i32 %1128, i32* %1126, align 8
  br label %1129

1129:                                             ; preds = %1121, %1117
  %1130 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1131 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1130, i64 0, i32 3
  %1132 = load i8*, i8** %1131, align 8
  %1133 = icmp eq i8* %1132, null
  br i1 %1133, label %1134, label %1158

1134:                                             ; preds = %1129
  %1135 = icmp eq i8* %1041, null
  br i1 %1135, label %1139, label %1136

1136:                                             ; preds = %1134
  store i8* %1041, i8** %1131, align 8
  %1137 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1138 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1137, i64 0, i32 4
  store i32 %1040, i32* %1138, align 8
  br label %1158

1139:                                             ; preds = %1134
  %1140 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 5, i32 2
  %1141 = load i8*, i8** %1140, align 8
  %1142 = icmp eq i8* %1141, null
  br i1 %1142, label %1158, label %1143

1143:                                             ; preds = %1139
  %1144 = load i32, i32* %1038, align 8
  %1145 = icmp sgt i32 %1144, 0
  br i1 %1145, label %1146, label %1158

1146:                                             ; preds = %1143
  %1147 = call i32 @ff_alloc_extradata(%struct.AVCodecParameters* %1130, i32 %1144) #11
  %1148 = icmp eq i32 %1147, 0
  br i1 %1148, label %1149, label %1767

1149:                                             ; preds = %1146
  %1150 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1151 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1150, i64 0, i32 3
  %1152 = load i8*, i8** %1151, align 8
  %1153 = load i8*, i8** %1140, align 8
  %1154 = sext i32 %1043 to i64
  %1155 = getelementptr inbounds i8, i8* %1153, i64 %1154
  %1156 = load i32, i32* %1038, align 8
  %1157 = sext i32 %1156 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1152, i8* align 1 %1155, i64 %1157, i1 false) #11
  br label %1158

1158:                                             ; preds = %1149, %1143, %1139, %1136, %1129
  %1159 = load i64, i64* %287, align 8
  switch i64 %1159, label %1720 [
    i64 1, label %1160
    i64 2, label %1657
  ]

1160:                                             ; preds = %1158
  %1161 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 19, i32 0, i32 2
  %1162 = bitcast i8** %1161 to %struct.MatroskaTrackPlane**
  %1163 = load %struct.MatroskaTrackPlane*, %struct.MatroskaTrackPlane** %1162, align 8
  %1164 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1165 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1164, i64 0, i32 0
  store i32 0, i32* %1165, align 8
  %1166 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1167 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1166, i64 0, i32 2
  store i32 %1042, i32* %1167, align 8
  %1168 = icmp sgt i32 %1039, -1
  br i1 %1168, label %1169, label %1172

1169:                                             ; preds = %1160
  %1170 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1171 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1170, i64 0, i32 7
  store i32 %1039, i32* %1171, align 8
  br label %1172

1172:                                             ; preds = %1169, %1160
  %1173 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 3
  %1174 = load i64, i64* %1173, align 8
  %1175 = trunc i64 %1174 to i32
  %1176 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1177 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1176, i64 0, i32 11
  store i32 %1175, i32* %1177, align 8
  %1178 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 4
  %1179 = load i64, i64* %1178, align 8
  %1180 = trunc i64 %1179 to i32
  %1181 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1182 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1181, i64 0, i32 12
  store i32 %1180, i32* %1182, align 4
  %1183 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 7
  %1184 = load i64, i64* %1183, align 8
  switch i64 %1184, label %1219 [
    i64 1, label %1185
    i64 2, label %1215
  ]

1185:                                             ; preds = %1172
  %1186 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 8
  %1187 = load i64, i64* %1186, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %273) #11
  store i32 -1431655766, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %274) #11
  store i32 -1431655766, i32* %7, align 4
  %1188 = load i8*, i8** %275, align 8
  %1189 = icmp eq i8* %1188, null
  br i1 %1189, label %1201, label %1190

1190:                                             ; preds = %1185
  %1191 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %1188, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.111, i64 0, i64 0), i32* nonnull %6, i32* nonnull %7) #11
  %1192 = icmp eq i32 %1191, 2
  br i1 %1192, label %1193, label %1201

1193:                                             ; preds = %1190
  %1194 = load i32, i32* %6, align 4
  %1195 = add i32 %1194, -36
  %1196 = icmp ult i32 %1195, 16
  br i1 %1196, label %1197, label %1201

1197:                                             ; preds = %1193
  %1198 = load i32, i32* %7, align 4
  %1199 = icmp sgt i32 %1198, 99
  %1200 = zext i1 %1199 to i32
  br label %1201

1201:                                             ; preds = %1197, %1193, %1190, %1185
  %1202 = phi i32 [ 0, %1190 ], [ 0, %1185 ], [ 0, %1193 ], [ %1200, %1197 ]
  switch i64 %1187, label %1212 [
    i64 0, label %1213
    i64 2, label %1203
    i64 1, label %1204
    i64 6, label %1205
    i64 14, label %1206
    i64 9, label %1209
  ]

1203:                                             ; preds = %1201
  br label %1213

1204:                                             ; preds = %1201
  br label %1213

1205:                                             ; preds = %1201
  br label %1213

1206:                                             ; preds = %1201
  %1207 = icmp eq i32 %1202, 0
  %1208 = select i1 %1207, i32 5, i32 4
  br label %1213

1209:                                             ; preds = %1201
  %1210 = icmp eq i32 %1202, 0
  %1211 = select i1 %1210, i32 4, i32 5
  br label %1213

1212:                                             ; preds = %1201
  br label %1213

1213:                                             ; preds = %1212, %1209, %1206, %1205, %1204, %1203, %1201
  %1214 = phi i32 [ 0, %1212 ], [ %1211, %1209 ], [ %1208, %1206 ], [ 3, %1205 ], [ 2, %1204 ], [ 0, %1203 ], [ 1, %1201 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %274) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %273) #11
  br label %1215

1215:                                             ; preds = %1172, %1213
  %1216 = phi i32 [ %1214, %1213 ], [ 1, %1172 ]
  %1217 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1218 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1217, i64 0, i32 14
  store i32 %1216, i32* %1218, align 8
  br label %1219

1219:                                             ; preds = %1215, %1172
  %1220 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 9
  %1221 = load i64, i64* %1220, align 8
  %1222 = add i64 %1221, -1
  %1223 = icmp ult i64 %1222, 14
  br i1 %1223, label %1224, label %1235

1224:                                             ; preds = %1219
  %1225 = trunc i64 %1221 to i32
  %1226 = add i32 %1225, -1
  %1227 = icmp ult i32 %1226, 11
  br i1 %1227, label %1228, label %1235

1228:                                             ; preds = %1224
  %1229 = sext i32 %1226 to i64
  %1230 = getelementptr inbounds [11 x i64], [11 x i64]* @switch.table.matroska_read_header, i64 0, i64 %1229
  %1231 = load i64, i64* %1230, align 8
  %1232 = sext i32 %1226 to i64
  %1233 = getelementptr inbounds [11 x i64], [11 x i64]* @switch.table.matroska_read_header.162, i64 0, i64 %1232
  %1234 = load i64, i64* %1233, align 8
  br label %1235

1235:                                             ; preds = %1228, %1224, %1219
  %1236 = phi i64 [ 1, %1219 ], [ 1, %1224 ], [ %1231, %1228 ]
  %1237 = phi i64 [ 1, %1219 ], [ 1, %1224 ], [ %1234, %1228 ]
  %1238 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 6
  %1239 = load i64, i64* %1238, align 8
  %1240 = icmp ult i64 %1239, 4
  br i1 %1240, label %1241, label %1260

1241:                                             ; preds = %1235
  %1242 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 10, i32 0
  %1243 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 10, i32 1
  %1244 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1245 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1244, i64 0, i32 12
  %1246 = load i32, i32* %1245, align 4
  %1247 = sext i32 %1246 to i64
  %1248 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 1
  %1249 = load i64, i64* %1248, align 8
  %1250 = mul nsw i64 %1236, %1247
  %1251 = mul i64 %1250, %1249
  %1252 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1244, i64 0, i32 11
  %1253 = load i32, i32* %1252, align 8
  %1254 = sext i32 %1253 to i64
  %1255 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 2
  %1256 = load i64, i64* %1255, align 8
  %1257 = mul nsw i64 %1237, %1254
  %1258 = mul i64 %1257, %1256
  %1259 = call i32 @av_reduce(i32* %1242, i32* %1243, i64 %1251, i64 %1258, i64 255) #11
  br label %1260

1260:                                             ; preds = %1241, %1235
  %1261 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1262 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1261, i64 0, i32 1
  %1263 = load i32, i32* %1262, align 4
  %1264 = icmp eq i32 %1263, 173
  br i1 %1264, label %1267, label %1265

1265:                                             ; preds = %1260
  %1266 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 28
  store i32 2, i32* %1266, align 4
  br label %1267

1267:                                             ; preds = %1265, %1260
  %1268 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 8
  %1269 = load i64, i64* %1268, align 8
  %1270 = icmp eq i64 %1269, 0
  br i1 %1270, label %1290, label %1271

1271:                                             ; preds = %1267
  %1272 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 12
  %1273 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %1272, i64 0, i32 0
  %1274 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 12, i32 1
  %1275 = call i32 @av_reduce(i32* %1273, i32* %1274, i64 1000000000, i64 %1269, i64 30000) #11
  %1276 = load i32, i32* %1273, align 8
  %1277 = sext i32 %1276 to i64
  %1278 = load i32, i32* %1274, align 4
  %1279 = sext i32 %1278 to i64
  %1280 = mul nsw i64 %1279, 1000
  %1281 = icmp sgt i64 %1280, %1277
  %1282 = mul nsw i64 %1279, 5
  %1283 = icmp slt i64 %1282, %1277
  %1284 = and i1 %1281, %1283
  br i1 %1284, label %1285, label %1290

1285:                                             ; preds = %1271
  %1286 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 17
  %1287 = bitcast %struct.AVRational* %1272 to i64*
  %1288 = bitcast %struct.AVRational* %1286 to i64*
  %1289 = load i64, i64* %1287, align 8
  store i64 %1289, i64* %1288, align 8
  br label %1290

1290:                                             ; preds = %1285, %1271, %1267
  %1291 = load i64, i64* %1220, align 8
  %1292 = add i64 %1291, -1
  %1293 = icmp ult i64 %1292, 14
  br i1 %1293, label %1294, label %1298

1294:                                             ; preds = %1290
  %1295 = getelementptr inbounds [15 x i8*], [15 x i8*]* @ff_matroska_video_stereo_mode, i64 0, i64 %1291
  %1296 = load i8*, i8** %1295, align 8
  %1297 = call i32 @av_dict_set(%struct.AVDictionary** %1074, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.97, i64 0, i64 0), i8* %1296, i32 0) #11
  br label %1298

1298:                                             ; preds = %1294, %1290
  %1299 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 10
  %1300 = load i64, i64* %1299, align 8
  %1301 = icmp eq i64 %1300, 0
  br i1 %1301, label %1304, label %1302

1302:                                             ; preds = %1298
  %1303 = call i32 @av_dict_set(%struct.AVDictionary** %1074, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.99, i64 0, i64 0), i32 0) #11
  br label %1304

1304:                                             ; preds = %1302, %1298
  %1305 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 19, i32 0, i32 0
  %1306 = load i32, i32* %1305, align 8
  %1307 = icmp sgt i32 %1306, 0
  br i1 %1307, label %1308, label %1345

1308:                                             ; preds = %1304
  %1309 = trunc i64 %282 to i32
  br label %1310

1310:                                             ; preds = %1340, %1308
  %1311 = phi i64 [ 0, %1308 ], [ %1341, %1340 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %276) #11
  %1312 = getelementptr inbounds %struct.MatroskaTrackPlane, %struct.MatroskaTrackPlane* %1163, i64 %1311, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %276, i8 -86, i64 32, i1 false) #11
  %1313 = load i64, i64* %1312, align 8
  %1314 = icmp ugt i64 %1313, 2
  br i1 %1314, label %1340, label %1315

1315:                                             ; preds = %1310
  %1316 = getelementptr inbounds [3 x i8*], [3 x i8*]* @ff_matroska_video_stereo_plane, i64 0, i64 %1313
  %1317 = load i8*, i8** %1316, align 8
  %1318 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %276, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i64 0, i64 0), i8* %1317, i32 %1309) #11
  %1319 = load i32, i32* %246, align 8
  %1320 = icmp sgt i32 %1319, 0
  br i1 %1320, label %1321, label %1340

1321:                                             ; preds = %1315
  %1322 = getelementptr inbounds %struct.MatroskaTrackPlane, %struct.MatroskaTrackPlane* %1163, i64 %1311, i32 0
  %1323 = load i64, i64* %1322, align 8
  %1324 = sext i32 %1319 to i64
  br label %1325

1325:                                             ; preds = %1337, %1321
  %1326 = phi i64 [ 0, %1321 ], [ %1338, %1337 ]
  %1327 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %1326, i32 1
  %1328 = load i64, i64* %1327, align 8
  %1329 = icmp eq i64 %1323, %1328
  br i1 %1329, label %1330, label %1337

1330:                                             ; preds = %1325
  %1331 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %1326, i32 23
  %1332 = load %struct.AVStream*, %struct.AVStream** %1331, align 8
  %1333 = icmp eq %struct.AVStream* %1332, null
  br i1 %1333, label %1337, label %1334

1334:                                             ; preds = %1330
  %1335 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1332, i64 0, i32 11
  %1336 = call i32 @av_dict_set(%struct.AVDictionary** %1335, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.97, i64 0, i64 0), i8* nonnull %276, i32 0) #11
  br label %1340

1337:                                             ; preds = %1330, %1325
  %1338 = add nuw nsw i64 %1326, 1
  %1339 = icmp eq i64 %1338, %1324
  br i1 %1339, label %1340, label %1325

1340:                                             ; preds = %1337, %1334, %1315, %1310
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %276) #11
  %1341 = add nuw nsw i64 %1311, 1
  %1342 = load i32, i32* %1305, align 8
  %1343 = sext i32 %1342 to i64
  %1344 = icmp slt i64 %1341, %1343
  br i1 %1344, label %1310, label %1345

1345:                                             ; preds = %1340, %1304
  %1346 = load i64, i64* %1220, align 8
  %1347 = icmp ugt i64 %1346, 14
  br i1 %1347, label %1355, label %1348

1348:                                             ; preds = %1345
  switch i64 %1346, label %1349 [
    i64 12, label %1355
    i64 10, label %1355
  ]

1349:                                             ; preds = %1348
  %1350 = trunc i64 %1346 to i32
  %1351 = call i32 @ff_mkv_stereo3d_conv(%struct.AVStream* %509, i32 %1350) #11
  %1352 = icmp slt i32 %1351, 0
  %1353 = select i1 %1352, i32 %1351, i32 %283
  %1354 = icmp sgt i32 %1351, -1
  br i1 %1354, label %1355, label %1769

1355:                                             ; preds = %1349, %1348, %1348, %1345
  %1356 = phi i32 [ %1353, %1349 ], [ %283, %1348 ], [ %283, %1345 ], [ %283, %1348 ]
  %1357 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 11, i32 2
  %1358 = bitcast i8** %1357 to %struct.MatroskaTrackVideoColor**
  %1359 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %1358, align 8
  %1360 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 11, i32 0
  %1361 = load i32, i32* %1360, align 8
  %1362 = icmp eq i32 %1361, 0
  br i1 %1362, label %1548, label %1363

1363:                                             ; preds = %1355
  %1364 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 0
  %1365 = load double, double* %1364, align 8
  %1366 = fcmp nsz ogt double %1365, 0.000000e+00
  br i1 %1366, label %1367, label %1395

1367:                                             ; preds = %1363
  %1368 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 1
  %1369 = load double, double* %1368, align 8
  %1370 = fcmp nsz ogt double %1369, 0.000000e+00
  br i1 %1370, label %1371, label %1395

1371:                                             ; preds = %1367
  %1372 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 2
  %1373 = load double, double* %1372, align 8
  %1374 = fcmp nsz ogt double %1373, 0.000000e+00
  br i1 %1374, label %1375, label %1395

1375:                                             ; preds = %1371
  %1376 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 3
  %1377 = load double, double* %1376, align 8
  %1378 = fcmp nsz ogt double %1377, 0.000000e+00
  br i1 %1378, label %1379, label %1395

1379:                                             ; preds = %1375
  %1380 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 4
  %1381 = load double, double* %1380, align 8
  %1382 = fcmp nsz ogt double %1381, 0.000000e+00
  br i1 %1382, label %1383, label %1395

1383:                                             ; preds = %1379
  %1384 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 5
  %1385 = load double, double* %1384, align 8
  %1386 = fcmp nsz ogt double %1385, 0.000000e+00
  br i1 %1386, label %1387, label %1395

1387:                                             ; preds = %1383
  %1388 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 6
  %1389 = load double, double* %1388, align 8
  %1390 = fcmp nsz ogt double %1389, 0.000000e+00
  br i1 %1390, label %1391, label %1395

1391:                                             ; preds = %1387
  %1392 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 7
  %1393 = load double, double* %1392, align 8
  %1394 = fcmp nsz ogt double %1393, 0.000000e+00
  br label %1395

1395:                                             ; preds = %1391, %1387, %1383, %1379, %1375, %1371, %1367, %1363
  %1396 = phi i1 [ false, %1387 ], [ false, %1383 ], [ false, %1379 ], [ false, %1375 ], [ false, %1371 ], [ false, %1367 ], [ false, %1363 ], [ %1394, %1391 ]
  %1397 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 8
  %1398 = load double, double* %1397, align 8
  %1399 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 9
  %1400 = bitcast %struct.CountedElement* %1399 to double*
  %1401 = load double, double* %1400, align 8
  %1402 = fcmp nsz ule double %1398, %1401
  %1403 = fcmp nsz ult double %1401, 0.000000e+00
  %1404 = or i1 %1402, %1403
  br i1 %1404, label %1409, label %1405

1405:                                             ; preds = %1395
  %1406 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 9, i32 1
  %1407 = load i32, i32* %1406, align 8
  %1408 = icmp ne i32 %1407, 0
  br label %1409

1409:                                             ; preds = %1405, %1395
  %1410 = phi i1 [ false, %1395 ], [ %1408, %1405 ]
  %1411 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 0
  %1412 = load i64, i64* %1411, align 8
  %1413 = icmp eq i64 %1412, 3
  br i1 %1413, label %1418, label %1414

1414:                                             ; preds = %1409
  %1415 = trunc i64 %1412 to i32
  %1416 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1417 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1416, i64 0, i32 18
  store i32 %1415, i32* %1417, align 8
  br label %1418

1418:                                             ; preds = %1414, %1409
  %1419 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 10
  %1420 = load i64, i64* %1419, align 8
  switch i64 %1420, label %1421 [
    i64 3, label %1425
    i64 0, label %1425
  ]

1421:                                             ; preds = %1418
  %1422 = trunc i64 %1420 to i32
  %1423 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1424 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1423, i64 0, i32 16
  store i32 %1422, i32* %1424, align 8
  br label %1425

1425:                                             ; preds = %1421, %1418, %1418
  %1426 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 9
  %1427 = load i64, i64* %1426, align 8
  switch i64 %1427, label %1428 [
    i64 3, label %1432
    i64 0, label %1432
  ]

1428:                                             ; preds = %1425
  %1429 = trunc i64 %1427 to i32
  %1430 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1431 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1430, i64 0, i32 17
  store i32 %1429, i32* %1431, align 4
  br label %1432

1432:                                             ; preds = %1428, %1425, %1425
  %1433 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 8
  %1434 = load i64, i64* %1433, align 8
  %1435 = add i64 %1434, -1
  %1436 = icmp ult i64 %1435, 2
  br i1 %1436, label %1437, label %1441

1437:                                             ; preds = %1432
  %1438 = trunc i64 %1434 to i32
  %1439 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1440 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1439, i64 0, i32 15
  store i32 %1438, i32* %1440, align 4
  br label %1441

1441:                                             ; preds = %1437, %1432
  %1442 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 6
  %1443 = load i64, i64* %1442, align 8
  %1444 = icmp eq i64 %1443, 0
  br i1 %1444, label %1462, label %1445

1445:                                             ; preds = %1441
  %1446 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 7
  %1447 = load i64, i64* %1446, align 8
  %1448 = icmp ult i64 %1443, 3
  %1449 = add i64 %1447, -1
  %1450 = icmp ult i64 %1449, 2
  %1451 = and i1 %1448, %1450
  br i1 %1451, label %1452, label %1462

1452:                                             ; preds = %1445
  %1453 = trunc i64 %1443 to i32
  %1454 = shl i32 %1453, 7
  %1455 = add nsw i32 %1454, -128
  %1456 = trunc i64 %1447 to i32
  %1457 = shl i32 %1456, 7
  %1458 = add nsw i32 %1457, -128
  %1459 = call i32 @avcodec_chroma_pos_to_enum(i32 %1455, i32 %1458) #11
  %1460 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1461 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1460, i64 0, i32 19
  store i32 %1459, i32* %1461, align 4
  br label %1462

1462:                                             ; preds = %1452, %1445, %1441
  %1463 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 11
  %1464 = load i64, i64* %1463, align 8
  %1465 = icmp eq i64 %1464, 0
  br i1 %1465, label %1489, label %1466

1466:                                             ; preds = %1462
  %1467 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 12
  %1468 = load i64, i64* %1467, align 8
  %1469 = icmp eq i64 %1468, 0
  br i1 %1469, label %1489, label %1470

1470:                                             ; preds = %1466
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %277) #11
  store i64 0, i64* %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #11
  %1471 = call %struct.AVContentLightMetadata* @av_content_light_metadata_alloc(i64* nonnull %4) #11
  store %struct.AVContentLightMetadata* %1471, %struct.AVContentLightMetadata** %5, align 8
  %1472 = icmp eq %struct.AVContentLightMetadata* %1471, null
  br i1 %1472, label %1479, label %1473

1473:                                             ; preds = %1470
  %1474 = bitcast %struct.AVContentLightMetadata* %1471 to i8*
  %1475 = load i64, i64* %4, align 8
  %1476 = call i32 @av_stream_add_side_data(%struct.AVStream* %509, i32 22, i8* nonnull %1474, i64 %1475) #11
  %1477 = icmp slt i32 %1476, 0
  br i1 %1477, label %1478, label %1481

1478:                                             ; preds = %1473
  call void @av_freep(i8* nonnull %278) #11
  br label %1479

1479:                                             ; preds = %1470, %1478
  %1480 = phi i32 [ %1476, %1478 ], [ -12, %1470 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %277) #11
  br label %1767

1481:                                             ; preds = %1473
  %1482 = load i64, i64* %1463, align 8
  %1483 = trunc i64 %1482 to i32
  %1484 = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %1471, i64 0, i32 0
  store i32 %1483, i32* %1484, align 4
  %1485 = load i64, i64* %1467, align 8
  %1486 = trunc i64 %1485 to i32
  %1487 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %5, align 8
  %1488 = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %1487, i64 0, i32 1
  store i32 %1486, i32* %1488, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %277) #11
  br label %1489

1489:                                             ; preds = %1481, %1466, %1462
  %1490 = or i1 %1396, %1410
  br i1 %1490, label %1491, label %1548

1491:                                             ; preds = %1489
  %1492 = call i8* @av_stream_new_side_data(%struct.AVStream* %509, i32 20, i32 88) #11
  %1493 = icmp eq i8* %1492, null
  br i1 %1493, label %1767, label %1494

1494:                                             ; preds = %1491
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1492, i8 0, i64 88, i1 false) #11
  br i1 %1396, label %1495, label %1536

1495:                                             ; preds = %1494
  %1496 = load double, double* %1364, align 8
  %1497 = call i64 @av_d2q(double %1496, i32 2147483647) #10
  %1498 = bitcast i8* %1492 to i64*
  store i64 %1497, i64* %1498, align 4
  %1499 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 1
  %1500 = load double, double* %1499, align 8
  %1501 = call i64 @av_d2q(double %1500, i32 2147483647) #10
  %1502 = getelementptr inbounds i8, i8* %1492, i64 8
  %1503 = bitcast i8* %1502 to i64*
  store i64 %1501, i64* %1503, align 4
  %1504 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 2
  %1505 = load double, double* %1504, align 8
  %1506 = call i64 @av_d2q(double %1505, i32 2147483647) #10
  %1507 = getelementptr inbounds i8, i8* %1492, i64 16
  %1508 = bitcast i8* %1507 to i64*
  store i64 %1506, i64* %1508, align 4
  %1509 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 3
  %1510 = load double, double* %1509, align 8
  %1511 = call i64 @av_d2q(double %1510, i32 2147483647) #10
  %1512 = getelementptr inbounds i8, i8* %1492, i64 24
  %1513 = bitcast i8* %1512 to i64*
  store i64 %1511, i64* %1513, align 4
  %1514 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 4
  %1515 = load double, double* %1514, align 8
  %1516 = call i64 @av_d2q(double %1515, i32 2147483647) #10
  %1517 = getelementptr inbounds i8, i8* %1492, i64 32
  %1518 = bitcast i8* %1517 to i64*
  store i64 %1516, i64* %1518, align 4
  %1519 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 5
  %1520 = load double, double* %1519, align 8
  %1521 = call i64 @av_d2q(double %1520, i32 2147483647) #10
  %1522 = getelementptr inbounds i8, i8* %1492, i64 40
  %1523 = bitcast i8* %1522 to i64*
  store i64 %1521, i64* %1523, align 4
  %1524 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 6
  %1525 = load double, double* %1524, align 8
  %1526 = call i64 @av_d2q(double %1525, i32 2147483647) #10
  %1527 = getelementptr inbounds i8, i8* %1492, i64 48
  %1528 = bitcast i8* %1527 to i64*
  store i64 %1526, i64* %1528, align 4
  %1529 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %1359, i64 0, i32 13, i32 7
  %1530 = load double, double* %1529, align 8
  %1531 = call i64 @av_d2q(double %1530, i32 2147483647) #10
  %1532 = getelementptr inbounds i8, i8* %1492, i64 56
  %1533 = bitcast i8* %1532 to i64*
  store i64 %1531, i64* %1533, align 4
  %1534 = getelementptr inbounds i8, i8* %1492, i64 80
  %1535 = bitcast i8* %1534 to i32*
  store i32 1, i32* %1535, align 4
  br label %1536

1536:                                             ; preds = %1495, %1494
  br i1 %1410, label %1537, label %1548

1537:                                             ; preds = %1536
  %1538 = load double, double* %1397, align 8
  %1539 = call i64 @av_d2q(double %1538, i32 2147483647) #10
  %1540 = getelementptr inbounds i8, i8* %1492, i64 72
  %1541 = bitcast i8* %1540 to i64*
  store i64 %1539, i64* %1541, align 4
  %1542 = load double, double* %1400, align 8
  %1543 = call i64 @av_d2q(double %1542, i32 2147483647) #10
  %1544 = getelementptr inbounds i8, i8* %1492, i64 64
  %1545 = bitcast i8* %1544 to i64*
  store i64 %1543, i64* %1545, align 4
  %1546 = getelementptr inbounds i8, i8* %1492, i64 84
  %1547 = bitcast i8* %1546 to i32*
  store i32 1, i32* %1547, align 4
  br label %1548

1548:                                             ; preds = %1537, %1536, %1489, %1355
  %1549 = load i8*, i8** %252, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %279) #11
  store %struct.AVSphericalMapping* inttoptr (i64 -6148914691236517206 to %struct.AVSphericalMapping*), %struct.AVSphericalMapping** %2, align 8
  %1550 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 12, i32 1, i32 2
  %1551 = load i8*, i8** %1550, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %280) #11
  store i64 -6148914691236517206, i64* %3, align 8
  %1552 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 12, i32 1, i32 0
  %1553 = load i32, i32* %1552, align 8
  %1554 = icmp eq i32 %1553, 0
  br i1 %1554, label %1559, label %1555

1555:                                             ; preds = %1548
  %1556 = load i8, i8* %1551, align 1
  %1557 = icmp eq i8 %1556, 0
  br i1 %1557, label %1559, label %1558

1558:                                             ; preds = %1555
  call void (i8*, i32, i8*, ...) @av_log(i8* %1549, i32 24, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.112, i64 0, i64 0)) #11
  br label %1654

1559:                                             ; preds = %1555, %1548
  %1560 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 12, i32 0
  %1561 = load i64, i64* %1560, align 8
  switch i64 %1561, label %1615 [
    i64 1, label %1562
    i64 2, label %1597
    i64 0, label %1654
  ]

1562:                                             ; preds = %1559
  switch i32 %1553, label %1586 [
    i32 20, label %1563
    i32 0, label %1587
  ]

1563:                                             ; preds = %1562
  %1564 = getelementptr inbounds i8, i8* %1551, i64 4
  %1565 = bitcast i8* %1564 to i32*
  %1566 = load i32, i32* %1565, align 1
  %1567 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1566) #10, !srcloc !2
  %1568 = getelementptr inbounds i8, i8* %1551, i64 8
  %1569 = bitcast i8* %1568 to i32*
  %1570 = load i32, i32* %1569, align 1
  %1571 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1570) #10, !srcloc !2
  %1572 = getelementptr inbounds i8, i8* %1551, i64 12
  %1573 = bitcast i8* %1572 to i32*
  %1574 = load i32, i32* %1573, align 1
  %1575 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1574) #10, !srcloc !2
  %1576 = getelementptr inbounds i8, i8* %1551, i64 16
  %1577 = bitcast i8* %1576 to i32*
  %1578 = load i32, i32* %1577, align 1
  %1579 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1578) #10, !srcloc !2
  %1580 = xor i32 %1567, -1
  %1581 = icmp ult i32 %1571, %1580
  %1582 = xor i32 %1575, -1
  %1583 = icmp ult i32 %1579, %1582
  %1584 = and i1 %1581, %1583
  br i1 %1584, label %1587, label %1585

1585:                                             ; preds = %1563
  call void (i8*, i32, i8*, ...) @av_log(i8* %1549, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.113, i64 0, i64 0), i32 %1575, i32 %1567, i32 %1579, i32 %1571) #11
  br label %1655

1586:                                             ; preds = %1562
  call void (i8*, i32, i8*, ...) @av_log(i8* %1549, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.112, i64 0, i64 0)) #11
  br label %1655

1587:                                             ; preds = %1563, %1562
  %1588 = phi i32 [ %1575, %1563 ], [ %1553, %1562 ]
  %1589 = phi i32 [ %1567, %1563 ], [ %1553, %1562 ]
  %1590 = phi i32 [ %1579, %1563 ], [ %1553, %1562 ]
  %1591 = phi i32 [ %1571, %1563 ], [ %1553, %1562 ]
  %1592 = or i32 %1589, %1588
  %1593 = or i32 %1592, %1590
  %1594 = or i32 %1593, %1591
  %1595 = icmp eq i32 %1594, 0
  %1596 = select i1 %1595, i32 0, i32 2
  br label %1616

1597:                                             ; preds = %1559
  %1598 = icmp slt i32 %1553, 4
  br i1 %1598, label %1599, label %1600

1599:                                             ; preds = %1597
  call void (i8*, i32, i8*, ...) @av_log(i8* %1549, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.114, i64 0, i64 0)) #11
  br label %1655

1600:                                             ; preds = %1597
  %1601 = icmp eq i32 %1553, 12
  br i1 %1601, label %1602, label %1614

1602:                                             ; preds = %1600
  %1603 = getelementptr inbounds i8, i8* %1551, i64 4
  %1604 = bitcast i8* %1603 to i32*
  %1605 = load i32, i32* %1604, align 1
  %1606 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1605) #10, !srcloc !2
  %1607 = icmp eq i32 %1606, 0
  br i1 %1607, label %1608, label %1613

1608:                                             ; preds = %1602
  %1609 = getelementptr inbounds i8, i8* %1551, i64 8
  %1610 = bitcast i8* %1609 to i32*
  %1611 = load i32, i32* %1610, align 1
  %1612 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1611) #10, !srcloc !2
  br label %1616

1613:                                             ; preds = %1602
  call void (i8*, i32, i8*, ...) @av_log(i8* %1549, i32 24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.115, i64 0, i64 0), i32 %1606) #11
  br label %1654

1614:                                             ; preds = %1600
  call void (i8*, i32, i8*, ...) @av_log(i8* %1549, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.112, i64 0, i64 0)) #11
  br label %1655

1615:                                             ; preds = %1559
  call void (i8*, i32, i8*, ...) @av_log(i8* %1549, i32 24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.116, i64 0, i64 0), i64 %1561) #11
  br label %1654

1616:                                             ; preds = %1608, %1587
  %1617 = phi i32 [ %1596, %1587 ], [ 1, %1608 ]
  %1618 = phi i32 [ %1588, %1587 ], [ 0, %1608 ]
  %1619 = phi i32 [ %1589, %1587 ], [ 0, %1608 ]
  %1620 = phi i32 [ %1590, %1587 ], [ 0, %1608 ]
  %1621 = phi i32 [ %1591, %1587 ], [ 0, %1608 ]
  %1622 = phi i32 [ 0, %1587 ], [ %1612, %1608 ]
  %1623 = call %struct.AVSphericalMapping* @av_spherical_alloc(i64* nonnull %3) #11
  store %struct.AVSphericalMapping* %1623, %struct.AVSphericalMapping** %2, align 8
  %1624 = icmp eq %struct.AVSphericalMapping* %1623, null
  br i1 %1624, label %1655, label %1625

1625:                                             ; preds = %1616
  %1626 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %1623, i64 0, i32 0
  store i32 %1617, i32* %1626, align 4
  %1627 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 12, i32 2
  %1628 = load double, double* %1627, align 8
  %1629 = fmul nsz double %1628, 6.553600e+04
  %1630 = fptosi double %1629 to i32
  %1631 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %2, align 8
  %1632 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %1631, i64 0, i32 1
  store i32 %1630, i32* %1632, align 4
  %1633 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 12, i32 3
  %1634 = load double, double* %1633, align 8
  %1635 = fmul nsz double %1634, 6.553600e+04
  %1636 = fptosi double %1635 to i32
  %1637 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %2, align 8
  %1638 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %1637, i64 0, i32 2
  store i32 %1636, i32* %1638, align 4
  %1639 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 17, i32 12, i32 4
  %1640 = load double, double* %1639, align 8
  %1641 = fmul nsz double %1640, 6.553600e+04
  %1642 = fptosi double %1641 to i32
  %1643 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %1637, i64 0, i32 3
  store i32 %1642, i32* %1643, align 4
  %1644 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %1637, i64 0, i32 8
  store i32 %1622, i32* %1644, align 4
  %1645 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %1637, i64 0, i32 4
  store i32 %1618, i32* %1645, align 4
  %1646 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %1637, i64 0, i32 5
  store i32 %1619, i32* %1646, align 4
  %1647 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %1637, i64 0, i32 6
  store i32 %1620, i32* %1647, align 4
  %1648 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %1637, i64 0, i32 7
  store i32 %1621, i32* %1648, align 4
  %1649 = bitcast %struct.AVSphericalMapping* %1637 to i8*
  %1650 = load i64, i64* %3, align 8
  %1651 = call i32 @av_stream_add_side_data(%struct.AVStream* %509, i32 21, i8* %1649, i64 %1650) #11
  %1652 = icmp slt i32 %1651, 0
  br i1 %1652, label %1653, label %1654

1653:                                             ; preds = %1625
  call void @av_freep(i8* nonnull %279) #11
  br label %1655

1654:                                             ; preds = %1625, %1615, %1613, %1559, %1558
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #11
  br label %1760

1655:                                             ; preds = %1616, %1653, %1614, %1599, %1586, %1585
  %1656 = phi i32 [ -1094995529, %1586 ], [ -1094995529, %1585 ], [ -1094995529, %1614 ], [ %1651, %1653 ], [ -1094995529, %1599 ], [ -12, %1616 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #11
  br label %1767

1657:                                             ; preds = %1158
  %1658 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1659 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1658, i64 0, i32 0
  store i32 1, i32* %1659, align 8
  %1660 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1661 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1660, i64 0, i32 2
  store i32 %1042, i32* %1661, align 8
  %1662 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 1
  %1663 = load double, double* %1662, align 8
  %1664 = fptosi double %1663 to i32
  %1665 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1666 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1665, i64 0, i32 23
  store i32 %1664, i32* %1666, align 4
  %1667 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 3
  %1668 = load i64, i64* %1667, align 8
  %1669 = trunc i64 %1668 to i32
  %1670 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1671 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1670, i64 0, i32 22
  store i32 %1669, i32* %1671, align 8
  %1672 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1673 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1672, i64 0, i32 7
  %1674 = load i32, i32* %1673, align 8
  %1675 = icmp eq i32 %1674, 0
  br i1 %1675, label %1676, label %1681

1676:                                             ; preds = %1657
  %1677 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 18, i32 2
  %1678 = load i64, i64* %1677, align 8
  %1679 = trunc i64 %1678 to i32
  store i32 %1679, i32* %1673, align 8
  %1680 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  br label %1681

1681:                                             ; preds = %1676, %1657
  %1682 = phi %struct.AVCodecParameters* [ %1672, %1657 ], [ %1680, %1676 ]
  %1683 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1682, i64 0, i32 1
  %1684 = load i32, i32* %1683, align 4
  switch i32 %1684, label %1685 [
    i32 86017, label %1686
    i32 86045, label %1686
    i32 86060, label %1686
    i32 86018, label %1689
  ]

1685:                                             ; preds = %1681
  br label %1686

1686:                                             ; preds = %1681, %1681, %1681, %1685
  %1687 = phi i32 [ 2, %1685 ], [ 1, %1681 ], [ 1, %1681 ], [ 1, %1681 ]
  %1688 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 28
  store i32 %1687, i32* %1688, align 4
  br label %1689

1689:                                             ; preds = %1686, %1681
  %1690 = load i64, i64* %1056, align 8
  %1691 = icmp eq i64 %1690, 0
  br i1 %1691, label %1706, label %1692

1692:                                             ; preds = %1689
  %1693 = load i32, i32* %1683, align 4
  %1694 = icmp eq i32 %1693, 86076
  br i1 %1694, label %1698, label %1695

1695:                                             ; preds = %1692
  %1696 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1682, i64 0, i32 23
  %1697 = load i32, i32* %1696, align 4
  br label %1698

1698:                                             ; preds = %1695, %1692
  %1699 = phi i32 [ %1697, %1695 ], [ 48000, %1692 ]
  %1700 = zext i32 %1699 to i64
  %1701 = shl nuw i64 %1700, 32
  %1702 = or i64 %1701, 1
  %1703 = call i64 @av_rescale_q(i64 %1690, i64 4294967296000000001, i64 %1702) #10
  %1704 = trunc i64 %1703 to i32
  %1705 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1682, i64 0, i32 26
  store i32 %1704, i32* %1705, align 8
  br label %1706

1706:                                             ; preds = %1698, %1689
  %1707 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 16
  %1708 = load i64, i64* %1707, align 8
  %1709 = icmp eq i64 %1708, 0
  br i1 %1709, label %1760, label %1710

1710:                                             ; preds = %1706
  %1711 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1712 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1711, i64 0, i32 23
  %1713 = load i32, i32* %1712, align 4
  %1714 = zext i32 %1713 to i64
  %1715 = shl nuw i64 %1714, 32
  %1716 = or i64 %1715, 1
  %1717 = call i64 @av_rescale_q(i64 %1708, i64 4294967296000000001, i64 %1716) #10
  %1718 = trunc i64 %1717 to i32
  %1719 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1711, i64 0, i32 28
  store i32 %1718, i32* %1719, align 8
  br label %1760

1720:                                             ; preds = %1158
  %1721 = icmp eq i32 %1044, 96265
  br i1 %1721, label %1722, label %1746

1722:                                             ; preds = %1720
  %1723 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1724 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1723, i64 0, i32 0
  store i32 3, i32* %1724, align 8
  %1725 = load i8*, i8** %292, align 8
  %1726 = call i32 @strcmp(i8* %1725, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.101, i64 0, i64 0)) #12
  %1727 = icmp eq i32 %1726, 0
  br i1 %1727, label %1728, label %1732

1728:                                             ; preds = %1722
  %1729 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 8
  %1730 = load i32, i32* %1729, align 8
  %1731 = or i32 %1730, 65536
  store i32 %1731, i32* %1729, align 8
  br label %1760

1732:                                             ; preds = %1722
  %1733 = call i32 @strcmp(i8* %1725, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.102, i64 0, i64 0)) #12
  %1734 = icmp eq i32 %1733, 0
  br i1 %1734, label %1735, label %1739

1735:                                             ; preds = %1732
  %1736 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 8
  %1737 = load i32, i32* %1736, align 8
  %1738 = or i32 %1737, 131072
  store i32 %1738, i32* %1736, align 8
  br label %1760

1739:                                             ; preds = %1732
  %1740 = call i32 @strcmp(i8* %1725, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.103, i64 0, i64 0)) #12
  %1741 = icmp eq i32 %1740, 0
  br i1 %1741, label %1742, label %1760

1742:                                             ; preds = %1739
  %1743 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 8
  %1744 = load i32, i32* %1743, align 8
  %1745 = or i32 %1744, 262144
  store i32 %1745, i32* %1743, align 8
  br label %1760

1746:                                             ; preds = %1720
  %1747 = icmp eq i64 %1159, 17
  br i1 %1747, label %1748, label %1760

1748:                                             ; preds = %1746
  %1749 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1063, align 8
  %1750 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1749, i64 0, i32 0
  store i32 3, i32* %1750, align 8
  %1751 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %245, i64 %282, i32 14
  %1752 = load i64, i64* %1751, align 8
  %1753 = icmp eq i64 %1752, 0
  br i1 %1753, label %1760, label %1754

1754:                                             ; preds = %1748
  %1755 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i64 0, i32 8
  %1756 = load i32, i32* %1755, align 8
  %1757 = or i32 %1756, 131072
  store i32 %1757, i32* %1755, align 8
  br label %1760

1758:                                             ; preds = %862, %869, %875
  %1759 = phi i32 [ -1094995529, %862 ], [ -1094995529, %869 ], [ -12, %875 ]
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %250) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %240)
  br label %2074

1760:                                             ; preds = %862, %289, %291, %306, %1654, %1706, %1710, %1728, %1735, %1739, %1742, %1746, %1748, %1754
  %1761 = phi i32 [ %1356, %1654 ], [ %283, %1746 ], [ %283, %1748 ], [ %283, %1754 ], [ %283, %1728 ], [ %283, %1735 ], [ %283, %1742 ], [ %283, %1739 ], [ %283, %1706 ], [ %283, %1710 ], [ %283, %291 ], [ %283, %306 ], [ %283, %289 ], [ %283, %862 ]
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %250) #11
  %1762 = add nuw nsw i64 %282, 1
  %1763 = load i32, i32* %246, align 8
  %1764 = sext i32 %1763 to i64
  %1765 = icmp slt i64 %1762, %1764
  br i1 %1765, label %281, label %1766

1766:                                             ; preds = %1760, %239
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %240)
  br label %1771

1767:                                             ; preds = %768, %645, %590, %554, %386, %1146, %986, %910, %836, %1491, %464, %512, %1655, %1479
  %1768 = phi i32 [ %1480, %1479 ], [ %1656, %1655 ], [ -12, %512 ], [ -12, %464 ], [ -12, %768 ], [ %649, %645 ], [ %594, %590 ], [ %559, %554 ], [ -12, %386 ], [ -12, %1146 ], [ -12, %986 ], [ -1094995529, %910 ], [ -12, %836 ], [ -12, %1491 ]
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %250) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %240)
  br label %2074

1769:                                             ; preds = %1349
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %250) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %240)
  %1770 = icmp slt i32 %1353, 0
  br i1 %1770, label %2074, label %1771

1771:                                             ; preds = %1766, %1769
  %1772 = getelementptr inbounds i8, i8* %14, i64 384
  %1773 = bitcast i8* %1772 to %struct.MatroskaAttachment**
  %1774 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %1773, align 8
  %1775 = bitcast i8* %16 to i32*
  %1776 = load i32, i32* %1775, align 8
  %1777 = icmp sgt i32 %1776, 0
  br i1 %1777, label %1778, label %1887

1778:                                             ; preds = %1771
  %1779 = bitcast i8* %19 to i8**
  br label %1780

1780:                                             ; preds = %1778, %1882
  %1781 = phi i64 [ 0, %1778 ], [ %1883, %1882 ]
  %1782 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %1774, i64 %1781, i32 1
  %1783 = load i8*, i8** %1782, align 8
  %1784 = icmp eq i8* %1783, null
  br i1 %1784, label %1797, label %1785

1785:                                             ; preds = %1780
  %1786 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %1774, i64 %1781, i32 3
  %1787 = load i8*, i8** %1786, align 8
  %1788 = icmp eq i8* %1787, null
  br i1 %1788, label %1797, label %1789

1789:                                             ; preds = %1785
  %1790 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %1774, i64 %1781, i32 4, i32 2
  %1791 = load i8*, i8** %1790, align 8
  %1792 = icmp eq i8* %1791, null
  br i1 %1792, label %1797, label %1793

1793:                                             ; preds = %1789
  %1794 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %1774, i64 %1781, i32 4, i32 0
  %1795 = load i32, i32* %1794, align 8
  %1796 = icmp sgt i32 %1795, 0
  br i1 %1796, label %1799, label %1797

1797:                                             ; preds = %1789, %1785, %1780, %1793
  %1798 = load i8*, i8** %1779, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1798, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0)) #11
  br label %1882

1799:                                             ; preds = %1793
  %1800 = call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %0, %struct.AVCodec* null) #11
  %1801 = icmp eq %struct.AVStream* %1800, null
  br i1 %1801, label %1887, label %1802

1802:                                             ; preds = %1799
  %1803 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1800, i64 0, i32 11
  %1804 = load i8*, i8** %1782, align 8
  %1805 = call i32 @av_dict_set(%struct.AVDictionary** %1803, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i8* %1804, i32 0) #11
  %1806 = load i8*, i8** %1786, align 8
  %1807 = call i32 @av_dict_set(%struct.AVDictionary** %1803, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %1806, i32 0) #11
  %1808 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %1774, i64 %1781, i32 2
  %1809 = load i8*, i8** %1808, align 8
  %1810 = icmp eq i8* %1809, null
  br i1 %1810, label %1813, label %1811

1811:                                             ; preds = %1802
  %1812 = call i32 @av_dict_set(%struct.AVDictionary** %1803, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8* nonnull %1809, i32 0) #11
  br label %1813

1813:                                             ; preds = %1802, %1811
  %1814 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1800, i64 0, i32 19
  %1815 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1814, align 8
  %1816 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1815, i64 0, i32 1
  store i32 0, i32* %1816, align 4
  %1817 = load i8*, i8** %1786, align 8
  %1818 = call i32 @av_strstart(i8* %1817, i8* getelementptr inbounds ([5 x %struct.CodecMime], [5 x %struct.CodecMime]* @mkv_image_mime_tags, i64 0, i64 0, i32 0, i64 0), i8** null) #11
  %1819 = icmp eq i32 %1818, 0
  br i1 %1819, label %1820, label %1824

1820:                                             ; preds = %1813
  %1821 = load i8*, i8** %1786, align 8
  %1822 = call i32 @av_strstart(i8* %1821, i8* getelementptr inbounds ([5 x %struct.CodecMime], [5 x %struct.CodecMime]* @mkv_image_mime_tags, i64 0, i64 1, i32 0, i64 0), i8** null) #11
  %1823 = icmp eq i32 %1822, 0
  br i1 %1823, label %2106, label %1824

1824:                                             ; preds = %2110, %2106, %1820, %1813
  %1825 = phi i32* [ getelementptr inbounds ([5 x %struct.CodecMime], [5 x %struct.CodecMime]* @mkv_image_mime_tags, i64 0, i64 0, i32 1), %1813 ], [ getelementptr inbounds ([5 x %struct.CodecMime], [5 x %struct.CodecMime]* @mkv_image_mime_tags, i64 0, i64 1, i32 1), %1820 ], [ getelementptr inbounds ([5 x %struct.CodecMime], [5 x %struct.CodecMime]* @mkv_image_mime_tags, i64 0, i64 2, i32 1), %2106 ], [ getelementptr inbounds ([5 x %struct.CodecMime], [5 x %struct.CodecMime]* @mkv_image_mime_tags, i64 0, i64 3, i32 1), %2110 ]
  %1826 = load i32, i32* %1825, align 4
  %1827 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1814, align 8
  %1828 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1827, i64 0, i32 1
  store i32 %1826, i32* %1828, align 4
  br label %1829

1829:                                             ; preds = %2110, %1824
  %1830 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %1774, i64 %1781, i32 5
  store %struct.AVStream* %1800, %struct.AVStream** %1830, align 8
  %1831 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1814, align 8
  %1832 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1831, i64 0, i32 1
  %1833 = load i32, i32* %1832, align 4
  %1834 = icmp eq i32 %1833, 0
  br i1 %1834, label %1857, label %1835

1835:                                             ; preds = %1829
  %1836 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1800, i64 0, i32 13
  %1837 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1800, i64 0, i32 8
  %1838 = load i32, i32* %1837, align 8
  %1839 = or i32 %1838, 1024
  store i32 %1839, i32* %1837, align 8
  %1840 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1831, i64 0, i32 0
  store i32 0, i32* %1840, align 8
  call void @av_init_packet(%struct.AVPacket* %1836) #11
  %1841 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %1774, i64 %1781, i32 4, i32 1
  %1842 = bitcast %struct.AVBufferRef** %1841 to i64*
  %1843 = load i64, i64* %1842, align 8
  %1844 = bitcast %struct.AVPacket* %1836 to i64*
  store i64 %1843, i64* %1844, align 8
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %1841, align 8
  %1845 = bitcast i8** %1790 to i64*
  %1846 = load i64, i64* %1845, align 8
  %1847 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1800, i64 0, i32 13, i32 3
  %1848 = bitcast i8** %1847 to i64*
  store i64 %1846, i64* %1848, align 8
  %1849 = load i32, i32* %1794, align 8
  %1850 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1800, i64 0, i32 13, i32 4
  store i32 %1849, i32* %1850, align 8
  %1851 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1800, i64 0, i32 0
  %1852 = load i32, i32* %1851, align 8
  %1853 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1800, i64 0, i32 13, i32 5
  store i32 %1852, i32* %1853, align 4
  %1854 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1800, i64 0, i32 13, i32 6
  %1855 = load i32, i32* %1854, align 8
  %1856 = or i32 %1855, 1
  store i32 %1856, i32* %1854, align 8
  br label %1882

1857:                                             ; preds = %1829
  %1858 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1831, i64 0, i32 0
  store i32 4, i32* %1858, align 8
  %1859 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1814, align 8
  %1860 = load i32, i32* %1794, align 8
  %1861 = call i32 @ff_alloc_extradata(%struct.AVCodecParameters* %1859, i32 %1860) #11
  %1862 = icmp eq i32 %1861, 0
  br i1 %1862, label %1863, label %1887

1863:                                             ; preds = %1857
  %1864 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1814, align 8
  %1865 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1864, i64 0, i32 3
  %1866 = load i8*, i8** %1865, align 8
  %1867 = load i8*, i8** %1790, align 8
  %1868 = load i32, i32* %1794, align 8
  %1869 = sext i32 %1868 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1866, i8* align 1 %1867, i64 %1869, i1 false)
  %1870 = load i8*, i8** %1786, align 8
  %1871 = call i32 @av_strstart(i8* %1870, i8* getelementptr inbounds ([6 x %struct.CodecMime], [6 x %struct.CodecMime]* @mkv_mime_tags, i64 0, i64 0, i32 0, i64 0), i8** null) #11
  %1872 = icmp eq i32 %1871, 0
  br i1 %1872, label %1873, label %1877

1873:                                             ; preds = %1863
  %1874 = load i8*, i8** %1786, align 8
  %1875 = call i32 @av_strstart(i8* %1874, i8* getelementptr inbounds ([6 x %struct.CodecMime], [6 x %struct.CodecMime]* @mkv_mime_tags, i64 0, i64 1, i32 0, i64 0), i8** null) #11
  %1876 = icmp eq i32 %1875, 0
  br i1 %1876, label %2114, label %1877

1877:                                             ; preds = %2122, %2118, %2114, %1873, %1863
  %1878 = phi i32* [ getelementptr inbounds ([6 x %struct.CodecMime], [6 x %struct.CodecMime]* @mkv_mime_tags, i64 0, i64 0, i32 1), %1863 ], [ getelementptr inbounds ([6 x %struct.CodecMime], [6 x %struct.CodecMime]* @mkv_mime_tags, i64 0, i64 1, i32 1), %1873 ], [ getelementptr inbounds ([6 x %struct.CodecMime], [6 x %struct.CodecMime]* @mkv_mime_tags, i64 0, i64 2, i32 1), %2114 ], [ getelementptr inbounds ([6 x %struct.CodecMime], [6 x %struct.CodecMime]* @mkv_mime_tags, i64 0, i64 3, i32 1), %2118 ], [ getelementptr inbounds ([6 x %struct.CodecMime], [6 x %struct.CodecMime]* @mkv_mime_tags, i64 0, i64 4, i32 1), %2122 ]
  %1879 = load i32, i32* %1878, align 4
  %1880 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %1814, align 8
  %1881 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1880, i64 0, i32 1
  store i32 %1879, i32* %1881, align 4
  br label %1882

1882:                                             ; preds = %2122, %1877, %1835, %1797
  %1883 = add nuw nsw i64 %1781, 1
  %1884 = load i32, i32* %1775, align 8
  %1885 = sext i32 %1884 to i64
  %1886 = icmp slt i64 %1883, %1885
  br i1 %1886, label %1780, label %1887

1887:                                             ; preds = %1882, %1799, %1857, %1771
  %1888 = getelementptr inbounds i8, i8* %14, i64 400
  %1889 = bitcast i8* %1888 to %struct.MatroskaChapter**
  %1890 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %1889, align 8
  %1891 = bitcast i8* %17 to i32*
  %1892 = load i32, i32* %1891, align 8
  %1893 = icmp sgt i32 %1892, 0
  br i1 %1893, label %1894, label %1925

1894:                                             ; preds = %1887, %1919
  %1895 = phi i32 [ %1920, %1919 ], [ %1892, %1887 ]
  %1896 = phi i64 [ %1922, %1919 ], [ 0, %1887 ]
  %1897 = phi i64 [ %1921, %1919 ], [ 0, %1887 ]
  %1898 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %1890, i64 %1896, i32 0
  %1899 = load i64, i64* %1898, align 8
  %1900 = icmp eq i64 %1899, -9223372036854775808
  br i1 %1900, label %1919, label %1901

1901:                                             ; preds = %1894
  %1902 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %1890, i64 %1896, i32 2
  %1903 = load i64, i64* %1902, align 8
  %1904 = icmp eq i64 %1903, 0
  br i1 %1904, label %1919, label %1905

1905:                                             ; preds = %1901
  %1906 = icmp eq i64 %1897, 0
  %1907 = icmp ugt i64 %1899, %1897
  %1908 = or i1 %1906, %1907
  br i1 %1908, label %1909, label %1919

1909:                                             ; preds = %1905
  %1910 = trunc i64 %1903 to i32
  %1911 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %1890, i64 %1896, i32 1
  %1912 = load i64, i64* %1911, align 8
  %1913 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %1890, i64 %1896, i32 3
  %1914 = load i8*, i8** %1913, align 8
  %1915 = call %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext* %0, i32 %1910, i64 4294967296000000001, i64 %1899, i64 %1912, i8* %1914) #11
  %1916 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %1890, i64 %1896, i32 4
  store %struct.AVChapter* %1915, %struct.AVChapter** %1916, align 8
  %1917 = load i64, i64* %1898, align 8
  %1918 = load i32, i32* %1891, align 8
  br label %1919

1919:                                             ; preds = %1905, %1901, %1894, %1909
  %1920 = phi i32 [ %1918, %1909 ], [ %1895, %1901 ], [ %1895, %1894 ], [ %1895, %1905 ]
  %1921 = phi i64 [ %1917, %1909 ], [ %1897, %1901 ], [ %1897, %1894 ], [ %1897, %1905 ]
  %1922 = add nuw nsw i64 %1896, 1
  %1923 = sext i32 %1920 to i64
  %1924 = icmp slt i64 %1922, %1923
  br i1 %1924, label %1894, label %1925

1925:                                             ; preds = %1919, %1887
  call fastcc void @matroska_add_index_entries(%struct.MatroskaDemuxContext* %15)
  %1926 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %241, align 8
  %1927 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %1926, i64 0, i32 16, i32 2
  %1928 = bitcast i8** %1927 to %struct.MatroskaTags**
  %1929 = load %struct.MatroskaTags*, %struct.MatroskaTags** %1928, align 8
  %1930 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %1926, i64 0, i32 16, i32 0
  %1931 = load i32, i32* %1930, align 8
  %1932 = icmp sgt i32 %1931, 0
  br i1 %1932, label %1933, label %2104

1933:                                             ; preds = %1925
  %1934 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %1926, i64 0, i32 13, i32 2
  %1935 = bitcast i8** %1934 to %struct.MatroskaAttachment**
  %1936 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %1926, i64 0, i32 13, i32 0
  %1937 = bitcast %struct.AVFormatContext* %0 to i8*
  %1938 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %1926, i64 0, i32 14, i32 2
  %1939 = bitcast i8** %1938 to %struct.MatroskaChapter**
  %1940 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %1926, i64 0, i32 14, i32 0
  %1941 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %1926, i64 0, i32 12, i32 2
  %1942 = bitcast i8** %1941 to %struct.MatroskaTrack**
  %1943 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %1926, i64 0, i32 12, i32 0
  br label %1944

1944:                                             ; preds = %2069, %1933
  %1945 = phi i64 [ 0, %1933 ], [ %2070, %2069 ]
  %1946 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %1929, i64 %1945, i32 0, i32 4
  %1947 = load i64, i64* %1946, align 8
  %1948 = icmp eq i64 %1947, 0
  br i1 %1948, label %1985, label %1949

1949:                                             ; preds = %1944
  %1950 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %1935, align 8
  %1951 = load i32, i32* %1936, align 8
  %1952 = icmp sgt i32 %1951, 0
  br i1 %1952, label %1953, label %1982

1953:                                             ; preds = %1949
  %1954 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %1929, i64 %1945, i32 1
  br label %1955

1955:                                             ; preds = %1976, %1953
  %1956 = phi i32 [ %1951, %1953 ], [ %1971, %1976 ]
  %1957 = phi i64 [ %1947, %1953 ], [ %1977, %1976 ]
  %1958 = phi i64 [ 0, %1953 ], [ %1973, %1976 ]
  %1959 = phi i32 [ 0, %1953 ], [ %1972, %1976 ]
  %1960 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %1950, i64 %1958, i32 0
  %1961 = load i64, i64* %1960, align 8
  %1962 = icmp eq i64 %1961, %1957
  br i1 %1962, label %1963, label %1970

1963:                                             ; preds = %1955
  %1964 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %1950, i64 %1958, i32 5
  %1965 = load %struct.AVStream*, %struct.AVStream** %1964, align 8
  %1966 = icmp eq %struct.AVStream* %1965, null
  br i1 %1966, label %1970, label %1967

1967:                                             ; preds = %1963
  %1968 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1965, i64 0, i32 11
  call fastcc void @matroska_convert_tag(%struct.AVFormatContext* %0, %struct.EbmlList* %1954, %struct.AVDictionary** %1968, i8* null) #11
  %1969 = load i32, i32* %1936, align 8
  br label %1970

1970:                                             ; preds = %1967, %1963, %1955
  %1971 = phi i32 [ %1969, %1967 ], [ %1956, %1963 ], [ %1956, %1955 ]
  %1972 = phi i32 [ 1, %1967 ], [ %1959, %1963 ], [ %1959, %1955 ]
  %1973 = add nuw nsw i64 %1958, 1
  %1974 = sext i32 %1971 to i64
  %1975 = icmp slt i64 %1973, %1974
  br i1 %1975, label %1976, label %1978

1976:                                             ; preds = %1970
  %1977 = load i64, i64* %1946, align 8
  br label %1955

1978:                                             ; preds = %1970
  %1979 = icmp eq i32 %1972, 0
  br i1 %1979, label %1980, label %2069

1980:                                             ; preds = %1978
  %1981 = load i64, i64* %1946, align 8
  br label %1982

1982:                                             ; preds = %1980, %1949
  %1983 = phi i64 [ %1981, %1980 ], [ %1947, %1949 ]
  %1984 = trunc i64 %1945 to i32
  call void (i8*, i32, i8*, ...) @av_log(i8* %1937, i32 24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.119, i64 0, i64 0), i32 %1984, i64 %1983) #11
  br label %2069

1985:                                             ; preds = %1944
  %1986 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %1929, i64 %1945, i32 0, i32 3
  %1987 = load i64, i64* %1986, align 8
  %1988 = icmp eq i64 %1987, 0
  br i1 %1988, label %2025, label %1989

1989:                                             ; preds = %1985
  %1990 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %1939, align 8
  %1991 = load i32, i32* %1940, align 8
  %1992 = icmp sgt i32 %1991, 0
  br i1 %1992, label %1993, label %2022

1993:                                             ; preds = %1989
  %1994 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %1929, i64 %1945, i32 1
  br label %1995

1995:                                             ; preds = %2016, %1993
  %1996 = phi i32 [ %1991, %1993 ], [ %2011, %2016 ]
  %1997 = phi i64 [ %1987, %1993 ], [ %2017, %2016 ]
  %1998 = phi i64 [ 0, %1993 ], [ %2013, %2016 ]
  %1999 = phi i32 [ 0, %1993 ], [ %2012, %2016 ]
  %2000 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %1990, i64 %1998, i32 2
  %2001 = load i64, i64* %2000, align 8
  %2002 = icmp eq i64 %2001, %1997
  br i1 %2002, label %2003, label %2010

2003:                                             ; preds = %1995
  %2004 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %1990, i64 %1998, i32 4
  %2005 = load %struct.AVChapter*, %struct.AVChapter** %2004, align 8
  %2006 = icmp eq %struct.AVChapter* %2005, null
  br i1 %2006, label %2010, label %2007

2007:                                             ; preds = %2003
  %2008 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %2005, i64 0, i32 4
  call fastcc void @matroska_convert_tag(%struct.AVFormatContext* %0, %struct.EbmlList* %1994, %struct.AVDictionary** %2008, i8* null) #11
  %2009 = load i32, i32* %1940, align 8
  br label %2010

2010:                                             ; preds = %2007, %2003, %1995
  %2011 = phi i32 [ %2009, %2007 ], [ %1996, %2003 ], [ %1996, %1995 ]
  %2012 = phi i32 [ 1, %2007 ], [ %1999, %2003 ], [ %1999, %1995 ]
  %2013 = add nuw nsw i64 %1998, 1
  %2014 = sext i32 %2011 to i64
  %2015 = icmp slt i64 %2013, %2014
  br i1 %2015, label %2016, label %2018

2016:                                             ; preds = %2010
  %2017 = load i64, i64* %1986, align 8
  br label %1995

2018:                                             ; preds = %2010
  %2019 = icmp eq i32 %2012, 0
  br i1 %2019, label %2020, label %2069

2020:                                             ; preds = %2018
  %2021 = load i64, i64* %1986, align 8
  br label %2022

2022:                                             ; preds = %2020, %1989
  %2023 = phi i64 [ %2021, %2020 ], [ %1987, %1989 ]
  %2024 = trunc i64 %1945 to i32
  call void (i8*, i32, i8*, ...) @av_log(i8* %1937, i32 24, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.120, i64 0, i64 0), i32 %2024, i64 %2023) #11
  br label %2069

2025:                                             ; preds = %1985
  %2026 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %1929, i64 %1945, i32 0, i32 2
  %2027 = load i64, i64* %2026, align 8
  %2028 = icmp eq i64 %2027, 0
  br i1 %2028, label %2065, label %2029

2029:                                             ; preds = %2025
  %2030 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %1942, align 8
  %2031 = load i32, i32* %1943, align 8
  %2032 = icmp sgt i32 %2031, 0
  br i1 %2032, label %2033, label %2062

2033:                                             ; preds = %2029
  %2034 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %1929, i64 %1945, i32 1
  br label %2035

2035:                                             ; preds = %2056, %2033
  %2036 = phi i32 [ %2031, %2033 ], [ %2051, %2056 ]
  %2037 = phi i64 [ %2027, %2033 ], [ %2057, %2056 ]
  %2038 = phi i64 [ 0, %2033 ], [ %2053, %2056 ]
  %2039 = phi i32 [ 0, %2033 ], [ %2052, %2056 ]
  %2040 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %2030, i64 %2038, i32 1
  %2041 = load i64, i64* %2040, align 8
  %2042 = icmp eq i64 %2041, %2037
  br i1 %2042, label %2043, label %2050

2043:                                             ; preds = %2035
  %2044 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %2030, i64 %2038, i32 23
  %2045 = load %struct.AVStream*, %struct.AVStream** %2044, align 8
  %2046 = icmp eq %struct.AVStream* %2045, null
  br i1 %2046, label %2050, label %2047

2047:                                             ; preds = %2043
  %2048 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %2045, i64 0, i32 11
  call fastcc void @matroska_convert_tag(%struct.AVFormatContext* %0, %struct.EbmlList* %2034, %struct.AVDictionary** %2048, i8* null) #11
  %2049 = load i32, i32* %1943, align 8
  br label %2050

2050:                                             ; preds = %2047, %2043, %2035
  %2051 = phi i32 [ %2049, %2047 ], [ %2036, %2043 ], [ %2036, %2035 ]
  %2052 = phi i32 [ 1, %2047 ], [ %2039, %2043 ], [ %2039, %2035 ]
  %2053 = add nuw nsw i64 %2038, 1
  %2054 = sext i32 %2051 to i64
  %2055 = icmp slt i64 %2053, %2054
  br i1 %2055, label %2056, label %2058

2056:                                             ; preds = %2050
  %2057 = load i64, i64* %2026, align 8
  br label %2035

2058:                                             ; preds = %2050
  %2059 = icmp eq i32 %2052, 0
  br i1 %2059, label %2060, label %2069

2060:                                             ; preds = %2058
  %2061 = load i64, i64* %2026, align 8
  br label %2062

2062:                                             ; preds = %2060, %2029
  %2063 = phi i64 [ %2061, %2060 ], [ %2027, %2029 ]
  %2064 = trunc i64 %1945 to i32
  call void (i8*, i32, i8*, ...) @av_log(i8* %1937, i32 24, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.121, i64 0, i64 0), i32 %2064, i64 %2063) #11
  br label %2069

2065:                                             ; preds = %2025
  %2066 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %1929, i64 %1945, i32 1
  %2067 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %1929, i64 %1945, i32 0, i32 0
  %2068 = load i8*, i8** %2067, align 8
  call fastcc void @matroska_convert_tag(%struct.AVFormatContext* %0, %struct.EbmlList* %2066, %struct.AVDictionary** %217, i8* %2068) #11
  br label %2069

2069:                                             ; preds = %2065, %2062, %2058, %2022, %2018, %1982, %1978
  %2070 = add nuw nsw i64 %1945, 1
  %2071 = load i32, i32* %1930, align 8
  %2072 = sext i32 %2071 to i64
  %2073 = icmp slt i64 %2070, %2072
  br i1 %2073, label %1944, label %2104

2074:                                             ; preds = %74, %1767, %1758, %1769
  %2075 = phi i32 [ %1353, %1769 ], [ %1759, %1758 ], [ %1768, %1767 ], [ %76, %74 ]
  %2076 = load i8*, i8** %13, align 8
  %2077 = getelementptr inbounds i8, i8* %2076, i64 360
  %2078 = getelementptr inbounds i8, i8* %2076, i64 368
  %2079 = bitcast i8* %2078 to %struct.MatroskaTrack**
  %2080 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %2079, align 8
  %2081 = getelementptr inbounds i8, i8* %2076, i64 464
  %2082 = bitcast i8* %2081 to %struct.AVPacketList**
  %2083 = getelementptr inbounds i8, i8* %2076, i64 472
  %2084 = bitcast i8* %2083 to %struct.AVPacketList**
  call void @avpriv_packet_list_free(%struct.AVPacketList** %2082, %struct.AVPacketList** %2084) #11
  %2085 = bitcast i8* %2077 to i32*
  %2086 = load i32, i32* %2085, align 8
  %2087 = icmp sgt i32 %2086, 0
  br i1 %2087, label %2088, label %2103

2088:                                             ; preds = %2074, %2098
  %2089 = phi i32 [ %2099, %2098 ], [ %2086, %2074 ]
  %2090 = phi i64 [ %2100, %2098 ], [ 0, %2074 ]
  %2091 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %2080, i64 %2090, i32 2
  %2092 = load i64, i64* %2091, align 8
  %2093 = icmp eq i64 %2092, 2
  br i1 %2093, label %2094, label %2098

2094:                                             ; preds = %2088
  %2095 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %2080, i64 %2090, i32 18, i32 11
  %2096 = bitcast i8** %2095 to i8*
  call void @av_freep(i8* %2096) #11
  %2097 = load i32, i32* %2085, align 8
  br label %2098

2098:                                             ; preds = %2094, %2088
  %2099 = phi i32 [ %2089, %2088 ], [ %2097, %2094 ]
  %2100 = add nuw nsw i64 %2090, 1
  %2101 = sext i32 %2099 to i64
  %2102 = icmp slt i64 %2100, %2101
  br i1 %2102, label %2088, label %2103

2103:                                             ; preds = %2098, %2074
  call fastcc void @ebml_free(%struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i64 0, i32 0), i8* %2076) #11
  br label %2104

2104:                                             ; preds = %2069, %1925, %2103, %66, %48, %29
  %2105 = phi i32 [ -1094995529, %29 ], [ -1163346256, %48 ], [ -1094995529, %66 ], [ %2075, %2103 ], [ 0, %1925 ], [ 0, %2069 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  ret i32 %2105

2106:                                             ; preds = %1820
  %2107 = load i8*, i8** %1786, align 8
  %2108 = call i32 @av_strstart(i8* %2107, i8* getelementptr inbounds ([5 x %struct.CodecMime], [5 x %struct.CodecMime]* @mkv_image_mime_tags, i64 0, i64 2, i32 0, i64 0), i8** null) #11
  %2109 = icmp eq i32 %2108, 0
  br i1 %2109, label %2110, label %1824

2110:                                             ; preds = %2106
  %2111 = load i8*, i8** %1786, align 8
  %2112 = call i32 @av_strstart(i8* %2111, i8* getelementptr inbounds ([5 x %struct.CodecMime], [5 x %struct.CodecMime]* @mkv_image_mime_tags, i64 0, i64 3, i32 0, i64 0), i8** null) #11
  %2113 = icmp eq i32 %2112, 0
  br i1 %2113, label %1829, label %1824

2114:                                             ; preds = %1873
  %2115 = load i8*, i8** %1786, align 8
  %2116 = call i32 @av_strstart(i8* %2115, i8* getelementptr inbounds ([6 x %struct.CodecMime], [6 x %struct.CodecMime]* @mkv_mime_tags, i64 0, i64 2, i32 0, i64 0), i8** null) #11
  %2117 = icmp eq i32 %2116, 0
  br i1 %2117, label %2118, label %1877

2118:                                             ; preds = %2114
  %2119 = load i8*, i8** %1786, align 8
  %2120 = call i32 @av_strstart(i8* %2119, i8* getelementptr inbounds ([6 x %struct.CodecMime], [6 x %struct.CodecMime]* @mkv_mime_tags, i64 0, i64 3, i32 0, i64 0), i8** null) #11
  %2121 = icmp eq i32 %2120, 0
  br i1 %2121, label %2122, label %1877

2122:                                             ; preds = %2118
  %2123 = load i8*, i8** %1786, align 8
  %2124 = call i32 @av_strstart(i8* %2123, i8* getelementptr inbounds ([6 x %struct.CodecMime], [6 x %struct.CodecMime]* @mkv_mime_tags, i64 0, i64 4, i32 0, i64 0), i8** null) #11
  %2125 = icmp eq i32 %2124, 0
  br i1 %2125, label %1882, label %1877

2126:                                             ; preds = %63
  %2127 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %2127, i32 24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i8* %60) #11
  %2128 = load %struct.AVFormatContext*, %struct.AVFormatContext** %20, align 8
  %2129 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2128, i64 0, i32 32
  %2130 = load i32, i32* %2129, align 4
  %2131 = and i32 %2130, 8
  %2132 = icmp eq i32 %2131, 0
  br i1 %2132, label %67, label %66
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @matroska_read_packet(%struct.AVFormatContext* nocapture readonly, %struct.AVPacket*) #1 {
  %3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to %struct.MatroskaDemuxContext**
  %5 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %4, align 8
  %6 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %5, i64 0, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, -1
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %10, align 8
  %12 = tail call i64 @avio_seek(%struct.AVIOContext* %11, i64 0, i32 1) #11
  store i64 %12, i64* %6, align 8
  br label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %5, i64 0, i32 19
  %15 = load %struct.AVPacketList*, %struct.AVPacketList** %14, align 8
  %16 = icmp eq %struct.AVPacketList* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %5, i64 0, i32 21
  br label %42

19:                                               ; preds = %58, %13
  %20 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %5, i64 0, i32 12, i32 2
  %21 = bitcast i8** %20 to %struct.MatroskaTrack**
  %22 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %21, align 8
  %23 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %5, i64 0, i32 20
  %24 = tail call i32 @avpriv_packet_list_get(%struct.AVPacketList** %14, %struct.AVPacketList** %23, %struct.AVPacket* %1) #11
  %25 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 5
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %22, i64 %27, i32 29
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %62, label %31

31:                                               ; preds = %19
  %32 = tail call i8* @av_packet_new_side_data(%struct.AVPacket* %1, i32 0, i32 1024) #11
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %5, i64 0, i32 1
  %36 = bitcast %struct.AVFormatContext** %35 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %37, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.125, i64 0, i64 0)) #11
  br label %41

38:                                               ; preds = %31
  %39 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %22, i64 %27, i32 28, i64 0
  %40 = bitcast i32* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 8 %40, i64 1024, i1 false) #11
  br label %41

41:                                               ; preds = %38, %34
  store i32 0, i32* %28, align 8
  br label %62

42:                                               ; preds = %17, %58
  %43 = phi i32 [ 0, %17 ], [ %59, %58 ]
  %44 = load i32, i32* %18, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = icmp slt i32 %43, 0
  %48 = select i1 %47, i32 %43, i32 -541478725
  br label %62

49:                                               ; preds = %42
  %50 = tail call fastcc i32 @matroska_parse_cluster(%struct.MatroskaDemuxContext* %5)
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %49
  %53 = load i32, i32* %18, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %52
  %56 = load i64, i64* %6, align 8
  %57 = tail call fastcc i32 @matroska_resync(%struct.MatroskaDemuxContext* %5, i64 %56)
  br label %58

58:                                               ; preds = %52, %55, %49
  %59 = phi i32 [ %43, %52 ], [ %57, %55 ], [ %43, %49 ]
  %60 = load %struct.AVPacketList*, %struct.AVPacketList** %14, align 8
  %61 = icmp eq %struct.AVPacketList* %60, null
  br i1 %61, label %42, label %19

62:                                               ; preds = %41, %19, %46
  %63 = phi i32 [ %48, %46 ], [ 0, %19 ], [ 0, %41 ]
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @matroska_read_close(%struct.AVFormatContext* nocapture readonly) #1 {
  %2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 360
  %5 = getelementptr inbounds i8, i8* %3, i64 368
  %6 = bitcast i8* %5 to %struct.MatroskaTrack**
  %7 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %6, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 464
  %9 = bitcast i8* %8 to %struct.AVPacketList**
  %10 = getelementptr inbounds i8, i8* %3, i64 472
  %11 = bitcast i8* %10 to %struct.AVPacketList**
  tail call void @avpriv_packet_list_free(%struct.AVPacketList** %9, %struct.AVPacketList** %11) #11
  %12 = bitcast i8* %4 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %30

15:                                               ; preds = %1, %25
  %16 = phi i32 [ %26, %25 ], [ %13, %1 ]
  %17 = phi i64 [ %27, %25 ], [ 0, %1 ]
  %18 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %7, i64 %17, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 2
  br i1 %20, label %21, label %25

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %7, i64 %17, i32 18, i32 11
  %23 = bitcast i8** %22 to i8*
  tail call void @av_freep(i8* %23) #11
  %24 = load i32, i32* %12, align 8
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i32 [ %16, %15 ], [ %24, %21 ]
  %27 = add nuw nsw i64 %17, 1
  %28 = sext i32 %26 to i64
  %29 = icmp slt i64 %27, %28
  br i1 %29, label %15, label %30

30:                                               ; preds = %25, %1
  tail call fastcc void @ebml_free(%struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i64 0, i32 0), i8* %3)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @matroska_read_seek(%struct.AVFormatContext*, i32, i64, i32) #1 {
  %5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %6 = bitcast i8** %5 to %struct.MatroskaDemuxContext**
  %7 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %6, align 8
  %8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %9 = load %struct.AVStream**, %struct.AVStream*** %8, align 8
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %9, i64 %10
  %12 = load %struct.AVStream*, %struct.AVStream** %11, align 8
  %13 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 24
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %50

16:                                               ; preds = %4
  store i32 0, i32* %13, align 8
  %17 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 1
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %17, align 8
  %19 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %18, i64 0, i32 15
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %50

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 26
  %25 = load i32, i32* %24, align 8
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %49

27:                                               ; preds = %23
  %28 = sext i32 %25 to i64
  br label %29

29:                                               ; preds = %46, %27
  %30 = phi i64 [ 0, %27 ], [ %47, %46 ]
  %31 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 25, i64 %30, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 475249515
  br i1 %33, label %34, label %46

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 25, i64 %30, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %46

38:                                               ; preds = %34
  %39 = and i64 %30, 4294967295
  %40 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 25, i64 %39, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = tail call fastcc i32 @matroska_parse_seekhead_entry(%struct.MatroskaDemuxContext* %7, i64 %41) #11
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %38
  store i32 -1, i32* %13, align 8
  br label %45

45:                                               ; preds = %44, %38
  store i32 1, i32* %35, align 4
  br label %49

46:                                               ; preds = %34, %29
  %47 = add nuw nsw i64 %30, 1
  %48 = icmp eq i64 %47, %28
  br i1 %48, label %49, label %29

49:                                               ; preds = %46, %45, %23
  tail call fastcc void @matroska_add_index_entries(%struct.MatroskaDemuxContext* %7) #11
  br label %50

50:                                               ; preds = %49, %16, %4
  %51 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %12, i64 0, i32 40
  %52 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %51, align 8
  %53 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %52, i64 0, i32 12
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %188, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %52, i64 0, i32 11
  %58 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %57, align 8
  %59 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %58, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = icmp slt i64 %60, %2
  %62 = select i1 %61, i64 %2, i64 %60
  %63 = tail call i32 @av_index_search_timestamp(%struct.AVStream* %12, i64 %62, i32 %3) #11
  %64 = icmp slt i32 %63, 0
  %65 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %51, align 8
  %66 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %65, i64 0, i32 12
  %67 = load i32, i32* %66, align 8
  %68 = add nsw i32 %67, -1
  %69 = icmp eq i32 %63, %68
  %70 = or i1 %64, %69
  br i1 %70, label %71, label %110

71:                                               ; preds = %56
  %72 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %65, i64 0, i32 11
  %73 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %72, align 8
  %74 = sext i32 %68 to i64
  %75 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %73, i64 %74, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp sgt i64 %76, -1
  br i1 %77, label %78, label %85

78:                                               ; preds = %71
  %79 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 1
  %80 = load %struct.AVFormatContext*, %struct.AVFormatContext** %79, align 8
  %81 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %80, i64 0, i32 4
  %82 = load %struct.AVIOContext*, %struct.AVIOContext** %81, align 8
  %83 = tail call i64 @avio_seek(%struct.AVIOContext* %82, i64 %76, i32 0) #11
  %84 = icmp sgt i64 %83, -1
  br i1 %84, label %85, label %95

85:                                               ; preds = %78, %71
  %86 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 4
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 3
  store i32 1, i32* %87, align 8
  %88 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 6
  store i32 0, i32* %88, align 8
  %89 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 1
  %90 = load %struct.AVFormatContext*, %struct.AVFormatContext** %89, align 8
  %91 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %90, i64 0, i32 4
  %92 = load %struct.AVIOContext*, %struct.AVIOContext** %91, align 8
  %93 = tail call i64 @avio_seek(%struct.AVIOContext* %92, i64 0, i32 1) #11
  %94 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 5
  store i64 %93, i64* %94, align 8
  br label %95

95:                                               ; preds = %78, %85
  %96 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 19
  %97 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 20
  br label %98

98:                                               ; preds = %107, %95
  %99 = tail call i32 @av_index_search_timestamp(%struct.AVStream* %12, i64 %62, i32 %3) #11
  %100 = icmp slt i32 %99, 0
  br i1 %100, label %107, label %101

101:                                              ; preds = %98
  %102 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %51, align 8
  %103 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %102, i64 0, i32 12
  %104 = load i32, i32* %103, align 8
  %105 = add nsw i32 %104, -1
  %106 = icmp eq i32 %99, %105
  br i1 %106, label %107, label %110

107:                                              ; preds = %98, %101
  tail call void @avpriv_packet_list_free(%struct.AVPacketList** %96, %struct.AVPacketList** %97) #11
  %108 = tail call fastcc i32 @matroska_parse_cluster(%struct.MatroskaDemuxContext* %7)
  %109 = icmp slt i32 %108, 0
  br i1 %109, label %110, label %98

110:                                              ; preds = %101, %107, %56
  %111 = phi i32 [ %63, %56 ], [ %99, %107 ], [ %99, %101 ]
  %112 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 19
  %113 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 20
  tail call void @avpriv_packet_list_free(%struct.AVPacketList** %112, %struct.AVPacketList** %113) #11
  %114 = icmp slt i32 %111, 0
  br i1 %114, label %188, label %115

115:                                              ; preds = %110
  %116 = load i32, i32* %13, align 8
  %117 = icmp slt i32 %116, 0
  br i1 %117, label %118, label %124

118:                                              ; preds = %115
  %119 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %51, align 8
  %120 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %119, i64 0, i32 12
  %121 = load i32, i32* %120, align 8
  %122 = add nsw i32 %121, -1
  %123 = icmp eq i32 %111, %122
  br i1 %123, label %188, label %124

124:                                              ; preds = %118, %115
  %125 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 12, i32 2
  %126 = bitcast i8** %125 to %struct.MatroskaTrack**
  %127 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %126, align 8
  %128 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 12, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = icmp sgt i32 %129, 0
  br i1 %130, label %131, label %141

131:                                              ; preds = %124, %131
  %132 = phi i64 [ %137, %131 ], [ 0, %124 ]
  %133 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %127, i64 %132, i32 18, i32 9
  store i32 0, i32* %133, align 4
  %134 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %127, i64 %132, i32 18, i32 8
  store i32 0, i32* %134, align 8
  %135 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %127, i64 %132, i32 18, i32 10
  store i64 -9223372036854775808, i64* %135, align 8
  %136 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %127, i64 %132, i32 24
  store i64 0, i64* %136, align 8
  %137 = add nuw nsw i64 %132, 1
  %138 = load i32, i32* %128, align 8
  %139 = sext i32 %138 to i64
  %140 = icmp slt i64 %137, %139
  br i1 %140, label %131, label %141

141:                                              ; preds = %131, %124
  %142 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %51, align 8
  %143 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %142, i64 0, i32 11
  %144 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %143, align 8
  %145 = sext i32 %111 to i64
  %146 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %144, i64 %145, i32 0
  %147 = load i64, i64* %146, align 8
  %148 = icmp sgt i64 %147, -1
  br i1 %148, label %149, label %156

149:                                              ; preds = %141
  %150 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 1
  %151 = load %struct.AVFormatContext*, %struct.AVFormatContext** %150, align 8
  %152 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %151, i64 0, i32 4
  %153 = load %struct.AVIOContext*, %struct.AVIOContext** %152, align 8
  %154 = tail call i64 @avio_seek(%struct.AVIOContext* %153, i64 %147, i32 0) #11
  %155 = icmp sgt i64 %154, -1
  br i1 %155, label %156, label %166

156:                                              ; preds = %149, %141
  %157 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 4
  store i32 0, i32* %157, align 4
  %158 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 3
  store i32 1, i32* %158, align 8
  %159 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 6
  store i32 0, i32* %159, align 8
  %160 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 1
  %161 = load %struct.AVFormatContext*, %struct.AVFormatContext** %160, align 8
  %162 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %161, i64 0, i32 4
  %163 = load %struct.AVIOContext*, %struct.AVIOContext** %162, align 8
  %164 = tail call i64 @avio_seek(%struct.AVIOContext* %163, i64 0, i32 1) #11
  %165 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 5
  store i64 %164, i64* %165, align 8
  br label %166

166:                                              ; preds = %149, %156
  %167 = and i32 %3, 4
  %168 = icmp eq i32 %167, 0
  %169 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %51, align 8
  %170 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %169, i64 0, i32 17
  br i1 %168, label %172, label %171

171:                                              ; preds = %166
  store i32 0, i32* %170, align 4
  br label %178

172:                                              ; preds = %166
  store i32 1, i32* %170, align 4
  %173 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %51, align 8
  %174 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %173, i64 0, i32 11
  %175 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %174, align 8
  %176 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %175, i64 %145, i32 1
  %177 = load i64, i64* %176, align 8
  br label %178

178:                                              ; preds = %172, %171
  %179 = phi i64 [ %177, %172 ], [ %62, %171 ]
  %180 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 23
  store i64 %179, i64* %180, align 8
  %181 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 22
  store i32 1, i32* %181, align 4
  %182 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 21
  store i32 0, i32* %182, align 8
  %183 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %51, align 8
  %184 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %183, i64 0, i32 11
  %185 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %184, align 8
  %186 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %185, i64 %145, i32 1
  %187 = load i64, i64* %186, align 8
  tail call void @ff_update_cur_dts(%struct.AVFormatContext* %0, %struct.AVStream* %12, i64 %187) #11
  br label %204

188:                                              ; preds = %50, %110, %118
  %189 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 4
  store i32 0, i32* %189, align 4
  %190 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 3
  store i32 1, i32* %190, align 8
  %191 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 6
  store i32 0, i32* %191, align 8
  %192 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 1
  %193 = load %struct.AVFormatContext*, %struct.AVFormatContext** %192, align 8
  %194 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %193, i64 0, i32 4
  %195 = load %struct.AVIOContext*, %struct.AVIOContext** %194, align 8
  %196 = tail call i64 @avio_seek(%struct.AVIOContext* %195, i64 0, i32 1) #11
  %197 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 5
  store i64 -1, i64* %197, align 8
  %198 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 19
  %199 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 20
  tail call void @avpriv_packet_list_free(%struct.AVPacketList** %198, %struct.AVPacketList** %199) #11
  %200 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 22
  store i32 0, i32* %200, align 4
  %201 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %51, align 8
  %202 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %201, i64 0, i32 17
  store i32 0, i32* %202, align 4
  %203 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i64 0, i32 21
  store i32 0, i32* %203, align 8
  br label %204

204:                                              ; preds = %188, %178
  %205 = phi i32 [ -1, %188 ], [ 0, %178 ]
  ret i32 %205
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @webm_dash_manifest_read_header(%struct.AVFormatContext*) #1 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = tail call i32 @matroska_read_header(%struct.AVFormatContext* %0)
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %8 = bitcast i8** %7 to %struct.MatroskaDemuxContext**
  %9 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %8, align 8
  %10 = icmp eq i32 %6, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.145, i64 0, i64 0)) #11
  br label %866

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %9, i64 0, i32 12, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %832, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 6
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %832, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %9, i64 0, i32 28
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %44

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %9, i64 0, i32 8
  %27 = load double, double* %26, align 8
  %28 = tail call i8* (i8*, ...) @av_asprintf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.147, i64 0, i64 0), double %27) #11
  %29 = icmp eq i8* %28, null
  br i1 %29, label %836, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %32 = load %struct.AVStream**, %struct.AVStream*** %31, align 8
  %33 = load %struct.AVStream*, %struct.AVStream** %32, align 8
  %34 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %33, i64 0, i32 11
  %35 = tail call i32 @av_dict_set(%struct.AVDictionary** %34, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.148, i64 0, i64 0), i8* nonnull %28, i32 8) #11
  %36 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %37 = load %struct.AVIOContext*, %struct.AVIOContext** %36, align 8
  %38 = tail call i64 @avio_seek(%struct.AVIOContext* %37, i64 0, i32 1) #11
  %39 = add nsw i64 %38, -5
  %40 = load %struct.AVStream**, %struct.AVStream*** %31, align 8
  %41 = load %struct.AVStream*, %struct.AVStream** %40, align 8
  %42 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %41, i64 0, i32 11
  %43 = tail call i32 @av_dict_set_int(%struct.AVDictionary** %42, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.149, i64 0, i64 0), i64 %39, i32 0) #11
  br label %44

44:                                               ; preds = %21, %30
  %45 = phi i64 [ -6148914691236517206, %21 ], [ %39, %30 ]
  %46 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 9
  %47 = load i8*, i8** %46, align 8
  %48 = tail call i8* @strrchr(i8* %47, i32 47) #12
  %49 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %50 = load %struct.AVStream**, %struct.AVStream*** %49, align 8
  %51 = load %struct.AVStream*, %struct.AVStream** %50, align 8
  %52 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %51, i64 0, i32 11
  %53 = icmp eq i8* %48, null
  %54 = getelementptr inbounds i8, i8* %48, i64 1
  %55 = select i1 %53, i8* %47, i8* %54
  %56 = tail call i32 @av_dict_set(%struct.AVDictionary** %52, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.150, i64 0, i64 0), i8* %55, i32 0) #11
  %57 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %9, i64 0, i32 12, i32 2
  %58 = bitcast i8** %57 to %struct.MatroskaTrack**
  %59 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %58, align 8
  %60 = load %struct.AVStream**, %struct.AVStream*** %49, align 8
  %61 = load %struct.AVStream*, %struct.AVStream** %60, align 8
  %62 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %61, i64 0, i32 11
  %63 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %59, i64 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = tail call i32 @av_dict_set_int(%struct.AVDictionary** %62, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.151, i64 0, i64 0), i64 %64, i32 0) #11
  %66 = load i32, i32* %22, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %822

68:                                               ; preds = %44
  %69 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %8, align 8
  %70 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %69, i64 0, i32 17, i32 2
  %71 = bitcast i8** %70 to %struct.MatroskaSeekhead**
  %72 = load %struct.MatroskaSeekhead*, %struct.MatroskaSeekhead** %71, align 8
  %73 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %69, i64 0, i32 17, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %832

76:                                               ; preds = %68
  %77 = sext i32 %74 to i64
  br label %78

78:                                               ; preds = %83, %76
  %79 = phi i64 [ 0, %76 ], [ %84, %83 ]
  %80 = getelementptr inbounds %struct.MatroskaSeekhead, %struct.MatroskaSeekhead* %72, i64 %79, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, 475249515
  br i1 %82, label %86, label %83

83:                                               ; preds = %78
  %84 = add nuw nsw i64 %79, 1
  %85 = icmp eq i64 %84, %77
  br i1 %85, label %832, label %78

86:                                               ; preds = %78
  %87 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %69, i64 0, i32 1
  %88 = load %struct.AVFormatContext*, %struct.AVFormatContext** %87, align 8
  %89 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %88, i64 0, i32 4
  %90 = load %struct.AVIOContext*, %struct.AVIOContext** %89, align 8
  %91 = tail call i64 @avio_seek(%struct.AVIOContext* %90, i64 0, i32 1) #11
  %92 = and i64 %79, 4294967295
  %93 = getelementptr inbounds %struct.MatroskaSeekhead, %struct.MatroskaSeekhead* %72, i64 %92, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %69, i64 0, i32 18
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, %94
  %98 = load %struct.AVFormatContext*, %struct.AVFormatContext** %87, align 8
  %99 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %98, i64 0, i32 4
  %100 = load %struct.AVIOContext*, %struct.AVIOContext** %99, align 8
  %101 = tail call i64 @avio_seek(%struct.AVIOContext* %100, i64 %97, i32 0) #11
  %102 = icmp eq i64 %101, %97
  br i1 %102, label %103, label %140

103:                                              ; preds = %86
  %104 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %105 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #11
  store i64 -6148914691236517206, i64* %5, align 8
  %106 = load %struct.AVFormatContext*, %struct.AVFormatContext** %87, align 8
  %107 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %106, i64 0, i32 4
  %108 = load %struct.AVIOContext*, %struct.AVIOContext** %107, align 8
  %109 = call fastcc i32 @ebml_read_num(%struct.MatroskaDemuxContext* %69, %struct.AVIOContext* %108, i32 4, i64* nonnull %5, i32 1) #11
  %110 = icmp slt i32 %109, 0
  %111 = load i64, i64* %5, align 8
  %112 = icmp ne i64 %111, 206814059
  %113 = or i1 %110, %112
  br i1 %113, label %114, label %116

114:                                              ; preds = %103
  %115 = select i1 %110, i32 %109, i32 -1094995529
  br label %820

116:                                              ; preds = %103
  %117 = load %struct.AVFormatContext*, %struct.AVFormatContext** %87, align 8
  %118 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %117, i64 0, i32 4
  %119 = load %struct.AVIOContext*, %struct.AVIOContext** %118, align 8
  %120 = call fastcc i32 @ebml_read_num(%struct.MatroskaDemuxContext* %69, %struct.AVIOContext* %119, i32 8, i64* nonnull %4, i32 1) #11
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %122, label %130

122:                                              ; preds = %116
  %123 = load i64, i64* %4, align 8
  %124 = add i64 %123, 1
  %125 = mul nsw i32 %120, 7
  %126 = zext i32 %125 to i64
  %127 = shl i64 1, %126
  %128 = icmp eq i64 %124, %127
  br i1 %128, label %129, label %134

129:                                              ; preds = %122
  store i64 -1, i64* %4, align 8
  br label %134

130:                                              ; preds = %116
  %131 = icmp slt i32 %120, 0
  br i1 %131, label %820, label %132

132:                                              ; preds = %130
  %133 = load i64, i64* %4, align 8
  br label %134

134:                                              ; preds = %132, %129, %122
  %135 = phi i64 [ %133, %132 ], [ -1, %129 ], [ %123, %122 ]
  %136 = sext i32 %120 to i64
  %137 = add i64 %97, 3
  %138 = add i64 %137, %136
  %139 = add i64 %138, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #11
  br label %140

140:                                              ; preds = %134, %86
  %141 = phi i64 [ %139, %134 ], [ -1, %86 ]
  %142 = load %struct.AVFormatContext*, %struct.AVFormatContext** %87, align 8
  %143 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %142, i64 0, i32 4
  %144 = load %struct.AVIOContext*, %struct.AVIOContext** %143, align 8
  %145 = tail call i64 @avio_seek(%struct.AVIOContext* %144, i64 %91, i32 0) #11
  %146 = icmp eq i64 %97, -1
  %147 = icmp eq i64 %141, -1
  %148 = or i1 %146, %147
  br i1 %148, label %832, label %149

149:                                              ; preds = %140
  %150 = load %struct.AVFormatContext*, %struct.AVFormatContext** %87, align 8
  %151 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %150, i64 0, i32 15
  %152 = load i32, i32* %151, align 8
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %183

155:                                              ; preds = %149
  %156 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %69, i64 0, i32 26
  %157 = load i32, i32* %156, align 8
  %158 = icmp sgt i32 %157, 0
  br i1 %158, label %159, label %182

159:                                              ; preds = %155
  %160 = sext i32 %157 to i64
  br label %161

161:                                              ; preds = %179, %159
  %162 = phi i64 [ 0, %159 ], [ %180, %179 ]
  %163 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %69, i64 0, i32 25, i64 %162, i32 1
  %164 = load i32, i32* %163, align 8
  %165 = icmp eq i32 %164, 475249515
  br i1 %165, label %166, label %179

166:                                              ; preds = %161
  %167 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %69, i64 0, i32 25, i64 %162, i32 2
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %179

170:                                              ; preds = %166
  %171 = and i64 %162, 4294967295
  %172 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %69, i64 0, i32 25, i64 %171, i32 0
  %173 = load i64, i64* %172, align 8
  %174 = tail call fastcc i32 @matroska_parse_seekhead_entry(%struct.MatroskaDemuxContext* %69, i64 %173) #11
  %175 = icmp slt i32 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %170
  %177 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %69, i64 0, i32 24
  store i32 -1, i32* %177, align 8
  br label %178

178:                                              ; preds = %176, %170
  store i32 1, i32* %167, align 4
  br label %182

179:                                              ; preds = %166, %161
  %180 = add nuw nsw i64 %162, 1
  %181 = icmp eq i64 %180, %160
  br i1 %181, label %182, label %161

182:                                              ; preds = %179, %178, %155
  tail call fastcc void @matroska_add_index_entries(%struct.MatroskaDemuxContext* %69) #11
  br label %183

183:                                              ; preds = %182, %149
  %184 = load %struct.AVStream**, %struct.AVStream*** %49, align 8
  %185 = load %struct.AVStream*, %struct.AVStream** %184, align 8
  %186 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %185, i64 0, i32 11
  %187 = tail call i32 @av_dict_set_int(%struct.AVDictionary** %186, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.154, i64 0, i64 0), i64 %97, i32 0) #11
  %188 = load %struct.AVStream**, %struct.AVStream*** %49, align 8
  %189 = load %struct.AVStream*, %struct.AVStream** %188, align 8
  %190 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %189, i64 0, i32 11
  %191 = tail call i32 @av_dict_set_int(%struct.AVDictionary** %190, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.155, i64 0, i64 0), i64 %141, i32 0) #11
  %192 = icmp sgt i64 %97, %45
  br i1 %192, label %199, label %193

193:                                              ; preds = %183
  %194 = load %struct.AVStream**, %struct.AVStream*** %49, align 8
  %195 = load %struct.AVStream*, %struct.AVStream** %194, align 8
  %196 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %195, i64 0, i32 11
  %197 = add nsw i64 %97, -1
  %198 = tail call i32 @av_dict_set_int(%struct.AVDictionary** %196, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.149, i64 0, i64 0), i64 %197, i32 0) #11
  br label %199

199:                                              ; preds = %193, %183
  %200 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %8, align 8
  %201 = load %struct.AVStream**, %struct.AVStream*** %49, align 8
  %202 = load %struct.AVStream*, %struct.AVStream** %201, align 8
  %203 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %202, i64 0, i32 40
  %204 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %203, align 8
  %205 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %204, i64 0, i32 12
  %206 = load i32, i32* %205, align 8
  %207 = icmp sgt i32 %206, 0
  br i1 %207, label %208, label %638

208:                                              ; preds = %199
  %209 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %200, i64 0, i32 7
  %210 = load i64, i64* %209, align 8
  %211 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %200, i64 0, i32 8
  %212 = load double, double* %211, align 8, !noalias !5
  %213 = uitofp i64 %210 to double
  %214 = fmul nsz double %212, %213
  %215 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %200, i64 0, i32 18
  %216 = fptosi double %214 to i64
  %217 = fdiv nsz double %214, 1.000000e+09
  %218 = fmul nsz double %217, 1.000000e+09
  %219 = fptosi double %218 to i64
  %220 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %204, i64 0, i32 11
  %221 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %220, align 8
  %222 = icmp eq i32 %206, 1
  %223 = zext i32 %206 to i64
  %224 = icmp ne i32 %206, 1
  %225 = sext i32 %206 to i64
  br label %226

226:                                              ; preds = %629, %208
  %227 = phi i64 [ 0, %208 ], [ %633, %629 ]
  %228 = phi double [ 0.000000e+00, %208 ], [ %632, %629 ]
  %229 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %227, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = mul i64 %230, %210
  %232 = add nsw i64 %231, 1000000000
  %233 = sitofp i64 %231 to double
  %234 = fcmp nsz ugt double %214, %233
  br i1 %234, label %235, label %348

235:                                              ; preds = %226
  br i1 %222, label %255, label %236

236:                                              ; preds = %235, %249
  %237 = phi i64 [ %250, %249 ], [ 1, %235 ]
  %238 = phi i32 [ %251, %249 ], [ 1, %235 ]
  %239 = add nsw i64 %237, -1
  %240 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %239, i32 1
  %241 = load i64, i64* %240, align 8, !noalias !5
  %242 = mul i64 %241, %210
  %243 = icmp ugt i64 %242, %231
  br i1 %243, label %249, label %244

244:                                              ; preds = %236
  %245 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %237, i32 1
  %246 = load i64, i64* %245, align 8, !noalias !5
  %247 = mul i64 %246, %210
  %248 = icmp ugt i64 %247, %231
  br i1 %248, label %253, label %249

249:                                              ; preds = %244, %236
  %250 = add nuw nsw i64 %237, 1
  %251 = add nuw nsw i32 %238, 1
  %252 = icmp eq i64 %250, %223
  br i1 %252, label %255, label %236

253:                                              ; preds = %244
  %254 = trunc i64 %237 to i32
  br label %255

255:                                              ; preds = %249, %253, %235
  %256 = phi i32 [ 1, %235 ], [ %254, %253 ], [ %251, %249 ]
  %257 = add nsw i32 %256, -1
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %258, i32 1
  %260 = load i64, i64* %259, align 8, !noalias !5
  %261 = mul i64 %260, %210
  %262 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %258, i32 0
  %263 = load i64, i64* %262, align 8, !noalias !5
  %264 = load i64, i64* %215, align 8, !noalias !5
  %265 = sub nsw i64 %263, %264
  %266 = icmp eq i32 %256, %206
  br i1 %266, label %274, label %267

267:                                              ; preds = %255
  %268 = zext i32 %256 to i64
  %269 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %268, i32 1
  %270 = load i64, i64* %269, align 8, !noalias !5
  %271 = mul i64 %270, %210
  %272 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %268, i32 0
  %273 = load i64, i64* %272, align 8, !noalias !5
  br label %274

274:                                              ; preds = %267, %255
  %275 = phi i64 [ %273, %267 ], [ %97, %255 ]
  %276 = phi i64 [ %271, %267 ], [ %216, %255 ]
  %277 = sub nsw i64 %275, %264
  %278 = icmp ne i64 %261, -1
  %279 = icmp slt i64 %276, %232
  %280 = and i1 %278, %279
  br i1 %280, label %281, label %340

281:                                              ; preds = %274, %333
  %282 = phi i64 [ %321, %333 ], [ %261, %274 ]
  %283 = phi i64 [ %335, %333 ], [ %276, %274 ]
  %284 = phi i64 [ %324, %333 ], [ %265, %274 ]
  %285 = phi i64 [ %336, %333 ], [ %277, %274 ]
  %286 = phi i64 [ %292, %333 ], [ 1000000000, %274 ]
  %287 = phi double [ %290, %333 ], [ 0.000000e+00, %274 ]
  %288 = sub nsw i64 %285, %284
  %289 = sitofp i64 %288 to double
  %290 = fadd nsz double %287, %289
  %291 = sub i64 %286, %283
  %292 = add i64 %291, %282
  %293 = sitofp i64 %283 to double
  %294 = fcmp nsz ugt double %214, %293
  br i1 %294, label %295, label %348

295:                                              ; preds = %281
  br i1 %222, label %315, label %296

296:                                              ; preds = %295, %309
  %297 = phi i64 [ %310, %309 ], [ 1, %295 ]
  %298 = phi i32 [ %311, %309 ], [ 1, %295 ]
  %299 = add nsw i64 %297, -1
  %300 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %299, i32 1
  %301 = load i64, i64* %300, align 8, !noalias !8
  %302 = mul i64 %301, %210
  %303 = icmp ugt i64 %302, %283
  br i1 %303, label %309, label %304

304:                                              ; preds = %296
  %305 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %297, i32 1
  %306 = load i64, i64* %305, align 8, !noalias !8
  %307 = mul i64 %306, %210
  %308 = icmp ugt i64 %307, %283
  br i1 %308, label %313, label %309

309:                                              ; preds = %304, %296
  %310 = add nuw nsw i64 %297, 1
  %311 = add nuw nsw i32 %298, 1
  %312 = icmp eq i64 %310, %223
  br i1 %312, label %315, label %296

313:                                              ; preds = %304
  %314 = trunc i64 %297 to i32
  br label %315

315:                                              ; preds = %309, %313, %295
  %316 = phi i32 [ 1, %295 ], [ %314, %313 ], [ %311, %309 ]
  %317 = add nsw i32 %316, -1
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %318, i32 1
  %320 = load i64, i64* %319, align 8, !noalias !8
  %321 = mul i64 %320, %210
  %322 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %318, i32 0
  %323 = load i64, i64* %322, align 8, !noalias !8
  %324 = sub nsw i64 %323, %264
  %325 = icmp eq i32 %316, %206
  br i1 %325, label %333, label %326

326:                                              ; preds = %315
  %327 = zext i32 %316 to i64
  %328 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %327, i32 1
  %329 = load i64, i64* %328, align 8, !noalias !8
  %330 = mul i64 %329, %210
  %331 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %327, i32 0
  %332 = load i64, i64* %331, align 8, !noalias !8
  br label %333

333:                                              ; preds = %326, %315
  %334 = phi i64 [ %332, %326 ], [ %97, %315 ]
  %335 = phi i64 [ %330, %326 ], [ %216, %315 ]
  %336 = sub nsw i64 %334, %264
  %337 = icmp ne i64 %321, -1
  %338 = icmp slt i64 %335, %232
  %339 = and i1 %337, %338
  br i1 %339, label %281, label %340

340:                                              ; preds = %333, %274
  %341 = phi double [ 0.000000e+00, %274 ], [ %290, %333 ]
  %342 = phi i64 [ 1000000000, %274 ], [ %292, %333 ]
  %343 = phi i64 [ %277, %274 ], [ %336, %333 ]
  %344 = phi i64 [ %265, %274 ], [ %324, %333 ]
  %345 = phi i64 [ %276, %274 ], [ %335, %333 ]
  %346 = phi i64 [ %261, %274 ], [ %321, %333 ]
  %347 = icmp eq i64 %346, -1
  br i1 %347, label %348, label %351

348:                                              ; preds = %281, %340, %226
  %349 = sitofp i64 %232 to double
  %350 = fcmp nsz ult double %214, %349
  br i1 %350, label %629, label %832

351:                                              ; preds = %340
  %352 = sub nsw i64 %343, %344
  %353 = sub nsw i64 %345, %346
  %354 = sitofp i64 %353 to double
  %355 = fdiv nsz double %354, 1.000000e+09
  %356 = sitofp i64 %352 to double
  %357 = sitofp i64 %342 to double
  %358 = fdiv nsz double %357, 1.000000e+09
  %359 = fdiv nsz double %358, %355
  %360 = fmul nsz double %359, %356
  %361 = fadd nsz double %341, %360
  %362 = sitofp i64 %232 to double
  %363 = fdiv nsz double %362, 1.000000e+09
  %364 = add nsw i64 %232, %219
  %365 = fcmp nsz ugt double %214, %362
  br label %366

366:                                              ; preds = %624, %351
  %367 = phi i64 [ %343, %351 ], [ %627, %624 ]
  %368 = phi i64 [ %345, %351 ], [ %626, %624 ]
  %369 = sub nsw i64 %367, %265
  %370 = sub nsw i64 %368, %261
  %371 = sitofp i64 %370 to double
  %372 = fdiv nsz double %371, 1.000000e+09
  %373 = sitofp i64 %369 to double
  %374 = fcmp nsz ogt double %372, 1.000000e+00
  br i1 %374, label %375, label %586

375:                                              ; preds = %366
  %376 = shl nsw i64 %369, 3
  %377 = sitofp i64 %376 to double
  %378 = fdiv nsz double %377, %372
  %379 = fsub nsz double %373, %361
  %380 = fdiv nsz double %379, %373
  %381 = fmul nsz double %380, %378
  %382 = fptosi double %381 to i64
  %383 = add nsw i64 %382, 1
  br i1 %365, label %384, label %832

384:                                              ; preds = %375
  br i1 %224, label %385, label %404

385:                                              ; preds = %384, %398
  %386 = phi i64 [ %399, %398 ], [ 1, %384 ]
  %387 = phi i32 [ %400, %398 ], [ 1, %384 ]
  %388 = add nsw i64 %386, -1
  %389 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %388, i32 1
  %390 = load i64, i64* %389, align 8, !noalias !11
  %391 = mul i64 %390, %210
  %392 = icmp ugt i64 %391, %232
  br i1 %392, label %398, label %393

393:                                              ; preds = %385
  %394 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %386, i32 1
  %395 = load i64, i64* %394, align 8, !noalias !11
  %396 = mul i64 %395, %210
  %397 = icmp ugt i64 %396, %232
  br i1 %397, label %402, label %398

398:                                              ; preds = %393, %385
  %399 = add nuw nsw i64 %386, 1
  %400 = add nuw nsw i32 %387, 1
  %401 = icmp eq i64 %399, %223
  br i1 %401, label %404, label %385

402:                                              ; preds = %393
  %403 = trunc i64 %386 to i32
  br label %404

404:                                              ; preds = %398, %402, %384
  %405 = phi i32 [ 1, %384 ], [ %403, %402 ], [ %400, %398 ]
  %406 = add nsw i32 %405, -1
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %407, i32 1
  %409 = load i64, i64* %408, align 8, !noalias !11
  %410 = mul i64 %409, %210
  %411 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %407, i32 0
  %412 = load i64, i64* %411, align 8, !noalias !11
  %413 = sub nsw i64 %412, %264
  %414 = icmp eq i32 %405, %206
  br i1 %414, label %422, label %415

415:                                              ; preds = %404
  %416 = zext i32 %405 to i64
  %417 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %416, i32 1
  %418 = load i64, i64* %417, align 8, !noalias !11
  %419 = mul i64 %418, %210
  %420 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %416, i32 0
  %421 = load i64, i64* %420, align 8, !noalias !11
  br label %422

422:                                              ; preds = %415, %404
  %423 = phi i64 [ %421, %415 ], [ %97, %404 ]
  %424 = phi i64 [ %419, %415 ], [ %216, %404 ]
  %425 = sub nsw i64 %423, %264
  %426 = icmp eq i64 %410, -1
  br i1 %426, label %832, label %427

427:                                              ; preds = %422
  %428 = icmp slt i64 %410, %232
  br i1 %428, label %431, label %429

429:                                              ; preds = %427
  %430 = sitofp i64 %383 to double
  br label %502

431:                                              ; preds = %427
  %432 = sub nsw i64 %424, %232
  %433 = sitofp i64 %432 to double
  %434 = sub nsw i64 %424, %410
  %435 = sitofp i64 %434 to double
  %436 = fdiv nsz double %433, %435
  %437 = sub nsw i64 %425, %413
  %438 = sitofp i64 %437 to double
  %439 = fmul nsz double %436, %438
  %440 = fmul nsz double %439, 8.000000e+00
  %441 = sitofp i64 %383 to double
  %442 = fdiv nsz double %440, %441
  %443 = fdiv nsz double %433, 1.000000e+09
  %444 = fsub nsz double %443, %442
  %445 = icmp slt i64 %424, %364
  br i1 %445, label %452, label %446

446:                                              ; preds = %431
  %447 = sitofp i64 %424 to double
  %448 = fdiv nsz double %447, 1.000000e+09
  %449 = fsub nsz double %448, %363
  %450 = fdiv nsz double %217, %449
  %451 = fmul nsz double %450, %444
  br label %452

452:                                              ; preds = %446, %431
  %453 = phi double [ %451, %446 ], [ %444, %431 ]
  %454 = fadd nsz double %453, 1.000000e+00
  %455 = fcmp nsz ugt double %454, 0.000000e+00
  br i1 %455, label %456, label %586

456:                                              ; preds = %452
  %457 = sitofp i64 %424 to double
  %458 = fcmp nsz ugt double %214, %457
  br i1 %458, label %459, label %629

459:                                              ; preds = %456
  br i1 %224, label %460, label %479

460:                                              ; preds = %459, %473
  %461 = phi i64 [ %474, %473 ], [ 1, %459 ]
  %462 = phi i32 [ %475, %473 ], [ 1, %459 ]
  %463 = add nsw i64 %461, -1
  %464 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %463, i32 1
  %465 = load i64, i64* %464, align 8, !noalias !14
  %466 = mul i64 %465, %210
  %467 = icmp ugt i64 %466, %424
  br i1 %467, label %473, label %468

468:                                              ; preds = %460
  %469 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %461, i32 1
  %470 = load i64, i64* %469, align 8, !noalias !14
  %471 = mul i64 %470, %210
  %472 = icmp ugt i64 %471, %424
  br i1 %472, label %477, label %473

473:                                              ; preds = %468, %460
  %474 = add nuw nsw i64 %461, 1
  %475 = add nuw nsw i32 %462, 1
  %476 = icmp eq i64 %474, %223
  br i1 %476, label %479, label %460

477:                                              ; preds = %468
  %478 = trunc i64 %461 to i32
  br label %479

479:                                              ; preds = %473, %477, %459
  %480 = phi i32 [ 1, %459 ], [ %478, %477 ], [ %475, %473 ]
  %481 = add nsw i32 %480, -1
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %482, i32 1
  %484 = load i64, i64* %483, align 8, !noalias !14
  %485 = mul i64 %484, %210
  %486 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %482, i32 0
  %487 = load i64, i64* %486, align 8, !noalias !14
  %488 = sub nsw i64 %487, %264
  %489 = icmp eq i32 %480, %206
  br i1 %489, label %497, label %490

490:                                              ; preds = %479
  %491 = zext i32 %480 to i64
  %492 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %491, i32 1
  %493 = load i64, i64* %492, align 8, !noalias !14
  %494 = mul i64 %493, %210
  %495 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %491, i32 0
  %496 = load i64, i64* %495, align 8, !noalias !14
  br label %497

497:                                              ; preds = %490, %479
  %498 = phi i64 [ %496, %490 ], [ %97, %479 ]
  %499 = phi i64 [ %494, %490 ], [ %216, %479 ]
  %500 = sub nsw i64 %498, %264
  %501 = icmp eq i64 %485, -1
  br i1 %501, label %629, label %502

502:                                              ; preds = %497, %429
  %503 = phi double [ %430, %429 ], [ %441, %497 ]
  %504 = phi double [ 0.000000e+00, %429 ], [ %453, %497 ]
  %505 = phi i64 [ %425, %429 ], [ %500, %497 ]
  %506 = phi i64 [ %413, %429 ], [ %488, %497 ]
  %507 = phi i64 [ %424, %429 ], [ %499, %497 ]
  %508 = phi i64 [ %410, %429 ], [ %485, %497 ]
  %509 = insertelement <2 x double> <double 1.000000e+09, double undef>, double %503, i32 1
  br label %510

510:                                              ; preds = %573, %502
  %511 = phi double [ %504, %502 ], [ %527, %573 ]
  %512 = phi i64 [ %505, %502 ], [ %576, %573 ]
  %513 = phi i64 [ %506, %502 ], [ %564, %573 ]
  %514 = phi i64 [ %507, %502 ], [ %575, %573 ]
  %515 = phi i64 [ %508, %502 ], [ %561, %573 ]
  %516 = sub nsw i64 %512, %513
  %517 = sub nsw i64 %514, %515
  %518 = sitofp i64 %517 to double
  %519 = sitofp i64 %516 to double
  %520 = fmul nsz double %519, 8.000000e+00
  %521 = insertelement <2 x double> undef, double %518, i32 0
  %522 = insertelement <2 x double> %521, double %520, i32 1
  %523 = fdiv nsz <2 x double> %522, %509
  %524 = extractelement <2 x double> %523, i32 0
  %525 = extractelement <2 x double> %523, i32 1
  %526 = fsub nsz double %524, %525
  %527 = fadd nsz double %511, %526
  %528 = icmp slt i64 %514, %364
  br i1 %528, label %529, label %578

529:                                              ; preds = %510
  %530 = fadd nsz double %527, 1.000000e+00
  %531 = fcmp nsz ugt double %530, 0.000000e+00
  br i1 %531, label %532, label %586

532:                                              ; preds = %529
  %533 = sitofp i64 %514 to double
  %534 = fcmp nsz ugt double %214, %533
  br i1 %534, label %535, label %629

535:                                              ; preds = %532
  br i1 %224, label %536, label %555

536:                                              ; preds = %535, %549
  %537 = phi i64 [ %550, %549 ], [ 1, %535 ]
  %538 = phi i32 [ %551, %549 ], [ 1, %535 ]
  %539 = add nsw i64 %537, -1
  %540 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %539, i32 1
  %541 = load i64, i64* %540, align 8, !noalias !17
  %542 = mul i64 %541, %210
  %543 = icmp ugt i64 %542, %514
  br i1 %543, label %549, label %544

544:                                              ; preds = %536
  %545 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %537, i32 1
  %546 = load i64, i64* %545, align 8, !noalias !17
  %547 = mul i64 %546, %210
  %548 = icmp ugt i64 %547, %514
  br i1 %548, label %553, label %549

549:                                              ; preds = %544, %536
  %550 = add nuw nsw i64 %537, 1
  %551 = add nuw nsw i32 %538, 1
  %552 = icmp eq i64 %550, %223
  br i1 %552, label %555, label %536

553:                                              ; preds = %544
  %554 = trunc i64 %537 to i32
  br label %555

555:                                              ; preds = %549, %553, %535
  %556 = phi i32 [ 1, %535 ], [ %554, %553 ], [ %551, %549 ]
  %557 = add nsw i32 %556, -1
  %558 = sext i32 %557 to i64
  %559 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %558, i32 1
  %560 = load i64, i64* %559, align 8, !noalias !17
  %561 = mul i64 %560, %210
  %562 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %558, i32 0
  %563 = load i64, i64* %562, align 8, !noalias !17
  %564 = sub nsw i64 %563, %264
  %565 = icmp eq i32 %556, %206
  br i1 %565, label %573, label %566

566:                                              ; preds = %555
  %567 = zext i32 %556 to i64
  %568 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %567, i32 1
  %569 = load i64, i64* %568, align 8, !noalias !17
  %570 = mul i64 %569, %210
  %571 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %567, i32 0
  %572 = load i64, i64* %571, align 8, !noalias !17
  br label %573

573:                                              ; preds = %566, %555
  %574 = phi i64 [ %572, %566 ], [ %97, %555 ]
  %575 = phi i64 [ %570, %566 ], [ %216, %555 ]
  %576 = sub nsw i64 %574, %264
  %577 = icmp eq i64 %561, -1
  br i1 %577, label %629, label %510

578:                                              ; preds = %510
  %579 = sitofp i64 %514 to double
  %580 = fdiv nsz double %579, 1.000000e+09
  %581 = fsub nsz double %580, %363
  %582 = fdiv nsz double %217, %581
  %583 = fmul nsz double %582, %527
  %584 = fadd nsz double %583, 1.000000e+00
  %585 = fcmp nsz ugt double %584, 0.000000e+00
  br i1 %585, label %629, label %586

586:                                              ; preds = %529, %578, %452, %366
  %587 = sitofp i64 %368 to double
  %588 = fcmp nsz ugt double %214, %587
  br i1 %588, label %589, label %629

589:                                              ; preds = %586
  br i1 %224, label %590, label %609

590:                                              ; preds = %589, %603
  %591 = phi i64 [ %604, %603 ], [ 1, %589 ]
  %592 = phi i32 [ %605, %603 ], [ 1, %589 ]
  %593 = add nsw i64 %591, -1
  %594 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %593, i32 1
  %595 = load i64, i64* %594, align 8, !noalias !20
  %596 = mul i64 %595, %210
  %597 = icmp ugt i64 %596, %368
  br i1 %597, label %603, label %598

598:                                              ; preds = %590
  %599 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %591, i32 1
  %600 = load i64, i64* %599, align 8, !noalias !20
  %601 = mul i64 %600, %210
  %602 = icmp ugt i64 %601, %368
  br i1 %602, label %607, label %603

603:                                              ; preds = %598, %590
  %604 = add nuw nsw i64 %591, 1
  %605 = add nuw nsw i32 %592, 1
  %606 = icmp eq i64 %604, %223
  br i1 %606, label %609, label %590

607:                                              ; preds = %598
  %608 = trunc i64 %591 to i32
  br label %609

609:                                              ; preds = %603, %607, %589
  %610 = phi i32 [ 1, %589 ], [ %608, %607 ], [ %605, %603 ]
  %611 = add nsw i32 %610, -1
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %612, i32 1
  %614 = load i64, i64* %613, align 8, !noalias !20
  %615 = mul i64 %614, %210
  %616 = icmp eq i32 %610, %206
  br i1 %616, label %624, label %617

617:                                              ; preds = %609
  %618 = zext i32 %610 to i64
  %619 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %618, i32 1
  %620 = load i64, i64* %619, align 8, !noalias !20
  %621 = mul i64 %620, %210
  %622 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %221, i64 %618, i32 0
  %623 = load i64, i64* %622, align 8, !noalias !20
  br label %624

624:                                              ; preds = %617, %609
  %625 = phi i64 [ %623, %617 ], [ %97, %609 ]
  %626 = phi i64 [ %621, %617 ], [ %216, %609 ]
  %627 = sub nsw i64 %625, %264
  %628 = icmp eq i64 %615, -1
  br i1 %628, label %629, label %366

629:                                              ; preds = %624, %586, %578, %497, %456, %573, %532, %348
  %630 = phi double [ 0.000000e+00, %348 ], [ %503, %532 ], [ %503, %573 ], [ 0.000000e+00, %624 ], [ 0.000000e+00, %586 ], [ %503, %578 ], [ %441, %456 ], [ %441, %497 ]
  %631 = fcmp nsz olt double %228, %630
  %632 = select i1 %631, double %630, double %228
  %633 = add nuw nsw i64 %227, 1
  %634 = icmp eq i64 %633, %225
  br i1 %634, label %635, label %226

635:                                              ; preds = %629
  %636 = fptosi double %632 to i64
  %637 = icmp slt i64 %636, 0
  br i1 %637, label %832, label %638

638:                                              ; preds = %635, %199
  %639 = phi i64 [ %636, %635 ], [ 0, %199 ]
  %640 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %202, i64 0, i32 11
  %641 = tail call i32 @av_dict_set_int(%struct.AVDictionary** %640, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.153, i64 0, i64 0), i64 %639, i32 0) #11
  %642 = load %struct.AVStream**, %struct.AVStream*** %49, align 8
  %643 = load %struct.AVStream*, %struct.AVStream** %642, align 8
  %644 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %643, i64 0, i32 11
  %645 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %8, align 8
  %646 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %645, i64 0, i32 4
  %647 = load i32, i32* %646, align 4
  %648 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %643, i64 0, i32 40
  %649 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %648, align 8
  %650 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %649, i64 0, i32 12
  %651 = load i32, i32* %650, align 8
  %652 = icmp slt i32 %651, 1
  br i1 %652, label %759, label %653

653:                                              ; preds = %638
  %654 = tail call i32 @av_index_search_timestamp(%struct.AVStream* %643, i64 0, i32 0) #11
  %655 = icmp slt i32 %654, 0
  br i1 %655, label %759, label %656

656:                                              ; preds = %653
  %657 = load %struct.AVStream**, %struct.AVStream*** %49, align 8
  %658 = load %struct.AVStream*, %struct.AVStream** %657, align 8
  %659 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %658, i64 0, i32 40
  %660 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %659, align 8
  %661 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %660, i64 0, i32 11
  %662 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %661, align 8
  %663 = sext i32 %654 to i64
  %664 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %662, i64 %663, i32 0
  %665 = load i64, i64* %664, align 8
  %666 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %667 = load %struct.AVIOContext*, %struct.AVIOContext** %666, align 8
  %668 = tail call i64 @avio_seek(%struct.AVIOContext* %667, i64 0, i32 1) #11
  %669 = bitcast i64* %2 to i8*
  %670 = bitcast i64* %3 to i8*
  %671 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %645, i64 0, i32 1
  %672 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %645, i64 0, i32 3
  %673 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %645, i64 0, i32 6
  %674 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %645, i64 0, i32 5
  %675 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %645, i64 0, i32 19
  %676 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %645, i64 0, i32 20
  br label %677

677:                                              ; preds = %725, %656
  %678 = phi i64 [ %665, %656 ], [ %730, %725 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %669) #11
  store i64 -6148914691236517206, i64* %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %670) #11
  store i64 -6148914691236517206, i64* %3, align 8
  %679 = load %struct.AVIOContext*, %struct.AVIOContext** %666, align 8
  %680 = tail call i64 @avio_seek(%struct.AVIOContext* %679, i64 %678, i32 0) #11
  %681 = load %struct.AVFormatContext*, %struct.AVFormatContext** %671, align 8
  %682 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %681, i64 0, i32 4
  %683 = load %struct.AVIOContext*, %struct.AVIOContext** %682, align 8
  %684 = call fastcc i32 @ebml_read_num(%struct.MatroskaDemuxContext* %645, %struct.AVIOContext* %683, i32 4, i64* nonnull %2, i32 1) #11
  %685 = icmp slt i32 %684, 0
  %686 = load i64, i64* %2, align 8
  %687 = icmp ne i64 %686, 256095861
  %688 = or i1 %685, %687
  br i1 %688, label %724, label %689

689:                                              ; preds = %677
  %690 = load %struct.AVFormatContext*, %struct.AVFormatContext** %671, align 8
  %691 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %690, i64 0, i32 4
  %692 = load %struct.AVIOContext*, %struct.AVIOContext** %691, align 8
  %693 = call fastcc i32 @ebml_read_num(%struct.MatroskaDemuxContext* %645, %struct.AVIOContext* %692, i32 8, i64* nonnull %3, i32 1) #11
  %694 = icmp sgt i32 %693, 0
  br i1 %694, label %695, label %703

695:                                              ; preds = %689
  %696 = load i64, i64* %3, align 8
  %697 = add i64 %696, 1
  %698 = mul nsw i32 %693, 7
  %699 = zext i32 %698 to i64
  %700 = shl i64 1, %699
  %701 = icmp eq i64 %697, %700
  br i1 %701, label %702, label %705

702:                                              ; preds = %695
  store i64 -1, i64* %3, align 8
  br label %705

703:                                              ; preds = %689
  %704 = icmp slt i32 %693, 0
  br i1 %704, label %724, label %705

705:                                              ; preds = %703, %702, %695
  %706 = icmp sgt i64 %678, -1
  br i1 %706, label %707, label %713

707:                                              ; preds = %705
  %708 = load %struct.AVFormatContext*, %struct.AVFormatContext** %671, align 8
  %709 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %708, i64 0, i32 4
  %710 = load %struct.AVIOContext*, %struct.AVIOContext** %709, align 8
  %711 = tail call i64 @avio_seek(%struct.AVIOContext* %710, i64 %678, i32 0) #11
  %712 = icmp sgt i64 %711, -1
  br i1 %712, label %713, label %718

713:                                              ; preds = %707, %705
  store i32 0, i32* %646, align 4
  store i32 1, i32* %672, align 8
  store i32 0, i32* %673, align 8
  %714 = load %struct.AVFormatContext*, %struct.AVFormatContext** %671, align 8
  %715 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %714, i64 0, i32 4
  %716 = load %struct.AVIOContext*, %struct.AVIOContext** %715, align 8
  %717 = tail call i64 @avio_seek(%struct.AVIOContext* %716, i64 0, i32 1) #11
  store i64 %717, i64* %674, align 8
  br label %718

718:                                              ; preds = %713, %707
  tail call void @avpriv_packet_list_free(%struct.AVPacketList** %675, %struct.AVPacketList** %676) #11
  %719 = tail call fastcc i32 @matroska_parse_cluster(%struct.MatroskaDemuxContext* %645) #11
  %720 = icmp slt i32 %719, 0
  br i1 %720, label %724, label %721

721:                                              ; preds = %718
  %722 = load %struct.AVPacketList*, %struct.AVPacketList** %675, align 8
  %723 = icmp eq %struct.AVPacketList* %722, null
  br i1 %723, label %724, label %725

724:                                              ; preds = %721, %718, %703, %677
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %670) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %669) #11
  br label %735

725:                                              ; preds = %721
  %726 = add nuw nsw i32 %693, 4
  %727 = sext i32 %726 to i64
  %728 = load i64, i64* %3, align 8
  %729 = add i64 %678, %727
  %730 = add i64 %729, %728
  %731 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %722, i64 0, i32 0, i32 6
  %732 = load i32, i32* %731, align 8
  %733 = and i32 %732, 1
  %734 = icmp eq i32 %733, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %670) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %669) #11
  br i1 %734, label %735, label %677

735:                                              ; preds = %725, %724
  %736 = phi i32 [ 1, %724 ], [ 0, %725 ]
  %737 = icmp sgt i64 %668, -1
  br i1 %737, label %738, label %744

738:                                              ; preds = %735
  %739 = load %struct.AVFormatContext*, %struct.AVFormatContext** %671, align 8
  %740 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %739, i64 0, i32 4
  %741 = load %struct.AVIOContext*, %struct.AVIOContext** %740, align 8
  %742 = tail call i64 @avio_seek(%struct.AVIOContext* %741, i64 %668, i32 0) #11
  %743 = icmp sgt i64 %742, -1
  br i1 %743, label %744, label %759

744:                                              ; preds = %738, %735
  store i32 %647, i32* %646, align 4
  store i32 1, i32* %672, align 8
  store i32 0, i32* %673, align 8
  %745 = load %struct.AVFormatContext*, %struct.AVFormatContext** %671, align 8
  %746 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %745, i64 0, i32 4
  %747 = load %struct.AVIOContext*, %struct.AVIOContext** %746, align 8
  %748 = tail call i64 @avio_seek(%struct.AVIOContext* %747, i64 0, i32 1) #11
  %749 = icmp eq i32 %647, 0
  br i1 %749, label %757, label %750

750:                                              ; preds = %744
  %751 = or i32 %647, 1
  %752 = tail call i32 @llvm.ctlz.i32(i32 %751, i1 true) #11, !range !3
  %753 = sub nuw nsw i32 38, %752
  %754 = lshr i32 %753, 3
  %755 = zext i32 %754 to i64
  %756 = sub nsw i64 %748, %755
  br label %757

757:                                              ; preds = %750, %744
  %758 = phi i64 [ %756, %750 ], [ %748, %744 ]
  store i64 %758, i64* %674, align 8
  br label %759

759:                                              ; preds = %757, %738, %653, %638
  %760 = phi i32 [ 0, %638 ], [ 0, %653 ], [ %736, %738 ], [ %736, %757 ]
  %761 = sext i32 %760 to i64
  %762 = tail call i32 @av_dict_set_int(%struct.AVDictionary** %644, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.156, i64 0, i64 0), i64 %761, i32 0) #11
  %763 = load %struct.AVStream**, %struct.AVStream*** %49, align 8
  %764 = load %struct.AVStream*, %struct.AVStream** %763, align 8
  %765 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %764, i64 0, i32 40
  %766 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %765, align 8
  %767 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %766, i64 0, i32 12
  %768 = load i32, i32* %767, align 8
  %769 = sext i32 %768 to i64
  %770 = tail call i8* @av_malloc_array(i64 %769, i64 20) #11
  %771 = icmp eq i8* %770, null
  br i1 %771, label %832, label %772

772:                                              ; preds = %759
  store i8 0, i8* %770, align 1
  %773 = load %struct.AVStream**, %struct.AVStream*** %49, align 8
  %774 = load %struct.AVStream*, %struct.AVStream** %773, align 8
  %775 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %774, i64 0, i32 40
  %776 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %775, align 8
  %777 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %776, i64 0, i32 12
  %778 = load i32, i32* %777, align 8
  %779 = icmp sgt i32 %778, 0
  br i1 %779, label %780, label %816

780:                                              ; preds = %772, %811
  %781 = phi i64 [ %813, %811 ], [ 0, %772 ]
  %782 = phi i32 [ %804, %811 ], [ %778, %772 ]
  %783 = phi %struct.AVStreamInternal* [ %802, %811 ], [ %776, %772 ]
  %784 = phi i32 [ %812, %811 ], [ 0, %772 ]
  %785 = sext i32 %784 to i64
  %786 = getelementptr inbounds i8, i8* %770, i64 %785
  %787 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %783, i64 0, i32 11
  %788 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %787, align 8
  %789 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %788, i64 %781, i32 1
  %790 = load i64, i64* %789, align 8
  %791 = add nsw i32 %782, -1
  %792 = zext i32 %791 to i64
  %793 = icmp eq i64 %781, %792
  %794 = select i1 %793, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0)
  %795 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %786, i64 20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.158, i64 0, i64 0), i64 %790, i8* %794) #11
  %796 = icmp slt i32 %795, 1
  br i1 %796, label %809, label %797

797:                                              ; preds = %780
  %798 = icmp eq i32 %795, 20
  %799 = load %struct.AVStream**, %struct.AVStream*** %49, align 8
  %800 = load %struct.AVStream*, %struct.AVStream** %799, align 8
  %801 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %800, i64 0, i32 40
  %802 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %801, align 8
  %803 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %802, i64 0, i32 12
  %804 = load i32, i32* %803, align 8
  br i1 %798, label %805, label %811

805:                                              ; preds = %797
  %806 = add nsw i32 %804, -1
  %807 = zext i32 %806 to i64
  %808 = icmp eq i64 %781, %807
  br i1 %808, label %809, label %811

809:                                              ; preds = %805, %780
  %810 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %810, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.160, i64 0, i64 0)) #11
  tail call void @av_free(i8* nonnull %770) #11
  br label %832

811:                                              ; preds = %805, %797
  %812 = add nsw i32 %795, %784
  %813 = add nuw nsw i64 %781, 1
  %814 = sext i32 %804 to i64
  %815 = icmp slt i64 %813, %814
  br i1 %815, label %780, label %816

816:                                              ; preds = %811, %772
  %817 = phi %struct.AVStream* [ %774, %772 ], [ %800, %811 ]
  %818 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %817, i64 0, i32 11
  %819 = tail call i32 @av_dict_set(%struct.AVDictionary** %818, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.161, i64 0, i64 0), i8* nonnull %770, i32 8) #11
  br label %822

820:                                              ; preds = %114, %130
  %821 = phi i32 [ %120, %130 ], [ %115, %114 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #11
  br label %832

822:                                              ; preds = %816, %44
  %823 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %9, i64 0, i32 29
  %824 = load i32, i32* %823, align 4
  %825 = icmp sgt i32 %824, 0
  br i1 %825, label %826, label %866

826:                                              ; preds = %822
  %827 = load %struct.AVStream**, %struct.AVStream*** %49, align 8
  %828 = load %struct.AVStream*, %struct.AVStream** %827, align 8
  %829 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %828, i64 0, i32 11
  %830 = sext i32 %824 to i64
  %831 = tail call i32 @av_dict_set_int(%struct.AVDictionary** %829, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.153, i64 0, i64 0), i64 %830, i32 0) #11
  br label %866

832:                                              ; preds = %83, %348, %422, %375, %820, %809, %140, %635, %759, %68, %13, %17
  %833 = phi i8* [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.146, i64 0, i64 0), %17 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.146, i64 0, i64 0), %13 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i64 0, i64 0), %68 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i64 0, i64 0), %759 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i64 0, i64 0), %635 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i64 0, i64 0), %140 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i64 0, i64 0), %809 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i64 0, i64 0), %820 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i64 0, i64 0), %375 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i64 0, i64 0), %422 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i64 0, i64 0), %348 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i64 0, i64 0), %83 ]
  %834 = phi i32 [ -1094995529, %17 ], [ -1094995529, %13 ], [ -1, %68 ], [ -1, %759 ], [ -1, %635 ], [ -1, %140 ], [ -1094995529, %809 ], [ %821, %820 ], [ -1, %375 ], [ -1, %422 ], [ -1, %348 ], [ -1, %83 ]
  %835 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %835, i32 16, i8* %833) #11
  br label %836

836:                                              ; preds = %832, %25
  %837 = phi i32 [ -12, %25 ], [ %834, %832 ]
  %838 = load i8*, i8** %7, align 8
  %839 = getelementptr inbounds i8, i8* %838, i64 360
  %840 = getelementptr inbounds i8, i8* %838, i64 368
  %841 = bitcast i8* %840 to %struct.MatroskaTrack**
  %842 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %841, align 8
  %843 = getelementptr inbounds i8, i8* %838, i64 464
  %844 = bitcast i8* %843 to %struct.AVPacketList**
  %845 = getelementptr inbounds i8, i8* %838, i64 472
  %846 = bitcast i8* %845 to %struct.AVPacketList**
  tail call void @avpriv_packet_list_free(%struct.AVPacketList** %844, %struct.AVPacketList** %846) #11
  %847 = bitcast i8* %839 to i32*
  %848 = load i32, i32* %847, align 8
  %849 = icmp sgt i32 %848, 0
  br i1 %849, label %850, label %865

850:                                              ; preds = %836, %860
  %851 = phi i32 [ %861, %860 ], [ %848, %836 ]
  %852 = phi i64 [ %862, %860 ], [ 0, %836 ]
  %853 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %842, i64 %852, i32 2
  %854 = load i64, i64* %853, align 8
  %855 = icmp eq i64 %854, 2
  br i1 %855, label %856, label %860

856:                                              ; preds = %850
  %857 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %842, i64 %852, i32 18, i32 11
  %858 = bitcast i8** %857 to i8*
  tail call void @av_freep(i8* %858) #11
  %859 = load i32, i32* %847, align 8
  br label %860

860:                                              ; preds = %856, %850
  %861 = phi i32 [ %851, %850 ], [ %859, %856 ]
  %862 = add nuw nsw i64 %852, 1
  %863 = sext i32 %861 to i64
  %864 = icmp slt i64 %862, %863
  br i1 %864, label %850, label %865

865:                                              ; preds = %860, %836
  tail call fastcc void @ebml_free(%struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i64 0, i32 0), i8* %838) #11
  br label %866

866:                                              ; preds = %822, %826, %865, %11
  %867 = phi i32 [ -1, %11 ], [ %837, %865 ], [ 0, %826 ], [ 0, %822 ]
  ret i32 %867
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @webm_dash_manifest_read_packet(%struct.AVFormatContext* nocapture readnone, %struct.AVPacket* nocapture readnone) #2 {
  ret i32 -541478725
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ebml_parse(%struct.MatroskaDemuxContext*, %struct.EbmlSyntax* nocapture readonly, i8*) unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %6, align 8
  %8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i64 0, i32 4
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %8, align 8
  %10 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %11 = tail call i64 @avio_seek(%struct.AVIOContext* %9, i64 0, i32 1) #11
  %12 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %3
  %16 = add nsw i32 %13, -1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 2, i64 %17
  br label %19

19:                                               ; preds = %3, %15
  %20 = phi %struct.MatroskaLevel* [ %18, %15 ], [ null, %3 ]
  %21 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %63

24:                                               ; preds = %19
  %25 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  store i64 -6148914691236517206, i64* %5, align 8
  %26 = call fastcc i32 @ebml_read_num(%struct.MatroskaDemuxContext* %0, %struct.AVIOContext* %9, i32 4, i64* nonnull %5, i32 0)
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %55

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %9, i64 0, i32 10
  %30 = load i32, i32* %29, align 8
  %31 = icmp ne i32 %30, 0
  %32 = icmp eq i32 %26, -541478725
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %53

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 28
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %53

38:                                               ; preds = %34
  %39 = icmp eq %struct.MatroskaLevel* %20, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %38
  %41 = tail call i64 @avio_seek(%struct.AVIOContext* %9, i64 0, i32 1) #11
  %42 = icmp eq i64 %11, %41
  br i1 %42, label %43, label %53

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %20, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, -1
  br i1 %46, label %47, label %50

47:                                               ; preds = %43
  %48 = load i32, i32* %12, align 8
  %49 = add nsw i32 %48, -1
  store i32 %49, i32* %12, align 8
  br label %53

50:                                               ; preds = %43
  %51 = bitcast %struct.AVFormatContext** %6 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %52, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i64 %11, i64 %11) #11
  br label %53

53:                                               ; preds = %47, %34, %38, %40, %50, %28
  %54 = phi i32 [ %26, %28 ], [ -541478725, %50 ], [ -541478725, %40 ], [ -541478725, %38 ], [ 1, %34 ], [ 3, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  br label %593

55:                                               ; preds = %24
  %56 = load i64, i64* %5, align 8
  %57 = mul nsw i32 %26, 7
  %58 = shl i32 1, %57
  %59 = trunc i64 %56 to i32
  %60 = or i32 %58, %59
  store i32 %60, i32* %21, align 4
  %61 = sext i32 %26 to i64
  %62 = add nsw i64 %11, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  br label %70

63:                                               ; preds = %19
  %64 = or i32 %22, 1
  %65 = tail call i32 @llvm.ctlz.i32(i32 %64, i1 true), !range !3
  %66 = sub nuw nsw i32 38, %65
  %67 = lshr i32 %66, 3
  %68 = zext i32 %67 to i64
  %69 = sub nsw i64 %11, %68
  br label %70

70:                                               ; preds = %55, %63
  %71 = phi i32 [ %60, %55 ], [ %22, %63 ]
  %72 = phi i64 [ %11, %55 ], [ %69, %63 ]
  %73 = phi i64 [ %62, %55 ], [ %11, %63 ]
  br label %74

74:                                               ; preds = %74, %70
  %75 = phi i64 [ %82, %74 ], [ 0, %70 ]
  %76 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %1, i64 %75
  %77 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %76, i64 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  %80 = icmp eq i32 %78, %71
  %81 = or i1 %79, %80
  %82 = add nuw i64 %75, 1
  br i1 %81, label %83, label %74

83:                                               ; preds = %74
  br i1 %79, label %84, label %114

84:                                               ; preds = %83
  switch i32 %71, label %85 [
    i32 236, label %114
    i32 191, label %114
  ]

85:                                               ; preds = %84
  %86 = icmp eq %struct.MatroskaLevel* %20, null
  br i1 %86, label %110, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %20, i64 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, -1
  br i1 %90, label %91, label %110

91:                                               ; preds = %87, %106
  %92 = phi %struct.EbmlSyntax* [ %99, %106 ], [ %76, %87 ]
  %93 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %92, i64 0, i32 5
  %94 = bitcast %union.anon.2* %93 to %struct.EbmlSyntax**
  %95 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %94, align 8
  %96 = icmp eq %struct.EbmlSyntax* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %91, %97
  %98 = phi i64 [ %105, %97 ], [ 0, %91 ]
  %99 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %95, i64 %98
  %100 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %99, i64 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %101, 0
  %103 = icmp eq i32 %101, %71
  %104 = or i1 %102, %103
  %105 = add nuw i64 %98, 1
  br i1 %104, label %106, label %97

106:                                              ; preds = %97
  br i1 %102, label %91, label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %12, align 8
  %109 = add nsw i32 %108, -1
  store i32 %109, i32* %12, align 8
  br label %593

110:                                              ; preds = %91, %85, %87
  %111 = phi %struct.EbmlSyntax* [ %76, %87 ], [ %76, %85 ], [ %92, %91 ]
  %112 = bitcast %struct.AVFormatContext** %6 to i8**
  %113 = load i8*, i8** %112, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %113, i32 48, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i32 %71, i64 %72) #11
  br label %114

114:                                              ; preds = %84, %84, %83, %110
  %115 = phi %struct.EbmlSyntax* [ %111, %110 ], [ %76, %84 ], [ %76, %83 ], [ %76, %84 ]
  %116 = phi i32 [ 0, %110 ], [ 1, %84 ], [ 1, %83 ], [ 1, %84 ]
  %117 = icmp eq i8* %2, null
  br i1 %117, label %150, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %115, i64 0, i32 4
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds i8, i8* %2, i64 %120
  %122 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %115, i64 0, i32 3
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %150, label %125

125:                                              ; preds = %118
  %126 = bitcast i8* %121 to i32*
  %127 = load i32, i32* %126, align 8
  %128 = add i32 %127, 1
  %129 = zext i32 %128 to i64
  %130 = udiv i64 4294967295, %123
  %131 = icmp ugt i64 %130, %129
  br i1 %131, label %132, label %593

132:                                              ; preds = %125
  %133 = getelementptr inbounds i8, i8* %121, i64 8
  %134 = bitcast i8* %133 to i8**
  %135 = load i8*, i8** %134, align 8
  %136 = getelementptr inbounds i8, i8* %121, i64 4
  %137 = bitcast i8* %136 to i32*
  %138 = sext i32 %128 to i64
  %139 = mul i64 %123, %138
  %140 = tail call i8* @av_fast_realloc(i8* %135, i32* %137, i64 %139) #11
  %141 = icmp eq i8* %140, null
  br i1 %141, label %593, label %142

142:                                              ; preds = %132
  store i8* %140, i8** %134, align 8
  %143 = load i32, i32* %126, align 8
  %144 = sext i32 %143 to i64
  %145 = load i64, i64* %122, align 8
  %146 = mul i64 %145, %144
  %147 = getelementptr inbounds i8, i8* %140, i64 %146
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %147, i8 0, i64 %145, i1 false)
  %148 = load i32, i32* %126, align 8
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %126, align 8
  br label %150

150:                                              ; preds = %142, %118, %114
  %151 = phi i8* [ %147, %142 ], [ %121, %118 ], [ null, %114 ]
  %152 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %115, i64 0, i32 1
  %153 = load i8, i8* %152, align 4
  %154 = icmp eq i8 %153, 9
  br i1 %154, label %593, label %155

155:                                              ; preds = %150
  store i32 0, i32* %21, align 4
  %156 = call fastcc i32 @ebml_read_num(%struct.MatroskaDemuxContext* %0, %struct.AVIOContext* %9, i32 8, i64* nonnull %4, i32 1) #11
  %157 = icmp sgt i32 %156, 0
  br i1 %157, label %158, label %166

158:                                              ; preds = %155
  %159 = load i64, i64* %4, align 8
  %160 = add i64 %159, 1
  %161 = mul nsw i32 %156, 7
  %162 = zext i32 %161 to i64
  %163 = shl i64 1, %162
  %164 = icmp eq i64 %160, %163
  br i1 %164, label %165, label %168

165:                                              ; preds = %158
  store i64 -1, i64* %4, align 8
  br label %168

166:                                              ; preds = %155
  %167 = icmp slt i32 %156, 0
  br i1 %167, label %593, label %168

168:                                              ; preds = %165, %158, %166
  %169 = sext i32 %156 to i64
  %170 = add nsw i64 %73, %169
  %171 = load i32, i32* %12, align 8
  %172 = icmp sgt i32 %171, 0
  br i1 %172, label %173, label %204

173:                                              ; preds = %168
  %174 = load i64, i64* %4, align 8
  %175 = icmp eq i64 %174, -1
  %176 = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %20, i64 0, i32 1
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %177, -1
  br i1 %175, label %191, label %179

179:                                              ; preds = %173
  br i1 %178, label %204, label %180

180:                                              ; preds = %179
  %181 = add i64 %174, %170
  %182 = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %20, i64 0, i32 0
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, %177
  %185 = icmp ult i64 %181, %184
  br i1 %185, label %204, label %186

186:                                              ; preds = %180
  %187 = icmp eq i64 %181, %184
  br i1 %187, label %204, label %188

188:                                              ; preds = %186
  %189 = bitcast %struct.AVFormatContext** %6 to i8**
  %190 = load i8*, i8** %189, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %190, i32 16, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.19, i64 0, i64 0), i64 %72, i64 %181, i64 %184) #11
  br label %593

191:                                              ; preds = %173
  br i1 %178, label %195, label %192

192:                                              ; preds = %191
  %193 = bitcast %struct.AVFormatContext** %6 to i8**
  %194 = load i8*, i8** %193, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %194, i32 16, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.20, i64 0, i64 0), i64 %72) #11
  br label %593

195:                                              ; preds = %191
  %196 = icmp eq i32 %71, 524531317
  br i1 %196, label %204, label %197

197:                                              ; preds = %195
  %198 = load i8, i8* %152, align 4
  %199 = add i8 %198, -7
  %200 = icmp ult i8 %199, 2
  br i1 %200, label %201, label %208

201:                                              ; preds = %197
  %202 = bitcast %struct.AVFormatContext** %6 to i8**
  %203 = load i8*, i8** %202, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %203, i32 24, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.21, i64 0, i64 0), i32 %71, i64 %72) #11
  br label %204

204:                                              ; preds = %180, %186, %201, %195, %168, %179
  %205 = phi i32 [ %116, %179 ], [ %116, %168 ], [ %116, %195 ], [ -1, %201 ], [ %116, %186 ], [ %116, %180 ]
  %206 = phi i32 [ 0, %179 ], [ 0, %168 ], [ 0, %195 ], [ 0, %201 ], [ 3, %186 ], [ 0, %180 ]
  %207 = load i8, i8* %152, align 4
  br label %208

208:                                              ; preds = %204, %197
  %209 = phi i8 [ %207, %204 ], [ %198, %197 ]
  %210 = phi i32 [ %205, %204 ], [ %116, %197 ]
  %211 = phi i32 [ %206, %204 ], [ 0, %197 ]
  %212 = zext i8 %209 to i64
  %213 = getelementptr inbounds [10 x i64], [10 x i64]* @ebml_parse.max_lengths, i64 0, i64 %212
  %214 = load i64, i64* %213, align 8
  %215 = icmp ult i8 %209, 7
  br i1 %215, label %216, label %230

216:                                              ; preds = %208
  %217 = load i64, i64* %4, align 8
  %218 = icmp ugt i64 %217, %214
  br i1 %218, label %219, label %230

219:                                              ; preds = %216
  %220 = icmp eq i64 %217, -1
  br i1 %220, label %224, label %221

221:                                              ; preds = %219
  %222 = bitcast %struct.AVFormatContext** %6 to i8**
  %223 = load i8*, i8** %222, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %223, i32 16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.22, i64 0, i64 0), i64 %217, i64 %214, i32 %71, i64 %72) #11
  br label %593

224:                                              ; preds = %219
  %225 = icmp eq i8 %209, 0
  %226 = bitcast %struct.AVFormatContext** %6 to i8**
  %227 = load i8*, i8** %226, align 8
  br i1 %225, label %229, label %228

228:                                              ; preds = %224
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %227, i32 16, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.23, i64 0, i64 0), i32 %71, i64 %72) #11
  br label %593

229:                                              ; preds = %224
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %227, i32 16, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.24, i64 0, i64 0), i32 %71, i64 %72) #11
  br label %593

230:                                              ; preds = %216, %208
  %231 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %9, i64 0, i32 19
  %232 = load i32, i32* %231, align 8
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %261

235:                                              ; preds = %230
  %236 = icmp eq i32 %210, 0
  br i1 %236, label %239, label %237

237:                                              ; preds = %235
  %238 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 6
  store i32 0, i32* %238, align 8
  br label %261

239:                                              ; preds = %235
  %240 = load i64, i64* %4, align 8
  %241 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 6
  %242 = load i32, i32* %241, align 8
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %241, align 8
  %244 = mul nsw i32 %242, 51200
  %245 = sext i32 %244 to i64
  %246 = add i64 %240, %245
  %247 = icmp sgt i32 %242, 2
  br i1 %247, label %248, label %253

248:                                              ; preds = %239
  %249 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 5
  %250 = load i64, i64* %249, align 8
  %251 = add i64 %246, %170
  %252 = sub i64 %251, %250
  br label %253

253:                                              ; preds = %248, %239
  %254 = phi i64 [ %252, %248 ], [ %246, %239 ]
  %255 = icmp sgt i64 %254, 1048576
  br i1 %255, label %256, label %265

256:                                              ; preds = %253
  %257 = bitcast %struct.AVFormatContext** %6 to i8**
  %258 = load i8*, i8** %257, align 8
  %259 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 5
  %260 = load i64, i64* %259, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %258, i32 16, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @.str.25, i64 0, i64 0), i32 %71, i64 %72, i64 %240, i64 %260, i32 %243) #11
  br label %593

261:                                              ; preds = %230, %237
  %262 = icmp sgt i32 %210, 0
  br i1 %262, label %263, label %265

263:                                              ; preds = %261
  %264 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 5
  store i64 %72, i64* %264, align 8
  br label %265

265:                                              ; preds = %253, %263, %261
  %266 = icmp eq i8* %151, null
  %267 = load i64, i64* %4, align 8
  %268 = icmp ne i64 %267, -1
  %269 = and i1 %266, %268
  br i1 %269, label %518, label %270

270:                                              ; preds = %265
  %271 = load i8, i8* %152, align 4
  switch i8 %271, label %518 [
    i8 1, label %272
    i8 2, label %290
    i8 3, label %312
    i8 4, label %328
    i8 5, label %328
    i8 6, label %357
    i8 8, label %386
    i8 7, label %386
    i8 9, label %593
  ]

272:                                              ; preds = %270
  %273 = trunc i64 %267 to i32
  %274 = bitcast i8* %151 to i64*
  %275 = icmp eq i32 %273, 0
  br i1 %275, label %278, label %276

276:                                              ; preds = %272
  store i64 0, i64* %274, align 8
  %277 = icmp sgt i32 %273, 0
  br i1 %277, label %281, label %535

278:                                              ; preds = %272
  %279 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %115, i64 0, i32 5, i32 0
  %280 = load i64, i64* %279, align 8
  store i64 %280, i64* %274, align 8
  br label %554

281:                                              ; preds = %276, %281
  %282 = phi i32 [ %284, %281 ], [ 0, %276 ]
  %283 = phi i64 [ %288, %281 ], [ 0, %276 ]
  %284 = add nuw nsw i32 %282, 1
  %285 = shl i64 %283, 8
  %286 = tail call i32 @avio_r8(%struct.AVIOContext* %9) #11
  %287 = sext i32 %286 to i64
  %288 = or i64 %285, %287
  store i64 %288, i64* %274, align 8
  %289 = icmp eq i32 %284, %273
  br i1 %289, label %535, label %281

290:                                              ; preds = %270
  %291 = trunc i64 %267 to i32
  %292 = bitcast i8* %151 to i64*
  %293 = icmp eq i32 %291, 0
  br i1 %293, label %294, label %297

294:                                              ; preds = %290
  %295 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %115, i64 0, i32 5, i32 0
  %296 = load i64, i64* %295, align 8
  store i64 %296, i64* %292, align 8
  br label %554

297:                                              ; preds = %290
  %298 = tail call i32 @avio_r8(%struct.AVIOContext* %9) #11
  %299 = shl i32 %298, 24
  %300 = ashr exact i32 %299, 24
  %301 = sext i32 %300 to i64
  store i64 %301, i64* %292, align 8
  %302 = icmp sgt i32 %291, 1
  br i1 %302, label %303, label %535

303:                                              ; preds = %297, %303
  %304 = phi i32 [ %306, %303 ], [ 1, %297 ]
  %305 = phi i64 [ %310, %303 ], [ %301, %297 ]
  %306 = add nuw nsw i32 %304, 1
  %307 = shl i64 %305, 8
  %308 = tail call i32 @avio_r8(%struct.AVIOContext* %9) #11
  %309 = sext i32 %308 to i64
  %310 = or i64 %307, %309
  store i64 %310, i64* %292, align 8
  %311 = icmp eq i32 %306, %291
  br i1 %311, label %535, label %303

312:                                              ; preds = %270
  %313 = trunc i64 %267 to i32
  %314 = bitcast i8* %151 to double*
  switch i32 %313, label %545 [
    i32 0, label %315
    i32 4, label %319
    i32 8, label %323
  ]

315:                                              ; preds = %312
  %316 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %115, i64 0, i32 5, i32 0
  %317 = load i64, i64* %316, align 8
  %318 = bitcast i8* %151 to i64*
  store i64 %317, i64* %318, align 8
  br label %554

319:                                              ; preds = %312
  %320 = tail call i32 @avio_rb32(%struct.AVIOContext* %9) #11
  %321 = bitcast i32 %320 to float
  %322 = fpext float %321 to double
  br label %326

323:                                              ; preds = %312
  %324 = tail call i64 @avio_rb64(%struct.AVIOContext* %9) #11
  %325 = bitcast i64 %324 to double
  br label %326

326:                                              ; preds = %323, %319
  %327 = phi double [ %325, %323 ], [ %322, %319 ]
  store double %327, double* %314, align 8
  br label %535

328:                                              ; preds = %270, %270
  %329 = trunc i64 %267 to i32
  %330 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %115, i64 0, i32 5
  %331 = bitcast %union.anon.2* %330 to i8**
  %332 = load i8*, i8** %331, align 8
  %333 = bitcast i8* %151 to i8**
  %334 = icmp eq i32 %329, 0
  %335 = icmp ne i8* %332, null
  %336 = and i1 %334, %335
  br i1 %336, label %337, label %340

337:                                              ; preds = %328
  %338 = tail call noalias i8* @av_strdup(i8* nonnull %332) #11
  %339 = icmp eq i8* %338, null
  br i1 %339, label %593, label %354

340:                                              ; preds = %328
  %341 = shl i64 %267, 32
  %342 = add i64 %341, 4294967296
  %343 = ashr exact i64 %342, 32
  %344 = tail call noalias i8* @av_malloc(i64 %343) #11
  %345 = icmp eq i8* %344, null
  br i1 %345, label %593, label %346

346:                                              ; preds = %340
  %347 = tail call i32 @avio_read(%struct.AVIOContext* %9, i8* nonnull %344, i32 %329) #11
  %348 = icmp eq i32 %347, %329
  br i1 %348, label %351, label %349

349:                                              ; preds = %346
  tail call void @av_free(i8* nonnull %344) #11
  %350 = icmp slt i32 %347, 0
  br i1 %350, label %533, label %535

351:                                              ; preds = %346
  %352 = ashr exact i64 %341, 32
  %353 = getelementptr inbounds i8, i8* %344, i64 %352
  store i8 0, i8* %353, align 1
  br label %354

354:                                              ; preds = %351, %337
  %355 = phi i8* [ %338, %337 ], [ %344, %351 ]
  %356 = load i8*, i8** %333, align 8
  tail call void @av_free(i8* %356) #11
  store i8* %355, i8** %333, align 8
  br label %554

357:                                              ; preds = %270
  %358 = trunc i64 %267 to i32
  %359 = getelementptr inbounds i8, i8* %151, i64 8
  %360 = bitcast i8* %359 to %struct.AVBufferRef**
  %361 = add nsw i32 %358, 64
  %362 = tail call i32 @av_buffer_realloc(%struct.AVBufferRef** %360, i32 %361) #11
  %363 = icmp slt i32 %362, 0
  br i1 %363, label %533, label %364

364:                                              ; preds = %357
  %365 = load %struct.AVBufferRef*, %struct.AVBufferRef** %360, align 8
  %366 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %365, i64 0, i32 1
  %367 = load i8*, i8** %366, align 8
  %368 = shl i64 %267, 32
  %369 = ashr exact i64 %368, 32
  %370 = getelementptr inbounds i8, i8* %367, i64 %369
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %370, i8 0, i64 64, i1 false) #11
  %371 = load %struct.AVBufferRef*, %struct.AVBufferRef** %360, align 8
  %372 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %371, i64 0, i32 1
  %373 = bitcast i8** %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = getelementptr inbounds i8, i8* %151, i64 16
  %376 = bitcast i8* %375 to i64*
  store i64 %374, i64* %376, align 8
  %377 = bitcast i8* %151 to i32*
  store i32 %358, i32* %377, align 8
  %378 = getelementptr inbounds i8, i8* %151, i64 24
  %379 = bitcast i8* %378 to i64*
  store i64 %170, i64* %379, align 8
  %380 = inttoptr i64 %374 to i8*
  %381 = tail call i32 @avio_read(%struct.AVIOContext* %9, i8* %380, i32 %358) #11
  %382 = icmp eq i32 %381, %358
  br i1 %382, label %554, label %383

383:                                              ; preds = %364
  %384 = bitcast i8* %375 to i8**
  tail call void @av_buffer_unref(%struct.AVBufferRef** %360) #11
  store i8* null, i8** %384, align 8
  store i32 0, i32* %377, align 8
  %385 = icmp slt i32 %381, 0
  br i1 %385, label %533, label %535

386:                                              ; preds = %270, %270
  %387 = load i32, i32* %12, align 8
  %388 = icmp sgt i32 %387, 15
  br i1 %388, label %389, label %392

389:                                              ; preds = %386
  %390 = bitcast %struct.AVFormatContext** %6 to i8**
  %391 = load i8*, i8** %390, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %391, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.33, i64 0, i64 0), i32 16) #11
  br label %593

392:                                              ; preds = %386
  %393 = add nsw i32 %387, 1
  store i32 %393, i32* %12, align 8
  %394 = sext i32 %387 to i64
  %395 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 2, i64 %394, i32 0
  store i64 %170, i64* %395, align 8
  %396 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 2, i64 %394, i32 1
  store i64 %267, i64* %396, align 8
  switch i32 %71, label %401 [
    i32 408125543, label %397
    i32 475249515, label %399
  ]

397:                                              ; preds = %392
  %398 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 18
  store i64 %170, i64* %398, align 8
  br label %401

399:                                              ; preds = %392
  %400 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 24
  store i32 0, i32* %400, align 8
  br label %401

401:                                              ; preds = %397, %392, %399
  %402 = load i8, i8* %152, align 4
  %403 = icmp eq i8 %402, 8
  br i1 %403, label %404, label %466

404:                                              ; preds = %401
  %405 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %115, i64 0, i32 0
  %406 = load i32, i32* %405, align 8
  %407 = or i32 %406, 1
  %408 = tail call i32 @llvm.ctlz.i32(i32 %407, i1 true) #11, !range !3
  %409 = xor i32 %408, 31
  %410 = icmp eq i32 %406, 0
  br i1 %410, label %466, label %411

411:                                              ; preds = %404
  %412 = add nuw nsw i32 %409, 7
  %413 = lshr i32 %412, 3
  %414 = and i32 %409, 7
  %415 = sub nuw nsw i32 8, %414
  %416 = icmp ne i32 %413, %415
  %417 = icmp eq i32 %406, 524531317
  %418 = or i1 %417, %416
  br i1 %418, label %466, label %419

419:                                              ; preds = %411
  %420 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 26
  %421 = load i32, i32* %420, align 8
  %422 = icmp sgt i32 %421, 0
  br i1 %422, label %423, label %439

423:                                              ; preds = %419
  %424 = sext i32 %421 to i64
  br label %425

425:                                              ; preds = %436, %423
  %426 = phi i64 [ 0, %423 ], [ %437, %436 ]
  %427 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 25, i64 %426
  %428 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 25, i64 %426, i32 1
  %429 = load i32, i32* %428, align 8
  %430 = icmp eq i32 %429, %406
  br i1 %430, label %431, label %436

431:                                              ; preds = %425
  %432 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %427, i64 0, i32 0
  %433 = load i64, i64* %432, align 8
  %434 = icmp eq i64 %433, %72
  br i1 %434, label %451, label %435

435:                                              ; preds = %431
  switch i32 %406, label %451 [
    i32 307544935, label %436
    i32 290298740, label %436
  ]

436:                                              ; preds = %435, %435, %425
  %437 = add nuw nsw i64 %426, 1
  %438 = icmp eq i64 %437, %424
  br i1 %438, label %439, label %425

439:                                              ; preds = %436, %419
  %440 = icmp ugt i32 %421, 63
  br i1 %440, label %441, label %444

441:                                              ; preds = %439
  %442 = bitcast %struct.AVFormatContext** %6 to i8**
  %443 = load i8*, i8** %442, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %443, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.34, i64 0, i64 0)) #11
  br label %466

444:                                              ; preds = %439
  %445 = sext i32 %421 to i64
  %446 = add nuw nsw i32 %421, 1
  store i32 %446, i32* %420, align 8
  %447 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 25, i64 %445
  %448 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %447, i64 0, i32 0
  store i64 0, i64* %448, align 8
  %449 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 25, i64 %445, i32 1
  store i32 %406, i32* %449, align 8
  %450 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 25, i64 %445, i32 2
  store i32 0, i32* %450, align 4
  br label %451

451:                                              ; preds = %431, %435, %444
  %452 = phi i64 [ 0, %444 ], [ %433, %435 ], [ %433, %431 ]
  %453 = phi %struct.MatroskaLevel1Element* [ %447, %444 ], [ %427, %435 ], [ %427, %431 ]
  %454 = icmp eq %struct.MatroskaLevel1Element* %453, null
  br i1 %454, label %466, label %455

455:                                              ; preds = %451
  %456 = icmp eq i64 %452, 0
  br i1 %456, label %457, label %459

457:                                              ; preds = %455
  %458 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %453, i64 0, i32 0
  store i64 %72, i64* %458, align 8
  br label %464

459:                                              ; preds = %455
  %460 = icmp eq i64 %452, %72
  br i1 %460, label %464, label %461

461:                                              ; preds = %459
  %462 = bitcast %struct.AVFormatContext** %6 to i8**
  %463 = load i8*, i8** %462, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %463, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i64 0, i64 0)) #11
  br label %464

464:                                              ; preds = %459, %461, %457
  %465 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %453, i64 0, i32 2
  store i32 1, i32* %465, align 4
  br label %466

466:                                              ; preds = %404, %411, %441, %451, %464, %401
  %467 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %115, i64 0, i32 5
  %468 = bitcast %union.anon.2* %467 to %struct.EbmlSyntax**
  %469 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %468, align 8
  br i1 %266, label %470, label %471

470:                                              ; preds = %508, %466
  br label %516

471:                                              ; preds = %466
  %472 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %469, i64 0, i32 0
  %473 = load i32, i32* %472, align 8
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %508, label %475

475:                                              ; preds = %471, %503
  %476 = phi i64 [ %504, %503 ], [ 0, %471 ]
  %477 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %469, i64 %476, i32 4
  %478 = load i64, i64* %477, align 8
  %479 = getelementptr inbounds i8, i8* %151, i64 %478
  %480 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %469, i64 %476, i32 1
  %481 = load i8, i8* %480, align 4
  switch i8 %481, label %503 [
    i8 1, label %482
    i8 2, label %486
    i8 3, label %490
    i8 4, label %494
    i8 5, label %494
  ]

482:                                              ; preds = %475
  %483 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %469, i64 %476, i32 5, i32 0
  %484 = load i64, i64* %483, align 8
  %485 = bitcast i8* %479 to i64*
  store i64 %484, i64* %485, align 8
  br label %503

486:                                              ; preds = %475
  %487 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %469, i64 %476, i32 5, i32 0
  %488 = load i64, i64* %487, align 8
  %489 = bitcast i8* %479 to i64*
  store i64 %488, i64* %489, align 8
  br label %503

490:                                              ; preds = %475
  %491 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %469, i64 %476, i32 5, i32 0
  %492 = load i64, i64* %491, align 8
  %493 = bitcast i8* %479 to i64*
  store i64 %492, i64* %493, align 8
  br label %503

494:                                              ; preds = %475, %475
  %495 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %469, i64 %476, i32 5
  %496 = bitcast %union.anon.2* %495 to i8**
  %497 = load i8*, i8** %496, align 8
  %498 = icmp eq i8* %497, null
  br i1 %498, label %503, label %499

499:                                              ; preds = %494
  %500 = tail call noalias i8* @av_strdup(i8* nonnull %497) #11
  %501 = bitcast i8* %479 to i8**
  store i8* %500, i8** %501, align 8
  %502 = icmp eq i8* %500, null
  br i1 %502, label %593, label %503

503:                                              ; preds = %475, %482, %486, %490, %494, %499
  %504 = add nuw i64 %476, 1
  %505 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %469, i64 %504, i32 0
  %506 = load i32, i32* %505, align 8
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %508, label %475

508:                                              ; preds = %503, %471
  %509 = load i32, i32* %12, align 8
  %510 = add nsw i32 %509, -1
  %511 = sext i32 %510 to i64
  %512 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 2, i64 %511, i32 1
  %513 = load i64, i64* %512, align 8
  %514 = icmp eq i64 %513, 0
  br i1 %514, label %515, label %470

515:                                              ; preds = %508
  store i32 %510, i32* %12, align 8
  br label %554

516:                                              ; preds = %470, %516
  %517 = tail call fastcc i32 @ebml_parse(%struct.MatroskaDemuxContext* %0, %struct.EbmlSyntax* %469, i8* %151) #11
  switch i32 %517, label %593 [
    i32 0, label %516
    i32 3, label %554
  ]

518:                                              ; preds = %265, %270
  %519 = icmp eq i64 %267, 0
  br i1 %519, label %554, label %520

520:                                              ; preds = %518
  %521 = trunc i64 %267 to i32
  %522 = tail call i32 @ffio_limit(%struct.AVIOContext* %9, i32 %521) #11
  %523 = sext i32 %522 to i64
  %524 = icmp eq i64 %267, %523
  br i1 %524, label %525, label %593

525:                                              ; preds = %520
  %526 = add i64 %267, -1
  %527 = tail call i64 @avio_skip(%struct.AVIOContext* %9, i64 %526) #11
  %528 = icmp sgt i64 %527, -1
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = tail call i32 @avio_r8(%struct.AVIOContext* %9) #11
  br label %535

531:                                              ; preds = %525
  %532 = trunc i64 %527 to i32
  br label %533

533:                                              ; preds = %383, %349, %531, %357
  %534 = phi i32 [ %362, %357 ], [ %532, %531 ], [ %347, %349 ], [ %381, %383 ]
  switch i32 %534, label %543 [
    i32 0, label %554
    i32 2, label %535
  ]

535:                                              ; preds = %303, %281, %529, %383, %349, %326, %297, %276, %533
  %536 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %9, i64 0, i32 10
  %537 = load i32, i32* %536, align 8
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %554, label %539

539:                                              ; preds = %535
  %540 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %9, i64 0, i32 16
  %541 = load i32, i32* %540, align 8
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %551, label %543

543:                                              ; preds = %539, %533
  %544 = phi i32 [ %534, %533 ], [ %541, %539 ]
  switch i32 %544, label %593 [
    i32 -1094995529, label %545
    i32 -5, label %548
    i32 -541478725, label %551
  ]

545:                                              ; preds = %312, %543
  %546 = bitcast %struct.AVFormatContext** %6 to i8**
  %547 = load i8*, i8** %546, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %547, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i64 0, i64 0)) #11
  br label %593

548:                                              ; preds = %543
  %549 = bitcast %struct.AVFormatContext** %6 to i8**
  %550 = load i8*, i8** %549, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %550, i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i64 0, i64 0)) #11
  br label %593

551:                                              ; preds = %539, %543
  %552 = bitcast %struct.AVFormatContext** %6 to i8**
  %553 = load i8*, i8** %552, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %553, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i64 0, i64 0)) #11
  br label %593

554:                                              ; preds = %516, %515, %364, %354, %315, %294, %278, %518, %533, %535
  %555 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %115, i64 0, i32 2
  %556 = load i8, i8* %555, align 1
  %557 = icmp ne i8 %556, 0
  %558 = icmp ne i8* %151, null
  %559 = and i1 %558, %557
  br i1 %559, label %560, label %567

560:                                              ; preds = %554
  %561 = getelementptr inbounds i8, i8* %151, i64 8
  %562 = bitcast i8* %561 to i32*
  %563 = load i32, i32* %562, align 8
  %564 = icmp eq i32 %563, -1
  br i1 %564, label %567, label %565

565:                                              ; preds = %560
  %566 = add nuw i32 %563, 1
  store i32 %566, i32* %562, align 8
  br label %567

567:                                              ; preds = %565, %560, %554
  %568 = icmp eq i32 %211, 3
  br i1 %568, label %569, label %593

569:                                              ; preds = %567
  %570 = load i32, i32* %12, align 8
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %593, label %572

572:                                              ; preds = %569
  %573 = tail call i64 @avio_seek(%struct.AVIOContext* %9, i64 0, i32 1) #11
  %574 = load i32, i32* %12, align 8
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %593, label %576

576:                                              ; preds = %572
  %577 = add nsw i32 %570, -1
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 2, i64 %578
  br label %580

580:                                              ; preds = %576, %589
  %581 = phi %struct.MatroskaLevel* [ %591, %589 ], [ %579, %576 ]
  %582 = phi i32 [ %590, %589 ], [ %574, %576 ]
  %583 = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %581, i64 0, i32 0
  %584 = load i64, i64* %583, align 8
  %585 = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %581, i64 0, i32 1
  %586 = load i64, i64* %585, align 8
  %587 = add i64 %586, %584
  %588 = icmp eq i64 %573, %587
  br i1 %588, label %589, label %593

589:                                              ; preds = %580
  %590 = add nsw i32 %582, -1
  store i32 %590, i32* %12, align 8
  %591 = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %581, i64 -1
  %592 = icmp eq i32 %590, 0
  br i1 %592, label %593, label %580

593:                                              ; preds = %499, %516, %589, %580, %572, %337, %340, %150, %132, %125, %520, %389, %256, %188, %53, %567, %569, %545, %551, %548, %543, %270, %221, %229, %228, %166, %192, %107
  %594 = phi i32 [ 3, %107 ], [ -1094995529, %256 ], [ -1094995529, %188 ], [ -1094995529, %192 ], [ %156, %166 ], [ -1094995529, %228 ], [ -1094995529, %229 ], [ -1094995529, %221 ], [ 1, %270 ], [ -1094995529, %545 ], [ -5, %548 ], [ -5, %551 ], [ %544, %543 ], [ 3, %569 ], [ %211, %567 ], [ %54, %53 ], [ -38, %389 ], [ -5, %520 ], [ -12, %125 ], [ -12, %132 ], [ 1, %150 ], [ -12, %340 ], [ -12, %337 ], [ 3, %572 ], [ 3, %580 ], [ 3, %589 ], [ %517, %516 ], [ -12, %499 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  ret i32 %594
}

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @ebml_free(%struct.EbmlSyntax* nocapture readonly, i8*) unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %52, label %6

6:                                                ; preds = %2, %47
  %7 = phi i64 [ %48, %47 ], [ 0, %2 ]
  %8 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %0, i64 %7, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* %1, i64 %9
  %11 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %0, i64 %7, i32 1
  %12 = load i8, i8* %11, align 4
  switch i8 %12, label %47 [
    i8 4, label %13
    i8 5, label %13
    i8 6, label %14
    i8 8, label %17
    i8 7, label %17
  ]

13:                                               ; preds = %6, %6
  tail call void @av_freep(i8* %10) #11
  br label %47

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %10, i64 8
  %16 = bitcast i8* %15 to %struct.AVBufferRef**
  tail call void @av_buffer_unref(%struct.AVBufferRef** %16) #11
  br label %47

17:                                               ; preds = %6, %6
  %18 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %0, i64 %7, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %43, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds i8, i8* %10, i64 8
  %23 = bitcast i8* %10 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %40

26:                                               ; preds = %21
  %27 = bitcast i8* %22 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %0, i64 %7, i32 5
  %30 = bitcast %union.anon.2* %29 to %struct.EbmlSyntax**
  br label %31

31:                                               ; preds = %26, %31
  %32 = phi i8* [ %28, %26 ], [ %37, %31 ]
  %33 = phi i32 [ 0, %26 ], [ %35, %31 ]
  %34 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %30, align 8
  tail call fastcc void @ebml_free(%struct.EbmlSyntax* %34, i8* %32)
  %35 = add nuw nsw i32 %33, 1
  %36 = load i64, i64* %18, align 8
  %37 = getelementptr inbounds i8, i8* %32, i64 %36
  %38 = load i32, i32* %23, align 8
  %39 = icmp slt i32 %35, %38
  br i1 %39, label %31, label %40

40:                                               ; preds = %31, %21
  tail call void @av_freep(i8* %22) #11
  store i32 0, i32* %23, align 8
  %41 = getelementptr inbounds i8, i8* %10, i64 4
  %42 = bitcast i8* %41 to i32*
  store i32 0, i32* %42, align 4
  br label %47

43:                                               ; preds = %17
  %44 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %0, i64 %7, i32 5
  %45 = bitcast %union.anon.2* %44 to %struct.EbmlSyntax**
  %46 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %45, align 8
  tail call fastcc void @ebml_free(%struct.EbmlSyntax* %46, i8* %10)
  br label %47

47:                                               ; preds = %6, %43, %40, %14, %13
  %48 = add nuw i64 %7, 1
  %49 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %0, i64 %48, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %6

52:                                               ; preds = %47, %2
  ret void
}

declare void @avpriv_report_missing_feature(i8*, i8*, ...) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @matroska_resync(%struct.MatroskaDemuxContext* nocapture, i64) unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %3, align 8
  %5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i64 0, i32 4
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %5, align 8
  %7 = tail call i64 @avio_seek(%struct.AVIOContext* %6, i64 0, i32 1) #11
  %8 = icmp sgt i64 %7, %1
  br i1 %8, label %9, label %35

9:                                                ; preds = %2
  %10 = add nsw i64 %1, 1
  %11 = tail call i64 @avio_seek(%struct.AVIOContext* %6, i64 %10, i32 0) #11
  %12 = icmp slt i64 %11, 0
  br i1 %12, label %13, label %35

13:                                               ; preds = %9
  %14 = bitcast %struct.AVFormatContext** %3 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %15, i32 24, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.39, i64 0, i64 0)) #11
  %16 = tail call i64 @avio_seek(%struct.AVIOContext* %6, i64 0, i32 1) #11
  %17 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %6, i64 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %6, i64 0, i32 3
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %19, %16
  %24 = sub i64 %23, %22
  %25 = icmp sgt i64 %24, %10
  br i1 %25, label %26, label %32

26:                                               ; preds = %13
  %27 = tail call i64 @avio_seek(%struct.AVIOContext* %6, i64 0, i32 1) #11
  %28 = load i64, i64* %18, align 8
  %29 = load i64, i64* %21, align 8
  %30 = add i64 %28, %27
  %31 = sub i64 %30, %29
  br label %32

32:                                               ; preds = %13, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %13 ]
  %34 = tail call i64 @avio_seek(%struct.AVIOContext* %6, i64 %33, i32 0) #11
  br label %35

35:                                               ; preds = %32, %9, %2
  %36 = tail call i32 @avio_rb32(%struct.AVIOContext* %6) #11
  %37 = tail call i32 @avio_feof(%struct.AVIOContext* %6) #11
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %63

39:                                               ; preds = %35, %57
  %40 = phi i32 [ %60, %57 ], [ %36, %35 ]
  switch i32 %40, label %57 [
    i32 524531317, label %41
    i32 475249515, label %41
    i32 423732329, label %41
    i32 374648427, label %41
    i32 357149030, label %41
    i32 307544935, label %41
    i32 290298740, label %41
    i32 272869232, label %41
  ]

41:                                               ; preds = %39, %39, %39, %39, %39, %39, %39, %39
  %42 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 4
  store i32 %40, i32* %42, align 4
  %43 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 3
  store i32 1, i32* %43, align 8
  %44 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 6
  store i32 0, i32* %44, align 8
  %45 = load %struct.AVFormatContext*, %struct.AVFormatContext** %3, align 8
  %46 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %45, i64 0, i32 4
  %47 = load %struct.AVIOContext*, %struct.AVIOContext** %46, align 8
  %48 = tail call i64 @avio_seek(%struct.AVIOContext* %47, i64 0, i32 1) #11
  %49 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 5
  %50 = or i32 %40, 1
  %51 = tail call i32 @llvm.ctlz.i32(i32 %50, i1 true) #11, !range !3
  %52 = sub nuw nsw i32 38, %51
  %53 = lshr i32 %52, 3
  %54 = zext i32 %53 to i64
  %55 = sub nsw i64 %48, %54
  store i64 %55, i64* %49, align 8
  %56 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 2, i64 0, i32 1
  store i64 -1, i64* %56, align 8
  br label %69

57:                                               ; preds = %39
  %58 = shl i32 %40, 8
  %59 = tail call i32 @avio_r8(%struct.AVIOContext* %6) #11
  %60 = or i32 %59, %58
  %61 = tail call i32 @avio_feof(%struct.AVIOContext* %6) #11
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %39, label %63

63:                                               ; preds = %57, %35
  %64 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 21
  store i32 1, i32* %64, align 8
  %65 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %6, i64 0, i32 16
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 0
  %68 = select i1 %67, i32 -541478725, i32 %66
  br label %69

69:                                               ; preds = %63, %41
  %70 = phi i32 [ 0, %41 ], [ %68, %63 ]
  ret i32 %70
}

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) local_unnamed_addr #4

declare %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext*, %struct.AVCodec*) local_unnamed_addr #4

declare i32 @av_strstart(i8*, i8*, i8**) local_unnamed_addr #4

declare void @av_init_packet(%struct.AVPacket*) local_unnamed_addr #4

declare i32 @ff_alloc_extradata(%struct.AVCodecParameters*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext*, i32, i64, i64, i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @matroska_add_index_entries(%struct.MatroskaDemuxContext* nocapture readonly) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %2, align 8
  %4 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i64 0, i32 15
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %88

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 15, i32 2
  %10 = bitcast i8** %9 to %struct.MatroskaIndex**
  %11 = load %struct.MatroskaIndex*, %struct.MatroskaIndex** %10, align 8
  %12 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 15, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, 2
  br i1 %14, label %88, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.MatroskaIndex, %struct.MatroskaIndex* %11, i64 1, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = uitofp i64 %17 to double
  %19 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 7
  %20 = load i64, i64* %19, align 8
  %21 = uitofp i64 %20 to double
  %22 = fdiv nsz double 1.000000e+14, %21
  %23 = fcmp nsz olt double %22, %18
  br i1 %23, label %30, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 12, i32 2
  %26 = bitcast i8** %25 to %struct.MatroskaTrack**
  %27 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 12, i32 0
  %28 = bitcast %struct.AVFormatContext** %2 to i8**
  %29 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 18
  br label %32

30:                                               ; preds = %15
  %31 = bitcast %struct.AVFormatContext* %3 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.117, i64 0, i64 0)) #11
  br label %88

32:                                               ; preds = %24, %83
  %33 = phi i32 [ %13, %24 ], [ %84, %83 ]
  %34 = phi i64 [ 0, %24 ], [ %85, %83 ]
  %35 = getelementptr inbounds %struct.MatroskaIndex, %struct.MatroskaIndex* %11, i64 %34, i32 1, i32 2
  %36 = bitcast i8** %35 to %struct.MatroskaIndexPos**
  %37 = load %struct.MatroskaIndexPos*, %struct.MatroskaIndexPos** %36, align 8
  %38 = getelementptr inbounds %struct.MatroskaIndex, %struct.MatroskaIndex* %11, i64 %34, i32 1, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %83

41:                                               ; preds = %32
  %42 = getelementptr inbounds %struct.MatroskaIndex, %struct.MatroskaIndex* %11, i64 %34, i32 0
  br label %43

43:                                               ; preds = %41, %76
  %44 = phi i64 [ 0, %41 ], [ %77, %76 ]
  %45 = getelementptr inbounds %struct.MatroskaIndexPos, %struct.MatroskaIndexPos* %37, i64 %44, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %26, align 8
  %48 = load i32, i32* %27, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %61

50:                                               ; preds = %43
  %51 = sext i32 %48 to i64
  br label %54

52:                                               ; preds = %54
  %53 = icmp eq i64 %60, %51
  br i1 %53, label %61, label %54

54:                                               ; preds = %52, %50
  %55 = phi i64 [ 0, %50 ], [ %60, %52 ]
  %56 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %47, i64 %55
  %57 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %56, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %46
  %60 = add nuw nsw i64 %55, 1
  br i1 %59, label %63, label %52

61:                                               ; preds = %52, %43
  %62 = load i8*, i8** %28, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %62, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.118, i64 0, i64 0), i64 %46) #11
  br label %76

63:                                               ; preds = %54
  %64 = icmp eq %struct.MatroskaTrack* %56, null
  br i1 %64, label %76, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %47, i64 %55, i32 23
  %67 = load %struct.AVStream*, %struct.AVStream** %66, align 8
  %68 = icmp eq %struct.AVStream* %67, null
  br i1 %68, label %76, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.MatroskaIndexPos, %struct.MatroskaIndexPos* %37, i64 %44, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = load i64, i64* %29, align 8
  %73 = add i64 %72, %71
  %74 = load i64, i64* %42, align 8
  %75 = tail call i32 @av_add_index_entry(%struct.AVStream* nonnull %67, i64 %73, i64 %74, i32 0, i32 0, i32 1) #11
  br label %76

76:                                               ; preds = %61, %65, %63, %69
  %77 = add nuw nsw i64 %44, 1
  %78 = load i32, i32* %38, align 8
  %79 = sext i32 %78 to i64
  %80 = icmp slt i64 %77, %79
  br i1 %80, label %43, label %81

81:                                               ; preds = %76
  %82 = load i32, i32* %12, align 8
  br label %83

83:                                               ; preds = %81, %32
  %84 = phi i32 [ %82, %81 ], [ %33, %32 ]
  %85 = add nuw nsw i64 %34, 1
  %86 = sext i32 %84 to i64
  %87 = icmp slt i64 %85, %86
  br i1 %87, label %32, label %88

88:                                               ; preds = %83, %8, %1, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ebml_read_num(%struct.MatroskaDemuxContext* nocapture readonly, %struct.AVIOContext*, i32, i64* nocapture, i32) unnamed_addr #1 {
  %6 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %7 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %48

10:                                               ; preds = %5
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_log2_tab, i64 0, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = sub nsw i32 8, %14
  %16 = icmp ne i32 %6, 0
  %17 = xor i1 %16, true
  %18 = icmp sgt i32 %15, %2
  %19 = or i1 %18, %17
  br i1 %19, label %20, label %29

20:                                               ; preds = %10
  %21 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %22 = add nsw i64 %21, -1
  %23 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %24 = bitcast %struct.AVFormatContext** %23 to i8**
  %25 = load i8*, i8** %24, align 8
  br i1 %16, label %27, label %26

26:                                               ; preds = %20
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.30, i64 0, i64 0), i64 %22, i64 %22) #11
  br label %65

27:                                               ; preds = %20
  %28 = and i32 %6, 255
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.31, i64 0, i64 0), i32 %15, i32 %28, i64 %22, i64 %22, i32 %2) #11
  br label %65

29:                                               ; preds = %10
  %30 = shl i32 1, %14
  %31 = xor i32 %30, %6
  %32 = sext i32 %31 to i64
  %33 = icmp ult i8 %13, 7
  br i1 %33, label %34, label %46

34:                                               ; preds = %29, %34
  %35 = phi i64 [ %41, %34 ], [ %32, %29 ]
  %36 = phi i32 [ %37, %34 ], [ 1, %29 ]
  %37 = add nuw nsw i32 %36, 1
  %38 = shl i64 %35, 8
  %39 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %40 = sext i32 %39 to i64
  %41 = or i64 %38, %40
  %42 = icmp slt i32 %37, %15
  br i1 %42, label %34, label %43

43:                                               ; preds = %34
  %44 = load i32, i32* %7, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %29, %43
  %47 = phi i64 [ %41, %43 ], [ %32, %29 ]
  store i64 %47, i64* %3, align 8
  br label %65

48:                                               ; preds = %43, %5
  %49 = phi i32 [ %4, %5 ], [ 1, %43 ]
  %50 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %51 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 16
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %56 = bitcast %struct.AVFormatContext** %55 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.32, i64 0, i64 0), i64 %50, i64 %50) #11
  %58 = load i32, i32* %51, align 8
  br label %65

59:                                               ; preds = %48
  %60 = icmp eq i32 %49, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %63 = bitcast %struct.AVFormatContext** %62 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %64, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i64 %50, i64 %50) #11
  br label %65

65:                                               ; preds = %59, %26, %27, %61, %54, %46
  %66 = phi i32 [ %58, %54 ], [ -5, %61 ], [ %15, %46 ], [ -1094995529, %27 ], [ -1094995529, %26 ], [ -541478725, %59 ]
  ret i32 %66
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

declare i8* @av_fast_realloc(i8*, i32*, i64) local_unnamed_addr #4

declare i32 @ffio_limit(%struct.AVIOContext*, i32) local_unnamed_addr #4

declare i64 @avio_skip(%struct.AVIOContext*, i64) local_unnamed_addr #4

declare i32 @avio_r8(%struct.AVIOContext*) local_unnamed_addr #4

declare i32 @avio_rb32(%struct.AVIOContext*) local_unnamed_addr #4

declare i64 @avio_rb64(%struct.AVIOContext*) local_unnamed_addr #4

declare noalias i8* @av_strdup(i8*) local_unnamed_addr #4

declare noalias i8* @av_malloc(i64) local_unnamed_addr #4

declare i32 @avio_read(%struct.AVIOContext*, i8*, i32) local_unnamed_addr #4

declare void @av_free(i8*) local_unnamed_addr #4

declare i32 @av_buffer_realloc(%struct.AVBufferRef**, i32) local_unnamed_addr #4

declare void @av_buffer_unref(%struct.AVBufferRef**) local_unnamed_addr #4

declare void @av_freep(i8*) local_unnamed_addr #4

declare i64 @avio_seek(%struct.AVIOContext*, i64, i32) local_unnamed_addr #4

declare i32 @avio_feof(%struct.AVIOContext*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @matroska_parse_seekhead_entry(%struct.MatroskaDemuxContext*, i64) unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 4
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %7, align 8
  %9 = tail call i64 @avio_seek(%struct.AVIOContext* %8, i64 0, i32 1) #11
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %10, i64 0, i32 4
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %11, align 8
  %13 = tail call i64 @avio_seek(%struct.AVIOContext* %12, i64 %1, i32 0) #11
  %14 = icmp eq i64 %13, %1
  br i1 %14, label %15, label %32

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 16
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = bitcast %struct.AVFormatContext** %5 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 32, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.73, i64 0, i64 0), i32 16) #11
  br label %32

22:                                               ; preds = %15
  %23 = sext i32 %17 to i64
  %24 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 2, i64 %23, i32 0
  %25 = bitcast i64* %24 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %25, align 8
  %26 = load i32, i32* %16, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %16, align 8
  store i32 0, i32* %3, align 4
  %28 = bitcast %struct.MatroskaDemuxContext* %0 to i8*
  %29 = tail call fastcc i32 @ebml_parse(%struct.MatroskaDemuxContext* %0, %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i64 0, i32 0), i8* %28)
  %30 = icmp eq i32 %29, 3
  %31 = select i1 %30, i32 -541478725, i32 %29
  br label %32

32:                                               ; preds = %19, %22, %2
  %33 = phi i32 [ -1094995529, %19 ], [ %31, %22 ], [ 0, %2 ]
  %34 = icmp sgt i64 %9, -1
  br i1 %34, label %35, label %41

35:                                               ; preds = %32
  %36 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %37 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %36, i64 0, i32 4
  %38 = load %struct.AVIOContext*, %struct.AVIOContext** %37, align 8
  %39 = tail call i64 @avio_seek(%struct.AVIOContext* %38, i64 %9, i32 0) #11
  %40 = icmp sgt i64 %39, -1
  br i1 %40, label %41, label %59

41:                                               ; preds = %35, %32
  store i32 %4, i32* %3, align 4
  %42 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 3
  store i32 1, i32* %42, align 8
  %43 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 6
  store i32 0, i32* %43, align 8
  %44 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %45 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %44, i64 0, i32 4
  %46 = load %struct.AVIOContext*, %struct.AVIOContext** %45, align 8
  %47 = tail call i64 @avio_seek(%struct.AVIOContext* %46, i64 0, i32 1) #11
  %48 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 5
  %49 = icmp eq i32 %4, 0
  br i1 %49, label %57, label %50

50:                                               ; preds = %41
  %51 = or i32 %4, 1
  %52 = tail call i32 @llvm.ctlz.i32(i32 %51, i1 true) #11, !range !3
  %53 = sub nuw nsw i32 38, %52
  %54 = lshr i32 %53, 3
  %55 = zext i32 %54 to i64
  %56 = sub nsw i64 %47, %55
  br label %57

57:                                               ; preds = %50, %41
  %58 = phi i64 [ %56, %50 ], [ %47, %41 ]
  store i64 %58, i64* %48, align 8
  br label %59

59:                                               ; preds = %35, %57
  ret i32 %33
}

declare i32 @avpriv_dict_set_timestamp(%struct.AVDictionary**, i8*, i64) local_unnamed_addr #4

declare i8* @av_base64_encode(i8*, i32, i8*, i32) local_unnamed_addr #4

declare %struct.AVBufferRef* @av_buffer_create(i8*, i32, void (i8*, i8*)*, i8*, i32) local_unnamed_addr #4

declare i32 @ff_codec_get_id(%struct.AVCodecTag*, i32) local_unnamed_addr #4

declare i32 @ffio_init_context(%struct.AVIOContext*, i8*, i32, i32, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*) local_unnamed_addr #4

declare i32 @ff_get_wav_header(%struct.AVFormatContext*, %struct.AVIOContext*, %struct.AVCodecParameters*, i32, i32) local_unnamed_addr #4

declare i8* @av_fourcc_make_string(i8*, i32) local_unnamed_addr #4

declare i32 @ff_get_qtpalette(i32, %struct.AVIOContext*, i32*) local_unnamed_addr #4

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i64 @av_rescale(i64, i64, i64) local_unnamed_addr #7

declare void @avpriv_set_pts_info(%struct.AVStream*, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i64 @av_rescale_q(i64, i64, i64) local_unnamed_addr #7

declare i32 @av_reduce(i32*, i32*, i64, i64, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #8

declare i32 @ff_mkv_stereo3d_conv(%struct.AVStream*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare i32 @ff_vorbis_comment(%struct.AVFormatContext*, %struct.AVDictionary**, i8*, i32, i32) local_unnamed_addr #4

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #8

declare void @av_dict_free(%struct.AVDictionary**) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #8

declare i32 @avcodec_chroma_pos_to_enum(i32, i32) local_unnamed_addr #4

declare %struct.AVContentLightMetadata* @av_content_light_metadata_alloc(i64*) local_unnamed_addr #4

declare i32 @av_stream_add_side_data(%struct.AVStream*, i32, i8*, i64) local_unnamed_addr #4

declare i8* @av_stream_new_side_data(%struct.AVStream*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i64 @av_d2q(double, i32) local_unnamed_addr #7

declare %struct.AVSphericalMapping* @av_spherical_alloc(i64*) local_unnamed_addr #4

declare i32 @av_add_index_entry(%struct.AVStream*, i64, i64, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @matroska_convert_tag(%struct.AVFormatContext*, %struct.EbmlList* nocapture readonly, %struct.AVDictionary**, i8*) unnamed_addr #1 {
  %5 = alloca [1024 x i8], align 16
  %6 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %1, i64 0, i32 2
  %7 = bitcast i8** %6 to %struct.MatroskaTag**
  %8 = load %struct.MatroskaTag*, %struct.MatroskaTag** %7, align 8
  %9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 1024, i1 false)
  %10 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %68

13:                                               ; preds = %4
  %14 = icmp eq i8* %3, null
  %15 = bitcast %struct.AVFormatContext* %0 to i8*
  br label %16

16:                                               ; preds = %13, %63
  %17 = phi i64 [ 0, %13 ], [ %64, %63 ]
  %18 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %8, i64 %17, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = call i32 @strcmp(i8* nonnull %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i64 0, i64 0)) #12
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %23, i8* null, i8* %19
  br label %25

25:                                               ; preds = %21, %16
  %26 = phi i8* [ null, %16 ], [ %24, %21 ]
  %27 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %8, i64 %17, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  call void (i8*, i32, i8*, ...) @av_log(i8* %15, i32 24, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.122, i64 0, i64 0)) #11
  br label %63

31:                                               ; preds = %25
  br i1 %14, label %34, label %32

32:                                               ; preds = %31
  %33 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 1024, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i64 0, i64 0), i8* nonnull %3, i8* nonnull %28) #11
  br label %36

34:                                               ; preds = %31
  %35 = call i64 @av_strlcpy(i8* nonnull %9, i8* nonnull %28, i64 1024) #11
  br label %36

36:                                               ; preds = %34, %32
  %37 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %8, i64 %17, i32 3
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  %40 = icmp ne i8* %26, null
  %41 = and i1 %40, %39
  br i1 %41, label %51, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %8, i64 %17, i32 1
  %44 = load i8*, i8** %43, align 8
  %45 = call i32 @av_dict_set(%struct.AVDictionary** %2, i8* nonnull %9, i8* %44, i32 0) #11
  %46 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %8, i64 %17, i32 4
  %47 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %46, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %42
  call fastcc void @matroska_convert_tag(%struct.AVFormatContext* %0, %struct.EbmlList* %46, %struct.AVDictionary** %2, i8* nonnull %9)
  br label %51

51:                                               ; preds = %42, %50, %36
  br i1 %40, label %52, label %63

52:                                               ; preds = %51
  %53 = call i64 @av_strlcat(i8* nonnull %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.124, i64 0, i64 0), i64 1024) #11
  %54 = call i64 @av_strlcat(i8* nonnull %9, i8* nonnull %26, i64 1024) #11
  %55 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %8, i64 %17, i32 1
  %56 = load i8*, i8** %55, align 8
  %57 = call i32 @av_dict_set(%struct.AVDictionary** %2, i8* nonnull %9, i8* %56, i32 0) #11
  %58 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %8, i64 %17, i32 4
  %59 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %52
  call fastcc void @matroska_convert_tag(%struct.AVFormatContext* %0, %struct.EbmlList* %58, %struct.AVDictionary** %2, i8* nonnull %9)
  br label %63

63:                                               ; preds = %51, %62, %52, %30
  %64 = add nuw nsw i64 %17, 1
  %65 = load i32, i32* %10, align 8
  %66 = sext i32 %65 to i64
  %67 = icmp slt i64 %64, %66
  br i1 %67, label %16, label %68

68:                                               ; preds = %63, %4
  call void @ff_metadata_conv(%struct.AVDictionary** %2, %struct.AVMetadataConv* null, %struct.AVMetadataConv* getelementptr inbounds ([0 x %struct.AVMetadataConv], [0 x %struct.AVMetadataConv]* @ff_mkv_metadata_conv, i64 0, i64 0)) #11
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %9) #11
  ret void
}

declare i64 @av_strlcpy(i8*, i8*, i64) local_unnamed_addr #4

declare i64 @av_strlcat(i8*, i8*, i64) local_unnamed_addr #4

declare void @ff_metadata_conv(%struct.AVDictionary**, %struct.AVMetadataConv*, %struct.AVMetadataConv*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @matroska_parse_cluster(%struct.MatroskaDemuxContext*) unnamed_addr #1 {
  %2 = alloca %struct.AVPacket, align 8
  %3 = alloca %struct.AVPacket, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.AVPacket, align 8
  %9 = alloca %struct.AVIOContext, align 8
  %10 = alloca [256 x i32], align 16
  %11 = alloca i64, align 8
  %12 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27
  %13 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 2
  br i1 %15, label %1069, label %16

16:                                               ; preds = %1
  %17 = icmp eq i32 %14, 1
  br i1 %17, label %18, label %35

18:                                               ; preds = %16
  %19 = tail call fastcc i32 @ebml_parse(%struct.MatroskaDemuxContext* %0, %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segment, i64 0, i32 0), i8* null)
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %32

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %23 = load %struct.AVFormatContext*, %struct.AVFormatContext** %22, align 8
  %24 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %23, i64 0, i32 4
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %24, align 8
  %26 = tail call i64 @avio_seek(%struct.AVIOContext* %25, i64 0, i32 1) #11
  %27 = add nsw i64 %26, -4
  %28 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27, i32 2
  store i64 %27, i64* %28, align 8
  %29 = bitcast %struct.MatroskaCluster* %12 to i8*
  %30 = tail call fastcc i32 @ebml_parse(%struct.MatroskaDemuxContext* %0, %struct.EbmlSyntax* bitcast (<{ { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_cluster_enter to %struct.EbmlSyntax*), i8* %29)
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %1069, label %32

32:                                               ; preds = %21, %18
  %33 = phi i32 [ %19, %18 ], [ %30, %21 ]
  %34 = load i32, i32* %13, align 8
  br label %35

35:                                               ; preds = %32, %16
  %36 = phi i32 [ %34, %32 ], [ %14, %16 ]
  %37 = phi i32 [ %33, %32 ], [ -1431655766, %16 ]
  switch i32 %36, label %1069 [
    i32 2, label %38
    i32 0, label %1047
  ]

38:                                               ; preds = %35
  %39 = bitcast %struct.MatroskaCluster* %12 to i8*
  %40 = tail call fastcc i32 @ebml_parse(%struct.MatroskaDemuxContext* %0, %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_cluster_parsing, i64 0, i32 0), i8* %39)
  %41 = icmp sgt i32 %40, -1
  br i1 %41, label %42, label %1045

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27, i32 0, i32 3, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %1045

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27, i32 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27, i32 0, i32 1, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  %54 = zext i1 %53 to i32
  br label %55

55:                                               ; preds = %46, %50
  %56 = phi i32 [ %54, %50 ], [ -1, %46 ]
  %57 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27, i32 0, i32 5, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27, i32 0, i32 5, i32 2
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %55, %60
  %64 = phi i8* [ %62, %60 ], [ null, %55 ]
  %65 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27, i32 0, i32 3, i32 1
  %66 = load %struct.AVBufferRef*, %struct.AVBufferRef** %65, align 8
  %67 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27, i32 0, i32 3, i32 2
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27, i32 0, i32 3, i32 3
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %struct.MatroskaCluster, %struct.MatroskaCluster* %12, i64 0, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27, i32 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 27, i32 0, i32 6
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %struct.AVIOContext* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %81) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 264, i1 false) #11
  %82 = bitcast [256 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %82) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %82, i8 -86, i64 1024, i1 false) #11
  %83 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #11
  store i64 -6148914691236517206, i64* %11, align 8
  %84 = call i32 @ffio_init_context(%struct.AVIOContext* nonnull %9, i8* %68, i32 %44, i32 0, i8* null, i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)* null, i64 (i8*, i64, i32)* null) #11
  %85 = call fastcc i32 @ebml_read_num(%struct.MatroskaDemuxContext* %0, %struct.AVIOContext* nonnull %9, i32 8, i64* nonnull %11, i32 1) #11
  %86 = icmp slt i32 %85, 0
  br i1 %86, label %1043, label %87

87:                                               ; preds = %63
  %88 = sext i32 %85 to i64
  %89 = getelementptr inbounds i8, i8* %68, i64 %88
  %90 = sub nsw i32 %44, %85
  %91 = load i64, i64* %11, align 8
  %92 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 12, i32 2
  %93 = bitcast i8** %92 to %struct.MatroskaTrack**
  %94 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %93, align 8
  %95 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 12, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %109

98:                                               ; preds = %87
  %99 = sext i32 %96 to i64
  br label %102

100:                                              ; preds = %102
  %101 = icmp eq i64 %108, %99
  br i1 %101, label %109, label %102

102:                                              ; preds = %100, %98
  %103 = phi i64 [ 0, %98 ], [ %108, %100 ]
  %104 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103
  %105 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %104, i64 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %106, %91
  %108 = add nuw nsw i64 %103, 1
  br i1 %107, label %113, label %100

109:                                              ; preds = %100, %87
  %110 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %111 = bitcast %struct.AVFormatContext** %110 to i8**
  %112 = load i8*, i8** %111, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %112, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.118, i64 0, i64 0), i64 %91) #11
  br label %1043

113:                                              ; preds = %102
  %114 = icmp eq %struct.MatroskaTrack* %104, null
  %115 = icmp slt i32 %90, 3
  %116 = or i1 %115, %114
  br i1 %116, label %1043, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 23
  %119 = load %struct.AVStream*, %struct.AVStream** %118, align 8
  %120 = icmp eq %struct.AVStream* %119, null
  br i1 %120, label %121, label %125

121:                                              ; preds = %117
  %122 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %123 = bitcast %struct.AVFormatContext** %122 to i8**
  %124 = load i8*, i8** %123, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %124, i32 40, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.129, i64 0, i64 0), i64 %91) #11
  br label %1043

125:                                              ; preds = %117
  %126 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %119, i64 0, i32 9
  %127 = load i32, i32* %126, align 4
  %128 = icmp sgt i32 %127, 47
  br i1 %128, label %1043, label %129

129:                                              ; preds = %125
  %130 = icmp ult i64 %74, 9223372036854775807
  %131 = select i1 %130, i64 %74, i64 9223372036854775807
  %132 = bitcast i8* %89 to i16*
  %133 = load i16, i16* %132, align 1
  %134 = call i16 @llvm.bswap.i16(i16 %133) #11
  %135 = sext i16 %134 to i32
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %89, i64 2
  %138 = getelementptr inbounds i8, i8* %89, i64 3
  %139 = load i8, i8* %137, align 1
  %140 = add nsw i32 %90, -3
  %141 = icmp eq i32 %56, -1
  %142 = lshr i8 %139, 7
  %143 = zext i8 %142 to i32
  %144 = select i1 %141, i32 %143, i32 %56
  %145 = icmp ne i64 %72, -1
  br i1 %145, label %146, label %181

146:                                              ; preds = %129
  %147 = icmp sgt i16 %134, -1
  br i1 %147, label %152, label %148

148:                                              ; preds = %146
  %149 = sub nsw i32 0, %135
  %150 = sext i32 %149 to i64
  %151 = icmp ult i64 %72, %150
  br i1 %151, label %181, label %152

152:                                              ; preds = %148, %146
  %153 = uitofp i64 %72 to double
  %154 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 7
  %155 = load double, double* %154, align 8
  %156 = fdiv nsz double %153, %155
  %157 = fptoui double %156 to i64
  %158 = shl i64 %136, 48
  %159 = ashr exact i64 %158, 48
  %160 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 22
  %161 = load i64, i64* %160, align 8
  %162 = sub i64 %159, %161
  %163 = add i64 %162, %157
  %164 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 2
  %165 = load i64, i64* %164, align 8
  %166 = icmp eq i64 %165, 17
  br i1 %166, label %167, label %173

167:                                              ; preds = %152
  %168 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 24
  %169 = load i64, i64* %168, align 8
  %170 = icmp ult i64 %163, %169
  %171 = icmp eq i32 %144, 0
  %172 = or i1 %171, %170
  br i1 %172, label %181, label %175

173:                                              ; preds = %152
  %174 = icmp eq i32 %144, 0
  br i1 %174, label %181, label %175

175:                                              ; preds = %173, %167
  %176 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %177 = load %struct.AVFormatContext*, %struct.AVFormatContext** %176, align 8
  %178 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %119, i64 0, i32 0
  %179 = load i32, i32* %178, align 8
  call void @ff_reduce_index(%struct.AVFormatContext* %177, i32 %179) #11
  %180 = call i32 @av_add_index_entry(%struct.AVStream* nonnull %119, i64 %78, i64 %163, i32 0, i32 0, i32 1) #11
  br label %181

181:                                              ; preds = %175, %173, %167, %148, %129
  %182 = phi i32 [ %144, %148 ], [ %144, %129 ], [ 0, %173 ], [ %144, %175 ], [ 0, %167 ]
  %183 = phi i64 [ -9223372036854775808, %148 ], [ -9223372036854775808, %129 ], [ %163, %173 ], [ %163, %175 ], [ %163, %167 ]
  %184 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 22
  %185 = load i32, i32* %184, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %208, label %187

187:                                              ; preds = %181
  %188 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 2
  %189 = load i64, i64* %188, align 8
  %190 = icmp eq i64 %189, 17
  br i1 %190, label %208, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 23
  %193 = load i64, i64* %192, align 8
  %194 = icmp slt i64 %183, %193
  br i1 %194, label %1043, label %195

195:                                              ; preds = %191
  %196 = icmp eq i32 %182, 0
  br i1 %196, label %198, label %197

197:                                              ; preds = %195
  store i32 0, i32* %184, align 4
  br label %208

198:                                              ; preds = %195
  %199 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %119, i64 0, i32 40
  %200 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %199, align 8
  %201 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %200, i64 0, i32 17
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %208

204:                                              ; preds = %198
  %205 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %206 = bitcast %struct.AVFormatContext** %205 to i8**
  %207 = load i8*, i8** %206, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %207, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.130, i64 0, i64 0)) #11
  store i32 0, i32* %184, align 4
  br label %208

208:                                              ; preds = %204, %198, %197, %187, %181
  %209 = lshr i8 %139, 1
  %210 = and i8 %209, 3
  %211 = zext i8 %210 to i32
  %212 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 0
  %213 = icmp eq i8 %210, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %208
  store i32 %140, i32* %212, align 16
  br label %363

215:                                              ; preds = %208
  %216 = icmp slt i32 %140, 1
  br i1 %216, label %348, label %217

217:                                              ; preds = %215
  %218 = load i8, i8* %138, align 1
  %219 = zext i8 %218 to i32
  %220 = add nuw nsw i32 %219, 1
  %221 = getelementptr inbounds i8, i8* %138, i64 1
  %222 = add nsw i32 %90, -4
  switch i32 %211, label %363 [
    i32 1, label %223
    i32 2, label %259
    i32 3, label %291
  ]

223:                                              ; preds = %217
  %224 = icmp eq i8 %218, 0
  br i1 %224, label %252, label %225

225:                                              ; preds = %223
  %226 = zext i8 %218 to i64
  br label %227

227:                                              ; preds = %247, %225
  %228 = phi i64 [ %248, %247 ], [ 0, %225 ]
  %229 = phi i32 [ %242, %247 ], [ 0, %225 ]
  %230 = phi i8* [ %244, %247 ], [ %221, %225 ]
  %231 = phi i32 [ %245, %247 ], [ %222, %225 ]
  %232 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %228
  store i32 0, i32* %232, align 4
  br label %233

233:                                              ; preds = %239, %227
  %234 = phi i32 [ 0, %227 ], [ %243, %239 ]
  %235 = phi i32 [ %231, %227 ], [ %245, %239 ]
  %236 = phi i8* [ %230, %227 ], [ %244, %239 ]
  %237 = phi i32 [ %229, %227 ], [ %242, %239 ]
  %238 = icmp ugt i32 %235, %237
  br i1 %238, label %239, label %348

239:                                              ; preds = %233
  %240 = load i8, i8* %236, align 1
  %241 = zext i8 %240 to i32
  %242 = add i32 %237, %241
  %243 = add i32 %234, %241
  store i32 %243, i32* %232, align 4
  %244 = getelementptr inbounds i8, i8* %236, i64 1
  %245 = add nsw i32 %235, -1
  %246 = icmp eq i8 %240, -1
  br i1 %246, label %233, label %247

247:                                              ; preds = %239
  %248 = add nuw nsw i64 %228, 1
  %249 = icmp eq i64 %248, %226
  br i1 %249, label %250, label %227

250:                                              ; preds = %247
  %251 = icmp ult i32 %245, %242
  br i1 %251, label %348, label %252

252:                                              ; preds = %250, %223
  %253 = phi i32 [ %242, %250 ], [ 0, %223 ]
  %254 = phi i8* [ %244, %250 ], [ %221, %223 ]
  %255 = phi i64 [ %226, %250 ], [ 0, %223 ]
  %256 = phi i32 [ %245, %250 ], [ %222, %223 ]
  %257 = sub i32 %256, %253
  %258 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %255
  store i32 %257, i32* %258, align 4
  br label %363

259:                                              ; preds = %217
  %260 = urem i32 %222, %220
  %261 = udiv i32 %222, %220
  %262 = icmp eq i32 %260, 0
  br i1 %262, label %263, label %348

263:                                              ; preds = %259
  %264 = zext i32 %220 to i64
  %265 = add nsw i64 %264, -1
  %266 = and i64 %264, 7
  %267 = icmp ult i64 %265, 7
  br i1 %267, label %353, label %268

268:                                              ; preds = %263
  %269 = sub nsw i64 %264, %266
  br label %270

270:                                              ; preds = %270, %268
  %271 = phi i64 [ 0, %268 ], [ %288, %270 ]
  %272 = phi i64 [ %269, %268 ], [ %289, %270 ]
  %273 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %271
  store i32 %261, i32* %273, align 16
  %274 = or i64 %271, 1
  %275 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %274
  store i32 %261, i32* %275, align 4
  %276 = or i64 %271, 2
  %277 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %276
  store i32 %261, i32* %277, align 8
  %278 = or i64 %271, 3
  %279 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %278
  store i32 %261, i32* %279, align 4
  %280 = or i64 %271, 4
  %281 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %280
  store i32 %261, i32* %281, align 16
  %282 = or i64 %271, 5
  %283 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %282
  store i32 %261, i32* %283, align 4
  %284 = or i64 %271, 6
  %285 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %284
  store i32 %261, i32* %285, align 8
  %286 = or i64 %271, 7
  %287 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %286
  store i32 %261, i32* %287, align 4
  %288 = add nuw nsw i64 %271, 8
  %289 = add i64 %272, -8
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %353, label %270

291:                                              ; preds = %217
  %292 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %292) #11
  store i64 -6148914691236517206, i64* %5, align 8
  %293 = call i64 @avio_skip(%struct.AVIOContext* nonnull %9, i64 4) #11
  %294 = call fastcc i32 @ebml_read_num(%struct.MatroskaDemuxContext* %0, %struct.AVIOContext* nonnull %9, i32 8, i64* nonnull %5, i32 1) #11
  %295 = icmp slt i32 %294, 0
  br i1 %295, label %339, label %296

296:                                              ; preds = %291
  %297 = load i64, i64* %5, align 8
  %298 = icmp ugt i64 %297, 2147483647
  br i1 %298, label %339, label %299

299:                                              ; preds = %296
  %300 = trunc i64 %297 to i32
  store i32 %300, i32* %212, align 16
  %301 = and i64 %297, 4294967295
  %302 = icmp ugt i8 %218, 1
  br i1 %302, label %303, label %333

303:                                              ; preds = %299
  %304 = bitcast i64* %4 to i8*
  %305 = zext i8 %218 to i64
  br label %306

306:                                              ; preds = %325, %303
  %307 = phi i64 [ %297, %303 ], [ %323, %325 ]
  %308 = phi i64 [ 1, %303 ], [ %331, %325 ]
  %309 = phi i32 [ %294, %303 ], [ %330, %325 ]
  %310 = phi i64 [ %301, %303 ], [ %329, %325 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %311 = call fastcc i32 @ebml_read_num(%struct.MatroskaDemuxContext* %0, %struct.AVIOContext* nonnull %9, i32 8, i64* nonnull %4, i32 1) #11
  %312 = icmp slt i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %306
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304) #11
  br label %339

314:                                              ; preds = %306
  %315 = load i64, i64* %4, align 8
  %316 = mul nsw i32 %311, 7
  %317 = add nsw i32 %316, -1
  %318 = zext i32 %317 to i64
  %319 = shl nsw i64 -1, %318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304) #11
  %320 = and i64 %307, 4294967295
  %321 = add nuw nsw i64 %320, 1
  %322 = add nsw i64 %321, %319
  %323 = add i64 %322, %315
  %324 = icmp ugt i64 %323, 2147483647
  br i1 %324, label %339, label %325

325:                                              ; preds = %314
  %326 = trunc i64 %323 to i32
  %327 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %308
  store i32 %326, i32* %327, align 4
  %328 = and i64 %323, 4294967295
  %329 = add i64 %328, %310
  %330 = add nsw i32 %311, %309
  %331 = add nuw nsw i64 %308, 1
  %332 = icmp eq i64 %331, %305
  br i1 %332, label %333, label %306

333:                                              ; preds = %325, %299
  %334 = phi i64 [ %301, %299 ], [ %329, %325 ]
  %335 = phi i32 [ %294, %299 ], [ %330, %325 ]
  %336 = sub nsw i32 %222, %335
  %337 = sext i32 %336 to i64
  %338 = icmp ugt i64 %334, %337
  br i1 %338, label %339, label %341

339:                                              ; preds = %314, %333, %313, %296, %291
  %340 = phi i32 [ -1094995529, %333 ], [ -1094995529, %296 ], [ %294, %291 ], [ %311, %313 ], [ -1094995529, %314 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %292) #11
  br label %348

341:                                              ; preds = %333
  %342 = sext i32 %335 to i64
  %343 = getelementptr inbounds i8, i8* %221, i64 %342
  %344 = trunc i64 %334 to i32
  %345 = sub i32 %336, %344
  %346 = zext i8 %218 to i64
  %347 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %346
  store i32 %345, i32* %347, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %292) #11
  br label %363

348:                                              ; preds = %233, %339, %259, %250, %215
  %349 = phi i32 [ -1094995529, %250 ], [ %340, %339 ], [ -1094995529, %259 ], [ -1094995529, %215 ], [ -1094995529, %233 ]
  %350 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %351 = bitcast %struct.AVFormatContext** %350 to i8**
  %352 = load i8*, i8** %351, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %352, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.131, i64 0, i64 0)) #11
  br label %1043

353:                                              ; preds = %270, %263
  %354 = phi i64 [ 0, %263 ], [ %288, %270 ]
  %355 = icmp eq i64 %266, 0
  br i1 %355, label %363, label %356

356:                                              ; preds = %353, %356
  %357 = phi i64 [ %360, %356 ], [ %354, %353 ]
  %358 = phi i64 [ %361, %356 ], [ %266, %353 ]
  %359 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %357
  store i32 %261, i32* %359, align 4
  %360 = add nuw nsw i64 %357, 1
  %361 = add i64 %358, -1
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %356, !llvm.loop !23

363:                                              ; preds = %353, %356, %341, %252, %217, %214
  %364 = phi i8* [ %138, %214 ], [ %221, %217 ], [ %343, %341 ], [ %254, %252 ], [ %221, %356 ], [ %221, %353 ]
  %365 = phi i32 [ 1, %214 ], [ %220, %217 ], [ %220, %341 ], [ %220, %252 ], [ %220, %356 ], [ %220, %353 ]
  %366 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 8
  %367 = load i64, i64* %366, align 8
  %368 = icmp ne i64 %367, 0
  %369 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 18, i32 0
  %370 = load double, double* %369, align 8
  %371 = fcmp nsz oeq double %370, 8.000000e+03
  %372 = and i1 %368, %371
  br i1 %372, label %373, label %387

373:                                              ; preds = %363
  %374 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %119, i64 0, i32 19
  %375 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %374, align 8
  %376 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %375, i64 0, i32 1
  %377 = load i32, i32* %376, align 4
  %378 = icmp eq i32 %377, 86019
  br i1 %378, label %379, label %387

379:                                              ; preds = %373
  %380 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %375, i64 0, i32 23
  %381 = load i32, i32* %380, align 4
  %382 = icmp eq i32 %381, 8000
  br i1 %382, label %383, label %396

383:                                              ; preds = %379
  %384 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %375, i64 0, i32 25
  %385 = load i32, i32* %384, align 4
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %396, label %387

387:                                              ; preds = %383, %373, %363
  %388 = icmp eq i64 %131, 0
  %389 = and i1 %388, %368
  br i1 %389, label %390, label %396

390:                                              ; preds = %387
  %391 = sext i32 %365 to i64
  %392 = mul i64 %367, %391
  %393 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 7
  %394 = load i64, i64* %393, align 8
  %395 = udiv i64 %392, %394
  br label %396

396:                                              ; preds = %390, %387, %383, %379
  %397 = phi i64 [ %395, %390 ], [ %131, %387 ], [ %131, %379 ], [ %131, %383 ]
  br i1 %145, label %398, label %410

398:                                              ; preds = %396
  %399 = icmp sgt i16 %134, -1
  br i1 %399, label %404, label %400

400:                                              ; preds = %398
  %401 = sub nsw i32 0, %135
  %402 = sext i32 %401 to i64
  %403 = icmp ult i64 %72, %402
  br i1 %403, label %410, label %404

404:                                              ; preds = %400, %398
  %405 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 24
  %406 = load i64, i64* %405, align 8
  %407 = add i64 %397, %183
  %408 = icmp ugt i64 %406, %407
  %409 = select i1 %408, i64 %406, i64 %407
  store i64 %409, i64* %405, align 8
  br label %410

410:                                              ; preds = %404, %400, %396
  %411 = sext i32 %365 to i64
  %412 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 26
  %413 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 20, i32 2
  %414 = bitcast i8** %413 to %struct.MatroskaTrackEncoding**
  %415 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 18, i32 11
  %416 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %119, i64 0, i32 19
  %417 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 18, i32 7
  %418 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 18, i32 4
  %419 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 18, i32 5
  %420 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 18, i32 6
  %421 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 18, i32 8
  %422 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 18, i32 9
  %423 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 18, i32 10
  %424 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %425 = bitcast %struct.AVFormatContext** %424 to i8**
  %426 = bitcast %struct.AVPacket* %3 to i8*
  %427 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i64 0, i32 3
  %428 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i64 0, i32 1
  %429 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i64 0, i32 10
  %430 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %119, i64 0, i32 0
  %431 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i64 0, i32 5
  %432 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 19
  %433 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 20
  %434 = bitcast i8** %7 to i8*
  %435 = bitcast %struct.AVPacket* %8 to i8*
  %436 = bitcast i8** %6 to i8*
  %437 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i64 0, i32 0
  %438 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i64 0, i32 3
  %439 = bitcast i8** %438 to i64*
  %440 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i64 0, i32 4
  %441 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i64 0, i32 6
  %442 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i64 0, i32 5
  %443 = add nuw nsw i32 %58, 8
  %444 = sext i32 %58 to i64
  %445 = icmp eq i64 %80, 0
  %446 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i64 %103, i32 25
  %447 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i64 0, i32 2
  %448 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i64 0, i32 1
  %449 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i64 0, i32 10
  %450 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i64 0, i32 9
  %451 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i64 0, i32 11
  %452 = bitcast %struct.AVPacket* %2 to i8*
  %453 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 3
  %454 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 5
  %455 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 1
  %456 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 9
  %457 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 10
  %458 = zext i32 %365 to i64
  br label %459

459:                                              ; preds = %1038, %410
  %460 = phi i64 [ 0, %410 ], [ %465, %1038 ]
  %461 = phi i8* [ %364, %410 ], [ %1041, %1038 ]
  %462 = phi i64 [ %183, %410 ], [ %1039, %1038 ]
  %463 = phi %struct.AVBufferRef* [ %66, %410 ], [ %508, %1038 ]
  %464 = ptrtoint i8* %461 to i64
  %465 = add nuw nsw i64 %460, 1
  %466 = mul i64 %465, %397
  %467 = udiv i64 %466, %411
  %468 = mul i64 %460, %397
  %469 = udiv i64 %468, %411
  %470 = sub i64 %467, %469
  %471 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %460
  %472 = load i32, i32* %471, align 4
  %473 = load i32, i32* %412, align 4
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %505, label %475

475:                                              ; preds = %459
  %476 = icmp ugt i32 %472, 9999999
  br i1 %476, label %1043, label %477

477:                                              ; preds = %475
  %478 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %414, align 8
  %479 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %478, i64 0, i32 2, i32 0
  %480 = load i64, i64* %479, align 8
  %481 = icmp eq i64 %480, 3
  br i1 %481, label %482, label %1043

482:                                              ; preds = %477
  %483 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %478, i64 0, i32 2, i32 1, i32 0
  %484 = load i32, i32* %483, align 8
  %485 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %478, i64 0, i32 2, i32 1, i32 2
  %486 = load i8*, i8** %485, align 8
  %487 = icmp eq i32 %484, 0
  %488 = icmp ne i8* %486, null
  %489 = or i1 %487, %488
  br i1 %489, label %491, label %490

490:                                              ; preds = %482
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.104, i64 0, i64 0)) #11
  br label %1043

491:                                              ; preds = %482
  br i1 %487, label %505, label %492

492:                                              ; preds = %491
  %493 = add nsw i32 %484, %472
  %494 = add nsw i32 %493, 64
  %495 = sext i32 %494 to i64
  %496 = call noalias i8* @av_malloc(i64 %495) #11
  %497 = icmp eq i8* %496, null
  br i1 %497, label %1043, label %498

498:                                              ; preds = %492
  %499 = sext i32 %484 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %496, i8* align 1 %486, i64 %499, i1 false) #11
  %500 = getelementptr inbounds i8, i8* %496, i64 %499
  %501 = sext i32 %472 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %500, i8* align 1 %461, i64 %501, i1 false) #11
  %502 = sext i32 %493 to i64
  %503 = getelementptr inbounds i8, i8* %496, i64 %502
  call void @llvm.memset.p0i8.i64(i8* align 1 %503, i8 0, i64 64, i1 false) #11
  %504 = ptrtoint i8* %496 to i64
  br label %505

505:                                              ; preds = %498, %491, %459
  %506 = phi i64 [ %464, %459 ], [ %464, %491 ], [ %504, %498 ]
  %507 = phi i32 [ %472, %459 ], [ %472, %491 ], [ %493, %498 ]
  %508 = phi %struct.AVBufferRef* [ %463, %459 ], [ null, %491 ], [ null, %498 ]
  %509 = load i8*, i8** %415, align 8
  %510 = icmp eq i8* %509, null
  br i1 %510, label %713, label %511

511:                                              ; preds = %505
  %512 = inttoptr i64 %506 to i8*
  %513 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %416, align 8
  %514 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %513, i64 0, i32 24
  %515 = load i32, i32* %514, align 8
  %516 = load i32, i32* %417, align 4
  %517 = load i32, i32* %418, align 8
  %518 = load i32, i32* %419, align 4
  %519 = load i32, i32* %420, align 8
  %520 = load i32, i32* %421, align 8
  %521 = load i32, i32* %422, align 4
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %523, label %681

523:                                              ; preds = %511
  %524 = icmp eq i32 %520, 0
  br i1 %524, label %525, label %527

525:                                              ; preds = %523
  store i64 %462, i64* %423, align 8
  %526 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %416, align 8
  br label %527

527:                                              ; preds = %525, %523
  %528 = phi %struct.AVCodecParameters* [ %526, %525 ], [ %513, %523 ]
  %529 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %528, i64 0, i32 1
  %530 = load i32, i32* %529, align 4
  %531 = icmp eq i32 %530, 77825
  br i1 %531, label %532, label %578

532:                                              ; preds = %527
  %533 = mul nsw i32 %518, %517
  %534 = sdiv i32 %533, 2
  %535 = icmp sgt i32 %534, %507
  br i1 %535, label %553, label %536

536:                                              ; preds = %532
  %537 = icmp sgt i32 %518, 1
  br i1 %537, label %538, label %664

538:                                              ; preds = %536
  %539 = lshr i32 %518, 1
  %540 = shl i32 %519, 1
  %541 = mul nsw i32 %520, %517
  %542 = sext i32 %541 to i64
  %543 = sext i32 %517 to i64
  %544 = getelementptr inbounds i8, i8* %509, i64 %542
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %544, i8* align 1 %512, i64 %543, i1 false) #11
  %545 = icmp eq i32 %539, 1
  br i1 %545, label %664, label %546

546:                                              ; preds = %538
  %547 = zext i32 %539 to i64
  %548 = add nsw i64 %547, -1
  %549 = and i64 %548, 1
  %550 = icmp eq i32 %539, 2
  br i1 %550, label %639, label %551

551:                                              ; preds = %546
  %552 = sub nsw i64 %548, %549
  br label %555

553:                                              ; preds = %532
  %554 = load i8*, i8** %425, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %554, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.132, i64 0, i64 0)) #11
  br label %707

555:                                              ; preds = %555, %551
  %556 = phi i64 [ 1, %551 ], [ %575, %555 ]
  %557 = phi i64 [ %552, %551 ], [ %576, %555 ]
  %558 = load i8*, i8** %415, align 8
  %559 = trunc i64 %556 to i32
  %560 = mul i32 %540, %559
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds i8, i8* %558, i64 %542
  %563 = getelementptr inbounds i8, i8* %562, i64 %561
  %564 = mul nsw i64 %556, %543
  %565 = getelementptr inbounds i8, i8* %512, i64 %564
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %563, i8* align 1 %565, i64 %543, i1 false) #11
  %566 = add nuw nsw i64 %556, 1
  %567 = load i8*, i8** %415, align 8
  %568 = trunc i64 %566 to i32
  %569 = mul i32 %540, %568
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds i8, i8* %567, i64 %542
  %572 = getelementptr inbounds i8, i8* %571, i64 %570
  %573 = mul nsw i64 %566, %543
  %574 = getelementptr inbounds i8, i8* %512, i64 %573
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %572, i8* align 1 %574, i64 %543, i1 false) #11
  %575 = add nuw nsw i64 %556, 2
  %576 = add i64 %557, -2
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %639, label %555

578:                                              ; preds = %527
  %579 = icmp eq i32 %530, 86057
  %580 = icmp sgt i32 %519, %507
  br i1 %579, label %581, label %589

581:                                              ; preds = %578
  br i1 %580, label %582, label %584

582:                                              ; preds = %581
  %583 = load i8*, i8** %425, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %583, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.133, i64 0, i64 0)) #11
  br label %707

584:                                              ; preds = %581
  %585 = mul nsw i32 %520, %519
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds i8, i8* %509, i64 %586
  %588 = sext i32 %519 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %587, i8* align 1 %512, i64 %588, i1 false) #11
  br label %664

589:                                              ; preds = %578
  br i1 %580, label %612, label %590

590:                                              ; preds = %589
  %591 = sdiv i32 %519, %516
  %592 = icmp sgt i32 %591, 0
  br i1 %592, label %593, label %664

593:                                              ; preds = %590
  %594 = add nsw i32 %518, 1
  %595 = sdiv i32 %594, 2
  %596 = and i32 %520, 1
  %597 = mul nuw nsw i32 %596, %595
  %598 = ashr i32 %520, 1
  %599 = add nsw i32 %597, %598
  %600 = sext i32 %516 to i64
  %601 = mul nsw i32 %599, %516
  %602 = sext i32 %601 to i64
  %603 = getelementptr inbounds i8, i8* %509, i64 %602
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %603, i8* align 1 %512, i64 %600, i1 false) #11
  %604 = icmp eq i32 %591, 1
  br i1 %604, label %664, label %605

605:                                              ; preds = %593
  %606 = zext i32 %591 to i64
  %607 = add nsw i64 %606, -1
  %608 = and i64 %607, 1
  %609 = icmp eq i32 %591, 2
  br i1 %609, label %651, label %610

610:                                              ; preds = %605
  %611 = sub nsw i64 %607, %608
  br label %614

612:                                              ; preds = %589
  %613 = load i8*, i8** %425, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %613, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.134, i64 0, i64 0)) #11
  br label %707

614:                                              ; preds = %614, %610
  %615 = phi i64 [ 1, %610 ], [ %636, %614 ]
  %616 = phi i64 [ %611, %610 ], [ %637, %614 ]
  %617 = load i8*, i8** %415, align 8
  %618 = trunc i64 %615 to i32
  %619 = mul i32 %518, %618
  %620 = add i32 %599, %619
  %621 = mul nsw i32 %620, %516
  %622 = sext i32 %621 to i64
  %623 = getelementptr inbounds i8, i8* %617, i64 %622
  %624 = mul nsw i64 %615, %600
  %625 = getelementptr inbounds i8, i8* %512, i64 %624
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %623, i8* align 1 %625, i64 %600, i1 false) #11
  %626 = add nuw nsw i64 %615, 1
  %627 = load i8*, i8** %415, align 8
  %628 = trunc i64 %626 to i32
  %629 = mul i32 %518, %628
  %630 = add i32 %599, %629
  %631 = mul nsw i32 %630, %516
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds i8, i8* %627, i64 %632
  %634 = mul nsw i64 %626, %600
  %635 = getelementptr inbounds i8, i8* %512, i64 %634
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %633, i8* align 1 %635, i64 %600, i1 false) #11
  %636 = add nuw nsw i64 %615, 2
  %637 = add i64 %616, -2
  %638 = icmp eq i64 %637, 0
  br i1 %638, label %651, label %614

639:                                              ; preds = %555, %546
  %640 = phi i64 [ 1, %546 ], [ %575, %555 ]
  %641 = icmp eq i64 %549, 0
  br i1 %641, label %664, label %642

642:                                              ; preds = %639
  %643 = load i8*, i8** %415, align 8
  %644 = trunc i64 %640 to i32
  %645 = mul i32 %540, %644
  %646 = sext i32 %645 to i64
  %647 = getelementptr inbounds i8, i8* %643, i64 %542
  %648 = getelementptr inbounds i8, i8* %647, i64 %646
  %649 = mul nsw i64 %640, %543
  %650 = getelementptr inbounds i8, i8* %512, i64 %649
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %648, i8* align 1 %650, i64 %543, i1 false) #11
  br label %664

651:                                              ; preds = %614, %605
  %652 = phi i64 [ 1, %605 ], [ %636, %614 ]
  %653 = icmp eq i64 %608, 0
  br i1 %653, label %664, label %654

654:                                              ; preds = %651
  %655 = load i8*, i8** %415, align 8
  %656 = trunc i64 %652 to i32
  %657 = mul i32 %518, %656
  %658 = add i32 %599, %657
  %659 = mul nsw i32 %658, %516
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds i8, i8* %655, i64 %660
  %662 = mul nsw i64 %652, %600
  %663 = getelementptr inbounds i8, i8* %512, i64 %662
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %661, i8* align 1 %663, i64 %600, i1 false) #11
  br label %664

664:                                              ; preds = %654, %651, %642, %639, %593, %538, %590, %584, %536
  %665 = load i32, i32* %421, align 8
  %666 = add nsw i32 %665, 1
  store i32 %666, i32* %421, align 8
  %667 = icmp slt i32 %666, %518
  br i1 %667, label %668, label %670

668:                                              ; preds = %664
  %669 = load i32, i32* %422, align 4
  br label %678

670:                                              ; preds = %664
  %671 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %416, align 8
  %672 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %671, i64 0, i32 1
  %673 = load i32, i32* %672, align 4
  %674 = icmp eq i32 %673, 86057
  br i1 %674, label %707, label %675

675:                                              ; preds = %670
  store i32 0, i32* %421, align 8
  %676 = mul nsw i32 %519, %518
  %677 = sdiv i32 %676, %515
  store i32 %677, i32* %422, align 4
  br label %678

678:                                              ; preds = %675, %668
  %679 = phi i32 [ %669, %668 ], [ %677, %675 ]
  %680 = icmp eq i32 %679, 0
  br i1 %680, label %707, label %681

681:                                              ; preds = %678, %511
  %682 = mul nsw i32 %519, %518
  %683 = sext i32 %515 to i64
  br label %684

684:                                              ; preds = %704, %681
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %426) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %426, i8 -86, i64 88, i1 false) #11
  %685 = call i32 @av_new_packet(%struct.AVPacket* nonnull %3, i32 %515) #11
  %686 = icmp slt i32 %685, 0
  br i1 %686, label %702, label %687

687:                                              ; preds = %684
  %688 = load i8*, i8** %427, align 8
  %689 = load i8*, i8** %415, align 8
  %690 = sdiv i32 %682, %515
  %691 = load i32, i32* %422, align 4
  %692 = add nsw i32 %691, -1
  store i32 %692, i32* %422, align 4
  %693 = sub nsw i32 %690, %691
  %694 = mul nsw i32 %693, %515
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds i8, i8* %689, i64 %695
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %688, i8* align 1 %696, i64 %683, i1 false) #11
  %697 = load i64, i64* %423, align 8
  store i64 %697, i64* %428, align 8
  store i64 -9223372036854775808, i64* %423, align 8
  store i64 %70, i64* %429, align 8
  %698 = load i32, i32* %430, align 8
  store i32 %698, i32* %431, align 4
  %699 = call i32 @avpriv_packet_list_put(%struct.AVPacketList** %432, %struct.AVPacketList** %433, %struct.AVPacket* nonnull %3, i32 (%struct.AVPacket*, %struct.AVPacket*)* null, i32 0) #11
  %700 = icmp slt i32 %699, 0
  br i1 %700, label %701, label %704

701:                                              ; preds = %687
  call void @av_packet_unref(%struct.AVPacket* nonnull %3) #11
  br label %702

702:                                              ; preds = %684, %701
  %703 = phi i32 [ -12, %701 ], [ %685, %684 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %426) #11
  br label %707

704:                                              ; preds = %687
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %426) #11
  %705 = load i32, i32* %422, align 4
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %707, label %684

707:                                              ; preds = %704, %702, %678, %670, %612, %582, %553
  %708 = phi i32 [ -1094995529, %553 ], [ -1094995529, %582 ], [ -1094995529, %612 ], [ -1094995529, %670 ], [ %703, %702 ], [ 0, %678 ], [ 0, %704 ]
  %709 = icmp eq %struct.AVBufferRef* %508, null
  br i1 %709, label %710, label %711

710:                                              ; preds = %707
  call void @av_free(i8* %512) #11
  br label %711

711:                                              ; preds = %710, %707
  %712 = icmp eq i32 %708, 0
  br i1 %712, label %1032, label %1043

713:                                              ; preds = %505
  %714 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %416, align 8
  %715 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %714, i64 0, i32 1
  %716 = load i32, i32* %715, align 4
  %717 = icmp eq i32 %716, 96265
  %718 = inttoptr i64 %506 to i8*
  br i1 %717, label %719, label %819

719:                                              ; preds = %713
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %452) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %452, i8 -86, i64 88, i1 false) #11
  %720 = icmp slt i32 %507, 1
  br i1 %720, label %813, label %721

721:                                              ; preds = %719
  %722 = sext i32 %507 to i64
  %723 = getelementptr inbounds i8, i8* %718, i64 %722
  br label %724

724:                                              ; preds = %734, %721
  %725 = phi i8* [ %735, %734 ], [ %718, %721 ]
  %726 = load i8, i8* %725, align 1
  switch i8 %726, label %734 [
    i8 13, label %727
    i8 10, label %727
  ]

727:                                              ; preds = %724, %724
  %728 = ptrtoint i8* %725 to i64
  %729 = sub i64 %728, %506
  %730 = trunc i64 %729 to i32
  %731 = icmp eq i8 %726, 13
  %732 = getelementptr inbounds i8, i8* %725, i64 1
  %733 = select i1 %731, i8* %732, i8* %725
  br label %737

734:                                              ; preds = %724
  %735 = getelementptr inbounds i8, i8* %725, i64 1
  %736 = icmp ult i8* %735, %723
  br i1 %736, label %724, label %737

737:                                              ; preds = %734, %727
  %738 = phi i32 [ %730, %727 ], [ -1, %734 ]
  %739 = phi i8* [ %733, %727 ], [ %735, %734 ]
  %740 = icmp ult i8* %739, %723
  br i1 %740, label %741, label %813

741:                                              ; preds = %737
  %742 = load i8, i8* %739, align 1
  %743 = icmp eq i8 %742, 10
  br i1 %743, label %744, label %813

744:                                              ; preds = %741
  %745 = getelementptr inbounds i8, i8* %739, i64 1
  %746 = icmp ult i8* %745, %723
  br i1 %746, label %747, label %761

747:                                              ; preds = %744, %758
  %748 = phi i8* [ %759, %758 ], [ %745, %744 ]
  %749 = load i8, i8* %748, align 1
  switch i8 %749, label %758 [
    i8 13, label %750
    i8 10, label %750
  ]

750:                                              ; preds = %747, %747
  %751 = ptrtoint i8* %748 to i64
  %752 = ptrtoint i8* %745 to i64
  %753 = sub i64 %751, %752
  %754 = trunc i64 %753 to i32
  %755 = icmp eq i8 %749, 13
  %756 = getelementptr inbounds i8, i8* %748, i64 1
  %757 = select i1 %755, i8* %756, i8* %748
  br label %761

758:                                              ; preds = %747
  %759 = getelementptr inbounds i8, i8* %748, i64 1
  %760 = icmp eq i8* %759, %723
  br i1 %760, label %813, label %747

761:                                              ; preds = %750, %744
  %762 = phi i32 [ %754, %750 ], [ -1, %744 ]
  %763 = phi i8* [ %757, %750 ], [ %745, %744 ]
  %764 = icmp ult i8* %763, %723
  br i1 %764, label %765, label %813

765:                                              ; preds = %761
  %766 = load i8, i8* %763, align 1
  %767 = icmp eq i8 %766, 10
  br i1 %767, label %768, label %813

768:                                              ; preds = %765
  %769 = getelementptr inbounds i8, i8* %763, i64 1
  %770 = ptrtoint i8* %723 to i64
  %771 = ptrtoint i8* %769 to i64
  %772 = sub i64 %770, %771
  %773 = trunc i64 %772 to i32
  %774 = icmp sgt i32 %773, 0
  br i1 %774, label %775, label %813

775:                                              ; preds = %768
  %776 = shl i64 %772, 32
  %777 = ashr exact i64 %776, 32
  br label %778

778:                                              ; preds = %783, %775
  %779 = phi i64 [ %777, %775 ], [ %780, %783 ]
  %780 = add nsw i64 %779, -1
  %781 = getelementptr inbounds i8, i8* %763, i64 %779
  %782 = load i8, i8* %781, align 1
  switch i8 %782, label %785 [
    i8 13, label %783
    i8 10, label %783
  ]

783:                                              ; preds = %778, %778
  %784 = icmp sgt i64 %780, 0
  br i1 %784, label %778, label %813

785:                                              ; preds = %778
  %786 = trunc i64 %779 to i32
  %787 = call i32 @av_new_packet(%struct.AVPacket* nonnull %2, i32 %786) #11
  %788 = icmp slt i32 %787, 0
  br i1 %788, label %813, label %789

789:                                              ; preds = %785
  %790 = load i8*, i8** %453, align 8
  %791 = shl i64 %779, 32
  %792 = ashr exact i64 %791, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %790, i8* align 1 %769, i64 %792, i1 false) #11
  %793 = icmp sgt i32 %738, 0
  br i1 %793, label %794, label %800

794:                                              ; preds = %789
  %795 = call i8* @av_packet_new_side_data(%struct.AVPacket* nonnull %2, i32 16, i32 %738) #11
  %796 = icmp eq i8* %795, null
  br i1 %796, label %797, label %798

797:                                              ; preds = %794
  call void @av_packet_unref(%struct.AVPacket* nonnull %2) #11
  br label %813

798:                                              ; preds = %794
  %799 = sext i32 %738 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %795, i8* align 1 %718, i64 %799, i1 false) #11
  br label %800

800:                                              ; preds = %798, %789
  %801 = icmp sgt i32 %762, 0
  br i1 %801, label %802, label %808

802:                                              ; preds = %800
  %803 = call i8* @av_packet_new_side_data(%struct.AVPacket* nonnull %2, i32 17, i32 %762) #11
  %804 = icmp eq i8* %803, null
  br i1 %804, label %805, label %806

805:                                              ; preds = %802
  call void @av_packet_unref(%struct.AVPacket* nonnull %2) #11
  br label %813

806:                                              ; preds = %802
  %807 = sext i32 %762 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %803, i8* align 1 %745, i64 %807, i1 false) #11
  br label %808

808:                                              ; preds = %806, %800
  %809 = load i32, i32* %430, align 8
  store i32 %809, i32* %454, align 4
  store i64 %462, i64* %455, align 8
  store i64 %470, i64* %456, align 8
  store i64 %70, i64* %457, align 8
  %810 = call i32 @avpriv_packet_list_put(%struct.AVPacketList** %432, %struct.AVPacketList** %433, %struct.AVPacket* nonnull %2, i32 (%struct.AVPacket*, %struct.AVPacket*)* null, i32 0) #11
  %811 = icmp slt i32 %810, 0
  br i1 %811, label %812, label %813

812:                                              ; preds = %808
  call void @av_packet_unref(%struct.AVPacket* nonnull %2) #11
  br label %813

813:                                              ; preds = %758, %783, %812, %808, %805, %797, %785, %768, %765, %761, %741, %737, %719
  %814 = phi i32 [ -12, %812 ], [ -12, %805 ], [ -12, %797 ], [ -1094995529, %719 ], [ -1094995529, %741 ], [ -1094995529, %737 ], [ -1094995529, %765 ], [ -1094995529, %761 ], [ %787, %785 ], [ 0, %808 ], [ -1094995529, %768 ], [ -1094995529, %783 ], [ -1094995529, %758 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %452) #11
  %815 = icmp eq %struct.AVBufferRef* %508, null
  br i1 %815, label %816, label %817

816:                                              ; preds = %813
  call void @av_free(i8* %718) #11
  br label %817

817:                                              ; preds = %816, %813
  %818 = icmp eq i32 %814, 0
  br i1 %818, label %1032, label %1043

819:                                              ; preds = %713
  %820 = icmp eq i64 %460, 0
  %821 = select i1 %820, i32 %182, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %434) #11
  store i8* %718, i8** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %435) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %435, i8 -86, i64 88, i1 false) #11
  %822 = load i32, i32* %715, align 4
  %823 = icmp eq i32 %822, 86041
  br i1 %823, label %824, label %928

824:                                              ; preds = %819
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %436) #11
  store i8* null, i8** %6, align 8
  %825 = icmp slt i32 %507, 12
  br i1 %825, label %919, label %826

826:                                              ; preds = %824
  %827 = load %struct.AVStream*, %struct.AVStream** %118, align 8
  %828 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %827, i64 0, i32 19
  %829 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %828, align 8
  %830 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %829, i64 0, i32 3
  %831 = bitcast i8** %830 to i16**
  %832 = load i16*, i16** %831, align 8
  %833 = load i16, i16* %832, align 1
  %834 = inttoptr i64 %506 to i32*
  %835 = load i32, i32* %834, align 1
  %836 = add nsw i32 %507, -4
  %837 = getelementptr inbounds i8, i8* %718, i64 4
  br label %838

838:                                              ; preds = %870, %826
  %839 = phi i8* [ %909, %870 ], [ null, %826 ]
  %840 = phi i32 [ %915, %870 ], [ 0, %826 ]
  %841 = phi i32 [ %914, %870 ], [ %836, %826 ]
  %842 = phi i32 [ %872, %870 ], [ 0, %826 ]
  %843 = phi i8* [ %913, %870 ], [ %837, %826 ]
  %844 = bitcast i8* %843 to i32*
  %845 = load i32, i32* %844, align 1
  %846 = getelementptr inbounds i8, i8* %843, i64 4
  %847 = bitcast i8* %846 to i32*
  %848 = load i32, i32* %847, align 1
  %849 = getelementptr inbounds i8, i8* %843, i64 8
  %850 = add nsw i32 %841, -8
  %851 = and i32 %845, 6144
  %852 = icmp eq i32 %851, 6144
  br i1 %852, label %861, label %853

853:                                              ; preds = %838
  %854 = icmp slt i32 %850, 4
  br i1 %854, label %917, label %855

855:                                              ; preds = %853
  %856 = bitcast i8* %849 to i32*
  %857 = load i32, i32* %856, align 1
  %858 = getelementptr inbounds i8, i8* %843, i64 12
  %859 = add nsw i32 %841, -12
  %860 = icmp ult i32 %859, %857
  br i1 %860, label %917, label %861

861:                                              ; preds = %855, %838
  %862 = phi i32 [ %857, %855 ], [ %850, %838 ]
  %863 = phi i32 [ %859, %855 ], [ %850, %838 ]
  %864 = phi i8* [ %858, %855 ], [ %849, %838 ]
  %865 = add i32 %842, 96
  %866 = add i32 %865, %862
  %867 = zext i32 %866 to i64
  %868 = call i8* @av_realloc(i8* %839, i64 %867) #11
  %869 = icmp eq i8* %868, null
  br i1 %869, label %917, label %870

870:                                              ; preds = %861
  store i8* %868, i8** %6, align 8
  %871 = add i32 %862, 32
  %872 = add i32 %871, %842
  %873 = sext i32 %840 to i64
  %874 = getelementptr inbounds i8, i8* %868, i64 %873
  %875 = bitcast i8* %874 to i32*
  store i32 1802532471, i32* %875, align 1
  %876 = add i32 %862, 24
  %877 = load i8*, i8** %6, align 8
  %878 = getelementptr inbounds i8, i8* %877, i64 4
  %879 = getelementptr inbounds i8, i8* %878, i64 %873
  %880 = bitcast i8* %879 to i32*
  store i32 %876, i32* %880, align 1
  %881 = load i8*, i8** %6, align 8
  %882 = getelementptr inbounds i8, i8* %881, i64 8
  %883 = getelementptr inbounds i8, i8* %882, i64 %873
  %884 = bitcast i8* %883 to i16*
  store i16 %833, i16* %884, align 1
  %885 = load i8*, i8** %6, align 8
  %886 = getelementptr inbounds i8, i8* %885, i64 10
  %887 = getelementptr inbounds i8, i8* %886, i64 %873
  %888 = bitcast i8* %887 to i16*
  store i16 0, i16* %888, align 1
  %889 = load i8*, i8** %6, align 8
  %890 = getelementptr inbounds i8, i8* %889, i64 12
  %891 = getelementptr inbounds i8, i8* %890, i64 %873
  %892 = bitcast i8* %891 to i32*
  store i32 0, i32* %892, align 1
  %893 = load i8*, i8** %6, align 8
  %894 = getelementptr inbounds i8, i8* %893, i64 16
  %895 = getelementptr inbounds i8, i8* %894, i64 %873
  %896 = bitcast i8* %895 to i32*
  store i32 0, i32* %896, align 1
  %897 = load i8*, i8** %6, align 8
  %898 = getelementptr inbounds i8, i8* %897, i64 20
  %899 = getelementptr inbounds i8, i8* %898, i64 %873
  %900 = bitcast i8* %899 to i32*
  store i32 %835, i32* %900, align 1
  %901 = load i8*, i8** %6, align 8
  %902 = getelementptr inbounds i8, i8* %901, i64 24
  %903 = getelementptr inbounds i8, i8* %902, i64 %873
  %904 = bitcast i8* %903 to i32*
  store i32 %845, i32* %904, align 1
  %905 = load i8*, i8** %6, align 8
  %906 = getelementptr inbounds i8, i8* %905, i64 28
  %907 = getelementptr inbounds i8, i8* %906, i64 %873
  %908 = bitcast i8* %907 to i32*
  store i32 %848, i32* %908, align 1
  %909 = load i8*, i8** %6, align 8
  %910 = getelementptr inbounds i8, i8* %909, i64 32
  %911 = getelementptr inbounds i8, i8* %910, i64 %873
  %912 = zext i32 %862 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %911, i8* align 1 %864, i64 %912, i1 false) #11
  %913 = getelementptr inbounds i8, i8* %864, i64 %912
  %914 = sub i32 %863, %862
  %915 = add i32 %871, %840
  %916 = icmp sgt i32 %914, 7
  br i1 %916, label %838, label %922

917:                                              ; preds = %861, %855, %853
  %918 = phi i32 [ -12, %861 ], [ -1094995529, %855 ], [ -1094995529, %853 ]
  call void @av_freep(i8* nonnull %436) #11
  br label %919

919:                                              ; preds = %917, %824
  %920 = phi i32 [ -1094995529, %824 ], [ %918, %917 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %436) #11
  %921 = load i8*, i8** %425, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %921, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.135, i64 0, i64 0)) #11
  br label %1022

922:                                              ; preds = %870
  %923 = sext i32 %872 to i64
  %924 = getelementptr inbounds i8, i8* %909, i64 %923
  call void @llvm.memset.p0i8.i64(i8* align 1 %924, i8 0, i64 64, i1 false) #11
  %925 = ptrtoint i8* %909 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %436) #11
  %926 = icmp eq %struct.AVBufferRef* %508, null
  br i1 %926, label %927, label %928

927:                                              ; preds = %922
  call void @av_freep(i8* nonnull %434) #11
  br label %928

928:                                              ; preds = %927, %922, %819
  %929 = phi i32 [ %872, %927 ], [ %872, %922 ], [ %507, %819 ]
  %930 = phi i64 [ %925, %927 ], [ %925, %922 ], [ %506, %819 ]
  %931 = phi %struct.AVBufferRef* [ null, %927 ], [ null, %922 ], [ %508, %819 ]
  %932 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %416, align 8
  %933 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %932, i64 0, i32 1
  %934 = load i32, i32* %933, align 4
  %935 = icmp eq i32 %934, 147
  br i1 %935, label %936, label %964

936:                                              ; preds = %928
  %937 = inttoptr i64 %930 to i8*
  %938 = getelementptr inbounds i8, i8* %937, i64 4
  %939 = bitcast i8* %938 to i32*
  %940 = load i32, i32* %939, align 1
  %941 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %940) #10, !srcloc !2
  %942 = icmp eq i32 %941, 1768124518
  br i1 %942, label %964, label %943

943:                                              ; preds = %936
  %944 = add nsw i32 %929, 8
  %945 = add nsw i32 %929, 72
  %946 = sext i32 %945 to i64
  %947 = call noalias i8* @av_malloc(i64 %946) #11
  %948 = icmp eq i8* %947, null
  br i1 %948, label %949, label %951

949:                                              ; preds = %943
  %950 = load i8*, i8** %425, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %950, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.136, i64 0, i64 0)) #11
  br label %1022

951:                                              ; preds = %943
  %952 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %944) #10, !srcloc !2
  %953 = bitcast i8* %947 to i32*
  store i32 %952, i32* %953, align 1
  %954 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 1768124518) #10, !srcloc !2
  %955 = getelementptr inbounds i8, i8* %947, i64 4
  %956 = bitcast i8* %955 to i32*
  store i32 %954, i32* %956, align 1
  %957 = getelementptr inbounds i8, i8* %947, i64 8
  %958 = sext i32 %929 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %957, i8* align 1 %937, i64 %958, i1 false) #11
  %959 = sext i32 %944 to i64
  %960 = getelementptr inbounds i8, i8* %947, i64 %959
  call void @llvm.memset.p0i8.i64(i8* align 1 %960, i8 0, i64 64, i1 false) #11
  %961 = ptrtoint i8* %947 to i64
  %962 = icmp eq %struct.AVBufferRef* %931, null
  br i1 %962, label %963, label %964

963:                                              ; preds = %951
  call void @av_freep(i8* nonnull %434) #11
  br label %964

964:                                              ; preds = %963, %951, %936, %928
  %965 = phi i32 [ %929, %936 ], [ %944, %963 ], [ %944, %951 ], [ %929, %928 ]
  %966 = phi i64 [ %930, %936 ], [ %961, %963 ], [ %961, %951 ], [ %930, %928 ]
  %967 = phi %struct.AVBufferRef* [ %931, %936 ], [ null, %963 ], [ null, %951 ], [ %931, %928 ]
  %968 = or i32 %965, %58
  %969 = icmp eq i32 %968, 0
  br i1 %969, label %1022, label %970

970:                                              ; preds = %964
  call void @av_init_packet(%struct.AVPacket* nonnull %8) #11
  %971 = icmp eq %struct.AVBufferRef* %967, null
  br i1 %971, label %972, label %976

972:                                              ; preds = %970
  %973 = inttoptr i64 %966 to i8*
  %974 = add nsw i32 %965, 64
  %975 = call %struct.AVBufferRef* @av_buffer_create(i8* %973, i32 %974, void (i8*, i8*)* null, i8* null, i32 0) #11
  br label %978

976:                                              ; preds = %970
  %977 = call %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef* nonnull %967) #11
  br label %978

978:                                              ; preds = %976, %972
  %979 = phi %struct.AVBufferRef* [ %977, %976 ], [ %975, %972 ]
  store %struct.AVBufferRef* %979, %struct.AVBufferRef** %437, align 8
  %980 = icmp eq %struct.AVBufferRef* %979, null
  br i1 %980, label %1022, label %981

981:                                              ; preds = %978
  store i64 %966, i64* %439, align 8
  store i32 %965, i32* %440, align 8
  store i32 %821, i32* %441, align 8
  %982 = load i32, i32* %430, align 8
  store i32 %982, i32* %442, align 4
  br i1 %59, label %983, label %990

983:                                              ; preds = %981
  %984 = call i8* @av_packet_new_side_data(%struct.AVPacket* nonnull %8, i32 15, i32 %443) #11
  %985 = icmp eq i8* %984, null
  br i1 %985, label %1029, label %986

986:                                              ; preds = %983
  %987 = call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %76) #10, !srcloc !4
  %988 = bitcast i8* %984 to i64*
  store i64 %987, i64* %988, align 1
  %989 = getelementptr inbounds i8, i8* %984, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %989, i8* align 1 %64, i64 %444, i1 false) #11
  br label %990

990:                                              ; preds = %986, %981
  br i1 %445, label %1009, label %991

991:                                              ; preds = %990
  %992 = call i8* @av_packet_new_side_data(%struct.AVPacket* nonnull %8, i32 11, i32 10) #11
  %993 = icmp eq i8* %992, null
  br i1 %993, label %1029, label %994

994:                                              ; preds = %991
  %995 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %416, align 8
  %996 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %995, i64 0, i32 23
  %997 = load i32, i32* %996, align 4
  %998 = zext i32 %997 to i64
  %999 = shl nuw i64 %998, 32
  %1000 = or i64 %999, 1
  %1001 = call i64 @av_rescale_q(i64 %80, i64 4294967296000000001, i64 %1000) #10
  %1002 = icmp sgt i64 %1001, 0
  %1003 = trunc i64 %1001 to i32
  %1004 = sub i32 0, %1003
  %1005 = getelementptr inbounds i8, i8* %992, i64 4
  %1006 = select i1 %1002, i8* %1005, i8* %992
  %1007 = select i1 %1002, i32 %1003, i32 %1004
  %1008 = bitcast i8* %1006 to i32*
  store i32 %1007, i32* %1008, align 1
  br label %1009

1009:                                             ; preds = %994, %990
  %1010 = load i32, i32* %446, align 8
  %1011 = icmp eq i32 %1010, 0
  %1012 = select i1 %1011, i64* %448, i64* %447
  store i64 %462, i64* %1012, align 8
  store i64 %70, i64* %449, align 8
  store i64 %470, i64* %450, align 8
  %1013 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %416, align 8
  %1014 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1013, i64 0, i32 1
  %1015 = load i32, i32* %1014, align 4
  %1016 = icmp eq i32 %1015, 96264
  br i1 %1016, label %1017, label %1018

1017:                                             ; preds = %1009
  store i64 %470, i64* %451, align 8
  br label %1018

1018:                                             ; preds = %1017, %1009
  %1019 = call i32 @avpriv_packet_list_put(%struct.AVPacketList** %432, %struct.AVPacketList** %433, %struct.AVPacket* nonnull %8, i32 (%struct.AVPacket*, %struct.AVPacket*)* null, i32 0) #11
  %1020 = icmp slt i32 %1019, 0
  br i1 %1020, label %1029, label %1021

1021:                                             ; preds = %1018
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %435) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %434) #11
  br label %1032

1022:                                             ; preds = %978, %964, %949, %919
  %1023 = phi i64 [ %506, %919 ], [ %966, %964 ], [ %966, %978 ], [ %930, %949 ]
  %1024 = phi i32 [ %920, %919 ], [ 0, %964 ], [ -12, %978 ], [ -12, %949 ]
  %1025 = phi %struct.AVBufferRef* [ %508, %919 ], [ %967, %964 ], [ %967, %978 ], [ %931, %949 ]
  %1026 = icmp eq %struct.AVBufferRef* %1025, null
  br i1 %1026, label %1027, label %1030

1027:                                             ; preds = %1022
  %1028 = inttoptr i64 %1023 to i8*
  call void @av_free(i8* %1028) #11
  br label %1030

1029:                                             ; preds = %1018, %991, %983
  call void @av_packet_unref(%struct.AVPacket* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %435) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %434) #11
  br label %1043

1030:                                             ; preds = %1027, %1022
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %435) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %434) #11
  %1031 = icmp eq i32 %1024, 0
  br i1 %1031, label %1032, label %1043

1032:                                             ; preds = %1030, %1021, %817, %711
  %1033 = icmp eq i64 %462, -9223372036854775808
  br i1 %1033, label %1038, label %1034

1034:                                             ; preds = %1032
  %1035 = icmp eq i64 %470, 0
  %1036 = add i64 %470, %462
  %1037 = select i1 %1035, i64 -9223372036854775808, i64 %1036
  br label %1038

1038:                                             ; preds = %1034, %1032
  %1039 = phi i64 [ %1037, %1034 ], [ -9223372036854775808, %1032 ]
  %1040 = zext i32 %472 to i64
  %1041 = getelementptr inbounds i8, i8* %461, i64 %1040
  %1042 = icmp eq i64 %465, %458
  br i1 %1042, label %1043, label %459

1043:                                             ; preds = %475, %477, %492, %711, %817, %1030, %1038, %63, %109, %113, %121, %125, %191, %348, %490, %1029
  %1044 = phi i32 [ %349, %348 ], [ 0, %121 ], [ %85, %63 ], [ -1094995529, %113 ], [ 0, %125 ], [ 0, %191 ], [ -1094995529, %109 ], [ -12, %1029 ], [ -1, %490 ], [ 0, %1038 ], [ %1024, %1030 ], [ %814, %817 ], [ %708, %711 ], [ -12, %492 ], [ -1094995529, %477 ], [ -1094995529, %475 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %82) #11
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %81) #11
  br label %1045

1045:                                             ; preds = %1043, %42, %38
  %1046 = phi i32 [ %1044, %1043 ], [ %40, %42 ], [ %40, %38 ]
  call fastcc void @ebml_free(%struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>, <{ %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i8, i8, i64, i64, { %struct.EbmlSyntax* } } }>* @matroska_blockgroup, i64 0, i32 0), i8* %39)
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 112, i1 false)
  br label %1069

1047:                                             ; preds = %35
  %1048 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 1
  %1049 = load %struct.AVFormatContext*, %struct.AVFormatContext** %1048, align 8
  %1050 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1049, i64 0, i32 4
  %1051 = load %struct.AVIOContext*, %struct.AVIOContext** %1050, align 8
  %1052 = tail call i32 @avio_feof(%struct.AVIOContext* %1051) #11
  %1053 = icmp eq i32 %1052, 0
  br i1 %1053, label %1054, label %1067

1054:                                             ; preds = %1047
  %1055 = load %struct.AVFormatContext*, %struct.AVFormatContext** %1048, align 8
  %1056 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1055, i64 0, i32 4
  %1057 = load %struct.AVIOContext*, %struct.AVIOContext** %1056, align 8
  %1058 = tail call i32 @avio_r8(%struct.AVIOContext* %1057) #11
  %1059 = load %struct.AVFormatContext*, %struct.AVFormatContext** %1048, align 8
  %1060 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1059, i64 0, i32 4
  %1061 = load %struct.AVIOContext*, %struct.AVIOContext** %1060, align 8
  %1062 = tail call i32 @avio_feof(%struct.AVIOContext* %1061) #11
  %1063 = icmp eq i32 %1062, 0
  br i1 %1063, label %1064, label %1067

1064:                                             ; preds = %1054
  %1065 = bitcast %struct.AVFormatContext** %1048 to i8**
  %1066 = load i8*, i8** %1065, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %1066, i32 24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.126, i64 0, i64 0)) #11
  br label %1069

1067:                                             ; preds = %1054, %1047
  %1068 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i64 0, i32 21
  store i32 1, i32* %1068, align 8
  br label %1069

1069:                                             ; preds = %1045, %35, %21, %1, %1067, %1064
  %1070 = phi i32 [ -541478725, %1067 ], [ -1094995529, %1064 ], [ -1094995529, %1 ], [ %30, %21 ], [ %1046, %1045 ], [ %37, %35 ]
  ret i32 %1070
}

declare i32 @avpriv_packet_list_get(%struct.AVPacketList**, %struct.AVPacketList**, %struct.AVPacket*) local_unnamed_addr #4

declare i8* @av_packet_new_side_data(%struct.AVPacket*, i32, i32) local_unnamed_addr #4

declare void @ff_reduce_index(%struct.AVFormatContext*, i32) local_unnamed_addr #4

declare i32 @av_new_packet(%struct.AVPacket*, i32) local_unnamed_addr #4

declare i32 @avpriv_packet_list_put(%struct.AVPacketList**, %struct.AVPacketList**, %struct.AVPacket*, i32 (%struct.AVPacket*, %struct.AVPacket*)*, i32) local_unnamed_addr #4

declare void @av_packet_unref(%struct.AVPacket*) local_unnamed_addr #4

declare %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef*) local_unnamed_addr #4

declare i8* @av_realloc(i8*, i64) local_unnamed_addr #4

declare void @avpriv_packet_list_free(%struct.AVPacketList**, %struct.AVPacketList**) local_unnamed_addr #4

declare i32 @av_index_search_timestamp(%struct.AVStream*, i64, i32) local_unnamed_addr #4

declare void @ff_update_cur_dts(%struct.AVFormatContext*, %struct.AVStream*, i64) local_unnamed_addr #4

declare i8* @av_default_item_name(i8*) #4

declare i8* @av_asprintf(i8*, ...) local_unnamed_addr #4

declare i32 @av_dict_set_int(%struct.AVDictionary**, i8*, i64, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @strrchr(i8*, i32) local_unnamed_addr #5

declare i8* @av_malloc_array(i64, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #6

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind readnone }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 513210}
!3 = !{i32 0, i32 32}
!4 = !{i32 513368}
!5 = !{!6}
!6 = distinct !{!6, !7, !"get_cue_desc: argument 0"}
!7 = distinct !{!7, !"get_cue_desc"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"get_cue_desc: argument 0"}
!10 = distinct !{!10, !"get_cue_desc"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"get_cue_desc: argument 0"}
!13 = distinct !{!13, !"get_cue_desc"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"get_cue_desc: argument 0"}
!16 = distinct !{!16, !"get_cue_desc"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"get_cue_desc: argument 0"}
!19 = distinct !{!19, !"get_cue_desc"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"get_cue_desc: argument 0"}
!22 = distinct !{!22, !"get_cue_desc"}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
