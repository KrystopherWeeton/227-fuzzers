; ModuleID = '../../third_party/angle/src/libANGLE/renderer/gl/egl/SyncEGL.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/gl/egl/SyncEGL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rx::SyncEGL" = type { %"class.rx::EGLSyncImpl", %"class.rx::FunctionsEGL"*, i32, i8* }
%"class.rx::EGLSyncImpl" = type { i32 (...)** }
%"class.egl::AttributeMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.rx::FunctionsEGL" = type { i32 (...)**, i32, i32, %"struct.rx::FunctionsEGL::EGLDispatchTable"*, i8*, %"class.std::__1::vector" }
%"struct.rx::FunctionsEGL::EGLDispatchTable" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.egl::Display" = type { %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"struct.egl::DisplayState", %"class.rx::DisplayImpl"*, %"class.angle::ObserverBinding", %"class.egl::AttributeMap", %"class.egl::ConfigSet", %"class.std::__1::set.34", %"class.std::__1::set.44", %"class.std::__1::set.54", %"class.std::__1::set.64", i8, i8, %"struct.egl::Caps", %"struct.egl::DisplayExtensions", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.egl::Device"*, %"class.egl::Surface"*, i32, %"class.angle::LoggingAnnotator", %"class.gl::TextureManager"*, %"class.gl::SemaphoreManager"*, %"class.egl::BlobCache", %"class.gl::MemoryProgramCache", i64, i64, %"struct.angle::FrontendFeatures", %"class.std::__1::vector.107", %"class.std::__1::mutex", %"class.std::__1::vector.114", %"class.std::__1::vector.114", %"class.std::__1::mutex", %"class.std::__1::mutex" }
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"struct.egl::DisplayState" = type { i8*, %"class.std::__1::set", %"class.std::__1::vector", %"class.std::__1::vector", i8, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.14" }
%"class.std::__1::__tree.14" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.rx::DisplayImpl" = type opaque
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.egl::ConfigSet" = type { %"class.std::__1::map.23" }
%"class.std::__1::map.23" = type { %"class.std::__1::__tree.24" }
%"class.std::__1::__tree.24" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::set.34" = type { %"class.std::__1::__tree.35" }
%"class.std::__1::__tree.35" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::set.44" = type { %"class.std::__1::__tree.45" }
%"class.std::__1::__tree.45" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::set.54" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::set.64" = type { %"class.std::__1::__tree.65" }
%"class.std::__1::__tree.65" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.egl::Caps" = type { i8, i8 }
%"struct.egl::DisplayExtensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::Device" = type opaque
%"class.egl::Surface" = type opaque
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.gl::TextureManager" = type opaque
%"class.gl::SemaphoreManager" = type opaque
%"class.egl::BlobCache" = type { %"class.std::__1::mutex", %"class.angle::SizedMRUCache", void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)* }
%"class.angle::SizedMRUCache" = type { i64, i64, %"class.angle::base::HashingMRUCache" }
%"class.angle::base::HashingMRUCache" = type { %"class.angle::base::MRUCacheBase" }
%"class.angle::base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::unordered_map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.74" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.92", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79", %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { float }
%"class.gl::MemoryProgramCache" = type <{ %"class.egl::BlobCache"*, i32, [4 x i8] }>
%"struct.angle::FrontendFeatures" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.96" }
%"class.std::__1::map.96" = type { %"class.std::__1::__tree.97" }
%"class.std::__1::__tree.97" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"struct.angle::Feature"**, %"struct.angle::Feature"**, %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.angle::Feature"** }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.angle::ScratchBuffer"*, %"class.angle::ScratchBuffer"*, %"class.std::__1::__compressed_pair.116" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.angle::ScratchBuffer"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.egl::Error" = type { i32, i32, %"class.std::__1::unique_ptr.121" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.gl::Context" = type opaque
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { i32*, i32*, %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN2rx7SyncEGLE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::SyncEGL"*)* @_ZN2rx7SyncEGLD2Ev to i8*), i8* bitcast (void (%"class.rx::SyncEGL"*)* @_ZN2rx7SyncEGLD0Ev to i8*), i8* bitcast (void (%"class.rx::SyncEGL"*, %"class.egl::Display"*)* @_ZN2rx7SyncEGL9onDestroyEPKN3egl7DisplayE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SyncEGL"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)* @_ZN2rx7SyncEGL10initializeEPKN3egl7DisplayEPKN2gl7ContextEj to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SyncEGL"*, %"class.egl::Display"*, %"class.gl::Context"*, i32, i64, i32*)* @_ZN2rx7SyncEGL10clientWaitEPKN3egl7DisplayEPKN2gl7ContextEimPi to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SyncEGL"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)* @_ZN2rx7SyncEGL10serverWaitEPKN3egl7DisplayEPKN2gl7ContextEi to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)* @_ZN2rx11EGLSyncImpl6signalEPKN3egl7DisplayEPKN2gl7ContextEi to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SyncEGL"*, %"class.egl::Display"*, i32*)* @_ZN2rx7SyncEGL9getStatusEPKN3egl7DisplayEPi to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::SyncEGL"*, %"class.egl::Display"*, i32*)* @_ZNK2rx7SyncEGL16dupNativeFenceFDEPKN3egl7DisplayEPi to i8*)] }, align 8
@.str = private unnamed_addr constant [43 x i8] c"eglCreateSync failed to create sync object\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"eglClientWaitSync failed\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"eglWaitSync failed\00", align 1
@.str.3 = private unnamed_addr constant [52 x i8] c"eglGetSyncAttribKHR with EGL_SYNC_STATUS_KHR failed\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"eglDupNativeFenceFDANDROID failed\00", align 1

@_ZN2rx7SyncEGLC1ERKN3egl12AttributeMapEPKNS_12FunctionsEGLE = hidden unnamed_addr alias void (%"class.rx::SyncEGL"*, %"class.egl::AttributeMap"*, %"class.rx::FunctionsEGL"*), void (%"class.rx::SyncEGL"*, %"class.egl::AttributeMap"*, %"class.rx::FunctionsEGL"*)* @_ZN2rx7SyncEGLC2ERKN3egl12AttributeMapEPKNS_12FunctionsEGLE
@_ZN2rx7SyncEGLD1Ev = hidden unnamed_addr alias void (%"class.rx::SyncEGL"*), void (%"class.rx::SyncEGL"*)* @_ZN2rx7SyncEGLD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx7SyncEGLC2ERKN3egl12AttributeMapEPKNS_12FunctionsEGLE(%"class.rx::SyncEGL"* nocapture, %"class.egl::AttributeMap"* dereferenceable(24), %"class.rx::FunctionsEGL"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2rx7SyncEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %0, i64 0, i32 1
  store %"class.rx::FunctionsEGL"* %2, %"class.rx::FunctionsEGL"** %5, align 8
  %6 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %0, i64 0, i32 2
  %7 = tail call i32 @_ZNK3egl12AttributeMap8getAsIntEli(%"class.egl::AttributeMap"* %1, i64 12613, i32 -1) #8
  store i32 %7, i32* %6, align 8
  %8 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %0, i64 0, i32 3
  store i8* null, i8** %8, align 8
  ret void
}

declare i32 @_ZNK3egl12AttributeMap8getAsIntEli(%"class.egl::AttributeMap"*, i64, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx7SyncEGLD2Ev(%"class.rx::SyncEGL"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN2rx7SyncEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx7SyncEGLD0Ev(%"class.rx::SyncEGL"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.rx::SyncEGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx7SyncEGL9onDestroyEPKN3egl7DisplayE(%"class.rx::SyncEGL"* nocapture, %"class.egl::Display"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %0, i64 0, i32 1
  %4 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %3, align 8
  %5 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %0, i64 0, i32 3
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @_ZNK2rx12FunctionsEGL14destroySyncKHREPv(%"class.rx::FunctionsEGL"* %4, i8* %6) #8
  store i8* null, i8** %5, align 8
  ret void
}

declare i32 @_ZNK2rx12FunctionsEGL14destroySyncKHREPv(%"class.rx::FunctionsEGL"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx7SyncEGL10initializeEPKN3egl7DisplayEPKN2gl7ContextEj(%"class.egl::Error"* noalias sret, %"class.rx::SyncEGL"* nocapture, %"class.egl::Display"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector.124", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::vector.124"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %6, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #8
  %12 = icmp eq i32 %4, 12612
  br i1 %12, label %13, label %40

13:                                               ; preds = %5
  %14 = bitcast i32** %10 to i64*
  %15 = bitcast %"class.std::__1::vector.124"* %6 to i64*
  %16 = bitcast i32** %11 to i64*
  %17 = tail call i8* @_Znwm(i64 4) #9
  %18 = bitcast i8* %17 to i32*
  %19 = getelementptr inbounds i8, i8* %17, i64 4
  %20 = ptrtoint i8* %19 to i64
  store i32 12613, i32* %18, align 4
  %21 = ptrtoint i8* %17 to i64
  store i64 %21, i64* %15, align 8
  store i64 %20, i64* %14, align 8
  store i64 %20, i64* %16, align 8
  %22 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %1, i64 0, i32 2
  %23 = bitcast i32** %10 to i64*
  %24 = bitcast %"class.std::__1::vector.124"* %6 to i64*
  %25 = bitcast i32** %11 to i64*
  %26 = tail call i8* @_Znwm(i64 8) #9
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds i8, i8* %26, i64 4
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %26, i64 8
  %31 = ptrtoint i8* %30 to i64
  %32 = load i32, i32* %22, align 4
  store i32 %32, i32* %29, align 4
  %33 = getelementptr inbounds i8, i8* %26, i64 8
  %34 = ptrtoint i8* %33 to i64
  %35 = ptrtoint i8* %26 to i64
  %36 = bitcast i8* %17 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %27, align 4
  store i64 %35, i64* %24, align 8
  store i64 %34, i64* %23, align 8
  store i64 %31, i64* %25, align 8
  tail call void @_ZdlPv(i8* nonnull %17) #9
  %38 = ptrtoint i8* %30 to i64
  %39 = ptrtoint i8* %33 to i64
  br label %40

40:                                               ; preds = %5, %13
  %41 = phi i64 [ %38, %13 ], [ 0, %5 ]
  %42 = phi i64 [ %39, %13 ], [ 0, %5 ]
  %43 = phi i64 [ %34, %13 ], [ 0, %5 ]
  %44 = bitcast i32** %10 to i64*
  %45 = bitcast %"class.std::__1::vector.124"* %6 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %42, %46
  %48 = ashr exact i64 %47, 2
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 4611686018427387903
  br i1 %50, label %51, label %53

51:                                               ; preds = %40
  %52 = bitcast %"class.std::__1::vector.124"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %52) #10
  unreachable

53:                                               ; preds = %40
  %54 = bitcast i32** %11 to i64*
  %55 = sub i64 %41, %46
  %56 = ashr exact i64 %55, 2
  %57 = icmp ult i64 %56, 2305843009213693951
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 1
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 4611686018427387903
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #10
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 4611686018427387903, %53 ]
  %68 = shl i64 %67, 2
  %69 = tail call i8* @_Znwm(i64 %68) #9
  %70 = bitcast i8* %69 to i32*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi i32* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds i32, i32* %73, i64 %48
  %75 = getelementptr inbounds i32, i32* %73, i64 %72
  %76 = ptrtoint i32* %75 to i64
  store i32 12344, i32* %74, align 4
  %77 = getelementptr inbounds i32, i32* %74, i64 1
  %78 = ptrtoint i32* %77 to i64
  %79 = sub i64 %43, %46
  %80 = ashr exact i64 %79, 2
  %81 = sub nsw i64 0, %80
  %82 = getelementptr inbounds i32, i32* %74, i64 %81
  %83 = ptrtoint i32* %82 to i64
  %84 = icmp sgt i64 %79, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %71
  %86 = bitcast i32* %82 to i8*
  %87 = inttoptr i64 %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 %79, i1 false) #8
  br label %88

88:                                               ; preds = %85, %71
  store i64 %83, i64* %45, align 8
  store i64 %78, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %89 = icmp eq i64 %46, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %46 to i8*
  tail call void @_ZdlPv(i8* %91) #9
  br label %92

92:                                               ; preds = %88, %90
  %93 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %1, i64 0, i32 1
  %94 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %93, align 8
  %95 = tail call i8* @_ZNK2rx12FunctionsEGL13createSyncKHREjPKi(%"class.rx::FunctionsEGL"* %94, i32 %4, i32* %82) #8
  %96 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %1, i64 0, i32 3
  store i8* %95, i8** %96, align 8
  %97 = icmp eq i8* %95, null
  br i1 %97, label %98, label %115

98:                                               ; preds = %92
  %99 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %93, align 8
  %100 = tail call i32 @_ZNK2rx12FunctionsEGL8getErrorEv(%"class.rx::FunctionsEGL"* %99) #8
  %101 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #8
  %102 = tail call i8* @_Znwm(i64 48) #9
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %102, i8** %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = bitcast i64* %104 to <2 x i64>*
  store <2 x i64> <i64 42, i64 -9223372036854775760>, <2 x i64>* %105, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %102, i8* align 1 getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i64 42, i1 false) #8
  %106 = getelementptr inbounds i8, i8* %102, i64 42
  store i8 0, i8* %106, align 1
  call void @_ZN3egl5ErrorC1EiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 %100, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #8
  %107 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %98
  %112 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %112) #9
  br label %113

113:                                              ; preds = %98, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #8
  %114 = load i32*, i32** %9, align 8
  br label %120

115:                                              ; preds = %92
  %116 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %116, align 8, !alias.scope !2
  %117 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %117, align 4, !alias.scope !2
  %118 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %119 = bitcast %"class.std::__1::unique_ptr.121"* %118 to i64*
  store i64 0, i64* %119, align 8, !alias.scope !2
  br label %120

120:                                              ; preds = %115, %113
  %121 = phi i32* [ %82, %115 ], [ %114, %113 ]
  %122 = icmp eq i32* %121, null
  br i1 %122, label %127, label %123

123:                                              ; preds = %120
  %124 = ptrtoint i32* %121 to i64
  %125 = bitcast i32** %10 to i64*
  store i64 %124, i64* %125, align 8
  %126 = bitcast i32* %121 to i8*
  call void @_ZdlPv(i8* %126) #9
  br label %127

127:                                              ; preds = %120, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i8* @_ZNK2rx12FunctionsEGL13createSyncKHREjPKi(%"class.rx::FunctionsEGL"*, i32, i32*) local_unnamed_addr #1

declare i32 @_ZNK2rx12FunctionsEGL8getErrorEv(%"class.rx::FunctionsEGL"*) local_unnamed_addr #1

declare void @_ZN3egl5ErrorC1EiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx7SyncEGL10clientWaitEPKN3egl7DisplayEPKN2gl7ContextEimPi(%"class.egl::Error"* noalias sret, %"class.rx::SyncEGL"* nocapture readonly, %"class.egl::Display"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32, i64, i32* nocapture) unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %1, i64 0, i32 1
  %10 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %9, align 8
  %11 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = tail call i32 @_ZNK2rx12FunctionsEGL17clientWaitSyncKHREPvim(%"class.rx::FunctionsEGL"* %10, i8* %12, i32 %4, i64 %5) #8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %7
  %16 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %9, align 8
  %17 = tail call i32 @_ZNK2rx12FunctionsEGL8getErrorEv(%"class.rx::FunctionsEGL"* %16) #8
  %18 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8
  %19 = tail call i8* @_Znwm(i64 32) #9
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %22, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i64 24, i1 false) #8
  %23 = getelementptr inbounds i8, i8* %19, i64 24
  store i8 0, i8* %23, align 1
  call void @_ZN3egl5ErrorC1EiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #8
  %24 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %15
  %29 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %15, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  br label %36

31:                                               ; preds = %7
  store i32 %13, i32* %6, align 4
  %32 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %32, align 8, !alias.scope !7
  %33 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %33, align 4, !alias.scope !7
  %34 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %35 = bitcast %"class.std::__1::unique_ptr.121"* %34 to i64*
  store i64 0, i64* %35, align 8, !alias.scope !7
  br label %36

36:                                               ; preds = %31, %30
  ret void
}

declare i32 @_ZNK2rx12FunctionsEGL17clientWaitSyncKHREPvim(%"class.rx::FunctionsEGL"*, i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx7SyncEGL10serverWaitEPKN3egl7DisplayEPKN2gl7ContextEi(%"class.egl::Error"* noalias sret, %"class.rx::SyncEGL"* nocapture readonly, %"class.egl::Display"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %1, i64 0, i32 1
  %8 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i32 @_ZNK2rx12FunctionsEGL11waitSyncKHREPvi(%"class.rx::FunctionsEGL"* %8, i8* %10, i32 %4) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %26

13:                                               ; preds = %5
  %14 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %7, align 8
  %15 = tail call i32 @_ZNK2rx12FunctionsEGL8getErrorEv(%"class.rx::FunctionsEGL"* %14) #8
  %16 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8
  %17 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  store i8 18, i8* %18, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18, i1 false) #8
  %19 = getelementptr inbounds i8, i8* %16, i64 18
  store i8 0, i8* %19, align 2
  call void @_ZN3egl5ErrorC1EiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #8
  %20 = load i8, i8* %18, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %13, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8
  br label %31

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %27, align 8, !alias.scope !12
  %28 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %28, align 4, !alias.scope !12
  %29 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %30 = bitcast %"class.std::__1::unique_ptr.121"* %29 to i64*
  store i64 0, i64* %30, align 8, !alias.scope !12
  br label %31

31:                                               ; preds = %26, %25
  ret void
}

declare i32 @_ZNK2rx12FunctionsEGL11waitSyncKHREPvi(%"class.rx::FunctionsEGL"*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx7SyncEGL9getStatusEPKN3egl7DisplayEPi(%"class.egl::Error"* noalias sret, %"class.rx::SyncEGL"* nocapture readonly, %"class.egl::Display"* nocapture readnone, i32*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %1, i64 0, i32 1
  %7 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @_ZNK2rx12FunctionsEGL16getSyncAttribKHREPviPi(%"class.rx::FunctionsEGL"* %7, i8* %9, i32 12529, i32* %3) #8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %4
  %13 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %6, align 8
  %14 = tail call i32 @_ZNK2rx12FunctionsEGL8getErrorEv(%"class.rx::FunctionsEGL"* %13) #8
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = tail call i8* @_Znwm(i64 64) #9
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.3, i64 0, i64 0), i64 51, i1 false) #8
  %20 = getelementptr inbounds i8, i8* %16, i64 51
  store i8 0, i8* %20, align 1
  call void @_ZN3egl5ErrorC1EiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #8
  %21 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %12
  %26 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %26) #9
  br label %27

27:                                               ; preds = %12, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  br label %33

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %29, align 8, !alias.scope !17
  %30 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %30, align 4, !alias.scope !17
  %31 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %32 = bitcast %"class.std::__1::unique_ptr.121"* %31 to i64*
  store i64 0, i64* %32, align 8, !alias.scope !17
  br label %33

33:                                               ; preds = %28, %27
  ret void
}

declare i32 @_ZNK2rx12FunctionsEGL16getSyncAttribKHREPviPi(%"class.rx::FunctionsEGL"*, i8*, i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx7SyncEGL16dupNativeFenceFDEPKN3egl7DisplayEPi(%"class.egl::Error"* noalias sret, %"class.rx::SyncEGL"* nocapture readonly, %"class.egl::Display"* nocapture readnone, i32* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %1, i64 0, i32 1
  %7 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::SyncEGL", %"class.rx::SyncEGL"* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @_ZNK2rx12FunctionsEGL23dupNativeFenceFDANDROIDEPv(%"class.rx::FunctionsEGL"* %7, i8* %9) #8
  store i32 %10, i32* %3, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %28

12:                                               ; preds = %4
  %13 = load %"class.rx::FunctionsEGL"*, %"class.rx::FunctionsEGL"** %6, align 8
  %14 = tail call i32 @_ZNK2rx12FunctionsEGL8getErrorEv(%"class.rx::FunctionsEGL"* %13) #8
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = tail call i8* @_Znwm(i64 48) #9
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i64 33, i1 false) #8
  %20 = getelementptr inbounds i8, i8* %16, i64 33
  store i8 0, i8* %20, align 1
  call void @_ZN3egl5ErrorC1EiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #8
  %21 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %12
  %26 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %26) #9
  br label %27

27:                                               ; preds = %12, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  br label %33

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %29, align 8, !alias.scope !22
  %30 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %30, align 4, !alias.scope !22
  %31 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %32 = bitcast %"class.std::__1::unique_ptr.121"* %31 to i64*
  store i64 0, i64* %32, align 8, !alias.scope !22
  br label %33

33:                                               ; preds = %28, %27
  ret void
}

declare i32 @_ZNK2rx12FunctionsEGL23dupNativeFenceFDANDROIDEPv(%"class.rx::FunctionsEGL"*, i8*) local_unnamed_addr #1

declare void @_ZN2rx11EGLSyncImpl6signalEPKN3egl7DisplayEPKN2gl7ContextEi(%"class.egl::Error"* sret, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32) unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!4 = distinct !{!4, !"_ZN3egl5Error7NoErrorEv"}
!5 = distinct !{!5, !6, !"_ZN3egl7NoErrorEv: argument 0"}
!6 = distinct !{!6, !"_ZN3egl7NoErrorEv"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!9 = distinct !{!9, !"_ZN3egl5Error7NoErrorEv"}
!10 = distinct !{!10, !11, !"_ZN3egl7NoErrorEv: argument 0"}
!11 = distinct !{!11, !"_ZN3egl7NoErrorEv"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!14 = distinct !{!14, !"_ZN3egl5Error7NoErrorEv"}
!15 = distinct !{!15, !16, !"_ZN3egl7NoErrorEv: argument 0"}
!16 = distinct !{!16, !"_ZN3egl7NoErrorEv"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!19 = distinct !{!19, !"_ZN3egl5Error7NoErrorEv"}
!20 = distinct !{!20, !21, !"_ZN3egl7NoErrorEv: argument 0"}
!21 = distinct !{!21, !"_ZN3egl7NoErrorEv"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!24 = distinct !{!24, !"_ZN3egl5Error7NoErrorEv"}
!25 = distinct !{!25, !26, !"_ZN3egl7NoErrorEv: argument 0"}
!26 = distinct !{!26, !"_ZN3egl7NoErrorEv"}
