; ModuleID = '../../third_party/blink/renderer/modules/background_fetch/background_fetch_type_converters.cc'
source_filename = "../../third_party/blink/renderer/modules/background_fetch/background_fetch_type_converters.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::BackgroundFetchOptions"* }
%"class.blink::mojom::blink::BackgroundFetchOptions" = type { %"class.WTF::Vector.3", i64, %"class.WTF::String" }
%"class.WTF::Vector.3" = type { %"class.WTF::VectorBuffer.4" }
%"class.WTF::VectorBuffer.4" = type { %"class.WTF::VectorBufferBase.5" }
%"class.WTF::VectorBufferBase.5" = type { %"class.mojo::StructPtr.6"*, i32, i32 }
%"class.mojo::StructPtr.6" = type { %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::mojom::blink::ManifestImageResource"* }
%"class.blink::mojom::blink::ManifestImageResource" = type { %"class.blink::KURL", %"class.WTF::String", %"class.WTF::Vector.14", %"class.WTF::Vector.18" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.10" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::KURL"* }
%"class.WTF::Vector.14" = type { %"class.WTF::VectorBuffer.15" }
%"class.WTF::VectorBuffer.15" = type { %"class.WTF::VectorBufferBase.16" }
%"class.WTF::VectorBufferBase.16" = type { %"class.gfx::Size"*, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { i32*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::BackgroundFetchOptions" = type { %"class.blink::BackgroundFetchUIOptions", i8, i64 }
%"class.blink::BackgroundFetchUIOptions" = type { %"class.blink::IDLDictionaryBase", i8, %"class.blink::HeapVector", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ManifestImageResource"* }
%"class.blink::ManifestImageResource" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.2 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEPKcv = private unnamed_addr constant [107 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<blink::mojom::blink::ManifestImageResource>]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink22BackgroundFetchOptionsEEEPKNS2_22BackgroundFetchOptionsEE7ConvertES9_(%"class.mojo::StructPtr"* noalias nocapture sret, %"class.blink::BackgroundFetchOptions"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.3", align 8
  %4 = alloca %"class.mojo::StructPtr.6", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = tail call i8* @_Znwm(i64 32) #9, !noalias !2
  %8 = bitcast i8* %7 to %"class.blink::mojom::blink::BackgroundFetchOptions"*
  tail call void @_ZN5blink5mojom5blink22BackgroundFetchOptionsC1Ev(%"class.blink::mojom::blink::BackgroundFetchOptions"* nonnull %8) #10, !noalias !2
  %9 = ptrtoint i8* %7 to i64
  %10 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %9, i64* %10, align 8, !alias.scope !2
  %11 = bitcast %"class.WTF::Vector.3"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %3, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #10
  %15 = getelementptr inbounds %"class.blink::BackgroundFetchOptions", %"class.blink::BackgroundFetchOptions"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %2
  %19 = zext i32 %16 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEmm(i64 %19) #10
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEPKcv, i64 0, i64 0)) #10
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.3"* %3 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %13, align 8
  %26 = load i32, i32* %15, align 4
  %27 = getelementptr inbounds %"class.blink::BackgroundFetchOptions", %"class.blink::BackgroundFetchOptions"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::Member"*, %"class.blink::Member"** %27, align 8
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %28, i64 %29
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %2, %18
  %33 = phi i64 [ %22, %18 ], [ 0, %2 ]
  %34 = bitcast %"class.WTF::Vector.3"* %3 to i64*
  br label %42

35:                                               ; preds = %18
  %36 = bitcast %"class.mojo::StructPtr.6"* %4 to i8*
  %37 = bitcast %"class.mojo::StructPtr.6"* %4 to i64*
  %38 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %63

39:                                               ; preds = %84
  %40 = bitcast %"class.WTF::Vector.3"* %3 to i64*
  %41 = load i64, i64* %40, align 8
  br label %42

42:                                               ; preds = %32, %39
  %43 = phi i64* [ %34, %32 ], [ %40, %39 ]
  %44 = phi i64 [ %33, %32 ], [ %41, %39 ]
  %45 = bitcast i8* %7 to i64*
  %46 = load i64, i64* %45, align 8
  store atomic i64 %46, i64* %43 monotonic, align 8
  store atomic i64 %44, i64* %45 monotonic, align 8
  %47 = getelementptr inbounds i8, i8* %7, i64 8
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = load i32, i32* %13, align 8
  store i32 %50, i32* %48, align 4
  store i32 %49, i32* %13, align 8
  %51 = getelementptr inbounds i8, i8* %7, i64 12
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = load i32, i32* %14, align 4
  store i32 %54, i32* %52, align 4
  store i32 %53, i32* %14, align 4
  %55 = getelementptr inbounds %"class.blink::BackgroundFetchOptions", %"class.blink::BackgroundFetchOptions"* %1, i64 0, i32 2
  %56 = load i64, i64* %55, align 8
  %57 = load %"class.blink::mojom::blink::BackgroundFetchOptions"*, %"class.blink::mojom::blink::BackgroundFetchOptions"** %6, align 8
  %58 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchOptions", %"class.blink::mojom::blink::BackgroundFetchOptions"* %57, i64 0, i32 1
  store i64 %56, i64* %58, align 8
  %59 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #10
  %60 = getelementptr inbounds %"class.blink::BackgroundFetchOptions", %"class.blink::BackgroundFetchOptions"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %105, label %87

63:                                               ; preds = %35, %84
  %64 = phi %"class.blink::Member"* [ %28, %35 ], [ %85, %84 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  %65 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::ManifestImageResource"*, %"class.blink::ManifestImageResource"** %65, align 8
  call void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEPNS2_21ManifestImageResourceEE7ConvertEPKS7_(%"class.mojo::StructPtr.6"* nonnull sret %4, %"class.blink::ManifestImageResource"* %66) #10
  %67 = load i32, i32* %14, align 4
  %68 = load i32, i32* %13, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %79, label %70, !prof !5

70:                                               ; preds = %63
  %71 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %12, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %71, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.6"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %75, align 8
  %76 = load i64, i64* %37, align 8
  store i64 %76, i64* %74, align 8
  %77 = load i32, i32* %14, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %14, align 4
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %38, align 8
  br label %84

79:                                               ; preds = %63
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.3"* nonnull %3, %"class.mojo::StructPtr.6"* nonnull dereferenceable(8) %4) #10
  %80 = load %"class.blink::mojom::blink::ManifestImageResource"*, %"class.blink::mojom::blink::ManifestImageResource"** %38, align 8
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %38, align 8
  %81 = icmp eq %"class.blink::mojom::blink::ManifestImageResource"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  call void @_ZN5blink5mojom5blink21ManifestImageResourceD1Ev(%"class.blink::mojom::blink::ManifestImageResource"* nonnull %80) #10
  %83 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %80, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %70, %79, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  %85 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %64, i64 1
  %86 = icmp eq %"class.blink::Member"* %85, %30
  br i1 %86, label %39, label %63

87:                                               ; preds = %42
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %106

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i33
  %97 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #10
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !5

102:                                              ; preds = %93
  call void @llvm.trap() #10
  unreachable

103:                                              ; preds = %93
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %94, align 4
  br label %106

105:                                              ; preds = %42
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #10
  br label %106

106:                                              ; preds = %103, %87, %105
  %107 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchOptions", %"class.blink::mojom::blink::BackgroundFetchOptions"* %57, i64 0, i32 2
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %128, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #10
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !5

125:                                              ; preds = %116
  call void @llvm.trap() #10
  unreachable

126:                                              ; preds = %116
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %117, align 4
  br label %128

128:                                              ; preds = %126, %111, %106
  %129 = ptrtoint %"class.WTF::StringImpl"* %109 to i64
  %130 = bitcast %"class.WTF::String"* %107 to i64*
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %107, i64 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  store i64 %129, i64* %130, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #10
  br label %147

147:                                              ; preds = %128, %143, %146
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #10
  br label %163

163:                                              ; preds = %147, %159, %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #10
  %164 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %12, align 8
  %165 = icmp eq %"class.mojo::StructPtr.6"* %164, null
  br i1 %165, label %188, label %166, !prof !6

166:                                              ; preds = %163
  %167 = bitcast %"class.mojo::StructPtr.6"* %164 to i8*
  %168 = load i32, i32* %14, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %186, label %170, !prof !5

170:                                              ; preds = %166
  %171 = zext i32 %168 to i64
  %172 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %164, i64 %171
  br label %173

173:                                              ; preds = %180, %170
  %174 = phi %"class.mojo::StructPtr.6"* [ %181, %180 ], [ %164, %170 ]
  %175 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %174, i64 0, i32 0, i32 0, i32 0, i32 0
  %176 = load %"class.blink::mojom::blink::ManifestImageResource"*, %"class.blink::mojom::blink::ManifestImageResource"** %175, align 8
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %175, align 8
  %177 = icmp eq %"class.blink::mojom::blink::ManifestImageResource"* %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %173
  call void @_ZN5blink5mojom5blink21ManifestImageResourceD1Ev(%"class.blink::mojom::blink::ManifestImageResource"* nonnull %176) #10
  %179 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %176, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %179) #9
  br label %180

180:                                              ; preds = %178, %173
  %181 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %174, i64 1
  %182 = icmp eq %"class.mojo::StructPtr.6"* %181, %172
  br i1 %182, label %183, label %173

183:                                              ; preds = %180
  store i32 0, i32* %14, align 4
  %184 = bitcast %"class.WTF::Vector.3"* %3 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %186

186:                                              ; preds = %183, %166
  %187 = phi i8* [ %185, %183 ], [ %167, %166 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %187) #10
  store %"class.mojo::StructPtr.6"* null, %"class.mojo::StructPtr.6"** %12, align 8
  br label %188

188:                                              ; preds = %163, %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink21ManifestImageResourceD1Ev(%"class.blink::mojom::blink::ManifestImageResource"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #6

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN5blink5mojom5blink22BackgroundFetchOptionsC1Ev(%"class.blink::mojom::blink::BackgroundFetchOptions"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #6

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #6

declare void @_ZN4mojo13TypeConverterINS_9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEPNS2_21ManifestImageResourceEE7ConvertEPKS7_(%"class.mojo::StructPtr.6"* sret, %"class.blink::ManifestImageResource"*) local_unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.3"*, %"class.mojo::StructPtr.6"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.6"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.6"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !6

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.6"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.6"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3"* %0, i32 %22) #10
  %36 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.6"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.6"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !6

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.6"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.6"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3"* %0, i32 %50) #10
  %64 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.6"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.6"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.6"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.6"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.6"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.6"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.6"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.6"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.6"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.6"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !7

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.6"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.6"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.6"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.6"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.6"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.6"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.6"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.6"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.6"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.6"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.6"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.6"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.6"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #10
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEmm(i64 %73) #10
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEPKcv, i64 0, i64 0)) #10
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.6"*, %"class.mojo::StructPtr.6"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.6"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.6"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.6"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.6"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.6"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.6"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !9

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.6"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.6"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.6"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.6"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.6"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.6"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.6"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.6"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.6"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.6"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.6"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.6"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.6", %"class.mojo::StructPtr.6"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.6"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.3"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #10
  %149 = bitcast %"class.WTF::Vector.3"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink5mojom5blink22BackgroundFetchOptions3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink5mojom5blink22BackgroundFetchOptions3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !8}
