; ModuleID = '../../third_party/blink/renderer/core/layout/hit_test_result.cc'
source_filename = "../../third_party/blink/renderer/core/layout/hit_test_result.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1849", i64 }
%"class.std::__1::vector.1849" = type { %"class.std::__1::__vector_base.1850" }
%"class.std::__1::__vector_base.1850" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1851" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1851" = type { %"struct.std::__1::__compressed_pair_elem.1852" }
%"struct.std::__1::__compressed_pair_elem.1852" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.782", i8, %"class.blink::Member.1883", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1856", [4 x i8] }>
%"class.WTF::RefCounted.1856" = type { %"class.base::RefCounted.1857" }
%"class.base::RefCounted.1857" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3442 }
%class.scoped_refptr.3442 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3443", %"class.WTF::Vector.630", %"class.WTF::Vector.3445", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3443" = type { %"class.base::RefCounted.3444" }
%"class.base::RefCounted.3444" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.3445" = type { %"class.WTF::VectorBuffer.3446" }
%"class.WTF::VectorBuffer.3446" = type { %"class.WTF::VectorBufferBase.3447" }
%"class.WTF::VectorBufferBase.3447" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3448 }
%union.anon.3448 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.771", %"class.WTF::Vector.771", i8, i32, %"class.blink::Member.1004", %"class.blink::Member.1006", %"class.blink::Member.1008", %"class.blink::Member.1010", %"class.blink::Member.1012", %"class.blink::Member.1014", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1022", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1028", %"class.blink::Member.1030", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1033", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.1056", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.1065", double, double, i64, i64, %"class.blink::HeapHashSet.1067", %"class.blink::HeapHashSet.1074", i16, i8, %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::TextLinkColors", %"class.blink::Member.1411", i8, [7 x i8], %"class.blink::HeapHashMap.1413", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1420", %"class.blink::Member.1425", %"class.blink::Member.1427", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1429", %"class.blink::HeapVector.1431", %"class.std::__1::unique_ptr.1439", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1445", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1458", %"class.WTF::Vector.1460", i8, i8, %"class.std::__1::unique_ptr.1465", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1471", i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::DocumentTiming", %"class.blink::Member.1479", i8, i32, %"class.blink::Member.1481", %"class.blink::Member.1483", %"class.blink::Member.1485", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::Member.1487", %"class.WTF::HashMap.1489", %"class.blink::Member.1494", %"class.blink::Member.1496", %"class.blink::Member.1498", %"class.blink::Member.1500", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapHashSet.1502", i8, i32, %"class.blink::Member.1509", %"class.blink::Member.1511", i32, %"class.blink::Member.1513", %"class.blink::Member.1515", %"class.blink::Member.1517", %"class.std::__1::unique_ptr.1519", i64, %"class.std::__1::unique_ptr.1525", i32, i32, %"class.blink::Member.1536", %"class.blink::Member.1538", %"class.blink::Member.1540", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1542", %"class.WTF::Vector.1566", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1571", %"class.blink::Member.1578", %"class.std::__1::unique_ptr.1580", %"class.blink::Member.1586", i8, i8, %"class.WTF::String", %"class.blink::Member.1588", i8, [7 x i8], %"class.blink::HeapHashMap.1590", %"class.blink::HeapObserverSet", %"class.blink::Member.1604", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1606", i32, i8, i8, %"class.blink::WeakMember.1608", %"class.blink::Member.1609" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.997" }
%"class.blink::HeapHashMap.997" = type { %"class.WTF::HashMap.1000" }
%"class.WTF::HashMap.1000" = type { %"class.WTF::HashTable.1001" }
%"class.WTF::HashTable.1001" = type <{ %"struct.WTF::KeyValuePair.1003"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1003" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.771" = type { %"class.WTF::VectorBuffer.772" }
%"class.WTF::VectorBuffer.772" = type { %"class.WTF::VectorBufferBase.773" }
%"class.WTF::VectorBufferBase.773" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.774 }
%class.scoped_refptr.774 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.775", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.775" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1633", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1700", i32, i8, [3 x i8], %"class.blink::HeapVector.1702", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1710", %"class.blink::Member.1712", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1721", %"class.blink::Member.1844", %"class.blink::Member.1846", i8, [7 x i8] }>
%"class.blink::Supplementable.1633" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1634" }
%"class.blink::HeapHashMap.1634" = type { %"class.WTF::HashMap.1637" }
%"class.WTF::HashMap.1637" = type { %"class.WTF::HashTable.1638" }
%"class.WTF::HashTable.1638" = type <{ %"struct.WTF::KeyValuePair.1640"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1640" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1649" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1641" }
%"class.blink::HeapObserverSet.1641" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1642" }
%"class.blink::HeapHashSet.1642" = type { %"class.WTF::HashSet.1645" }
%"class.WTF::HashSet.1645" = type { %"class.WTF::HashTable.1646" }
%"class.WTF::HashTable.1646" = type <{ %"class.blink::WeakMember.1648"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1648" = type opaque
%"class.blink::Supplementable.1649" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1650" }
%"class.blink::HeapHashMap.1650" = type { %"class.WTF::HashMap.1653" }
%"class.WTF::HashMap.1653" = type { %"class.WTF::HashTable.1654" }
%"class.WTF::HashTable.1654" = type <{ %"struct.WTF::KeyValuePair.1656"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1656" = type { i8*, %"class.blink::Member.3433" }
%"class.blink::Member.3433" = type { %"class.blink::MemberBase.3434" }
%"class.blink::MemberBase.3434" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3435" }
%"class.blink::Member.3435" = type { %"class.blink::MemberBase.3436" }
%"class.blink::MemberBase.3436" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1657, %"class.std::__1::unique_ptr.1666", %"class.std::__1::unique_ptr.1666", %"class.std::__1::unique_ptr.1690", %"class.std::__1::unique_ptr.1690", %"class.blink::Member.1006", i32, [4 x i8], %"class.WTF::HashSet.1696", i32, i32 }
%class.scoped_refptr.1657 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1658", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1660", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1665 }
%"class.WTF::RefCounted.1658" = type { %"class.base::RefCounted.1659" }
%"class.base::RefCounted.1659" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1660" = type { %"class.absl::optional_internal::optional_data.1661" }
%"class.absl::optional_internal::optional_data.1661" = type { %"class.absl::optional_internal::optional_data_base.1662" }
%"class.absl::optional_internal::optional_data_base.1662" = type { %"class.absl::optional_internal::optional_data_dtor_base.1663" }
%"class.absl::optional_internal::optional_data_dtor_base.1663" = type { i8, %union.anon.1664 }
%union.anon.1664 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1665 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1666" = type { %"class.std::__1::__compressed_pair.1667" }
%"class.std::__1::__compressed_pair.1667" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"struct.std::__1::__compressed_pair_elem.1668" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1677", %"class.std::__1::map.1686"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1660" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1669", %"class.std::__1::__compressed_pair.1674" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1669" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"struct.std::__1::__compressed_pair_elem.1670" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1674" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1677" = type { %"class.std::__1::__tree.1678" }
%"class.std::__1::__tree.1678" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1679", %"class.std::__1::__compressed_pair.1683" }
%"class.std::__1::__compressed_pair.1679" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"class.std::__1::__compressed_pair.1683" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1686" = type opaque
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1696" = type { %"class.WTF::HashTable.1697" }
%"class.WTF::HashTable.1697" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1700" = type { %"class.blink::MemberBase.1701" }
%"class.blink::MemberBase.1701" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1702" = type { %"class.WTF::Vector.1705" }
%"class.WTF::Vector.1705" = type { %"class.WTF::VectorBuffer.1706" }
%"class.WTF::VectorBuffer.1706" = type { %"class.WTF::VectorBufferBase.1707" }
%"class.WTF::VectorBufferBase.1707" = type { %"class.blink::Member.1708"*, i32, i32 }
%"class.blink::Member.1708" = type opaque
%"class.blink::Member.1710" = type { %"class.blink::MemberBase.1711" }
%"class.blink::MemberBase.1711" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1712" = type { %"class.blink::MemberBase.1713" }
%"class.blink::MemberBase.1713" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1714", i32, i32 }
%"class.blink::HeapHashMap.1714" = type { %"class.WTF::HashMap.1717" }
%"class.WTF::HashMap.1717" = type { %"class.WTF::HashTable.1718" }
%"class.WTF::HashTable.1718" = type <{ %"struct.WTF::KeyValuePair.1720"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1720" = type opaque
%"class.std::__1::unique_ptr.1721" = type { %"class.std::__1::__compressed_pair.1722" }
%"class.std::__1::__compressed_pair.1722" = type { %"struct.std::__1::__compressed_pair_elem.1723" }
%"struct.std::__1::__compressed_pair_elem.1723" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1724" }
%"class.std::__1::unique_ptr.1724" = type { %"class.std::__1::__compressed_pair.1725" }
%"class.std::__1::__compressed_pair.1725" = type { %"struct.std::__1::__compressed_pair_elem.1726" }
%"struct.std::__1::__compressed_pair_elem.1726" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1727" }
%"class.WTF::Vector.1727" = type { %"class.WTF::VectorBuffer.1728" }
%"class.WTF::VectorBuffer.1728" = type { %"class.WTF::VectorBufferBase.1729" }
%"class.WTF::VectorBufferBase.1729" = type { %"class.mojo::StructPtr.1730"*, i32, i32 }
%"class.mojo::StructPtr.1730" = type { %"class.std::__1::unique_ptr.1731" }
%"class.std::__1::unique_ptr.1731" = type { %"class.std::__1::__compressed_pair.1732" }
%"class.std::__1::__compressed_pair.1732" = type { %"struct.std::__1::__compressed_pair_elem.1733" }
%"struct.std::__1::__compressed_pair_elem.1733" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1734", %"class.WTF::HashMap.1741", %"class.WTF::HashMap.1746", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1751", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1734" = type { %"class.std::__1::unique_ptr.1735" }
%"class.std::__1::unique_ptr.1735" = type { %"class.std::__1::__compressed_pair.1736" }
%"class.std::__1::__compressed_pair.1736" = type { %"struct.std::__1::__compressed_pair_elem.1737" }
%"struct.std::__1::__compressed_pair_elem.1737" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1741" = type { %"class.WTF::HashTable.1742" }
%"class.WTF::HashTable.1742" = type <{ %"struct.WTF::KeyValuePair.1745"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1745" = type opaque
%"class.WTF::HashMap.1746" = type { %"class.WTF::HashTable.1747" }
%"class.WTF::HashTable.1747" = type <{ %"struct.WTF::KeyValuePair.1750"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1750" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1751" = type { %"class.std::__1::unique_ptr.1752" }
%"class.std::__1::unique_ptr.1752" = type { %"class.std::__1::__compressed_pair.1753" }
%"class.std::__1::__compressed_pair.1753" = type { %"struct.std::__1::__compressed_pair_elem.1754" }
%"struct.std::__1::__compressed_pair_elem.1754" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1835" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1766", i32 }>
%"class.std::__1::unique_ptr.1766" = type { %"class.std::__1::__compressed_pair.1767" }
%"class.std::__1::__compressed_pair.1767" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"struct.std::__1::__compressed_pair_elem.1768" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1769", %"class.absl::optional.1770", %"class.absl::optional.1775", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1788", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1810", %"class.std::__1::map.1821", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1830", i8, %class.scoped_refptr.1780, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1831" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1769" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1770" = type { %"class.absl::optional_internal::optional_data.1771" }
%"class.absl::optional_internal::optional_data.1771" = type { %"class.absl::optional_internal::optional_data_base.1772" }
%"class.absl::optional_internal::optional_data_base.1772" = type { %"class.absl::optional_internal::optional_data_dtor_base.1773" }
%"class.absl::optional_internal::optional_data_dtor_base.1773" = type { i8, %union.anon.1774 }
%union.anon.1774 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1775" = type { %"class.absl::optional_internal::optional_data.1776" }
%"class.absl::optional_internal::optional_data.1776" = type { %"class.absl::optional_internal::optional_data_base.1777" }
%"class.absl::optional_internal::optional_data_base.1777" = type { %"class.absl::optional_internal::optional_data_dtor_base.1778" }
%"class.absl::optional_internal::optional_data_dtor_base.1778" = type { i8, %union.anon.1779 }
%union.anon.1779 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1780, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1781" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1781" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.993 }
%class.scoped_refptr.993 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1786 }
%class.scoped_refptr.1786 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1848", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1780, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1848" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1787 }
%class.scoped_refptr.1787 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1788" = type { %"class.std::__1::__compressed_pair.1789" }
%"class.std::__1::__compressed_pair.1789" = type { %"struct.std::__1::__compressed_pair_elem.1790" }
%"struct.std::__1::__compressed_pair_elem.1790" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1791", %class.scoped_refptr.1792 }
%"class.base::RepeatingCallback.1791" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1792 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1793", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1793" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1797", %"class.std::__1::unique_ptr.1803", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1809" }
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1803" = type { %"class.std::__1::__compressed_pair.1804" }
%"class.std::__1::__compressed_pair.1804" = type { %"struct.std::__1::__compressed_pair_elem.1805" }
%"struct.std::__1::__compressed_pair_elem.1805" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1809" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1810" = type { %"class.std::__1::__tree.1811" }
%"class.std::__1::__tree.1811" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1812", %"class.std::__1::__compressed_pair.1816" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"class.std::__1::__compressed_pair.1816" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1821" = type { %"class.std::__1::__tree.1822" }
%"class.std::__1::__tree.1822" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1823", %"class.std::__1::__compressed_pair.1827" }
%"class.std::__1::__compressed_pair.1823" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1830" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1780 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.779" }>
%"class.base::RefCountedThreadSafe.779" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1831" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1835" = type { %"class.std::__1::__compressed_pair.1836" }
%"class.std::__1::__compressed_pair.1836" = type { %"struct.std::__1::__compressed_pair_elem.1837" }
%"struct.std::__1::__compressed_pair_elem.1837" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1844" = type { %"class.blink::MemberBase.1845" }
%"class.blink::MemberBase.1845" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1846" = type { %"class.blink::MemberBase.1847" }
%"class.blink::MemberBase.1847" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1016" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.blink::KURL"* }
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1032 }
%class.scoped_refptr.1032 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1036 }
%class.scoped_refptr.1036 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1037", i32, i32, %"class.blink::Persistent.1039" }
%"class.WTF::RefCounted.1037" = type { %"class.base::RefCounted.1038" }
%"class.base::RefCounted.1038" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1039" = type { %"class.blink::PersistentBase.1040" }
%"class.blink::PersistentBase.1040" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1043" }
%"class.blink::HeapHashMap.1043" = type { %"class.WTF::HashMap.1046" }
%"class.WTF::HashMap.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"struct.WTF::KeyValuePair.1049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1049" = type { %"class.blink::WeakMember.1050", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1058" }
%"class.blink::HeapHashMap.1058" = type { %"class.WTF::HashMap.1061" }
%"class.WTF::HashMap.1061" = type { %"class.WTF::HashTable.1062" }
%"class.WTF::HashTable.1062" = type <{ %"struct.WTF::KeyValuePair.1064"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1064" = type opaque
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type { %"class.blink::WeakMember.1055", %"class.blink::WeakMember.1876", %"class.blink::Member.318", %"class.blink::HeapHashSet.1877", %"class.blink::WeakMember.1876" }
%"class.blink::WeakMember.1055" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1877" = type { %"class.WTF::HashSet.1880" }
%"class.WTF::HashSet.1880" = type { %"class.WTF::HashTable.1881" }
%"class.WTF::HashTable.1881" = type <{ %"class.blink::WeakMember.1876"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1876" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.blink::HeapHashSet.1067" = type { %"class.WTF::HashSet.1070" }
%"class.WTF::HashSet.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"class.blink::WeakMember.1073"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1073" = type opaque
%"class.blink::HeapHashSet.1074" = type { %"class.WTF::HashSet.1077" }
%"class.WTF::HashSet.1077" = type { %"class.WTF::HashTable.1078" }
%"class.WTF::HashTable.1078" = type <{ %"class.blink::WeakMember.1080"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1080" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.1087", %"class.blink::Member.1114", %"class.blink::HeapHashMap.1116", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1123", %"class.blink::HeapHashSet.1123", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1129", %"class.blink::Member.1141", %"class.blink::Member.1170", %"class.blink::Member.1172", %"class.blink::Member.1178", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1340", %"class.blink::Member.1346", %"class.blink::HeapHashMap.1348", %"class.blink::HeapHashMap.1355", %"class.std::__1::unique_ptr.1362", i32, %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1099", %"class.blink::HeapHashSet.1376", %"class.blink::HeapHashMap.1383", %"class.blink::Member.1390", %"class.blink::HeapHashMap.1392", %class.scoped_refptr.1399, %class.scoped_refptr.259, %"class.blink::Member.1304", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1400", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1091", %"class.blink::HeapVector.1099", i8 }>
%"class.blink::HeapVector.1091" = type { %"class.WTF::Vector.1094" }
%"class.WTF::Vector.1094" = type { %"class.WTF::VectorBuffer.1095" }
%"class.WTF::VectorBuffer.1095" = type { %"class.WTF::VectorBufferBase.1096" }
%"class.WTF::VectorBufferBase.1096" = type { %"class.blink::Member.1097"*, i32, i32 }
%"class.blink::Member.1097" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1110", %"class.blink::Member.1112", %"class.blink::Member.1112", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1110" = type <{ %"class.blink::Member.1112"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1112", %"class.blink::Member.1112" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1116" = type { %"class.WTF::HashMap.1119" }
%"class.WTF::HashMap.1119" = type { %"class.WTF::HashTable.1120" }
%"class.WTF::HashTable.1120" = type <{ %"struct.WTF::KeyValuePair.1122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1122" = type opaque
%"class.blink::HeapHashSet.1123" = type { %"class.WTF::HashSet.1126" }
%"class.WTF::HashSet.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1131", %"class.blink::Member.1133" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1137", %"class.blink::Member.1139" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1624", %"class.blink::Member.1133", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.911] }
%"class.blink::HeapVector.1624" = type { %"class.WTF::Vector.1627" }
%"class.WTF::Vector.1627" = type { %"class.WTF::VectorBuffer.1628" }
%"class.WTF::VectorBuffer.1628" = type { %"class.WTF::VectorBufferBase.1629" }
%"class.WTF::VectorBufferBase.1629" = type { %"class.blink::Member.1139"*, i32, i32 }
%class.sk_sp.911 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.912, i32, %"class.absl::optional.913", i8, i32 }
%class.sk_sp.912 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.913" = type { %"class.absl::optional_internal::optional_data.914" }
%"class.absl::optional_internal::optional_data.914" = type { %"class.absl::optional_internal::optional_data_base.915" }
%"class.absl::optional_internal::optional_data_base.915" = type { %"class.absl::optional_internal::optional_data_dtor_base.916" }
%"class.absl::optional_internal::optional_data_dtor_base.916" = type { i8, %union.anon.917 }
%union.anon.917 = type { %struct.SkRect }
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1114", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1145" }
%"class.blink::HeapHashMap.1145" = type { %"class.WTF::HashMap.1148" }
%"class.WTF::HashMap.1148" = type { %"class.WTF::HashTable.1149" }
%"class.WTF::HashTable.1149" = type <{ %"struct.WTF::KeyValuePair.1151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1151" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1152", %"class.std::__1::unique_ptr.1164" }
%"class.blink::HeapVector.1152" = type { %"class.WTF::Vector.1155" }
%"class.WTF::Vector.1155" = type { %"class.WTF::VectorBuffer.1156" }
%"class.WTF::VectorBuffer.1156" = type { %"class.WTF::VectorBufferBase.1157" }
%"class.WTF::VectorBufferBase.1157" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1158" }
%"class.WTF::Vector.1158" = type { %"class.WTF::VectorBuffer.1159" }
%"class.WTF::VectorBuffer.1159" = type { %"class.WTF::VectorBufferBase.1160", [16 x i8] }
%"class.WTF::VectorBufferBase.1160" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1176", i8, [7 x i8] }>
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1200", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1187", %class.scoped_refptr.1192, %class.scoped_refptr.1199, %class.scoped_refptr.1198, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"struct.WTF::KeyValuePair.1186"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1186" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3523 }
%class.scoped_refptr.3523 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1193" = type { %"class.base::RefCounted.1194" }
%"class.base::RefCounted.1194" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1195" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1196" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1197" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1187" = type { %"class.WTF::HashTable.1188" }
%"class.WTF::HashTable.1188" = type <{ %"struct.WTF::KeyValuePair.1191"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1191" = type opaque
%class.scoped_refptr.1192 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1198, %class.scoped_refptr.1198 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1199 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1198 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1247", %"class.blink::HeapVector.1255", %"class.blink::HeapVector.1263", %"class.blink::HeapVector.1280", %"class.blink::HeapVector.1288", %"class.blink::HeapVector.1296", %"class.blink::HeapVector.1309", %"class.WTF::Vector.1316", i32, %"class.blink::Member.1322" }
%"class.blink::HeapHashMap.1204" = type { %"class.WTF::HashMap.1207" }
%"class.WTF::HashMap.1207" = type { %"class.WTF::HashTable.1208" }
%"class.WTF::HashTable.1208" = type <{ %"struct.WTF::KeyValuePair.1210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1210" = type { %"class.WTF::AtomicString", %"class.blink::Member.3533" }
%"class.blink::Member.3533" = type { %"class.blink::MemberBase.3534" }
%"class.blink::MemberBase.3534" = type { %"class.blink::HeapVector.1211"* }
%"class.blink::HeapVector.1211" = type { %"class.WTF::Vector.1214" }
%"class.WTF::Vector.1214" = type { %"class.WTF::VectorBuffer.1215" }
%"class.WTF::VectorBuffer.1215" = type { %"class.WTF::VectorBufferBase.1216" }
%"class.WTF::VectorBufferBase.1216" = type { %"class.blink::Member.1217"*, i32, i32 }
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1221", i64, [4 x i32] }
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1242" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1247" = type { %"class.WTF::Vector.1250" }
%"class.WTF::Vector.1250" = type { %"class.WTF::VectorBuffer.1251" }
%"class.WTF::VectorBuffer.1251" = type { %"class.WTF::VectorBufferBase.1252" }
%"class.WTF::VectorBufferBase.1252" = type { %"class.blink::Member.1253"*, i32, i32 }
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.3529" }
%"class.blink::MemberBase.3529" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1255" = type { %"class.WTF::Vector.1258" }
%"class.WTF::Vector.1258" = type { %"class.WTF::VectorBuffer.1259" }
%"class.WTF::VectorBuffer.1259" = type { %"class.WTF::VectorBufferBase.1260" }
%"class.WTF::VectorBufferBase.1260" = type { %"class.blink::Member.1261"*, i32, i32 }
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.3530" }
%"class.blink::MemberBase.3530" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1263" = type { %"class.WTF::Vector.1266" }
%"class.WTF::Vector.1266" = type { %"class.WTF::VectorBuffer.1267" }
%"class.WTF::VectorBuffer.1267" = type { %"class.WTF::VectorBufferBase.1268" }
%"class.WTF::VectorBufferBase.1268" = type { %"class.blink::Member.1269"*, i32, i32 }
%"class.blink::Member.1269" = type { %"class.blink::MemberBase.1270" }
%"class.blink::MemberBase.1270" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1271", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1271" = type { %"class.WTF::Vector.1274" }
%"class.WTF::Vector.1274" = type { %"class.WTF::VectorBuffer.1275" }
%"class.WTF::VectorBuffer.1275" = type { %"class.WTF::VectorBufferBase.1276" }
%"class.WTF::VectorBufferBase.1276" = type { %"class.blink::Member.1277"*, i32, i32 }
%"class.blink::Member.1277" = type opaque
%"class.blink::HeapVector.1280" = type { %"class.WTF::Vector.1283" }
%"class.WTF::Vector.1283" = type { %"class.WTF::VectorBuffer.1284" }
%"class.WTF::VectorBuffer.1284" = type { %"class.WTF::VectorBufferBase.1285" }
%"class.WTF::VectorBufferBase.1285" = type { %"class.blink::Member.1286"*, i32, i32 }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.3531" }
%"class.blink::MemberBase.3531" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1288" = type { %"class.WTF::Vector.1291" }
%"class.WTF::Vector.1291" = type { %"class.WTF::VectorBuffer.1292" }
%"class.WTF::VectorBuffer.1292" = type { %"class.WTF::VectorBufferBase.1293" }
%"class.WTF::VectorBufferBase.1293" = type { %"class.blink::Member.1294"*, i32, i32 }
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.3532" }
%"class.blink::MemberBase.3532" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", i32, [4 x i8] }>
%"class.blink::HeapVector.1296" = type { %"class.WTF::Vector.1299" }
%"class.WTF::Vector.1299" = type { %"class.WTF::VectorBuffer.1300" }
%"class.WTF::VectorBuffer.1300" = type { %"class.WTF::VectorBufferBase.1301" }
%"class.WTF::VectorBufferBase.1301" = type { %"class.blink::Member.1302"*, i32, i32 }
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304" }
%"class.blink::HeapVector.1309" = type { %"class.WTF::Vector.1312" }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1221", i32, i32 }
%"class.WTF::Vector.1316" = type { %"class.WTF::VectorBuffer.1317" }
%"class.WTF::VectorBuffer.1317" = type { %"class.WTF::VectorBufferBase.1318" }
%"class.WTF::VectorBufferBase.1318" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1319, i8, [7 x i8] }>
%class.scoped_refptr.1319 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326" }
%"class.blink::HeapHashMap.1326" = type { %"class.WTF::HashMap.1329" }
%"class.WTF::HashMap.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ %"struct.WTF::KeyValuePair.1332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1332" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1333" }
%"class.blink::HeapHashMap.1333" = type { %"class.WTF::HashMap.1336" }
%"class.WTF::HashMap.1336" = type { %"class.WTF::HashTable.1337" }
%"class.WTF::HashTable.1337" = type <{ %"struct.WTF::KeyValuePair.1339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1339" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3524", %"class.WTF::Vector.3524" }
%"class.WTF::Vector.3524" = type { %"class.WTF::VectorBuffer.3525" }
%"class.WTF::VectorBuffer.3525" = type { %"class.WTF::VectorBufferBase.3526" }
%"class.WTF::VectorBufferBase.3526" = type { %class.scoped_refptr.3523*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1340" = type { %"class.WTF::HashSet.1343" }
%"class.WTF::HashSet.1343" = type { %"class.WTF::HashTable.1344" }
%"class.WTF::HashTable.1344" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1348" = type { %"class.WTF::HashMap.1351" }
%"class.WTF::HashMap.1351" = type { %"class.WTF::HashTable.1352" }
%"class.WTF::HashTable.1352" = type <{ %"struct.WTF::KeyValuePair.1354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1354" = type opaque
%"class.blink::HeapHashMap.1355" = type { %"class.WTF::HashMap.1358" }
%"class.WTF::HashMap.1358" = type { %"class.WTF::HashTable.1359" }
%"class.WTF::HashTable.1359" = type <{ %"struct.WTF::KeyValuePair.1361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1361" = type opaque
%"class.std::__1::unique_ptr.1362" = type { %"class.std::__1::__compressed_pair.1363" }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.1364" }
%"struct.std::__1::__compressed_pair_elem.1364" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1368" = type { %"class.WTF::Vector.1371" }
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.std::__1::pair.1374"*, i32, i32 }
%"struct.std::__1::pair.1374" = type opaque
%"class.blink::HeapVector.1099" = type { %"class.WTF::Vector.1102" }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"struct.std::__1::pair.1105"*, i32, i32 }
%"struct.std::__1::pair.1105" = type opaque
%"class.blink::HeapHashSet.1376" = type { %"class.WTF::HashSet.1379" }
%"class.WTF::HashSet.1379" = type { %"class.WTF::HashTable.1380" }
%"class.WTF::HashTable.1380" = type <{ %"class.blink::WeakMember.1382"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1382" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1383" = type { %"class.WTF::HashMap.1386" }
%"class.WTF::HashMap.1386" = type { %"class.WTF::HashTable.1387" }
%"class.WTF::HashTable.1387" = type <{ %"struct.WTF::KeyValuePair.1389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1389" = type { %"class.WTF::AtomicString", %"class.blink::Member.1269" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1392" = type { %"class.WTF::HashMap.1395" }
%"class.WTF::HashMap.1395" = type { %"class.WTF::HashTable.1396" }
%"class.WTF::HashTable.1396" = type <{ %"struct.WTF::KeyValuePair.1398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1398" = type opaque
%class.scoped_refptr.1399 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1400" = type { %"class.WTF::HashSet.1403" }
%"class.WTF::HashSet.1403" = type { %"class.WTF::HashTable.1404" }
%"class.WTF::HashTable.1404" = type <{ %"class.blink::Member.1406"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1406" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1413" = type { %"class.WTF::HashMap.1416" }
%"class.WTF::HashMap.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"struct.WTF::KeyValuePair.1419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1419" = type opaque
%"class.WTF::Vector.1420" = type { %"class.WTF::VectorBuffer.1421" }
%"class.WTF::VectorBuffer.1421" = type { %"class.WTF::VectorBufferBase.1422" }
%"class.WTF::VectorBufferBase.1422" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1431" = type { %"class.WTF::Vector.1434" }
%"class.WTF::Vector.1434" = type { %"class.WTF::VectorBuffer.1435" }
%"class.WTF::VectorBuffer.1435" = type { %"class.WTF::VectorBufferBase.1436" }
%"class.WTF::VectorBufferBase.1436" = type { %"class.blink::Member.1437"*, i32, i32 }
%"class.blink::Member.1437" = type opaque
%"class.std::__1::unique_ptr.1439" = type { %"class.std::__1::__compressed_pair.1440" }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1445" = type { %"class.WTF::HashSet.1448" }
%"class.WTF::HashSet.1448" = type { %"class.WTF::HashTable.1449" }
%"class.WTF::HashTable.1449" = type <{ %"class.blink::WeakMember.1451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1451" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1452", i32, [4 x i8] }>
%"class.WTF::Vector.1452" = type { %"class.WTF::VectorBuffer.1453" }
%"class.WTF::VectorBuffer.1453" = type { %"class.WTF::VectorBufferBase.1454" }
%"class.WTF::VectorBufferBase.1454" = type { %"struct.std::__1::pair.1455"*, i32, i32 }
%"struct.std::__1::pair.1455" = type opaque
%"class.blink::Member.1458" = type { %"class.blink::MemberBase.1459" }
%"class.blink::MemberBase.1459" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1460" = type { %"class.WTF::VectorBuffer.1461" }
%"class.WTF::VectorBuffer.1461" = type { %"class.WTF::VectorBufferBase.1462" }
%"class.WTF::VectorBufferBase.1462" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1465" = type { %"class.std::__1::__compressed_pair.1466" }
%"class.std::__1::__compressed_pair.1466" = type { %"struct.std::__1::__compressed_pair_elem.1467" }
%"struct.std::__1::__compressed_pair_elem.1467" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1471" = type { %"class.WTF::Vector.1474" }
%"class.WTF::Vector.1474" = type { %"class.WTF::VectorBuffer.1475" }
%"class.WTF::VectorBuffer.1475" = type { %"class.WTF::VectorBufferBase.1476" }
%"class.WTF::VectorBufferBase.1476" = type { %"class.blink::Member.1477"*, i32, i32 }
%"class.blink::Member.1477" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"struct.WTF::KeyValuePair.1493"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1493" = type opaque
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1054" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1055", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.778, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.778 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1519" = type { %"class.std::__1::__compressed_pair.1520" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.1521" }
%"struct.std::__1::__compressed_pair_elem.1521" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1525" = type { %"class.std::__1::__compressed_pair.1526" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.1527" }
%"struct.std::__1::__compressed_pair_elem.1527" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1528" = type { %"class.WTF::HashTable.1529" }
%"class.WTF::HashTable.1529" = type <{ %"struct.WTF::KeyValuePair.1532"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1532" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1536" = type { %"class.blink::MemberBase.1537" }
%"class.blink::MemberBase.1537" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1538" = type { %"class.blink::MemberBase.1539" }
%"class.blink::MemberBase.1539" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member.1546", %"class.blink::Member.1546", i32, i8, [3 x i8] }>
%"class.blink::Member.1546" = type { %"class.blink::MemberBase.1547" }
%"class.blink::MemberBase.1547" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.blink::Member.1549", %"class.blink::UntracedMember", %"class.blink::HeapLinkedHashSet", %"class.WTF::Vector.1561", double, %"class.WTF::Vector.701", i32, i8, [3 x i8] }>
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1548" }
%"class.blink::WeakMember.1548" = type { %"class.blink::MemberBase.1007" }
%"class.blink::Member.1549" = type { %"class.blink::MemberBase.1550" }
%"class.blink::MemberBase.1550" = type { %"class.blink::IntersectionObserverDelegate"* }
%"class.blink::IntersectionObserverDelegate" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1553", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1553" = type { %"class.WTF::HashTable.1554" }
%"class.WTF::HashTable.1554" = type <{ %"struct.WTF::KeyValuePair.1556"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1556" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1557", i32, i32 }
%"class.WTF::Vector.1557" = type { %"class.WTF::VectorBuffer.1558" }
%"class.WTF::VectorBuffer.1558" = type { %"class.WTF::VectorBufferBase.1559" }
%"class.WTF::VectorBufferBase.1559" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::Vector.1561" = type { %"class.WTF::VectorBuffer.1562" }
%"class.WTF::VectorBuffer.1562" = type { %"class.WTF::VectorBufferBase.1563" }
%"class.WTF::VectorBufferBase.1563" = type { float*, i32, i32 }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.WTF::Vector.1566" = type { %"class.WTF::VectorBuffer.1567" }
%"class.WTF::VectorBuffer.1567" = type { %"class.WTF::VectorBufferBase.1568" }
%"class.WTF::VectorBufferBase.1568" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1571" = type { %"class.WTF::HashMap.1574" }
%"class.WTF::HashMap.1574" = type { %"class.WTF::HashTable.1575" }
%"class.WTF::HashTable.1575" = type <{ %"struct.WTF::KeyValuePair.1577"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1577" = type opaque
%"class.blink::Member.1578" = type { %"class.blink::MemberBase.1579" }
%"class.blink::MemberBase.1579" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1580" = type { %"class.std::__1::__compressed_pair.1581" }
%"class.std::__1::__compressed_pair.1581" = type { %"struct.std::__1::__compressed_pair_elem.1582" }
%"struct.std::__1::__compressed_pair_elem.1582" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1586" = type { %"class.blink::MemberBase.1587" }
%"class.blink::MemberBase.1587" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1588" = type { %"class.blink::MemberBase.1589" }
%"class.blink::MemberBase.1589" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1590" = type { %"class.WTF::HashMap.1593" }
%"class.WTF::HashMap.1593" = type { %"class.WTF::HashTable.1594" }
%"class.WTF::HashTable.1594" = type <{ %"struct.WTF::KeyValuePair.1596"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1596" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1597" }
%"class.blink::HeapHashSet.1597" = type { %"class.WTF::HashSet.1600" }
%"class.WTF::HashSet.1600" = type { %"class.WTF::HashTable.1601" }
%"class.WTF::HashTable.1601" = type <{ %"class.blink::WeakMember.1603"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1603" = type opaque
%"class.blink::Member.1604" = type { %"class.blink::MemberBase.1605" }
%"class.blink::MemberBase.1605" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1606" = type { %"class.blink::MemberBase.1607" }
%"class.blink::MemberBase.1607" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1613", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1620", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1613" = type { %"class.WTF::HashSet.1616" }
%"class.WTF::HashSet.1616" = type { %"class.WTF::HashTable.1617" }
%"class.WTF::HashTable.1617" = type <{ %"class.blink::Member.1619"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1619" = type opaque
%"class.blink::HeapTaskRunnerTimer.1620" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1621", { i64, i64 } }
%"class.blink::WeakMember.1621" = type { %"class.blink::MemberBase.1607" }
%"class.blink::WeakMember.1608" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1609" = type { %"class.blink::MemberBase.1610" }
%"class.blink::MemberBase.1610" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3437" }
%"class.WTF::Vector.3437" = type { %"class.WTF::VectorBuffer.3438" }
%"class.WTF::VectorBuffer.3438" = type { %"class.WTF::VectorBufferBase.3439" }
%"class.WTF::VectorBufferBase.3439" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1915", %"class.absl::optional.1915", %"class.absl::optional.1915" }
%"class.absl::optional.1915" = type { %"class.absl::optional_internal::optional_data.1916" }
%"class.absl::optional_internal::optional_data.1916" = type { %"class.absl::optional_internal::optional_data_base.1917" }
%"class.absl::optional_internal::optional_data_base.1917" = type { %"class.absl::optional_internal::optional_data_dtor_base.1918" }
%"class.absl::optional_internal::optional_data_dtor_base.1918" = type { i8, %union.anon.1919 }
%union.anon.1919 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.995", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.995" = type { %"class.base::RefCounted.996" }
%"class.base::RefCounted.996" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3452" }
%"class.WTF::VectorBuffer.3452" = type { %"class.WTF::VectorBufferBase.3453", [32 x i8] }
%"class.WTF::VectorBufferBase.3453" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.860", %"class.std::__1::unique_ptr.971", i8, %"class.absl::optional.977", %class.scoped_refptr.953, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.982" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.753", %"class.blink::Persistent.759", %"class.std::__1::unique_ptr.819", %"class.blink::CullRect", %"class.std::__1::unique_ptr.835" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.759" = type { %"class.blink::PersistentBase.760" }
%"class.blink::PersistentBase.760" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.786", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.814" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.763", %"class.blink::Member.765", %"class.blink::Member.767", %"class.blink::Member.769", %"class.WTF::Vector.771", i16, %class.scoped_refptr.778 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.780", %"class.blink::Member.782", %"class.blink::Member.782", i8, [7 x i8] }>
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.784", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::ScrollableArea"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.789", %"class.absl::optional.794", i8, i8, %"class.WTF::Vector.804" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.793"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.793" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.794" = type { %"class.absl::optional_internal::optional_data.795" }
%"class.absl::optional_internal::optional_data.795" = type { %"class.absl::optional_internal::optional_data_base.796" }
%"class.absl::optional_internal::optional_data_base.796" = type { %"class.absl::optional_internal::optional_data_dtor_base.797" }
%"class.absl::optional_internal::optional_data_dtor_base.797" = type { i8, %union.anon.798 }
%union.anon.798 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.799" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.804" = type { %"class.WTF::VectorBuffer.805" }
%"class.WTF::VectorBuffer.805" = type { %"class.WTF::VectorBufferBase.806" }
%"class.WTF::VectorBufferBase.806" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.absl::optional.814" = type { %"class.absl::optional_internal::optional_data.815" }
%"class.absl::optional_internal::optional_data.815" = type { %"class.absl::optional_internal::optional_data_base.816" }
%"class.absl::optional_internal::optional_data_base.816" = type { %"class.absl::optional_internal::optional_data_dtor_base.817" }
%"class.absl::optional_internal::optional_data_dtor_base.817" = type { i8, %union.anon.818 }
%union.anon.818 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.822", %"class.WTF::Vector.822", %"class.WTF::HashMap.827", %"class.WTF::Vector.822", i8, [7 x i8] }>
%"class.WTF::HashMap.827" = type { %"class.WTF::HashTable.828" }
%"class.WTF::HashTable.828" = type <{ %"struct.WTF::KeyValuePair.831"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.831" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.822" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.838", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.844", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.850", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.850" = type { %"class.blink::PersistentBase.851" }
%"class.blink::PersistentBase.851" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.898, %class.scoped_refptr.902, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.943, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.967 }
%class.scoped_refptr.863 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.880" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.864", i8, i8, %class.scoped_refptr.866, i32, i32 }
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.866 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.873, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.874", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.867" }
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.899", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.899" = type { %"class.WTF::RefCounted.900", i8, i8, %class.scoped_refptr.873, i32, i32 }
%"class.WTF::RefCounted.900" = type { %"class.base::RefCounted.901" }
%"class.base::RefCounted.901" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.794" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.883", %"class.std::__1::unique_ptr.889", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.898 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.902 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.903 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.904" }
%"class.blink::PaintPropertyNode.904" = type { %"class.WTF::RefCounted.905", i8, i8, %class.scoped_refptr.907, i32, i32 }
%"class.WTF::RefCounted.905" = type { %"class.base::RefCounted.906" }
%"class.base::RefCounted.906" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.907 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.866, %class.scoped_refptr.908, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.930", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.908 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.945" }
%"class.blink::PaintPropertyNode.945" = type { %"class.WTF::RefCounted.946", i8, i8, %class.scoped_refptr.908, i32, i32 }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.909" }
%"class.std::__1::vector.909" = type { %"class.std::__1::__vector_base.910" }
%"class.std::__1::__vector_base.910" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.925" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.911, [20 x float], i32, [4 x i8], %"class.std::__1::vector.918", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.920" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.936" }
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { i32*, i32*, %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { i32* }
%class.scoped_refptr.943 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.944 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.956" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.866, %"class.absl::optional.948", %class.scoped_refptr.953, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.948" = type { %"class.absl::optional_internal::optional_data.949" }
%"class.absl::optional_internal::optional_data.949" = type { %"class.absl::optional_internal::optional_data_base.950" }
%"class.absl::optional_internal::optional_data_base.950" = type { %"class.absl::optional_internal::optional_data_dtor_base.951" }
%"class.absl::optional_internal::optional_data_dtor_base.951" = type { i8, [3 x i8], %union.anon.952 }
%union.anon.952 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.959", i32, [4 x i8] }>
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.967 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.866, %class.scoped_refptr.908, %class.scoped_refptr.907 }
%"class.absl::optional.977" = type { %"class.absl::optional_internal::optional_data.978" }
%"class.absl::optional_internal::optional_data.978" = type { %"class.absl::optional_internal::optional_data_base.979" }
%"class.absl::optional_internal::optional_data_base.979" = type { %"class.absl::optional_internal::optional_data_dtor_base.980" }
%"class.absl::optional_internal::optional_data_dtor_base.980" = type { i8, %union.anon.981 }
%union.anon.981 = type { %"class.blink::IntRect" }
%class.scoped_refptr.953 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.954", [4 x i8] }
%"class.WTF::RefCounted.954" = type { %"class.base::RefCounted.955" }
%"class.base::RefCounted.955" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.784", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.994", { i64, i64 } }
%"class.blink::WeakMember.994" = type { %"class.blink::MemberBase.783" }
%"class.blink::Member.1883" = type { %"class.blink::MemberBase.1884" }
%"class.blink::MemberBase.1884" = type { %"class.blink::HeapLinkedHashSet.1885"* }
%"class.blink::HeapLinkedHashSet.1885" = type { %"class.WTF::LinkedHashSet.1888" }
%"class.WTF::LinkedHashSet.1888" = type { %"class.WTF::HashMap.1889", %"class.WTF::VectorBackedLinkedList.1893" }
%"class.WTF::HashMap.1889" = type { %"class.WTF::HashTable.1890" }
%"class.WTF::HashTable.1890" = type <{ %"struct.WTF::KeyValuePair.1892"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1892" = type <{ %"class.blink::Member.318", i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList.1893" = type { %"class.WTF::Vector.1894", i32, i32 }
%"class.WTF::Vector.1894" = type { %"class.WTF::VectorBuffer.1895" }
%"class.WTF::VectorBuffer.1895" = type { %"class.WTF::VectorBufferBase.1896" }
%"class.WTF::VectorBufferBase.1896" = type { %"class.WTF::VectorBackedLinkedListNode.1897"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1897" = type { i32, i32, %"class.blink::Member.318" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1900", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1902, %"class.std::__1::unique_ptr.2145" }
%"class.WTF::RefCounted.1900" = type { %"class.base::RefCounted.1901" }
%"class.base::RefCounted.1901" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1902 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1903", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1903" = type { %"class.base::RefCounted.1904" }
%"class.base::RefCounted.1904" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1905, %"class.WTF::Vector.2102", %"class.std::__1::unique_ptr.2107", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.2128, %"class.blink::Persistent.2129" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1905 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1906", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.2077, %union.anon.2078, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1906" = type { %"class.base::RefCounted.1907" }
%"class.base::RefCounted.1907" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1908, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1908 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1909 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1909 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1943 }
%class.scoped_refptr.1943 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1944", [4 x i8], %"class.std::__1::unique_ptr.1946", i64, %"class.WTF::Vector.1950", %"class.WTF::Vector.1955", %"class.WTF::Vector.1985", %"class.WTF::Vector.2003", %class.scoped_refptr.1657, %"class.WTF::HashMap.2009", %"class.WTF::Vector.2014", %"class.WTF::Vector.1950", %"class.WTF::Vector.2019", %"class.WTF::HashMap.2024", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1944" = type { %"class.base::RefCountedThreadSafe.1945" }
%"class.base::RefCountedThreadSafe.1945" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1946" = type { %"class.std::__1::__compressed_pair.1947" }
%"class.std::__1::__compressed_pair.1947" = type { %"struct.std::__1::__compressed_pair_elem.1948" }
%"struct.std::__1::__compressed_pair_elem.1948" = type { i8* }
%"class.WTF::Vector.1955" = type { %"class.WTF::VectorBuffer.1956" }
%"class.WTF::VectorBuffer.1956" = type { %"class.WTF::VectorBufferBase.1957", [8 x i8] }
%"class.WTF::VectorBufferBase.1957" = type { %class.scoped_refptr.1958*, i32, i32 }
%class.scoped_refptr.1958 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1959", i8, %class.scoped_refptr.1961, %"class.blink::WeakPersistent.1975", i32, i8, %"class.std::__1::unique_ptr.1977" }
%"class.WTF::ThreadSafeRefCounted.1959" = type { %"class.base::RefCountedThreadSafe.1960" }
%"class.base::RefCountedThreadSafe.1960" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1961 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1962", i64, %"class.WTF::Vector.1964", %"class.WTF::Vector.1969" }
%"class.WTF::RefCounted.1962" = type { %"class.base::RefCounted.1963" }
%"class.base::RefCounted.1963" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1964" = type { %"class.WTF::VectorBuffer.1965" }
%"class.WTF::VectorBuffer.1965" = type { %"class.WTF::VectorBufferBase.1966" }
%"class.WTF::VectorBufferBase.1966" = type { i8*, i32, i32 }
%"class.WTF::Vector.1969" = type { %"class.WTF::VectorBuffer.1970" }
%"class.WTF::VectorBuffer.1970" = type { %"class.WTF::VectorBufferBase.1971" }
%"class.WTF::VectorBufferBase.1971" = type { %"class.std::__1::unique_ptr.1972"*, i32, i32 }
%"class.std::__1::unique_ptr.1972" = type opaque
%"class.blink::WeakPersistent.1975" = type { %"class.blink::PersistentBase.1976" }
%"class.blink::PersistentBase.1976" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.1977" = type { %"class.std::__1::__compressed_pair.1978" }
%"class.std::__1::__compressed_pair.1978" = type { %"struct.std::__1::__compressed_pair_elem.1979" }
%"struct.std::__1::__compressed_pair_elem.1979" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"class.WTF::Vector.1985" = type { %"class.WTF::VectorBuffer.1986" }
%"class.WTF::VectorBuffer.1986" = type { %"class.WTF::VectorBufferBase.1987" }
%"class.WTF::VectorBufferBase.1987" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1989", %"class.std::__1::unique_ptr.1995" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1988 }
%class.scoped_refptr.1988 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1989" = type { %"class.std::__1::__compressed_pair.1990" }
%"class.std::__1::__compressed_pair.1990" = type { %"struct.std::__1::__compressed_pair_elem.1991" }
%"struct.std::__1::__compressed_pair_elem.1991" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1995" = type { %"class.std::__1::__compressed_pair.1996" }
%"class.std::__1::__compressed_pair.1996" = type { %"struct.std::__1::__compressed_pair_elem.1997" }
%"struct.std::__1::__compressed_pair_elem.1997" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2003" = type { %"class.WTF::VectorBuffer.2004" }
%"class.WTF::VectorBuffer.2004" = type { %"class.WTF::VectorBufferBase.2005" }
%"class.WTF::VectorBufferBase.2005" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2006", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2006" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2009" = type { %"class.WTF::HashTable.2010" }
%"class.WTF::HashTable.2010" = type <{ %"struct.WTF::KeyValuePair.2013"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2013" = type opaque
%"class.WTF::Vector.2014" = type { %"class.WTF::VectorBuffer.2015" }
%"class.WTF::VectorBuffer.2015" = type { %"class.WTF::VectorBufferBase.2016" }
%"class.WTF::VectorBufferBase.2016" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1950" = type { %"class.WTF::VectorBuffer.1951" }
%"class.WTF::VectorBuffer.1951" = type { %"class.WTF::VectorBufferBase.1952", [16 x i8] }
%"class.WTF::VectorBufferBase.1952" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2019" = type { %"class.WTF::VectorBuffer.2020" }
%"class.WTF::VectorBuffer.2020" = type { %"class.WTF::VectorBufferBase.2021" }
%"class.WTF::VectorBufferBase.2021" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.2326", i32 }
%"class.mojo::ScopedHandleBase.2326" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.WTF::HashMap.2024" = type { %"class.WTF::HashTable.2025" }
%"class.WTF::HashTable.2025" = type <{ %"struct.WTF::KeyValuePair.2028"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2028" = type { i8**, %"class.std::__1::unique_ptr.3456" }
%"class.std::__1::unique_ptr.3456" = type { %"class.std::__1::__compressed_pair.3457" }
%"class.std::__1::__compressed_pair.3457" = type { %"struct.std::__1::__compressed_pair_elem.3458" }
%"struct.std::__1::__compressed_pair_elem.3458" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.2029" }
%"class.std::__1::unique_ptr.2029" = type { %"class.std::__1::__compressed_pair.2030" }
%"class.std::__1::__compressed_pair.2030" = type { %"struct.std::__1::__compressed_pair_elem.2031" }
%"struct.std::__1::__compressed_pair_elem.2031" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.2032, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.2049" }
%class.scoped_refptr.2032 = type { %"class.base::RefCountedData.2033"* }
%"class.base::RefCountedData.2033" = type { %"class.base::RefCountedThreadSafe.2034", %"class.WTF::Vector.2035" }
%"class.base::RefCountedThreadSafe.2034" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.2035" = type { %"class.WTF::VectorBuffer.2036" }
%"class.WTF::VectorBuffer.2036" = type { %"class.WTF::VectorBufferBase.2037" }
%"class.WTF::VectorBufferBase.2037" = type { %class.scoped_refptr.2038*, i32, i32 }
%class.scoped_refptr.2038 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.2039", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.2041" }
%"class.WTF::RefCounted.2039" = type { %"class.base::RefCounted.2040" }
%"class.base::RefCounted.2040" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.2041" = type { %"class.std::__1::__compressed_pair.2042" }
%"class.std::__1::__compressed_pair.2042" = type { %"struct.std::__1::__compressed_pair_elem.2043" }
%"struct.std::__1::__compressed_pair_elem.2043" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2049" = type { %"class.std::__1::__compressed_pair.2050" }
%"class.std::__1::__compressed_pair.2050" = type { %"struct.std::__1::__compressed_pair_elem.2051" }
%"struct.std::__1::__compressed_pair_elem.2051" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.2052", %"class.WTF::Vector.2065", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.2052" = type { %"class.WTF::VectorBuffer.2053" }
%"class.WTF::VectorBuffer.2053" = type { %"class.WTF::VectorBufferBase.2054", [320 x i8] }
%"class.WTF::VectorBufferBase.2054" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.2055", %"class.WTF::Vector.2055", %class.scoped_refptr.2060, i8, [7 x i8] }>
%"class.WTF::Vector.2055" = type { %"class.WTF::VectorBuffer.2056" }
%"class.WTF::VectorBuffer.2056" = type { %"class.WTF::VectorBufferBase.2057", [8 x i8] }
%"class.WTF::VectorBufferBase.2057" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2060 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.2061", %"class.WTF::Vector.2035", %"class.WTF::Vector.2035" }
%"class.WTF::RefCounted.2061" = type { %"class.base::RefCounted.2062" }
%"class.base::RefCounted.2062" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2065" = type { %"class.WTF::VectorBuffer.2066" }
%"class.WTF::VectorBuffer.2066" = type { %"class.WTF::VectorBufferBase.2067", [288 x i8] }
%"class.WTF::VectorBufferBase.2067" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.2055", %"class.WTF::Vector.2055" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.2068 }
%class.scoped_refptr.2068 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.2077 = type { %"class.blink::NGPhysicalFragment"* }
%union.anon.2078 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1910", %class.scoped_refptr.2079, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.2080, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1943, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.2081", %"class.absl::optional.2097" }
%"class.absl::optional.1910" = type { %"class.absl::optional_internal::optional_data.1911" }
%"class.absl::optional_internal::optional_data.1911" = type { %"class.absl::optional_internal::optional_data_base.1912" }
%"class.absl::optional_internal::optional_data_base.1912" = type { %"class.absl::optional_internal::optional_data_dtor_base.1913" }
%"class.absl::optional_internal::optional_data_dtor_base.1913" = type { i8, %union.anon.1914 }
%union.anon.1914 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.2079 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.2158", [4 x i8], %union.anon.2160, %class.scoped_refptr.2079, i32, [4 x i8] }>
%"class.WTF::RefCounted.2158" = type { %"class.base::RefCounted.2159" }
%"class.base::RefCounted.2159" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.2160 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.2080 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2081" = type { %"class.std::__1::__compressed_pair.2082" }
%"class.std::__1::__compressed_pair.2082" = type { %"struct.std::__1::__compressed_pair_elem.2083" }
%"struct.std::__1::__compressed_pair_elem.2083" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.2084", %"class.WTF::Vector.2089", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2084" = type { %"class.WTF::VectorBuffer.2085" }
%"class.WTF::VectorBuffer.2085" = type { %"class.WTF::VectorBufferBase.2086" }
%"class.WTF::VectorBufferBase.2086" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2089" = type { %"class.WTF::VectorBuffer.2090" }
%"class.WTF::VectorBuffer.2090" = type { %"class.WTF::VectorBufferBase.2091" }
%"class.WTF::VectorBufferBase.2091" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.2097" = type { %"class.absl::optional_internal::optional_data.2098" }
%"class.absl::optional_internal::optional_data.2098" = type { %"class.absl::optional_internal::optional_data_base.2099" }
%"class.absl::optional_internal::optional_data_base.2099" = type { %"class.absl::optional_internal::optional_data_dtor_base.2100" }
%"class.absl::optional_internal::optional_data_dtor_base.2100" = type { i8, %union.anon.2101 }
%union.anon.2101 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.2102" = type { %"class.WTF::VectorBuffer.2103" }
%"class.WTF::VectorBuffer.2103" = type { %"class.WTF::VectorBufferBase.2104", [8 x i8] }
%"class.WTF::VectorBufferBase.2104" = type { %class.scoped_refptr.1905*, i32, i32 }
%"class.std::__1::unique_ptr.2107" = type { %"class.std::__1::__compressed_pair.2108" }
%"class.std::__1::__compressed_pair.2108" = type { %"struct.std::__1::__compressed_pair_elem.2109" }
%"struct.std::__1::__compressed_pair_elem.2109" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.2110", %"class.absl::optional.2115", %"class.absl::optional.2120" }
%"class.absl::optional.2110" = type { %"class.absl::optional_internal::optional_data.2111" }
%"class.absl::optional_internal::optional_data.2111" = type { %"class.absl::optional_internal::optional_data_base.2112" }
%"class.absl::optional_internal::optional_data_base.2112" = type { %"class.absl::optional_internal::optional_data_dtor_base.2113" }
%"class.absl::optional_internal::optional_data_dtor_base.2113" = type { i8, %union.anon.2114 }
%union.anon.2114 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.2115" = type { %"class.absl::optional_internal::optional_data.2116" }
%"class.absl::optional_internal::optional_data.2116" = type { %"class.absl::optional_internal::optional_data_base.2117" }
%"class.absl::optional_internal::optional_data_base.2117" = type { %"class.absl::optional_internal::optional_data_dtor_base.2118" }
%"class.absl::optional_internal::optional_data_dtor_base.2118" = type { i8, [3 x i8], %union.anon.2119 }
%union.anon.2119 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.2120" = type { %"class.absl::optional_internal::optional_data.2121" }
%"class.absl::optional_internal::optional_data.2121" = type { %"class.absl::optional_internal::optional_data_base.2122" }
%"class.absl::optional_internal::optional_data_base.2122" = type { %"class.absl::optional_internal::optional_data_dtor_base.2123" }
%"class.absl::optional_internal::optional_data_dtor_base.2123" = type { i8, %union.anon.2124 }
%union.anon.2124 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.2128 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1858", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1858" = type { %"class.std::__1::__compressed_pair.1859" }
%"class.std::__1::__compressed_pair.1859" = type { %"struct.std::__1::__compressed_pair_elem.1860" }
%"struct.std::__1::__compressed_pair_elem.1860" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1861", %"class.absl::optional.1866" }
%"class.absl::optional.1861" = type { %"class.absl::optional_internal::optional_data.1862" }
%"class.absl::optional_internal::optional_data.1862" = type { %"class.absl::optional_internal::optional_data_base.1863" }
%"class.absl::optional_internal::optional_data_base.1863" = type { %"class.absl::optional_internal::optional_data_dtor_base.1864" }
%"class.absl::optional_internal::optional_data_dtor_base.1864" = type { i8, %union.anon.1865 }
%union.anon.1865 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1866" = type { %"class.absl::optional_internal::optional_data.1867" }
%"class.absl::optional_internal::optional_data.1867" = type { %"class.absl::optional_internal::optional_data_base.1868" }
%"class.absl::optional_internal::optional_data_base.1868" = type { %"class.absl::optional_internal::optional_data_dtor_base.1869" }
%"class.absl::optional_internal::optional_data_dtor_base.1869" = type { i8, %union.anon.1870 }
%union.anon.1870 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.2129" = type { %"class.blink::PersistentBase.2130" }
%"class.blink::PersistentBase.2130" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.2133", %"struct.blink::PhysicalRect", %"class.blink::Member.2143" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.2133" = type { %"class.std::__1::__compressed_pair.2134" }
%"class.std::__1::__compressed_pair.2134" = type { %"struct.std::__1::__compressed_pair_elem.2135" }
%"struct.std::__1::__compressed_pair_elem.2135" = type { %"class.WTF::HashSet.2136"* }
%"class.WTF::HashSet.2136" = type { %"class.WTF::HashTable.2137" }
%"class.WTF::HashTable.2137" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2143" = type { %"class.blink::MemberBase.2144" }
%"class.blink::MemberBase.2144" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.std::__1::unique_ptr.2145" = type { %"class.std::__1::__compressed_pair.2146" }
%"class.std::__1::__compressed_pair.2146" = type { %"struct.std::__1::__compressed_pair_elem.2147" }
%"struct.std::__1::__compressed_pair_elem.2147" = type { %"class.WTF::Vector.2148"* }
%"class.WTF::Vector.2148" = type { %"class.WTF::VectorBuffer.2149" }
%"class.WTF::VectorBuffer.2149" = type { %"class.WTF::VectorBufferBase.2150" }
%"class.WTF::VectorBufferBase.2150" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.2151 }
%union.anon.2151 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::NGInkOverflow" = type { %union.anon.2157 }
%union.anon.2157 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::PseudoElement" = type <{ %"class.blink::Element", i8, [7 x i8] }>
%"class.blink::HTMLAreaElement" = type <{ %"class.blink::HTMLAnchorElement", %"class.std::__1::unique_ptr.666", %"class.WTF::Vector.567", i32, [4 x i8] }>
%"class.blink::HTMLAnchorElement" = type { %"class.blink::HTMLElement", %"class.blink::DOMURLUtils.base", i32, i64, %"class.blink::Member.3121" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::DOMURLUtils.base" = type <{ %"class.blink::DOMURLUtilsReadOnly", i8 }>
%"class.blink::DOMURLUtilsReadOnly" = type { i32 (...)** }
%"class.blink::Member.3121" = type { %"class.blink::MemberBase.3122" }
%"class.blink::MemberBase.3122" = type { %"class.blink::RelList"* }
%"class.blink::RelList" = type { %"class.blink::DOMTokenList.base", [7 x i8] }
%"class.blink::DOMTokenList.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.343", %"class.blink::QualifiedName", i8 }>
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3536", %"class.blink::Member.3538", %"class.blink::Member.3540", %"class.blink::Member.3559", %"class.blink::Member.3561" }
%"class.blink::Member.3536" = type { %"class.blink::MemberBase.3537" }
%"class.blink::MemberBase.3537" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3538" = type { %"class.blink::MemberBase.3539" }
%"class.blink::MemberBase.3539" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3540" = type { %"class.blink::MemberBase.3541" }
%"class.blink::MemberBase.3541" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3544", %"class.blink::HeapHashSet.3553" }
%"class.blink::HeapVector.3544" = type { %"class.WTF::Vector.3547" }
%"class.WTF::Vector.3547" = type { %"class.WTF::VectorBuffer.3548" }
%"class.WTF::VectorBuffer.3548" = type { %"class.WTF::VectorBufferBase.3549" }
%"class.WTF::VectorBufferBase.3549" = type { %"class.blink::Member.3550"*, i32, i32 }
%"class.blink::Member.3550" = type { %"class.blink::MemberBase.3551" }
%"class.blink::MemberBase.3551" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3553" = type { %"class.WTF::HashSet.3556" }
%"class.WTF::HashSet.3556" = type { %"class.WTF::HashTable.3557" }
%"class.WTF::HashTable.3557" = type <{ %"class.blink::Member.3550"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3559" = type { %"class.blink::MemberBase.3560" }
%"class.blink::MemberBase.3560" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3561" = type { %"class.blink::MemberBase.3562" }
%"class.blink::MemberBase.3562" = type { %"class.blink::HeapHashSet.3563"* }
%"class.blink::HeapHashSet.3563" = type opaque
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.1876", %"class.blink::WeakMember.1055", i32, [4 x i8], %"class.blink::HeapHashSet.1340", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.3566", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.3566" = type { %"class.absl::optional_internal::optional_data.3567" }
%"class.absl::optional_internal::optional_data.3567" = type { %"class.absl::optional_internal::optional_data_base.3568" }
%"class.absl::optional_internal::optional_data_base.3568" = type { %"class.absl::optional_internal::optional_data_dtor_base.3569" }
%"class.absl::optional_internal::optional_data_dtor_base.3569" = type { i8, %union.anon.3570 }
%union.anon.3570 = type { %"class.blink::FloatSize" }
%"class.blink::HTMLImageElement" = type { %"class.blink::HTMLElement", %"class.blink::ImageElementBase", %"class.blink::ActiveScriptWrappable.3123", %"class.blink::FormAssociated", %"class.blink::Member.3124", %"class.blink::Member.3156", %"class.blink::Member.3158", %"class.WTF::AtomicString", float, %"class.blink::Member.3160", i8, i8, i32, %"class.std::__1::unique_ptr.3162" }
%"class.blink::ImageElementBase" = type { %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", i32, i32 }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable.3123" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.3124" = type { %"class.blink::MemberBase.3125" }
%"class.blink::MemberBase.3125" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3128", %"class.blink::Member.343", %"class.blink::Member.3129", %"class.blink::Member.3129", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.3141", %"class.std::__1::unique_ptr.3142", %"class.std::__1::unique_ptr.3142", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.3148" }
%"class.blink::ThreadState::PrefinalizerRegistration.3128" = type { i8 }
%"class.blink::Member.3129" = type { %"class.blink::MemberBase.3130" }
%"class.blink::MemberBase.3130" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.3133", float, i8, %class.scoped_refptr.3135, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::Member.3133" = type { %"class.blink::MemberBase.3134" }
%"class.blink::MemberBase.3134" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.3135 = type { %"class.blink::Image"* }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.3136" }
%"class.WTF::HashMap.3136" = type { %"class.WTF::HashTable.3137" }
%"class.WTF::HashTable.3137" = type <{ %"struct.WTF::KeyValuePair.3140"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3140" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr.3141" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.3142" = type { %"class.std::__1::__compressed_pair.3143" }
%"class.std::__1::__compressed_pair.3143" = type { %"struct.std::__1::__compressed_pair_elem.3144" }
%"struct.std::__1::__compressed_pair_elem.3144" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::HeapVector.3148" = type { %"class.WTF::Vector.3151" }
%"class.WTF::Vector.3151" = type { %"class.WTF::VectorBuffer.3152" }
%"class.WTF::VectorBuffer.3152" = type { %"class.WTF::VectorBufferBase.3153" }
%"class.WTF::VectorBufferBase.3153" = type { %"class.blink::Member.3154"*, i32, i32 }
%"class.blink::Member.3154" = type opaque
%"class.blink::Member.3156" = type { %"class.blink::MemberBase.3157" }
%"class.blink::MemberBase.3157" = type { %"class.blink::HTMLImageElement::ViewportChangeListener"* }
%"class.blink::HTMLImageElement::ViewportChangeListener" = type opaque
%"class.blink::Member.3158" = type { %"class.blink::MemberBase.3159" }
%"class.blink::MemberBase.3159" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.3160" = type { %"class.blink::MemberBase.3161" }
%"class.blink::MemberBase.3161" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.std::__1::unique_ptr.3162" = type { %"class.std::__1::__compressed_pair.3163" }
%"class.std::__1::__compressed_pair.3163" = type { %"struct.std::__1::__compressed_pair_elem.3164" }
%"struct.std::__1::__compressed_pair_elem.3164" = type { %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* }
%"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics" = type { i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::HTMLMapElement" = type { %"class.blink::HTMLElement", %"class.WTF::AtomicString" }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1407", %"class.blink::Member.2161", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.2161" = type { %"class.blink::MemberBase.2162" }
%"class.blink::MemberBase.2162" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::Page" = type { %"class.blink::Supplementable.2165", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2179", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2181", %"class.blink::Member.2187", %"class.blink::Member.2189", %"class.blink::Member.2191", %"class.blink::Member.2193", %"class.blink::Member.2195", %"class.blink::Member.2197", %"class.blink::Member.2199", %"class.blink::HeapObserverSet.2201", %"class.blink::Member.2209", %"class.blink::Member.2211", %"class.blink::Member.2213", %"class.blink::Member.2215", %"class.blink::Member.2217", %"class.blink::Member.2223", %"class.blink::Member.2229", %"class.blink::Member.2231", %"class.blink::Member.2233", %"class.blink::Member.2235", %"class.blink::Member.2237", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2262", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2269", %"class.blink::Member.2185", %"class.blink::Member.2185", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2277", %"class.std::__1::unique_ptr.2283", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2165" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2166" }
%"class.blink::HeapHashMap.2166" = type { %"class.WTF::HashMap.2169" }
%"class.WTF::HashMap.2169" = type { %"class.WTF::HashTable.2170" }
%"class.WTF::HashTable.2170" = type <{ %"struct.WTF::KeyValuePair.2172"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2172" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2173" }
%"class.std::__1::unique_ptr.2173" = type { %"class.std::__1::__compressed_pair.2174" }
%"class.std::__1::__compressed_pair.2174" = type { %"struct.std::__1::__compressed_pair_elem.2175" }
%"struct.std::__1::__compressed_pair_elem.2175" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.2179" = type { %"class.blink::MemberBase.2180" }
%"class.blink::MemberBase.2180" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2185", %"class.blink::Member.2291", %"class.blink::Member.2293", i8, i32, i8, i32, %"class.blink::Member.2427", %"class.blink::Member.2316", %"class.blink::FrameLifecycle", %"class.blink::Member.2179", %"class.blink::Member.2179", %"class.blink::Member.2179", %"class.blink::Member.2179", %"class.blink::Member.2179", %"class.blink::Member.2179", %"class.blink::Member.2429", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2440", i8, %"class.base::UnguessableToken", %"class.absl::optional.2442", %"class.absl::optional.2447", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2179", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2291" = type { %"class.blink::MemberBase.2292" }
%"class.blink::MemberBase.2292" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2293" = type { %"class.blink::MemberBase.2294" }
%"class.blink::MemberBase.2294" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2179", %"class.blink::Member.2316", %"class.blink::Member.2318", %"class.blink::Member.2320", i8, %"class.WTF::Vector.2322" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2309" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2297" }
%"class.blink::HeapVector.2297" = type { %"class.WTF::Vector.2300" }
%"class.WTF::Vector.2300" = type { %"class.WTF::VectorBuffer.2301" }
%"class.WTF::VectorBuffer.2301" = type { %"class.WTF::VectorBufferBase.2302", [32 x i8] }
%"class.WTF::VectorBufferBase.2302" = type { %"struct.std::__1::pair.2303"*, i32, i32 }
%"struct.std::__1::pair.2303" = type { %"class.WTF::AtomicString", %"class.blink::Member.2304" }
%"class.blink::Member.2304" = type { %"class.blink::MemberBase.2305" }
%"class.blink::MemberBase.2305" = type { %"class.blink::HeapVector.2306"* }
%"class.blink::HeapVector.2306" = type opaque
%"class.std::__1::unique_ptr.2309" = type { %"class.std::__1::__compressed_pair.2310" }
%"class.std::__1::__compressed_pair.2310" = type { %"struct.std::__1::__compressed_pair_elem.2311" }
%"struct.std::__1::__compressed_pair_elem.2311" = type { %"class.WTF::Vector.2312"* }
%"class.WTF::Vector.2312" = type opaque
%"class.blink::Member.2318" = type { %"class.blink::MemberBase.2319" }
%"class.blink::MemberBase.2319" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2320" = type { %"class.blink::MemberBase.2321" }
%"class.blink::MemberBase.2321" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2322" = type { %"class.WTF::VectorBuffer.2323" }
%"class.WTF::VectorBuffer.2323" = type { %"class.WTF::VectorBufferBase.2324" }
%"class.WTF::VectorBufferBase.2324" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2419" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2325, %"class.std::__1::unique_ptr.1766", %"class.mojo::ScopedHandleBase.2326", [4 x i8], %class.scoped_refptr.1780, i32 }>
%class.scoped_refptr.2325 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1780, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase.2326", [4 x i8], %"class.absl::optional.2385", %"class.absl::optional.2390", %"class.absl::optional.2343", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2410", i8, [7 x i8], %class.scoped_refptr.1780, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1793" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase.2326", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1780, %"class.std::__1::unique_ptr.2327", %"class.absl::optional.2337", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2343", %"class.std::__1::unique_ptr.2348", i8, i64, %class.scoped_refptr.2382, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2383", %"class.base::WeakPtrFactory.2384" }
%"class.std::__1::unique_ptr.2327" = type { %"class.std::__1::__compressed_pair.2328" }
%"class.std::__1::__compressed_pair.2328" = type { %"struct.std::__1::__compressed_pair_elem.2329" }
%"struct.std::__1::__compressed_pair_elem.2329" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1780, i8, %"class.mojo::ScopedHandleBase.2330", %class.scoped_refptr.2331, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2332", i8*, %"class.base::WeakPtrFactory.2333" }
%"class.mojo::ScopedHandleBase.2330" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2331 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.2332" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2333" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2337" = type { %"class.absl::optional_internal::optional_data.2338" }
%"class.absl::optional_internal::optional_data.2338" = type { %"class.absl::optional_internal::optional_data_base.2339" }
%"class.absl::optional_internal::optional_data_base.2339" = type { %"class.absl::optional_internal::optional_data_dtor_base.2340" }
%"class.absl::optional_internal::optional_data_dtor_base.2340" = type { i8, %union.anon.2341 }
%union.anon.2341 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2342", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2342" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2348" = type { %"class.std::__1::__compressed_pair.2349" }
%"class.std::__1::__compressed_pair.2349" = type { %"struct.std::__1::__compressed_pair_elem.2350" }
%"struct.std::__1::__compressed_pair_elem.2350" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2351", i8, i64, %class.scoped_refptr.2352, %class.scoped_refptr.2377 }
%"class.base::RepeatingCallback.2351" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2352 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2353", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2355", %"class.std::__1::map.2366", i8, [7 x i8] }>
%"class.base::RefCounted.2353" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2354 }
%class.scoped_refptr.2354 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2355" = type { %"class.std::__1::__tree.2356" }
%"class.std::__1::__tree.2356" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2357", %"class.std::__1::__compressed_pair.2361" }
%"class.std::__1::__compressed_pair.2357" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"class.std::__1::__compressed_pair.2361" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2366" = type { %"class.std::__1::__tree.2367" }
%"class.std::__1::__tree.2367" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2368", %"class.std::__1::__compressed_pair.2372" }
%"class.std::__1::__compressed_pair.2368" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"class.std::__1::__compressed_pair.2372" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2377 = type { %"class.base::RefCountedData.2378"* }
%"class.base::RefCountedData.2378" = type opaque
%class.scoped_refptr.2382 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2383" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2384" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2385" = type { %"class.absl::optional_internal::optional_data.2386" }
%"class.absl::optional_internal::optional_data.2386" = type { %"class.absl::optional_internal::optional_data_base.2387" }
%"class.absl::optional_internal::optional_data_base.2387" = type { %"class.absl::optional_internal::optional_data_dtor_base.2388" }
%"class.absl::optional_internal::optional_data_dtor_base.2388" = type { i8, %union.anon.2389 }
%union.anon.2389 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2390" = type { %"class.absl::optional_internal::optional_data.2391" }
%"class.absl::optional_internal::optional_data.2391" = type { %"class.absl::optional_internal::optional_data_base.2392" }
%"class.absl::optional_internal::optional_data_base.2392" = type { %"class.absl::optional_internal::optional_data_dtor_base.2393" }
%"class.absl::optional_internal::optional_data_dtor_base.2393" = type { i8, [7 x i8], %union.anon.2394 }
%union.anon.2394 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2343" = type { %"class.absl::optional_internal::optional_data.2344" }
%"class.absl::optional_internal::optional_data.2344" = type { %"class.absl::optional_internal::optional_data_base.2345" }
%"class.absl::optional_internal::optional_data_base.2345" = type { %"class.absl::optional_internal::optional_data_dtor_base.2346" }
%"class.absl::optional_internal::optional_data_dtor_base.2346" = type { i8, %union.anon.2347 }
%union.anon.2347 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2395 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2395 = type { %"class.std::__1::map.2398" }
%"class.std::__1::map.2398" = type { %"class.std::__1::__tree.2399" }
%"class.std::__1::__tree.2399" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2400", %"class.std::__1::__compressed_pair.2404" }
%"class.std::__1::__compressed_pair.2400" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"class.std::__1::__compressed_pair.2404" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2409"*, i64 }
%"class.std::__1::unique_ptr.2409" = type opaque
%"class.std::__1::map.2410" = type { %"class.std::__1::__tree.2411" }
%"class.std::__1::__tree.2411" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2412", %"class.std::__1::__compressed_pair.2416" }
%"class.std::__1::__compressed_pair.2412" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"class.std::__1::__compressed_pair.2416" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::unique_ptr.2419" = type { %"class.std::__1::__compressed_pair.2420" }
%"class.std::__1::__compressed_pair.2420" = type { %"struct.std::__1::__compressed_pair_elem.2421" }
%"struct.std::__1::__compressed_pair_elem.2421" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2427" = type { %"class.blink::MemberBase.2428" }
%"class.blink::MemberBase.2428" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2316" = type { %"class.blink::MemberBase.2317" }
%"class.blink::MemberBase.2317" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2429" = type { %"class.blink::MemberBase.2430" }
%"class.blink::MemberBase.2430" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2459", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2467", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2481", %"class.blink::FrameLoader", %"class.blink::Member.2502", %"class.blink::Member.343", %"class.blink::Member.2504", %"class.blink::Member.2506", %"class.blink::Member.2522", %"class.blink::Member.2524", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2526", %class.scoped_refptr.2750, %"class.blink::Member.2751", %"class.blink::Member.2753", %"class.blink::Member.2755", %"class.blink::Member.2757", %"class.blink::Member.2759", %"class.blink::Member.2763", %"class.blink::Member.2765", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2769", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2775", %"class.std::__1::unique_ptr.2776", %"class.absl::optional.2447", i32, [4 x i8], %"class.std::__1::unique_ptr.2782", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2790", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2795", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2800", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2803", %"class.blink::Member.2805", %"class.blink::Member.2807", %"class.blink::Member.2809", %"class.mojo::StructPtr.2812", %"class.blink::Member.2821", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2823", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2459" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2460" }
%"class.blink::HeapHashMap.2460" = type { %"class.WTF::HashMap.2463" }
%"class.WTF::HashMap.2463" = type { %"class.WTF::HashTable.2464" }
%"class.WTF::HashTable.2464" = type <{ %"struct.WTF::KeyValuePair.2466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2466" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2467" = type { %"class.std::__1::__compressed_pair.2468" }
%"class.std::__1::__compressed_pair.2468" = type { %"struct.std::__1::__compressed_pair_elem.2469" }
%"struct.std::__1::__compressed_pair_elem.2469" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2470", %"class.base::WeakPtrFactory.2475" }
%"class.WTF::HashMap.2470" = type { %"class.WTF::HashTable.2471" }
%"class.WTF::HashTable.2471" = type <{ %"struct.WTF::KeyValuePair.2474"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2474" = type opaque
%"class.base::WeakPtrFactory.2475" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2479" }
%"class.blink::Member.2479" = type { %"class.blink::MemberBase.2480" }
%"class.blink::MemberBase.2480" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3194" }
%"class.blink::WeakMember.3194" = type { %"class.blink::MemberBase.3195" }
%"class.blink::MemberBase.3195" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3464", i64, %"class.std::__1::map.3465", i8*, i64, %"class.base::WeakPtrFactory.3474" }
%"class.base::RepeatingCallback.3464" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3465" = type { %"class.std::__1::__tree.3466" }
%"class.std::__1::__tree.3466" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3467", %"class.std::__1::__compressed_pair.3471" }
%"class.std::__1::__compressed_pair.3467" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"class.std::__1::__compressed_pair.3471" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3474" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2481" = type { %"class.WTF::HashSet.2484" }
%"class.WTF::HashSet.2484" = type { %"class.WTF::HashTable.2485" }
%"class.WTF::HashTable.2485" = type <{ %"class.blink::WeakMember.2487"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2487" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.2429", %"class.blink::Member.2488", %"class.blink::Member.2490", %"class.std::__1::unique_ptr.2492", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2498" }
%"class.blink::Member.2488" = type { %"class.blink::MemberBase.2489" }
%"class.blink::MemberBase.2489" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2490" = type { %"class.blink::MemberBase.2491" }
%"class.blink::MemberBase.2491" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2492" = type { %"class.std::__1::__compressed_pair.2493" }
%"class.std::__1::__compressed_pair.2493" = type { %"struct.std::__1::__compressed_pair_elem.2494" }
%"struct.std::__1::__compressed_pair_elem.2494" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2498" = type { %"class.WTF::HashTable.2499" }
%"class.WTF::HashTable.2499" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2502" = type { %"class.blink::MemberBase.2503" }
%"class.blink::MemberBase.2503" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2902", %"class.blink::Member.2429", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2907", i8, i32, %"class.blink::Color", %"class.absl::optional.2909", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2914", %"class.blink::Member.2916", %"class.blink::Member.2916", %"class.std::__1::unique_ptr.2919", i32, [4 x i8], %"class.WTF::HashSet.2922", %"class.blink::Member.2929", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2931", %"class.blink::HeapHashSet.2938", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2944", i8, %"class.blink::Member.2950", i8, i8, i32, %"class.blink::HeapLinkedHashSet.2952", %"class.blink::HeapLinkedHashSet.2966", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2980", i8, %"class.std::__1::unique_ptr.2986", %"class.std::__1::unique_ptr.3062", %"class.WTF::Vector.3068", i32, %class.scoped_refptr.3073, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.3083", %"class.blink::Member.3085", %"class.blink::Member.3087", %"class.blink::HeapHashSet.3089", %"class.blink::HeapHashSet.3096", %"class.std::__1::unique_ptr.3103", %"class.std::__1::unique_ptr.3110", %"class.WTF::Vector.771" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.2902" = type { %"class.WTF::HashTable.2903" }
%"class.WTF::HashTable.2903" = type <{ %class.scoped_refptr.2906*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2906 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2907" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2908", { i64, i64 } }
%"class.blink::WeakMember.2908" = type { %"class.blink::MemberBase.2503" }
%"class.absl::optional.2909" = type { %"class.absl::optional_internal::optional_data.2910" }
%"class.absl::optional_internal::optional_data.2910" = type { %"class.absl::optional_internal::optional_data_base.2911" }
%"class.absl::optional_internal::optional_data_base.2911" = type { %"class.absl::optional_internal::optional_data_dtor_base.2912" }
%"class.absl::optional_internal::optional_data_dtor_base.2912" = type { i8, %union.anon.2913 }
%union.anon.2913 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2914" = type { %"class.blink::MemberBase.2915" }
%"class.blink::MemberBase.2915" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2916" = type { %"class.blink::MemberBase.2917" }
%"class.blink::MemberBase.2917" = type { %"class.blink::HeapHashSet.2918"* }
%"class.blink::HeapHashSet.2918" = type opaque
%"class.std::__1::unique_ptr.2919" = type { %"class.std::__1::__compressed_pair.2920" }
%"class.std::__1::__compressed_pair.2920" = type { %"struct.std::__1::__compressed_pair_elem.2921" }
%"struct.std::__1::__compressed_pair_elem.2921" = type { %"class.WTF::HashSet.2922"* }
%"class.WTF::HashSet.2922" = type { %"class.WTF::HashTable.2923" }
%"class.WTF::HashTable.2923" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2929" = type { %"class.blink::MemberBase.2930" }
%"class.blink::MemberBase.2930" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2931" = type { %"class.WTF::HashSet.2934" }
%"class.WTF::HashSet.2934" = type { %"class.WTF::HashTable.2935" }
%"class.WTF::HashTable.2935" = type <{ %"class.blink::Member.2937"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2937" = type opaque
%"class.blink::HeapHashSet.2938" = type { %"class.WTF::HashSet.2941" }
%"class.WTF::HashSet.2941" = type { %"class.WTF::HashTable.2942" }
%"class.WTF::HashTable.2942" = type <{ %"class.blink::Member.782"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2944" = type { %"class.std::__1::__compressed_pair.2945" }
%"class.std::__1::__compressed_pair.2945" = type { %"struct.std::__1::__compressed_pair_elem.2946" }
%"struct.std::__1::__compressed_pair_elem.2946" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2950" = type { %"class.blink::MemberBase.2951" }
%"class.blink::MemberBase.2951" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.2952" = type { %"class.WTF::LinkedHashSet.2955" }
%"class.WTF::LinkedHashSet.2955" = type { %"class.WTF::HashMap.2956", %"class.WTF::VectorBackedLinkedList.2960" }
%"class.WTF::HashMap.2956" = type { %"class.WTF::HashTable.2957" }
%"class.WTF::HashTable.2957" = type <{ %"struct.WTF::KeyValuePair.2959"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2959" = type opaque
%"class.WTF::VectorBackedLinkedList.2960" = type { %"class.WTF::Vector.2961", i32, i32 }
%"class.WTF::Vector.2961" = type { %"class.WTF::VectorBuffer.2962" }
%"class.WTF::VectorBuffer.2962" = type { %"class.WTF::VectorBufferBase.2963" }
%"class.WTF::VectorBufferBase.2963" = type { %"class.WTF::VectorBackedLinkedListNode.2964"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2964" = type opaque
%"class.blink::HeapLinkedHashSet.2966" = type { %"class.WTF::LinkedHashSet.2969" }
%"class.WTF::LinkedHashSet.2969" = type { %"class.WTF::HashMap.2970", %"class.WTF::VectorBackedLinkedList.2974" }
%"class.WTF::HashMap.2970" = type { %"class.WTF::HashTable.2971" }
%"class.WTF::HashTable.2971" = type <{ %"struct.WTF::KeyValuePair.2973"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2973" = type opaque
%"class.WTF::VectorBackedLinkedList.2974" = type { %"class.WTF::Vector.2975", i32, i32 }
%"class.WTF::Vector.2975" = type { %"class.WTF::VectorBuffer.2976" }
%"class.WTF::VectorBuffer.2976" = type { %"class.WTF::VectorBufferBase.2977" }
%"class.WTF::VectorBufferBase.2977" = type { %"class.WTF::VectorBackedLinkedListNode.2978"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2978" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2980" = type { %"class.std::__1::__compressed_pair.2981" }
%"class.std::__1::__compressed_pair.2981" = type { %"struct.std::__1::__compressed_pair_elem.2982" }
%"struct.std::__1::__compressed_pair_elem.2982" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2986" = type { %"class.std::__1::__compressed_pair.2987" }
%"class.std::__1::__compressed_pair.2987" = type { %"struct.std::__1::__compressed_pair_elem.2988" }
%"struct.std::__1::__compressed_pair_elem.2988" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2989, %class.scoped_refptr.2989, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.3039", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.3044", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2989 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2990", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2997" }
%"class.WTF::RefCounted.2990" = type { %"class.base::RefCounted.2991" }
%"class.base::RefCounted.2991" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2992", i32, [4 x i8] }>
%"class.WTF::Vector.2992" = type { %"class.WTF::VectorBuffer.2993" }
%"class.WTF::VectorBuffer.2993" = type { %"class.WTF::VectorBufferBase.2994" }
%"class.WTF::VectorBufferBase.2994" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2997" = type { %"class.WTF::VectorBuffer.2998" }
%"class.WTF::VectorBuffer.2998" = type { %"class.WTF::VectorBufferBase.2999" }
%"class.WTF::VectorBufferBase.2999" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.3000", %"class.std::__1::unique_ptr.3011", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.3000" = type { %"class.std::__1::__compressed_pair.3001" }
%"class.std::__1::__compressed_pair.3001" = type { %"struct.std::__1::__compressed_pair_elem.3002" }
%"struct.std::__1::__compressed_pair_elem.3002" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.3003", %"class.WTF::Vector.804", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.3003" = type { %"class.WTF::VectorBuffer.3004" }
%"class.WTF::VectorBuffer.3004" = type { %"class.WTF::VectorBufferBase.3005" }
%"class.WTF::VectorBufferBase.3005" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.3011" = type { %"class.std::__1::__compressed_pair.3012" }
%"class.std::__1::__compressed_pair.3012" = type { %"struct.std::__1::__compressed_pair_elem.3013" }
%"struct.std::__1::__compressed_pair_elem.3013" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.3014", %"class.absl::optional.3014" }
%"class.absl::optional.3014" = type { %"class.absl::optional_internal::optional_data.3015" }
%"class.absl::optional_internal::optional_data.3015" = type { %"class.absl::optional_internal::optional_data_base.3016" }
%"class.absl::optional_internal::optional_data_base.3016" = type { %"class.absl::optional_internal::optional_data_dtor_base.3017" }
%"class.absl::optional_internal::optional_data_dtor_base.3017" = type { i8, [3 x i8], %union.anon.3018 }
%union.anon.3018 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2997"*, %"class.absl::optional.3024", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.3024" = type { %"class.absl::optional_internal::optional_data.3025" }
%"class.absl::optional_internal::optional_data.3025" = type { %"class.absl::optional_internal::optional_data_base.3026" }
%"class.absl::optional_internal::optional_data_base.3026" = type { %"class.absl::optional_internal::optional_data_dtor_base.3027" }
%"class.absl::optional_internal::optional_data_dtor_base.3027" = type { i8, %union.anon.3028 }
%union.anon.3028 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.3029", %"class.WTF::Vector.3034" }
%"class.WTF::Vector.3029" = type { %"class.WTF::VectorBuffer.3030" }
%"class.WTF::VectorBuffer.3030" = type { %"class.WTF::VectorBufferBase.3031", [128 x i8] }
%"class.WTF::VectorBufferBase.3031" = type { i32*, i32, i32 }
%"class.WTF::Vector.3034" = type { %"class.WTF::VectorBuffer.3035" }
%"class.WTF::VectorBuffer.3035" = type { %"class.WTF::VectorBufferBase.3036", [128 x i8] }
%"class.WTF::VectorBufferBase.3036" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.3039" = type { %"class.WTF::VectorBuffer.3040" }
%"class.WTF::VectorBuffer.3040" = type { %"class.WTF::VectorBufferBase.3041" }
%"class.WTF::VectorBufferBase.3041" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.3044" = type { %"class.WTF::HashTable.3045" }
%"class.WTF::HashTable.3045" = type <{ %"struct.WTF::KeyValuePair.3048"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3048" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.3049", %"class.WTF::Vector.3054" }
%"class.WTF::HashMap.3049" = type { %"class.WTF::HashTable.3050" }
%"class.WTF::HashTable.3050" = type <{ %"struct.WTF::KeyValuePair.3053"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3053" = type opaque
%"class.WTF::Vector.3054" = type { %"class.WTF::VectorBuffer.3055" }
%"class.WTF::VectorBuffer.3055" = type { %"class.WTF::VectorBufferBase.3056" }
%"class.WTF::VectorBufferBase.3056" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.3062" = type { %"class.std::__1::__compressed_pair.3063" }
%"class.std::__1::__compressed_pair.3063" = type { %"struct.std::__1::__compressed_pair_elem.3064" }
%"struct.std::__1::__compressed_pair_elem.3064" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.3068" = type { %"class.WTF::VectorBuffer.3069" }
%"class.WTF::VectorBuffer.3069" = type { %"class.WTF::VectorBufferBase.3070" }
%"class.WTF::VectorBufferBase.3070" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.3073 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type { %"class.WTF::RefCounted.3074", i64, %"class.ukm::UkmRecorder"*, %"class.base::TickClock"*, i8*, %"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord", %"struct.std::__1::array", %"struct.blink::LocalFrameUkmAggregator::SampleToRecord", i32, i32, i32, i8, i32, i32 }
%"class.WTF::RefCounted.3074" = type { %"class.base::RefCounted.3075" }
%"class.base::RefCounted.3075" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord" = type { %"class.std::__1::unique_ptr.3076", %"class.std::__1::unique_ptr.3076", %"class.std::__1::unique_ptr.3076", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.3076" = type { %"class.std::__1::__compressed_pair.3077" }
%"class.std::__1::__compressed_pair.3077" = type { %"struct.std::__1::__compressed_pair_elem.3078" }
%"struct.std::__1::__compressed_pair_elem.3078" = type { %"class.blink::CustomCountHistogram"* }
%"class.blink::CustomCountHistogram" = type { %"class.base::HistogramBase"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::array" = type { [26 x %"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord"] }
%"struct.blink::LocalFrameUkmAggregator::SampleToRecord" = type <{ %"class.base::TimeDelta", %"struct.std::__1::array.3082", %"struct.std::__1::array.3082", i16, [6 x i8] }>
%"struct.std::__1::array.3082" = type { [26 x %"class.base::TimeDelta"] }
%"class.blink::Member.3083" = type { %"class.blink::MemberBase.3084" }
%"class.blink::MemberBase.3084" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.3085" = type { %"class.blink::MemberBase.3086" }
%"class.blink::MemberBase.3086" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.3087" = type { %"class.blink::MemberBase.3088" }
%"class.blink::MemberBase.3088" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.3089" = type { %"class.WTF::HashSet.3092" }
%"class.WTF::HashSet.3092" = type { %"class.WTF::HashTable.3093" }
%"class.WTF::HashTable.3093" = type <{ %"class.blink::WeakMember.3095"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3095" = type opaque
%"class.blink::HeapHashSet.3096" = type { %"class.WTF::HashSet.3099" }
%"class.WTF::HashSet.3099" = type { %"class.WTF::HashTable.3100" }
%"class.WTF::HashTable.3100" = type <{ %"class.blink::WeakMember.3102"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3102" = type opaque
%"class.std::__1::unique_ptr.3103" = type { %"class.std::__1::__compressed_pair.3104" }
%"class.std::__1::__compressed_pair.3104" = type { %"struct.std::__1::__compressed_pair_elem.3105" }
%"struct.std::__1::__compressed_pair_elem.3105" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.3106" }
%"class.base::time_internal::TimeBase.3106" = type { i64 }
%"class.std::__1::unique_ptr.3110" = type { %"class.std::__1::__compressed_pair.3111" }
%"class.std::__1::__compressed_pair.3111" = type { %"struct.std::__1::__compressed_pair_elem.3112" }
%"struct.std::__1::__compressed_pair_elem.3112" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.3113", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.3113" = type { %"class.absl::optional_internal::optional_data.3114" }
%"class.absl::optional_internal::optional_data.3114" = type { %"class.absl::optional_internal::optional_data_base.3115" }
%"class.absl::optional_internal::optional_data_base.3115" = type { %"class.absl::optional_internal::optional_data_dtor_base.3116" }
%"class.absl::optional_internal::optional_data_dtor_base.3116" = type { i8, %union.anon.3117 }
%union.anon.3117 = type { %"class.base::Time" }
%"class.blink::Member.2504" = type { %"class.blink::MemberBase.2505" }
%"class.blink::MemberBase.2505" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2506" = type { %"class.blink::MemberBase.2507" }
%"class.blink::MemberBase.2507" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.2429", %"class.blink::Member.2510", %"class.blink::Member.2512", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2514", %"class.blink::Member.2520" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1055" }
%"class.blink::Member.2510" = type { %"class.blink::MemberBase.2511" }
%"class.blink::MemberBase.2511" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2512" = type { %"class.blink::MemberBase.2513" }
%"class.blink::MemberBase.2513" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2514" = type { %"class.std::__1::__compressed_pair.2515" }
%"class.std::__1::__compressed_pair.2515" = type { %"struct.std::__1::__compressed_pair_elem.2516" }
%"struct.std::__1::__compressed_pair_elem.2516" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2520" = type { %"class.blink::MemberBase.2521" }
%"class.blink::MemberBase.2521" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2522" = type { %"class.blink::MemberBase.2523" }
%"class.blink::MemberBase.2523" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2524" = type { %"class.blink::MemberBase.2525" }
%"class.blink::MemberBase.2525" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2526" = type { %"class.blink::MemberBase.2527" }
%"class.blink::MemberBase.2527" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2530", %"class.blink::HeapListHashSet.2541", %"class.blink::HeapListHashSet.2552", %"class.blink::HeapListHashSet.2563", %"class.blink::HeapListHashSet.2574", %"class.blink::HeapListHashSet.2585", %"class.blink::HeapListHashSet.2596", %"class.blink::HeapListHashSet.2607", %"class.blink::HeapListHashSet.2618", %"class.blink::HeapListHashSet.2629", %"class.blink::HeapListHashSet.2640", %"class.blink::HeapListHashSet.2651", %"class.blink::HeapListHashSet.2662", %"class.blink::HeapListHashSet.2673", %"class.blink::HeapListHashSet.2684", %"class.blink::HeapListHashSet.2695", %"class.blink::HeapListHashSet.2706", %"class.blink::HeapListHashSet.2717", %"class.blink::HeapListHashSet.2728", %"class.blink::HeapListHashSet.2739" }
%"class.blink::HeapListHashSet.2530" = type { %"class.WTF::ListHashSet.base.2540", [7 x i8] }
%"class.WTF::ListHashSet.base.2540" = type <{ %"class.WTF::HashTable.2535", %"class.blink::Member.2537", %"class.blink::Member.2537", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2535" = type <{ %"class.blink::Member.2537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2537" = type { %"class.blink::MemberBase.2538" }
%"class.blink::MemberBase.2538" = type { %"class.blink::HeapListHashSetNode.2539"* }
%"class.blink::HeapListHashSetNode.2539" = type { %"class.blink::Member.2753", %"class.blink::Member.2537", %"class.blink::Member.2537" }
%"class.blink::HeapListHashSet.2541" = type { %"class.WTF::ListHashSet.base.2551", [7 x i8] }
%"class.WTF::ListHashSet.base.2551" = type <{ %"class.WTF::HashTable.2546", %"class.blink::Member.2548", %"class.blink::Member.2548", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2546" = type <{ %"class.blink::Member.2548"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2548" = type { %"class.blink::MemberBase.2549" }
%"class.blink::MemberBase.2549" = type { %"class.blink::HeapListHashSetNode.2550"* }
%"class.blink::HeapListHashSetNode.2550" = type { %"class.blink::Member.2896", %"class.blink::Member.2548", %"class.blink::Member.2548" }
%"class.blink::Member.2896" = type { %"class.blink::MemberBase.2897" }
%"class.blink::MemberBase.2897" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2552" = type { %"class.WTF::ListHashSet.base.2562", [7 x i8] }
%"class.WTF::ListHashSet.base.2562" = type <{ %"class.WTF::HashTable.2557", %"class.blink::Member.2559", %"class.blink::Member.2559", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2557" = type <{ %"class.blink::Member.2559"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2559" = type { %"class.blink::MemberBase.2560" }
%"class.blink::MemberBase.2560" = type { %"class.blink::HeapListHashSetNode.2561"* }
%"class.blink::HeapListHashSetNode.2561" = type { %"class.blink::Member.2892", %"class.blink::Member.2559", %"class.blink::Member.2559" }
%"class.blink::Member.2892" = type { %"class.blink::MemberBase.2893" }
%"class.blink::MemberBase.2893" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2563" = type { %"class.WTF::ListHashSet.base.2573", [7 x i8] }
%"class.WTF::ListHashSet.base.2573" = type <{ %"class.WTF::HashTable.2568", %"class.blink::Member.2570", %"class.blink::Member.2570", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2568" = type <{ %"class.blink::Member.2570"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2570" = type { %"class.blink::MemberBase.2571" }
%"class.blink::MemberBase.2571" = type { %"class.blink::HeapListHashSetNode.2572"* }
%"class.blink::HeapListHashSetNode.2572" = type { %"class.blink::Member.2888", %"class.blink::Member.2570", %"class.blink::Member.2570" }
%"class.blink::Member.2888" = type { %"class.blink::MemberBase.2889" }
%"class.blink::MemberBase.2889" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2574" = type { %"class.WTF::ListHashSet.base.2584", [7 x i8] }
%"class.WTF::ListHashSet.base.2584" = type <{ %"class.WTF::HashTable.2579", %"class.blink::Member.2581", %"class.blink::Member.2581", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2579" = type <{ %"class.blink::Member.2581"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2581" = type { %"class.blink::MemberBase.2582" }
%"class.blink::MemberBase.2582" = type { %"class.blink::HeapListHashSetNode.2583"* }
%"class.blink::HeapListHashSetNode.2583" = type { %"class.blink::Member.2884", %"class.blink::Member.2581", %"class.blink::Member.2581" }
%"class.blink::Member.2884" = type { %"class.blink::MemberBase.2885" }
%"class.blink::MemberBase.2885" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2585" = type { %"class.WTF::ListHashSet.base.2595", [7 x i8] }
%"class.WTF::ListHashSet.base.2595" = type <{ %"class.WTF::HashTable.2590", %"class.blink::Member.2592", %"class.blink::Member.2592", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2590" = type <{ %"class.blink::Member.2592"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2592" = type { %"class.blink::MemberBase.2593" }
%"class.blink::MemberBase.2593" = type { %"class.blink::HeapListHashSetNode.2594"* }
%"class.blink::HeapListHashSetNode.2594" = type { %"class.blink::Member.2880", %"class.blink::Member.2592", %"class.blink::Member.2592" }
%"class.blink::Member.2880" = type { %"class.blink::MemberBase.2881" }
%"class.blink::MemberBase.2881" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2596" = type { %"class.WTF::ListHashSet.base.2606", [7 x i8] }
%"class.WTF::ListHashSet.base.2606" = type <{ %"class.WTF::HashTable.2601", %"class.blink::Member.2603", %"class.blink::Member.2603", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2601" = type <{ %"class.blink::Member.2603"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2603" = type { %"class.blink::MemberBase.2604" }
%"class.blink::MemberBase.2604" = type { %"class.blink::HeapListHashSetNode.2605"* }
%"class.blink::HeapListHashSetNode.2605" = type { %"class.blink::Member.2876", %"class.blink::Member.2603", %"class.blink::Member.2603" }
%"class.blink::Member.2876" = type { %"class.blink::MemberBase.2877" }
%"class.blink::MemberBase.2877" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2607" = type { %"class.WTF::ListHashSet.base.2617", [7 x i8] }
%"class.WTF::ListHashSet.base.2617" = type <{ %"class.WTF::HashTable.2612", %"class.blink::Member.2614", %"class.blink::Member.2614", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2612" = type <{ %"class.blink::Member.2614"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2614" = type { %"class.blink::MemberBase.2615" }
%"class.blink::MemberBase.2615" = type { %"class.blink::HeapListHashSetNode.2616"* }
%"class.blink::HeapListHashSetNode.2616" = type { %"class.blink::Member.2872", %"class.blink::Member.2614", %"class.blink::Member.2614" }
%"class.blink::Member.2872" = type { %"class.blink::MemberBase.2873" }
%"class.blink::MemberBase.2873" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2618" = type { %"class.WTF::ListHashSet.base.2628", [7 x i8] }
%"class.WTF::ListHashSet.base.2628" = type <{ %"class.WTF::HashTable.2623", %"class.blink::Member.2625", %"class.blink::Member.2625", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2623" = type <{ %"class.blink::Member.2625"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2625" = type { %"class.blink::MemberBase.2626" }
%"class.blink::MemberBase.2626" = type { %"class.blink::HeapListHashSetNode.2627"* }
%"class.blink::HeapListHashSetNode.2627" = type { %"class.blink::Member.2868", %"class.blink::Member.2625", %"class.blink::Member.2625" }
%"class.blink::Member.2868" = type { %"class.blink::MemberBase.2869" }
%"class.blink::MemberBase.2869" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2629" = type { %"class.WTF::ListHashSet.base.2639", [7 x i8] }
%"class.WTF::ListHashSet.base.2639" = type <{ %"class.WTF::HashTable.2634", %"class.blink::Member.2636", %"class.blink::Member.2636", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2634" = type <{ %"class.blink::Member.2636"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2636" = type { %"class.blink::MemberBase.2637" }
%"class.blink::MemberBase.2637" = type { %"class.blink::HeapListHashSetNode.2638"* }
%"class.blink::HeapListHashSetNode.2638" = type { %"class.blink::Member.2864", %"class.blink::Member.2636", %"class.blink::Member.2636" }
%"class.blink::Member.2864" = type { %"class.blink::MemberBase.2865" }
%"class.blink::MemberBase.2865" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2640" = type { %"class.WTF::ListHashSet.base.2650", [7 x i8] }
%"class.WTF::ListHashSet.base.2650" = type <{ %"class.WTF::HashTable.2645", %"class.blink::Member.2647", %"class.blink::Member.2647", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2645" = type <{ %"class.blink::Member.2647"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2647" = type { %"class.blink::MemberBase.2648" }
%"class.blink::MemberBase.2648" = type { %"class.blink::HeapListHashSetNode.2649"* }
%"class.blink::HeapListHashSetNode.2649" = type { %"class.blink::Member.2757", %"class.blink::Member.2647", %"class.blink::Member.2647" }
%"class.blink::HeapListHashSet.2651" = type { %"class.WTF::ListHashSet.base.2661", [7 x i8] }
%"class.WTF::ListHashSet.base.2661" = type <{ %"class.WTF::HashTable.2656", %"class.blink::Member.2658", %"class.blink::Member.2658", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2656" = type <{ %"class.blink::Member.2658"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2658" = type { %"class.blink::MemberBase.2659" }
%"class.blink::MemberBase.2659" = type { %"class.blink::HeapListHashSetNode.2660"* }
%"class.blink::HeapListHashSetNode.2660" = type { %"class.blink::Member.2858", %"class.blink::Member.2658", %"class.blink::Member.2658" }
%"class.blink::Member.2858" = type { %"class.blink::MemberBase.2859" }
%"class.blink::MemberBase.2859" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2662" = type { %"class.WTF::ListHashSet.base.2672", [7 x i8] }
%"class.WTF::ListHashSet.base.2672" = type <{ %"class.WTF::HashTable.2667", %"class.blink::Member.2669", %"class.blink::Member.2669", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2667" = type <{ %"class.blink::Member.2669"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2669" = type { %"class.blink::MemberBase.2670" }
%"class.blink::MemberBase.2670" = type { %"class.blink::HeapListHashSetNode.2671"* }
%"class.blink::HeapListHashSetNode.2671" = type { %"class.blink::Member.2854", %"class.blink::Member.2669", %"class.blink::Member.2669" }
%"class.blink::Member.2854" = type { %"class.blink::MemberBase.2855" }
%"class.blink::MemberBase.2855" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2673" = type { %"class.WTF::ListHashSet.base.2683", [7 x i8] }
%"class.WTF::ListHashSet.base.2683" = type <{ %"class.WTF::HashTable.2678", %"class.blink::Member.2680", %"class.blink::Member.2680", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2678" = type <{ %"class.blink::Member.2680"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2680" = type { %"class.blink::MemberBase.2681" }
%"class.blink::MemberBase.2681" = type { %"class.blink::HeapListHashSetNode.2682"* }
%"class.blink::HeapListHashSetNode.2682" = type { %"class.blink::Member.2850", %"class.blink::Member.2680", %"class.blink::Member.2680" }
%"class.blink::Member.2850" = type { %"class.blink::MemberBase.2851" }
%"class.blink::MemberBase.2851" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2684" = type { %"class.WTF::ListHashSet.base.2694", [7 x i8] }
%"class.WTF::ListHashSet.base.2694" = type <{ %"class.WTF::HashTable.2689", %"class.blink::Member.2691", %"class.blink::Member.2691", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2689" = type <{ %"class.blink::Member.2691"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2691" = type { %"class.blink::MemberBase.2692" }
%"class.blink::MemberBase.2692" = type { %"class.blink::HeapListHashSetNode.2693"* }
%"class.blink::HeapListHashSetNode.2693" = type { %"class.blink::Member.2846", %"class.blink::Member.2691", %"class.blink::Member.2691" }
%"class.blink::Member.2846" = type { %"class.blink::MemberBase.2847" }
%"class.blink::MemberBase.2847" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2695" = type { %"class.WTF::ListHashSet.base.2705", [7 x i8] }
%"class.WTF::ListHashSet.base.2705" = type <{ %"class.WTF::HashTable.2700", %"class.blink::Member.2702", %"class.blink::Member.2702", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2700" = type <{ %"class.blink::Member.2702"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2702" = type { %"class.blink::MemberBase.2703" }
%"class.blink::MemberBase.2703" = type { %"class.blink::HeapListHashSetNode.2704"* }
%"class.blink::HeapListHashSetNode.2704" = type { %"class.blink::Member.2842", %"class.blink::Member.2702", %"class.blink::Member.2702" }
%"class.blink::Member.2842" = type { %"class.blink::MemberBase.2843" }
%"class.blink::MemberBase.2843" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2706" = type { %"class.WTF::ListHashSet.base.2716", [7 x i8] }
%"class.WTF::ListHashSet.base.2716" = type <{ %"class.WTF::HashTable.2711", %"class.blink::Member.2713", %"class.blink::Member.2713", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2711" = type <{ %"class.blink::Member.2713"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2713" = type { %"class.blink::MemberBase.2714" }
%"class.blink::MemberBase.2714" = type { %"class.blink::HeapListHashSetNode.2715"* }
%"class.blink::HeapListHashSetNode.2715" = type { %"class.blink::Member.2838", %"class.blink::Member.2713", %"class.blink::Member.2713" }
%"class.blink::Member.2838" = type { %"class.blink::MemberBase.2839" }
%"class.blink::MemberBase.2839" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2717" = type { %"class.WTF::ListHashSet.base.2727", [7 x i8] }
%"class.WTF::ListHashSet.base.2727" = type <{ %"class.WTF::HashTable.2722", %"class.blink::Member.2724", %"class.blink::Member.2724", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2722" = type <{ %"class.blink::Member.2724"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2724" = type { %"class.blink::MemberBase.2725" }
%"class.blink::MemberBase.2725" = type { %"class.blink::HeapListHashSetNode.2726"* }
%"class.blink::HeapListHashSetNode.2726" = type { %"class.blink::Member.2834", %"class.blink::Member.2724", %"class.blink::Member.2724" }
%"class.blink::Member.2834" = type { %"class.blink::MemberBase.2835" }
%"class.blink::MemberBase.2835" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2728" = type { %"class.WTF::ListHashSet.base.2738", [7 x i8] }
%"class.WTF::ListHashSet.base.2738" = type <{ %"class.WTF::HashTable.2733", %"class.blink::Member.2735", %"class.blink::Member.2735", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2733" = type <{ %"class.blink::Member.2735"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2735" = type { %"class.blink::MemberBase.2736" }
%"class.blink::MemberBase.2736" = type { %"class.blink::HeapListHashSetNode.2737"* }
%"class.blink::HeapListHashSetNode.2737" = type { %"class.blink::Member.2759", %"class.blink::Member.2735", %"class.blink::Member.2735" }
%"class.blink::HeapListHashSet.2739" = type { %"class.WTF::ListHashSet.base.2749", [7 x i8] }
%"class.WTF::ListHashSet.base.2749" = type <{ %"class.WTF::HashTable.2744", %"class.blink::Member.2746", %"class.blink::Member.2746", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2744" = type <{ %"class.blink::Member.2746"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2746" = type { %"class.blink::MemberBase.2747" }
%"class.blink::MemberBase.2747" = type { %"class.blink::HeapListHashSetNode.2748"* }
%"class.blink::HeapListHashSetNode.2748" = type { %"class.blink::Member.2751", %"class.blink::Member.2746", %"class.blink::Member.2746" }
%class.scoped_refptr.2750 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2751" = type { %"class.blink::MemberBase.2752" }
%"class.blink::MemberBase.2752" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2753" = type { %"class.blink::MemberBase.2754" }
%"class.blink::MemberBase.2754" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2755" = type { %"class.blink::MemberBase.2756" }
%"class.blink::MemberBase.2756" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2757" = type { %"class.blink::MemberBase.2758" }
%"class.blink::MemberBase.2758" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2759" = type { %"class.blink::MemberBase.2760" }
%"class.blink::MemberBase.2760" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2763" = type { %"class.blink::MemberBase.2764" }
%"class.blink::MemberBase.2764" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2765" = type { %"class.blink::MemberBase.2766" }
%"class.blink::MemberBase.2766" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2767" }
%"class.blink::Member.2767" = type { %"class.blink::MemberBase.2768" }
%"class.blink::MemberBase.2768" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3477" }
%"class.mojo::Remote.3477" = type { %"class.mojo::internal::InterfacePtrState.3478" }
%"class.mojo::internal::InterfacePtrState.3478" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3479" }
%"class.std::__1::unique_ptr.3479" = type { %"class.std::__1::__compressed_pair.3480" }
%"class.std::__1::__compressed_pair.3480" = type { %"struct.std::__1::__compressed_pair_elem.3481" }
%"struct.std::__1::__compressed_pair_elem.3481" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2769" = type { %"class.std::__1::__compressed_pair.2770" }
%"class.std::__1::__compressed_pair.2770" = type { %"struct.std::__1::__compressed_pair_elem.2771" }
%"struct.std::__1::__compressed_pair_elem.2771" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2775" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2776" = type { %"class.std::__1::__compressed_pair.2777" }
%"class.std::__1::__compressed_pair.2777" = type { %"struct.std::__1::__compressed_pair_elem.2778" }
%"struct.std::__1::__compressed_pair_elem.2778" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2782" = type { %"class.std::__1::__compressed_pair.2783" }
%"class.std::__1::__compressed_pair.2783" = type { %"struct.std::__1::__compressed_pair_elem.2784" }
%"struct.std::__1::__compressed_pair_elem.2784" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2788" }
%"class.blink::Member.2788" = type { %"class.blink::MemberBase.2789" }
%"class.blink::MemberBase.2789" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3487" }
%"class.mojo::AssociatedRemote.3487" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3488" }
%"class.mojo::internal::AssociatedInterfacePtrState.3488" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3489" }
%"class.std::__1::unique_ptr.3489" = type { %"class.std::__1::__compressed_pair.3490" }
%"class.std::__1::__compressed_pair.3490" = type { %"struct.std::__1::__compressed_pair_elem.3491" }
%"struct.std::__1::__compressed_pair_elem.3491" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2790" = type { %"class.blink::Member.2791" }
%"class.blink::Member.2791" = type { %"class.blink::MemberBase.2792" }
%"class.blink::MemberBase.2792" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3497" }
%"class.mojo::AssociatedRemote.3497" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3498" }
%"class.mojo::internal::AssociatedInterfacePtrState.3498" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3499" }
%"class.std::__1::unique_ptr.3499" = type { %"class.std::__1::__compressed_pair.3500" }
%"class.std::__1::__compressed_pair.3500" = type { %"struct.std::__1::__compressed_pair_elem.3501" }
%"struct.std::__1::__compressed_pair_elem.3501" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2793" }
%"class.blink::Member.2793" = type { %"class.blink::MemberBase.2794" }
%"class.blink::MemberBase.2794" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3507", %"class.blink::Member.2429", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3507" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3508" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1766" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3508" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2795" = type { %"class.blink::Member.2796" }
%"class.blink::Member.2796" = type { %"class.blink::MemberBase.2797" }
%"class.blink::MemberBase.2797" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3511", %"class.blink::Member.2429", %"class.mojo::AssociatedReceiver.3512" }
%"class.blink::ThreadState::PrefinalizerRegistration.3511" = type { i8 }
%"class.mojo::AssociatedReceiver.3512" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3513" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3513" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2798" }
%"class.blink::Member.2798" = type { %"class.blink::MemberBase.2799" }
%"class.blink::MemberBase.2799" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3516", %"class.blink::Member.2429", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3516" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2325, %"class.std::__1::unique_ptr.1766", %"class.base::WeakPtrFactory.3517" }
%"class.base::WeakPtrFactory.3517" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2800" = type { %"class.blink::Member.2801" }
%"class.blink::Member.2801" = type { %"class.blink::MemberBase.2802" }
%"class.blink::MemberBase.2802" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3520", %"class.blink::Member.2429", %"class.mojo::AssociatedReceiver.3521" }
%"class.blink::ThreadState::PrefinalizerRegistration.3520" = type { i8 }
%"class.mojo::AssociatedReceiver.3521" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3522" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3522" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2803" = type { %"class.blink::MemberBase.2804" }
%"class.blink::MemberBase.2804" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2805" = type { %"class.blink::MemberBase.2806" }
%"class.blink::MemberBase.2806" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2807" = type { %"class.blink::MemberBase.2808" }
%"class.blink::MemberBase.2808" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2809" = type { %"class.blink::MemberBase.2810" }
%"class.blink::MemberBase.2810" = type { %"class.blink::HeapHashMap.2811"* }
%"class.blink::HeapHashMap.2811" = type opaque
%"class.mojo::StructPtr.2812" = type { %"class.std::__1::unique_ptr.2813" }
%"class.std::__1::unique_ptr.2813" = type { %"class.std::__1::__compressed_pair.2814" }
%"class.std::__1::__compressed_pair.2814" = type { %"struct.std::__1::__compressed_pair_elem.2815" }
%"struct.std::__1::__compressed_pair_elem.2815" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2816", %"class.mojo::InlinedStructPtr.2817" }
%"class.mojo::InlinedStructPtr.2816" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2817" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2821" = type { %"class.blink::MemberBase.2822" }
%"class.blink::MemberBase.2822" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2823" = type { %"class.absl::optional_internal::optional_data.2824" }
%"class.absl::optional_internal::optional_data.2824" = type { %"class.absl::optional_internal::optional_data_base.2825" }
%"class.absl::optional_internal::optional_data_base.2825" = type { %"class.absl::optional_internal::optional_data_dtor_base.2826" }
%"class.absl::optional_internal::optional_data_dtor_base.2826" = type { i8, %union.anon.2827 }
%union.anon.2827 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2179", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2431" }
%"class.base::internal::flat_tree.2431" = type { %"class.std::__1::vector.2432" }
%"class.std::__1::vector.2432" = type { %"class.std::__1::__vector_base.2433" }
%"class.std::__1::__vector_base.2433" = type { %"struct.std::__1::pair.2434"*, %"struct.std::__1::pair.2434"*, %"class.std::__1::__compressed_pair.2435" }
%"struct.std::__1::pair.2434" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2435" = type { %"struct.std::__1::__compressed_pair_elem.2436" }
%"struct.std::__1::__compressed_pair_elem.2436" = type { %"struct.std::__1::pair.2434"* }
%"class.blink::Member.2440" = type { %"class.blink::MemberBase.2441" }
%"class.blink::MemberBase.2441" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2442" = type { %"class.absl::optional_internal::optional_data.2443" }
%"class.absl::optional_internal::optional_data.2443" = type { %"class.absl::optional_internal::optional_data_base.2444" }
%"class.absl::optional_internal::optional_data_base.2444" = type { %"class.absl::optional_internal::optional_data_dtor_base.2445" }
%"class.absl::optional_internal::optional_data_dtor_base.2445" = type { i8, %union.anon.2446 }
%union.anon.2446 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.2447" = type { %"class.absl::optional_internal::optional_data.2448" }
%"class.absl::optional_internal::optional_data.2448" = type { %"class.absl::optional_internal::optional_data_base.2449" }
%"class.absl::optional_internal::optional_data_base.2449" = type { %"class.absl::optional_internal::optional_data_dtor_base.2450" }
%"class.absl::optional_internal::optional_data_dtor_base.2450" = type { i8, %union.anon.2451 }
%union.anon.2451 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2452" }
%"class.blink::HeapHashSet.2452" = type { %"class.WTF::HashSet.2455" }
%"class.WTF::HashSet.2455" = type { %"class.WTF::HashTable.2456" }
%"class.WTF::HashTable.2456" = type <{ %"class.blink::WeakMember.2458"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2458" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2181" = type { %"class.blink::MemberBase.2182" }
%"class.blink::MemberBase.2182" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2185", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2187" = type { %"class.blink::MemberBase.2188" }
%"class.blink::MemberBase.2188" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2189" = type { %"class.blink::MemberBase.2190" }
%"class.blink::MemberBase.2190" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.2191" = type { %"class.blink::MemberBase.2192" }
%"class.blink::MemberBase.2192" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2193" = type { %"class.blink::MemberBase.2194" }
%"class.blink::MemberBase.2194" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2195" = type { %"class.blink::MemberBase.2196" }
%"class.blink::MemberBase.2196" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2197" = type { %"class.blink::MemberBase.2198" }
%"class.blink::MemberBase.2198" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2199" = type { %"class.blink::MemberBase.2200" }
%"class.blink::MemberBase.2200" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2201" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2202" }
%"class.blink::HeapHashSet.2202" = type { %"class.WTF::HashSet.2205" }
%"class.WTF::HashSet.2205" = type { %"class.WTF::HashTable.2206" }
%"class.WTF::HashTable.2206" = type <{ %"class.blink::WeakMember.2208"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2208" = type opaque
%"class.blink::Member.2209" = type { %"class.blink::MemberBase.2210" }
%"class.blink::MemberBase.2210" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2211" = type { %"class.blink::MemberBase.2212" }
%"class.blink::MemberBase.2212" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2213" = type { %"class.blink::MemberBase.2214" }
%"class.blink::MemberBase.2214" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2215" = type { %"class.blink::MemberBase.2216" }
%"class.blink::MemberBase.2216" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2217" = type { %"class.blink::MemberBase.2218" }
%"class.blink::MemberBase.2218" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type { %"class.blink::Member.2221", %"class.blink::WeakMember.1608", %"class.blink::Member.2185" }
%"class.blink::Member.2221" = type { %"class.blink::MemberBase.2222" }
%"class.blink::MemberBase.2222" = type { %"class.blink::ViewportScrollCallback"* }
%"class.blink::ViewportScrollCallback" = type opaque
%"class.blink::Member.2223" = type { %"class.blink::MemberBase.2224" }
%"class.blink::MemberBase.2224" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type <{ %"class.blink::ScrollableArea", %"class.blink::Member.2185", %class.scoped_refptr.2227, %class.scoped_refptr.2228, %class.scoped_refptr.2228, %"class.blink::PropertyTreeStateOrAlias", %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.898, %class.scoped_refptr.903, %class.scoped_refptr.903, %"class.blink::FloatSize", float, i8, [3 x i8], %"class.blink::IntSize", float, float, i8, [7 x i8], %"struct.cc::ElementId", %"struct.cc::ElementId", i8, [7 x i8] }>
%class.scoped_refptr.2227 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type opaque
%class.scoped_refptr.2228 = type { %"class.cc::ScrollbarLayerBase"* }
%"class.cc::ScrollbarLayerBase" = type opaque
%"class.blink::Member.2229" = type { %"class.blink::MemberBase.2230" }
%"class.blink::MemberBase.2230" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2231" = type { %"class.blink::MemberBase.2232" }
%"class.blink::MemberBase.2232" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2233" = type { %"class.blink::MemberBase.2234" }
%"class.blink::MemberBase.2234" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2235" = type { %"class.blink::MemberBase.2236" }
%"class.blink::MemberBase.2236" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2237" = type { %"class.blink::MemberBase.2238" }
%"class.blink::MemberBase.2238" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2239" }
%"class.WTF::Deque.2239" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2242" }
%"class.WTF::VectorBuffer.2242" = type { %"class.WTF::VectorBufferBase.2243" }
%"class.WTF::VectorBufferBase.2243" = type { %"class.std::__1::unique_ptr.2244"*, i32, i32 }
%"class.std::__1::unique_ptr.2244" = type { %"class.std::__1::__compressed_pair.2245" }
%"class.std::__1::__compressed_pair.2245" = type { %"struct.std::__1::__compressed_pair_elem.2246" }
%"struct.std::__1::__compressed_pair_elem.2246" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2250", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2250" = type { %"class.std::__1::__bitset.2251" }
%"class.std::__1::__bitset.2251" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2252" }
%"class.absl::optional.2252" = type { %"class.absl::optional_internal::optional_data.2253" }
%"class.absl::optional_internal::optional_data.2253" = type { %"class.absl::optional_internal::optional_data_base.2254" }
%"class.absl::optional_internal::optional_data_base.2254" = type { %"class.absl::optional_internal::optional_data_dtor_base.2255" }
%"class.absl::optional_internal::optional_data_dtor_base.2255" = type { i8, %union.anon.2256 }
%union.anon.2256 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2257", i64, %"class.absl::optional.1770", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2257" = type { %"class.absl::optional_internal::optional_data.2258" }
%"class.absl::optional_internal::optional_data.2258" = type { %"class.absl::optional_internal::optional_data_base.2259" }
%"class.absl::optional_internal::optional_data_base.2259" = type { %"class.absl::optional_internal::optional_data_dtor_base.2260" }
%"class.absl::optional_internal::optional_data_dtor_base.2260" = type { i8, %union.anon.2261 }
%union.anon.2261 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2262" = type { %"class.std::__1::unique_ptr.2263" }
%"class.std::__1::unique_ptr.2263" = type { %"class.std::__1::__compressed_pair.2264" }
%"class.std::__1::__compressed_pair.2264" = type { %"struct.std::__1::__compressed_pair_elem.2265" }
%"struct.std::__1::__compressed_pair_elem.2265" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2269" = type { %"class.WTF::HashSet.2272" }
%"class.WTF::HashSet.2272" = type { %"class.WTF::HashTable.2273" }
%"class.WTF::HashTable.2273" = type <{ %"class.blink::WeakMember.2275"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2275" = type opaque
%"class.blink::Member.2185" = type { %"class.blink::MemberBase.2186" }
%"class.blink::MemberBase.2186" = type { %"class.blink::Page"* }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2276" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2276" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2277" = type { %"class.std::__1::__compressed_pair.2278" }
%"class.std::__1::__compressed_pair.2278" = type { %"struct.std::__1::__compressed_pair_elem.2279" }
%"struct.std::__1::__compressed_pair_elem.2279" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2283" = type { %"class.std::__1::__compressed_pair.2284" }
%"class.std::__1::__compressed_pair.2284" = type { %"struct.std::__1::__compressed_pair_elem.2285" }
%"struct.std::__1::__compressed_pair_elem.2285" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.3571" }
%"class.WTF::Vector.3571" = type { %"class.WTF::VectorBuffer.3572" }
%"class.WTF::VectorBuffer.3572" = type { %"class.WTF::VectorBufferBase.3573", [64 x i8] }
%"class.WTF::VectorBufferBase.3573" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable.3174", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.3175", %"class.blink::Member.3177", %"class.blink::Member.3124", %"class.blink::Member.3179", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.3172", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.3168", %"class.blink::Member.3158", %"class.blink::Member.3170", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.3168" = type { %"class.blink::MemberBase.3169" }
%"class.blink::MemberBase.3169" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.3170" = type { %"class.blink::MemberBase.3171" }
%"class.blink::MemberBase.3171" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::Member.3172" = type { %"class.blink::MemberBase.3173" }
%"class.blink::MemberBase.3173" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable.3174" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.3175" = type { %"class.blink::MemberBase.3176" }
%"class.blink::MemberBase.3176" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type opaque
%"class.blink::Member.3177" = type { %"class.blink::MemberBase.3178" }
%"class.blink::MemberBase.3178" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.3179" = type { %"class.blink::MemberBase.3180" }
%"class.blink::MemberBase.3180" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::LayoutImageResource" = type { i32 (...)**, %"class.blink::LayoutObject"*, %"class.blink::Member.3129" }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::HTMLMediaElement" = type { %"class.blink::HTMLElement", %"class.blink::Supplementable.3185", %"class.blink::ActiveScriptWrappable.3193", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.media::mojom::blink::MediaPlayer", %"class.blink::WebMediaPlayerClient", %"class.blink::ThreadState::PrefinalizerRegistration.3196", %"class.blink::HeapTaskRunnerTimer.3197", %"class.blink::HeapTaskRunnerTimer.3197", %"class.blink::HeapTaskRunnerTimer.3197", %"class.blink::HeapTaskRunnerTimer.3197", %"class.blink::HeapTaskRunnerTimer.3197", %"class.blink::Member.3200", %"class.blink::Member.3202", double, double, i32, i32, i32, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::Member.3204", %"class.blink::Member.3327", double, double, %"class.absl::optional.3329", double, double, double, i32, %"class.blink::Member.3160", %"class.blink::Member.318", i32, %"class.blink::HeapTaskRunnerTimer.3197", %"class.std::__1::unique_ptr.3334", %"class.cc::Layer"*, %class.scoped_refptr.3340, %"class.blink::Member.3341", double, i8, double, i32, i16, %"class.absl::optional.3310", i8, %"class.base::TimeTicks", %"class.blink::Member.3343", %"class.blink::Member.3345", %"class.blink::Member.3347", %"class.blink::HeapVector.3349", %"class.blink::Member.3356", %"class.blink::HeapVector.3358", %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::HeapVector.3358", %"class.blink::HeapVector.3358", i32, %"class.blink::Member.3387", %"class.blink::HTMLMediaElement::AudioSourceProviderImpl", %"class.blink::Member.3413", %"class.blink::WebRemotePlaybackClient"*, %"class.blink::Member.3415", %"class.blink::Member.3418", %"class.blink::Member.1546", %"class.blink::Member.3420", %"class.blink::Member.3423", %"class.blink::Member.3430" }
%"class.blink::Supplementable.3185" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.3186" }
%"class.blink::HeapHashMap.3186" = type { %"class.WTF::HashMap.3189" }
%"class.WTF::HashMap.3189" = type { %"class.WTF::HashTable.3190" }
%"class.WTF::HashTable.3190" = type <{ %"struct.WTF::KeyValuePair.3192"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3192" = type opaque
%"class.blink::ActiveScriptWrappable.3193" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.media::mojom::blink::MediaPlayer" = type { i32 (...)** }
%"class.blink::WebMediaPlayerClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.3196" = type { i8 }
%"class.blink::Member.3200" = type { %"class.blink::MemberBase.3201" }
%"class.blink::MemberBase.3201" = type { %"class.blink::TimeRanges"* }
%"class.blink::TimeRanges" = type opaque
%"class.blink::Member.3202" = type { %"class.blink::MemberBase.3203" }
%"class.blink::MemberBase.3203" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type opaque
%"class.blink::Member.3204" = type { %"class.blink::MemberBase.3205" }
%"class.blink::MemberBase.3205" = type { %"class.blink::MediaStreamDescriptor"* }
%"class.blink::MediaStreamDescriptor" = type <{ %"class.blink::Member.3208", %"class.WTF::String", i32, [4 x i8], %"class.blink::HeapVector.3210", %"class.blink::HeapVector.3210", %"class.WTF::Vector.3322", i8, [7 x i8] }>
%"class.blink::Member.3208" = type { %"class.blink::MemberBase.3209" }
%"class.blink::MemberBase.3209" = type { %"class.blink::MediaStreamDescriptorClient"* }
%"class.blink::MediaStreamDescriptorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapVector.3210" = type { %"class.WTF::Vector.3213" }
%"class.WTF::Vector.3213" = type { %"class.WTF::VectorBuffer.3214" }
%"class.WTF::VectorBuffer.3214" = type { %"class.WTF::VectorBufferBase.3215" }
%"class.WTF::VectorBufferBase.3215" = type { %"class.blink::Member.3216"*, i32, i32 }
%"class.blink::Member.3216" = type { %"class.blink::MemberBase.3217" }
%"class.blink::MemberBase.3217" = type { %"class.blink::MediaStreamComponent"* }
%"class.blink::MediaStreamComponent" = type { %"class.blink::ThreadState::PrefinalizerRegistration.3220", %"class.blink::MediaStreamComponent::AudioSourceProviderImpl", %"class.blink::Member.3228", %"class.WTF::String", i32, i8, i8, i32, %"class.blink::MediaConstraints", %"class.std::__1::unique_ptr.3315" }
%"class.blink::ThreadState::PrefinalizerRegistration.3220" = type { i8 }
%"class.blink::MediaStreamComponent::AudioSourceProviderImpl" = type { %"class.blink::AudioSourceProvider", %"class.blink::WebAudioSourceProvider"*, %"class.WTF::Mutex", %"class.blink::WebVector" }
%"class.blink::AudioSourceProvider" = type { i32 (...)** }
%"class.blink::WebAudioSourceProvider" = type { i32 (...)** }
%"class.blink::WebVector" = type { %"class.std::__1::vector.3221" }
%"class.std::__1::vector.3221" = type { %"class.std::__1::__vector_base.3222" }
%"class.std::__1::__vector_base.3222" = type { float**, float**, %"class.std::__1::__compressed_pair.3223" }
%"class.std::__1::__compressed_pair.3223" = type { %"struct.std::__1::__compressed_pair_elem.3224" }
%"struct.std::__1::__compressed_pair_elem.3224" = type { float** }
%"class.blink::Member.3228" = type { %"class.blink::MemberBase.3229" }
%"class.blink::MemberBase.3229" = type { %"class.blink::MediaStreamSource"* }
%"class.blink::MediaStreamSource" = type <{ %"class.blink::ThreadState::PrefinalizerRegistration.3232", [7 x i8], %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", i8, [3 x i8], i32, i8, [7 x i8], %"class.blink::HeapHashSet.3233", %"class.WTF::Mutex", %"class.WTF::HashSet.3240", %"class.std::__1::unique_ptr.3244", %"class.blink::MediaConstraints", %"struct.blink::MediaStreamSource::Capabilities", %"class.absl::optional.3305", %"class.absl::optional.3310", %"class.absl::optional.3310", [4 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.3232" = type { i8 }
%"class.blink::HeapHashSet.3233" = type { %"class.WTF::HashSet.3236" }
%"class.WTF::HashSet.3236" = type { %"class.WTF::HashTable.3237" }
%"class.WTF::HashTable.3237" = type <{ %"class.blink::WeakMember.3239"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3239" = type opaque
%"class.WTF::HashSet.3240" = type { %"class.WTF::HashTable.3241" }
%"class.WTF::HashTable.3241" = type <{ %"class.blink::AudioDestinationConsumer"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioDestinationConsumer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3244" = type { %"class.std::__1::__compressed_pair.3245" }
%"class.std::__1::__compressed_pair.3245" = type { %"struct.std::__1::__compressed_pair_elem.3246" }
%"struct.std::__1::__compressed_pair_elem.3246" = type { %"class.blink::WebPlatformMediaStreamSource"* }
%"class.blink::WebPlatformMediaStreamSource" = type { i32 (...)**, %"struct.blink::MediaStreamDevice", %"class.base::OnceCallback.3291", %"class.blink::WebPrivatePtr.3292" }
%"struct.blink::MediaStreamDevice" = type { i32, %"class.std::__1::basic_string", %"struct.media::VideoCaptureControlSupport", i32, %"class.absl::optional.2442", %"class.absl::optional.2442", %"class.std::__1::basic_string", %"class.media::AudioParameters", %"class.absl::optional.3259", %"class.absl::optional.2447" }
%"struct.media::VideoCaptureControlSupport" = type { i8, i8, i8 }
%"class.media::AudioParameters" = type { i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.3247", i32, %"class.absl::optional.3254" }
%"class.std::__1::vector.3247" = type { %"class.std::__1::__vector_base.3248" }
%"class.std::__1::__vector_base.3248" = type { %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, %"class.std::__1::__compressed_pair.3249" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__compressed_pair.3249" = type { %"struct.std::__1::__compressed_pair_elem.3250" }
%"struct.std::__1::__compressed_pair_elem.3250" = type { %"class.gfx::Point3F"* }
%"class.absl::optional.3254" = type { %"class.absl::optional_internal::optional_data.3255" }
%"class.absl::optional_internal::optional_data.3255" = type { %"class.absl::optional_internal::optional_data_base.3256" }
%"class.absl::optional_internal::optional_data_base.3256" = type { %"class.absl::optional_internal::optional_data_dtor_base.3257" }
%"class.absl::optional_internal::optional_data_dtor_base.3257" = type { i8, %union.anon.3258 }
%union.anon.3258 = type { %"struct.media::AudioParameters::HardwareCapabilities" }
%"struct.media::AudioParameters::HardwareCapabilities" = type { i32, i32 }
%"class.absl::optional.3259" = type { %"class.absl::optional_internal::optional_data.3260" }
%"class.absl::optional_internal::optional_data.3260" = type { %"class.absl::optional_internal::optional_data_base.3261" }
%"class.absl::optional_internal::optional_data_base.3261" = type { %"class.absl::optional_internal::optional_data_dtor_base.3262" }
%"class.absl::optional_internal::optional_data_dtor_base.3262" = type { i8, %union.anon.3263 }
%union.anon.3263 = type { %"class.mojo::StructPtr.3264" }
%"class.mojo::StructPtr.3264" = type { %"class.std::__1::unique_ptr.3265" }
%"class.std::__1::unique_ptr.3265" = type { %"class.std::__1::__compressed_pair.3266" }
%"class.std::__1::__compressed_pair.3266" = type { %"struct.std::__1::__compressed_pair_elem.3267" }
%"struct.std::__1::__compressed_pair_elem.3267" = type { %"class.media::mojom::DisplayMediaInformation"* }
%"class.media::mojom::DisplayMediaInformation" = type { i32, i8, i32, %"class.mojo::StructPtr.3268" }
%"class.mojo::StructPtr.3268" = type { %"class.std::__1::unique_ptr.3269" }
%"class.std::__1::unique_ptr.3269" = type { %"class.std::__1::__compressed_pair.3270" }
%"class.std::__1::__compressed_pair.3270" = type { %"struct.std::__1::__compressed_pair_elem.3271" }
%"struct.std::__1::__compressed_pair_elem.3271" = type { %"class.media::mojom::CaptureHandle"* }
%"class.media::mojom::CaptureHandle" = type { %"class.url::Origin", %"class.std::__1::basic_string.3272" }
%"class.std::__1::basic_string.3272" = type { %"class.std::__1::__compressed_pair.3273" }
%"class.std::__1::__compressed_pair.3273" = type { %"struct.std::__1::__compressed_pair_elem.3274" }
%"struct.std::__1::__compressed_pair_elem.3274" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.3275 }
%union.anon.3275 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::OnceCallback.3291" = type { %"class.base::internal::CallbackBase" }
%"class.blink::WebPrivatePtr.3292" = type { i8* }
%"struct.blink::MediaStreamSource::Capabilities" = type { %"class.WTF::Vector.3297", %"class.WTF::Vector.3297", %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.1566", %"class.WTF::Vector.630", %"class.WTF::Vector.1566", %"class.WTF::Vector.1566", %"class.WTF::Vector.3301", %"class.WTF::Vector.3301", %"class.WTF::Vector.3301", %"class.WTF::Vector.567", i32, %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector.3297" = type { %"class.WTF::VectorBuffer.3298" }
%"class.WTF::VectorBuffer.3298" = type { %"class.WTF::VectorBufferBase.1160" }
%"class.WTF::Vector.3301" = type { %"class.WTF::VectorBuffer.3302" }
%"class.WTF::VectorBuffer.3302" = type { %"class.WTF::VectorBufferBase.3031" }
%"class.absl::optional.3305" = type { %"class.absl::optional_internal::optional_data.3306" }
%"class.absl::optional_internal::optional_data.3306" = type { %"class.absl::optional_internal::optional_data_base.3307" }
%"class.absl::optional_internal::optional_data_base.3307" = type { %"class.absl::optional_internal::optional_data_dtor_base.3308" }
%"class.absl::optional_internal::optional_data_dtor_base.3308" = type { i8, %union.anon.3309 }
%union.anon.3309 = type { i32 }
%"class.blink::MediaConstraints" = type { %"class.blink::WebPrivatePtr.3296" }
%"class.blink::WebPrivatePtr.3296" = type { i8* }
%"class.std::__1::unique_ptr.3315" = type { %"class.std::__1::__compressed_pair.3316" }
%"class.std::__1::__compressed_pair.3316" = type { %"struct.std::__1::__compressed_pair_elem.3317" }
%"struct.std::__1::__compressed_pair_elem.3317" = type { %"class.blink::MediaStreamTrackPlatform"* }
%"class.blink::MediaStreamTrackPlatform" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.WTF::Vector.3322" = type { %"class.WTF::VectorBuffer.3323" }
%"class.WTF::VectorBuffer.3323" = type { %"class.WTF::VectorBufferBase.3324" }
%"class.WTF::VectorBufferBase.3324" = type { %"class.blink::WebMediaStreamObserver"**, i32, i32 }
%"class.blink::WebMediaStreamObserver" = type opaque
%"class.blink::Member.3327" = type { %"class.blink::MemberBase.3328" }
%"class.blink::MemberBase.3328" = type { %"class.blink::MediaError"* }
%"class.blink::MediaError" = type opaque
%"class.absl::optional.3329" = type { %"class.absl::optional_internal::optional_data.3330" }
%"class.absl::optional_internal::optional_data.3330" = type { %"class.absl::optional_internal::optional_data_base.3331" }
%"class.absl::optional_internal::optional_data_base.3331" = type { %"class.absl::optional_internal::optional_data_dtor_base.3332" }
%"class.absl::optional_internal::optional_data_dtor_base.3332" = type { i8, %union.anon.3333 }
%union.anon.3333 = type { %"class.base::ElapsedTimer" }
%"class.blink::HeapTaskRunnerTimer.3197" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.3198", { i64, i64 } }
%"class.blink::WeakMember.3198" = type { %"class.blink::MemberBase.3199" }
%"class.blink::MemberBase.3199" = type { %"class.blink::HTMLMediaElement"* }
%"class.std::__1::unique_ptr.3334" = type { %"class.std::__1::__compressed_pair.3335" }
%"class.std::__1::__compressed_pair.3335" = type { %"struct.std::__1::__compressed_pair_elem.3336" }
%"struct.std::__1::__compressed_pair_elem.3336" = type { %"class.blink::WebMediaPlayer"* }
%"class.blink::WebMediaPlayer" = type { i32 (...)** }
%class.scoped_refptr.3340 = type { %"class.blink::MediaSourceAttachment"* }
%"class.blink::MediaSourceAttachment" = type opaque
%"class.blink::Member.3341" = type { %"class.blink::MemberBase.3342" }
%"class.blink::MemberBase.3342" = type { %"class.blink::MediaSourceTracer"* }
%"class.blink::MediaSourceTracer" = type opaque
%"class.absl::optional.3310" = type { %"class.absl::optional_internal::optional_data.3311" }
%"class.absl::optional_internal::optional_data.3311" = type { %"class.absl::optional_internal::optional_data_base.3312" }
%"class.absl::optional_internal::optional_data_base.3312" = type { %"class.absl::optional_internal::optional_data_dtor_base.3313" }
%"class.absl::optional_internal::optional_data_dtor_base.3313" = type { i8, %union.anon.3314 }
%union.anon.3314 = type { i8 }
%"class.blink::Member.3343" = type { %"class.blink::MemberBase.3344" }
%"class.blink::MemberBase.3344" = type { %"class.blink::AudioTrackList"* }
%"class.blink::AudioTrackList" = type opaque
%"class.blink::Member.3345" = type { %"class.blink::MemberBase.3346" }
%"class.blink::MemberBase.3346" = type { %"class.blink::VideoTrackList"* }
%"class.blink::VideoTrackList" = type opaque
%"class.blink::Member.3347" = type { %"class.blink::MemberBase.3348" }
%"class.blink::MemberBase.3348" = type { %"class.blink::TextTrackList"* }
%"class.blink::TextTrackList" = type opaque
%"class.blink::HeapVector.3349" = type { %"class.WTF::Vector.3352" }
%"class.WTF::Vector.3352" = type { %"class.WTF::VectorBuffer.3353" }
%"class.WTF::VectorBuffer.3353" = type { %"class.WTF::VectorBufferBase.3354" }
%"class.WTF::VectorBufferBase.3354" = type { %"class.blink::Member.1406"*, i32, i32 }
%"class.blink::Member.3356" = type { %"class.blink::MemberBase.3357" }
%"class.blink::MemberBase.3357" = type { %"class.blink::CueTimeline"* }
%"class.blink::CueTimeline" = type opaque
%"class.blink::HeapVector.3358" = type { %"class.WTF::Vector.3361" }
%"class.WTF::Vector.3361" = type { %"class.WTF::VectorBuffer.3362" }
%"class.WTF::VectorBuffer.3362" = type { %"class.WTF::VectorBufferBase.3363" }
%"class.WTF::VectorBufferBase.3363" = type { %"class.blink::Member.3364"*, i32, i32 }
%"class.blink::Member.3364" = type { %"class.blink::MemberBase.3365" }
%"class.blink::MemberBase.3365" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.3368", i32, %"class.blink::Member.3369", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.3380", %"class.blink::SelfKeepAlive.3383" }
%"class.blink::ThreadState::PrefinalizerRegistration.3368" = type { i8 }
%"class.blink::Member.3369" = type { %"class.blink::MemberBase.3370" }
%"class.blink::MemberBase.3370" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.3373, %"class.blink::Member.3374", %"class.blink::SelfKeepAlive", %"class.util::TokenType.3378" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.3373 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.3374" = type { %"class.blink::MemberBase.3375" }
%"class.blink::MemberBase.3375" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3376" }
%"class.blink::Persistent.3376" = type { %"class.blink::PersistentBase.3377" }
%"class.blink::PersistentBase.3377" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.util::TokenType.3378" = type { %"class.base::StrongAlias.3379" }
%"class.base::StrongAlias.3379" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.3369", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.3380", %class.scoped_refptr.1036 }
%"class.blink::TraceWrapperV8Reference.3380" = type { %"class.v8::TracedReference.3381" }
%"class.v8::TracedReference.3381" = type { %"class.v8::BasicTracedReference.3382" }
%"class.v8::BasicTracedReference.3382" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.3383" = type { %"class.blink::Persistent.3384" }
%"class.blink::Persistent.3384" = type { %"class.blink::PersistentBase.3385" }
%"class.blink::PersistentBase.3385" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Member.3387" = type { %"class.blink::MemberBase.3388" }
%"class.blink::MemberBase.3388" = type { %"class.blink::AudioSourceProviderClient"* }
%"class.blink::AudioSourceProviderClient" = type opaque
%"class.blink::HTMLMediaElement::AudioSourceProviderImpl" = type { %"class.blink::AudioSourceProvider", %class.scoped_refptr.3389, %"class.blink::Member.3409", %"class.WTF::Mutex" }
%class.scoped_refptr.3389 = type { %"class.blink::WebAudioSourceProviderImpl"* }
%"class.blink::WebAudioSourceProviderImpl" = type { %"class.blink::WebAudioSourceProvider", %"class.media::SwitchableAudioRendererSink.base", double, i32, %"class.base::RepeatingCallback", %"class.blink::WebAudioSourceProviderClient"*, %"class.base::Lock", %class.scoped_refptr.3391, %"class.std::__1::unique_ptr.3392", %"class.std::__1::unique_ptr.3402", %"class.media::MediaLog"*, %"class.base::OnceCallback", %"class.base::WeakPtrFactory.3408" }
%"class.media::SwitchableAudioRendererSink.base" = type { %"class.media::RestartableAudioRendererSink.base" }
%"class.media::RestartableAudioRendererSink.base" = type { %"class.media::AudioRendererSink.base" }
%"class.media::AudioRendererSink.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3390" }>
%"class.base::RefCountedThreadSafe.3390" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WebAudioSourceProviderClient" = type { i32 (...)** }
%class.scoped_refptr.3391 = type { %"class.media::SwitchableAudioRendererSink"* }
%"class.media::SwitchableAudioRendererSink" = type { %"class.media::RestartableAudioRendererSink.base", [4 x i8] }
%"class.std::__1::unique_ptr.3392" = type { %"class.std::__1::__compressed_pair.3393" }
%"class.std::__1::__compressed_pair.3393" = type { %"struct.std::__1::__compressed_pair_elem.3394" }
%"struct.std::__1::__compressed_pair_elem.3394" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.3395", i8, i64, i32, %"class.std::__1::vector.3221", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.3395" = type { %"class.std::__1::__compressed_pair.3396" }
%"class.std::__1::__compressed_pair.3396" = type { %"struct.std::__1::__compressed_pair_elem.3397" }
%"struct.std::__1::__compressed_pair_elem.3397" = type { float* }
%"class.std::__1::unique_ptr.3402" = type { %"class.std::__1::__compressed_pair.3403" }
%"class.std::__1::__compressed_pair.3403" = type { %"struct.std::__1::__compressed_pair_elem.3404" }
%"struct.std::__1::__compressed_pair_elem.3404" = type { %"class.blink::WebAudioSourceProviderImpl::TeeFilter"* }
%"class.blink::WebAudioSourceProviderImpl::TeeFilter" = type opaque
%"class.media::MediaLog" = type opaque
%"class.base::WeakPtrFactory.3408" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.3409" = type { %"class.blink::MemberBase.3410" }
%"class.blink::MemberBase.3410" = type { %"class.blink::HTMLMediaElement::AudioClientImpl"* }
%"class.blink::HTMLMediaElement::AudioClientImpl" = type { %"class.blink::WebAudioSourceProviderClient", %"class.blink::Member.3387" }
%"class.blink::Member.3413" = type { %"class.blink::MemberBase.3414" }
%"class.blink::MemberBase.3414" = type { %"class.blink::AutoplayPolicy"* }
%"class.blink::AutoplayPolicy" = type opaque
%"class.blink::WebRemotePlaybackClient" = type opaque
%"class.blink::Member.3415" = type { %"class.blink::MemberBase.3416" }
%"class.blink::MemberBase.3416" = type { %"class.blink::MediaControls"* }
%"class.blink::MediaControls" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3417" }
%"class.blink::Member.3417" = type { %"class.blink::MemberBase.3199" }
%"class.blink::Member.3418" = type { %"class.blink::MemberBase.3419" }
%"class.blink::MemberBase.3419" = type { %"class.blink::HTMLMediaElementControlsList"* }
%"class.blink::HTMLMediaElementControlsList" = type opaque
%"class.blink::Member.3420" = type { %"class.blink::MemberBase.3421" }
%"class.blink::MemberBase.3421" = type { %"class.blink::DisallowNewWrapper.3422"* }
%"class.blink::DisallowNewWrapper.3422" = type opaque
%"class.blink::Member.3423" = type { %"class.blink::MemberBase.3424" }
%"class.blink::MemberBase.3424" = type { %"class.blink::DisallowNewWrapper.3425"* }
%"class.blink::DisallowNewWrapper.3425" = type { %"class.blink::HeapMojoAssociatedRemoteSet" }
%"class.blink::HeapMojoAssociatedRemoteSet" = type { %"class.blink::Member.3428" }
%"class.blink::Member.3428" = type { %"class.blink::MemberBase.3429" }
%"class.blink::MemberBase.3429" = type { %"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.3430" = type { %"class.blink::MemberBase.3431" }
%"class.blink::MemberBase.3431" = type { %"class.blink::DisallowNewWrapper.3432"* }
%"class.blink::DisallowNewWrapper.3432" = type opaque
%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper" = type { %"class.WTF::VectorBackedLinkedListConstIterator", %"struct.WTF::HashTableConstIteratorAdapter" }
%"class.WTF::VectorBackedLinkedListConstIterator" = type { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* }
%"struct.WTF::HashTableConstIteratorAdapter" = type { %"class.WTF::HashTableConstIterator" }
%"class.WTF::HashTableConstIterator" = type { %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv = comdat any

$_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS5_EEEEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEEC2ERKS8_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS4_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_EC2ERKS8_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEES0_EEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv = comdat any

$_ZN5blink13HeapAllocator16NotifyNewObjectsIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEES0_EENS2_12VectorTraitsIS7_EEEEvPT_m = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_9ScrollbarEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_ = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZN3WTF15ConstructTraitsINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEENS_12VectorTraitsIS7_EES6_E25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/layout/hit_test_result.cc\00", align 1
@.str.1 = private unnamed_addr constant [70 x i8] c"!DisplayLockUtilities::NearestLockedExclusiveAncestor(*layout_object)\00", align 1
@_ZN5blink10html_names11kUsemapAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names8kAltAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16input_type_names6kImageE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase27is_inert_attribute_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink10html_names9kEmbedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kObjectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink9svg_names9kImageTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapLinkedHashSetINS1_6MemberINS1_4NodeEEENS_10HashTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [147 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapLinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> > >]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.9 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [413 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Node>, WTF::KeyValuePair<blink::Member<blink::Node>, unsigned int>, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::Node>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<unsigned int> >, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator> >]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.12 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.13 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS_26VectorBackedLinkedListNodeINS1_6MemberINS1_4NodeEEENS1_13HeapAllocatorEEENS_12VectorTraitsIS8_EEEEEEPKcv = private unnamed_addr constant [259 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<WTF::VectorBackedLinkedListNode<blink::Member<blink::Node>, blink::HeapAllocator>, WTF::VectorTraits<WTF::VectorBackedLinkedListNode<blink::Member<blink::Node>, blink::HeapAllocator> > >]\00", align 1
@_ZN5blink9svg_names7kUseTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kAudioTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kVideoTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN3WTFL9kNotFoundE = internal constant i32 -1, align 4
@.str.14 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.15 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink10html_names8kAreaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kMapTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink13HitTestResultC1Ev = hidden unnamed_addr alias void (%"class.blink::HitTestResult"*), void (%"class.blink::HitTestResult"*)* @_ZN5blink13HitTestResultC2Ev
@_ZN5blink13HitTestResultC1ERKNS_14HitTestRequestERKNS_15HitTestLocationE = hidden unnamed_addr alias void (%"class.blink::HitTestResult"*, %"class.blink::HitTestRequest"*, %"class.blink::HitTestLocation"*), void (%"class.blink::HitTestResult"*, %"class.blink::HitTestRequest"*, %"class.blink::HitTestLocation"*)* @_ZN5blink13HitTestResultC2ERKNS_14HitTestRequestERKNS_15HitTestLocationE
@_ZN5blink13HitTestResultC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::HitTestResult"*, %"class.blink::HitTestResult"*), void (%"class.blink::HitTestResult"*, %"class.blink::HitTestResult"*)* @_ZN5blink13HitTestResultC2ERKS0_
@_ZN5blink13HitTestResultD1Ev = hidden unnamed_addr alias void (%"class.blink::HitTestResult"*), void (%"class.blink::HitTestResult"*)* @_ZN5blink13HitTestResultD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink13HitTestResultC2Ev(%"class.blink::HitTestResult"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 0, i32 0
  store i32 6, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 1
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 11, i32 0, i32 0
  %7 = bitcast %"class.blink::Node"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 65, i1 false)
  %8 = bitcast %"class.blink::HeapLinkedHashSet.1885"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResultC2ERKNS_14HitTestRequestERKNS_15HitTestLocationE(%"class.blink::HitTestResult"* nocapture, %"class.blink::HitTestRequest"* nocapture readonly dereferenceable(16), %"class.blink::HitTestLocation"* nocapture readonly dereferenceable(72)) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.blink::HitTestResult"* %0 to i8*
  %5 = bitcast %"class.blink::HitTestRequest"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 1
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 6
  %9 = bitcast %"class.blink::HitTestLocation"* %2 to i64*
  %10 = bitcast %"struct.blink::PhysicalOffset"* %8 to i64*
  %11 = bitcast %"class.blink::Node"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false)
  %12 = load i64, i64* %9, align 4
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 7, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 11, i32 0, i32 0
  %15 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 25, i1 false)
  %16 = bitcast %"class.blink::HeapLinkedHashSet.1885"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResultC2ERKS0_(%"class.blink::HitTestResult"* nocapture, %"class.blink::HitTestResult"* nocapture readonly dereferenceable(112)) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::HitTestResult"* %0 to i8*
  %4 = bitcast %"class.blink::HitTestResult"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  store i8 %7, i8* %5, align 8
  %8 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.blink::Node"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::Member.318"* %8 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 3, i32 0, i32 0
  %15 = bitcast %"class.blink::Node"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::Member.318"* %13 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 4
  %19 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 4, i32 0, i32 0
  %20 = bitcast %"class.blink::Element"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.343"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 5
  %24 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 5
  %25 = bitcast %"class.blink::Member.318"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::Member.318"* %23 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 6
  %29 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 6
  %30 = bitcast %"struct.blink::PhysicalOffset"* %29 to i64*
  %31 = bitcast %"struct.blink::PhysicalOffset"* %28 to i64*
  %32 = load i64, i64* %30, align 8
  store i64 %32, i64* %31, align 8
  %33 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 7
  %34 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 7
  %35 = bitcast %"struct.blink::PhysicalOffset"* %34 to i64*
  %36 = bitcast %"struct.blink::PhysicalOffset"* %33 to i64*
  %37 = load i64, i64* %35, align 4
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 8
  %39 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 8, i32 0, i32 0
  %40 = bitcast %"class.blink::Element"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.blink::Member.343"* %38 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 9
  %44 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 9, i32 0, i32 0
  %45 = bitcast %"class.blink::Scrollbar"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::Member.782"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 10
  %49 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 10
  %50 = load i8, i8* %49, align 8, !range !2
  store i8 %50, i8* %48, align 8
  %51 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 11
  %52 = getelementptr inbounds %"class.blink::Member.1883", %"class.blink::Member.1883"* %51, i64 0, i32 0, i32 0
  store %"class.blink::HeapLinkedHashSet.1885"* null, %"class.blink::HeapLinkedHashSet.1885"** %52, align 8
  %53 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 12, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %2
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #11
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !3

71:                                               ; preds = %62
  tail call void @llvm.trap() #11
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %2, %57, %72
  %75 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 11, i32 0, i32 0
  %76 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %75, align 8
  %77 = icmp eq %"class.blink::HeapLinkedHashSet.1885"* %76, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %74
  %79 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS5_EEEEEEPhm(i64 48) #11
  %80 = bitcast i8* %79 to %"class.WTF::LinkedHashSet.1888"*
  %81 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %76, i64 0, i32 0
  tail call void @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEEC2ERKS8_(%"class.WTF::LinkedHashSet.1888"* %80, %"class.WTF::LinkedHashSet.1888"* dereferenceable(48) %81) #11
  %82 = getelementptr inbounds i8, i8* %79, i64 -4
  %83 = bitcast i8* %82 to i16*
  %84 = load atomic i16, i16* %83 monotonic, align 2
  %85 = or i16 %84, 1
  store atomic i16 %85, i16* %83 release, align 2
  %86 = ptrtoint i8* %79 to i64
  br label %87

87:                                               ; preds = %74, %78
  %88 = phi i8* [ %79, %78 ], [ null, %74 ]
  %89 = phi i64 [ %86, %78 ], [ 0, %74 ]
  %90 = bitcast %"class.blink::Member.1883"* %51 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %87
  %94 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %88) #11
  br label %95

95:                                               ; preds = %87, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResultD2Ev(%"class.blink::HitTestResult"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #11
  br label %18

18:                                               ; preds = %1, %14, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"class.blink::HitTestResult"* @_ZN5blink13HitTestResultaSERKS0_(%"class.blink::HitTestResult"* returned, %"class.blink::HitTestResult"* nocapture readonly dereferenceable(112)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::HitTestResult"* %0 to i8*
  %4 = bitcast %"class.blink::HitTestResult"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  tail call void @_ZN5blink13HitTestResult24PopulateFromCachedResultERKS0_(%"class.blink::HitTestResult"* %0, %"class.blink::HitTestResult"* dereferenceable(112) %1)
  ret %"class.blink::HitTestResult"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResult24PopulateFromCachedResultERKS0_(%"class.blink::HitTestResult"* nocapture, %"class.blink::HitTestResult"* nocapture readonly dereferenceable(112)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::Node"* %4 to i64
  %7 = bitcast %"class.blink::Member.318"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::Node"* %4 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #11
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 3
  %17 = ptrtoint %"class.blink::Node"* %15 to i64
  %18 = bitcast %"class.blink::Member.318"* %16 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %13
  %22 = bitcast %"class.blink::Node"* %15 to i8*
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %24

24:                                               ; preds = %13, %21
  %25 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 4, i32 0, i32 0
  %26 = load %"class.blink::Element"*, %"class.blink::Element"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 4
  %28 = ptrtoint %"class.blink::Element"* %26 to i64
  %29 = bitcast %"class.blink::Member.343"* %27 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.blink::Element"* %26 to i8*
  %34 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #11
  br label %35

35:                                               ; preds = %24, %32
  %36 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 5, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 5
  %39 = ptrtoint %"class.blink::Node"* %37 to i64
  %40 = bitcast %"class.blink::Member.318"* %38 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %35
  %44 = bitcast %"class.blink::Node"* %37 to i8*
  %45 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %44) #11
  br label %46

46:                                               ; preds = %35, %43
  %47 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 6
  %48 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 6
  %49 = bitcast %"struct.blink::PhysicalOffset"* %47 to i64*
  %50 = bitcast %"struct.blink::PhysicalOffset"* %48 to i64*
  %51 = load i64, i64* %49, align 4
  store i64 %51, i64* %50, align 8
  %52 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 7
  %53 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 7
  %54 = bitcast %"struct.blink::PhysicalOffset"* %52 to i64*
  %55 = bitcast %"struct.blink::PhysicalOffset"* %53 to i64*
  %56 = load i64, i64* %54, align 4
  store i64 %56, i64* %55, align 8
  %57 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 8, i32 0, i32 0
  %58 = load %"class.blink::Element"*, %"class.blink::Element"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 8
  %60 = ptrtoint %"class.blink::Element"* %58 to i64
  %61 = bitcast %"class.blink::Member.343"* %59 to i64*
  store atomic i64 %60, i64* %61 monotonic, align 8
  %62 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %46
  %65 = bitcast %"class.blink::Element"* %58 to i8*
  %66 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %65) #11
  br label %67

67:                                               ; preds = %46, %64
  %68 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 9, i32 0, i32 0
  %69 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 9
  %71 = ptrtoint %"class.blink::Scrollbar"* %69 to i64
  %72 = bitcast %"class.blink::Member.782"* %70 to i64*
  store atomic i64 %71, i64* %72 monotonic, align 8
  %73 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %67
  %76 = bitcast %"class.blink::Scrollbar"* %69 to i8*
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #11
  br label %78

78:                                               ; preds = %67, %75
  %79 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 10
  %80 = load i8, i8* %79, align 8, !range !2
  %81 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 10
  store i8 %80, i8* %81, align 8
  %82 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 1
  %83 = load i8, i8* %82, align 8, !range !2
  %84 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 1
  store i8 %83, i8* %84, align 8
  %85 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 12
  %86 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 12, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %78
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #11
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %94
  tail call void @llvm.trap() #11
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %104, %89, %78
  %107 = ptrtoint %"class.WTF::StringImpl"* %87 to i64
  %108 = bitcast %"class.WTF::String"* %85 to i64*
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  store i64 %107, i64* %108, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #11
  br label %125

125:                                              ; preds = %106, %121, %124
  %126 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 11, i32 0, i32 0
  %127 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %126, align 8
  %128 = icmp eq %"class.blink::HeapLinkedHashSet.1885"* %127, null
  br i1 %128, label %138, label %129

129:                                              ; preds = %125
  %130 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS5_EEEEEEPhm(i64 48) #11
  %131 = bitcast i8* %130 to %"class.WTF::LinkedHashSet.1888"*
  %132 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %127, i64 0, i32 0
  tail call void @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEEC2ERKS8_(%"class.WTF::LinkedHashSet.1888"* %131, %"class.WTF::LinkedHashSet.1888"* dereferenceable(48) %132) #11
  %133 = getelementptr inbounds i8, i8* %130, i64 -4
  %134 = bitcast i8* %133 to i16*
  %135 = load atomic i16, i16* %134 monotonic, align 2
  %136 = or i16 %135, 1
  store atomic i16 %136, i16* %134 release, align 2
  %137 = ptrtoint i8* %130 to i64
  br label %138

138:                                              ; preds = %125, %129
  %139 = phi i8* [ %130, %129 ], [ null, %125 ]
  %140 = phi i64 [ %137, %129 ], [ 0, %125 ]
  %141 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 11
  %142 = bitcast %"class.blink::Member.1883"* %141 to i64*
  store atomic i64 %140, i64* %142 monotonic, align 8
  %143 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %147, label %145

145:                                              ; preds = %138
  %146 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %139) #11
  br label %147

147:                                              ; preds = %138, %145
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13HitTestResult20EqualForCacheabilityERKS0_(%"class.blink::HitTestResult"* nocapture readonly, %"class.blink::HitTestResult"* nocapture readonly dereferenceable(112)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 158
  %6 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = or i32 %7, 158
  %9 = icmp eq i32 %5, %8
  br i1 %9, label %10, label %82

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 0, i32 1
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 0, i32 1
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %12, %14
  br i1 %15, label %16, label %82

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %18, %20
  br i1 %21, label %22, label %82

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = icmp eq %"class.blink::Node"* %24, %26
  br i1 %27, label %28, label %82

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 4, i32 0, i32 0
  %30 = load %"class.blink::Element"*, %"class.blink::Element"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 4, i32 0, i32 0
  %32 = load %"class.blink::Element"*, %"class.blink::Element"** %31, align 8
  %33 = icmp eq %"class.blink::Element"* %30, %32
  br i1 %33, label %34, label %82

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 5, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 5, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %36, %38
  br i1 %39, label %40, label %82

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 6, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 6, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %82

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 6, i32 1, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 6, i32 1, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %52, label %82

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 7, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 7, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %54, %56
  br i1 %57, label %58, label %82

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 7, i32 1, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 7, i32 1, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %82

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 8, i32 0, i32 0
  %66 = load %"class.blink::Element"*, %"class.blink::Element"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 8, i32 0, i32 0
  %68 = load %"class.blink::Element"*, %"class.blink::Element"** %67, align 8
  %69 = icmp eq %"class.blink::Element"* %66, %68
  br i1 %69, label %70, label %82

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 9, i32 0, i32 0
  %72 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 9, i32 0, i32 0
  %74 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %73, align 8
  %75 = icmp eq %"class.blink::Scrollbar"* %72, %74
  br i1 %75, label %76, label %82

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 10
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 10
  %80 = load i8, i8* %79, align 8, !range !2
  %81 = icmp eq i8 %78, %80
  br label %82

82:                                               ; preds = %52, %40, %2, %76, %70, %64, %58, %46, %34, %28, %22, %16, %10
  %83 = phi i1 [ false, %70 ], [ false, %64 ], [ false, %58 ], [ false, %46 ], [ false, %34 ], [ false, %28 ], [ false, %22 ], [ false, %16 ], [ false, %10 ], [ %81, %76 ], [ false, %2 ], [ false, %40 ], [ false, %52 ]
  ret i1 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResult11CacheValuesERKS0_(%"class.blink::HitTestResult"* nocapture, %"class.blink::HitTestResult"* nocapture readonly dereferenceable(112)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -16385
  %6 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 0, i32 0
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %7, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13HitTestResult5TraceEPNS_7VisitorE(%"class.blink::HitTestResult"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.318"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.318"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 4
  %26 = bitcast %"class.blink::Member.343"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #11
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 5
  %37 = bitcast %"class.blink::Member.318"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 8
  %48 = bitcast %"class.blink::Member.343"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %1, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #11
  br label %57

57:                                               ; preds = %46, %51
  %58 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 9
  %59 = bitcast %"class.blink::Member.782"* %58 to i64*
  %60 = load atomic i64, i64* %59 monotonic, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = inttoptr i64 %60 to i8*
  %64 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %65, i64 5
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, align 8
  tail call void %67(%"class.blink::Visitor"* %1, i8* nonnull %63, i8* nonnull %63, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ScrollbarEE5TraceEPNS_7VisitorEPKv) #11
  br label %68

68:                                               ; preds = %57, %62
  %69 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 11
  %70 = bitcast %"class.blink::Member.1883"* %69 to i64*
  %71 = load atomic i64, i64* %70 monotonic, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %68
  %74 = inttoptr i64 %71 to i8*
  %75 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %76 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %76, i64 5
  %78 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %77, align 8
  tail call void %78(%"class.blink::Visitor"* %1, i8* nonnull %74, i8* nonnull %74, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %79

79:                                               ; preds = %68, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResult18SetNodeAndPositionEPNS_4NodeE13scoped_refptrIKNS_21NGPhysicalBoxFragmentEERKNS_14PhysicalOffsetE(%"class.blink::HitTestResult"*, %"class.blink::Node"*, %"class.blink::NGPhysicalBoxFragment"*, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %5 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %2, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 7
  %8 = bitcast %"struct.blink::PhysicalOffset"* %3 to i64*
  %9 = bitcast %"struct.blink::PhysicalOffset"* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 8
  tail call void @_ZN5blink13HitTestResult12SetInnerNodeEPNS_4NodeE(%"class.blink::HitTestResult"* %0, %"class.blink::Node"* %1)
  br label %44

11:                                               ; preds = %4
  %12 = tail call i64 @_ZNK5blink21NGPhysicalBoxFragment24OffsetFromOwnerLayoutBoxEv(%"class.blink::NGPhysicalBoxFragment"* nonnull %2) #11
  %13 = trunc i64 %12 to i32
  %14 = lshr i64 %12, 32
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %13, 0
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %13) #11
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22, !prof !3
  %24 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %15, 0
  %27 = select i1 %26, i32 -2147483648, i32 2147483647
  %28 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %25, i32 %15) #11
  %29 = extractvalue { i32, i1 } %28, 1
  %30 = extractvalue { i32, i1 } %28, 0
  %31 = select i1 %29, i32 %27, i32 %30, !prof !3
  %32 = zext i32 %31 to i64
  %33 = shl nuw i64 %32, 32
  %34 = zext i32 %23 to i64
  %35 = or i64 %33, %34
  %36 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 7
  %37 = bitcast %"struct.blink::PhysicalOffset"* %36 to i64*
  store i64 %35, i64* %37, align 8
  tail call void @_ZN5blink13HitTestResult12SetInnerNodeEPNS_4NodeE(%"class.blink::HitTestResult"* %0, %"class.blink::Node"* %1)
  %38 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %38) #11
  %39 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %11
  %43 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %2, i64 0, i32 0
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* %43) #11
  br label %44

44:                                               ; preds = %6, %11, %42
  ret void
}

declare i64 @_ZNK5blink21NGPhysicalBoxFragment24OffsetFromOwnerLayoutBoxEv(%"class.blink::NGPhysicalBoxFragment"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResult12SetInnerNodeEPNS_4NodeE(%"class.blink::HitTestResult"*, %"class.blink::Node"*) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.blink::Node"* %1, null
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 5
  %6 = bitcast %"class.blink::Member.318"* %5 to i64*
  store atomic i64 0, i64* %6 monotonic, align 8
  %7 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2
  %8 = bitcast %"class.blink::Member.318"* %7 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  %9 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 4
  %10 = bitcast %"class.blink::Member.343"* %9 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %129

11:                                               ; preds = %2
  %12 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase27is_inert_attribute_enabled_E, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %40, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 2048
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %40, label %19

19:                                               ; preds = %14
  %20 = tail call zeroext i1 @_ZNK5blink4Node7IsInertEv(%"class.blink::Node"* nonnull %1) #11
  %21 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp ne %"class.blink::Node"* %23, null
  br i1 %20, label %25, label %34

25:                                               ; preds = %19
  br i1 %24, label %129, label %26

26:                                               ; preds = %25
  %27 = ptrtoint %"class.blink::Node"* %1 to i64
  %28 = bitcast %"class.blink::Member.318"* %21 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %129, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::Node"* %1 to i8*
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %32) #11
  br label %129

34:                                               ; preds = %19
  %35 = xor i1 %24, true
  %36 = icmp eq %"class.blink::Node"* %23, %1
  %37 = or i1 %36, %35
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = tail call zeroext i1 @_ZNK5blink4Node36IsShadowIncludingInclusiveAncestorOfERKS0_(%"class.blink::Node"* nonnull %1, %"class.blink::Node"* nonnull dereferenceable(64) %23) #11
  br i1 %39, label %40, label %129

40:                                               ; preds = %14, %11, %34, %38
  %41 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 5
  %42 = ptrtoint %"class.blink::Node"* %1 to i64
  %43 = bitcast %"class.blink::Member.318"* %41 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Node"* %1 to i8*
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %40, %46
  %50 = bitcast %"class.blink::Node"* %1 to i8 (%"class.blink::Node"*)***
  %51 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %50, align 8
  %52 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %51, i64 34
  %53 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %52, align 8
  %54 = tail call zeroext i8 %53(%"class.blink::Node"* nonnull %1) #11
  %55 = icmp eq i8 %54, 0
  %56 = bitcast %"class.blink::Node"* %1 to %"class.blink::PseudoElement"*
  %57 = select i1 %55, %"class.blink::PseudoElement"* null, %"class.blink::PseudoElement"* %56
  br i1 %55, label %65, label %58

58:                                               ; preds = %49
  %59 = bitcast %"class.blink::PseudoElement"* %57 to %"class.blink::Node"* (%"class.blink::PseudoElement"*)***
  %60 = load %"class.blink::Node"* (%"class.blink::PseudoElement"*)**, %"class.blink::Node"* (%"class.blink::PseudoElement"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::PseudoElement"*)*, %"class.blink::Node"* (%"class.blink::PseudoElement"*)** %60, i64 155
  %62 = load %"class.blink::Node"* (%"class.blink::PseudoElement"*)*, %"class.blink::Node"* (%"class.blink::PseudoElement"*)** %61, align 8
  %63 = tail call %"class.blink::Node"* %62(%"class.blink::PseudoElement"* nonnull %57) #11
  %64 = ptrtoint %"class.blink::Node"* %63 to i64
  br label %65

65:                                               ; preds = %49, %58
  %66 = phi i64 [ %42, %49 ], [ %64, %58 ]
  %67 = phi %"class.blink::Node"* [ %1, %49 ], [ %63, %58 ]
  %68 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2
  %69 = bitcast %"class.blink::Member.318"* %68 to i64*
  store atomic i64 %66, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.blink::Node"* %67 to i8*
  %74 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #11
  br label %75

75:                                               ; preds = %65, %72
  %76 = tail call %"class.blink::HTMLAreaElement"* @_ZNK5blink13HitTestResult17ImageAreaForImageEv(%"class.blink::HitTestResult"* %0)
  %77 = icmp eq %"class.blink::HTMLAreaElement"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %75
  %79 = ptrtoint %"class.blink::HTMLAreaElement"* %76 to i64
  store atomic i64 %79, i64* %69 monotonic, align 8
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = bitcast %"class.blink::HTMLAreaElement"* %76 to i8*
  %84 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %83) #11
  br label %85

85:                                               ; preds = %78, %82
  store atomic i64 %79, i64* %43 monotonic, align 8
  %86 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.blink::HTMLAreaElement"* %76 to i8*
  %90 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %89) #11
  br label %91

91:                                               ; preds = %88, %85, %75
  %92 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %68, i64 0, i32 0, i32 0
  %93 = load %"class.blink::Node"*, %"class.blink::Node"** %92, align 8
  %94 = icmp eq %"class.blink::Node"* %93, null
  br i1 %94, label %109, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %93, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 12
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %109

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 4
  %102 = ptrtoint %"class.blink::Node"* %93 to i64
  %103 = bitcast %"class.blink::Member.343"* %101 to i64*
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %129, label %106

106:                                              ; preds = %100
  %107 = bitcast %"class.blink::Node"* %93 to i8*
  %108 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %107) #11
  br label %129

109:                                              ; preds = %95, %91
  %110 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %93) #11
  %111 = icmp eq %"class.blink::ContainerNode"* %110, null
  br i1 %111, label %119, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %110, i64 0, i32 0, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = and i32 %114, 12
  %116 = icmp eq i32 %115, 0
  %117 = bitcast %"class.blink::ContainerNode"* %110 to %"class.blink::Element"*
  %118 = select i1 %116, %"class.blink::Element"* %117, %"class.blink::Element"* null
  br label %119

119:                                              ; preds = %109, %112
  %120 = phi %"class.blink::Element"* [ %118, %112 ], [ null, %109 ]
  %121 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 4
  %122 = ptrtoint %"class.blink::Element"* %120 to i64
  %123 = bitcast %"class.blink::Member.343"* %121 to i64*
  store atomic i64 %122, i64* %123 monotonic, align 8
  %124 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %119
  %127 = bitcast %"class.blink::Element"* %120 to i8*
  %128 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %127) #11
  br label %129

129:                                              ; preds = %126, %119, %106, %100, %31, %26, %38, %25, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResult23OverrideNodeAndPositionEPNS_4NodeENS_14PhysicalOffsetE(%"class.blink::HitTestResult"*, %"class.blink::Node"*, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 7
  %5 = bitcast %"struct.blink::PhysicalOffset"* %4 to i64*
  store i64 %2, i64* %5, align 8
  tail call void @_ZN5blink13HitTestResult12SetInnerNodeEPNS_4NodeE(%"class.blink::HitTestResult"* %0, %"class.blink::Node"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13HitTestResult11GetPositionEv(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::HitTestResult"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 5, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::PositionWithAffinityTemplate"* %0) #11
  br label %86

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 6, i32 0, i32 0
  br i1 %15, label %21, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRareData"**
  %19 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %19, i64 0, i32 1, i32 0, i32 0
  br label %23

21:                                               ; preds = %11
  %22 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRenderingData"**
  br label %23

23:                                               ; preds = %17, %21
  %24 = phi %"class.blink::NodeRenderingData"** [ %20, %17 ], [ %22, %21 ]
  %25 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %25, i64 0, i32 1
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = icmp eq %"class.blink::LayoutObject"* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %23
  tail call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::PositionWithAffinityTemplate"* %0) #11
  br label %86

30:                                               ; preds = %23
  %31 = tail call %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %27) #11
  %32 = icmp eq %"class.blink::Element"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0)) #11
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %36

36:                                               ; preds = %30, %33
  %37 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %62, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 4
  %41 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %40 to i96*
  %42 = load i96, i96* %41, align 4
  %43 = and i96 %42, 16777216
  %44 = icmp eq i96 %43, 0
  br i1 %44, label %45, label %62

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 6, i32 0, i32 0
  %47 = load %"class.blink::Node"*, %"class.blink::Node"** %46, align 8
  %48 = icmp eq %"class.blink::Node"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 67108876
  %53 = icmp eq i32 %52, 67108864
  br i1 %53, label %54, label %62, !prof !4

54:                                               ; preds = %49
  %55 = bitcast %"class.blink::Node"* %47 to %"class.blink::Element"*
  %56 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %55) #11
  %57 = icmp eq %"class.blink::DisplayLockContext"* %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = call zeroext i1 @_ZNK5blink18DisplayLockContext19ShouldPaintChildrenEv(%"class.blink::DisplayLockContext"* nonnull %56) #11
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::Node"* nonnull dereferenceable(64) %8, i32 0) #11
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EENS_12TextAffinityE(%"class.blink::PositionWithAffinityTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #11
  br label %86

62:                                               ; preds = %58, %39, %45, %49, %36, %54
  %63 = bitcast %"class.blink::Node"* %8 to i8 (%"class.blink::Node"*)***
  %64 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %63, align 8
  %65 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %64, i64 34
  %66 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %65, align 8
  %67 = call zeroext i8 %66(%"class.blink::Node"* nonnull %8) #11
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %80, label %69

69:                                               ; preds = %62
  %70 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %63, align 8
  %71 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %70, i64 34
  %72 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %71, align 8
  %73 = call zeroext i8 %72(%"class.blink::Node"* nonnull %8) #11
  %74 = icmp eq i8 %73, 3
  br i1 %74, label %75, label %80

75:                                               ; preds = %69
  %76 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #11
  %77 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #11
  %78 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 2, i32 0, i32 0
  %79 = load %"class.blink::Node"*, %"class.blink::Node"** %78, align 8
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* dereferenceable(64) %79) #11
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i32 1) #11
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionWithAffinityTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #11
  br label %86

80:                                               ; preds = %62, %69
  %81 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 7
  %82 = bitcast %"class.blink::LayoutObject"* %27 to void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)***
  %83 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %83, i64 64
  %85 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %84, align 8
  call void %85(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* nonnull %27, %"struct.blink::PhysicalOffset"* dereferenceable(8) %81) #11
  br label %86

86:                                               ; preds = %29, %60, %75, %80, %10
  ret void
}

declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::PositionWithAffinityTemplate"*) unnamed_addr #4

declare %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"* dereferenceable(64), i32) unnamed_addr #4

declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EENS_12TextAffinityE(%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16), i32) unnamed_addr #4

declare void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #4

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #4

declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13HitTestResult38GetPositionForInnerNodeOrImageMapImageEv(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::HitTestResult"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionWithAffinityTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 5, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %61, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::Node"* %8 to i8 (%"class.blink::Node"*)***
  %12 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %11, align 8
  %13 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %12, i64 34
  %14 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %13, align 8
  %15 = tail call zeroext i8 %14(%"class.blink::Node"* nonnull %8) #11
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %62

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %61, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 48
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %62

26:                                               ; preds = %21
  %27 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 1, i32 2
  %31 = bitcast %"class.blink::Member.318"* %30 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %26
  %39 = bitcast %"class.blink::Node"* %19 to %"class.blink::HTMLAreaElement"*
  %40 = tail call %"class.blink::HTMLImageElement"* @_ZNK5blink15HTMLAreaElement12ImageElementEv(%"class.blink::HTMLAreaElement"* nonnull %39) #11
  br label %51

41:                                               ; preds = %26
  %42 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kMapTagE, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %34, %46
  br i1 %47, label %48, label %62

48:                                               ; preds = %41
  %49 = bitcast %"class.blink::Node"* %19 to %"class.blink::HTMLMapElement"*
  %50 = tail call %"class.blink::HTMLImageElement"* @_ZN5blink14HTMLMapElement12ImageElementEv(%"class.blink::HTMLMapElement"* nonnull %49) #11
  br label %51

51:                                               ; preds = %48, %38
  %52 = phi %"class.blink::HTMLImageElement"* [ %40, %38 ], [ %50, %48 ]
  %53 = icmp eq %"class.blink::HTMLImageElement"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %51
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  br label %58

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi %"class.blink::Node"* [ %57, %56 ], [ %55, %54 ]
  %60 = icmp eq %"class.blink::Node"* %59, null
  br i1 %60, label %61, label %62

61:                                               ; preds = %17, %2, %58
  tail call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::PositionWithAffinityTemplate"* %0) #11
  br label %134

62:                                               ; preds = %10, %21, %41, %58
  %63 = phi %"class.blink::Node"* [ %59, %58 ], [ %19, %21 ], [ %19, %41 ], [ %8, %10 ]
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 6, i32 0, i32 0
  br i1 %67, label %73, label %69

69:                                               ; preds = %62
  %70 = bitcast %"class.blink::NodeData"** %68 to %"class.blink::NodeRareData"**
  %71 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %71, i64 0, i32 1, i32 0, i32 0
  br label %75

73:                                               ; preds = %62
  %74 = bitcast %"class.blink::NodeData"** %68 to %"class.blink::NodeRenderingData"**
  br label %75

75:                                               ; preds = %69, %73
  %76 = phi %"class.blink::NodeRenderingData"** [ %72, %69 ], [ %74, %73 ]
  %77 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %77, i64 0, i32 1
  %79 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %80 = icmp eq %"class.blink::LayoutObject"* %79, null
  br i1 %80, label %81, label %82

81:                                               ; preds = %75
  tail call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::PositionWithAffinityTemplate"* %0) #11
  br label %134

82:                                               ; preds = %75
  %83 = tail call %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %79) #11
  %84 = icmp eq %"class.blink::Element"* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 206, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0)) #11
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #11
  br label %88

88:                                               ; preds = %82, %85
  %89 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %114, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %79, i64 0, i32 4
  %93 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %92 to i96*
  %94 = load i96, i96* %93, align 4
  %95 = and i96 %94, 16777216
  %96 = icmp eq i96 %95, 0
  br i1 %96, label %97, label %114

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %79, i64 0, i32 6, i32 0, i32 0
  %99 = load %"class.blink::Node"*, %"class.blink::Node"** %98, align 8
  %100 = icmp eq %"class.blink::Node"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %99, i64 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = and i32 %103, 67108876
  %105 = icmp eq i32 %104, 67108864
  br i1 %105, label %106, label %114, !prof !4

106:                                              ; preds = %101
  %107 = bitcast %"class.blink::Node"* %99 to %"class.blink::Element"*
  %108 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %107) #11
  %109 = icmp eq %"class.blink::DisplayLockContext"* %108, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = call zeroext i1 @_ZNK5blink18DisplayLockContext19ShouldPaintChildrenEv(%"class.blink::DisplayLockContext"* nonnull %108) #11
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::Node"* nonnull dereferenceable(64) %63, i32 0) #11
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EENS_12TextAffinityE(%"class.blink::PositionWithAffinityTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #11
  br label %134

114:                                              ; preds = %110, %91, %97, %101, %88, %106
  %115 = bitcast %"class.blink::PositionWithAffinityTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #11
  %116 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 7
  %118 = bitcast %"class.blink::LayoutObject"* %79 to void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)***
  %119 = bitcast %"class.blink::PositionWithAffinityTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 24, i1 false)
  %120 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*** %118, align 8
  %121 = getelementptr inbounds void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %120, i64 64
  %122 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %121, align 8
  call void %122(%"class.blink::PositionWithAffinityTemplate"* nonnull sret %5, %"class.blink::LayoutObject"* nonnull %79, %"struct.blink::PhysicalOffset"* dereferenceable(8) %117) #11
  %123 = load %"class.blink::Node"*, %"class.blink::Node"** %116, align 8
  %124 = icmp eq %"class.blink::Node"* %123, null
  br i1 %124, label %125, label %127

125:                                              ; preds = %114
  %126 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* nonnull dereferenceable(64) %63) #11
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionWithAffinityTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #11
  br label %133

127:                                              ; preds = %114
  %128 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %5, i64 0, i32 1
  %129 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %0, i64 0, i32 0
  %130 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %5, i64 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* %129, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %130) #11
  %131 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %0, i64 0, i32 1
  %132 = load i32, i32* %128, align 8
  store i32 %132, i32* %131, align 8
  br label %133

133:                                              ; preds = %127, %125
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #11
  br label %134

134:                                              ; preds = %81, %112, %133, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink13HitTestResult24InnerNodeOrImageMapImageEv(%"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 48
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %47

10:                                               ; preds = %5
  %11 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %15 = bitcast %"class.blink::Member.318"* %14 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %10
  %23 = bitcast %"class.blink::Node"* %3 to %"class.blink::HTMLAreaElement"*
  %24 = tail call %"class.blink::HTMLImageElement"* @_ZNK5blink15HTMLAreaElement12ImageElementEv(%"class.blink::HTMLAreaElement"* nonnull %23) #11
  br label %40

25:                                               ; preds = %10
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kMapTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %30 = bitcast %"class.blink::Member.318"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %37, label %47

37:                                               ; preds = %25
  %38 = bitcast %"class.blink::Node"* %3 to %"class.blink::HTMLMapElement"*
  %39 = tail call %"class.blink::HTMLImageElement"* @_ZN5blink14HTMLMapElement12ImageElementEv(%"class.blink::HTMLMapElement"* nonnull %38) #11
  br label %40

40:                                               ; preds = %37, %22
  %41 = phi %"class.blink::HTMLImageElement"* [ %24, %22 ], [ %39, %37 ]
  %42 = icmp eq %"class.blink::HTMLImageElement"* %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  br label %47

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %47

47:                                               ; preds = %25, %43, %5, %1, %45
  %48 = phi %"class.blink::Node"* [ null, %1 ], [ %46, %45 ], [ %44, %43 ], [ %3, %25 ], [ %3, %5 ]
  ret %"class.blink::Node"* %48
}

; Function Attrs: nounwind
declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResult39SetToShadowHostIfInRestrictedShadowRootEv(%"class.blink::HitTestResult"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %50, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* nonnull %3) #11
  %7 = icmp eq %"class.blink::ShadowRoot"* %6, null
  br i1 %7, label %50, label %8

8:                                                ; preds = %5
  %9 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kUseTagE, align 8
  %10 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %8, %39
  %12 = phi %"class.blink::Element"* [ null, %8 ], [ %20, %39 ]
  %13 = phi %"class.blink::ShadowRoot"* [ %6, %8 ], [ %41, %39 ]
  %14 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %13, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 196608
  %17 = icmp eq i32 %16, 131072
  %18 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %13, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.blink::Node"** %18 to %"class.blink::Element"**
  %20 = load %"class.blink::Element"*, %"class.blink::Element"** %19, align 8
  br i1 %17, label %39, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %20, i64 0, i32 0, i32 0
  %23 = icmp eq %"class.blink::Element"* %20, null
  br i1 %23, label %45, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %20, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 48
  %28 = icmp eq i32 %27, 32
  br i1 %28, label %29, label %45

29:                                               ; preds = %24
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 1, i32 2
  %32 = bitcast %"class.blink::Member.318"* %31 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %39, label %45

39:                                               ; preds = %11, %29
  %40 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %20, i64 0, i32 0, i32 0
  %41 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %40) #11
  %42 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* nonnull %3) #11
  %43 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %42, i64 0, i32 0, i32 0
  tail call void @_ZN5blink13HitTestResult12SetInnerNodeEPNS_4NodeE(%"class.blink::HitTestResult"* %0, %"class.blink::Node"* %43) #11
  %44 = icmp eq %"class.blink::ShadowRoot"* %41, null
  br i1 %44, label %45, label %11

45:                                               ; preds = %29, %39, %24, %21
  %46 = phi %"class.blink::Element"* [ %12, %29 ], [ %20, %39 ], [ %12, %24 ], [ %12, %21 ]
  %47 = icmp eq %"class.blink::Element"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %46, i64 0, i32 0, i32 0
  tail call void @_ZN5blink13HitTestResult12SetInnerNodeEPNS_4NodeE(%"class.blink::HitTestResult"* %0, %"class.blink::Node"* %49) #11
  br label %50

50:                                               ; preds = %5, %48, %45, %1
  ret void
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #4

declare %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink13HitTestResult22GetScrollableContainerEv(%"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = tail call %"class.blink::LayoutBox"* @_ZNK5blink12LayoutObject12EnclosingBoxEv(%"class.blink::LayoutObject"* %19) #11
  %21 = icmp eq %"class.blink::LayoutBox"* %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %15, %38
  %23 = phi %"class.blink::LayoutBox"* [ %40, %38 ], [ %20, %15 ]
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %23, i64 0, i32 0, i32 0, i32 4
  %26 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %25 to i96*
  %27 = load i96, i96* %26, align 4
  %28 = and i96 %27, 18446744073709551616
  %29 = icmp eq i96 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %22
  %31 = tail call zeroext i1 @_ZNK5blink9LayoutBox15NeedsScrollNodeEm(%"class.blink::LayoutBox"* nonnull %23, i64 0) #11
  br i1 %31, label %32, label %38

32:                                               ; preds = %22, %30
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %23, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %34 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %33, align 8
  %35 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %34, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = tail call i64 @_ZN5blink37CompositorElementIdFromUniqueObjectIdEmNS_28CompositorElementIdNamespaceE(i64 %36, i32 2) #11
  br label %55

38:                                               ; preds = %30
  %39 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %24, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #11
  %40 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %39, i64 0, i32 0
  %41 = icmp eq %"class.blink::LayoutBlock"* %39, null
  br i1 %41, label %42, label %22

42:                                               ; preds = %38, %15
  %43 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %47) #11
  %49 = tail call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %48) #11
  %50 = bitcast %"class.blink::VisualViewport"* %49 to i64 (%"class.blink::VisualViewport"*)***
  %51 = load i64 (%"class.blink::VisualViewport"*)**, i64 (%"class.blink::VisualViewport"*)*** %50, align 8
  %52 = getelementptr inbounds i64 (%"class.blink::VisualViewport"*)*, i64 (%"class.blink::VisualViewport"*)** %51, i64 60
  %53 = load i64 (%"class.blink::VisualViewport"*)*, i64 (%"class.blink::VisualViewport"*)** %52, align 8
  %54 = tail call i64 %53(%"class.blink::VisualViewport"* %49) #11
  br label %55

55:                                               ; preds = %42, %32
  %56 = phi i64 [ %37, %32 ], [ %54, %42 ]
  ret i64 %56
}

declare %"class.blink::LayoutBox"* @_ZNK5blink12LayoutObject12EnclosingBoxEv(%"class.blink::LayoutObject"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink9LayoutBox15NeedsScrollNodeEm(%"class.blink::LayoutBox"*, i64) local_unnamed_addr #4

declare i64 @_ZN5blink37CompositorElementIdFromUniqueObjectIdEmNS_28CompositorElementIdNamespaceE(i64, i32) local_unnamed_addr #4

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #4

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #4

declare dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLAreaElement"* @_ZNK5blink13HitTestResult17ImageAreaForImageEv(%"class.blink::HitTestResult"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = load i32, i32* inttoptr (i64 16 to i32*), align 16
  br label %25

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 48
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %25

12:                                               ; preds = %7
  %13 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %17 = bitcast %"class.blink::Member.318"* %16 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, %22
  %24 = bitcast %"class.blink::Node"* %3 to %"class.blink::HTMLImageElement"*
  br i1 %23, label %58, label %25

25:                                               ; preds = %5, %12, %7
  %26 = phi i32 [ %6, %5 ], [ %9, %12 ], [ %9, %7 ]
  %27 = and i32 %26, 512
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %175, label %29

29:                                               ; preds = %25
  %30 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %3) #11
  %31 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %30, i64 0, i32 4
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 196608
  %34 = icmp eq i32 %33, 131072
  br i1 %34, label %35, label %175

35:                                               ; preds = %29
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %37 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %36) #11
  %38 = icmp eq %"class.blink::Element"* %37, null
  br i1 %38, label %175, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %37, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 48
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %175

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %37, i64 0, i32 0, i32 0
  %46 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %47 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 1, i32 2
  %50 = bitcast %"class.blink::Member.318"* %49 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %53, %55
  %57 = bitcast %"class.blink::Element"* %37 to %"class.blink::HTMLImageElement"*
  br i1 %56, label %58, label %175

58:                                               ; preds = %12, %44
  %59 = phi %"class.blink::HTMLImageElement"* [ %24, %12 ], [ %57, %44 ]
  %60 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %63, label %69, label %65

65:                                               ; preds = %58
  %66 = bitcast %"class.blink::NodeData"** %64 to %"class.blink::NodeRareData"**
  %67 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %67, i64 0, i32 1, i32 0, i32 0
  br label %71

69:                                               ; preds = %58
  %70 = bitcast %"class.blink::NodeData"** %64 to %"class.blink::NodeRenderingData"**
  br label %71

71:                                               ; preds = %65, %69
  %72 = phi %"class.blink::NodeRenderingData"** [ %68, %65 ], [ %70, %69 ]
  %73 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %73, i64 0, i32 1
  %75 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %74, align 8
  %76 = icmp eq %"class.blink::LayoutObject"* %75, null
  br i1 %76, label %175, label %77

77:                                               ; preds = %71
  br i1 %63, label %82, label %78

78:                                               ; preds = %77
  %79 = bitcast %"class.blink::NodeData"** %64 to %"class.blink::NodeRareData"**
  %80 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %80, i64 0, i32 1, i32 0, i32 0
  br label %84

82:                                               ; preds = %77
  %83 = bitcast %"class.blink::NodeData"** %64 to %"class.blink::NodeRenderingData"**
  br label %84

84:                                               ; preds = %78, %82
  %85 = phi %"class.blink::NodeRenderingData"** [ %81, %78 ], [ %83, %82 ]
  %86 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %86, i64 0, i32 1
  %88 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %88, i64 0, i32 4
  %90 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %89 to i96*
  %91 = load i96, i96* %90, align 4
  %92 = and i96 %91, 67108864
  %93 = icmp eq i96 %92, 0
  br i1 %93, label %175, label %94

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %96 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %95, align 8
  %97 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kUsemapAttrE, align 8
  %98 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %59, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %99 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %98, align 8
  %100 = icmp eq %"class.blink::ElementData"* %99, null
  br i1 %100, label %151, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %99, i64 0, i32 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %113, label %106

106:                                              ; preds = %101
  %107 = bitcast %"class.blink::ElementData"* %99 to %"class.blink::UniqueElementData"*
  %108 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %99, i64 1, i32 1
  %109 = bitcast %"class.blink::Member.354"* %108 to %"class.blink::Attribute"**
  %110 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %107, i64 0, i32 2, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  br label %118

113:                                              ; preds = %101
  %114 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %99, i64 1
  %115 = bitcast %"class.blink::ElementData"* %114 to %"class.blink::Attribute"*
  %116 = lshr i32 %103, 1
  %117 = and i32 %116, 268435455
  br label %118

118:                                              ; preds = %113, %106
  %119 = phi %"class.blink::Attribute"* [ %115, %113 ], [ %110, %106 ]
  %120 = phi i32 [ %117, %113 ], [ %112, %106 ]
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %119, i64 %121
  %123 = icmp eq i32 %120, 0
  br i1 %123, label %151, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %97, i64 0, i32 0, i32 0
  %126 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 3, i32 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %129

129:                                              ; preds = %144, %124
  %130 = phi %"class.blink::Attribute"* [ %119, %124 ], [ %145, %144 ]
  %131 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %133 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %132, %126
  br i1 %133, label %147, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 3, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %136, %137
  br i1 %138, label %139, label %144

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 4, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %141, %142
  br i1 %143, label %147, label %144

144:                                              ; preds = %139, %134
  %145 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %130, i64 1
  %146 = icmp eq %"class.blink::Attribute"* %145, %122
  br i1 %146, label %151, label %129

147:                                              ; preds = %139, %129
  %148 = icmp eq %"class.blink::Attribute"* %130, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %130, i64 0, i32 1
  br label %153

151:                                              ; preds = %144, %147, %118, %94
  %152 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %153

153:                                              ; preds = %149, %151
  %154 = phi %"class.WTF::AtomicString"* [ %152, %151 ], [ %150, %149 ]
  %155 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %154, i64 0, i32 0
  %156 = tail call %"class.blink::HTMLMapElement"* @_ZNK5blink9TreeScope11GetImageMapERKN3WTF6StringE(%"class.blink::TreeScope"* %96, %"class.WTF::String"* dereferenceable(8) %155) #11
  %157 = icmp eq %"class.blink::HTMLMapElement"* %156, null
  br i1 %157, label %175, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 7
  %160 = load i32, i32* %60, align 8
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %167, label %163

163:                                              ; preds = %158
  %164 = bitcast %"class.blink::NodeData"** %64 to %"class.blink::NodeRareData"**
  %165 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %165, i64 0, i32 1, i32 0, i32 0
  br label %169

167:                                              ; preds = %158
  %168 = bitcast %"class.blink::NodeData"** %64 to %"class.blink::NodeRenderingData"**
  br label %169

169:                                              ; preds = %163, %167
  %170 = phi %"class.blink::NodeRenderingData"** [ %166, %163 ], [ %168, %167 ]
  %171 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %170, align 8
  %172 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %171, i64 0, i32 1
  %173 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %172, align 8
  %174 = tail call %"class.blink::HTMLAreaElement"* @_ZN5blink14HTMLMapElement12AreaForPointERKNS_14PhysicalOffsetEPKNS_12LayoutObjectE(%"class.blink::HTMLMapElement"* nonnull %156, %"struct.blink::PhysicalOffset"* dereferenceable(8) %159, %"class.blink::LayoutObject"* %173) #11
  br label %175

175:                                              ; preds = %84, %44, %25, %35, %39, %29, %169, %153, %71
  %176 = phi %"class.blink::HTMLAreaElement"* [ null, %71 ], [ null, %84 ], [ %174, %169 ], [ null, %153 ], [ null, %29 ], [ null, %25 ], [ null, %44 ], [ null, %39 ], [ null, %35 ]
  ret %"class.blink::HTMLAreaElement"* %176
}

declare %"class.blink::HTMLMapElement"* @_ZNK5blink9TreeScope11GetImageMapERKN3WTF6StringE(%"class.blink::TreeScope"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.blink::HTMLAreaElement"* @_ZN5blink14HTMLMapElement12AreaForPointERKNS_14PhysicalOffsetEPKNS_12LayoutObjectE(%"class.blink::HTMLMapElement"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::LayoutObject"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink4Node7IsInertEv(%"class.blink::Node"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink4Node36IsShadowIncludingInclusiveAncestorOfERKS0_(%"class.blink::Node"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResult12SetInertNodeEPNS_4NodeE(%"class.blink::HitTestResult"* nocapture, %"class.blink::Node"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 3
  %4 = ptrtoint %"class.blink::Node"* %1 to i64
  %5 = bitcast %"class.blink::Member.318"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Node"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #11
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResult13SetURLElementEPNS_7ElementE(%"class.blink::HitTestResult"* nocapture, %"class.blink::Element"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 8
  %4 = ptrtoint %"class.blink::Element"* %1 to i64
  %5 = bitcast %"class.blink::Member.343"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Element"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #11
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResult12SetScrollbarEPNS_9ScrollbarE(%"class.blink::HitTestResult"* nocapture, %"class.blink::Scrollbar"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 9
  %4 = ptrtoint %"class.blink::Scrollbar"* %1 to i64
  %5 = bitcast %"class.blink::Member.782"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Scrollbar"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #11
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LocalFrame"* @_ZNK5blink13HitTestResult14InnerNodeFrameEv(%"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %9) #11
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi %"class.blink::LocalFrame"* [ %10, %5 ], [ null, %1 ]
  ret %"class.blink::LocalFrame"* %12
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13HitTestResult10IsSelectedERKNS_15HitTestLocationE(%"class.blink::HitTestResult"* nocapture readonly, %"class.blink::HitTestLocation"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %10) #11
  %12 = icmp eq %"class.blink::LocalFrame"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %11, i64 0, i32 14, i32 0, i32 0
  %15 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink14FrameSelection8ContainsERKNS_14PhysicalOffsetE(%"class.blink::FrameSelection"* %15, %"struct.blink::PhysicalOffset"* dereferenceable(8) %16) #11
  br label %18

18:                                               ; preds = %2, %6, %13
  %19 = phi i1 [ %17, %13 ], [ false, %6 ], [ false, %2 ]
  ret i1 %19
}

declare zeroext i1 @_ZN5blink14FrameSelection8ContainsERKNS_14PhysicalOffsetE(%"class.blink::FrameSelection"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13HitTestResult5TitleERNS_13TextDirectionE(%"class.blink::HitTestResult"* nocapture readonly, i8* nocapture dereferenceable(1)) local_unnamed_addr #1 align 2 {
  store i8 0, i8* %1, align 1
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %53, label %6

6:                                                ; preds = %2, %49
  %7 = phi %"class.blink::Node"* [ %51, %49 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %49

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::Node"* %7 to %"class.blink::Element"*
  %14 = bitcast %"class.blink::Node"* %7 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %15 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %15, i64 108
  %17 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %16, align 8
  %18 = tail call %"class.WTF::StringImpl"* %17(%"class.blink::Element"* nonnull %13) #11
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %49, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %22 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  %23 = load i32, i32* %21, align 8
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 6, i32 0, i32 0
  br i1 %25, label %31, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRareData"**
  %29 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %29, i64 0, i32 1, i32 0, i32 0
  br label %33

31:                                               ; preds = %20
  %32 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRenderingData"**
  br label %33

33:                                               ; preds = %27, %31
  %34 = phi %"class.blink::NodeRenderingData"** [ %30, %27 ], [ %32, %31 ]
  %35 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %35, i64 0, i32 1
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = icmp eq %"class.blink::LayoutObject"* %37, null
  br i1 %38, label %53, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 5, i32 0
  %41 = bitcast %"class.blink::ComputedStyle"** %40 to %"class.blink::ComputedStyleBase"**
  %42 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %42, i64 0, i32 9
  %44 = bitcast [20 x i8]* %43 to i160*
  %45 = load i160, i160* %44, align 8
  %46 = lshr i160 %45, 115
  %47 = trunc i160 %46 to i8
  %48 = and i8 %47, 1
  store i8 %48, i8* %1, align 1
  br label %53

49:                                               ; preds = %6, %12
  %50 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %7) #11
  %51 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %50, i64 0, i32 0
  %52 = icmp eq %"class.blink::ContainerNode"* %50, null
  br i1 %52, label %53, label %6

53:                                               ; preds = %49, %2, %39, %33
  %54 = phi i64 [ %22, %33 ], [ %22, %39 ], [ 0, %2 ], [ 0, %49 ]
  %55 = inttoptr i64 %54 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13HitTestResult16AltDisplayStringEv(%"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %48, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 48
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %50

10:                                               ; preds = %5
  %11 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %15 = bitcast %"class.blink::Member.318"* %14 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %10
  %23 = bitcast %"class.blink::Node"* %3 to %"class.blink::HTMLAreaElement"*
  %24 = tail call %"class.blink::HTMLImageElement"* @_ZNK5blink15HTMLAreaElement12ImageElementEv(%"class.blink::HTMLAreaElement"* nonnull %23) #11
  br label %35

25:                                               ; preds = %10
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kMapTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %18, %30
  br i1 %31, label %32, label %50

32:                                               ; preds = %25
  %33 = bitcast %"class.blink::Node"* %3 to %"class.blink::HTMLMapElement"*
  %34 = tail call %"class.blink::HTMLImageElement"* @_ZN5blink14HTMLMapElement12ImageElementEv(%"class.blink::HTMLMapElement"* nonnull %33) #11
  br label %35

35:                                               ; preds = %32, %22
  %36 = phi %"class.blink::HTMLImageElement"* [ %24, %22 ], [ %34, %32 ]
  %37 = icmp eq %"class.blink::HTMLImageElement"* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  br label %42

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %38, %40
  %43 = phi %"class.blink::Node"* [ %41, %40 ], [ %39, %38 ]
  %44 = icmp eq %"class.blink::Node"* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  br label %50

48:                                               ; preds = %1, %42
  %49 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %137

50:                                               ; preds = %45, %5, %25
  %51 = phi i32 [ %47, %45 ], [ %7, %25 ], [ %7, %5 ]
  %52 = phi %"class.blink::Node"* [ %43, %45 ], [ %3, %25 ], [ %3, %5 ]
  %53 = and i32 %51, 48
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %135

55:                                               ; preds = %50
  %56 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %57 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 1, i32 2
  %60 = bitcast %"class.blink::Member.318"* %59 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %63, %65
  br i1 %66, label %67, label %125

67:                                               ; preds = %55
  %68 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kAltAttrE, align 8
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 1, i32 3
  %70 = bitcast %"class.blink::Member.320"* %69 to %"class.blink::ElementData"**
  %71 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %70, align 8
  %72 = icmp eq %"class.blink::ElementData"* %71, null
  br i1 %72, label %123, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %71, i64 0, i32 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = bitcast %"class.blink::ElementData"* %71 to %"class.blink::UniqueElementData"*
  %80 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %71, i64 1, i32 1
  %81 = bitcast %"class.blink::Member.354"* %80 to %"class.blink::Attribute"**
  %82 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %79, i64 0, i32 2, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  br label %90

85:                                               ; preds = %73
  %86 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %71, i64 1
  %87 = bitcast %"class.blink::ElementData"* %86 to %"class.blink::Attribute"*
  %88 = lshr i32 %75, 1
  %89 = and i32 %88, 268435455
  br label %90

90:                                               ; preds = %85, %78
  %91 = phi %"class.blink::Attribute"* [ %87, %85 ], [ %82, %78 ]
  %92 = phi i32 [ %89, %85 ], [ %84, %78 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %91, i64 %93
  %95 = icmp eq i32 %92, 0
  br i1 %95, label %123, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %68, i64 0, i32 0, i32 0
  %98 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %98, i64 0, i32 3, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %98, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %101

101:                                              ; preds = %116, %96
  %102 = phi %"class.blink::Attribute"* [ %91, %96 ], [ %117, %116 ]
  %103 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %103, align 8
  %105 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %104, %98
  br i1 %105, label %119, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %104, i64 0, i32 3, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %108, %109
  br i1 %110, label %111, label %116

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %104, i64 0, i32 4, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %113, %114
  br i1 %115, label %119, label %116

116:                                              ; preds = %111, %106
  %117 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %102, i64 1
  %118 = icmp eq %"class.blink::Attribute"* %117, %94
  br i1 %118, label %123, label %101

119:                                              ; preds = %111, %101
  %120 = icmp eq %"class.blink::Attribute"* %102, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %102, i64 0, i32 1
  br label %137

123:                                              ; preds = %116, %119, %90, %67
  %124 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %137

125:                                              ; preds = %55
  %126 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %127 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %126, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %128, i64 0, i32 3, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %63, %130
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = bitcast %"class.blink::Node"* %52 to %"class.blink::HTMLInputElement"*
  %134 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement3AltEv(%"class.blink::HTMLInputElement"* nonnull %133) #11
  br label %137

135:                                              ; preds = %125, %50
  %136 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %137

137:                                              ; preds = %48, %123, %121, %132, %135
  %138 = phi %"class.WTF::AtomicString"* [ %136, %135 ], [ %134, %132 ], [ %49, %48 ], [ %124, %123 ], [ %122, %121 ]
  ret %"class.WTF::AtomicString"* %138
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement3AltEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Image"* @_ZNK5blink13HitTestResult8GetImageEv(%"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %92, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 48
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %48

10:                                               ; preds = %5
  %11 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %15 = bitcast %"class.blink::Member.318"* %14 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %10
  %23 = bitcast %"class.blink::Node"* %3 to %"class.blink::HTMLAreaElement"*
  %24 = tail call %"class.blink::HTMLImageElement"* @_ZNK5blink15HTMLAreaElement12ImageElementEv(%"class.blink::HTMLAreaElement"* nonnull %23) #11
  br label %35

25:                                               ; preds = %10
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kMapTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %18, %30
  br i1 %31, label %32, label %48

32:                                               ; preds = %25
  %33 = bitcast %"class.blink::Node"* %3 to %"class.blink::HTMLMapElement"*
  %34 = tail call %"class.blink::HTMLImageElement"* @_ZN5blink14HTMLMapElement12ImageElementEv(%"class.blink::HTMLMapElement"* nonnull %33) #11
  br label %35

35:                                               ; preds = %32, %22
  %36 = phi %"class.blink::HTMLImageElement"* [ %24, %22 ], [ %34, %32 ]
  %37 = icmp eq %"class.blink::HTMLImageElement"* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  br label %42

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %38, %40
  %43 = phi %"class.blink::Node"* [ %41, %40 ], [ %39, %38 ]
  %44 = icmp eq %"class.blink::Node"* %43, null
  br i1 %44, label %92, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  br label %48

48:                                               ; preds = %45, %5, %25
  %49 = phi i32 [ %47, %45 ], [ %7, %25 ], [ %7, %5 ]
  %50 = phi %"class.blink::Node"* [ %43, %45 ], [ %3, %25 ], [ %3, %5 ]
  %51 = and i32 %49, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 6, i32 0, i32 0
  br i1 %52, label %58, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.blink::NodeData"** %53 to %"class.blink::NodeRareData"**
  %56 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %56, i64 0, i32 1, i32 0, i32 0
  br label %60

58:                                               ; preds = %48
  %59 = bitcast %"class.blink::NodeData"** %53 to %"class.blink::NodeRenderingData"**
  br label %60

60:                                               ; preds = %58, %54
  %61 = phi %"class.blink::NodeRenderingData"** [ %57, %54 ], [ %59, %58 ]
  %62 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %62, i64 0, i32 1
  %64 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %63, align 8
  %65 = icmp eq %"class.blink::LayoutObject"* %64, null
  br i1 %65, label %92, label %66

66:                                               ; preds = %60
  %67 = bitcast %"class.blink::LayoutObject"* %64 to i1 (%"class.blink::LayoutObject"*)***
  %68 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %67, align 8
  %69 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %68, i64 21
  %70 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %69, align 8
  %71 = tail call zeroext i1 %70(%"class.blink::LayoutObject"* nonnull %64) #11
  br i1 %71, label %72, label %92

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %64, i64 2, i32 7
  %74 = bitcast %"class.blink::LayoutObject"** %73 to %"class.blink::LayoutImageResource"**
  %75 = load %"class.blink::LayoutImageResource"*, %"class.blink::LayoutImageResource"** %74, align 8
  %76 = icmp eq %"class.blink::LayoutImageResource"* %75, null
  br i1 %76, label %92, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::LayoutImageResource", %"class.blink::LayoutImageResource"* %75, i64 0, i32 2, i32 0, i32 0
  %79 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %78, align 8
  %80 = icmp eq %"class.blink::ImageResourceContent"* %79, null
  br i1 %80, label %92, label %81

81:                                               ; preds = %77
  %82 = tail call zeroext i1 @_ZNK5blink20ImageResourceContent13ErrorOccurredEv(%"class.blink::ImageResourceContent"* nonnull %79) #11
  br i1 %82, label %92, label %83

83:                                               ; preds = %81
  %84 = load %"class.blink::LayoutImageResource"*, %"class.blink::LayoutImageResource"** %74, align 8
  %85 = icmp eq %"class.blink::LayoutImageResource"* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.blink::LayoutImageResource", %"class.blink::LayoutImageResource"* %84, i64 0, i32 2, i32 0, i32 0
  %88 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %87, align 8
  br label %89

89:                                               ; preds = %86, %83
  %90 = phi %"class.blink::ImageResourceContent"* [ %88, %86 ], [ null, %83 ]
  %91 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* %90) #11
  br label %92

92:                                               ; preds = %1, %42, %60, %66, %72, %77, %81, %89
  %93 = phi %"class.blink::Image"* [ null, %42 ], [ %91, %89 ], [ null, %60 ], [ null, %66 ], [ null, %77 ], [ null, %81 ], [ null, %72 ], [ null, %1 ]
  ret %"class.blink::Image"* %93
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Image"* @_ZN5blink13HitTestResult8GetImageEPKNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %47, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::LayoutObject"* %19 to i1 (%"class.blink::LayoutObject"*)***
  %23 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %23, i64 21
  %25 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* nonnull %19) #11
  br i1 %26, label %27, label %47

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 2, i32 7
  %29 = bitcast %"class.blink::LayoutObject"** %28 to %"class.blink::LayoutImageResource"**
  %30 = load %"class.blink::LayoutImageResource"*, %"class.blink::LayoutImageResource"** %29, align 8
  %31 = icmp eq %"class.blink::LayoutImageResource"* %30, null
  br i1 %31, label %47, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::LayoutImageResource", %"class.blink::LayoutImageResource"* %30, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %33, align 8
  %35 = icmp eq %"class.blink::ImageResourceContent"* %34, null
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  %37 = tail call zeroext i1 @_ZNK5blink20ImageResourceContent13ErrorOccurredEv(%"class.blink::ImageResourceContent"* nonnull %34) #11
  br i1 %37, label %47, label %38

38:                                               ; preds = %36
  %39 = load %"class.blink::LayoutImageResource"*, %"class.blink::LayoutImageResource"** %29, align 8
  %40 = icmp eq %"class.blink::LayoutImageResource"* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.blink::LayoutImageResource", %"class.blink::LayoutImageResource"* %39, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.blink::ImageResourceContent"* [ %43, %41 ], [ null, %38 ]
  %46 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* %45) #11
  br label %47

47:                                               ; preds = %27, %36, %32, %21, %15, %44, %1
  %48 = phi %"class.blink::Image"* [ null, %1 ], [ %46, %44 ], [ null, %15 ], [ null, %21 ], [ null, %32 ], [ null, %36 ], [ null, %27 ]
  ret %"class.blink::Image"* %48
}

declare zeroext i1 @_ZNK5blink20ImageResourceContent13ErrorOccurredEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #4

declare %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink13HitTestResult9ImageRectEv(%"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::FloatQuad", align 4
  %3 = tail call %"class.blink::Image"* @_ZNK5blink13HitTestResult8GetImageEv(%"class.blink::HitTestResult"* %0)
  %4 = icmp eq %"class.blink::Image"* %3, null
  br i1 %4, label %53, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::FloatQuad"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %47, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %47

15:                                               ; preds = %10
  %16 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %20 = bitcast %"class.blink::Member.318"* %19 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %15
  %28 = bitcast %"class.blink::Node"* %8 to %"class.blink::HTMLAreaElement"*
  %29 = tail call %"class.blink::HTMLImageElement"* @_ZNK5blink15HTMLAreaElement12ImageElementEv(%"class.blink::HTMLAreaElement"* nonnull %28) #11
  br label %40

30:                                               ; preds = %15
  %31 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kMapTagE, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %23, %35
  br i1 %36, label %37, label %47

37:                                               ; preds = %30
  %38 = bitcast %"class.blink::Node"* %8 to %"class.blink::HTMLMapElement"*
  %39 = tail call %"class.blink::HTMLImageElement"* @_ZN5blink14HTMLMapElement12ImageElementEv(%"class.blink::HTMLMapElement"* nonnull %38) #11
  br label %40

40:                                               ; preds = %37, %27
  %41 = phi %"class.blink::HTMLImageElement"* [ %29, %27 ], [ %39, %37 ]
  %42 = icmp eq %"class.blink::HTMLImageElement"* %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br label %47

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %47

47:                                               ; preds = %5, %10, %30, %43, %45
  %48 = phi %"class.blink::Node"* [ null, %5 ], [ %46, %45 ], [ %44, %43 ], [ %8, %30 ], [ %8, %10 ]
  %49 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %48) #11
  call void @_ZNK5blink9LayoutBox19AbsoluteContentQuadEj(%"class.blink::FloatQuad"* nonnull sret %2, %"class.blink::LayoutBox"* %49, i32 0) #11
  %50 = call { i64, i64 } @_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv(%"class.blink::FloatQuad"* nonnull %2)
  %51 = extractvalue { i64, i64 } %50, 0
  %52 = extractvalue { i64, i64 } %50, 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  br label %53

53:                                               ; preds = %1, %47
  %54 = phi i64 [ %51, %47 ], [ 0, %1 ]
  %55 = phi i64 [ %52, %47 ], [ 0, %1 ]
  %56 = insertvalue { i64, i64 } undef, i64 %54, 0
  %57 = insertvalue { i64, i64 } %56, i64 %55, 1
  ret { i64, i64 } %57
}

declare %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"*) local_unnamed_addr #4

declare void @_ZNK5blink9LayoutBox19AbsoluteContentQuadEj(%"class.blink::FloatQuad"* sret, %"class.blink::LayoutBox"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv(%"class.blink::FloatQuad"*) local_unnamed_addr #6 comdat align 2 {
  %2 = tail call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* %0) #11
  %3 = extractvalue { <2 x float>, <2 x float> } %2, 0
  %4 = extractvalue { <2 x float>, <2 x float> } %2, 1
  %5 = extractelement <2 x float> %3, i32 0
  %6 = tail call float @llvm.floor.f32(float %5) #11
  %7 = fpext float %6 to double
  %8 = fcmp ult double %7, 0x41DFFFFFFFC00000
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = fcmp ugt float %6, 0xC1E0000000000000
  br i1 %10, label %11, label %14

11:                                               ; preds = %9
  %12 = fptosi float %6 to i32
  %13 = zext i32 %12 to i64
  br label %14

14:                                               ; preds = %11, %9, %1
  %15 = phi i64 [ %13, %11 ], [ 2147483647, %1 ], [ 2147483648, %9 ]
  %16 = extractelement <2 x float> %3, i32 1
  %17 = tail call float @llvm.floor.f32(float %16) #11
  %18 = fpext float %17 to double
  %19 = fcmp ult double %18, 0x41DFFFFFFFC00000
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = fcmp ugt float %17, 0xC1E0000000000000
  br i1 %21, label %22, label %26

22:                                               ; preds = %20
  %23 = fptosi float %17 to i32
  %24 = zext i32 %23 to i64
  %25 = shl nuw i64 %24, 32
  br label %26

26:                                               ; preds = %22, %20, %14
  %27 = phi i64 [ %25, %22 ], [ 9223372032559808512, %14 ], [ -9223372036854775808, %20 ]
  %28 = trunc i64 %15 to i32
  %29 = lshr exact i64 %27, 32
  %30 = trunc i64 %29 to i32
  %31 = extractelement <2 x float> %4, i32 0
  %32 = fadd float %5, %31
  %33 = extractelement <2 x float> %4, i32 1
  %34 = fadd float %16, %33
  %35 = tail call float @llvm.ceil.f32(float %32) #11
  %36 = fpext float %35 to double
  %37 = fcmp ult double %36, 0x41DFFFFFFFC00000
  br i1 %37, label %38, label %42

38:                                               ; preds = %26
  %39 = fcmp ugt float %35, 0xC1E0000000000000
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = fptosi float %35 to i32
  br label %42

42:                                               ; preds = %40, %38, %26
  %43 = phi i32 [ %41, %40 ], [ 2147483647, %26 ], [ -2147483648, %38 ]
  %44 = tail call float @llvm.ceil.f32(float %34) #11
  %45 = fpext float %44 to double
  %46 = fcmp ult double %45, 0x41DFFFFFFFC00000
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = fcmp ugt float %44, 0xC1E0000000000000
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = fptosi float %44 to i32
  br label %51

51:                                               ; preds = %42, %47, %49
  %52 = phi i32 [ %50, %49 ], [ 2147483647, %42 ], [ -2147483648, %47 ]
  %53 = icmp sgt i32 %28, -1
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %28) #11
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !3
  %59 = icmp sgt i32 %30, -1
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %52, i32 %30) #11
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !3
  %65 = or i64 %27, %15
  %66 = zext i32 %64 to i64
  %67 = shl nuw i64 %66, 32
  %68 = zext i32 %58 to i64
  %69 = or i64 %67, %68
  %70 = insertvalue { i64, i64 } undef, i64 %65, 0
  %71 = insertvalue { i64, i64 } %70, i64 %69, 1
  ret { i64, i64 } %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResult16AbsoluteImageURLEPKNS_4NodeE(%"class.blink::KURL"* noalias sret, %"class.blink::Node"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = icmp eq %"class.blink::Node"* %1, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #11
  br label %299

7:                                                ; preds = %2
  %8 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 48
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %117

14:                                               ; preds = %7
  %15 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %19 = bitcast %"class.blink::Member.318"* %18 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %22, %24
  %26 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLInputElement"*
  %27 = select i1 %25, %"class.blink::HTMLInputElement"* %26, %"class.blink::HTMLInputElement"* null
  %28 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %32 = bitcast %"class.blink::Member.318"* %31 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %56, label %39

39:                                               ; preds = %14
  %40 = icmp eq %"class.blink::HTMLInputElement"* %27, null
  br i1 %40, label %117, label %41

41:                                               ; preds = %39
  %42 = bitcast %"class.blink::HTMLInputElement"* %27 to %"class.blink::HTMLFormControlElement"*
  %43 = bitcast %"class.blink::HTMLInputElement"* %27 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %44 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %44, i64 171
  %46 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %45, align 8
  %47 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %46(%"class.blink::HTMLFormControlElement"* nonnull %42) #11
  %48 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %50, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %41
  %55 = load i32, i32* %10, align 8
  br label %117

56:                                               ; preds = %41, %14
  %57 = bitcast %"class.blink::Node"* %1 to %"class.blink::Element"*
  %58 = bitcast %"class.blink::Node"* %1 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %59 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %59, i64 97
  %61 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %60, align 8
  %62 = tail call %"class.WTF::StringImpl"* %61(%"class.blink::Element"* nonnull %57) #11
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %56
  %65 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  %66 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %65, i64* %66, align 8
  br label %248

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %101

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i33
  %76 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #11
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !3

81:                                               ; preds = %72
  tail call void @llvm.trap() #11
  unreachable

82:                                               ; preds = %72
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %73, align 4
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %85 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  %86 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %85, i64* %86, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %87, label %104, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %104

100:                                              ; preds = %97
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #11
  br label %104

101:                                              ; preds = %67
  %102 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  %103 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %102, i64* %103, align 8
  br label %104

104:                                              ; preds = %100, %97, %82, %101
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %246

116:                                              ; preds = %113
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #11
  br label %246

117:                                              ; preds = %7, %54, %39
  %118 = phi i32 [ %55, %54 ], [ %11, %39 ], [ %11, %7 ]
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 6, i32 0, i32 0
  br i1 %120, label %126, label %122

122:                                              ; preds = %117
  %123 = bitcast %"class.blink::NodeData"** %121 to %"class.blink::NodeRareData"**
  %124 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %124, i64 0, i32 1, i32 0, i32 0
  br label %128

126:                                              ; preds = %117
  %127 = bitcast %"class.blink::NodeData"** %121 to %"class.blink::NodeRenderingData"**
  br label %128

128:                                              ; preds = %122, %126
  %129 = phi %"class.blink::NodeRenderingData"** [ %125, %122 ], [ %127, %126 ]
  %130 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %130, i64 0, i32 1
  %132 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %131, align 8
  %133 = icmp eq %"class.blink::LayoutObject"* %132, null
  br i1 %133, label %246, label %134

134:                                              ; preds = %128
  br i1 %120, label %139, label %135

135:                                              ; preds = %134
  %136 = bitcast %"class.blink::NodeData"** %121 to %"class.blink::NodeRareData"**
  %137 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %137, i64 0, i32 1, i32 0, i32 0
  br label %141

139:                                              ; preds = %134
  %140 = bitcast %"class.blink::NodeData"** %121 to %"class.blink::NodeRenderingData"**
  br label %141

141:                                              ; preds = %135, %139
  %142 = phi %"class.blink::NodeRenderingData"** [ %138, %135 ], [ %140, %139 ]
  %143 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %143, i64 0, i32 1
  %145 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %144, align 8
  %146 = bitcast %"class.blink::LayoutObject"* %145 to i1 (%"class.blink::LayoutObject"*)***
  %147 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %146, align 8
  %148 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %147, i64 21
  %149 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %148, align 8
  %150 = tail call zeroext i1 %149(%"class.blink::LayoutObject"* %145) #11
  br i1 %150, label %151, label %246

151:                                              ; preds = %141
  %152 = load i32, i32* %10, align 8
  %153 = and i32 %152, 48
  switch i32 %153, label %246 [
    i32 0, label %154
    i32 32, label %173
  ]

154:                                              ; preds = %151
  %155 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE, align 8
  %156 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %155, i64 0, i32 0, i32 0, i32 0
  %157 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %159 = bitcast %"class.blink::Member.318"* %158 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %160 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %160, i64 0, i32 3, i32 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %157, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %162, %164
  br i1 %165, label %185, label %166

166:                                              ; preds = %154
  %167 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %168 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %169, i64 0, i32 3, i32 0, i32 0, i32 0
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %162, %171
  br i1 %172, label %185, label %246

173:                                              ; preds = %151
  %174 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kImageTagE, align 8
  %175 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %174, i64 0, i32 0, i32 0, i32 0
  %176 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %178 = bitcast %"class.blink::Member.318"* %177 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %179 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %179, i64 0, i32 3, i32 0, i32 0, i32 0
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %176, i64 0, i32 3, i32 0, i32 0, i32 0
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %181, %183
  br i1 %184, label %185, label %246

185:                                              ; preds = %173, %166, %154
  %186 = bitcast %"class.blink::Node"* %1 to %"class.blink::Element"*
  %187 = bitcast %"class.blink::Node"* %1 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %188 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %187, align 8
  %189 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %188, i64 97
  %190 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %189, align 8
  %191 = tail call %"class.WTF::StringImpl"* %190(%"class.blink::Element"* nonnull %186) #11
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %193, label %196

193:                                              ; preds = %185
  %194 = ptrtoint %"class.WTF::StringImpl"* %191 to i64
  %195 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %194, i64* %195, align 8
  br label %248

196:                                              ; preds = %185
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %230

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = zext i32 %203 to i33
  %205 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %204, i33 1) #11
  %206 = extractvalue { i33, i1 } %205, 1
  %207 = extractvalue { i33, i1 } %205, 0
  %208 = icmp slt i33 %207, 0
  %209 = or i1 %206, %208
  br i1 %209, label %210, label %211, !prof !3

210:                                              ; preds = %201
  tail call void @llvm.trap() #11
  unreachable

211:                                              ; preds = %201
  %212 = trunc i33 %207 to i32
  store i32 %212, i32* %202, align 4
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %214 = ptrtoint %"class.WTF::StringImpl"* %191 to i64
  %215 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %214, i64* %215, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %216, label %233, label %217

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %233

229:                                              ; preds = %226
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #11
  br label %233

230:                                              ; preds = %196
  %231 = ptrtoint %"class.WTF::StringImpl"* %191 to i64
  %232 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %231, i64* %232, align 8
  br label %233

233:                                              ; preds = %229, %226, %211, %230
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = and i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  br i1 %237, label %240, label %242

240:                                              ; preds = %233
  %241 = add i32 %239, -1
  store i32 %241, i32* %238, align 4
  br label %242

242:                                              ; preds = %240, %233
  %243 = phi i32 [ %241, %240 ], [ %239, %233 ]
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %242
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #11
  br label %246

246:                                              ; preds = %173, %141, %128, %113, %116, %242, %245, %166, %151
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  br label %248

248:                                              ; preds = %246, %193, %64
  %249 = phi %"class.WTF::StringImpl"* [ %247, %246 ], [ %191, %193 ], [ %62, %64 ]
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %255, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %248, %251
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #11
  br label %282

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %258 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %257, align 8
  %259 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %258, i64 0, i32 2, i32 0, i32 0
  %260 = load %"class.blink::Document"*, %"class.blink::Document"** %259, align 8
  %261 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261) #11
  %262 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  %263 = call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %262) #11
  %264 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %263, %"class.WTF::StringImpl"** %264, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret %0, %"class.blink::Document"* %260, %"class.WTF::String"* nonnull dereferenceable(8) %4) #11
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %265, null
  br i1 %266, label %280, label %267

267:                                              ; preds = %256
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %267
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %267
  %277 = phi i32 [ %275, %274 ], [ %273, %267 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %265) #11
  br label %280

280:                                              ; preds = %256, %276, %279
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #11
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  br label %282

282:                                              ; preds = %280, %255
  %283 = phi %"class.WTF::StringImpl"* [ %281, %280 ], [ %249, %255 ]
  %284 = icmp eq %"class.WTF::StringImpl"* %283, null
  br i1 %284, label %298, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  br i1 %289, label %292, label %294

292:                                              ; preds = %285
  %293 = add i32 %291, -1
  store i32 %293, i32* %290, align 4
  br label %294

294:                                              ; preds = %292, %285
  %295 = phi i32 [ %293, %292 ], [ %291, %285 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %283) #11
  br label %298

298:                                              ; preds = %282, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  br label %299

299:                                              ; preds = %298, %6
  ret void
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13HitTestResult16AbsoluteImageURLEv(%"class.blink::KURL"* noalias sret, %"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %43, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 48
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %43

11:                                               ; preds = %6
  %12 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 2
  %16 = bitcast %"class.blink::Member.318"* %15 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %19, %21
  br i1 %22, label %23, label %26

23:                                               ; preds = %11
  %24 = bitcast %"class.blink::Node"* %4 to %"class.blink::HTMLAreaElement"*
  %25 = tail call %"class.blink::HTMLImageElement"* @_ZNK5blink15HTMLAreaElement12ImageElementEv(%"class.blink::HTMLAreaElement"* nonnull %24) #11
  br label %36

26:                                               ; preds = %11
  %27 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kMapTagE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %19, %31
  br i1 %32, label %33, label %43

33:                                               ; preds = %26
  %34 = bitcast %"class.blink::Node"* %4 to %"class.blink::HTMLMapElement"*
  %35 = tail call %"class.blink::HTMLImageElement"* @_ZN5blink14HTMLMapElement12ImageElementEv(%"class.blink::HTMLMapElement"* nonnull %34) #11
  br label %36

36:                                               ; preds = %33, %23
  %37 = phi %"class.blink::HTMLImageElement"* [ %25, %23 ], [ %35, %33 ]
  %38 = icmp eq %"class.blink::HTMLImageElement"* %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  br label %43

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %43

43:                                               ; preds = %2, %6, %26, %39, %41
  %44 = phi %"class.blink::Node"* [ null, %2 ], [ %42, %41 ], [ %40, %39 ], [ %4, %26 ], [ %4, %6 ]
  tail call void @_ZN5blink13HitTestResult16AbsoluteImageURLEPKNS_4NodeE(%"class.blink::KURL"* sret %0, %"class.blink::Node"* %44)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13HitTestResult16AbsoluteMediaURLEv(%"class.blink::KURL"* noalias sret, %"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %71, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 6, i32 0, i32 0
  br i1 %10, label %16, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %18

16:                                               ; preds = %6
  %17 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi %"class.blink::NodeRenderingData"** [ %15, %12 ], [ %17, %16 ]
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %71, label %24

24:                                               ; preds = %18
  br i1 %10, label %29, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %27 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %27, i64 0, i32 1, i32 0, i32 0
  br label %31

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi %"class.blink::NodeRenderingData"** [ %28, %25 ], [ %30, %29 ]
  %33 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %33, i64 0, i32 1
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = bitcast %"class.blink::LayoutObject"* %35 to i1 (%"class.blink::LayoutObject"*, i32)***
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* %35, i32 19) #11
  br i1 %40, label %41, label %71

41:                                               ; preds = %31
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 48
  %46 = icmp ne i32 %45, 0
  %47 = icmp eq %"class.blink::Node"* %42, null
  %48 = or i1 %47, %46
  br i1 %48, label %71, label %49

49:                                               ; preds = %41
  %50 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAudioTagE, align 8
  %51 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 1, i32 2
  %54 = bitcast %"class.blink::Member.318"* %53 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %55 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %57, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %49
  %62 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE, align 8
  %63 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %57, %66
  br i1 %67, label %68, label %71

68:                                               ; preds = %49, %61
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 11, i32 6
  %70 = bitcast %"class.blink::Member.322"* %69 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* dereferenceable(112) %70) #11
  br label %72

71:                                               ; preds = %61, %41, %31, %18, %2
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #11
  br label %72

72:                                               ; preds = %68, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLMediaElement"* @_ZNK5blink13HitTestResult12MediaElementEv(%"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %69, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 6, i32 0, i32 0
  br i1 %9, label %15, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %13 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %13, i64 0, i32 1, i32 0, i32 0
  br label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  br label %17

17:                                               ; preds = %11, %15
  %18 = phi %"class.blink::NodeRenderingData"** [ %14, %11 ], [ %16, %15 ]
  %19 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %19, i64 0, i32 1
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = icmp eq %"class.blink::LayoutObject"* %21, null
  br i1 %22, label %69, label %23

23:                                               ; preds = %17
  br i1 %9, label %28, label %24

24:                                               ; preds = %23
  %25 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %26 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %26, i64 0, i32 1, i32 0, i32 0
  br label %30

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  br label %30

30:                                               ; preds = %24, %28
  %31 = phi %"class.blink::NodeRenderingData"** [ %27, %24 ], [ %29, %28 ]
  %32 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %32, i64 0, i32 1
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = bitcast %"class.blink::LayoutObject"* %34 to i1 (%"class.blink::LayoutObject"*, i32)***
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, i64 92
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::LayoutObject"* %34, i32 19) #11
  br i1 %39, label %40, label %69

40:                                               ; preds = %30
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 48
  %45 = icmp ne i32 %44, 0
  %46 = icmp eq %"class.blink::Node"* %41, null
  %47 = or i1 %46, %45
  br i1 %47, label %69, label %48

48:                                               ; preds = %40
  %49 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAudioTagE, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 1, i32 2
  %53 = bitcast %"class.blink::Member.318"* %52 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %56, %58
  br i1 %59, label %67, label %60

60:                                               ; preds = %48
  %61 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE, align 8
  %62 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %56, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %60, %48
  %68 = bitcast %"class.blink::Node"* %41 to %"class.blink::HTMLMediaElement"*
  br label %69

69:                                               ; preds = %1, %67, %60, %40, %30, %17
  %70 = phi %"class.blink::HTMLMediaElement"* [ null, %1 ], [ null, %17 ], [ null, %30 ], [ %68, %67 ], [ null, %60 ], [ null, %40 ]
  ret %"class.blink::HTMLMediaElement"* %70
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaStreamDescriptor"* @_ZNK5blink13HitTestResult24GetMediaStreamDescriptorEv(%"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %71, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 6, i32 0, i32 0
  br i1 %9, label %15, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %13 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %13, i64 0, i32 1, i32 0, i32 0
  br label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  br label %17

17:                                               ; preds = %15, %11
  %18 = phi %"class.blink::NodeRenderingData"** [ %14, %11 ], [ %16, %15 ]
  %19 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %19, i64 0, i32 1
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = icmp eq %"class.blink::LayoutObject"* %21, null
  br i1 %22, label %71, label %23

23:                                               ; preds = %17
  br i1 %9, label %28, label %24

24:                                               ; preds = %23
  %25 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %26 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %26, i64 0, i32 1, i32 0, i32 0
  br label %30

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi %"class.blink::NodeRenderingData"** [ %27, %24 ], [ %29, %28 ]
  %32 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %32, i64 0, i32 1
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = bitcast %"class.blink::LayoutObject"* %34 to i1 (%"class.blink::LayoutObject"*, i32)***
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, i64 92
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::LayoutObject"* %34, i32 19) #11
  br i1 %39, label %40, label %71

40:                                               ; preds = %30
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 48
  %45 = icmp ne i32 %44, 0
  %46 = icmp eq %"class.blink::Node"* %41, null
  %47 = or i1 %46, %45
  br i1 %47, label %71, label %48

48:                                               ; preds = %40
  %49 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAudioTagE, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 1, i32 2
  %53 = bitcast %"class.blink::Member.318"* %52 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %56, %58
  br i1 %59, label %67, label %60

60:                                               ; preds = %48
  %61 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE, align 8
  %62 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %56, %65
  br i1 %66, label %67, label %71

67:                                               ; preds = %48, %60
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 15, i32 2
  %69 = bitcast %"class.blink::Member.318"* %68 to %"class.blink::MediaStreamDescriptor"**
  %70 = load %"class.blink::MediaStreamDescriptor"*, %"class.blink::MediaStreamDescriptor"** %69, align 8
  br label %71

71:                                               ; preds = %60, %40, %30, %17, %1, %67
  %72 = phi %"class.blink::MediaStreamDescriptor"* [ %70, %67 ], [ null, %1 ], [ null, %17 ], [ null, %30 ], [ null, %60 ], [ null, %40 ]
  ret %"class.blink::MediaStreamDescriptor"* %72
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13HitTestResult15AbsoluteLinkURLEv(%"class.blink::KURL"* noalias sret, %"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  %5 = icmp eq %"class.blink::Element"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #11
  br label %8

7:                                                ; preds = %2
  tail call void @_ZNK5blink7Element7HrefURLEv(%"class.blink::KURL"* sret %0, %"class.blink::Element"* nonnull %4) #11
  br label %8

8:                                                ; preds = %7, %6
  ret void
}

declare void @_ZNK5blink7Element7HrefURLEv(%"class.blink::KURL"* sret, %"class.blink::Element"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13HitTestResult10IsLiveLinkEv(%"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::Element"* %3 to i1 (%"class.blink::Element"*)***
  %7 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %7, i64 96
  %9 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::Element"* nonnull %3) #11
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13HitTestResult10IsOverLinkEv(%"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 64
  %9 = icmp ne i32 %8, 0
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i1 [ false, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13HitTestResult11TextContentEv(%"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"* %6, i1 zeroext false) #11
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.WTF::StringImpl"* [ %7, %5 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %9
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13HitTestResult17IsContentEditableEv(%"class.blink::HitTestResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %46, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 48
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %44

10:                                               ; preds = %5
  %11 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %15 = bitcast %"class.blink::Member.318"* %14 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %10
  %23 = bitcast %"class.blink::Node"* %3 to %"class.blink::HTMLFormControlElement"*
  %24 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"* nonnull %23) #11
  %25 = xor i1 %24, true
  br label %46

26:                                               ; preds = %10
  %27 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 2
  %31 = bitcast %"class.blink::Member.318"* %30 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  %38 = bitcast %"class.blink::Node"* %3 to %"class.blink::HTMLInputElement"*
  br i1 %37, label %39, label %44

39:                                               ; preds = %26
  %40 = bitcast %"class.blink::Node"* %3 to %"class.blink::HTMLFormControlElement"*
  %41 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"* nonnull %40) #11
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement11IsTextFieldEv(%"class.blink::HTMLInputElement"* nonnull %38) #11
  br label %46

44:                                               ; preds = %5, %26
  %45 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %3) #11
  br label %46

46:                                               ; preds = %1, %42, %39, %22, %44
  %47 = phi i1 [ %45, %44 ], [ %25, %22 ], [ false, %1 ], [ false, %39 ], [ %43, %42 ]
  ret i1 %47
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink16HTMLInputElement11IsTextFieldEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_12PhysicalRectE(%"class.blink::HitTestResult"* nocapture, %"class.blink::Node"*, %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode.1897", align 8
  %6 = alloca %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %7 = alloca %"class.blink::Node"*, align 8
  store %"class.blink::Node"* %1, %"class.blink::Node"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 2048
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %86, label %20

20:                                               ; preds = %4, %16, %12
  %21 = and i32 %9, 4096
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %86, label %23

23:                                               ; preds = %20
  %24 = icmp eq %"class.blink::Node"* %1, null
  br i1 %24, label %86, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 11
  %27 = getelementptr inbounds %"class.blink::Member.1883", %"class.blink::Member.1883"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %27, align 8
  %29 = icmp eq %"class.blink::HeapLinkedHashSet.1885"* %28, null
  br i1 %29, label %30, label %47

30:                                               ; preds = %25
  %31 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS5_EEEEEEPhm(i64 48) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 20, i1 false) #11
  %32 = getelementptr inbounds i8, i8* %31, i64 24
  %33 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false) #11
  %34 = bitcast i8* %32 to %"class.WTF::Vector.1894"*
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1894"* %34, %"class.WTF::VectorBackedLinkedListNode.1897"* nonnull dereferenceable(16) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  %35 = getelementptr inbounds i8, i8* %31, i64 -4
  %36 = bitcast i8* %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = or i16 %37, 1
  store atomic i16 %38, i16* %36 release, align 2
  %39 = ptrtoint i8* %31 to i64
  %40 = bitcast %"class.blink::Member.1883"* %26 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %42 = icmp eq i32 %41, 0
  %43 = bitcast i8* %31 to %"class.blink::HeapLinkedHashSet.1885"*
  br i1 %42, label %47, label %44

44:                                               ; preds = %30
  %45 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #11
  %46 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %27, align 8
  br label %47

47:                                               ; preds = %25, %30, %44
  %48 = phi %"class.blink::HeapLinkedHashSet.1885"* [ %28, %25 ], [ %46, %44 ], [ %43, %30 ]
  %49 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %48, i64 0, i32 0
  %50 = bitcast %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50)
  %51 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %48, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %51, i64 0, i32 0
  %53 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %52, i32 0) #11, !noalias !5
  %54 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode.1897"* %53, %"class.WTF::VectorBackedLinkedListNode.1897"** %54, align 8, !alias.scope !5
  %55 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList.1893"* %51, %"class.WTF::VectorBackedLinkedList.1893"** %55, align 8, !alias.scope !5
  %56 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %48, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4, !noalias !8
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %59, align 8, !noalias !8
  %61 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %48, i64 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 8, !noalias !8
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %60, i64 %63
  br i1 %58, label %74, label %65

65:                                               ; preds = %47
  %66 = icmp eq i32 %62, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %65, %71
  %68 = phi %"struct.WTF::KeyValuePair.1892"* [ %72, %71 ], [ %60, %65 ]
  %69 = bitcast %"struct.WTF::KeyValuePair.1892"* %68 to i64*
  %70 = load i64, i64* %69, align 8, !noalias !8
  switch i64 %70, label %74 [
    i64 -1, label %71
    i64 0, label %71
  ]

71:                                               ; preds = %67, %67
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %68, i64 1
  %73 = icmp eq %"struct.WTF::KeyValuePair.1892"* %72, %64
  br i1 %73, label %74, label %67

74:                                               ; preds = %67, %71, %47, %65
  %75 = phi %"struct.WTF::KeyValuePair.1892"* [ %64, %47 ], [ %60, %65 ], [ %68, %67 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6, i64 0, i32 1, i32 0, i32 0
  store %"struct.WTF::KeyValuePair.1892"* %75, %"struct.WTF::KeyValuePair.1892"** %76, align 8, !alias.scope !8
  %77 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6, i64 0, i32 1, i32 0, i32 1
  store %"struct.WTF::KeyValuePair.1892"* %64, %"struct.WTF::KeyValuePair.1892"** %77, align 8, !alias.scope !8
  %78 = call { %"class.blink::Member.318"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet.1888"* %49, %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8 %6, %"class.blink::Node"** nonnull dereferenceable(8) %7, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50)
  %79 = load i32, i32* %8, align 8
  %80 = and i32 %79, 8192
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 1
  %84 = call zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"* %3, %"struct.blink::PhysicalRect"* dereferenceable(16) %83) #11
  %85 = zext i1 %84 to i32
  br label %86

86:                                               ; preds = %74, %20, %23, %16, %82
  %87 = phi i32 [ %85, %82 ], [ 0, %16 ], [ 1, %20 ], [ 0, %23 ], [ 0, %74 ]
  ret i32 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.blink::HeapLinkedHashSet.1885"* @_ZN5blink13HitTestResult26MutableListBasedTestResultEv(%"class.blink::HitTestResult"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::VectorBackedLinkedListNode.1897", align 8
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 11
  %4 = getelementptr inbounds %"class.blink::Member.1883", %"class.blink::Member.1883"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %4, align 8
  %6 = icmp eq %"class.blink::HeapLinkedHashSet.1885"* %5, null
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS5_EEEEEEPhm(i64 48) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #11
  %9 = getelementptr inbounds i8, i8* %8, i64 24
  %10 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #11
  %11 = bitcast i8* %9 to %"class.WTF::Vector.1894"*
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1894"* %11, %"class.WTF::VectorBackedLinkedListNode.1897"* nonnull dereferenceable(16) %2) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  %12 = getelementptr inbounds i8, i8* %8, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = ptrtoint i8* %8 to i64
  %17 = bitcast %"class.blink::Member.1883"* %3 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  %20 = bitcast i8* %8 to %"class.blink::HeapLinkedHashSet.1885"*
  br i1 %19, label %24, label %21

21:                                               ; preds = %7
  %22 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %8) #11
  %23 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %4, align 8
  br label %24

24:                                               ; preds = %1, %21, %7
  %25 = phi %"class.blink::HeapLinkedHashSet.1885"* [ %5, %1 ], [ %23, %21 ], [ %20, %7 ]
  ret %"class.blink::HeapLinkedHashSet.1885"* %25
}

declare zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_6RegionE(%"class.blink::HitTestResult"* nocapture, %"class.blink::Node"*, %"class.blink::HitTestLocation"* nocapture readonly dereferenceable(72), %"class.blink::Region"* dereferenceable(304)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode.1897", align 8
  %6 = alloca %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %7 = alloca %"class.blink::Node"*, align 8
  %8 = alloca %"class.blink::Region", align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.blink::IntRect"*
  store %"class.blink::Node"* %1, %"class.blink::Node"** %7, align 8
  %11 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 2048
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %176, label %23

23:                                               ; preds = %4, %19, %15
  %24 = and i32 %12, 4096
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %176, label %26

26:                                               ; preds = %23
  %27 = icmp eq %"class.blink::Node"* %1, null
  br i1 %27, label %176, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 11
  %30 = getelementptr inbounds %"class.blink::Member.1883", %"class.blink::Member.1883"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %30, align 8
  %32 = icmp eq %"class.blink::HeapLinkedHashSet.1885"* %31, null
  br i1 %32, label %33, label %50

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS5_EEEEEEPhm(i64 48) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 20, i1 false) #11
  %35 = getelementptr inbounds i8, i8* %34, i64 24
  %36 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 16, i1 false) #11
  %37 = bitcast i8* %35 to %"class.WTF::Vector.1894"*
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1894"* %37, %"class.WTF::VectorBackedLinkedListNode.1897"* nonnull dereferenceable(16) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #11
  %38 = getelementptr inbounds i8, i8* %34, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  %42 = ptrtoint i8* %34 to i64
  %43 = bitcast %"class.blink::Member.1883"* %29 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  %46 = bitcast i8* %34 to %"class.blink::HeapLinkedHashSet.1885"*
  br i1 %45, label %50, label %47

47:                                               ; preds = %33
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %34) #11
  %49 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %30, align 8
  br label %50

50:                                               ; preds = %28, %33, %47
  %51 = phi %"class.blink::HeapLinkedHashSet.1885"* [ %31, %28 ], [ %49, %47 ], [ %46, %33 ]
  %52 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %51, i64 0, i32 0
  %53 = bitcast %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53)
  %54 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %51, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %54, i64 0, i32 0
  %56 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %55, i32 0) #11, !noalias !11
  %57 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode.1897"* %56, %"class.WTF::VectorBackedLinkedListNode.1897"** %57, align 8, !alias.scope !11
  %58 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList.1893"* %54, %"class.WTF::VectorBackedLinkedList.1893"** %58, align 8, !alias.scope !11
  %59 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %51, i64 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4, !noalias !14
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %62, align 8, !noalias !14
  %64 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %51, i64 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i32, i32* %64, align 8, !noalias !14
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %63, i64 %66
  br i1 %61, label %77, label %68

68:                                               ; preds = %50
  %69 = icmp eq i32 %65, 0
  br i1 %69, label %77, label %70

70:                                               ; preds = %68, %74
  %71 = phi %"struct.WTF::KeyValuePair.1892"* [ %75, %74 ], [ %63, %68 ]
  %72 = bitcast %"struct.WTF::KeyValuePair.1892"* %71 to i64*
  %73 = load i64, i64* %72, align 8, !noalias !14
  switch i64 %73, label %77 [
    i64 -1, label %74
    i64 0, label %74
  ]

74:                                               ; preds = %70, %70
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %71, i64 1
  %76 = icmp eq %"struct.WTF::KeyValuePair.1892"* %75, %67
  br i1 %76, label %77, label %70

77:                                               ; preds = %70, %74, %50, %68
  %78 = phi %"struct.WTF::KeyValuePair.1892"* [ %67, %50 ], [ %63, %68 ], [ %71, %70 ], [ %67, %74 ]
  %79 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6, i64 0, i32 1, i32 0, i32 0
  store %"struct.WTF::KeyValuePair.1892"* %78, %"struct.WTF::KeyValuePair.1892"** %79, align 8, !alias.scope !14
  %80 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %6, i64 0, i32 1, i32 0, i32 1
  store %"struct.WTF::KeyValuePair.1892"* %67, %"struct.WTF::KeyValuePair.1892"** %80, align 8, !alias.scope !14
  %81 = call { %"class.blink::Member.318"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet.1888"* %52, %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8 %6, %"class.blink::Node"** nonnull dereferenceable(8) %7, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53)
  %82 = load i32, i32* %11, align 8
  %83 = and i32 %82, 8192
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %176

85:                                               ; preds = %77
  %86 = bitcast %"class.blink::Region"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %86) #11
  %87 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #11
  %88 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp slt i32 %89, -2147483584
  %91 = ashr i32 %89, 6
  %92 = select i1 %90, i32 -33554432, i32 %91, !prof !3
  %93 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 1, i32 0, i32 1, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %94, -2147483584
  %96 = ashr i32 %94, 6
  %97 = select i1 %95, i32 -33554432, i32 %96, !prof !3
  %98 = zext i32 %97 to i64
  %99 = shl nuw i64 %98, 32
  %100 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 1, i32 1, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp slt i32 %101, 0
  %103 = select i1 %102, i32 -2147483648, i32 2147483647
  %104 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %89, i32 %101) #11
  %105 = extractvalue { i32, i1 } %104, 1
  %106 = extractvalue { i32, i1 } %104, 0
  %107 = select i1 %105, i32 %103, i32 %106, !prof !3
  %108 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 1, i32 1, i32 1, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp slt i32 %109, 0
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %94, i32 %109) #11
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 %111, i32 %114, !prof !3
  %116 = icmp sgt i32 %107, 2147483583
  br i1 %116, label %124, label %117, !prof !3

117:                                              ; preds = %85
  %118 = icmp sgt i32 %107, -1
  br i1 %118, label %119, label %122

119:                                              ; preds = %117
  %120 = add nuw nsw i32 %107, 63
  %121 = sdiv i32 %120, 64
  br label %124

122:                                              ; preds = %117
  %123 = sdiv i32 %107, 64
  br label %124

124:                                              ; preds = %122, %119, %85
  %125 = phi i32 [ %121, %119 ], [ %123, %122 ], [ 33554431, %85 ]
  %126 = icmp sgt i32 %115, 2147483583
  br i1 %126, label %134, label %127, !prof !3

127:                                              ; preds = %124
  %128 = icmp sgt i32 %115, -1
  br i1 %128, label %129, label %132

129:                                              ; preds = %127
  %130 = add nuw nsw i32 %115, 63
  %131 = sdiv i32 %130, 64
  br label %134

132:                                              ; preds = %127
  %133 = sdiv i32 %115, 64
  br label %134

134:                                              ; preds = %124, %129, %132
  %135 = phi i32 [ %131, %129 ], [ %133, %132 ], [ 33554431, %124 ]
  %136 = sub nsw i32 %125, %92
  %137 = sub nsw i32 %135, %97
  %138 = zext i32 %137 to i64
  %139 = shl nuw i64 %138, 32
  %140 = zext i32 %136 to i64
  %141 = or i64 %139, %140
  %142 = zext i32 %92 to i64
  %143 = or i64 %99, %142
  %144 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  store i64 %141, i64* %145, align 8
  call void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"* nonnull %8, %"class.blink::IntRect"* nonnull dereferenceable(16) %10) #11
  %146 = call zeroext i1 @_ZNK5blink6Region8ContainsERKS0_(%"class.blink::Region"* %3, %"class.blink::Region"* nonnull dereferenceable(304) %8) #11
  %147 = zext i1 %146 to i32
  %148 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1
  %149 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1, i32 1
  %150 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %154, label %153, !prof !3

153:                                              ; preds = %134
  store i32 0, i32* %150, align 4
  br label %154

154:                                              ; preds = %153, %134
  %155 = getelementptr inbounds %"class.WTF::Vector.3034", %"class.WTF::Vector.3034"* %149, i64 0, i32 0, i32 0, i32 0
  %156 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %158 = bitcast i8* %157 to %"struct.blink::Region::Span"*
  %159 = icmp eq %"struct.blink::Region::Span"* %156, %158
  br i1 %159, label %162, label %160, !prof !17

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.WTF::Vector.3034", %"class.WTF::Vector.3034"* %149, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3035"* %161, %"struct.blink::Region::Span"* %156) #11
  br label %162

162:                                              ; preds = %160, %154
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %155, align 8
  %163 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %167, label %166, !prof !3

166:                                              ; preds = %162
  store i32 0, i32* %163, align 4
  br label %167

167:                                              ; preds = %166, %162
  %168 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %148, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32*, i32** %168, align 8
  %170 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %8, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %171 = bitcast i8* %170 to i32*
  %172 = icmp eq i32* %169, %171
  br i1 %172, label %175, label %173, !prof !17

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %148, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.3030"* %174, i32* %169) #11
  br label %175

175:                                              ; preds = %167, %173
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %86) #11
  br label %176

176:                                              ; preds = %77, %23, %26, %19, %175
  %177 = phi i32 [ %147, %175 ], [ 0, %19 ], [ 1, %23 ], [ 0, %26 ], [ 0, %77 ]
  ret i32 %177
}

declare zeroext i1 @_ZNK5blink6Region8ContainsERKS0_(%"class.blink::Region"*, %"class.blink::Region"* dereferenceable(304)) local_unnamed_addr #4

declare void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"*, %"class.blink::IntRect"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResult6AppendERKS0_(%"class.blink::HitTestResult"* nocapture, %"class.blink::HitTestResult"* nocapture readonly dereferenceable(112)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::VectorBackedLinkedListNode.1897", align 8
  %4 = alloca %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 9, i32 0, i32 0
  %7 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %6, align 8
  %8 = icmp eq %"class.blink::Scrollbar"* %7, null
  br i1 %8, label %9, label %22

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 9, i32 0, i32 0
  %11 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %10, align 8
  %12 = icmp eq %"class.blink::Scrollbar"* %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 9
  %15 = ptrtoint %"class.blink::Scrollbar"* %11 to i64
  %16 = bitcast %"class.blink::Member.782"* %14 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::Scrollbar"* %11 to i8*
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %2, %19, %13, %9
  %23 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %27, label %126

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %126, label %31

31:                                               ; preds = %27
  %32 = ptrtoint %"class.blink::Node"* %29 to i64
  %33 = bitcast %"class.blink::Member.318"* %23 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::Node"* %29 to i8*
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %37) #11
  br label %39

39:                                               ; preds = %31, %36
  %40 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 4, i32 0, i32 0
  %41 = load %"class.blink::Element"*, %"class.blink::Element"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 4
  %43 = ptrtoint %"class.blink::Element"* %41 to i64
  %44 = bitcast %"class.blink::Member.343"* %42 to i64*
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.blink::Element"* %41 to i8*
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %39, %47
  %51 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::Node"*, %"class.blink::Node"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 5
  %54 = ptrtoint %"class.blink::Node"* %52 to i64
  %55 = bitcast %"class.blink::Member.318"* %53 to i64*
  store atomic i64 %54, i64* %55 monotonic, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %50
  %59 = bitcast %"class.blink::Node"* %52 to i8*
  %60 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %59) #11
  br label %61

61:                                               ; preds = %50, %58
  %62 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 7
  %63 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 7
  %64 = bitcast %"struct.blink::PhysicalOffset"* %62 to i64*
  %65 = bitcast %"struct.blink::PhysicalOffset"* %63 to i64*
  %66 = load i64, i64* %64, align 4
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 6
  %68 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 6
  %69 = bitcast %"struct.blink::PhysicalOffset"* %67 to i64*
  %70 = bitcast %"struct.blink::PhysicalOffset"* %68 to i64*
  %71 = load i64, i64* %69, align 4
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 8, i32 0, i32 0
  %73 = load %"class.blink::Element"*, %"class.blink::Element"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 8
  %75 = ptrtoint %"class.blink::Element"* %73 to i64
  %76 = bitcast %"class.blink::Member.343"* %74 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %61
  %80 = bitcast %"class.blink::Element"* %73 to i8*
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #11
  br label %82

82:                                               ; preds = %61, %79
  %83 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 10
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 10
  store i8 %84, i8* %85, align 8
  %86 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 12
  %87 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 12, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %107, label %90

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %107

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i33
  %99 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %98, i33 1) #11
  %100 = extractvalue { i33, i1 } %99, 1
  %101 = extractvalue { i33, i1 } %99, 0
  %102 = icmp slt i33 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %104, label %105, !prof !3

104:                                              ; preds = %95
  tail call void @llvm.trap() #11
  unreachable

105:                                              ; preds = %95
  %106 = trunc i33 %101 to i32
  store i32 %106, i32* %96, align 4
  br label %107

107:                                              ; preds = %105, %90, %82
  %108 = ptrtoint %"class.WTF::StringImpl"* %88 to i64
  %109 = bitcast %"class.WTF::String"* %86 to i64*
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  store i64 %108, i64* %109, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #11
  br label %126

126:                                              ; preds = %22, %125, %122, %107, %27
  %127 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 3, i32 0, i32 0
  %128 = load %"class.blink::Node"*, %"class.blink::Node"** %127, align 8
  %129 = icmp eq %"class.blink::Node"* %128, null
  br i1 %129, label %130, label %143

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 3, i32 0, i32 0
  %132 = load %"class.blink::Node"*, %"class.blink::Node"** %131, align 8
  %133 = icmp eq %"class.blink::Node"* %132, null
  br i1 %133, label %143, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 3
  %136 = ptrtoint %"class.blink::Node"* %132 to i64
  %137 = bitcast %"class.blink::Member.318"* %135 to i64*
  store atomic i64 %136, i64* %137 monotonic, align 8
  %138 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %134
  %141 = bitcast %"class.blink::Node"* %132 to i8*
  %142 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %141) #11
  br label %143

143:                                              ; preds = %126, %140, %134, %130
  %144 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 11, i32 0, i32 0
  %145 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %144, align 8
  %146 = icmp eq %"class.blink::HeapLinkedHashSet.1885"* %145, null
  br i1 %146, label %223, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 11
  %149 = getelementptr inbounds %"class.blink::Member.1883", %"class.blink::Member.1883"* %148, i64 0, i32 0, i32 0
  %150 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %149, align 8
  %151 = icmp eq %"class.blink::HeapLinkedHashSet.1885"* %150, null
  br i1 %151, label %152, label %169

152:                                              ; preds = %147
  %153 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS5_EEEEEEPhm(i64 48) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 20, i1 false) #11
  %154 = getelementptr inbounds i8, i8* %153, i64 24
  %155 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 24, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 16, i1 false) #11
  %156 = bitcast i8* %154 to %"class.WTF::Vector.1894"*
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1894"* %156, %"class.WTF::VectorBackedLinkedListNode.1897"* nonnull dereferenceable(16) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #11
  %157 = getelementptr inbounds i8, i8* %153, i64 -4
  %158 = bitcast i8* %157 to i16*
  %159 = load atomic i16, i16* %158 monotonic, align 2
  %160 = or i16 %159, 1
  store atomic i16 %160, i16* %158 release, align 2
  %161 = ptrtoint i8* %153 to i64
  %162 = bitcast %"class.blink::Member.1883"* %148 to i64*
  store atomic i64 %161, i64* %162 monotonic, align 8
  %163 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %164 = icmp eq i32 %163, 0
  %165 = bitcast i8* %153 to %"class.blink::HeapLinkedHashSet.1885"*
  br i1 %164, label %169, label %166

166:                                              ; preds = %152
  %167 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %153) #11
  %168 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %149, align 8
  br label %169

169:                                              ; preds = %147, %152, %166
  %170 = phi %"class.blink::HeapLinkedHashSet.1885"* [ %150, %147 ], [ %168, %166 ], [ %165, %152 ]
  %171 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %144, align 8
  %172 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %171, i64 0, i32 0, i32 1, i32 0
  %173 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %172, i32 0) #11, !noalias !18
  %174 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %173, i64 0, i32 1
  %175 = load i32, i32* %174, align 4, !noalias !18
  %176 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %172, i32 %175) #11, !noalias !18
  %177 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %144, align 8
  %178 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %177, i64 0, i32 0, i32 1, i32 0
  %179 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %178, i32 0) #11, !noalias !21
  %180 = icmp eq %"class.WTF::VectorBackedLinkedListNode.1897"* %176, %179
  br i1 %180, label %223, label %181

181:                                              ; preds = %169
  %182 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %170, i64 0, i32 0
  %183 = bitcast %"class.blink::Node"** %5 to i8*
  %184 = bitcast %"class.blink::Node"** %5 to i64*
  %185 = bitcast %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %4 to i8*
  %186 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %170, i64 0, i32 0, i32 1
  %187 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %186, i64 0, i32 0
  %188 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %4, i64 0, i32 0, i32 0
  %189 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %4, i64 0, i32 0, i32 1
  %190 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %170, i64 0, i32 0, i32 0, i32 0, i32 2
  %191 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %170, i64 0, i32 0, i32 0, i32 0, i32 0
  %192 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.1885", %"class.blink::HeapLinkedHashSet.1885"* %170, i64 0, i32 0, i32 0, i32 0, i32 1
  %193 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %4, i64 0, i32 1, i32 0, i32 0
  %194 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %4, i64 0, i32 1, i32 0, i32 1
  br label %195

195:                                              ; preds = %181, %216
  %196 = phi %"class.WTF::VectorBackedLinkedListNode.1897"* [ %176, %181 ], [ %221, %216 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #11
  %197 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %196, i64 0, i32 2, i32 0, i32 0
  %198 = bitcast %"class.blink::Node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  store i64 %199, i64* %184, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %185)
  %200 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %187, i32 0) #11, !noalias !24
  store %"class.WTF::VectorBackedLinkedListNode.1897"* %200, %"class.WTF::VectorBackedLinkedListNode.1897"** %188, align 8, !alias.scope !24
  store %"class.WTF::VectorBackedLinkedList.1893"* %186, %"class.WTF::VectorBackedLinkedList.1893"** %189, align 8, !alias.scope !24
  %201 = load i32, i32* %190, align 4, !noalias !27
  %202 = icmp eq i32 %201, 0
  %203 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %191, align 8, !noalias !27
  %204 = load i32, i32* %192, align 8, !noalias !27
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %203, i64 %205
  br i1 %202, label %216, label %207

207:                                              ; preds = %195
  %208 = icmp eq i32 %204, 0
  br i1 %208, label %216, label %209

209:                                              ; preds = %207, %213
  %210 = phi %"struct.WTF::KeyValuePair.1892"* [ %214, %213 ], [ %203, %207 ]
  %211 = bitcast %"struct.WTF::KeyValuePair.1892"* %210 to i64*
  %212 = load i64, i64* %211, align 8, !noalias !27
  switch i64 %212, label %216 [
    i64 -1, label %213
    i64 0, label %213
  ]

213:                                              ; preds = %209, %209
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %210, i64 1
  %215 = icmp eq %"struct.WTF::KeyValuePair.1892"* %214, %206
  br i1 %215, label %216, label %209

216:                                              ; preds = %209, %213, %195, %207
  %217 = phi %"struct.WTF::KeyValuePair.1892"* [ %206, %195 ], [ %203, %207 ], [ %210, %209 ], [ %206, %213 ]
  store %"struct.WTF::KeyValuePair.1892"* %217, %"struct.WTF::KeyValuePair.1892"** %193, align 8, !alias.scope !27
  store %"struct.WTF::KeyValuePair.1892"* %206, %"struct.WTF::KeyValuePair.1892"** %194, align 8, !alias.scope !27
  %218 = call { %"class.blink::Member.318"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet.1888"* %182, %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8 %4, %"class.blink::Node"** nonnull dereferenceable(8) %5, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #11
  %219 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %196, i64 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %172, i32 %220) #11
  %222 = icmp eq %"class.WTF::VectorBackedLinkedListNode.1897"* %221, %179
  br i1 %222, label %223, label %195

223:                                              ; preds = %216, %169, %143
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.blink::HeapLinkedHashSet.1885"* @_ZNK5blink13HitTestResult19ListBasedTestResultEv(%"class.blink::HitTestResult"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::VectorBackedLinkedListNode.1897", align 8
  %3 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %0, i64 0, i32 11
  %4 = getelementptr inbounds %"class.blink::Member.1883", %"class.blink::Member.1883"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %4, align 8
  %6 = icmp eq %"class.blink::HeapLinkedHashSet.1885"* %5, null
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS5_EEEEEEPhm(i64 48) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #11
  %9 = getelementptr inbounds i8, i8* %8, i64 24
  %10 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #11
  %11 = bitcast i8* %9 to %"class.WTF::Vector.1894"*
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1894"* %11, %"class.WTF::VectorBackedLinkedListNode.1897"* nonnull dereferenceable(16) %2) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  %12 = getelementptr inbounds i8, i8* %8, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = ptrtoint i8* %8 to i64
  %17 = bitcast %"class.blink::Member.1883"* %3 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  %20 = bitcast i8* %8 to %"class.blink::HeapLinkedHashSet.1885"*
  br i1 %19, label %24, label %21

21:                                               ; preds = %7
  %22 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %8) #11
  %23 = load %"class.blink::HeapLinkedHashSet.1885"*, %"class.blink::HeapLinkedHashSet.1885"** %4, align 8
  br label %24

24:                                               ; preds = %1, %21, %7
  %25 = phi %"class.blink::HeapLinkedHashSet.1885"* [ %5, %1 ], [ %23, %21 ], [ %20, %7 ]
  ret %"class.blink::HeapLinkedHashSet.1885"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13HitTestResult20ResolveRectBasedTestEPNS_4NodeERKNS_14PhysicalOffsetE(%"class.blink::HitTestLocation"* noalias sret, %"class.blink::HitTestResult"*, %"class.blink::Node"* nocapture readonly, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::PhysicalOffset"*
  %7 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 6
  %8 = bitcast %"struct.blink::PhysicalOffset"* %3 to i64*
  %9 = bitcast %"struct.blink::PhysicalOffset"* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 5
  %12 = bitcast %"class.blink::Member.318"* %11 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 2
  %14 = bitcast %"class.blink::Member.318"* %13 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 4
  %16 = bitcast %"class.blink::Member.343"* %15 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  %17 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 11
  %18 = bitcast %"class.blink::Member.1883"* %17 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 6, i32 0, i32 0
  br i1 %22, label %28, label %24

24:                                               ; preds = %4
  %25 = bitcast %"class.blink::NodeData"** %23 to %"class.blink::NodeRareData"**
  %26 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %26, i64 0, i32 1, i32 0, i32 0
  br label %30

28:                                               ; preds = %4
  %29 = bitcast %"class.blink::NodeData"** %23 to %"class.blink::NodeRenderingData"**
  br label %30

30:                                               ; preds = %24, %28
  %31 = phi %"class.blink::NodeRenderingData"** [ %27, %24 ], [ %29, %28 ]
  %32 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %32, i64 0, i32 1
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = icmp eq %"class.blink::LayoutObject"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %30
  %37 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  %38 = bitcast %"class.blink::LayoutObject"* %34 to void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)***
  store i64 0, i64* %5, align 8
  %39 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %39, i64 62
  %41 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %40, align 8
  call void %41(%"class.blink::LayoutObject"* nonnull %34, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  br label %42

42:                                               ; preds = %30, %36
  call void @_ZN5blink15HitTestLocationC1ERKNS_14PhysicalOffsetE(%"class.blink::HitTestLocation"* %0, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3) #11
  ret void
}

declare void @_ZN5blink15HitTestLocationC1ERKNS_14PhysicalOffsetE(%"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #4

declare %"class.blink::HTMLImageElement"* @_ZNK5blink15HTMLAreaElement12ImageElementEv(%"class.blink::HTMLAreaElement"*) local_unnamed_addr #4

declare %"class.blink::HTMLImageElement"* @_ZN5blink14HTMLMapElement12ImageElementEv(%"class.blink::HTMLMapElement"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

declare zeroext i1 @_ZNK5blink18DisplayLockContext19ShouldPaintChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #4

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #4

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #4

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #4

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #4

declare { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3035"*, %"struct.blink::Region::Span"*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast %"struct.blink::Region::Span"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.3030"*, i32*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS5_EEEEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapLinkedHashSetINS1_6MemberINS1_4NodeEEENS_10HashTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #10 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #4

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #11
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %17

17:                                               ; preds = %11, %2
  %18 = getelementptr inbounds i8, i8* %1, i64 24
  %19 = bitcast i8* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp eq i64 %20, 0
  %22 = bitcast i8* %18 to i8**
  %23 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, i64 11
  %25 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %0, i8** %22) #11
  br i1 %21, label %32, label %26

26:                                               ; preds = %17
  %27 = inttoptr i64 %20 to i8*
  %28 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %29, i64 5
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, align 8
  tail call void %31(%"class.blink::Visitor"* %0, i8* nonnull %27, i8* nonnull %27, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %32

32:                                               ; preds = %17, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapLinkedHashSetINS_6MemberINS_4NodeEEEN3WTF10HashTraitsIS4_EEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.1892"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.1892"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.WTF::VectorBackedLinkedListNode.1897"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %3, i64 %28, i32 2
  %30 = bitcast %"class.blink::Member.318"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEEC2ERKS8_(%"class.WTF::LinkedHashSet.1888"*, %"class.WTF::LinkedHashSet.1888"* dereferenceable(48)) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::LinkedHashSet.1888", %"class.WTF::LinkedHashSet.1888"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::LinkedHashSet.1888", %"class.WTF::LinkedHashSet.1888"* %1, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast %"class.WTF::LinkedHashSet.1888"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #11
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %44, label %8

8:                                                ; preds = %2
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1890"* %3, i32 %6) #11
  %9 = load i32, i32* %4, align 4
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::LinkedHashSet.1888", %"class.WTF::LinkedHashSet.1888"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::LinkedHashSet.1888", %"class.WTF::LinkedHashSet.1888"* %1, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %12, i64 %15
  br i1 %10, label %44, label %17

17:                                               ; preds = %8
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %17, %23
  %20 = phi %"struct.WTF::KeyValuePair.1892"* [ %24, %23 ], [ %12, %17 ]
  %21 = bitcast %"struct.WTF::KeyValuePair.1892"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  switch i64 %22, label %26 [
    i64 -1, label %23
    i64 0, label %23
  ]

23:                                               ; preds = %19, %19
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %20, i64 1
  %25 = icmp eq %"struct.WTF::KeyValuePair.1892"* %24, %16
  br i1 %25, label %44, label %19

26:                                               ; preds = %19, %17
  %27 = phi %"struct.WTF::KeyValuePair.1892"* [ %12, %17 ], [ %20, %19 ]
  %28 = icmp eq %"struct.WTF::KeyValuePair.1892"* %27, %16
  br i1 %28, label %44, label %29

29:                                               ; preds = %26, %42
  %30 = phi %"struct.WTF::KeyValuePair.1892"* [ %36, %42 ], [ %27, %26 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %30, i64 0, i32 0
  %32 = tail call { %"struct.WTF::KeyValuePair.1892"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS4_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.1890"* %3, %"class.blink::Member.318"* dereferenceable(8) %31, %"struct.WTF::KeyValuePair.1892"* dereferenceable(16) %30) #11
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %30, i64 1
  %34 = icmp eq %"struct.WTF::KeyValuePair.1892"* %33, %16
  br i1 %34, label %44, label %35

35:                                               ; preds = %29, %39
  %36 = phi %"struct.WTF::KeyValuePair.1892"* [ %40, %39 ], [ %33, %29 ]
  %37 = bitcast %"struct.WTF::KeyValuePair.1892"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  switch i64 %38, label %42 [
    i64 -1, label %39
    i64 0, label %39
  ]

39:                                               ; preds = %35, %35
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %36, i64 1
  %41 = icmp eq %"struct.WTF::KeyValuePair.1892"* %40, %16
  br i1 %41, label %44, label %35

42:                                               ; preds = %35
  %43 = icmp eq %"struct.WTF::KeyValuePair.1892"* %36, %16
  br i1 %43, label %44, label %29

44:                                               ; preds = %23, %29, %42, %39, %2, %8, %26
  %45 = getelementptr inbounds %"class.WTF::LinkedHashSet.1888", %"class.WTF::LinkedHashSet.1888"* %0, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.WTF::LinkedHashSet.1888", %"class.WTF::LinkedHashSet.1888"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_EC2ERKS8_(%"class.WTF::Vector.1894"* %45, %"class.WTF::Vector.1894"* dereferenceable(16) %46) #11
  %47 = getelementptr inbounds %"class.WTF::LinkedHashSet.1888", %"class.WTF::LinkedHashSet.1888"* %0, i64 0, i32 1, i32 1
  %48 = getelementptr inbounds %"class.WTF::LinkedHashSet.1888", %"class.WTF::LinkedHashSet.1888"* %1, i64 0, i32 1, i32 1
  %49 = bitcast i32* %48 to i64*
  %50 = bitcast i32* %47 to i64*
  %51 = load i64, i64* %49, align 8
  store i64 %51, i64* %50, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1890"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %10, %6 ], [ %1, %2 ]
  %8 = phi i32 [ %9, %6 ], [ %1, %2 ]
  %9 = or i32 %8, %7
  %10 = lshr i32 %7, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %6

12:                                               ; preds = %6
  %13 = shl i32 %9, 1
  %14 = add i32 %13, 2
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 %14, i32 8
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ 8, %2 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %18, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = icmp slt i32 %18, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0)) #11
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  %27 = load i32, i32* %19, align 8
  br label %28

28:                                               ; preds = %22, %24
  %29 = phi i32 [ %20, %22 ], [ %27, %24 ]
  %30 = icmp ult i32 %29, %18
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 -86, i8* %3, align 1
  %32 = call %"struct.WTF::KeyValuePair.1892"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.1890"* %0, i32 %18, %"struct.WTF::KeyValuePair.1892"* null, i8* nonnull dereferenceable(1) %3) #11
  %33 = load i8, i8* %3, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  br i1 %34, label %35, label %40

35:                                               ; preds = %31, %28
  %36 = zext i32 %18 to i64
  %37 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %36) #11
  %38 = bitcast %"class.blink::HeapHashTableBacking"* %37 to %"struct.WTF::KeyValuePair.1892"*
  %39 = call %"struct.WTF::KeyValuePair.1892"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.1890"* %0, %"struct.WTF::KeyValuePair.1892"* %38, i32 %18, %"struct.WTF::KeyValuePair.1892"* null) #11
  br label %40

40:                                               ; preds = %35, %31, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1892"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.1890"*, i32, %"struct.WTF::KeyValuePair.1892"*, i8* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.1892"* %32, null
  br i1 %33, label %78, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.1892"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %78

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.1892"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %75, %39
  %48 = phi %"struct.WTF::KeyValuePair.1892"* [ null, %39 ], [ %65, %75 ]
  %49 = bitcast %"class.WTF::HashTable.1890"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.1892"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.1892"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.1890"* %0, %"struct.WTF::KeyValuePair.1892"* %42, i32 %1, %"struct.WTF::KeyValuePair.1892"* %48)
  br label %78

58:                                               ; preds = %39, %75
  %59 = phi i64 [ %76, %75 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.1892"* [ %65, %75 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.1892"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.1892"* %64, %"struct.WTF::KeyValuePair.1892"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.1892"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.1892"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.1892"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %61, i64 %59, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %68, %70
  %76 = add nuw nsw i64 %59, 1
  %77 = icmp eq i64 %76, %43
  br i1 %77, label %47, label %58

78:                                               ; preds = %34, %30, %55
  %79 = phi %"struct.WTF::KeyValuePair.1892"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.1892"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1892"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.1890"*, %"struct.WTF::KeyValuePair.1892"*, i32, %"struct.WTF::KeyValuePair.1892"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1890", align 8
  %6 = bitcast %"class.WTF::HashTable.1890"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1890"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1892"* %1, %"struct.WTF::KeyValuePair.1892"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.1892"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.1892"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %19, align 8
  br label %57

21:                                               ; preds = %80
  %22 = bitcast %"class.WTF::HashTable.1890"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %81, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.1892"* [ null, %15 ], [ %83, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.1890"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #11
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.1890"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.1890"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #11
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #11
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.1892"* %29

57:                                               ; preds = %18, %80
  %58 = phi i32 [ %13, %18 ], [ %81, %80 ]
  %59 = phi %"struct.WTF::KeyValuePair.1892"* [ %20, %18 ], [ %82, %80 ]
  %60 = phi %"struct.WTF::KeyValuePair.1892"* [ null, %18 ], [ %83, %80 ]
  %61 = phi i32 [ 0, %18 ], [ %84, %80 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.1892"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %80
    i64 0, label %80
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.1892"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.1890"* nonnull %5, %"class.blink::Member.318"* dereferenceable(8) %67) #11
  %69 = extractvalue { %"struct.WTF::KeyValuePair.1892"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.1892"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %59, i64 %62, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %19, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %75, i64 %62
  %77 = icmp eq %"struct.WTF::KeyValuePair.1892"* %76, %3
  %78 = select i1 %77, %"struct.WTF::KeyValuePair.1892"* %69, %"struct.WTF::KeyValuePair.1892"* %60
  %79 = load i32, i32* %12, align 8
  br label %80

80:                                               ; preds = %57, %57, %66
  %81 = phi i32 [ %58, %57 ], [ %79, %66 ], [ %58, %57 ]
  %82 = phi %"struct.WTF::KeyValuePair.1892"* [ %59, %57 ], [ %75, %66 ], [ %59, %57 ]
  %83 = phi %"struct.WTF::KeyValuePair.1892"* [ %60, %57 ], [ %78, %66 ], [ %60, %57 ]
  %84 = add i32 %61, 1
  %85 = icmp eq i32 %84, %81
  br i1 %85, label %21, label %57
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.9, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([413 x i8], [413 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1892"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.1890"*, %"class.blink::Member.318"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member.318"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.1892"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Node"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.1892"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.1892"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.1892"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.1892"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1892"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Node"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Node"* %63, inttoptr (i64 -1 to %"class.blink::Node"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.1892"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.1892"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.1892"*, i8 } undef, %"struct.WTF::KeyValuePair.1892"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.1892"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.1892"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #4

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1892"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKS4_RKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.1890"*, %"class.blink::Member.318"* dereferenceable(8), %"struct.WTF::KeyValuePair.1892"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1892"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1892"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1890"* %0, %"struct.WTF::KeyValuePair.1892"* null)
  %9 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1892"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Member.318"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.1892"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.1892"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %147, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.1892"* %60, %"struct.WTF::KeyValuePair.1892"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.1892"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.1892"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"struct.WTF::KeyValuePair.1892"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = bitcast %"struct.WTF::KeyValuePair.1892"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.1892"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = inttoptr i64 %89 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #11
  br label %96

96:                                               ; preds = %86, %93
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %2, i64 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %87, i64 0, i32 1
  store i32 %98, i32* %99, align 8
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %135, label %102

102:                                              ; preds = %96
  %103 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %104 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %103, i64 0, i32 1
  %105 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %104) #11
  %106 = icmp eq i8* %105, null
  br i1 %106, label %107, label %109, !prof !3

107:                                              ; preds = %102
  %108 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %104, i8* %108) #11
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i8* [ %108, %107 ], [ %105, %102 ]
  %111 = bitcast i8* %110 to %"class.blink::ThreadState"**
  %112 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 9
  %114 = load i8, i8* %113, align 1, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %135, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 13
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %120, align 8
  %122 = load atomic i64, i64* %90 monotonic, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %121, i64 0, i32 0, i32 0
  %126 = inttoptr i64 %122 to i8*
  %127 = bitcast %"class.blink::MarkingVisitor"* %121 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, i64 5
  %130 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %129, align 8
  tail call void %130(%"class.blink::Visitor"* %125, i8* nonnull %126, i8* %126, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  %131 = load i64, i64* %117, align 8
  br label %132

132:                                              ; preds = %124, %116
  %133 = phi i64 [ %119, %116 ], [ %131, %124 ]
  %134 = add i64 %133, -1
  store i64 %134, i64* %117, align 8
  br label %135

135:                                              ; preds = %96, %109, %132
  %136 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, %138
  %142 = shl i32 %141, 1
  %143 = load i32, i32* %12, align 8
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %135
  %146 = tail call %"struct.WTF::KeyValuePair.1892"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1890"* %0, %"struct.WTF::KeyValuePair.1892"* %87)
  br label %147

147:                                              ; preds = %58, %135, %145
  %148 = phi i8 [ 1, %135 ], [ 1, %145 ], [ 0, %58 ]
  %149 = phi %"struct.WTF::KeyValuePair.1892"* [ %87, %135 ], [ %146, %145 ], [ %60, %58 ]
  %150 = insertvalue { %"struct.WTF::KeyValuePair.1892"*, i8 } undef, %"struct.WTF::KeyValuePair.1892"* %149, 0
  %151 = insertvalue { %"struct.WTF::KeyValuePair.1892"*, i8 } %150, i8 %148, 1
  ret { %"struct.WTF::KeyValuePair.1892"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1892"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1890"*, %"struct.WTF::KeyValuePair.1892"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.1892"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.1890"* %0, i32 %35, %"struct.WTF::KeyValuePair.1892"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.1892"*
  %44 = call %"struct.WTF::KeyValuePair.1892"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.1890"* %0, %"struct.WTF::KeyValuePair.1892"* %43, i32 %40, %"struct.WTF::KeyValuePair.1892"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.1892"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.1892"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_EC2ERKS8_(%"class.WTF::Vector.1894"*, %"class.WTF::Vector.1894"* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode.1897"* null, %"class.WTF::VectorBackedLinkedListNode.1897"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEES0_EEEEmm(i64 %9) #11
  %11 = lshr i64 %10, 4
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %11) #11
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.1894"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.WTF::VectorBackedLinkedListNode.1897"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #11
  %22 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.WTF::VectorBackedLinkedListNode.1897"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %28, align 8
  %30 = icmp ne %"class.WTF::VectorBackedLinkedListNode.1897"* %24, null
  %31 = icmp ne %"class.WTF::VectorBackedLinkedListNode.1897"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %39, !prof !17

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %24 to i8*
  %37 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 4
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #11
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEES0_EENS2_12VectorTraitsIS7_EEEEvPT_m(%"class.WTF::VectorBackedLinkedListNode.1897"* nonnull %24, i64 %35) #11
  br label %39

39:                                               ; preds = %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEES0_EEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.13, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([259 x i8], [259 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS_26VectorBackedLinkedListNodeINS1_6MemberINS1_4NodeEEENS1_13HeapAllocatorEEENS_12VectorTraitsIS8_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator16NotifyNewObjectsIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEES0_EENS2_12VectorTraitsIS7_EEEEvPT_m(%"class.WTF::VectorBackedLinkedListNode.1897"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %0 to i8*
  %4 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %51, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %6, %11
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 9
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %51, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 13
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %1, 0
  br i1 %24, label %48, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %43, %25
  %28 = phi i8* [ %3, %25 ], [ %44, %43 ]
  %29 = phi i64 [ %1, %25 ], [ %30, %43 ]
  %30 = add i64 %29, -1
  %31 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %26, align 8
  %32 = getelementptr inbounds i8, i8* %28, i64 8
  %33 = bitcast i8* %32 to i64*
  %34 = load atomic i64, i64* %33 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %31, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to i8*
  %39 = bitcast %"class.blink::MarkingVisitor"* %31 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %37, i8* nonnull %38, i8* %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %43

43:                                               ; preds = %27, %36
  %44 = getelementptr inbounds i8, i8* %28, i64 16
  %45 = icmp eq i64 %30, 0
  br i1 %45, label %46, label %27

46:                                               ; preds = %43
  %47 = load i64, i64* %21, align 8
  br label %48

48:                                               ; preds = %46, %20
  %49 = phi i64 [ %47, %46 ], [ %23, %20 ]
  %50 = add i64 %49, -1
  store i64 %50, i64* %21, align 8
  br label %51

51:                                               ; preds = %2, %13, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9ScrollbarEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Scrollbar"*
  %4 = bitcast i8* %1 to void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)**, void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)*, void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)** %5, i64 14
  %7 = load void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)*, void (%"class.blink::Scrollbar"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Scrollbar"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.318"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet.1888"*, %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8, %"class.blink::Node"** dereferenceable(8), i32) local_unnamed_addr #1 comdat align 2 {
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 14
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet.1888", %"class.WTF::LinkedHashSet.1888"* %0, i64 0, i32 0, i32 0
  %19 = tail call { %"struct.WTF::KeyValuePair.1892"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.1890"* %18, %"class.blink::Node"** dereferenceable(8) %2, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #11
  %20 = extractvalue { %"struct.WTF::KeyValuePair.1892"*, i8 } %19, 0
  %21 = extractvalue { %"struct.WTF::KeyValuePair.1892"*, i8 } %19, 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.WTF::LinkedHashSet.1888", %"class.WTF::LinkedHashSet.1888"* %0, i64 0, i32 1
  br i1 %23, label %41, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %29 = load %"class.WTF::VectorBackedLinkedList.1893"*, %"class.WTF::VectorBackedLinkedList.1893"** %28, align 8
  %30 = tail call { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList.1893"* %24, %"class.WTF::VectorBackedLinkedListNode.1897"* %27, %"class.WTF::VectorBackedLinkedList.1893"* %29, %"class.blink::Node"** dereferenceable(8) %2)
  %31 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } %30, 0
  %32 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } %30, 1
  %33 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %31 to i64
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %32, i64 0, i32 0
  %35 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %34, i32 0) #11
  %36 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %35 to i64
  %37 = sub i64 %33, %36
  %38 = lshr exact i64 %37, 4
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %20, i64 0, i32 1
  store i32 %39, i32* %40, align 8
  br label %54

41:                                               ; preds = %11
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %20, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %24, i64 0, i32 0
  %45 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %44, i32 %43) #11
  %46 = icmp eq i32 %3, 1
  br i1 %46, label %54, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %51 = load %"class.WTF::VectorBackedLinkedList.1893"*, %"class.WTF::VectorBackedLinkedList.1893"** %50, align 8
  %52 = tail call { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList.1893"* %24, %"class.WTF::VectorBackedLinkedListNode.1897"* %45, %"class.WTF::VectorBackedLinkedList.1893"* %24, %"class.WTF::VectorBackedLinkedListNode.1897"* %49, %"class.WTF::VectorBackedLinkedList.1893"* %51)
  %53 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } %52, 0
  br label %54

54:                                               ; preds = %41, %47, %25
  %55 = phi %"class.WTF::VectorBackedLinkedListNode.1897"* [ %53, %47 ], [ %31, %25 ], [ %45, %41 ]
  %56 = phi i8 [ 0, %47 ], [ 1, %25 ], [ 0, %41 ]
  %57 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %55, i64 0, i32 2
  %58 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %59 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %58, i64 0, i32 1
  %60 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %59) #11
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64, !prof !3

62:                                               ; preds = %54
  %63 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %59, i8* %63) #11
  br label %64

64:                                               ; preds = %54, %62
  %65 = phi i8* [ %63, %62 ], [ %60, %54 ]
  %66 = bitcast i8* %65 to %"class.blink::ThreadState"**
  %67 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 14
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = insertvalue { %"class.blink::Member.318"*, i8 } undef, %"class.blink::Member.318"* %57, 0
  %72 = insertvalue { %"class.blink::Member.318"*, i8 } %71, i8 %56, 1
  ret { %"class.blink::Member.318"*, i8 } %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList.1893"*, %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode.1897", align 8
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %7, i32 0) #11
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %13, i32 %12) #11
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %84

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #11
  %24 = bitcast %"class.blink::Node"** %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %5, i64 0, i32 0
  store i32 %16, i32* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %5, i64 0, i32 1
  store i32 %12, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %5, i64 0, i32 2
  %29 = bitcast %"class.blink::Member.318"* %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %22, %31
  br i1 %32, label %82, label %33, !prof !3

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %34, align 8
  %36 = zext i32 %22 to i64
  %37 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %35, i64 %36
  %38 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %37 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %35, i64 %36, i32 2
  %42 = load i64, i64* %29, align 8
  %43 = bitcast %"class.blink::Member.318"* %41 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %79, label %46

46:                                               ; preds = %33
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #11
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !3

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #11
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 9
  %58 = load i8, i8* %57, align 1, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %79, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 13
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %64, align 8
  %66 = load atomic i64, i64* %43 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %65, i64 0, i32 0, i32 0
  %70 = inttoptr i64 %66 to i8*
  %71 = bitcast %"class.blink::MarkingVisitor"* %65 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, i64 5
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, align 8
  tail call void %74(%"class.blink::Visitor"* %69, i8* nonnull %70, i8* nonnull %70, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  %75 = load i64, i64* %61, align 8
  br label %76

76:                                               ; preds = %68, %60
  %77 = phi i64 [ %63, %60 ], [ %75, %68 ]
  %78 = add i64 %77, -1
  store i64 %78, i64* %61, align 8
  br label %79

79:                                               ; preds = %33, %53, %76
  %80 = load i32, i32* %21, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %21, align 4
  br label %83

82:                                               ; preds = %20
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1894"* %13, %"class.WTF::VectorBackedLinkedListNode.1897"* nonnull dereferenceable(16) %5) #11
  br label %83

83:                                               ; preds = %79, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  br label %101

84:                                               ; preds = %4
  %85 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %13, i32 %18) #11
  %86 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %85, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %17, align 8
  %88 = bitcast %"class.blink::Node"** %3 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %85 to i64*
  %91 = shl i64 %10, 28
  %92 = zext i32 %16 to i64
  %93 = or i64 %91, %92
  store i64 %93, i64* %90, align 8
  %94 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %85, i64 0, i32 2
  %95 = bitcast %"class.blink::Member.318"* %94 to i64*
  store atomic i64 %89, i64* %95 monotonic, align 8
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %84
  %99 = inttoptr i64 %89 to i8*
  %100 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %99) #11
  br label %101

101:                                              ; preds = %98, %84, %83
  %102 = phi i32 [ %22, %83 ], [ %18, %84 ], [ %18, %98 ]
  %103 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %13, i32 %16) #11
  %104 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %103, i64 0, i32 1
  store i32 %102, i32* %104, align 4
  %105 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %13, i32 %12) #11
  %106 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %105, i64 0, i32 0
  store i32 %102, i32* %106, align 8
  %107 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %0, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %13, i32 %102) #11
  %111 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } undef, %"class.WTF::VectorBackedLinkedListNode.1897"* %110, 0
  %112 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } %111, %"class.WTF::VectorBackedLinkedList.1893"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList.1893"*, %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"*, %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"*) local_unnamed_addr #1 comdat align 2 {
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %7, i32 0) #11
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = icmp eq %"class.WTF::VectorBackedLinkedListNode.1897"* %1, %3
  %14 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %0, i64 0, i32 0
  %15 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %14, i32 %12) #11
  br i1 %13, label %41, label %16

16:                                               ; preds = %5
  %17 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %3 to i64
  %18 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %4, i64 0, i32 0
  %19 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %18, i32 0) #11
  %20 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %19 to i64
  %21 = sub i64 %17, %20
  %22 = lshr exact i64 %21, 4
  %23 = trunc i64 %22 to i32
  %24 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %14, i32 %23) #11
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %12
  br i1 %27, label %39, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %15, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %15, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %14, i32 %30) #11
  %34 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %14, i32 %32) #11
  %35 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %33, i64 0, i32 1
  store i32 %32, i32* %35, align 4
  %36 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %34, i64 0, i32 0
  store i32 %30, i32* %36, align 8
  %37 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %14, i32 %26) #11
  %38 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %37, i64 0, i32 1
  store i32 %12, i32* %38, align 4
  store i32 %12, i32* %25, align 8
  store i32 %26, i32* %29, align 8
  store i32 %23, i32* %31, align 4
  br label %39

39:                                               ; preds = %16, %28
  %40 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %14, i32 %12) #11
  br label %41

41:                                               ; preds = %39, %5
  %42 = phi %"class.WTF::VectorBackedLinkedListNode.1897"* [ %15, %5 ], [ %40, %39 ]
  %43 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } undef, %"class.WTF::VectorBackedLinkedListNode.1897"* %42, 0
  %44 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } %43, %"class.WTF::VectorBackedLinkedList.1893"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1892"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.1890"*, %"class.blink::Node"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1892"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1892"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1890"* %0, %"struct.WTF::KeyValuePair.1892"* null)
  %9 = load %"struct.WTF::KeyValuePair.1892"*, %"struct.WTF::KeyValuePair.1892"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1892"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Node"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.1892"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.1892"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %147, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.1892"* %60, %"struct.WTF::KeyValuePair.1892"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.1892"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.1892"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::Node"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.1892"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::Node"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.1892"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::Node"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #11
  br label %97

97:                                               ; preds = %87, %94
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %89, i64 0, i32 1
  %99 = load i32, i32* %2, align 4
  store i32 %99, i32* %98, align 4
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %135, label %102

102:                                              ; preds = %97
  %103 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %104 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %103, i64 0, i32 1
  %105 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %104) #11
  %106 = icmp eq i8* %105, null
  br i1 %106, label %107, label %109, !prof !3

107:                                              ; preds = %102
  %108 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %104, i8* %108) #11
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i8* [ %108, %107 ], [ %105, %102 ]
  %111 = bitcast i8* %110 to %"class.blink::ThreadState"**
  %112 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 9
  %114 = load i8, i8* %113, align 1, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %135, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 13
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %120, align 8
  %122 = load atomic i64, i64* %91 monotonic, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %121, i64 0, i32 0, i32 0
  %126 = inttoptr i64 %122 to i8*
  %127 = bitcast %"class.blink::MarkingVisitor"* %121 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, i64 5
  %130 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %129, align 8
  tail call void %130(%"class.blink::Visitor"* %125, i8* nonnull %126, i8* %126, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  %131 = load i64, i64* %117, align 8
  br label %132

132:                                              ; preds = %124, %116
  %133 = phi i64 [ %119, %116 ], [ %131, %124 ]
  %134 = add i64 %133, -1
  store i64 %134, i64* %117, align 8
  br label %135

135:                                              ; preds = %97, %109, %132
  %136 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = getelementptr inbounds %"class.WTF::HashTable.1890", %"class.WTF::HashTable.1890"* %0, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, %138
  %142 = shl i32 %141, 1
  %143 = load i32, i32* %12, align 8
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %135
  %146 = tail call %"struct.WTF::KeyValuePair.1892"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1890"* %0, %"struct.WTF::KeyValuePair.1892"* %89)
  br label %147

147:                                              ; preds = %58, %135, %145
  %148 = phi i8 [ 1, %135 ], [ 1, %145 ], [ 0, %58 ]
  %149 = phi %"struct.WTF::KeyValuePair.1892"* [ %89, %135 ], [ %146, %145 ], [ %60, %58 ]
  %150 = insertvalue { %"struct.WTF::KeyValuePair.1892"*, i8 } undef, %"struct.WTF::KeyValuePair.1892"* %149, 0
  %151 = insertvalue { %"struct.WTF::KeyValuePair.1892"*, i8 } %150, i8 %148, 1
  ret { %"struct.WTF::KeyValuePair.1892"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode.1897"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF15ConstructTraitsINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEENS_12VectorTraitsIS7_EES6_E25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8*, %"class.WTF::VectorBackedLinkedListNode.1897"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast i8* %0 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %1, i64 0, i32 2
  %8 = bitcast %"class.blink::Member.318"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast i8* %6 to i64*
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = bitcast i8* %0 to %"class.WTF::VectorBackedLinkedListNode.1897"*
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #11
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !3

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #11
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 13
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %32, align 8
  %34 = load atomic i64, i64* %10 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %33, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to i8*
  %39 = bitcast %"class.blink::MarkingVisitor"* %33 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %37, i8* nonnull %38, i8* nonnull %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  %43 = load i64, i64* %29, align 8
  br label %44

44:                                               ; preds = %36, %28
  %45 = phi i64 [ %31, %28 ], [ %43, %36 ]
  %46 = add i64 %45, -1
  store i64 %46, i64* %29, align 8
  br label %47

47:                                               ; preds = %2, %21, %44
  ret %"class.WTF::VectorBackedLinkedListNode.1897"* %11
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1894"*, %"class.WTF::VectorBackedLinkedListNode.1897"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode.1897"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode.1897"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.1894"* %0, i32 %22) #11
  %23 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %1 to i64
  %26 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 4
  %29 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.1894"* %0, i32 %37) #11
  %38 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %6, align 8
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.WTF::VectorBackedLinkedListNode.1897"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.WTF::VectorBackedLinkedListNode.1897"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %41, i64 %44
  %46 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %45 to i8*
  %47 = tail call %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF15ConstructTraitsINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEENS_12VectorTraitsIS7_EES6_E25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* %46, %"class.WTF::VectorBackedLinkedListNode.1897"* dereferenceable(16) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.1894"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !17

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %8, align 8
  %10 = icmp eq %"class.WTF::VectorBackedLinkedListNode.1897"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEES0_EEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1894"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %8, align 8
  %26 = icmp eq %"class.WTF::VectorBackedLinkedListNode.1897"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.1894"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.1894"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1894"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1894"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEES0_EEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 4
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_4NodeEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.WTF::VectorBackedLinkedListNode.1897"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !17

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1894"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 4
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.1894"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.1894"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #4

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1894", %"class.WTF::Vector.1894"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode.1897"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.318"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet.1888"*, %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper") align 8, %"class.blink::Node"** dereferenceable(8), i32) local_unnamed_addr #1 comdat align 2 {
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 14
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet.1888", %"class.WTF::LinkedHashSet.1888"* %0, i64 0, i32 0, i32 0
  %19 = tail call { %"struct.WTF::KeyValuePair.1892"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.1890"* %18, %"class.blink::Node"** dereferenceable(8) %2, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #11
  %20 = extractvalue { %"struct.WTF::KeyValuePair.1892"*, i8 } %19, 0
  %21 = extractvalue { %"struct.WTF::KeyValuePair.1892"*, i8 } %19, 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.WTF::LinkedHashSet.1888", %"class.WTF::LinkedHashSet.1888"* %0, i64 0, i32 1
  br i1 %23, label %41, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %29 = load %"class.WTF::VectorBackedLinkedList.1893"*, %"class.WTF::VectorBackedLinkedList.1893"** %28, align 8
  %30 = tail call { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList.1893"* %24, %"class.WTF::VectorBackedLinkedListNode.1897"* %27, %"class.WTF::VectorBackedLinkedList.1893"* %29, %"class.blink::Node"** dereferenceable(8) %2)
  %31 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } %30, 0
  %32 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } %30, 1
  %33 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %31 to i64
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %32, i64 0, i32 0
  %35 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %34, i32 0) #11
  %36 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %35 to i64
  %37 = sub i64 %33, %36
  %38 = lshr exact i64 %37, 4
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %20, i64 0, i32 1
  store i32 %39, i32* %40, align 8
  br label %54

41:                                               ; preds = %11
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.1892", %"struct.WTF::KeyValuePair.1892"* %20, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %24, i64 0, i32 0
  %45 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %44, i32 %43) #11
  %46 = icmp eq i32 %3, 1
  br i1 %46, label %54, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %51 = load %"class.WTF::VectorBackedLinkedList.1893"*, %"class.WTF::VectorBackedLinkedList.1893"** %50, align 8
  %52 = tail call { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList.1893"* %24, %"class.WTF::VectorBackedLinkedListNode.1897"* %45, %"class.WTF::VectorBackedLinkedList.1893"* %24, %"class.WTF::VectorBackedLinkedListNode.1897"* %49, %"class.WTF::VectorBackedLinkedList.1893"* %51)
  %53 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } %52, 0
  br label %54

54:                                               ; preds = %41, %47, %25
  %55 = phi %"class.WTF::VectorBackedLinkedListNode.1897"* [ %53, %47 ], [ %31, %25 ], [ %45, %41 ]
  %56 = phi i8 [ 0, %47 ], [ 1, %25 ], [ 0, %41 ]
  %57 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %55, i64 0, i32 2
  %58 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %59 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %58, i64 0, i32 1
  %60 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %59) #11
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64, !prof !3

62:                                               ; preds = %54
  %63 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %59, i8* %63) #11
  br label %64

64:                                               ; preds = %54, %62
  %65 = phi i8* [ %63, %62 ], [ %60, %54 ]
  %66 = bitcast i8* %65 to %"class.blink::ThreadState"**
  %67 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 14
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = insertvalue { %"class.blink::Member.318"*, i8 } undef, %"class.blink::Member.318"* %57, 0
  %72 = insertvalue { %"class.blink::Member.318"*, i8 } %71, i8 %56, 1
  ret { %"class.blink::Member.318"*, i8 } %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_4NodeEEENS1_13HeapAllocatorEE6insertIPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList.1893"*, %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode.1897", align 8
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %7, i32 0) #11
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.1897"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %13, i32 %12) #11
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %84

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #11
  %24 = bitcast %"class.blink::Node"** %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %5, i64 0, i32 0
  store i32 %16, i32* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %5, i64 0, i32 1
  store i32 %12, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %5, i64 0, i32 2
  %29 = bitcast %"class.blink::Member.318"* %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %22, %31
  br i1 %32, label %82, label %33, !prof !3

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedListNode.1897"** %34, align 8
  %36 = zext i32 %22 to i64
  %37 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %35, i64 %36
  %38 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %37 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %35, i64 %36, i32 2
  %42 = load i64, i64* %29, align 8
  %43 = bitcast %"class.blink::Member.318"* %41 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %79, label %46

46:                                               ; preds = %33
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #11
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !3

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #11
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 9
  %58 = load i8, i8* %57, align 1, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %79, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 13
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %64, align 8
  %66 = load atomic i64, i64* %43 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %65, i64 0, i32 0, i32 0
  %70 = inttoptr i64 %66 to i8*
  %71 = bitcast %"class.blink::MarkingVisitor"* %65 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, i64 5
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, align 8
  tail call void %74(%"class.blink::Visitor"* %69, i8* nonnull %70, i8* nonnull %70, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  %75 = load i64, i64* %61, align 8
  br label %76

76:                                               ; preds = %68, %60
  %77 = phi i64 [ %63, %60 ], [ %75, %68 ]
  %78 = add i64 %77, -1
  store i64 %78, i64* %61, align 8
  br label %79

79:                                               ; preds = %33, %53, %76
  %80 = load i32, i32* %21, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %21, align 4
  br label %83

82:                                               ; preds = %20
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1894"* %13, %"class.WTF::VectorBackedLinkedListNode.1897"* nonnull dereferenceable(16) %5) #11
  br label %83

83:                                               ; preds = %79, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  br label %101

84:                                               ; preds = %4
  %85 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %13, i32 %18) #11
  %86 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %85, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %17, align 8
  %88 = bitcast %"class.blink::Node"** %3 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::VectorBackedLinkedListNode.1897"* %85 to i64*
  %91 = shl i64 %10, 28
  %92 = zext i32 %16 to i64
  %93 = or i64 %91, %92
  store i64 %93, i64* %90, align 8
  %94 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %85, i64 0, i32 2
  %95 = bitcast %"class.blink::Member.318"* %94 to i64*
  store atomic i64 %89, i64* %95 monotonic, align 8
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %84
  %99 = inttoptr i64 %89 to i8*
  %100 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %99) #11
  br label %101

101:                                              ; preds = %98, %84, %83
  %102 = phi i32 [ %22, %83 ], [ %18, %84 ], [ %18, %98 ]
  %103 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %13, i32 %16) #11
  %104 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %103, i64 0, i32 1
  store i32 %102, i32* %104, align 4
  %105 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %13, i32 %12) #11
  %106 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.1897", %"class.WTF::VectorBackedLinkedListNode.1897"* %105, i64 0, i32 0
  store i32 %102, i32* %106, align 8
  %107 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.1893", %"class.WTF::VectorBackedLinkedList.1893"* %0, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.1897"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1894"* %13, i32 %102) #11
  %111 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } undef, %"class.WTF::VectorBackedLinkedListNode.1897"* %110, 0
  %112 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } %111, %"class.WTF::VectorBackedLinkedList.1893"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode.1897"*, %"class.WTF::VectorBackedLinkedList.1893"* } %112
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 4001}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!10 = distinct !{!10, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!14 = !{!15, !12}
!15 = distinct !{!15, !16, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!16 = distinct !{!16, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!17 = !{!"branch_weights", i32 2000, i32 1}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv: argument 0"}
!20 = distinct !{!20, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!23 = distinct !{!23, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!27 = !{!28, !25}
!28 = distinct !{!28, !29, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!29 = distinct !{!29, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
