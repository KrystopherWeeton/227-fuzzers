; ModuleID = '../../third_party/brotli/enc/block_splitter.c'
source_filename = "../../third_party/brotli/enc/block_splitter.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.BlockSplit = type { i64, i64, i8*, i32*, i64, i64 }
%struct.MemoryManager = type { i8* (i8*, i64)*, void (i8*, i8*)*, i8* }
%struct.Command = type { i32, i32, i32, i16, i16 }
%struct.BrotliEncoderParams = type { i32, i32, i32, i32, i64, i64, i32, i32, %struct.BrotliHasherParams, %struct.BrotliDistanceParams, %struct.BrotliEncoderDictionary }
%struct.BrotliHasherParams = type { i32, i32, i32, i32, i32 }
%struct.BrotliDistanceParams = type { i32, i32, i32, i32, i64 }
%struct.BrotliEncoderDictionary = type { %struct.BrotliDictionary*, i32, i32, i64, i16*, i8*, i16*, %struct.DictWord* }
%struct.BrotliDictionary = type { [32 x i8], [32 x i32], i64, i8* }
%struct.DictWord = type { i8, i8, i16 }
%struct.HistogramCommand = type { [704 x i32], i64, double }
%struct.HistogramLiteral = type { [256 x i32], i64, double }
%struct.HistogramDistance = type { [544 x i32], i64, double }
%struct.HistogramPair = type { i32, i32, double, double }

@kBrotliLog2Table = external hidden local_unnamed_addr constant [256 x double], align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @BrotliInitBlockSplit(%struct.BlockSplit* nocapture) local_unnamed_addr #0 {
  %2 = bitcast %struct.BlockSplit* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @BrotliDestroyBlockSplit(%struct.MemoryManager*, %struct.BlockSplit* nocapture) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %1, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %4) #5
  store i8* null, i8** %3, align 8
  %5 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %1, i64 0, i32 3
  %6 = bitcast i32** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %7) #5
  store i32* null, i32** %5, align 8
  ret void
}

declare hidden void @BrotliFree(%struct.MemoryManager*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @BrotliSplitBlock(%struct.MemoryManager*, %struct.Command* nocapture readonly, i64, i8* nocapture readonly, i64, i64, %struct.BrotliEncoderParams* nocapture readonly, %struct.BlockSplit*, %struct.BlockSplit*, %struct.BlockSplit*) local_unnamed_addr #1 {
  %11 = alloca %struct.HistogramCommand, align 8
  %12 = alloca %struct.HistogramCommand, align 8
  %13 = alloca %struct.HistogramLiteral, align 8
  %14 = alloca %struct.HistogramLiteral, align 8
  %15 = alloca %struct.HistogramDistance, align 8
  %16 = alloca [64 x i32], align 16
  %17 = alloca [64 x i32], align 16
  %18 = alloca [64 x i32], align 16
  %19 = alloca [64 x i32], align 16
  %20 = alloca %struct.HistogramDistance, align 8
  %21 = icmp eq i64 %2, 0
  br i1 %21, label %120, label %22

22:                                               ; preds = %10
  %23 = add i64 %2, -1
  %24 = and i64 %2, 3
  %25 = icmp ult i64 %23, 3
  br i1 %25, label %54, label %26

26:                                               ; preds = %22
  %27 = sub i64 %2, %24
  br label %28

28:                                               ; preds = %28, %26
  %29 = phi i64 [ 0, %26 ], [ %51, %28 ]
  %30 = phi i64 [ 0, %26 ], [ %50, %28 ]
  %31 = phi i64 [ %27, %26 ], [ %52, %28 ]
  %32 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %29, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = add i64 %30, %34
  %36 = or i64 %29, 1
  %37 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %36, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = add i64 %35, %39
  %41 = or i64 %29, 2
  %42 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %41, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = add i64 %40, %44
  %46 = or i64 %29, 3
  %47 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %46, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = add i64 %45, %49
  %51 = add nuw i64 %29, 4
  %52 = add i64 %31, -4
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %28

54:                                               ; preds = %28, %22
  %55 = phi i64 [ undef, %22 ], [ %50, %28 ]
  %56 = phi i64 [ 0, %22 ], [ %51, %28 ]
  %57 = phi i64 [ 0, %22 ], [ %50, %28 ]
  %58 = icmp eq i64 %24, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %54, %59
  %60 = phi i64 [ %67, %59 ], [ %56, %54 ]
  %61 = phi i64 [ %66, %59 ], [ %57, %54 ]
  %62 = phi i64 [ %68, %59 ], [ %24, %54 ]
  %63 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %60, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = add nuw i64 %60, 1
  %68 = add i64 %62, -1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %59, !llvm.loop !2

70:                                               ; preds = %59, %54
  %71 = phi i64 [ %55, %54 ], [ %66, %59 ]
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %71) #5
  br label %75

75:                                               ; preds = %73, %70
  %76 = phi i1 [ false, %73 ], [ true, %70 ]
  %77 = phi i8* [ %74, %73 ], [ null, %70 ]
  %78 = add nuw i64 %5, 1
  br label %79

79:                                               ; preds = %104, %75
  %80 = phi i64 [ %4, %75 ], [ %111, %104 ]
  %81 = phi i64 [ 0, %75 ], [ %105, %104 ]
  %82 = phi i64 [ 0, %75 ], [ %112, %104 ]
  %83 = and i64 %80, %5
  %84 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %82, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  %87 = add i64 %83, %86
  %88 = icmp ugt i64 %87, %5
  br i1 %88, label %89, label %95

89:                                               ; preds = %79
  %90 = sub i64 %78, %83
  %91 = getelementptr inbounds i8, i8* %77, i64 %81
  %92 = getelementptr inbounds i8, i8* %3, i64 %83
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %91, i8* align 1 %92, i64 %90, i1 false) #5
  %93 = add i64 %90, %81
  %94 = sub i64 %86, %90
  br label %95

95:                                               ; preds = %89, %79
  %96 = phi i64 [ 0, %89 ], [ %83, %79 ]
  %97 = phi i64 [ %94, %89 ], [ %86, %79 ]
  %98 = phi i64 [ %93, %89 ], [ %81, %79 ]
  %99 = icmp eq i64 %97, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds i8, i8* %77, i64 %98
  %102 = getelementptr inbounds i8, i8* %3, i64 %96
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %101, i8* align 1 %102, i64 %97, i1 false) #5
  %103 = add i64 %98, %97
  br label %104

104:                                              ; preds = %100, %95
  %105 = phi i64 [ %103, %100 ], [ %98, %95 ]
  %106 = add i64 %97, %96
  %107 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %82, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = and i32 %108, 33554431
  %110 = zext i32 %109 to i64
  %111 = add i64 %106, %110
  %112 = add nuw i64 %82, 1
  %113 = icmp eq i64 %112, %2
  br i1 %113, label %114, label %79

114:                                              ; preds = %104
  %115 = udiv i64 %71, 544
  %116 = add nuw nsw i64 %115, 1
  %117 = icmp ugt i64 %71, 54399
  br i1 %117, label %118, label %119

118:                                              ; preds = %114
  br i1 %76, label %120, label %202

119:                                              ; preds = %114
  br i1 %76, label %120, label %123

120:                                              ; preds = %10, %118, %119
  %121 = phi i8* [ %77, %119 ], [ %77, %118 ], [ null, %10 ]
  %122 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 0
  store i64 1, i64* %122, align 8
  br label %1438

123:                                              ; preds = %119
  %124 = icmp ult i64 %71, 128
  br i1 %124, label %125, label %202

125:                                              ; preds = %123
  %126 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 4
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, 1
  %131 = icmp ult i64 %127, %130
  br i1 %131, label %132, label %156

132:                                              ; preds = %125
  %133 = icmp eq i64 %127, 0
  %134 = select i1 %133, i64 %130, i64 %127
  br label %135

135:                                              ; preds = %135, %132
  %136 = phi i64 [ %134, %132 ], [ %138, %135 ]
  %137 = icmp ult i64 %136, %130
  %138 = shl i64 %136, 1
  br i1 %137, label %135, label %139

139:                                              ; preds = %135
  %140 = icmp eq i64 %136, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %139
  %142 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %136) #5
  %143 = load i64, i64* %126, align 8
  br label %144

144:                                              ; preds = %141, %139
  %145 = phi i64 [ %143, %141 ], [ %127, %139 ]
  %146 = phi i8* [ %142, %141 ], [ null, %139 ]
  %147 = icmp eq i64 %145, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 2
  %150 = load i8*, i8** %149, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %146, i8* align 1 %150, i64 %145, i1 false) #5
  br label %151

151:                                              ; preds = %148, %144
  %152 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 2
  %153 = load i8*, i8** %152, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %153) #5
  store i8* %146, i8** %152, align 8
  store i64 %136, i64* %126, align 8
  %154 = load i64, i64* %128, align 8
  %155 = add i64 %154, 1
  br label %156

156:                                              ; preds = %151, %125
  %157 = phi i64 [ %155, %151 ], [ %130, %125 ]
  %158 = phi i64 [ %154, %151 ], [ %129, %125 ]
  %159 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 5
  %160 = load i64, i64* %159, align 8
  %161 = icmp ult i64 %160, %157
  br i1 %161, label %162, label %189

162:                                              ; preds = %156
  %163 = icmp eq i64 %160, 0
  %164 = select i1 %163, i64 %157, i64 %160
  br label %165

165:                                              ; preds = %165, %162
  %166 = phi i64 [ %164, %162 ], [ %168, %165 ]
  %167 = icmp ult i64 %166, %157
  %168 = shl i64 %166, 1
  br i1 %167, label %165, label %169

169:                                              ; preds = %165
  %170 = icmp eq i64 %166, 0
  br i1 %170, label %175, label %171

171:                                              ; preds = %169
  %172 = shl i64 %166, 2
  %173 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %172) #5
  %174 = load i64, i64* %159, align 8
  br label %175

175:                                              ; preds = %171, %169
  %176 = phi i64 [ %174, %171 ], [ %160, %169 ]
  %177 = phi i8* [ %173, %171 ], [ null, %169 ]
  %178 = icmp eq i64 %176, 0
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 3
  %181 = bitcast i32** %180 to i8**
  %182 = load i8*, i8** %181, align 8
  %183 = shl i64 %176, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %177, i8* align 4 %182, i64 %183, i1 false) #5
  br label %184

184:                                              ; preds = %175, %179
  %185 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 3
  %186 = bitcast i32** %185 to i8**
  %187 = load i8*, i8** %186, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %187) #5
  store i8* %177, i8** %186, align 8
  store i64 %166, i64* %159, align 8
  %188 = load i64, i64* %128, align 8
  br label %189

189:                                              ; preds = %184, %156
  %190 = phi i64 [ %188, %184 ], [ %158, %156 ]
  %191 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 0
  store i64 1, i64* %191, align 8
  %192 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 2
  %193 = load i8*, i8** %192, align 8
  %194 = getelementptr inbounds i8, i8* %193, i64 %190
  store i8 0, i8* %194, align 1
  %195 = trunc i64 %71 to i32
  %196 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 3
  %197 = load i32*, i32** %196, align 8
  %198 = load i64, i64* %128, align 8
  %199 = getelementptr inbounds i32, i32* %197, i64 %198
  store i32 %195, i32* %199, align 4
  %200 = load i64, i64* %128, align 8
  %201 = add i64 %200, 1
  store i64 %201, i64* %128, align 8
  br label %1438

202:                                              ; preds = %118, %123
  %203 = phi i64 [ %116, %123 ], [ 100, %118 ]
  %204 = mul i64 %203, 1040
  %205 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %204) #5
  %206 = bitcast i8* %205 to %struct.HistogramLiteral*
  %207 = add nsw i64 %203, -1
  %208 = and i64 %203, 3
  %209 = icmp ult i64 %207, 3
  br i1 %209, label %233, label %210

210:                                              ; preds = %202
  %211 = sub nsw i64 %203, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %230, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %231, %212 ]
  %215 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %213
  %216 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %213, i32 2
  %217 = bitcast %struct.HistogramLiteral* %215 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 1032, i1 false) #5
  store double 0x7FF0000000000000, double* %216, align 8
  %218 = or i64 %213, 1
  %219 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %218
  %220 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %218, i32 2
  %221 = bitcast %struct.HistogramLiteral* %219 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %221, i8 0, i64 1032, i1 false) #5
  store double 0x7FF0000000000000, double* %220, align 8
  %222 = or i64 %213, 2
  %223 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %222
  %224 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %222, i32 2
  %225 = bitcast %struct.HistogramLiteral* %223 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 1032, i1 false) #5
  store double 0x7FF0000000000000, double* %224, align 8
  %226 = or i64 %213, 3
  %227 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %226
  %228 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %226, i32 2
  %229 = bitcast %struct.HistogramLiteral* %227 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %229, i8 0, i64 1032, i1 false) #5
  store double 0x7FF0000000000000, double* %228, align 8
  %230 = add nuw nsw i64 %213, 4
  %231 = add i64 %214, -4
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %212

233:                                              ; preds = %212, %202
  %234 = phi i64 [ 0, %202 ], [ %230, %212 ]
  %235 = icmp eq i64 %208, 0
  br i1 %235, label %245, label %236

236:                                              ; preds = %233, %236
  %237 = phi i64 [ %242, %236 ], [ %234, %233 ]
  %238 = phi i64 [ %243, %236 ], [ %208, %233 ]
  %239 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %237
  %240 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %237, i32 2
  %241 = bitcast %struct.HistogramLiteral* %239 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %241, i8 0, i64 1032, i1 false) #5
  store double 0x7FF0000000000000, double* %240, align 8
  %242 = add nuw nsw i64 %237, 1
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %236, !llvm.loop !4

245:                                              ; preds = %236, %233
  %246 = udiv i64 %71, %203
  %247 = add i64 %71, -71
  br label %248

248:                                              ; preds = %286, %245
  %249 = phi i64 [ 0, %245 ], [ %287, %286 ]
  %250 = phi i32 [ 7, %245 ], [ %260, %286 ]
  %251 = mul i64 %249, %71
  %252 = udiv i64 %251, %203
  %253 = icmp eq i64 %249, 0
  br i1 %253, label %259, label %254

254:                                              ; preds = %248
  %255 = mul i32 %250, 16807
  %256 = zext i32 %255 to i64
  %257 = urem i64 %256, %246
  %258 = add i64 %257, %252
  br label %259

259:                                              ; preds = %254, %248
  %260 = phi i32 [ %250, %248 ], [ %255, %254 ]
  %261 = phi i64 [ %252, %248 ], [ %258, %254 ]
  %262 = add i64 %261, 70
  %263 = icmp ult i64 %262, %71
  %264 = select i1 %263, i64 %261, i64 %247
  %265 = getelementptr inbounds i8, i8* %77, i64 %264
  %266 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %249, i32 1
  %267 = load i64, i64* %266, align 8
  %268 = add i64 %267, 70
  store i64 %268, i64* %266, align 8
  br label %269

269:                                              ; preds = %269, %259
  %270 = phi i64 [ 70, %259 ], [ %284, %269 ]
  %271 = phi i8* [ %265, %259 ], [ %278, %269 ]
  %272 = getelementptr inbounds i8, i8* %271, i64 1
  %273 = load i8, i8* %271, align 1
  %274 = zext i8 %273 to i64
  %275 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %249, i32 0, i64 %274
  %276 = load i32, i32* %275, align 4
  %277 = add i32 %276, 1
  store i32 %277, i32* %275, align 4
  %278 = getelementptr inbounds i8, i8* %271, i64 2
  %279 = load i8, i8* %272, align 1
  %280 = zext i8 %279 to i64
  %281 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %249, i32 0, i64 %280
  %282 = load i32, i32* %281, align 4
  %283 = add i32 %282, 1
  store i32 %283, i32* %281, align 4
  %284 = add nsw i64 %270, -2
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %269

286:                                              ; preds = %269
  %287 = add nuw nsw i64 %249, 1
  %288 = icmp eq i64 %287, %203
  br i1 %288, label %289, label %248

289:                                              ; preds = %286
  %290 = shl i64 %71, 1
  %291 = udiv i64 %290, 70
  %292 = add nuw nsw i64 %291, 99
  %293 = add nuw nsw i64 %292, %203
  %294 = urem i64 %293, %203
  %295 = sub nsw i64 %293, %294
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %410, label %297

297:                                              ; preds = %289
  %298 = bitcast %struct.HistogramLiteral* %13 to i8*
  %299 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %13, i64 0, i32 2
  %300 = icmp ult i64 %71, 71
  %301 = add i64 %71, -69
  %302 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %13, i64 0, i32 1
  br label %303

303:                                              ; preds = %407, %297
  %304 = phi i64 [ 0, %297 ], [ %408, %407 ]
  %305 = phi i32 [ 7, %297 ], [ %312, %407 ]
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %298) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %298, i8 0, i64 1032, i1 false) #5
  store double 0x7FF0000000000000, double* %299, align 8
  br i1 %300, label %310, label %306

306:                                              ; preds = %303
  %307 = mul i32 %305, 16807
  %308 = zext i32 %307 to i64
  %309 = urem i64 %308, %301
  br label %310

310:                                              ; preds = %306, %303
  %311 = phi i64 [ 70, %306 ], [ %71, %303 ]
  %312 = phi i32 [ %307, %306 ], [ %305, %303 ]
  %313 = phi i64 [ %309, %306 ], [ 0, %303 ]
  store i64 %311, i64* %302, align 8
  %314 = getelementptr inbounds i8, i8* %77, i64 %313
  %315 = add i64 %311, -1
  %316 = and i64 %311, 3
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %331, label %318

318:                                              ; preds = %310, %318
  %319 = phi i64 [ %328, %318 ], [ %311, %310 ]
  %320 = phi i8* [ %322, %318 ], [ %314, %310 ]
  %321 = phi i64 [ %329, %318 ], [ %316, %310 ]
  %322 = getelementptr inbounds i8, i8* %320, i64 1
  %323 = load i8, i8* %320, align 1
  %324 = zext i8 %323 to i64
  %325 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %13, i64 0, i32 0, i64 %324
  %326 = load i32, i32* %325, align 4
  %327 = add i32 %326, 1
  store i32 %327, i32* %325, align 4
  %328 = add i64 %319, -1
  %329 = add i64 %321, -1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %318, !llvm.loop !5

331:                                              ; preds = %318, %310
  %332 = phi i64 [ %311, %310 ], [ %328, %318 ]
  %333 = phi i8* [ %314, %310 ], [ %322, %318 ]
  %334 = icmp ult i64 %315, 3
  br i1 %334, label %364, label %335

335:                                              ; preds = %331, %335
  %336 = phi i64 [ %362, %335 ], [ %332, %331 ]
  %337 = phi i8* [ %356, %335 ], [ %333, %331 ]
  %338 = getelementptr inbounds i8, i8* %337, i64 1
  %339 = load i8, i8* %337, align 1
  %340 = zext i8 %339 to i64
  %341 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %13, i64 0, i32 0, i64 %340
  %342 = load i32, i32* %341, align 4
  %343 = add i32 %342, 1
  store i32 %343, i32* %341, align 4
  %344 = getelementptr inbounds i8, i8* %337, i64 2
  %345 = load i8, i8* %338, align 1
  %346 = zext i8 %345 to i64
  %347 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %13, i64 0, i32 0, i64 %346
  %348 = load i32, i32* %347, align 4
  %349 = add i32 %348, 1
  store i32 %349, i32* %347, align 4
  %350 = getelementptr inbounds i8, i8* %337, i64 3
  %351 = load i8, i8* %344, align 1
  %352 = zext i8 %351 to i64
  %353 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %13, i64 0, i32 0, i64 %352
  %354 = load i32, i32* %353, align 4
  %355 = add i32 %354, 1
  store i32 %355, i32* %353, align 4
  %356 = getelementptr inbounds i8, i8* %337, i64 4
  %357 = load i8, i8* %350, align 1
  %358 = zext i8 %357 to i64
  %359 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %13, i64 0, i32 0, i64 %358
  %360 = load i32, i32* %359, align 4
  %361 = add i32 %360, 1
  store i32 %361, i32* %359, align 4
  %362 = add i64 %336, -4
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %335

364:                                              ; preds = %335, %331
  %365 = load i64, i64* %302, align 8
  %366 = urem i64 %304, %203
  %367 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %366, i32 1
  %368 = load i64, i64* %367, align 8
  %369 = add i64 %368, %365
  store i64 %369, i64* %367, align 8
  br label %370

370:                                              ; preds = %370, %364
  %371 = phi i64 [ 0, %364 ], [ %405, %370 ]
  %372 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %13, i64 0, i32 0, i64 %371
  %373 = bitcast i32* %372 to <4 x i32>*
  %374 = load <4 x i32>, <4 x i32>* %373, align 8
  %375 = getelementptr inbounds i32, i32* %372, i64 4
  %376 = bitcast i32* %375 to <4 x i32>*
  %377 = load <4 x i32>, <4 x i32>* %376, align 8
  %378 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %366, i32 0, i64 %371
  %379 = bitcast i32* %378 to <4 x i32>*
  %380 = load <4 x i32>, <4 x i32>* %379, align 4
  %381 = getelementptr inbounds i32, i32* %378, i64 4
  %382 = bitcast i32* %381 to <4 x i32>*
  %383 = load <4 x i32>, <4 x i32>* %382, align 4
  %384 = add <4 x i32> %380, %374
  %385 = add <4 x i32> %383, %377
  %386 = bitcast i32* %378 to <4 x i32>*
  store <4 x i32> %384, <4 x i32>* %386, align 4
  %387 = bitcast i32* %381 to <4 x i32>*
  store <4 x i32> %385, <4 x i32>* %387, align 4
  %388 = or i64 %371, 8
  %389 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %13, i64 0, i32 0, i64 %388
  %390 = bitcast i32* %389 to <4 x i32>*
  %391 = load <4 x i32>, <4 x i32>* %390, align 8
  %392 = getelementptr inbounds i32, i32* %389, i64 4
  %393 = bitcast i32* %392 to <4 x i32>*
  %394 = load <4 x i32>, <4 x i32>* %393, align 8
  %395 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %366, i32 0, i64 %388
  %396 = bitcast i32* %395 to <4 x i32>*
  %397 = load <4 x i32>, <4 x i32>* %396, align 4
  %398 = getelementptr inbounds i32, i32* %395, i64 4
  %399 = bitcast i32* %398 to <4 x i32>*
  %400 = load <4 x i32>, <4 x i32>* %399, align 4
  %401 = add <4 x i32> %397, %391
  %402 = add <4 x i32> %400, %394
  %403 = bitcast i32* %395 to <4 x i32>*
  store <4 x i32> %401, <4 x i32>* %403, align 4
  %404 = bitcast i32* %398 to <4 x i32>*
  store <4 x i32> %402, <4 x i32>* %404, align 4
  %405 = add nuw nsw i64 %371, 16
  %406 = icmp eq i64 %405, 256
  br i1 %406, label %407, label %370, !llvm.loop !6

407:                                              ; preds = %370
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %298) #5
  %408 = add nuw i64 %304, 1
  %409 = icmp ult i64 %408, %295
  br i1 %409, label %303, label %410

410:                                              ; preds = %407, %289
  %411 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %71) #5
  %412 = add nuw nsw i64 %203, 7
  %413 = lshr i64 %412, 3
  %414 = shl i64 %203, 11
  %415 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %414) #5
  %416 = bitcast i8* %415 to double*
  %417 = shl nuw nsw i64 %203, 3
  %418 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %417) #5
  %419 = bitcast i8* %418 to double*
  %420 = mul i64 %413, %71
  %421 = icmp eq i64 %420, 0
  br i1 %421, label %424, label %422

422:                                              ; preds = %410
  %423 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %420) #5
  br label %424

424:                                              ; preds = %422, %410
  %425 = phi i8* [ %423, %422 ], [ null, %410 ]
  %426 = shl nuw nsw i64 %203, 1
  %427 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %426) #5
  %428 = bitcast i8* %427 to i16*
  %429 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %6, i64 0, i32 1
  %430 = load i32, i32* %429, align 4
  %431 = icmp slt i32 %430, 11
  %432 = select i1 %431, i64 3, i64 10
  %433 = add i64 %71, -1
  %434 = icmp eq i64 %433, 0
  %435 = getelementptr inbounds i8, i8* %411, i64 %433
  %436 = and i64 %71, 1
  %437 = icmp eq i64 %433, 0
  %438 = sub i64 %71, %436
  %439 = icmp eq i64 %436, 0
  %440 = and i64 %71, 3
  %441 = icmp ult i64 %433, 3
  %442 = sub i64 %71, %440
  %443 = icmp eq i64 %440, 0
  %444 = and i64 %71, 1
  %445 = icmp eq i64 %433, 0
  %446 = sub i64 %71, %444
  %447 = icmp eq i64 %444, 0
  br label %448

448:                                              ; preds = %879, %424
  %449 = phi i64 [ 0, %424 ], [ %880, %879 ]
  %450 = phi i64 [ %203, %424 ], [ %791, %879 ]
  %451 = add nuw nsw i64 %450, 7
  %452 = lshr i64 %451, 3
  %453 = icmp ult i64 %450, 2
  br i1 %453, label %454, label %455

454:                                              ; preds = %448
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %411, i8 0, i64 %71, i1 false) #5
  br label %625

455:                                              ; preds = %448
  %456 = shl i64 %450, 11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %415, i8 0, i64 %456, i1 false) #5
  br label %459

457:                                              ; preds = %471
  %458 = icmp eq i64 %450, 0
  br label %478

459:                                              ; preds = %471, %455
  %460 = phi i64 [ %474, %471 ], [ 0, %455 ]
  %461 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %460, i32 1
  %462 = load i64, i64* %461, align 8
  %463 = and i64 %462, 4294967295
  %464 = icmp ult i64 %463, 256
  br i1 %464, label %465, label %468

465:                                              ; preds = %459
  %466 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %463
  %467 = load double, double* %466, align 8
  br label %471

468:                                              ; preds = %459
  %469 = uitofp i64 %463 to double
  %470 = tail call double @log2(double %469) #5
  br label %471

471:                                              ; preds = %468, %465
  %472 = phi double [ %467, %465 ], [ %470, %468 ]
  %473 = getelementptr inbounds double, double* %416, i64 %460
  store double %472, double* %473, align 8
  %474 = add nuw nsw i64 %460, 1
  %475 = icmp eq i64 %474, %450
  br i1 %475, label %457, label %459

476:                                              ; preds = %499, %478
  %477 = icmp eq i64 %480, 0
  br i1 %477, label %506, label %478

478:                                              ; preds = %476, %457
  %479 = phi i64 [ 256, %457 ], [ %480, %476 ]
  %480 = add nsw i64 %479, -1
  br i1 %458, label %476, label %481

481:                                              ; preds = %478
  %482 = mul i64 %480, %450
  br label %483

483:                                              ; preds = %499, %481
  %484 = phi i64 [ 0, %481 ], [ %504, %499 ]
  %485 = getelementptr inbounds double, double* %416, i64 %484
  %486 = load double, double* %485, align 8
  %487 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %484, i32 0, i64 %480
  %488 = load i32, i32* %487, align 4
  %489 = zext i32 %488 to i64
  %490 = icmp eq i32 %488, 0
  br i1 %490, label %499, label %491

491:                                              ; preds = %483
  %492 = icmp ult i32 %488, 256
  br i1 %492, label %493, label %496

493:                                              ; preds = %491
  %494 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %489
  %495 = load double, double* %494, align 8
  br label %499

496:                                              ; preds = %491
  %497 = uitofp i32 %488 to double
  %498 = tail call double @log2(double %497) #5
  br label %499

499:                                              ; preds = %496, %493, %483
  %500 = phi double [ -2.000000e+00, %483 ], [ %495, %493 ], [ %498, %496 ]
  %501 = fsub double %486, %500
  %502 = add nsw i64 %484, %482
  %503 = getelementptr inbounds double, double* %416, i64 %502
  store double %501, double* %503, align 8
  %504 = add nuw nsw i64 %484, 1
  %505 = icmp eq i64 %504, %450
  br i1 %505, label %476, label %483

506:                                              ; preds = %476
  %507 = shl nsw i64 %450, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %418, i8 0, i64 %507, i1 false) #5
  %508 = mul i64 %452, %71
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %425, i8 0, i64 %508, i1 false) #5
  %509 = and i64 %450, 1
  %510 = icmp eq i64 %450, 1
  %511 = sub nsw i64 %450, %509
  %512 = icmp eq i64 %509, 0
  br label %513

513:                                              ; preds = %589, %506
  %514 = phi i64 [ %590, %589 ], [ 0, %506 ]
  %515 = mul i64 %514, %452
  %516 = getelementptr inbounds i8, i8* %77, i64 %514
  %517 = load i8, i8* %516, align 1
  %518 = zext i8 %517 to i64
  %519 = mul i64 %450, %518
  br i1 %458, label %559, label %520

520:                                              ; preds = %513
  %521 = getelementptr inbounds i8, i8* %411, i64 %514
  br i1 %510, label %545, label %522

522:                                              ; preds = %520, %4239
  %523 = phi i64 [ %4241, %4239 ], [ 0, %520 ]
  %524 = phi double [ %4240, %4239 ], [ 0x547D42AEA2879F2E, %520 ]
  %525 = phi i64 [ %4242, %4239 ], [ %511, %520 ]
  %526 = add nuw nsw i64 %523, %519
  %527 = getelementptr inbounds double, double* %416, i64 %526
  %528 = load double, double* %527, align 8
  %529 = getelementptr inbounds double, double* %419, i64 %523
  %530 = load double, double* %529, align 8
  %531 = fadd double %528, %530
  store double %531, double* %529, align 8
  %532 = fcmp olt double %531, %524
  br i1 %532, label %533, label %535

533:                                              ; preds = %522
  %534 = trunc i64 %523 to i8
  store i8 %534, i8* %521, align 1
  br label %535

535:                                              ; preds = %533, %522
  %536 = phi double [ %531, %533 ], [ %524, %522 ]
  %537 = or i64 %523, 1
  %538 = add nuw nsw i64 %537, %519
  %539 = getelementptr inbounds double, double* %416, i64 %538
  %540 = load double, double* %539, align 8
  %541 = getelementptr inbounds double, double* %419, i64 %537
  %542 = load double, double* %541, align 8
  %543 = fadd double %540, %542
  store double %543, double* %541, align 8
  %544 = fcmp olt double %543, %536
  br i1 %544, label %4237, label %4239

545:                                              ; preds = %4239, %520
  %546 = phi double [ undef, %520 ], [ %4240, %4239 ]
  %547 = phi i64 [ 0, %520 ], [ %4241, %4239 ]
  %548 = phi double [ 0x547D42AEA2879F2E, %520 ], [ %4240, %4239 ]
  br i1 %512, label %559, label %549

549:                                              ; preds = %545
  %550 = add nuw nsw i64 %547, %519
  %551 = getelementptr inbounds double, double* %416, i64 %550
  %552 = load double, double* %551, align 8
  %553 = getelementptr inbounds double, double* %419, i64 %547
  %554 = load double, double* %553, align 8
  %555 = fadd double %552, %554
  store double %555, double* %553, align 8
  %556 = fcmp olt double %555, %548
  br i1 %556, label %557, label %559

557:                                              ; preds = %549
  %558 = trunc i64 %547 to i8
  store i8 %558, i8* %521, align 1
  br label %559

559:                                              ; preds = %545, %549, %557, %513
  %560 = phi double [ 0x547D42AEA2879F2E, %513 ], [ %546, %545 ], [ %555, %557 ], [ %548, %549 ]
  %561 = icmp ult i64 %514, 2000
  br i1 %561, label %562, label %568

562:                                              ; preds = %559
  %563 = uitofp i64 %514 to double
  %564 = fmul double %563, 7.000000e-02
  %565 = fdiv double %564, 2.000000e+03
  %566 = fadd double %565, 7.700000e-01
  %567 = fmul double %566, 2.810000e+01
  br label %568

568:                                              ; preds = %562, %559
  %569 = phi double [ %567, %562 ], [ 2.810000e+01, %559 ]
  br i1 %458, label %589, label %570

570:                                              ; preds = %568, %586
  %571 = phi i64 [ %587, %586 ], [ 0, %568 ]
  %572 = getelementptr inbounds double, double* %419, i64 %571
  %573 = load double, double* %572, align 8
  %574 = fsub double %573, %560
  store double %574, double* %572, align 8
  %575 = fcmp ult double %574, %569
  br i1 %575, label %586, label %576

576:                                              ; preds = %570
  %577 = trunc i64 %571 to i32
  %578 = and i32 %577, 7
  %579 = shl i32 1, %578
  store double %569, double* %572, align 8
  %580 = lshr i64 %571, 3
  %581 = add i64 %580, %515
  %582 = getelementptr inbounds i8, i8* %425, i64 %581
  %583 = load i8, i8* %582, align 1
  %584 = trunc i32 %579 to i8
  %585 = or i8 %583, %584
  store i8 %585, i8* %582, align 1
  br label %586

586:                                              ; preds = %576, %570
  %587 = add nuw nsw i64 %571, 1
  %588 = icmp eq i64 %587, %450
  br i1 %588, label %589, label %570

589:                                              ; preds = %586, %568
  %590 = add nuw i64 %514, 1
  %591 = icmp eq i64 %590, %71
  br i1 %591, label %592, label %513

592:                                              ; preds = %589
  br i1 %434, label %625, label %593

593:                                              ; preds = %592
  %594 = load i8, i8* %435, align 1
  %595 = mul i64 %452, %433
  br label %596

596:                                              ; preds = %620, %593
  %597 = phi i8 [ %622, %620 ], [ %594, %593 ]
  %598 = phi i64 [ %605, %620 ], [ %595, %593 ]
  %599 = phi i64 [ %604, %620 ], [ %433, %593 ]
  %600 = phi i64 [ %621, %620 ], [ 1, %593 ]
  %601 = zext i8 %597 to i32
  %602 = and i32 %601, 7
  %603 = shl i32 1, %602
  %604 = add i64 %599, -1
  %605 = sub i64 %598, %452
  %606 = lshr i32 %601, 3
  %607 = zext i32 %606 to i64
  %608 = add i64 %605, %607
  %609 = getelementptr inbounds i8, i8* %425, i64 %608
  %610 = load i8, i8* %609, align 1
  %611 = zext i8 %610 to i32
  %612 = and i32 %603, %611
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %620, label %614

614:                                              ; preds = %596
  %615 = getelementptr inbounds i8, i8* %411, i64 %604
  %616 = load i8, i8* %615, align 1
  %617 = icmp ne i8 %597, %616
  %618 = zext i1 %617 to i64
  %619 = add i64 %600, %618
  br label %620

620:                                              ; preds = %614, %596
  %621 = phi i64 [ %600, %596 ], [ %619, %614 ]
  %622 = phi i8 [ %597, %596 ], [ %616, %614 ]
  %623 = getelementptr inbounds i8, i8* %411, i64 %604
  store i8 %622, i8* %623, align 1
  %624 = icmp eq i64 %604, 0
  br i1 %624, label %625, label %596

625:                                              ; preds = %620, %592, %454
  %626 = phi i64 [ 1, %592 ], [ 1, %454 ], [ %621, %620 ]
  %627 = icmp eq i64 %450, 0
  br i1 %627, label %706, label %628

628:                                              ; preds = %625
  %629 = icmp ult i64 %450, 16
  br i1 %629, label %699, label %630

630:                                              ; preds = %628
  %631 = and i64 %450, -16
  %632 = add nsw i64 %631, -16
  %633 = lshr exact i64 %632, 4
  %634 = add nuw nsw i64 %633, 1
  %635 = and i64 %634, 7
  %636 = icmp ult i64 %632, 112
  br i1 %636, label %684, label %637

637:                                              ; preds = %630
  %638 = sub nsw i64 %634, %635
  br label %639

639:                                              ; preds = %639, %637
  %640 = phi i64 [ 0, %637 ], [ %681, %639 ]
  %641 = phi i64 [ %638, %637 ], [ %682, %639 ]
  %642 = getelementptr inbounds i16, i16* %428, i64 %640
  %643 = bitcast i16* %642 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %643, align 2
  %644 = getelementptr inbounds i16, i16* %642, i64 8
  %645 = bitcast i16* %644 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %645, align 2
  %646 = or i64 %640, 16
  %647 = getelementptr inbounds i16, i16* %428, i64 %646
  %648 = bitcast i16* %647 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %648, align 2
  %649 = getelementptr inbounds i16, i16* %647, i64 8
  %650 = bitcast i16* %649 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %650, align 2
  %651 = or i64 %640, 32
  %652 = getelementptr inbounds i16, i16* %428, i64 %651
  %653 = bitcast i16* %652 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %653, align 2
  %654 = getelementptr inbounds i16, i16* %652, i64 8
  %655 = bitcast i16* %654 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %655, align 2
  %656 = or i64 %640, 48
  %657 = getelementptr inbounds i16, i16* %428, i64 %656
  %658 = bitcast i16* %657 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %658, align 2
  %659 = getelementptr inbounds i16, i16* %657, i64 8
  %660 = bitcast i16* %659 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %660, align 2
  %661 = or i64 %640, 64
  %662 = getelementptr inbounds i16, i16* %428, i64 %661
  %663 = bitcast i16* %662 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %663, align 2
  %664 = getelementptr inbounds i16, i16* %662, i64 8
  %665 = bitcast i16* %664 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %665, align 2
  %666 = or i64 %640, 80
  %667 = getelementptr inbounds i16, i16* %428, i64 %666
  %668 = bitcast i16* %667 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %668, align 2
  %669 = getelementptr inbounds i16, i16* %667, i64 8
  %670 = bitcast i16* %669 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %670, align 2
  %671 = or i64 %640, 96
  %672 = getelementptr inbounds i16, i16* %428, i64 %671
  %673 = bitcast i16* %672 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %673, align 2
  %674 = getelementptr inbounds i16, i16* %672, i64 8
  %675 = bitcast i16* %674 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %675, align 2
  %676 = or i64 %640, 112
  %677 = getelementptr inbounds i16, i16* %428, i64 %676
  %678 = bitcast i16* %677 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %678, align 2
  %679 = getelementptr inbounds i16, i16* %677, i64 8
  %680 = bitcast i16* %679 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %680, align 2
  %681 = add i64 %640, 128
  %682 = add i64 %641, -8
  %683 = icmp eq i64 %682, 0
  br i1 %683, label %684, label %639, !llvm.loop !8

684:                                              ; preds = %639, %630
  %685 = phi i64 [ 0, %630 ], [ %681, %639 ]
  %686 = icmp eq i64 %635, 0
  br i1 %686, label %697, label %687

687:                                              ; preds = %684, %687
  %688 = phi i64 [ %694, %687 ], [ %685, %684 ]
  %689 = phi i64 [ %695, %687 ], [ %635, %684 ]
  %690 = getelementptr inbounds i16, i16* %428, i64 %688
  %691 = bitcast i16* %690 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %691, align 2
  %692 = getelementptr inbounds i16, i16* %690, i64 8
  %693 = bitcast i16* %692 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %693, align 2
  %694 = add i64 %688, 16
  %695 = add i64 %689, -1
  %696 = icmp eq i64 %695, 0
  br i1 %696, label %697, label %687, !llvm.loop !9

697:                                              ; preds = %687, %684
  %698 = icmp eq i64 %450, %631
  br i1 %698, label %706, label %699

699:                                              ; preds = %697, %628
  %700 = phi i64 [ 0, %628 ], [ %631, %697 ]
  br label %701

701:                                              ; preds = %699, %701
  %702 = phi i64 [ %704, %701 ], [ %700, %699 ]
  %703 = getelementptr inbounds i16, i16* %428, i64 %702
  store i16 256, i16* %703, align 2
  %704 = add nuw nsw i64 %702, 1
  %705 = icmp eq i64 %704, %450
  br i1 %705, label %706, label %701, !llvm.loop !10

706:                                              ; preds = %701, %697, %625
  br i1 %437, label %728, label %707

707:                                              ; preds = %706, %4246
  %708 = phi i64 [ %4248, %4246 ], [ 0, %706 ]
  %709 = phi i16 [ %4247, %4246 ], [ 0, %706 ]
  %710 = phi i64 [ %4249, %4246 ], [ %438, %706 ]
  %711 = getelementptr inbounds i8, i8* %411, i64 %708
  %712 = load i8, i8* %711, align 1
  %713 = zext i8 %712 to i64
  %714 = getelementptr inbounds i16, i16* %428, i64 %713
  %715 = load i16, i16* %714, align 2
  %716 = icmp eq i16 %715, 256
  br i1 %716, label %717, label %719

717:                                              ; preds = %707
  %718 = add i16 %709, 1
  store i16 %709, i16* %714, align 2
  br label %719

719:                                              ; preds = %717, %707
  %720 = phi i16 [ %718, %717 ], [ %709, %707 ]
  %721 = or i64 %708, 1
  %722 = getelementptr inbounds i8, i8* %411, i64 %721
  %723 = load i8, i8* %722, align 1
  %724 = zext i8 %723 to i64
  %725 = getelementptr inbounds i16, i16* %428, i64 %724
  %726 = load i16, i16* %725, align 2
  %727 = icmp eq i16 %726, 256
  br i1 %727, label %4244, label %4246

728:                                              ; preds = %4246, %706
  %729 = phi i16 [ undef, %706 ], [ %4247, %4246 ]
  %730 = phi i64 [ 0, %706 ], [ %4248, %4246 ]
  %731 = phi i16 [ 0, %706 ], [ %4247, %4246 ]
  br i1 %439, label %741, label %732

732:                                              ; preds = %728
  %733 = getelementptr inbounds i8, i8* %411, i64 %730
  %734 = load i8, i8* %733, align 1
  %735 = zext i8 %734 to i64
  %736 = getelementptr inbounds i16, i16* %428, i64 %735
  %737 = load i16, i16* %736, align 2
  %738 = icmp eq i16 %737, 256
  br i1 %738, label %739, label %741

739:                                              ; preds = %732
  %740 = add i16 %731, 1
  store i16 %731, i16* %736, align 2
  br label %741

741:                                              ; preds = %739, %732, %728
  %742 = phi i16 [ %729, %728 ], [ %740, %739 ], [ %731, %732 ]
  br i1 %441, label %776, label %743

743:                                              ; preds = %741, %743
  %744 = phi i64 [ %773, %743 ], [ 0, %741 ]
  %745 = phi i64 [ %774, %743 ], [ %442, %741 ]
  %746 = getelementptr inbounds i8, i8* %411, i64 %744
  %747 = load i8, i8* %746, align 1
  %748 = zext i8 %747 to i64
  %749 = getelementptr inbounds i16, i16* %428, i64 %748
  %750 = load i16, i16* %749, align 2
  %751 = trunc i16 %750 to i8
  store i8 %751, i8* %746, align 1
  %752 = or i64 %744, 1
  %753 = getelementptr inbounds i8, i8* %411, i64 %752
  %754 = load i8, i8* %753, align 1
  %755 = zext i8 %754 to i64
  %756 = getelementptr inbounds i16, i16* %428, i64 %755
  %757 = load i16, i16* %756, align 2
  %758 = trunc i16 %757 to i8
  store i8 %758, i8* %753, align 1
  %759 = or i64 %744, 2
  %760 = getelementptr inbounds i8, i8* %411, i64 %759
  %761 = load i8, i8* %760, align 1
  %762 = zext i8 %761 to i64
  %763 = getelementptr inbounds i16, i16* %428, i64 %762
  %764 = load i16, i16* %763, align 2
  %765 = trunc i16 %764 to i8
  store i8 %765, i8* %760, align 1
  %766 = or i64 %744, 3
  %767 = getelementptr inbounds i8, i8* %411, i64 %766
  %768 = load i8, i8* %767, align 1
  %769 = zext i8 %768 to i64
  %770 = getelementptr inbounds i16, i16* %428, i64 %769
  %771 = load i16, i16* %770, align 2
  %772 = trunc i16 %771 to i8
  store i8 %772, i8* %767, align 1
  %773 = add nuw i64 %744, 4
  %774 = add i64 %745, -4
  %775 = icmp eq i64 %774, 0
  br i1 %775, label %776, label %743

776:                                              ; preds = %743, %741
  %777 = phi i64 [ 0, %741 ], [ %773, %743 ]
  br i1 %443, label %790, label %778

778:                                              ; preds = %776, %778
  %779 = phi i64 [ %787, %778 ], [ %777, %776 ]
  %780 = phi i64 [ %788, %778 ], [ %440, %776 ]
  %781 = getelementptr inbounds i8, i8* %411, i64 %779
  %782 = load i8, i8* %781, align 1
  %783 = zext i8 %782 to i64
  %784 = getelementptr inbounds i16, i16* %428, i64 %783
  %785 = load i16, i16* %784, align 2
  %786 = trunc i16 %785 to i8
  store i8 %786, i8* %781, align 1
  %787 = add nuw i64 %779, 1
  %788 = add i64 %780, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %778, !llvm.loop !12

790:                                              ; preds = %778, %776
  %791 = zext i16 %742 to i64
  %792 = icmp eq i16 %742, 0
  br i1 %792, label %832, label %793

793:                                              ; preds = %790
  %794 = add nsw i64 %791, -1
  %795 = and i64 %791, 3
  %796 = icmp ult i64 %794, 3
  br i1 %796, label %820, label %797

797:                                              ; preds = %793
  %798 = sub nsw i64 %791, %795
  br label %799

799:                                              ; preds = %799, %797
  %800 = phi i64 [ 0, %797 ], [ %817, %799 ]
  %801 = phi i64 [ %798, %797 ], [ %818, %799 ]
  %802 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %800
  %803 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %800, i32 2
  %804 = bitcast %struct.HistogramLiteral* %802 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %804, i8 0, i64 1032, i1 false) #5
  store double 0x7FF0000000000000, double* %803, align 8
  %805 = or i64 %800, 1
  %806 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %805
  %807 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %805, i32 2
  %808 = bitcast %struct.HistogramLiteral* %806 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %808, i8 0, i64 1032, i1 false) #5
  store double 0x7FF0000000000000, double* %807, align 8
  %809 = or i64 %800, 2
  %810 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %809
  %811 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %809, i32 2
  %812 = bitcast %struct.HistogramLiteral* %810 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %812, i8 0, i64 1032, i1 false) #5
  store double 0x7FF0000000000000, double* %811, align 8
  %813 = or i64 %800, 3
  %814 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %813
  %815 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %813, i32 2
  %816 = bitcast %struct.HistogramLiteral* %814 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %816, i8 0, i64 1032, i1 false) #5
  store double 0x7FF0000000000000, double* %815, align 8
  %817 = add nuw nsw i64 %800, 4
  %818 = add i64 %801, -4
  %819 = icmp eq i64 %818, 0
  br i1 %819, label %820, label %799

820:                                              ; preds = %799, %793
  %821 = phi i64 [ 0, %793 ], [ %817, %799 ]
  %822 = icmp eq i64 %795, 0
  br i1 %822, label %832, label %823

823:                                              ; preds = %820, %823
  %824 = phi i64 [ %829, %823 ], [ %821, %820 ]
  %825 = phi i64 [ %830, %823 ], [ %795, %820 ]
  %826 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %824
  %827 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %824, i32 2
  %828 = bitcast %struct.HistogramLiteral* %826 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %828, i8 0, i64 1032, i1 false) #5
  store double 0x7FF0000000000000, double* %827, align 8
  %829 = add nuw nsw i64 %824, 1
  %830 = add i64 %825, -1
  %831 = icmp eq i64 %830, 0
  br i1 %831, label %832, label %823, !llvm.loop !13

832:                                              ; preds = %820, %823, %790
  br i1 %445, label %864, label %833

833:                                              ; preds = %832, %833
  %834 = phi i64 [ %861, %833 ], [ 0, %832 ]
  %835 = phi i64 [ %862, %833 ], [ %446, %832 ]
  %836 = getelementptr inbounds i8, i8* %411, i64 %834
  %837 = load i8, i8* %836, align 1
  %838 = zext i8 %837 to i64
  %839 = getelementptr inbounds i8, i8* %77, i64 %834
  %840 = load i8, i8* %839, align 1
  %841 = zext i8 %840 to i64
  %842 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %838, i32 0, i64 %841
  %843 = load i32, i32* %842, align 4
  %844 = add i32 %843, 1
  store i32 %844, i32* %842, align 4
  %845 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %838, i32 1
  %846 = load i64, i64* %845, align 8
  %847 = add i64 %846, 1
  store i64 %847, i64* %845, align 8
  %848 = or i64 %834, 1
  %849 = getelementptr inbounds i8, i8* %411, i64 %848
  %850 = load i8, i8* %849, align 1
  %851 = zext i8 %850 to i64
  %852 = getelementptr inbounds i8, i8* %77, i64 %848
  %853 = load i8, i8* %852, align 1
  %854 = zext i8 %853 to i64
  %855 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %851, i32 0, i64 %854
  %856 = load i32, i32* %855, align 4
  %857 = add i32 %856, 1
  store i32 %857, i32* %855, align 4
  %858 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %851, i32 1
  %859 = load i64, i64* %858, align 8
  %860 = add i64 %859, 1
  store i64 %860, i64* %858, align 8
  %861 = add nuw i64 %834, 2
  %862 = add i64 %835, -2
  %863 = icmp eq i64 %862, 0
  br i1 %863, label %864, label %833

864:                                              ; preds = %833, %832
  %865 = phi i64 [ 0, %832 ], [ %861, %833 ]
  br i1 %447, label %879, label %866

866:                                              ; preds = %864
  %867 = getelementptr inbounds i8, i8* %411, i64 %865
  %868 = load i8, i8* %867, align 1
  %869 = zext i8 %868 to i64
  %870 = getelementptr inbounds i8, i8* %77, i64 %865
  %871 = load i8, i8* %870, align 1
  %872 = zext i8 %871 to i64
  %873 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %869, i32 0, i64 %872
  %874 = load i32, i32* %873, align 4
  %875 = add i32 %874, 1
  store i32 %875, i32* %873, align 4
  %876 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %206, i64 %869, i32 1
  %877 = load i64, i64* %876, align 8
  %878 = add i64 %877, 1
  store i64 %878, i64* %876, align 8
  br label %879

879:                                              ; preds = %864, %866
  %880 = add nuw nsw i64 %449, 1
  %881 = icmp eq i64 %880, %432
  br i1 %881, label %882, label %448

882:                                              ; preds = %879
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %415) #5
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %418) #5
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %425) #5
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %427) #5
  tail call void @BrotliFree(%struct.MemoryManager* %0, i8* %205) #5
  %883 = icmp eq i64 %626, 0
  br i1 %883, label %896, label %884

884:                                              ; preds = %882
  %885 = shl i64 %626, 2
  %886 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %885) #5
  %887 = bitcast i8* %886 to i32*
  %888 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %885) #5
  %889 = bitcast i8* %888 to i32*
  %890 = shl i64 %626, 4
  %891 = add i64 %890, 1008
  %892 = lshr i64 %891, 6
  %893 = icmp eq i64 %892, 0
  br i1 %893, label %908, label %894

894:                                              ; preds = %884
  %895 = mul i64 %892, 1040
  br label %896

896:                                              ; preds = %882, %894
  %897 = phi i64 [ %895, %894 ], [ 15600, %882 ]
  %898 = phi i32* [ %887, %894 ], [ null, %882 ]
  %899 = phi i8* [ %886, %894 ], [ null, %882 ]
  %900 = phi i8* [ %888, %894 ], [ null, %882 ]
  %901 = phi i32* [ %889, %894 ], [ null, %882 ]
  %902 = phi i64 [ %892, %894 ], [ 15, %882 ]
  %903 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %897) #5
  %904 = bitcast i8* %903 to %struct.HistogramLiteral*
  %905 = shl nuw nsw i64 %902, 2
  %906 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %905) #5
  %907 = bitcast i8* %906 to i32*
  br label %908

908:                                              ; preds = %896, %884
  %909 = phi %struct.HistogramLiteral* [ %904, %896 ], [ null, %884 ]
  %910 = phi i8* [ %903, %896 ], [ null, %884 ]
  %911 = phi i32* [ %898, %896 ], [ %887, %884 ]
  %912 = phi i8* [ %899, %896 ], [ %886, %884 ]
  %913 = phi i8* [ %900, %896 ], [ %888, %884 ]
  %914 = phi i32* [ %901, %896 ], [ %889, %884 ]
  %915 = phi i64 [ %902, %896 ], [ 0, %884 ]
  %916 = phi i8* [ %906, %896 ], [ null, %884 ]
  %917 = phi i32* [ %907, %896 ], [ null, %884 ]
  %918 = icmp ult i64 %626, 64
  %919 = select i1 %918, i64 %626, i64 64
  %920 = icmp eq i64 %919, 0
  br i1 %920, label %925, label %921

921:                                              ; preds = %908
  %922 = mul nuw nsw i64 %919, 1040
  %923 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %922) #5
  %924 = bitcast i8* %923 to %struct.HistogramLiteral*
  br label %925

925:                                              ; preds = %921, %908
  %926 = phi i8* [ %923, %921 ], [ null, %908 ]
  %927 = phi %struct.HistogramLiteral* [ %924, %921 ], [ null, %908 ]
  %928 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 49176) #5
  %929 = bitcast [64 x i32]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %929) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %929, i8 0, i64 256, i1 false) #5
  %930 = bitcast [64 x i32]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %930) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %930, i8 0, i64 256, i1 false) #5
  %931 = bitcast [64 x i32]* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %931) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %931, i8 0, i64 256, i1 false) #5
  %932 = bitcast [64 x i32]* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %932) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %932, i8 0, i64 256, i1 false) #5
  %933 = shl i64 %626, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %913, i8 0, i64 %933, i1 false) #5
  %934 = and i64 %71, 1
  %935 = icmp eq i64 %71, 1
  br i1 %935, label %938, label %936

936:                                              ; preds = %925
  %937 = sub i64 %71, %934
  br label %951

938:                                              ; preds = %4233, %925
  %939 = phi i64 [ 0, %925 ], [ %4234, %4233 ]
  %940 = icmp eq i64 %934, 0
  br i1 %940, label %945, label %941

941:                                              ; preds = %938
  %942 = getelementptr inbounds i32, i32* %914, i64 %939
  %943 = load i32, i32* %942, align 4
  %944 = add i32 %943, 1
  store i32 %944, i32* %942, align 4
  br label %945

945:                                              ; preds = %941, %938
  %946 = bitcast i8* %928 to %struct.HistogramPair*
  br i1 %883, label %1158, label %947

947:                                              ; preds = %945
  %948 = getelementptr inbounds [64 x i32], [64 x i32]* %16, i64 0, i64 0
  %949 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 0
  %950 = getelementptr inbounds [64 x i32], [64 x i32]* %17, i64 0, i64 0
  br label %975

951:                                              ; preds = %4233, %936
  %952 = phi i64 [ 0, %936 ], [ %4234, %4233 ]
  %953 = phi i64 [ 0, %936 ], [ %973, %4233 ]
  %954 = phi i64 [ %937, %936 ], [ %4235, %4233 ]
  %955 = getelementptr inbounds i32, i32* %914, i64 %952
  %956 = load i32, i32* %955, align 4
  %957 = add i32 %956, 1
  store i32 %957, i32* %955, align 4
  %958 = or i64 %953, 1
  %959 = icmp eq i64 %958, %71
  br i1 %959, label %966, label %960

960:                                              ; preds = %951
  %961 = getelementptr inbounds i8, i8* %411, i64 %953
  %962 = load i8, i8* %961, align 1
  %963 = getelementptr inbounds i8, i8* %411, i64 %958
  %964 = load i8, i8* %963, align 1
  %965 = icmp eq i8 %962, %964
  br i1 %965, label %968, label %966

966:                                              ; preds = %960, %951
  %967 = add i64 %952, 1
  br label %968

968:                                              ; preds = %966, %960
  %969 = phi i64 [ %967, %966 ], [ %952, %960 ]
  %970 = getelementptr inbounds i32, i32* %914, i64 %969
  %971 = load i32, i32* %970, align 4
  %972 = add i32 %971, 1
  store i32 %972, i32* %970, align 4
  %973 = add nuw i64 %953, 2
  %974 = icmp eq i64 %973, %71
  br i1 %974, label %4231, label %4225

975:                                              ; preds = %1153, %947
  %976 = phi i64 [ %1157, %1153 ], [ 0, %947 ]
  %977 = phi i64 [ %1155, %1153 ], [ 0, %947 ]
  %978 = phi i64 [ %1034, %1153 ], [ 0, %947 ]
  %979 = phi i64 [ %1154, %1153 ], [ 0, %947 ]
  %980 = phi i32* [ %1085, %1153 ], [ %917, %947 ]
  %981 = phi i8* [ %1084, %1153 ], [ %916, %947 ]
  %982 = phi i64 [ %1083, %1153 ], [ %915, %947 ]
  %983 = phi i64 [ %1089, %1153 ], [ 0, %947 ]
  %984 = phi %struct.HistogramLiteral* [ %1060, %1153 ], [ %909, %947 ]
  %985 = phi i8* [ %1059, %1153 ], [ %910, %947 ]
  %986 = phi i64 [ %1058, %1153 ], [ %915, %947 ]
  %987 = phi i64 [ %1088, %1153 ], [ 0, %947 ]
  %988 = mul i64 %976, -64
  %989 = add i64 %626, %988
  %990 = icmp ult i64 %989, 64
  %991 = select i1 %990, i64 %989, i64 64
  %992 = sub i64 %626, %977
  %993 = icmp ult i64 %992, 64
  %994 = select i1 %993, i64 %992, i64 64
  %995 = icmp eq i64 %994, 0
  br i1 %995, label %1033, label %996

996:                                              ; preds = %975, %1024
  %997 = phi i64 [ %1031, %1024 ], [ 0, %975 ]
  %998 = phi i64 [ %1025, %1024 ], [ %978, %975 ]
  %999 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %927, i64 %997
  %1000 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %927, i64 %997, i32 2
  %1001 = bitcast %struct.HistogramLiteral* %999 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1001, i8 0, i64 1032, i1 false) #5
  store double 0x7FF0000000000000, double* %1000, align 8
  %1002 = add i64 %997, %977
  %1003 = getelementptr inbounds i32, i32* %914, i64 %1002
  %1004 = load i32, i32* %1003, align 4
  %1005 = icmp eq i32 %1004, 0
  br i1 %1005, label %1024, label %1006

1006:                                             ; preds = %996
  %1007 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %927, i64 %997, i32 1
  br label %1008

1008:                                             ; preds = %1008, %1006
  %1009 = phi i64 [ 0, %1006 ], [ %1020, %1008 ]
  %1010 = phi i64 [ %998, %1006 ], [ %1011, %1008 ]
  %1011 = add i64 %1010, 1
  %1012 = getelementptr inbounds i8, i8* %77, i64 %1010
  %1013 = load i8, i8* %1012, align 1
  %1014 = zext i8 %1013 to i64
  %1015 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %927, i64 %997, i32 0, i64 %1014
  %1016 = load i32, i32* %1015, align 4
  %1017 = add i32 %1016, 1
  store i32 %1017, i32* %1015, align 4
  %1018 = load i64, i64* %1007, align 8
  %1019 = add i64 %1018, 1
  store i64 %1019, i64* %1007, align 8
  %1020 = add nuw nsw i64 %1009, 1
  %1021 = load i32, i32* %1003, align 4
  %1022 = zext i32 %1021 to i64
  %1023 = icmp ult i64 %1020, %1022
  br i1 %1023, label %1008, label %1024

1024:                                             ; preds = %1008, %996
  %1025 = phi i64 [ %998, %996 ], [ %1011, %1008 ]
  %1026 = call double @BrotliPopulationCostLiteral(%struct.HistogramLiteral* %999) #5
  store double %1026, double* %1000, align 8
  %1027 = trunc i64 %997 to i32
  %1028 = getelementptr inbounds [64 x i32], [64 x i32]* %17, i64 0, i64 %997
  store i32 %1027, i32* %1028, align 4
  %1029 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 %997
  store i32 %1027, i32* %1029, align 4
  %1030 = getelementptr inbounds [64 x i32], [64 x i32]* %16, i64 0, i64 %997
  store i32 1, i32* %1030, align 4
  %1031 = add nuw i64 %997, 1
  %1032 = icmp ult i64 %1031, %994
  br i1 %1032, label %996, label %1033

1033:                                             ; preds = %1024, %975
  %1034 = phi i64 [ %978, %975 ], [ %1025, %1024 ]
  %1035 = call i64 @BrotliHistogramCombineLiteral(%struct.HistogramLiteral* %927, i32* nonnull %948, i32* nonnull %949, i32* nonnull %950, %struct.HistogramPair* %946, i64 %994, i64 %994, i64 64, i64 2048) #5
  %1036 = add i64 %1035, %987
  %1037 = icmp ult i64 %986, %1036
  br i1 %1037, label %1038, label %1057

1038:                                             ; preds = %1033
  %1039 = icmp eq i64 %986, 0
  %1040 = select i1 %1039, i64 %1036, i64 %986
  br label %1041

1041:                                             ; preds = %1041, %1038
  %1042 = phi i64 [ %1040, %1038 ], [ %1044, %1041 ]
  %1043 = icmp ult i64 %1042, %1036
  %1044 = shl i64 %1042, 1
  br i1 %1043, label %1041, label %1045

1045:                                             ; preds = %1041
  %1046 = icmp eq i64 %1042, 0
  br i1 %1046, label %1051, label %1047

1047:                                             ; preds = %1045
  %1048 = mul i64 %1042, 1040
  %1049 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1048) #5
  %1050 = bitcast i8* %1049 to %struct.HistogramLiteral*
  br label %1051

1051:                                             ; preds = %1047, %1045
  %1052 = phi i8* [ %1049, %1047 ], [ null, %1045 ]
  %1053 = phi %struct.HistogramLiteral* [ %1050, %1047 ], [ null, %1045 ]
  br i1 %1039, label %1056, label %1054

1054:                                             ; preds = %1051
  %1055 = mul i64 %986, 1040
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1052, i8* align 8 %985, i64 %1055, i1 false) #5
  br label %1056

1056:                                             ; preds = %1054, %1051
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %985) #5
  br label %1057

1057:                                             ; preds = %1056, %1033
  %1058 = phi i64 [ %1042, %1056 ], [ %986, %1033 ]
  %1059 = phi i8* [ %1052, %1056 ], [ %985, %1033 ]
  %1060 = phi %struct.HistogramLiteral* [ %1053, %1056 ], [ %984, %1033 ]
  %1061 = add i64 %1035, %983
  %1062 = icmp ult i64 %982, %1061
  br i1 %1062, label %1063, label %1082

1063:                                             ; preds = %1057
  %1064 = icmp eq i64 %982, 0
  %1065 = select i1 %1064, i64 %1061, i64 %982
  br label %1066

1066:                                             ; preds = %1066, %1063
  %1067 = phi i64 [ %1065, %1063 ], [ %1069, %1066 ]
  %1068 = icmp ult i64 %1067, %1061
  %1069 = shl i64 %1067, 1
  br i1 %1068, label %1066, label %1070

1070:                                             ; preds = %1066
  %1071 = icmp eq i64 %1067, 0
  br i1 %1071, label %1076, label %1072

1072:                                             ; preds = %1070
  %1073 = shl i64 %1067, 2
  %1074 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1073) #5
  %1075 = bitcast i8* %1074 to i32*
  br label %1076

1076:                                             ; preds = %1072, %1070
  %1077 = phi i8* [ %1074, %1072 ], [ null, %1070 ]
  %1078 = phi i32* [ %1075, %1072 ], [ null, %1070 ]
  br i1 %1064, label %1081, label %1079

1079:                                             ; preds = %1076
  %1080 = shl i64 %982, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1077, i8* align 4 %981, i64 %1080, i1 false) #5
  br label %1081

1081:                                             ; preds = %1079, %1076
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %981) #5
  br label %1082

1082:                                             ; preds = %1081, %1057
  %1083 = phi i64 [ %1067, %1081 ], [ %982, %1057 ]
  %1084 = phi i8* [ %1077, %1081 ], [ %981, %1057 ]
  %1085 = phi i32* [ %1078, %1081 ], [ %980, %1057 ]
  %1086 = icmp eq i64 %1035, 0
  br i1 %1086, label %1087, label %1096

1087:                                             ; preds = %1096, %1082
  %1088 = phi i64 [ %987, %1082 ], [ %1100, %1096 ]
  %1089 = phi i64 [ %983, %1082 ], [ %1110, %1096 ]
  br i1 %995, label %1153, label %1090

1090:                                             ; preds = %1087
  %1091 = trunc i64 %979 to i32
  %1092 = and i64 %991, 1
  %1093 = icmp eq i64 %991, 1
  br i1 %1093, label %1141, label %1094

1094:                                             ; preds = %1090
  %1095 = sub nsw i64 %991, %1092
  br label %1118

1096:                                             ; preds = %1082, %1096
  %1097 = phi i64 [ %1116, %1096 ], [ 0, %1082 ]
  %1098 = phi i64 [ %1110, %1096 ], [ %983, %1082 ]
  %1099 = phi i64 [ %1100, %1096 ], [ %987, %1082 ]
  %1100 = add i64 %1099, 1
  %1101 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %1060, i64 %1099
  %1102 = getelementptr inbounds [64 x i32], [64 x i32]* %17, i64 0, i64 %1097
  %1103 = load i32, i32* %1102, align 4
  %1104 = zext i32 %1103 to i64
  %1105 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %927, i64 %1104
  %1106 = bitcast %struct.HistogramLiteral* %1101 to i8*
  %1107 = bitcast %struct.HistogramLiteral* %1105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1106, i8* align 8 %1107, i64 1040, i1 false) #5
  %1108 = getelementptr inbounds [64 x i32], [64 x i32]* %16, i64 0, i64 %1104
  %1109 = load i32, i32* %1108, align 4
  %1110 = add i64 %1098, 1
  %1111 = getelementptr inbounds i32, i32* %1085, i64 %1098
  store i32 %1109, i32* %1111, align 4
  %1112 = trunc i64 %1097 to i32
  %1113 = load i32, i32* %1102, align 4
  %1114 = zext i32 %1113 to i64
  %1115 = getelementptr inbounds [64 x i32], [64 x i32]* %19, i64 0, i64 %1114
  store i32 %1112, i32* %1115, align 4
  %1116 = add nuw i64 %1097, 1
  %1117 = icmp eq i64 %1116, %1035
  br i1 %1117, label %1087, label %1096

1118:                                             ; preds = %1118, %1094
  %1119 = phi i64 [ 0, %1094 ], [ %1138, %1118 ]
  %1120 = phi i64 [ %1095, %1094 ], [ %1139, %1118 ]
  %1121 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 %1119
  %1122 = load i32, i32* %1121, align 8
  %1123 = zext i32 %1122 to i64
  %1124 = getelementptr inbounds [64 x i32], [64 x i32]* %19, i64 0, i64 %1123
  %1125 = load i32, i32* %1124, align 4
  %1126 = add i32 %1125, %1091
  %1127 = add i64 %1119, %977
  %1128 = getelementptr inbounds i32, i32* %911, i64 %1127
  store i32 %1126, i32* %1128, align 4
  %1129 = or i64 %1119, 1
  %1130 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 %1129
  %1131 = load i32, i32* %1130, align 4
  %1132 = zext i32 %1131 to i64
  %1133 = getelementptr inbounds [64 x i32], [64 x i32]* %19, i64 0, i64 %1132
  %1134 = load i32, i32* %1133, align 4
  %1135 = add i32 %1134, %1091
  %1136 = add i64 %1129, %977
  %1137 = getelementptr inbounds i32, i32* %911, i64 %1136
  store i32 %1135, i32* %1137, align 4
  %1138 = add nuw i64 %1119, 2
  %1139 = add i64 %1120, -2
  %1140 = icmp eq i64 %1139, 0
  br i1 %1140, label %1141, label %1118

1141:                                             ; preds = %1118, %1090
  %1142 = phi i64 [ 0, %1090 ], [ %1138, %1118 ]
  %1143 = icmp eq i64 %1092, 0
  br i1 %1143, label %1153, label %1144

1144:                                             ; preds = %1141
  %1145 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 %1142
  %1146 = load i32, i32* %1145, align 4
  %1147 = zext i32 %1146 to i64
  %1148 = getelementptr inbounds [64 x i32], [64 x i32]* %19, i64 0, i64 %1147
  %1149 = load i32, i32* %1148, align 4
  %1150 = add i32 %1149, %1091
  %1151 = add i64 %1142, %977
  %1152 = getelementptr inbounds i32, i32* %911, i64 %1151
  store i32 %1150, i32* %1152, align 4
  br label %1153

1153:                                             ; preds = %1144, %1141, %1087
  %1154 = add i64 %1035, %979
  %1155 = add i64 %977, 64
  %1156 = icmp ult i64 %1155, %626
  %1157 = add i64 %976, 1
  br i1 %1156, label %975, label %1158

1158:                                             ; preds = %1153, %945
  %1159 = phi i8* [ %910, %945 ], [ %1059, %1153 ]
  %1160 = phi %struct.HistogramLiteral* [ %909, %945 ], [ %1060, %1153 ]
  %1161 = phi i8* [ %916, %945 ], [ %1084, %1153 ]
  %1162 = phi i32* [ %917, %945 ], [ %1085, %1153 ]
  %1163 = phi i64 [ 0, %945 ], [ %1154, %1153 ]
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %926) #5
  %1164 = shl i64 %1163, 6
  %1165 = lshr i64 %1163, 1
  %1166 = mul i64 %1165, %1163
  %1167 = icmp ult i64 %1164, %1166
  %1168 = select i1 %1167, i64 %1164, i64 %1166
  %1169 = add i64 %1168, 1
  %1170 = icmp ugt i64 %1169, 2049
  br i1 %1170, label %1171, label %1175

1171:                                             ; preds = %1158
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %928) #5
  %1172 = mul i64 %1169, 24
  %1173 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1172) #5
  %1174 = bitcast i8* %1173 to %struct.HistogramPair*
  br label %1175

1175:                                             ; preds = %1171, %1158
  %1176 = phi i8* [ %1173, %1171 ], [ %928, %1158 ]
  %1177 = phi %struct.HistogramPair* [ %1174, %1171 ], [ %946, %1158 ]
  %1178 = icmp ne i64 %1163, 0
  br i1 %1178, label %1179, label %1254

1179:                                             ; preds = %1175
  %1180 = shl i64 %1163, 2
  %1181 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1180) #5
  %1182 = bitcast i8* %1181 to i32*
  %1183 = icmp ult i64 %1163, 8
  br i1 %1183, label %1246, label %1184

1184:                                             ; preds = %1179
  %1185 = and i64 %1163, -8
  %1186 = add i64 %1185, -8
  %1187 = lshr exact i64 %1186, 3
  %1188 = add nuw nsw i64 %1187, 1
  %1189 = and i64 %1188, 3
  %1190 = icmp ult i64 %1186, 24
  br i1 %1190, label %1227, label %1191

1191:                                             ; preds = %1184
  %1192 = sub nsw i64 %1188, %1189
  br label %1193

1193:                                             ; preds = %1193, %1191
  %1194 = phi i64 [ 0, %1191 ], [ %1223, %1193 ]
  %1195 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %1191 ], [ %1224, %1193 ]
  %1196 = phi i64 [ %1192, %1191 ], [ %1225, %1193 ]
  %1197 = add <4 x i32> %1195, <i32 4, i32 4, i32 4, i32 4>
  %1198 = getelementptr inbounds i32, i32* %1182, i64 %1194
  %1199 = bitcast i32* %1198 to <4 x i32>*
  store <4 x i32> %1195, <4 x i32>* %1199, align 4
  %1200 = getelementptr inbounds i32, i32* %1198, i64 4
  %1201 = bitcast i32* %1200 to <4 x i32>*
  store <4 x i32> %1197, <4 x i32>* %1201, align 4
  %1202 = or i64 %1194, 8
  %1203 = add <4 x i32> %1195, <i32 8, i32 8, i32 8, i32 8>
  %1204 = add <4 x i32> %1195, <i32 12, i32 12, i32 12, i32 12>
  %1205 = getelementptr inbounds i32, i32* %1182, i64 %1202
  %1206 = bitcast i32* %1205 to <4 x i32>*
  store <4 x i32> %1203, <4 x i32>* %1206, align 4
  %1207 = getelementptr inbounds i32, i32* %1205, i64 4
  %1208 = bitcast i32* %1207 to <4 x i32>*
  store <4 x i32> %1204, <4 x i32>* %1208, align 4
  %1209 = or i64 %1194, 16
  %1210 = add <4 x i32> %1195, <i32 16, i32 16, i32 16, i32 16>
  %1211 = add <4 x i32> %1195, <i32 20, i32 20, i32 20, i32 20>
  %1212 = getelementptr inbounds i32, i32* %1182, i64 %1209
  %1213 = bitcast i32* %1212 to <4 x i32>*
  store <4 x i32> %1210, <4 x i32>* %1213, align 4
  %1214 = getelementptr inbounds i32, i32* %1212, i64 4
  %1215 = bitcast i32* %1214 to <4 x i32>*
  store <4 x i32> %1211, <4 x i32>* %1215, align 4
  %1216 = or i64 %1194, 24
  %1217 = add <4 x i32> %1195, <i32 24, i32 24, i32 24, i32 24>
  %1218 = add <4 x i32> %1195, <i32 28, i32 28, i32 28, i32 28>
  %1219 = getelementptr inbounds i32, i32* %1182, i64 %1216
  %1220 = bitcast i32* %1219 to <4 x i32>*
  store <4 x i32> %1217, <4 x i32>* %1220, align 4
  %1221 = getelementptr inbounds i32, i32* %1219, i64 4
  %1222 = bitcast i32* %1221 to <4 x i32>*
  store <4 x i32> %1218, <4 x i32>* %1222, align 4
  %1223 = add i64 %1194, 32
  %1224 = add <4 x i32> %1195, <i32 32, i32 32, i32 32, i32 32>
  %1225 = add i64 %1196, -4
  %1226 = icmp eq i64 %1225, 0
  br i1 %1226, label %1227, label %1193, !llvm.loop !14

1227:                                             ; preds = %1193, %1184
  %1228 = phi i64 [ 0, %1184 ], [ %1223, %1193 ]
  %1229 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %1184 ], [ %1224, %1193 ]
  %1230 = icmp eq i64 %1189, 0
  br i1 %1230, label %1244, label %1231

1231:                                             ; preds = %1227, %1231
  %1232 = phi i64 [ %1240, %1231 ], [ %1228, %1227 ]
  %1233 = phi <4 x i32> [ %1241, %1231 ], [ %1229, %1227 ]
  %1234 = phi i64 [ %1242, %1231 ], [ %1189, %1227 ]
  %1235 = add <4 x i32> %1233, <i32 4, i32 4, i32 4, i32 4>
  %1236 = getelementptr inbounds i32, i32* %1182, i64 %1232
  %1237 = bitcast i32* %1236 to <4 x i32>*
  store <4 x i32> %1233, <4 x i32>* %1237, align 4
  %1238 = getelementptr inbounds i32, i32* %1236, i64 4
  %1239 = bitcast i32* %1238 to <4 x i32>*
  store <4 x i32> %1235, <4 x i32>* %1239, align 4
  %1240 = add i64 %1232, 8
  %1241 = add <4 x i32> %1233, <i32 8, i32 8, i32 8, i32 8>
  %1242 = add i64 %1234, -1
  %1243 = icmp eq i64 %1242, 0
  br i1 %1243, label %1244, label %1231, !llvm.loop !15

1244:                                             ; preds = %1231, %1227
  %1245 = icmp eq i64 %1163, %1185
  br i1 %1245, label %1254, label %1246

1246:                                             ; preds = %1244, %1179
  %1247 = phi i64 [ 0, %1179 ], [ %1185, %1244 ]
  br label %1248

1248:                                             ; preds = %1246, %1248
  %1249 = phi i64 [ %1252, %1248 ], [ %1247, %1246 ]
  %1250 = trunc i64 %1249 to i32
  %1251 = getelementptr inbounds i32, i32* %1182, i64 %1249
  store i32 %1250, i32* %1251, align 4
  %1252 = add nuw i64 %1249, 1
  %1253 = icmp eq i64 %1252, %1163
  br i1 %1253, label %1254, label %1248, !llvm.loop !16

1254:                                             ; preds = %1248, %1244, %1175
  %1255 = phi i1 [ true, %1175 ], [ false, %1244 ], [ false, %1248 ]
  %1256 = phi i32* [ null, %1175 ], [ %1182, %1244 ], [ %1182, %1248 ]
  %1257 = phi i8* [ null, %1175 ], [ %1181, %1244 ], [ %1181, %1248 ]
  %1258 = call i64 @BrotliHistogramCombineLiteral(%struct.HistogramLiteral* %1160, i32* %1162, i32* %911, i32* %1256, %struct.HistogramPair* %1177, i64 %1163, i64 %626, i64 256, i64 %1168) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1176) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1161) #5
  br i1 %1178, label %1259, label %1263

1259:                                             ; preds = %1254
  %1260 = shl i64 %1163, 2
  %1261 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1260) #5
  %1262 = bitcast i8* %1261 to i32*
  br label %1263

1263:                                             ; preds = %1259, %1254
  %1264 = phi i8* [ %1261, %1259 ], [ null, %1254 ]
  %1265 = phi i32* [ %1262, %1259 ], [ null, %1254 ]
  br i1 %1255, label %1268, label %1266

1266:                                             ; preds = %1263
  %1267 = shl nuw i64 %1163, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %1264, i8 -1, i64 %1267, i1 false) #5
  br label %1268

1268:                                             ; preds = %1266, %1263
  br i1 %883, label %1339, label %1269

1269:                                             ; preds = %1268
  %1270 = bitcast %struct.HistogramLiteral* %14 to i8*
  %1271 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %14, i64 0, i32 2
  %1272 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %14, i64 0, i32 1
  %1273 = icmp eq i64 %1258, 0
  br label %1274

1274:                                             ; preds = %1335, %1269
  %1275 = phi i32 [ 0, %1269 ], [ %1336, %1335 ]
  %1276 = phi i64 [ 0, %1269 ], [ %1337, %1335 ]
  %1277 = phi i64 [ 0, %1269 ], [ %1298, %1335 ]
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %1270) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1270, i8 0, i64 1032, i1 false) #5
  store double 0x7FF0000000000000, double* %1271, align 8
  %1278 = getelementptr inbounds i32, i32* %914, i64 %1276
  %1279 = load i32, i32* %1278, align 4
  %1280 = icmp eq i32 %1279, 0
  br i1 %1280, label %1297, label %1281

1281:                                             ; preds = %1274, %1281
  %1282 = phi i64 [ %1293, %1281 ], [ 0, %1274 ]
  %1283 = phi i64 [ %1284, %1281 ], [ %1277, %1274 ]
  %1284 = add i64 %1283, 1
  %1285 = getelementptr inbounds i8, i8* %77, i64 %1283
  %1286 = load i8, i8* %1285, align 1
  %1287 = zext i8 %1286 to i64
  %1288 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %14, i64 0, i32 0, i64 %1287
  %1289 = load i32, i32* %1288, align 4
  %1290 = add i32 %1289, 1
  store i32 %1290, i32* %1288, align 4
  %1291 = load i64, i64* %1272, align 8
  %1292 = add i64 %1291, 1
  store i64 %1292, i64* %1272, align 8
  %1293 = add nuw nsw i64 %1282, 1
  %1294 = load i32, i32* %1278, align 4
  %1295 = zext i32 %1294 to i64
  %1296 = icmp ult i64 %1293, %1295
  br i1 %1296, label %1281, label %1297

1297:                                             ; preds = %1281, %1274
  %1298 = phi i64 [ %1277, %1274 ], [ %1284, %1281 ]
  %1299 = icmp eq i64 %1276, 0
  %1300 = add i64 %1276, -1
  %1301 = getelementptr inbounds i32, i32* %911, i64 %1300
  %1302 = select i1 %1299, i32* %911, i32* %1301
  %1303 = load i32, i32* %1302, align 4
  %1304 = zext i32 %1303 to i64
  %1305 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %1160, i64 %1304
  %1306 = call double @BrotliHistogramBitCostDistanceLiteral(%struct.HistogramLiteral* nonnull %14, %struct.HistogramLiteral* %1305) #5
  br i1 %1273, label %1326, label %1307

1307:                                             ; preds = %1297, %1319
  %1308 = phi double [ %1321, %1319 ], [ %1306, %1297 ]
  %1309 = phi i32 [ %1320, %1319 ], [ %1303, %1297 ]
  %1310 = phi i64 [ %1322, %1319 ], [ 0, %1297 ]
  %1311 = getelementptr inbounds i32, i32* %1256, i64 %1310
  %1312 = load i32, i32* %1311, align 4
  %1313 = zext i32 %1312 to i64
  %1314 = getelementptr inbounds %struct.HistogramLiteral, %struct.HistogramLiteral* %1160, i64 %1313
  %1315 = call double @BrotliHistogramBitCostDistanceLiteral(%struct.HistogramLiteral* nonnull %14, %struct.HistogramLiteral* %1314) #5
  %1316 = fcmp olt double %1315, %1308
  br i1 %1316, label %1317, label %1319

1317:                                             ; preds = %1307
  %1318 = load i32, i32* %1311, align 4
  br label %1319

1319:                                             ; preds = %1317, %1307
  %1320 = phi i32 [ %1318, %1317 ], [ %1309, %1307 ]
  %1321 = phi double [ %1315, %1317 ], [ %1308, %1307 ]
  %1322 = add nuw i64 %1310, 1
  %1323 = icmp eq i64 %1322, %1258
  br i1 %1323, label %1324, label %1307

1324:                                             ; preds = %1319
  %1325 = zext i32 %1320 to i64
  br label %1326

1326:                                             ; preds = %1324, %1297
  %1327 = phi i64 [ %1325, %1324 ], [ %1304, %1297 ]
  %1328 = phi i32 [ %1320, %1324 ], [ %1303, %1297 ]
  %1329 = getelementptr inbounds i32, i32* %911, i64 %1276
  store i32 %1328, i32* %1329, align 4
  %1330 = getelementptr inbounds i32, i32* %1265, i64 %1327
  %1331 = load i32, i32* %1330, align 4
  %1332 = icmp eq i32 %1331, -1
  br i1 %1332, label %1333, label %1335

1333:                                             ; preds = %1326
  %1334 = add i32 %1275, 1
  store i32 %1275, i32* %1330, align 4
  br label %1335

1335:                                             ; preds = %1333, %1326
  %1336 = phi i32 [ %1334, %1333 ], [ %1275, %1326 ]
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %1270) #5
  %1337 = add nuw i64 %1276, 1
  %1338 = icmp eq i64 %1337, %626
  br i1 %1338, label %1339, label %1274

1339:                                             ; preds = %1335, %1268
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1257) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1159) #5
  %1340 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 4
  %1341 = load i64, i64* %1340, align 8
  %1342 = icmp ult i64 %1341, %626
  br i1 %1342, label %1343, label %1365

1343:                                             ; preds = %1339
  %1344 = icmp eq i64 %1341, 0
  %1345 = select i1 %1344, i64 %626, i64 %1341
  br label %1346

1346:                                             ; preds = %1346, %1343
  %1347 = phi i64 [ %1345, %1343 ], [ %1349, %1346 ]
  %1348 = icmp ult i64 %1347, %626
  %1349 = shl i64 %1347, 1
  br i1 %1348, label %1346, label %1350

1350:                                             ; preds = %1346
  %1351 = icmp eq i64 %1347, 0
  br i1 %1351, label %1355, label %1352

1352:                                             ; preds = %1350
  %1353 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1347) #5
  %1354 = load i64, i64* %1340, align 8
  br label %1355

1355:                                             ; preds = %1352, %1350
  %1356 = phi i64 [ %1354, %1352 ], [ %1341, %1350 ]
  %1357 = phi i8* [ %1353, %1352 ], [ null, %1350 ]
  %1358 = icmp eq i64 %1356, 0
  br i1 %1358, label %1362, label %1359

1359:                                             ; preds = %1355
  %1360 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 2
  %1361 = load i8*, i8** %1360, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1357, i8* align 1 %1361, i64 %1356, i1 false) #5
  br label %1362

1362:                                             ; preds = %1359, %1355
  %1363 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 2
  %1364 = load i8*, i8** %1363, align 8
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1364) #5
  store i8* %1357, i8** %1363, align 8
  store i64 %1347, i64* %1340, align 8
  br label %1365

1365:                                             ; preds = %1362, %1339
  %1366 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 5
  %1367 = load i64, i64* %1366, align 8
  %1368 = icmp ult i64 %1367, %626
  br i1 %1368, label %1369, label %1395

1369:                                             ; preds = %1365
  %1370 = icmp eq i64 %1367, 0
  %1371 = select i1 %1370, i64 %626, i64 %1367
  br label %1372

1372:                                             ; preds = %1372, %1369
  %1373 = phi i64 [ %1371, %1369 ], [ %1375, %1372 ]
  %1374 = icmp ult i64 %1373, %626
  %1375 = shl i64 %1373, 1
  br i1 %1374, label %1372, label %1376

1376:                                             ; preds = %1372
  %1377 = icmp eq i64 %1373, 0
  br i1 %1377, label %1382, label %1378

1378:                                             ; preds = %1376
  %1379 = shl i64 %1373, 2
  %1380 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1379) #5
  %1381 = load i64, i64* %1366, align 8
  br label %1382

1382:                                             ; preds = %1378, %1376
  %1383 = phi i64 [ %1381, %1378 ], [ %1367, %1376 ]
  %1384 = phi i8* [ %1380, %1378 ], [ null, %1376 ]
  %1385 = icmp eq i64 %1383, 0
  br i1 %1385, label %1391, label %1386

1386:                                             ; preds = %1382
  %1387 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 3
  %1388 = bitcast i32** %1387 to i8**
  %1389 = load i8*, i8** %1388, align 8
  %1390 = shl i64 %1383, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1384, i8* align 4 %1389, i64 %1390, i1 false) #5
  br label %1391

1391:                                             ; preds = %1382, %1386
  %1392 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 3
  %1393 = bitcast i32** %1392 to i8**
  %1394 = load i8*, i8** %1393, align 8
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1394) #5
  store i8* %1384, i8** %1393, align 8
  store i64 %1373, i64* %1366, align 8
  br label %1395

1395:                                             ; preds = %1391, %1365
  br i1 %883, label %1431, label %1396

1396:                                             ; preds = %1395
  %1397 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 2
  %1398 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 3
  br label %1399

1399:                                             ; preds = %1427, %1396
  %1400 = phi i8 [ 0, %1396 ], [ %1430, %1427 ]
  %1401 = phi i64 [ 0, %1396 ], [ %1429, %1427 ]
  %1402 = phi i32 [ 0, %1396 ], [ %1428, %1427 ]
  %1403 = phi i64 [ 0, %1396 ], [ %1407, %1427 ]
  %1404 = getelementptr inbounds i32, i32* %914, i64 %1403
  %1405 = load i32, i32* %1404, align 4
  %1406 = add i32 %1405, %1402
  %1407 = add nuw i64 %1403, 1
  %1408 = icmp eq i64 %1407, %626
  %1409 = getelementptr inbounds i32, i32* %911, i64 %1403
  %1410 = load i32, i32* %1409, align 4
  br i1 %1408, label %1415, label %1411

1411:                                             ; preds = %1399
  %1412 = getelementptr inbounds i32, i32* %911, i64 %1407
  %1413 = load i32, i32* %1412, align 4
  %1414 = icmp eq i32 %1410, %1413
  br i1 %1414, label %1427, label %1415

1415:                                             ; preds = %1411, %1399
  %1416 = zext i32 %1410 to i64
  %1417 = getelementptr inbounds i32, i32* %1265, i64 %1416
  %1418 = load i32, i32* %1417, align 4
  %1419 = trunc i32 %1418 to i8
  %1420 = load i8*, i8** %1397, align 8
  %1421 = getelementptr inbounds i8, i8* %1420, i64 %1401
  store i8 %1419, i8* %1421, align 1
  %1422 = load i32*, i32** %1398, align 8
  %1423 = getelementptr inbounds i32, i32* %1422, i64 %1401
  store i32 %1406, i32* %1423, align 4
  %1424 = icmp ugt i8 %1400, %1419
  %1425 = select i1 %1424, i8 %1400, i8 %1419
  %1426 = add i64 %1401, 1
  br label %1427

1427:                                             ; preds = %1415, %1411
  %1428 = phi i32 [ 0, %1415 ], [ %1406, %1411 ]
  %1429 = phi i64 [ %1426, %1415 ], [ %1401, %1411 ]
  %1430 = phi i8 [ %1425, %1415 ], [ %1400, %1411 ]
  br i1 %1408, label %1431, label %1399

1431:                                             ; preds = %1427, %1395
  %1432 = phi i64 [ 0, %1395 ], [ %1429, %1427 ]
  %1433 = phi i8 [ 0, %1395 ], [ %1430, %1427 ]
  %1434 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 1
  store i64 %1432, i64* %1434, align 8
  %1435 = zext i8 %1433 to i64
  %1436 = add nuw nsw i64 %1435, 1
  %1437 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %7, i64 0, i32 0
  store i64 %1436, i64* %1437, align 8
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1264) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %913) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %912) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %932) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %931) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %930) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %929) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %411) #5
  br label %1438

1438:                                             ; preds = %120, %189, %1431
  %1439 = phi i8* [ %121, %120 ], [ %77, %189 ], [ %77, %1431 ]
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1439) #5
  %1440 = icmp ne i64 %2, 0
  br i1 %1440, label %1441, label %1445

1441:                                             ; preds = %1438
  %1442 = shl i64 %2, 1
  %1443 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1442) #5
  %1444 = bitcast i8* %1443 to i16*
  br label %1445

1445:                                             ; preds = %1438, %1441
  %1446 = phi i8* [ %1443, %1441 ], [ null, %1438 ]
  %1447 = phi i16* [ %1444, %1441 ], [ null, %1438 ]
  br i1 %21, label %1492, label %1448

1448:                                             ; preds = %1445
  %1449 = add i64 %2, -1
  %1450 = and i64 %2, 3
  %1451 = icmp ult i64 %1449, 3
  br i1 %1451, label %1475, label %1452

1452:                                             ; preds = %1448
  %1453 = sub i64 %2, %1450
  br label %1454

1454:                                             ; preds = %1454, %1452
  %1455 = phi i64 [ 0, %1452 ], [ %1472, %1454 ]
  %1456 = phi i64 [ %1453, %1452 ], [ %1473, %1454 ]
  %1457 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %1455, i32 3
  %1458 = load i16, i16* %1457, align 4
  %1459 = getelementptr inbounds i16, i16* %1447, i64 %1455
  store i16 %1458, i16* %1459, align 2
  %1460 = or i64 %1455, 1
  %1461 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %1460, i32 3
  %1462 = load i16, i16* %1461, align 4
  %1463 = getelementptr inbounds i16, i16* %1447, i64 %1460
  store i16 %1462, i16* %1463, align 2
  %1464 = or i64 %1455, 2
  %1465 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %1464, i32 3
  %1466 = load i16, i16* %1465, align 4
  %1467 = getelementptr inbounds i16, i16* %1447, i64 %1464
  store i16 %1466, i16* %1467, align 2
  %1468 = or i64 %1455, 3
  %1469 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %1468, i32 3
  %1470 = load i16, i16* %1469, align 4
  %1471 = getelementptr inbounds i16, i16* %1447, i64 %1468
  store i16 %1470, i16* %1471, align 2
  %1472 = add nuw i64 %1455, 4
  %1473 = add i64 %1456, -4
  %1474 = icmp eq i64 %1473, 0
  br i1 %1474, label %1475, label %1454

1475:                                             ; preds = %1454, %1448
  %1476 = phi i64 [ 0, %1448 ], [ %1472, %1454 ]
  %1477 = icmp eq i64 %1450, 0
  br i1 %1477, label %1487, label %1478

1478:                                             ; preds = %1475, %1478
  %1479 = phi i64 [ %1484, %1478 ], [ %1476, %1475 ]
  %1480 = phi i64 [ %1485, %1478 ], [ %1450, %1475 ]
  %1481 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %1479, i32 3
  %1482 = load i16, i16* %1481, align 4
  %1483 = getelementptr inbounds i16, i16* %1447, i64 %1479
  store i16 %1482, i16* %1483, align 2
  %1484 = add nuw i64 %1479, 1
  %1485 = add i64 %1480, -1
  %1486 = icmp eq i64 %1485, 0
  br i1 %1486, label %1487, label %1478, !llvm.loop !17

1487:                                             ; preds = %1478, %1475
  %1488 = udiv i64 %2, 530
  %1489 = add nuw nsw i64 %1488, 1
  %1490 = icmp ugt i64 %2, 26499
  %1491 = select i1 %1490, i64 50, i64 %1489
  br i1 %21, label %1492, label %1494

1492:                                             ; preds = %1445, %1487
  %1493 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 0
  store i64 1, i64* %1493, align 8
  br label %2814

1494:                                             ; preds = %1487
  %1495 = icmp ult i64 %2, 128
  br i1 %1495, label %1496, label %1573

1496:                                             ; preds = %1494
  %1497 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 4
  %1498 = load i64, i64* %1497, align 8
  %1499 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 1
  %1500 = load i64, i64* %1499, align 8
  %1501 = add i64 %1500, 1
  %1502 = icmp ult i64 %1498, %1501
  br i1 %1502, label %1503, label %1527

1503:                                             ; preds = %1496
  %1504 = icmp eq i64 %1498, 0
  %1505 = select i1 %1504, i64 %1501, i64 %1498
  br label %1506

1506:                                             ; preds = %1506, %1503
  %1507 = phi i64 [ %1505, %1503 ], [ %1509, %1506 ]
  %1508 = icmp ult i64 %1507, %1501
  %1509 = shl i64 %1507, 1
  br i1 %1508, label %1506, label %1510

1510:                                             ; preds = %1506
  %1511 = icmp eq i64 %1507, 0
  br i1 %1511, label %1515, label %1512

1512:                                             ; preds = %1510
  %1513 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1507) #5
  %1514 = load i64, i64* %1497, align 8
  br label %1515

1515:                                             ; preds = %1512, %1510
  %1516 = phi i64 [ %1514, %1512 ], [ %1498, %1510 ]
  %1517 = phi i8* [ %1513, %1512 ], [ null, %1510 ]
  %1518 = icmp eq i64 %1516, 0
  br i1 %1518, label %1522, label %1519

1519:                                             ; preds = %1515
  %1520 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 2
  %1521 = load i8*, i8** %1520, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1517, i8* align 1 %1521, i64 %1516, i1 false) #5
  br label %1522

1522:                                             ; preds = %1519, %1515
  %1523 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 2
  %1524 = load i8*, i8** %1523, align 8
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1524) #5
  store i8* %1517, i8** %1523, align 8
  store i64 %1507, i64* %1497, align 8
  %1525 = load i64, i64* %1499, align 8
  %1526 = add i64 %1525, 1
  br label %1527

1527:                                             ; preds = %1522, %1496
  %1528 = phi i64 [ %1526, %1522 ], [ %1501, %1496 ]
  %1529 = phi i64 [ %1525, %1522 ], [ %1500, %1496 ]
  %1530 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 5
  %1531 = load i64, i64* %1530, align 8
  %1532 = icmp ult i64 %1531, %1528
  br i1 %1532, label %1533, label %1560

1533:                                             ; preds = %1527
  %1534 = icmp eq i64 %1531, 0
  %1535 = select i1 %1534, i64 %1528, i64 %1531
  br label %1536

1536:                                             ; preds = %1536, %1533
  %1537 = phi i64 [ %1535, %1533 ], [ %1539, %1536 ]
  %1538 = icmp ult i64 %1537, %1528
  %1539 = shl i64 %1537, 1
  br i1 %1538, label %1536, label %1540

1540:                                             ; preds = %1536
  %1541 = icmp eq i64 %1537, 0
  br i1 %1541, label %1546, label %1542

1542:                                             ; preds = %1540
  %1543 = shl i64 %1537, 2
  %1544 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1543) #5
  %1545 = load i64, i64* %1530, align 8
  br label %1546

1546:                                             ; preds = %1542, %1540
  %1547 = phi i64 [ %1545, %1542 ], [ %1531, %1540 ]
  %1548 = phi i8* [ %1544, %1542 ], [ null, %1540 ]
  %1549 = icmp eq i64 %1547, 0
  br i1 %1549, label %1555, label %1550

1550:                                             ; preds = %1546
  %1551 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 3
  %1552 = bitcast i32** %1551 to i8**
  %1553 = load i8*, i8** %1552, align 8
  %1554 = shl i64 %1547, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1548, i8* align 4 %1553, i64 %1554, i1 false) #5
  br label %1555

1555:                                             ; preds = %1546, %1550
  %1556 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 3
  %1557 = bitcast i32** %1556 to i8**
  %1558 = load i8*, i8** %1557, align 8
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1558) #5
  store i8* %1548, i8** %1557, align 8
  store i64 %1537, i64* %1530, align 8
  %1559 = load i64, i64* %1499, align 8
  br label %1560

1560:                                             ; preds = %1555, %1527
  %1561 = phi i64 [ %1559, %1555 ], [ %1529, %1527 ]
  %1562 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 0
  store i64 1, i64* %1562, align 8
  %1563 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 2
  %1564 = load i8*, i8** %1563, align 8
  %1565 = getelementptr inbounds i8, i8* %1564, i64 %1561
  store i8 0, i8* %1565, align 1
  %1566 = trunc i64 %2 to i32
  %1567 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 3
  %1568 = load i32*, i32** %1567, align 8
  %1569 = load i64, i64* %1499, align 8
  %1570 = getelementptr inbounds i32, i32* %1568, i64 %1569
  store i32 %1566, i32* %1570, align 4
  %1571 = load i64, i64* %1499, align 8
  %1572 = add i64 %1571, 1
  store i64 %1572, i64* %1499, align 8
  br label %2814

1573:                                             ; preds = %1494
  %1574 = mul i64 %1491, 2832
  %1575 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1574) #5
  %1576 = bitcast i8* %1575 to %struct.HistogramCommand*
  %1577 = add nsw i64 %1491, -1
  %1578 = and i64 %1491, 3
  %1579 = icmp ult i64 %1577, 3
  br i1 %1579, label %1603, label %1580

1580:                                             ; preds = %1573
  %1581 = sub nsw i64 %1491, %1578
  br label %1582

1582:                                             ; preds = %1582, %1580
  %1583 = phi i64 [ 0, %1580 ], [ %1600, %1582 ]
  %1584 = phi i64 [ %1581, %1580 ], [ %1601, %1582 ]
  %1585 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1583
  %1586 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1583, i32 2
  %1587 = bitcast %struct.HistogramCommand* %1585 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1587, i8 0, i64 2824, i1 false) #5
  store double 0x7FF0000000000000, double* %1586, align 8
  %1588 = or i64 %1583, 1
  %1589 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1588
  %1590 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1588, i32 2
  %1591 = bitcast %struct.HistogramCommand* %1589 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1591, i8 0, i64 2824, i1 false) #5
  store double 0x7FF0000000000000, double* %1590, align 8
  %1592 = or i64 %1583, 2
  %1593 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1592
  %1594 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1592, i32 2
  %1595 = bitcast %struct.HistogramCommand* %1593 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1595, i8 0, i64 2824, i1 false) #5
  store double 0x7FF0000000000000, double* %1594, align 8
  %1596 = or i64 %1583, 3
  %1597 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1596
  %1598 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1596, i32 2
  %1599 = bitcast %struct.HistogramCommand* %1597 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1599, i8 0, i64 2824, i1 false) #5
  store double 0x7FF0000000000000, double* %1598, align 8
  %1600 = add nuw i64 %1583, 4
  %1601 = add i64 %1584, -4
  %1602 = icmp eq i64 %1601, 0
  br i1 %1602, label %1603, label %1582

1603:                                             ; preds = %1582, %1573
  %1604 = phi i64 [ 0, %1573 ], [ %1600, %1582 ]
  %1605 = icmp eq i64 %1578, 0
  br i1 %1605, label %1615, label %1606

1606:                                             ; preds = %1603, %1606
  %1607 = phi i64 [ %1612, %1606 ], [ %1604, %1603 ]
  %1608 = phi i64 [ %1613, %1606 ], [ %1578, %1603 ]
  %1609 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1607
  %1610 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1607, i32 2
  %1611 = bitcast %struct.HistogramCommand* %1609 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1611, i8 0, i64 2824, i1 false) #5
  store double 0x7FF0000000000000, double* %1610, align 8
  %1612 = add nuw i64 %1607, 1
  %1613 = add i64 %1608, -1
  %1614 = icmp eq i64 %1613, 0
  br i1 %1614, label %1615, label %1606, !llvm.loop !18

1615:                                             ; preds = %1606, %1603
  %1616 = udiv i64 %2, %1491
  %1617 = add i64 %2, -41
  br label %1618

1618:                                             ; preds = %1656, %1615
  %1619 = phi i64 [ 0, %1615 ], [ %1657, %1656 ]
  %1620 = phi i32 [ 7, %1615 ], [ %1630, %1656 ]
  %1621 = mul i64 %1619, %2
  %1622 = udiv i64 %1621, %1491
  %1623 = icmp eq i64 %1619, 0
  br i1 %1623, label %1629, label %1624

1624:                                             ; preds = %1618
  %1625 = mul i32 %1620, 16807
  %1626 = zext i32 %1625 to i64
  %1627 = urem i64 %1626, %1616
  %1628 = add i64 %1627, %1622
  br label %1629

1629:                                             ; preds = %1624, %1618
  %1630 = phi i32 [ %1620, %1618 ], [ %1625, %1624 ]
  %1631 = phi i64 [ %1622, %1618 ], [ %1628, %1624 ]
  %1632 = add i64 %1631, 40
  %1633 = icmp ult i64 %1632, %2
  %1634 = select i1 %1633, i64 %1631, i64 %1617
  %1635 = getelementptr inbounds i16, i16* %1447, i64 %1634
  %1636 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1619, i32 1
  %1637 = load i64, i64* %1636, align 8
  %1638 = add i64 %1637, 40
  store i64 %1638, i64* %1636, align 8
  br label %1639

1639:                                             ; preds = %1639, %1629
  %1640 = phi i64 [ 40, %1629 ], [ %1654, %1639 ]
  %1641 = phi i16* [ %1635, %1629 ], [ %1648, %1639 ]
  %1642 = getelementptr inbounds i16, i16* %1641, i64 1
  %1643 = load i16, i16* %1641, align 2
  %1644 = zext i16 %1643 to i64
  %1645 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1619, i32 0, i64 %1644
  %1646 = load i32, i32* %1645, align 4
  %1647 = add i32 %1646, 1
  store i32 %1647, i32* %1645, align 4
  %1648 = getelementptr inbounds i16, i16* %1641, i64 2
  %1649 = load i16, i16* %1642, align 2
  %1650 = zext i16 %1649 to i64
  %1651 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1619, i32 0, i64 %1650
  %1652 = load i32, i32* %1651, align 4
  %1653 = add i32 %1652, 1
  store i32 %1653, i32* %1651, align 4
  %1654 = add nsw i64 %1640, -2
  %1655 = icmp eq i64 %1654, 0
  br i1 %1655, label %1656, label %1639

1656:                                             ; preds = %1639
  %1657 = add nuw i64 %1619, 1
  %1658 = icmp eq i64 %1657, %1491
  br i1 %1658, label %1659, label %1618

1659:                                             ; preds = %1656
  %1660 = shl i64 %2, 1
  %1661 = udiv i64 %1660, 40
  %1662 = add nuw nsw i64 %1661, 99
  %1663 = add nuw nsw i64 %1662, %1491
  %1664 = urem i64 %1663, %1491
  %1665 = sub nsw i64 %1663, %1664
  %1666 = icmp eq i64 %1665, 0
  br i1 %1666, label %1780, label %1667

1667:                                             ; preds = %1659
  %1668 = bitcast %struct.HistogramCommand* %11 to i8*
  %1669 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %11, i64 0, i32 2
  %1670 = icmp ult i64 %2, 41
  %1671 = add i64 %2, -39
  %1672 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %11, i64 0, i32 1
  br label %1673

1673:                                             ; preds = %1777, %1667
  %1674 = phi i64 [ 0, %1667 ], [ %1778, %1777 ]
  %1675 = phi i32 [ 7, %1667 ], [ %1682, %1777 ]
  call void @llvm.lifetime.start.p0i8(i64 2832, i8* nonnull %1668) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1668, i8 0, i64 2824, i1 false) #5
  store double 0x7FF0000000000000, double* %1669, align 8
  br i1 %1670, label %1680, label %1676

1676:                                             ; preds = %1673
  %1677 = mul i32 %1675, 16807
  %1678 = zext i32 %1677 to i64
  %1679 = urem i64 %1678, %1671
  br label %1680

1680:                                             ; preds = %1676, %1673
  %1681 = phi i64 [ 40, %1676 ], [ %2, %1673 ]
  %1682 = phi i32 [ %1677, %1676 ], [ %1675, %1673 ]
  %1683 = phi i64 [ %1679, %1676 ], [ 0, %1673 ]
  store i64 %1681, i64* %1672, align 8
  %1684 = getelementptr inbounds i16, i16* %1447, i64 %1683
  %1685 = add i64 %1681, -1
  %1686 = and i64 %1681, 3
  %1687 = icmp eq i64 %1686, 0
  br i1 %1687, label %1701, label %1688

1688:                                             ; preds = %1680, %1688
  %1689 = phi i64 [ %1698, %1688 ], [ %1681, %1680 ]
  %1690 = phi i16* [ %1692, %1688 ], [ %1684, %1680 ]
  %1691 = phi i64 [ %1699, %1688 ], [ %1686, %1680 ]
  %1692 = getelementptr inbounds i16, i16* %1690, i64 1
  %1693 = load i16, i16* %1690, align 2
  %1694 = zext i16 %1693 to i64
  %1695 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %11, i64 0, i32 0, i64 %1694
  %1696 = load i32, i32* %1695, align 4
  %1697 = add i32 %1696, 1
  store i32 %1697, i32* %1695, align 4
  %1698 = add i64 %1689, -1
  %1699 = add i64 %1691, -1
  %1700 = icmp eq i64 %1699, 0
  br i1 %1700, label %1701, label %1688, !llvm.loop !19

1701:                                             ; preds = %1688, %1680
  %1702 = phi i64 [ %1681, %1680 ], [ %1698, %1688 ]
  %1703 = phi i16* [ %1684, %1680 ], [ %1692, %1688 ]
  %1704 = icmp ult i64 %1685, 3
  br i1 %1704, label %1734, label %1705

1705:                                             ; preds = %1701, %1705
  %1706 = phi i64 [ %1732, %1705 ], [ %1702, %1701 ]
  %1707 = phi i16* [ %1726, %1705 ], [ %1703, %1701 ]
  %1708 = getelementptr inbounds i16, i16* %1707, i64 1
  %1709 = load i16, i16* %1707, align 2
  %1710 = zext i16 %1709 to i64
  %1711 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %11, i64 0, i32 0, i64 %1710
  %1712 = load i32, i32* %1711, align 4
  %1713 = add i32 %1712, 1
  store i32 %1713, i32* %1711, align 4
  %1714 = getelementptr inbounds i16, i16* %1707, i64 2
  %1715 = load i16, i16* %1708, align 2
  %1716 = zext i16 %1715 to i64
  %1717 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %11, i64 0, i32 0, i64 %1716
  %1718 = load i32, i32* %1717, align 4
  %1719 = add i32 %1718, 1
  store i32 %1719, i32* %1717, align 4
  %1720 = getelementptr inbounds i16, i16* %1707, i64 3
  %1721 = load i16, i16* %1714, align 2
  %1722 = zext i16 %1721 to i64
  %1723 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %11, i64 0, i32 0, i64 %1722
  %1724 = load i32, i32* %1723, align 4
  %1725 = add i32 %1724, 1
  store i32 %1725, i32* %1723, align 4
  %1726 = getelementptr inbounds i16, i16* %1707, i64 4
  %1727 = load i16, i16* %1720, align 2
  %1728 = zext i16 %1727 to i64
  %1729 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %11, i64 0, i32 0, i64 %1728
  %1730 = load i32, i32* %1729, align 4
  %1731 = add i32 %1730, 1
  store i32 %1731, i32* %1729, align 4
  %1732 = add i64 %1706, -4
  %1733 = icmp eq i64 %1732, 0
  br i1 %1733, label %1734, label %1705

1734:                                             ; preds = %1705, %1701
  %1735 = load i64, i64* %1672, align 8
  %1736 = urem i64 %1674, %1491
  %1737 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1736, i32 1
  %1738 = load i64, i64* %1737, align 8
  %1739 = add i64 %1738, %1735
  store i64 %1739, i64* %1737, align 8
  br label %1740

1740:                                             ; preds = %1740, %1734
  %1741 = phi i64 [ 0, %1734 ], [ %1775, %1740 ]
  %1742 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %11, i64 0, i32 0, i64 %1741
  %1743 = bitcast i32* %1742 to <4 x i32>*
  %1744 = load <4 x i32>, <4 x i32>* %1743, align 8
  %1745 = getelementptr inbounds i32, i32* %1742, i64 4
  %1746 = bitcast i32* %1745 to <4 x i32>*
  %1747 = load <4 x i32>, <4 x i32>* %1746, align 8
  %1748 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1736, i32 0, i64 %1741
  %1749 = bitcast i32* %1748 to <4 x i32>*
  %1750 = load <4 x i32>, <4 x i32>* %1749, align 4
  %1751 = getelementptr inbounds i32, i32* %1748, i64 4
  %1752 = bitcast i32* %1751 to <4 x i32>*
  %1753 = load <4 x i32>, <4 x i32>* %1752, align 4
  %1754 = add <4 x i32> %1750, %1744
  %1755 = add <4 x i32> %1753, %1747
  %1756 = bitcast i32* %1748 to <4 x i32>*
  store <4 x i32> %1754, <4 x i32>* %1756, align 4
  %1757 = bitcast i32* %1751 to <4 x i32>*
  store <4 x i32> %1755, <4 x i32>* %1757, align 4
  %1758 = or i64 %1741, 8
  %1759 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %11, i64 0, i32 0, i64 %1758
  %1760 = bitcast i32* %1759 to <4 x i32>*
  %1761 = load <4 x i32>, <4 x i32>* %1760, align 8
  %1762 = getelementptr inbounds i32, i32* %1759, i64 4
  %1763 = bitcast i32* %1762 to <4 x i32>*
  %1764 = load <4 x i32>, <4 x i32>* %1763, align 8
  %1765 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1736, i32 0, i64 %1758
  %1766 = bitcast i32* %1765 to <4 x i32>*
  %1767 = load <4 x i32>, <4 x i32>* %1766, align 4
  %1768 = getelementptr inbounds i32, i32* %1765, i64 4
  %1769 = bitcast i32* %1768 to <4 x i32>*
  %1770 = load <4 x i32>, <4 x i32>* %1769, align 4
  %1771 = add <4 x i32> %1767, %1761
  %1772 = add <4 x i32> %1770, %1764
  %1773 = bitcast i32* %1765 to <4 x i32>*
  store <4 x i32> %1771, <4 x i32>* %1773, align 4
  %1774 = bitcast i32* %1768 to <4 x i32>*
  store <4 x i32> %1772, <4 x i32>* %1774, align 4
  %1775 = add nuw nsw i64 %1741, 16
  %1776 = icmp eq i64 %1775, 704
  br i1 %1776, label %1777, label %1740, !llvm.loop !20

1777:                                             ; preds = %1740
  call void @llvm.lifetime.end.p0i8(i64 2832, i8* nonnull %1668) #5
  %1778 = add nuw i64 %1674, 1
  %1779 = icmp ult i64 %1778, %1665
  br i1 %1779, label %1673, label %1780

1780:                                             ; preds = %1777, %1659
  %1781 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2) #5
  %1782 = add nuw nsw i64 %1491, 7
  %1783 = lshr i64 %1782, 3
  %1784 = mul i64 %1491, 704
  %1785 = icmp eq i64 %1784, 0
  br i1 %1785, label %1790, label %1786

1786:                                             ; preds = %1780
  %1787 = mul i64 %1491, 5632
  %1788 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1787) #5
  %1789 = bitcast i8* %1788 to double*
  br label %1790

1790:                                             ; preds = %1786, %1780
  %1791 = phi i8* [ %1788, %1786 ], [ null, %1780 ]
  %1792 = phi double* [ %1789, %1786 ], [ null, %1780 ]
  %1793 = shl nuw nsw i64 %1491, 3
  %1794 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1793) #5
  %1795 = bitcast i8* %1794 to double*
  %1796 = mul i64 %1783, %2
  %1797 = icmp eq i64 %1796, 0
  br i1 %1797, label %1800, label %1798

1798:                                             ; preds = %1790
  %1799 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1796) #5
  br label %1800

1800:                                             ; preds = %1798, %1790
  %1801 = phi i8* [ %1799, %1798 ], [ null, %1790 ]
  %1802 = shl nuw nsw i64 %1491, 1
  %1803 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %1802) #5
  %1804 = bitcast i8* %1803 to i16*
  %1805 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %6, i64 0, i32 1
  %1806 = load i32, i32* %1805, align 4
  %1807 = icmp slt i32 %1806, 11
  %1808 = select i1 %1807, i64 3, i64 10
  %1809 = add i64 %2, -1
  %1810 = icmp eq i64 %1809, 0
  %1811 = getelementptr inbounds i8, i8* %1781, i64 %1809
  %1812 = and i64 %2, 1
  %1813 = icmp eq i64 %1809, 0
  %1814 = sub i64 %2, %1812
  %1815 = icmp eq i64 %1812, 0
  %1816 = and i64 %2, 3
  %1817 = icmp ult i64 %1809, 3
  %1818 = sub i64 %2, %1816
  %1819 = icmp eq i64 %1816, 0
  %1820 = and i64 %2, 1
  %1821 = icmp eq i64 %1809, 0
  %1822 = sub i64 %2, %1820
  %1823 = icmp eq i64 %1820, 0
  br label %1824

1824:                                             ; preds = %2255, %1800
  %1825 = phi i64 [ 0, %1800 ], [ %2256, %2255 ]
  %1826 = phi i64 [ %1491, %1800 ], [ %2167, %2255 ]
  %1827 = add nuw nsw i64 %1826, 7
  %1828 = lshr i64 %1827, 3
  %1829 = icmp ult i64 %1826, 2
  br i1 %1829, label %1830, label %1831

1830:                                             ; preds = %1824
  call void @llvm.memset.p0i8.i64(i8* align 1 %1781, i8 0, i64 %2, i1 false) #5
  br label %2001

1831:                                             ; preds = %1824
  %1832 = mul i64 %1826, 5632
  call void @llvm.memset.p0i8.i64(i8* align 8 %1791, i8 0, i64 %1832, i1 false) #5
  br label %1835

1833:                                             ; preds = %1847
  %1834 = icmp eq i64 %1826, 0
  br label %1854

1835:                                             ; preds = %1847, %1831
  %1836 = phi i64 [ %1850, %1847 ], [ 0, %1831 ]
  %1837 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1836, i32 1
  %1838 = load i64, i64* %1837, align 8
  %1839 = and i64 %1838, 4294967295
  %1840 = icmp ult i64 %1839, 256
  br i1 %1840, label %1841, label %1844

1841:                                             ; preds = %1835
  %1842 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %1839
  %1843 = load double, double* %1842, align 8
  br label %1847

1844:                                             ; preds = %1835
  %1845 = uitofp i64 %1839 to double
  %1846 = call double @log2(double %1845) #5
  br label %1847

1847:                                             ; preds = %1844, %1841
  %1848 = phi double [ %1843, %1841 ], [ %1846, %1844 ]
  %1849 = getelementptr inbounds double, double* %1792, i64 %1836
  store double %1848, double* %1849, align 8
  %1850 = add nuw nsw i64 %1836, 1
  %1851 = icmp eq i64 %1850, %1826
  br i1 %1851, label %1833, label %1835

1852:                                             ; preds = %1875, %1854
  %1853 = icmp eq i64 %1856, 0
  br i1 %1853, label %1882, label %1854

1854:                                             ; preds = %1852, %1833
  %1855 = phi i64 [ 704, %1833 ], [ %1856, %1852 ]
  %1856 = add nsw i64 %1855, -1
  br i1 %1834, label %1852, label %1857

1857:                                             ; preds = %1854
  %1858 = mul i64 %1856, %1826
  br label %1859

1859:                                             ; preds = %1875, %1857
  %1860 = phi i64 [ 0, %1857 ], [ %1880, %1875 ]
  %1861 = getelementptr inbounds double, double* %1792, i64 %1860
  %1862 = load double, double* %1861, align 8
  %1863 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %1860, i32 0, i64 %1856
  %1864 = load i32, i32* %1863, align 4
  %1865 = zext i32 %1864 to i64
  %1866 = icmp eq i32 %1864, 0
  br i1 %1866, label %1875, label %1867

1867:                                             ; preds = %1859
  %1868 = icmp ult i32 %1864, 256
  br i1 %1868, label %1869, label %1872

1869:                                             ; preds = %1867
  %1870 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %1865
  %1871 = load double, double* %1870, align 8
  br label %1875

1872:                                             ; preds = %1867
  %1873 = uitofp i32 %1864 to double
  %1874 = call double @log2(double %1873) #5
  br label %1875

1875:                                             ; preds = %1872, %1869, %1859
  %1876 = phi double [ -2.000000e+00, %1859 ], [ %1871, %1869 ], [ %1874, %1872 ]
  %1877 = fsub double %1862, %1876
  %1878 = add i64 %1860, %1858
  %1879 = getelementptr inbounds double, double* %1792, i64 %1878
  store double %1877, double* %1879, align 8
  %1880 = add nuw nsw i64 %1860, 1
  %1881 = icmp eq i64 %1880, %1826
  br i1 %1881, label %1852, label %1859

1882:                                             ; preds = %1852
  %1883 = shl nsw i64 %1826, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %1794, i8 0, i64 %1883, i1 false) #5
  %1884 = mul i64 %1828, %2
  call void @llvm.memset.p0i8.i64(i8* align 1 %1801, i8 0, i64 %1884, i1 false) #5
  %1885 = and i64 %1826, 1
  %1886 = icmp eq i64 %1826, 1
  %1887 = sub nsw i64 %1826, %1885
  %1888 = icmp eq i64 %1885, 0
  br label %1889

1889:                                             ; preds = %1965, %1882
  %1890 = phi i64 [ %1966, %1965 ], [ 0, %1882 ]
  %1891 = mul i64 %1890, %1828
  %1892 = getelementptr inbounds i16, i16* %1447, i64 %1890
  %1893 = load i16, i16* %1892, align 2
  %1894 = zext i16 %1893 to i64
  %1895 = mul i64 %1826, %1894
  br i1 %1834, label %1935, label %1896

1896:                                             ; preds = %1889
  %1897 = getelementptr inbounds i8, i8* %1781, i64 %1890
  br i1 %1886, label %1921, label %1898

1898:                                             ; preds = %1896, %4213
  %1899 = phi i64 [ %4215, %4213 ], [ 0, %1896 ]
  %1900 = phi double [ %4214, %4213 ], [ 0x547D42AEA2879F2E, %1896 ]
  %1901 = phi i64 [ %4216, %4213 ], [ %1887, %1896 ]
  %1902 = add i64 %1899, %1895
  %1903 = getelementptr inbounds double, double* %1792, i64 %1902
  %1904 = load double, double* %1903, align 8
  %1905 = getelementptr inbounds double, double* %1795, i64 %1899
  %1906 = load double, double* %1905, align 8
  %1907 = fadd double %1904, %1906
  store double %1907, double* %1905, align 8
  %1908 = fcmp olt double %1907, %1900
  br i1 %1908, label %1909, label %1911

1909:                                             ; preds = %1898
  %1910 = trunc i64 %1899 to i8
  store i8 %1910, i8* %1897, align 1
  br label %1911

1911:                                             ; preds = %1909, %1898
  %1912 = phi double [ %1907, %1909 ], [ %1900, %1898 ]
  %1913 = or i64 %1899, 1
  %1914 = add i64 %1913, %1895
  %1915 = getelementptr inbounds double, double* %1792, i64 %1914
  %1916 = load double, double* %1915, align 8
  %1917 = getelementptr inbounds double, double* %1795, i64 %1913
  %1918 = load double, double* %1917, align 8
  %1919 = fadd double %1916, %1918
  store double %1919, double* %1917, align 8
  %1920 = fcmp olt double %1919, %1912
  br i1 %1920, label %4211, label %4213

1921:                                             ; preds = %4213, %1896
  %1922 = phi double [ undef, %1896 ], [ %4214, %4213 ]
  %1923 = phi i64 [ 0, %1896 ], [ %4215, %4213 ]
  %1924 = phi double [ 0x547D42AEA2879F2E, %1896 ], [ %4214, %4213 ]
  br i1 %1888, label %1935, label %1925

1925:                                             ; preds = %1921
  %1926 = add i64 %1923, %1895
  %1927 = getelementptr inbounds double, double* %1792, i64 %1926
  %1928 = load double, double* %1927, align 8
  %1929 = getelementptr inbounds double, double* %1795, i64 %1923
  %1930 = load double, double* %1929, align 8
  %1931 = fadd double %1928, %1930
  store double %1931, double* %1929, align 8
  %1932 = fcmp olt double %1931, %1924
  br i1 %1932, label %1933, label %1935

1933:                                             ; preds = %1925
  %1934 = trunc i64 %1923 to i8
  store i8 %1934, i8* %1897, align 1
  br label %1935

1935:                                             ; preds = %1921, %1925, %1933, %1889
  %1936 = phi double [ 0x547D42AEA2879F2E, %1889 ], [ %1922, %1921 ], [ %1931, %1933 ], [ %1924, %1925 ]
  %1937 = icmp ult i64 %1890, 2000
  br i1 %1937, label %1938, label %1944

1938:                                             ; preds = %1935
  %1939 = uitofp i64 %1890 to double
  %1940 = fmul double %1939, 7.000000e-02
  %1941 = fdiv double %1940, 2.000000e+03
  %1942 = fadd double %1941, 7.700000e-01
  %1943 = fmul double %1942, 1.350000e+01
  br label %1944

1944:                                             ; preds = %1938, %1935
  %1945 = phi double [ %1943, %1938 ], [ 1.350000e+01, %1935 ]
  br i1 %1834, label %1965, label %1946

1946:                                             ; preds = %1944, %1962
  %1947 = phi i64 [ %1963, %1962 ], [ 0, %1944 ]
  %1948 = getelementptr inbounds double, double* %1795, i64 %1947
  %1949 = load double, double* %1948, align 8
  %1950 = fsub double %1949, %1936
  store double %1950, double* %1948, align 8
  %1951 = fcmp ult double %1950, %1945
  br i1 %1951, label %1962, label %1952

1952:                                             ; preds = %1946
  %1953 = trunc i64 %1947 to i32
  %1954 = and i32 %1953, 7
  %1955 = shl i32 1, %1954
  store double %1945, double* %1948, align 8
  %1956 = lshr i64 %1947, 3
  %1957 = add i64 %1956, %1891
  %1958 = getelementptr inbounds i8, i8* %1801, i64 %1957
  %1959 = load i8, i8* %1958, align 1
  %1960 = trunc i32 %1955 to i8
  %1961 = or i8 %1959, %1960
  store i8 %1961, i8* %1958, align 1
  br label %1962

1962:                                             ; preds = %1952, %1946
  %1963 = add nuw nsw i64 %1947, 1
  %1964 = icmp eq i64 %1963, %1826
  br i1 %1964, label %1965, label %1946

1965:                                             ; preds = %1962, %1944
  %1966 = add nuw i64 %1890, 1
  %1967 = icmp eq i64 %1966, %2
  br i1 %1967, label %1968, label %1889

1968:                                             ; preds = %1965
  br i1 %1810, label %2001, label %1969

1969:                                             ; preds = %1968
  %1970 = load i8, i8* %1811, align 1
  %1971 = mul i64 %1828, %1809
  br label %1972

1972:                                             ; preds = %1996, %1969
  %1973 = phi i8 [ %1998, %1996 ], [ %1970, %1969 ]
  %1974 = phi i64 [ %1981, %1996 ], [ %1971, %1969 ]
  %1975 = phi i64 [ %1980, %1996 ], [ %1809, %1969 ]
  %1976 = phi i64 [ %1997, %1996 ], [ 1, %1969 ]
  %1977 = zext i8 %1973 to i32
  %1978 = and i32 %1977, 7
  %1979 = shl i32 1, %1978
  %1980 = add i64 %1975, -1
  %1981 = sub i64 %1974, %1828
  %1982 = lshr i32 %1977, 3
  %1983 = zext i32 %1982 to i64
  %1984 = add i64 %1981, %1983
  %1985 = getelementptr inbounds i8, i8* %1801, i64 %1984
  %1986 = load i8, i8* %1985, align 1
  %1987 = zext i8 %1986 to i32
  %1988 = and i32 %1979, %1987
  %1989 = icmp eq i32 %1988, 0
  br i1 %1989, label %1996, label %1990

1990:                                             ; preds = %1972
  %1991 = getelementptr inbounds i8, i8* %1781, i64 %1980
  %1992 = load i8, i8* %1991, align 1
  %1993 = icmp ne i8 %1973, %1992
  %1994 = zext i1 %1993 to i64
  %1995 = add i64 %1976, %1994
  br label %1996

1996:                                             ; preds = %1990, %1972
  %1997 = phi i64 [ %1976, %1972 ], [ %1995, %1990 ]
  %1998 = phi i8 [ %1973, %1972 ], [ %1992, %1990 ]
  %1999 = getelementptr inbounds i8, i8* %1781, i64 %1980
  store i8 %1998, i8* %1999, align 1
  %2000 = icmp eq i64 %1980, 0
  br i1 %2000, label %2001, label %1972

2001:                                             ; preds = %1996, %1968, %1830
  %2002 = phi i64 [ 1, %1968 ], [ 1, %1830 ], [ %1997, %1996 ]
  %2003 = icmp eq i64 %1826, 0
  br i1 %2003, label %2082, label %2004

2004:                                             ; preds = %2001
  %2005 = icmp ult i64 %1826, 16
  br i1 %2005, label %2075, label %2006

2006:                                             ; preds = %2004
  %2007 = and i64 %1826, -16
  %2008 = add nsw i64 %2007, -16
  %2009 = lshr exact i64 %2008, 4
  %2010 = add nuw nsw i64 %2009, 1
  %2011 = and i64 %2010, 7
  %2012 = icmp ult i64 %2008, 112
  br i1 %2012, label %2060, label %2013

2013:                                             ; preds = %2006
  %2014 = sub nsw i64 %2010, %2011
  br label %2015

2015:                                             ; preds = %2015, %2013
  %2016 = phi i64 [ 0, %2013 ], [ %2057, %2015 ]
  %2017 = phi i64 [ %2014, %2013 ], [ %2058, %2015 ]
  %2018 = getelementptr inbounds i16, i16* %1804, i64 %2016
  %2019 = bitcast i16* %2018 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2019, align 2
  %2020 = getelementptr inbounds i16, i16* %2018, i64 8
  %2021 = bitcast i16* %2020 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2021, align 2
  %2022 = or i64 %2016, 16
  %2023 = getelementptr inbounds i16, i16* %1804, i64 %2022
  %2024 = bitcast i16* %2023 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2024, align 2
  %2025 = getelementptr inbounds i16, i16* %2023, i64 8
  %2026 = bitcast i16* %2025 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2026, align 2
  %2027 = or i64 %2016, 32
  %2028 = getelementptr inbounds i16, i16* %1804, i64 %2027
  %2029 = bitcast i16* %2028 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2029, align 2
  %2030 = getelementptr inbounds i16, i16* %2028, i64 8
  %2031 = bitcast i16* %2030 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2031, align 2
  %2032 = or i64 %2016, 48
  %2033 = getelementptr inbounds i16, i16* %1804, i64 %2032
  %2034 = bitcast i16* %2033 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2034, align 2
  %2035 = getelementptr inbounds i16, i16* %2033, i64 8
  %2036 = bitcast i16* %2035 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2036, align 2
  %2037 = or i64 %2016, 64
  %2038 = getelementptr inbounds i16, i16* %1804, i64 %2037
  %2039 = bitcast i16* %2038 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2039, align 2
  %2040 = getelementptr inbounds i16, i16* %2038, i64 8
  %2041 = bitcast i16* %2040 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2041, align 2
  %2042 = or i64 %2016, 80
  %2043 = getelementptr inbounds i16, i16* %1804, i64 %2042
  %2044 = bitcast i16* %2043 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2044, align 2
  %2045 = getelementptr inbounds i16, i16* %2043, i64 8
  %2046 = bitcast i16* %2045 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2046, align 2
  %2047 = or i64 %2016, 96
  %2048 = getelementptr inbounds i16, i16* %1804, i64 %2047
  %2049 = bitcast i16* %2048 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2049, align 2
  %2050 = getelementptr inbounds i16, i16* %2048, i64 8
  %2051 = bitcast i16* %2050 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2051, align 2
  %2052 = or i64 %2016, 112
  %2053 = getelementptr inbounds i16, i16* %1804, i64 %2052
  %2054 = bitcast i16* %2053 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2054, align 2
  %2055 = getelementptr inbounds i16, i16* %2053, i64 8
  %2056 = bitcast i16* %2055 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2056, align 2
  %2057 = add i64 %2016, 128
  %2058 = add i64 %2017, -8
  %2059 = icmp eq i64 %2058, 0
  br i1 %2059, label %2060, label %2015, !llvm.loop !21

2060:                                             ; preds = %2015, %2006
  %2061 = phi i64 [ 0, %2006 ], [ %2057, %2015 ]
  %2062 = icmp eq i64 %2011, 0
  br i1 %2062, label %2073, label %2063

2063:                                             ; preds = %2060, %2063
  %2064 = phi i64 [ %2070, %2063 ], [ %2061, %2060 ]
  %2065 = phi i64 [ %2071, %2063 ], [ %2011, %2060 ]
  %2066 = getelementptr inbounds i16, i16* %1804, i64 %2064
  %2067 = bitcast i16* %2066 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2067, align 2
  %2068 = getelementptr inbounds i16, i16* %2066, i64 8
  %2069 = bitcast i16* %2068 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %2069, align 2
  %2070 = add i64 %2064, 16
  %2071 = add i64 %2065, -1
  %2072 = icmp eq i64 %2071, 0
  br i1 %2072, label %2073, label %2063, !llvm.loop !22

2073:                                             ; preds = %2063, %2060
  %2074 = icmp eq i64 %1826, %2007
  br i1 %2074, label %2082, label %2075

2075:                                             ; preds = %2073, %2004
  %2076 = phi i64 [ 0, %2004 ], [ %2007, %2073 ]
  br label %2077

2077:                                             ; preds = %2075, %2077
  %2078 = phi i64 [ %2080, %2077 ], [ %2076, %2075 ]
  %2079 = getelementptr inbounds i16, i16* %1804, i64 %2078
  store i16 256, i16* %2079, align 2
  %2080 = add nuw nsw i64 %2078, 1
  %2081 = icmp eq i64 %2080, %1826
  br i1 %2081, label %2082, label %2077, !llvm.loop !23

2082:                                             ; preds = %2077, %2073, %2001
  br i1 %1813, label %2104, label %2083

2083:                                             ; preds = %2082, %4220
  %2084 = phi i64 [ %4222, %4220 ], [ 0, %2082 ]
  %2085 = phi i16 [ %4221, %4220 ], [ 0, %2082 ]
  %2086 = phi i64 [ %4223, %4220 ], [ %1814, %2082 ]
  %2087 = getelementptr inbounds i8, i8* %1781, i64 %2084
  %2088 = load i8, i8* %2087, align 1
  %2089 = zext i8 %2088 to i64
  %2090 = getelementptr inbounds i16, i16* %1804, i64 %2089
  %2091 = load i16, i16* %2090, align 2
  %2092 = icmp eq i16 %2091, 256
  br i1 %2092, label %2093, label %2095

2093:                                             ; preds = %2083
  %2094 = add i16 %2085, 1
  store i16 %2085, i16* %2090, align 2
  br label %2095

2095:                                             ; preds = %2093, %2083
  %2096 = phi i16 [ %2094, %2093 ], [ %2085, %2083 ]
  %2097 = or i64 %2084, 1
  %2098 = getelementptr inbounds i8, i8* %1781, i64 %2097
  %2099 = load i8, i8* %2098, align 1
  %2100 = zext i8 %2099 to i64
  %2101 = getelementptr inbounds i16, i16* %1804, i64 %2100
  %2102 = load i16, i16* %2101, align 2
  %2103 = icmp eq i16 %2102, 256
  br i1 %2103, label %4218, label %4220

2104:                                             ; preds = %4220, %2082
  %2105 = phi i16 [ undef, %2082 ], [ %4221, %4220 ]
  %2106 = phi i64 [ 0, %2082 ], [ %4222, %4220 ]
  %2107 = phi i16 [ 0, %2082 ], [ %4221, %4220 ]
  br i1 %1815, label %2117, label %2108

2108:                                             ; preds = %2104
  %2109 = getelementptr inbounds i8, i8* %1781, i64 %2106
  %2110 = load i8, i8* %2109, align 1
  %2111 = zext i8 %2110 to i64
  %2112 = getelementptr inbounds i16, i16* %1804, i64 %2111
  %2113 = load i16, i16* %2112, align 2
  %2114 = icmp eq i16 %2113, 256
  br i1 %2114, label %2115, label %2117

2115:                                             ; preds = %2108
  %2116 = add i16 %2107, 1
  store i16 %2107, i16* %2112, align 2
  br label %2117

2117:                                             ; preds = %2115, %2108, %2104
  %2118 = phi i16 [ %2105, %2104 ], [ %2116, %2115 ], [ %2107, %2108 ]
  br i1 %1817, label %2152, label %2119

2119:                                             ; preds = %2117, %2119
  %2120 = phi i64 [ %2149, %2119 ], [ 0, %2117 ]
  %2121 = phi i64 [ %2150, %2119 ], [ %1818, %2117 ]
  %2122 = getelementptr inbounds i8, i8* %1781, i64 %2120
  %2123 = load i8, i8* %2122, align 1
  %2124 = zext i8 %2123 to i64
  %2125 = getelementptr inbounds i16, i16* %1804, i64 %2124
  %2126 = load i16, i16* %2125, align 2
  %2127 = trunc i16 %2126 to i8
  store i8 %2127, i8* %2122, align 1
  %2128 = or i64 %2120, 1
  %2129 = getelementptr inbounds i8, i8* %1781, i64 %2128
  %2130 = load i8, i8* %2129, align 1
  %2131 = zext i8 %2130 to i64
  %2132 = getelementptr inbounds i16, i16* %1804, i64 %2131
  %2133 = load i16, i16* %2132, align 2
  %2134 = trunc i16 %2133 to i8
  store i8 %2134, i8* %2129, align 1
  %2135 = or i64 %2120, 2
  %2136 = getelementptr inbounds i8, i8* %1781, i64 %2135
  %2137 = load i8, i8* %2136, align 1
  %2138 = zext i8 %2137 to i64
  %2139 = getelementptr inbounds i16, i16* %1804, i64 %2138
  %2140 = load i16, i16* %2139, align 2
  %2141 = trunc i16 %2140 to i8
  store i8 %2141, i8* %2136, align 1
  %2142 = or i64 %2120, 3
  %2143 = getelementptr inbounds i8, i8* %1781, i64 %2142
  %2144 = load i8, i8* %2143, align 1
  %2145 = zext i8 %2144 to i64
  %2146 = getelementptr inbounds i16, i16* %1804, i64 %2145
  %2147 = load i16, i16* %2146, align 2
  %2148 = trunc i16 %2147 to i8
  store i8 %2148, i8* %2143, align 1
  %2149 = add nuw i64 %2120, 4
  %2150 = add i64 %2121, -4
  %2151 = icmp eq i64 %2150, 0
  br i1 %2151, label %2152, label %2119

2152:                                             ; preds = %2119, %2117
  %2153 = phi i64 [ 0, %2117 ], [ %2149, %2119 ]
  br i1 %1819, label %2166, label %2154

2154:                                             ; preds = %2152, %2154
  %2155 = phi i64 [ %2163, %2154 ], [ %2153, %2152 ]
  %2156 = phi i64 [ %2164, %2154 ], [ %1816, %2152 ]
  %2157 = getelementptr inbounds i8, i8* %1781, i64 %2155
  %2158 = load i8, i8* %2157, align 1
  %2159 = zext i8 %2158 to i64
  %2160 = getelementptr inbounds i16, i16* %1804, i64 %2159
  %2161 = load i16, i16* %2160, align 2
  %2162 = trunc i16 %2161 to i8
  store i8 %2162, i8* %2157, align 1
  %2163 = add nuw i64 %2155, 1
  %2164 = add i64 %2156, -1
  %2165 = icmp eq i64 %2164, 0
  br i1 %2165, label %2166, label %2154, !llvm.loop !24

2166:                                             ; preds = %2154, %2152
  %2167 = zext i16 %2118 to i64
  %2168 = icmp eq i16 %2118, 0
  br i1 %2168, label %2208, label %2169

2169:                                             ; preds = %2166
  %2170 = add nsw i64 %2167, -1
  %2171 = and i64 %2167, 3
  %2172 = icmp ult i64 %2170, 3
  br i1 %2172, label %2196, label %2173

2173:                                             ; preds = %2169
  %2174 = sub nsw i64 %2167, %2171
  br label %2175

2175:                                             ; preds = %2175, %2173
  %2176 = phi i64 [ 0, %2173 ], [ %2193, %2175 ]
  %2177 = phi i64 [ %2174, %2173 ], [ %2194, %2175 ]
  %2178 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2176
  %2179 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2176, i32 2
  %2180 = bitcast %struct.HistogramCommand* %2178 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2180, i8 0, i64 2824, i1 false) #5
  store double 0x7FF0000000000000, double* %2179, align 8
  %2181 = or i64 %2176, 1
  %2182 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2181
  %2183 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2181, i32 2
  %2184 = bitcast %struct.HistogramCommand* %2182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2184, i8 0, i64 2824, i1 false) #5
  store double 0x7FF0000000000000, double* %2183, align 8
  %2185 = or i64 %2176, 2
  %2186 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2185
  %2187 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2185, i32 2
  %2188 = bitcast %struct.HistogramCommand* %2186 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2188, i8 0, i64 2824, i1 false) #5
  store double 0x7FF0000000000000, double* %2187, align 8
  %2189 = or i64 %2176, 3
  %2190 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2189
  %2191 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2189, i32 2
  %2192 = bitcast %struct.HistogramCommand* %2190 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2192, i8 0, i64 2824, i1 false) #5
  store double 0x7FF0000000000000, double* %2191, align 8
  %2193 = add nuw nsw i64 %2176, 4
  %2194 = add i64 %2177, -4
  %2195 = icmp eq i64 %2194, 0
  br i1 %2195, label %2196, label %2175

2196:                                             ; preds = %2175, %2169
  %2197 = phi i64 [ 0, %2169 ], [ %2193, %2175 ]
  %2198 = icmp eq i64 %2171, 0
  br i1 %2198, label %2208, label %2199

2199:                                             ; preds = %2196, %2199
  %2200 = phi i64 [ %2205, %2199 ], [ %2197, %2196 ]
  %2201 = phi i64 [ %2206, %2199 ], [ %2171, %2196 ]
  %2202 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2200
  %2203 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2200, i32 2
  %2204 = bitcast %struct.HistogramCommand* %2202 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2204, i8 0, i64 2824, i1 false) #5
  store double 0x7FF0000000000000, double* %2203, align 8
  %2205 = add nuw nsw i64 %2200, 1
  %2206 = add i64 %2201, -1
  %2207 = icmp eq i64 %2206, 0
  br i1 %2207, label %2208, label %2199, !llvm.loop !25

2208:                                             ; preds = %2196, %2199, %2166
  br i1 %1821, label %2240, label %2209

2209:                                             ; preds = %2208, %2209
  %2210 = phi i64 [ %2237, %2209 ], [ 0, %2208 ]
  %2211 = phi i64 [ %2238, %2209 ], [ %1822, %2208 ]
  %2212 = getelementptr inbounds i8, i8* %1781, i64 %2210
  %2213 = load i8, i8* %2212, align 1
  %2214 = zext i8 %2213 to i64
  %2215 = getelementptr inbounds i16, i16* %1447, i64 %2210
  %2216 = load i16, i16* %2215, align 2
  %2217 = zext i16 %2216 to i64
  %2218 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2214, i32 0, i64 %2217
  %2219 = load i32, i32* %2218, align 4
  %2220 = add i32 %2219, 1
  store i32 %2220, i32* %2218, align 4
  %2221 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2214, i32 1
  %2222 = load i64, i64* %2221, align 8
  %2223 = add i64 %2222, 1
  store i64 %2223, i64* %2221, align 8
  %2224 = or i64 %2210, 1
  %2225 = getelementptr inbounds i8, i8* %1781, i64 %2224
  %2226 = load i8, i8* %2225, align 1
  %2227 = zext i8 %2226 to i64
  %2228 = getelementptr inbounds i16, i16* %1447, i64 %2224
  %2229 = load i16, i16* %2228, align 2
  %2230 = zext i16 %2229 to i64
  %2231 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2227, i32 0, i64 %2230
  %2232 = load i32, i32* %2231, align 4
  %2233 = add i32 %2232, 1
  store i32 %2233, i32* %2231, align 4
  %2234 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2227, i32 1
  %2235 = load i64, i64* %2234, align 8
  %2236 = add i64 %2235, 1
  store i64 %2236, i64* %2234, align 8
  %2237 = add nuw i64 %2210, 2
  %2238 = add i64 %2211, -2
  %2239 = icmp eq i64 %2238, 0
  br i1 %2239, label %2240, label %2209

2240:                                             ; preds = %2209, %2208
  %2241 = phi i64 [ 0, %2208 ], [ %2237, %2209 ]
  br i1 %1823, label %2255, label %2242

2242:                                             ; preds = %2240
  %2243 = getelementptr inbounds i8, i8* %1781, i64 %2241
  %2244 = load i8, i8* %2243, align 1
  %2245 = zext i8 %2244 to i64
  %2246 = getelementptr inbounds i16, i16* %1447, i64 %2241
  %2247 = load i16, i16* %2246, align 2
  %2248 = zext i16 %2247 to i64
  %2249 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2245, i32 0, i64 %2248
  %2250 = load i32, i32* %2249, align 4
  %2251 = add i32 %2250, 1
  store i32 %2251, i32* %2249, align 4
  %2252 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %1576, i64 %2245, i32 1
  %2253 = load i64, i64* %2252, align 8
  %2254 = add i64 %2253, 1
  store i64 %2254, i64* %2252, align 8
  br label %2255

2255:                                             ; preds = %2240, %2242
  %2256 = add nuw nsw i64 %1825, 1
  %2257 = icmp eq i64 %2256, %1808
  br i1 %2257, label %2258, label %1824

2258:                                             ; preds = %2255
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1791) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1794) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1801) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1803) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1575) #5
  %2259 = icmp eq i64 %2002, 0
  br i1 %2259, label %2272, label %2260

2260:                                             ; preds = %2258
  %2261 = shl i64 %2002, 2
  %2262 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2261) #5
  %2263 = bitcast i8* %2262 to i32*
  %2264 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2261) #5
  %2265 = bitcast i8* %2264 to i32*
  %2266 = shl i64 %2002, 4
  %2267 = add i64 %2266, 1008
  %2268 = lshr i64 %2267, 6
  %2269 = icmp eq i64 %2268, 0
  br i1 %2269, label %2284, label %2270

2270:                                             ; preds = %2260
  %2271 = mul i64 %2268, 2832
  br label %2272

2272:                                             ; preds = %2258, %2270
  %2273 = phi i64 [ %2271, %2270 ], [ 42480, %2258 ]
  %2274 = phi i32* [ %2263, %2270 ], [ null, %2258 ]
  %2275 = phi i8* [ %2262, %2270 ], [ null, %2258 ]
  %2276 = phi i8* [ %2264, %2270 ], [ null, %2258 ]
  %2277 = phi i32* [ %2265, %2270 ], [ null, %2258 ]
  %2278 = phi i64 [ %2268, %2270 ], [ 15, %2258 ]
  %2279 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2273) #5
  %2280 = bitcast i8* %2279 to %struct.HistogramCommand*
  %2281 = shl nuw nsw i64 %2278, 2
  %2282 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2281) #5
  %2283 = bitcast i8* %2282 to i32*
  br label %2284

2284:                                             ; preds = %2272, %2260
  %2285 = phi %struct.HistogramCommand* [ %2280, %2272 ], [ null, %2260 ]
  %2286 = phi i8* [ %2279, %2272 ], [ null, %2260 ]
  %2287 = phi i32* [ %2274, %2272 ], [ %2263, %2260 ]
  %2288 = phi i8* [ %2275, %2272 ], [ %2262, %2260 ]
  %2289 = phi i8* [ %2276, %2272 ], [ %2264, %2260 ]
  %2290 = phi i32* [ %2277, %2272 ], [ %2265, %2260 ]
  %2291 = phi i64 [ %2278, %2272 ], [ 0, %2260 ]
  %2292 = phi i8* [ %2282, %2272 ], [ null, %2260 ]
  %2293 = phi i32* [ %2283, %2272 ], [ null, %2260 ]
  %2294 = icmp ult i64 %2002, 64
  %2295 = select i1 %2294, i64 %2002, i64 64
  %2296 = icmp eq i64 %2295, 0
  br i1 %2296, label %2301, label %2297

2297:                                             ; preds = %2284
  %2298 = mul nuw nsw i64 %2295, 2832
  %2299 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2298) #5
  %2300 = bitcast i8* %2299 to %struct.HistogramCommand*
  br label %2301

2301:                                             ; preds = %2297, %2284
  %2302 = phi i8* [ %2299, %2297 ], [ null, %2284 ]
  %2303 = phi %struct.HistogramCommand* [ %2300, %2297 ], [ null, %2284 ]
  %2304 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 49176) #5
  %2305 = bitcast [64 x i32]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %2305) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2305, i8 0, i64 256, i1 false) #5
  %2306 = bitcast [64 x i32]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %2306) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2306, i8 0, i64 256, i1 false) #5
  %2307 = bitcast [64 x i32]* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %2307) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2307, i8 0, i64 256, i1 false) #5
  %2308 = bitcast [64 x i32]* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %2308) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2308, i8 0, i64 256, i1 false) #5
  %2309 = shl i64 %2002, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %2289, i8 0, i64 %2309, i1 false) #5
  %2310 = and i64 %2, 1
  %2311 = icmp eq i64 %2, 1
  br i1 %2311, label %2314, label %2312

2312:                                             ; preds = %2301
  %2313 = sub i64 %2, %2310
  br label %2327

2314:                                             ; preds = %4207, %2301
  %2315 = phi i64 [ 0, %2301 ], [ %4208, %4207 ]
  %2316 = icmp eq i64 %2310, 0
  br i1 %2316, label %2321, label %2317

2317:                                             ; preds = %2314
  %2318 = getelementptr inbounds i32, i32* %2290, i64 %2315
  %2319 = load i32, i32* %2318, align 4
  %2320 = add i32 %2319, 1
  store i32 %2320, i32* %2318, align 4
  br label %2321

2321:                                             ; preds = %2317, %2314
  %2322 = bitcast i8* %2304 to %struct.HistogramPair*
  br i1 %2259, label %2534, label %2323

2323:                                             ; preds = %2321
  %2324 = getelementptr inbounds [64 x i32], [64 x i32]* %16, i64 0, i64 0
  %2325 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 0
  %2326 = getelementptr inbounds [64 x i32], [64 x i32]* %17, i64 0, i64 0
  br label %2351

2327:                                             ; preds = %4207, %2312
  %2328 = phi i64 [ 0, %2312 ], [ %4208, %4207 ]
  %2329 = phi i64 [ 0, %2312 ], [ %2349, %4207 ]
  %2330 = phi i64 [ %2313, %2312 ], [ %4209, %4207 ]
  %2331 = getelementptr inbounds i32, i32* %2290, i64 %2328
  %2332 = load i32, i32* %2331, align 4
  %2333 = add i32 %2332, 1
  store i32 %2333, i32* %2331, align 4
  %2334 = or i64 %2329, 1
  %2335 = icmp eq i64 %2334, %2
  br i1 %2335, label %2342, label %2336

2336:                                             ; preds = %2327
  %2337 = getelementptr inbounds i8, i8* %1781, i64 %2329
  %2338 = load i8, i8* %2337, align 1
  %2339 = getelementptr inbounds i8, i8* %1781, i64 %2334
  %2340 = load i8, i8* %2339, align 1
  %2341 = icmp eq i8 %2338, %2340
  br i1 %2341, label %2344, label %2342

2342:                                             ; preds = %2336, %2327
  %2343 = add i64 %2328, 1
  br label %2344

2344:                                             ; preds = %2342, %2336
  %2345 = phi i64 [ %2343, %2342 ], [ %2328, %2336 ]
  %2346 = getelementptr inbounds i32, i32* %2290, i64 %2345
  %2347 = load i32, i32* %2346, align 4
  %2348 = add i32 %2347, 1
  store i32 %2348, i32* %2346, align 4
  %2349 = add nuw i64 %2329, 2
  %2350 = icmp eq i64 %2349, %2
  br i1 %2350, label %4205, label %4199

2351:                                             ; preds = %2529, %2323
  %2352 = phi i64 [ %2533, %2529 ], [ 0, %2323 ]
  %2353 = phi i64 [ %2531, %2529 ], [ 0, %2323 ]
  %2354 = phi i64 [ %2410, %2529 ], [ 0, %2323 ]
  %2355 = phi i64 [ %2530, %2529 ], [ 0, %2323 ]
  %2356 = phi i32* [ %2461, %2529 ], [ %2293, %2323 ]
  %2357 = phi i8* [ %2460, %2529 ], [ %2292, %2323 ]
  %2358 = phi i64 [ %2459, %2529 ], [ %2291, %2323 ]
  %2359 = phi i64 [ %2465, %2529 ], [ 0, %2323 ]
  %2360 = phi %struct.HistogramCommand* [ %2436, %2529 ], [ %2285, %2323 ]
  %2361 = phi i8* [ %2435, %2529 ], [ %2286, %2323 ]
  %2362 = phi i64 [ %2434, %2529 ], [ %2291, %2323 ]
  %2363 = phi i64 [ %2464, %2529 ], [ 0, %2323 ]
  %2364 = mul i64 %2352, -64
  %2365 = add i64 %2002, %2364
  %2366 = icmp ult i64 %2365, 64
  %2367 = select i1 %2366, i64 %2365, i64 64
  %2368 = sub i64 %2002, %2353
  %2369 = icmp ult i64 %2368, 64
  %2370 = select i1 %2369, i64 %2368, i64 64
  %2371 = icmp eq i64 %2370, 0
  br i1 %2371, label %2409, label %2372

2372:                                             ; preds = %2351, %2400
  %2373 = phi i64 [ %2407, %2400 ], [ 0, %2351 ]
  %2374 = phi i64 [ %2401, %2400 ], [ %2354, %2351 ]
  %2375 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %2303, i64 %2373
  %2376 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %2303, i64 %2373, i32 2
  %2377 = bitcast %struct.HistogramCommand* %2375 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2377, i8 0, i64 2824, i1 false) #5
  store double 0x7FF0000000000000, double* %2376, align 8
  %2378 = add i64 %2373, %2353
  %2379 = getelementptr inbounds i32, i32* %2290, i64 %2378
  %2380 = load i32, i32* %2379, align 4
  %2381 = icmp eq i32 %2380, 0
  br i1 %2381, label %2400, label %2382

2382:                                             ; preds = %2372
  %2383 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %2303, i64 %2373, i32 1
  br label %2384

2384:                                             ; preds = %2384, %2382
  %2385 = phi i64 [ 0, %2382 ], [ %2396, %2384 ]
  %2386 = phi i64 [ %2374, %2382 ], [ %2387, %2384 ]
  %2387 = add i64 %2386, 1
  %2388 = getelementptr inbounds i16, i16* %1447, i64 %2386
  %2389 = load i16, i16* %2388, align 2
  %2390 = zext i16 %2389 to i64
  %2391 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %2303, i64 %2373, i32 0, i64 %2390
  %2392 = load i32, i32* %2391, align 4
  %2393 = add i32 %2392, 1
  store i32 %2393, i32* %2391, align 4
  %2394 = load i64, i64* %2383, align 8
  %2395 = add i64 %2394, 1
  store i64 %2395, i64* %2383, align 8
  %2396 = add nuw nsw i64 %2385, 1
  %2397 = load i32, i32* %2379, align 4
  %2398 = zext i32 %2397 to i64
  %2399 = icmp ult i64 %2396, %2398
  br i1 %2399, label %2384, label %2400

2400:                                             ; preds = %2384, %2372
  %2401 = phi i64 [ %2374, %2372 ], [ %2387, %2384 ]
  %2402 = call double @BrotliPopulationCostCommand(%struct.HistogramCommand* %2375) #5
  store double %2402, double* %2376, align 8
  %2403 = trunc i64 %2373 to i32
  %2404 = getelementptr inbounds [64 x i32], [64 x i32]* %17, i64 0, i64 %2373
  store i32 %2403, i32* %2404, align 4
  %2405 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 %2373
  store i32 %2403, i32* %2405, align 4
  %2406 = getelementptr inbounds [64 x i32], [64 x i32]* %16, i64 0, i64 %2373
  store i32 1, i32* %2406, align 4
  %2407 = add nuw i64 %2373, 1
  %2408 = icmp ult i64 %2407, %2370
  br i1 %2408, label %2372, label %2409

2409:                                             ; preds = %2400, %2351
  %2410 = phi i64 [ %2354, %2351 ], [ %2401, %2400 ]
  %2411 = call i64 @BrotliHistogramCombineCommand(%struct.HistogramCommand* %2303, i32* nonnull %2324, i32* nonnull %2325, i32* nonnull %2326, %struct.HistogramPair* %2322, i64 %2370, i64 %2370, i64 64, i64 2048) #5
  %2412 = add i64 %2411, %2363
  %2413 = icmp ult i64 %2362, %2412
  br i1 %2413, label %2414, label %2433

2414:                                             ; preds = %2409
  %2415 = icmp eq i64 %2362, 0
  %2416 = select i1 %2415, i64 %2412, i64 %2362
  br label %2417

2417:                                             ; preds = %2417, %2414
  %2418 = phi i64 [ %2416, %2414 ], [ %2420, %2417 ]
  %2419 = icmp ult i64 %2418, %2412
  %2420 = shl i64 %2418, 1
  br i1 %2419, label %2417, label %2421

2421:                                             ; preds = %2417
  %2422 = icmp eq i64 %2418, 0
  br i1 %2422, label %2427, label %2423

2423:                                             ; preds = %2421
  %2424 = mul i64 %2418, 2832
  %2425 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2424) #5
  %2426 = bitcast i8* %2425 to %struct.HistogramCommand*
  br label %2427

2427:                                             ; preds = %2423, %2421
  %2428 = phi i8* [ %2425, %2423 ], [ null, %2421 ]
  %2429 = phi %struct.HistogramCommand* [ %2426, %2423 ], [ null, %2421 ]
  br i1 %2415, label %2432, label %2430

2430:                                             ; preds = %2427
  %2431 = mul i64 %2362, 2832
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2428, i8* align 8 %2361, i64 %2431, i1 false) #5
  br label %2432

2432:                                             ; preds = %2430, %2427
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2361) #5
  br label %2433

2433:                                             ; preds = %2432, %2409
  %2434 = phi i64 [ %2418, %2432 ], [ %2362, %2409 ]
  %2435 = phi i8* [ %2428, %2432 ], [ %2361, %2409 ]
  %2436 = phi %struct.HistogramCommand* [ %2429, %2432 ], [ %2360, %2409 ]
  %2437 = add i64 %2411, %2359
  %2438 = icmp ult i64 %2358, %2437
  br i1 %2438, label %2439, label %2458

2439:                                             ; preds = %2433
  %2440 = icmp eq i64 %2358, 0
  %2441 = select i1 %2440, i64 %2437, i64 %2358
  br label %2442

2442:                                             ; preds = %2442, %2439
  %2443 = phi i64 [ %2441, %2439 ], [ %2445, %2442 ]
  %2444 = icmp ult i64 %2443, %2437
  %2445 = shl i64 %2443, 1
  br i1 %2444, label %2442, label %2446

2446:                                             ; preds = %2442
  %2447 = icmp eq i64 %2443, 0
  br i1 %2447, label %2452, label %2448

2448:                                             ; preds = %2446
  %2449 = shl i64 %2443, 2
  %2450 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2449) #5
  %2451 = bitcast i8* %2450 to i32*
  br label %2452

2452:                                             ; preds = %2448, %2446
  %2453 = phi i8* [ %2450, %2448 ], [ null, %2446 ]
  %2454 = phi i32* [ %2451, %2448 ], [ null, %2446 ]
  br i1 %2440, label %2457, label %2455

2455:                                             ; preds = %2452
  %2456 = shl i64 %2358, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2453, i8* align 4 %2357, i64 %2456, i1 false) #5
  br label %2457

2457:                                             ; preds = %2455, %2452
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2357) #5
  br label %2458

2458:                                             ; preds = %2457, %2433
  %2459 = phi i64 [ %2443, %2457 ], [ %2358, %2433 ]
  %2460 = phi i8* [ %2453, %2457 ], [ %2357, %2433 ]
  %2461 = phi i32* [ %2454, %2457 ], [ %2356, %2433 ]
  %2462 = icmp eq i64 %2411, 0
  br i1 %2462, label %2463, label %2472

2463:                                             ; preds = %2472, %2458
  %2464 = phi i64 [ %2363, %2458 ], [ %2476, %2472 ]
  %2465 = phi i64 [ %2359, %2458 ], [ %2486, %2472 ]
  br i1 %2371, label %2529, label %2466

2466:                                             ; preds = %2463
  %2467 = trunc i64 %2355 to i32
  %2468 = and i64 %2367, 1
  %2469 = icmp eq i64 %2367, 1
  br i1 %2469, label %2517, label %2470

2470:                                             ; preds = %2466
  %2471 = sub nsw i64 %2367, %2468
  br label %2494

2472:                                             ; preds = %2458, %2472
  %2473 = phi i64 [ %2492, %2472 ], [ 0, %2458 ]
  %2474 = phi i64 [ %2486, %2472 ], [ %2359, %2458 ]
  %2475 = phi i64 [ %2476, %2472 ], [ %2363, %2458 ]
  %2476 = add i64 %2475, 1
  %2477 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %2436, i64 %2475
  %2478 = getelementptr inbounds [64 x i32], [64 x i32]* %17, i64 0, i64 %2473
  %2479 = load i32, i32* %2478, align 4
  %2480 = zext i32 %2479 to i64
  %2481 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %2303, i64 %2480
  %2482 = bitcast %struct.HistogramCommand* %2477 to i8*
  %2483 = bitcast %struct.HistogramCommand* %2481 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2482, i8* align 8 %2483, i64 2832, i1 false) #5
  %2484 = getelementptr inbounds [64 x i32], [64 x i32]* %16, i64 0, i64 %2480
  %2485 = load i32, i32* %2484, align 4
  %2486 = add i64 %2474, 1
  %2487 = getelementptr inbounds i32, i32* %2461, i64 %2474
  store i32 %2485, i32* %2487, align 4
  %2488 = trunc i64 %2473 to i32
  %2489 = load i32, i32* %2478, align 4
  %2490 = zext i32 %2489 to i64
  %2491 = getelementptr inbounds [64 x i32], [64 x i32]* %19, i64 0, i64 %2490
  store i32 %2488, i32* %2491, align 4
  %2492 = add nuw i64 %2473, 1
  %2493 = icmp eq i64 %2492, %2411
  br i1 %2493, label %2463, label %2472

2494:                                             ; preds = %2494, %2470
  %2495 = phi i64 [ 0, %2470 ], [ %2514, %2494 ]
  %2496 = phi i64 [ %2471, %2470 ], [ %2515, %2494 ]
  %2497 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 %2495
  %2498 = load i32, i32* %2497, align 8
  %2499 = zext i32 %2498 to i64
  %2500 = getelementptr inbounds [64 x i32], [64 x i32]* %19, i64 0, i64 %2499
  %2501 = load i32, i32* %2500, align 4
  %2502 = add i32 %2501, %2467
  %2503 = add i64 %2495, %2353
  %2504 = getelementptr inbounds i32, i32* %2287, i64 %2503
  store i32 %2502, i32* %2504, align 4
  %2505 = or i64 %2495, 1
  %2506 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 %2505
  %2507 = load i32, i32* %2506, align 4
  %2508 = zext i32 %2507 to i64
  %2509 = getelementptr inbounds [64 x i32], [64 x i32]* %19, i64 0, i64 %2508
  %2510 = load i32, i32* %2509, align 4
  %2511 = add i32 %2510, %2467
  %2512 = add i64 %2505, %2353
  %2513 = getelementptr inbounds i32, i32* %2287, i64 %2512
  store i32 %2511, i32* %2513, align 4
  %2514 = add nuw i64 %2495, 2
  %2515 = add i64 %2496, -2
  %2516 = icmp eq i64 %2515, 0
  br i1 %2516, label %2517, label %2494

2517:                                             ; preds = %2494, %2466
  %2518 = phi i64 [ 0, %2466 ], [ %2514, %2494 ]
  %2519 = icmp eq i64 %2468, 0
  br i1 %2519, label %2529, label %2520

2520:                                             ; preds = %2517
  %2521 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 %2518
  %2522 = load i32, i32* %2521, align 4
  %2523 = zext i32 %2522 to i64
  %2524 = getelementptr inbounds [64 x i32], [64 x i32]* %19, i64 0, i64 %2523
  %2525 = load i32, i32* %2524, align 4
  %2526 = add i32 %2525, %2467
  %2527 = add i64 %2518, %2353
  %2528 = getelementptr inbounds i32, i32* %2287, i64 %2527
  store i32 %2526, i32* %2528, align 4
  br label %2529

2529:                                             ; preds = %2520, %2517, %2463
  %2530 = add i64 %2411, %2355
  %2531 = add i64 %2353, 64
  %2532 = icmp ult i64 %2531, %2002
  %2533 = add i64 %2352, 1
  br i1 %2532, label %2351, label %2534

2534:                                             ; preds = %2529, %2321
  %2535 = phi i8* [ %2286, %2321 ], [ %2435, %2529 ]
  %2536 = phi %struct.HistogramCommand* [ %2285, %2321 ], [ %2436, %2529 ]
  %2537 = phi i8* [ %2292, %2321 ], [ %2460, %2529 ]
  %2538 = phi i32* [ %2293, %2321 ], [ %2461, %2529 ]
  %2539 = phi i64 [ 0, %2321 ], [ %2530, %2529 ]
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2302) #5
  %2540 = shl i64 %2539, 6
  %2541 = lshr i64 %2539, 1
  %2542 = mul i64 %2541, %2539
  %2543 = icmp ult i64 %2540, %2542
  %2544 = select i1 %2543, i64 %2540, i64 %2542
  %2545 = add i64 %2544, 1
  %2546 = icmp ugt i64 %2545, 2049
  br i1 %2546, label %2547, label %2551

2547:                                             ; preds = %2534
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2304) #5
  %2548 = mul i64 %2545, 24
  %2549 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2548) #5
  %2550 = bitcast i8* %2549 to %struct.HistogramPair*
  br label %2551

2551:                                             ; preds = %2547, %2534
  %2552 = phi i8* [ %2549, %2547 ], [ %2304, %2534 ]
  %2553 = phi %struct.HistogramPair* [ %2550, %2547 ], [ %2322, %2534 ]
  %2554 = icmp ne i64 %2539, 0
  br i1 %2554, label %2555, label %2630

2555:                                             ; preds = %2551
  %2556 = shl i64 %2539, 2
  %2557 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2556) #5
  %2558 = bitcast i8* %2557 to i32*
  %2559 = icmp ult i64 %2539, 8
  br i1 %2559, label %2622, label %2560

2560:                                             ; preds = %2555
  %2561 = and i64 %2539, -8
  %2562 = add i64 %2561, -8
  %2563 = lshr exact i64 %2562, 3
  %2564 = add nuw nsw i64 %2563, 1
  %2565 = and i64 %2564, 3
  %2566 = icmp ult i64 %2562, 24
  br i1 %2566, label %2603, label %2567

2567:                                             ; preds = %2560
  %2568 = sub nsw i64 %2564, %2565
  br label %2569

2569:                                             ; preds = %2569, %2567
  %2570 = phi i64 [ 0, %2567 ], [ %2599, %2569 ]
  %2571 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %2567 ], [ %2600, %2569 ]
  %2572 = phi i64 [ %2568, %2567 ], [ %2601, %2569 ]
  %2573 = add <4 x i32> %2571, <i32 4, i32 4, i32 4, i32 4>
  %2574 = getelementptr inbounds i32, i32* %2558, i64 %2570
  %2575 = bitcast i32* %2574 to <4 x i32>*
  store <4 x i32> %2571, <4 x i32>* %2575, align 4
  %2576 = getelementptr inbounds i32, i32* %2574, i64 4
  %2577 = bitcast i32* %2576 to <4 x i32>*
  store <4 x i32> %2573, <4 x i32>* %2577, align 4
  %2578 = or i64 %2570, 8
  %2579 = add <4 x i32> %2571, <i32 8, i32 8, i32 8, i32 8>
  %2580 = add <4 x i32> %2571, <i32 12, i32 12, i32 12, i32 12>
  %2581 = getelementptr inbounds i32, i32* %2558, i64 %2578
  %2582 = bitcast i32* %2581 to <4 x i32>*
  store <4 x i32> %2579, <4 x i32>* %2582, align 4
  %2583 = getelementptr inbounds i32, i32* %2581, i64 4
  %2584 = bitcast i32* %2583 to <4 x i32>*
  store <4 x i32> %2580, <4 x i32>* %2584, align 4
  %2585 = or i64 %2570, 16
  %2586 = add <4 x i32> %2571, <i32 16, i32 16, i32 16, i32 16>
  %2587 = add <4 x i32> %2571, <i32 20, i32 20, i32 20, i32 20>
  %2588 = getelementptr inbounds i32, i32* %2558, i64 %2585
  %2589 = bitcast i32* %2588 to <4 x i32>*
  store <4 x i32> %2586, <4 x i32>* %2589, align 4
  %2590 = getelementptr inbounds i32, i32* %2588, i64 4
  %2591 = bitcast i32* %2590 to <4 x i32>*
  store <4 x i32> %2587, <4 x i32>* %2591, align 4
  %2592 = or i64 %2570, 24
  %2593 = add <4 x i32> %2571, <i32 24, i32 24, i32 24, i32 24>
  %2594 = add <4 x i32> %2571, <i32 28, i32 28, i32 28, i32 28>
  %2595 = getelementptr inbounds i32, i32* %2558, i64 %2592
  %2596 = bitcast i32* %2595 to <4 x i32>*
  store <4 x i32> %2593, <4 x i32>* %2596, align 4
  %2597 = getelementptr inbounds i32, i32* %2595, i64 4
  %2598 = bitcast i32* %2597 to <4 x i32>*
  store <4 x i32> %2594, <4 x i32>* %2598, align 4
  %2599 = add i64 %2570, 32
  %2600 = add <4 x i32> %2571, <i32 32, i32 32, i32 32, i32 32>
  %2601 = add i64 %2572, -4
  %2602 = icmp eq i64 %2601, 0
  br i1 %2602, label %2603, label %2569, !llvm.loop !26

2603:                                             ; preds = %2569, %2560
  %2604 = phi i64 [ 0, %2560 ], [ %2599, %2569 ]
  %2605 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %2560 ], [ %2600, %2569 ]
  %2606 = icmp eq i64 %2565, 0
  br i1 %2606, label %2620, label %2607

2607:                                             ; preds = %2603, %2607
  %2608 = phi i64 [ %2616, %2607 ], [ %2604, %2603 ]
  %2609 = phi <4 x i32> [ %2617, %2607 ], [ %2605, %2603 ]
  %2610 = phi i64 [ %2618, %2607 ], [ %2565, %2603 ]
  %2611 = add <4 x i32> %2609, <i32 4, i32 4, i32 4, i32 4>
  %2612 = getelementptr inbounds i32, i32* %2558, i64 %2608
  %2613 = bitcast i32* %2612 to <4 x i32>*
  store <4 x i32> %2609, <4 x i32>* %2613, align 4
  %2614 = getelementptr inbounds i32, i32* %2612, i64 4
  %2615 = bitcast i32* %2614 to <4 x i32>*
  store <4 x i32> %2611, <4 x i32>* %2615, align 4
  %2616 = add i64 %2608, 8
  %2617 = add <4 x i32> %2609, <i32 8, i32 8, i32 8, i32 8>
  %2618 = add i64 %2610, -1
  %2619 = icmp eq i64 %2618, 0
  br i1 %2619, label %2620, label %2607, !llvm.loop !27

2620:                                             ; preds = %2607, %2603
  %2621 = icmp eq i64 %2539, %2561
  br i1 %2621, label %2630, label %2622

2622:                                             ; preds = %2620, %2555
  %2623 = phi i64 [ 0, %2555 ], [ %2561, %2620 ]
  br label %2624

2624:                                             ; preds = %2622, %2624
  %2625 = phi i64 [ %2628, %2624 ], [ %2623, %2622 ]
  %2626 = trunc i64 %2625 to i32
  %2627 = getelementptr inbounds i32, i32* %2558, i64 %2625
  store i32 %2626, i32* %2627, align 4
  %2628 = add nuw i64 %2625, 1
  %2629 = icmp eq i64 %2628, %2539
  br i1 %2629, label %2630, label %2624, !llvm.loop !28

2630:                                             ; preds = %2624, %2620, %2551
  %2631 = phi i1 [ true, %2551 ], [ false, %2620 ], [ false, %2624 ]
  %2632 = phi i32* [ null, %2551 ], [ %2558, %2620 ], [ %2558, %2624 ]
  %2633 = phi i8* [ null, %2551 ], [ %2557, %2620 ], [ %2557, %2624 ]
  %2634 = call i64 @BrotliHistogramCombineCommand(%struct.HistogramCommand* %2536, i32* %2538, i32* %2287, i32* %2632, %struct.HistogramPair* %2553, i64 %2539, i64 %2002, i64 256, i64 %2544) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2552) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2537) #5
  br i1 %2554, label %2635, label %2639

2635:                                             ; preds = %2630
  %2636 = shl i64 %2539, 2
  %2637 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2636) #5
  %2638 = bitcast i8* %2637 to i32*
  br label %2639

2639:                                             ; preds = %2635, %2630
  %2640 = phi i8* [ %2637, %2635 ], [ null, %2630 ]
  %2641 = phi i32* [ %2638, %2635 ], [ null, %2630 ]
  br i1 %2631, label %2644, label %2642

2642:                                             ; preds = %2639
  %2643 = shl nuw i64 %2539, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %2640, i8 -1, i64 %2643, i1 false) #5
  br label %2644

2644:                                             ; preds = %2642, %2639
  br i1 %2259, label %2715, label %2645

2645:                                             ; preds = %2644
  %2646 = bitcast %struct.HistogramCommand* %12 to i8*
  %2647 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %12, i64 0, i32 2
  %2648 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %12, i64 0, i32 1
  %2649 = icmp eq i64 %2634, 0
  br label %2650

2650:                                             ; preds = %2711, %2645
  %2651 = phi i32 [ 0, %2645 ], [ %2712, %2711 ]
  %2652 = phi i64 [ 0, %2645 ], [ %2713, %2711 ]
  %2653 = phi i64 [ 0, %2645 ], [ %2674, %2711 ]
  call void @llvm.lifetime.start.p0i8(i64 2832, i8* nonnull %2646) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2646, i8 0, i64 2824, i1 false) #5
  store double 0x7FF0000000000000, double* %2647, align 8
  %2654 = getelementptr inbounds i32, i32* %2290, i64 %2652
  %2655 = load i32, i32* %2654, align 4
  %2656 = icmp eq i32 %2655, 0
  br i1 %2656, label %2673, label %2657

2657:                                             ; preds = %2650, %2657
  %2658 = phi i64 [ %2669, %2657 ], [ 0, %2650 ]
  %2659 = phi i64 [ %2660, %2657 ], [ %2653, %2650 ]
  %2660 = add i64 %2659, 1
  %2661 = getelementptr inbounds i16, i16* %1447, i64 %2659
  %2662 = load i16, i16* %2661, align 2
  %2663 = zext i16 %2662 to i64
  %2664 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %12, i64 0, i32 0, i64 %2663
  %2665 = load i32, i32* %2664, align 4
  %2666 = add i32 %2665, 1
  store i32 %2666, i32* %2664, align 4
  %2667 = load i64, i64* %2648, align 8
  %2668 = add i64 %2667, 1
  store i64 %2668, i64* %2648, align 8
  %2669 = add nuw nsw i64 %2658, 1
  %2670 = load i32, i32* %2654, align 4
  %2671 = zext i32 %2670 to i64
  %2672 = icmp ult i64 %2669, %2671
  br i1 %2672, label %2657, label %2673

2673:                                             ; preds = %2657, %2650
  %2674 = phi i64 [ %2653, %2650 ], [ %2660, %2657 ]
  %2675 = icmp eq i64 %2652, 0
  %2676 = add i64 %2652, -1
  %2677 = getelementptr inbounds i32, i32* %2287, i64 %2676
  %2678 = select i1 %2675, i32* %2287, i32* %2677
  %2679 = load i32, i32* %2678, align 4
  %2680 = zext i32 %2679 to i64
  %2681 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %2536, i64 %2680
  %2682 = call double @BrotliHistogramBitCostDistanceCommand(%struct.HistogramCommand* nonnull %12, %struct.HistogramCommand* %2681) #5
  br i1 %2649, label %2702, label %2683

2683:                                             ; preds = %2673, %2695
  %2684 = phi double [ %2697, %2695 ], [ %2682, %2673 ]
  %2685 = phi i32 [ %2696, %2695 ], [ %2679, %2673 ]
  %2686 = phi i64 [ %2698, %2695 ], [ 0, %2673 ]
  %2687 = getelementptr inbounds i32, i32* %2632, i64 %2686
  %2688 = load i32, i32* %2687, align 4
  %2689 = zext i32 %2688 to i64
  %2690 = getelementptr inbounds %struct.HistogramCommand, %struct.HistogramCommand* %2536, i64 %2689
  %2691 = call double @BrotliHistogramBitCostDistanceCommand(%struct.HistogramCommand* nonnull %12, %struct.HistogramCommand* %2690) #5
  %2692 = fcmp olt double %2691, %2684
  br i1 %2692, label %2693, label %2695

2693:                                             ; preds = %2683
  %2694 = load i32, i32* %2687, align 4
  br label %2695

2695:                                             ; preds = %2693, %2683
  %2696 = phi i32 [ %2694, %2693 ], [ %2685, %2683 ]
  %2697 = phi double [ %2691, %2693 ], [ %2684, %2683 ]
  %2698 = add nuw i64 %2686, 1
  %2699 = icmp eq i64 %2698, %2634
  br i1 %2699, label %2700, label %2683

2700:                                             ; preds = %2695
  %2701 = zext i32 %2696 to i64
  br label %2702

2702:                                             ; preds = %2700, %2673
  %2703 = phi i64 [ %2701, %2700 ], [ %2680, %2673 ]
  %2704 = phi i32 [ %2696, %2700 ], [ %2679, %2673 ]
  %2705 = getelementptr inbounds i32, i32* %2287, i64 %2652
  store i32 %2704, i32* %2705, align 4
  %2706 = getelementptr inbounds i32, i32* %2641, i64 %2703
  %2707 = load i32, i32* %2706, align 4
  %2708 = icmp eq i32 %2707, -1
  br i1 %2708, label %2709, label %2711

2709:                                             ; preds = %2702
  %2710 = add i32 %2651, 1
  store i32 %2651, i32* %2706, align 4
  br label %2711

2711:                                             ; preds = %2709, %2702
  %2712 = phi i32 [ %2710, %2709 ], [ %2651, %2702 ]
  call void @llvm.lifetime.end.p0i8(i64 2832, i8* nonnull %2646) #5
  %2713 = add nuw i64 %2652, 1
  %2714 = icmp eq i64 %2713, %2002
  br i1 %2714, label %2715, label %2650

2715:                                             ; preds = %2711, %2644
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2633) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2535) #5
  %2716 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 4
  %2717 = load i64, i64* %2716, align 8
  %2718 = icmp ult i64 %2717, %2002
  br i1 %2718, label %2719, label %2741

2719:                                             ; preds = %2715
  %2720 = icmp eq i64 %2717, 0
  %2721 = select i1 %2720, i64 %2002, i64 %2717
  br label %2722

2722:                                             ; preds = %2722, %2719
  %2723 = phi i64 [ %2721, %2719 ], [ %2725, %2722 ]
  %2724 = icmp ult i64 %2723, %2002
  %2725 = shl i64 %2723, 1
  br i1 %2724, label %2722, label %2726

2726:                                             ; preds = %2722
  %2727 = icmp eq i64 %2723, 0
  br i1 %2727, label %2731, label %2728

2728:                                             ; preds = %2726
  %2729 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2723) #5
  %2730 = load i64, i64* %2716, align 8
  br label %2731

2731:                                             ; preds = %2728, %2726
  %2732 = phi i64 [ %2730, %2728 ], [ %2717, %2726 ]
  %2733 = phi i8* [ %2729, %2728 ], [ null, %2726 ]
  %2734 = icmp eq i64 %2732, 0
  br i1 %2734, label %2738, label %2735

2735:                                             ; preds = %2731
  %2736 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 2
  %2737 = load i8*, i8** %2736, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2733, i8* align 1 %2737, i64 %2732, i1 false) #5
  br label %2738

2738:                                             ; preds = %2735, %2731
  %2739 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 2
  %2740 = load i8*, i8** %2739, align 8
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2740) #5
  store i8* %2733, i8** %2739, align 8
  store i64 %2723, i64* %2716, align 8
  br label %2741

2741:                                             ; preds = %2738, %2715
  %2742 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 5
  %2743 = load i64, i64* %2742, align 8
  %2744 = icmp ult i64 %2743, %2002
  br i1 %2744, label %2745, label %2771

2745:                                             ; preds = %2741
  %2746 = icmp eq i64 %2743, 0
  %2747 = select i1 %2746, i64 %2002, i64 %2743
  br label %2748

2748:                                             ; preds = %2748, %2745
  %2749 = phi i64 [ %2747, %2745 ], [ %2751, %2748 ]
  %2750 = icmp ult i64 %2749, %2002
  %2751 = shl i64 %2749, 1
  br i1 %2750, label %2748, label %2752

2752:                                             ; preds = %2748
  %2753 = icmp eq i64 %2749, 0
  br i1 %2753, label %2758, label %2754

2754:                                             ; preds = %2752
  %2755 = shl i64 %2749, 2
  %2756 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2755) #5
  %2757 = load i64, i64* %2742, align 8
  br label %2758

2758:                                             ; preds = %2754, %2752
  %2759 = phi i64 [ %2757, %2754 ], [ %2743, %2752 ]
  %2760 = phi i8* [ %2756, %2754 ], [ null, %2752 ]
  %2761 = icmp eq i64 %2759, 0
  br i1 %2761, label %2767, label %2762

2762:                                             ; preds = %2758
  %2763 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 3
  %2764 = bitcast i32** %2763 to i8**
  %2765 = load i8*, i8** %2764, align 8
  %2766 = shl i64 %2759, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2760, i8* align 4 %2765, i64 %2766, i1 false) #5
  br label %2767

2767:                                             ; preds = %2758, %2762
  %2768 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 3
  %2769 = bitcast i32** %2768 to i8**
  %2770 = load i8*, i8** %2769, align 8
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2770) #5
  store i8* %2760, i8** %2769, align 8
  store i64 %2749, i64* %2742, align 8
  br label %2771

2771:                                             ; preds = %2767, %2741
  br i1 %2259, label %2807, label %2772

2772:                                             ; preds = %2771
  %2773 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 2
  %2774 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 3
  br label %2775

2775:                                             ; preds = %2803, %2772
  %2776 = phi i8 [ 0, %2772 ], [ %2806, %2803 ]
  %2777 = phi i64 [ 0, %2772 ], [ %2805, %2803 ]
  %2778 = phi i32 [ 0, %2772 ], [ %2804, %2803 ]
  %2779 = phi i64 [ 0, %2772 ], [ %2783, %2803 ]
  %2780 = getelementptr inbounds i32, i32* %2290, i64 %2779
  %2781 = load i32, i32* %2780, align 4
  %2782 = add i32 %2781, %2778
  %2783 = add nuw i64 %2779, 1
  %2784 = icmp eq i64 %2783, %2002
  %2785 = getelementptr inbounds i32, i32* %2287, i64 %2779
  %2786 = load i32, i32* %2785, align 4
  br i1 %2784, label %2791, label %2787

2787:                                             ; preds = %2775
  %2788 = getelementptr inbounds i32, i32* %2287, i64 %2783
  %2789 = load i32, i32* %2788, align 4
  %2790 = icmp eq i32 %2786, %2789
  br i1 %2790, label %2803, label %2791

2791:                                             ; preds = %2787, %2775
  %2792 = zext i32 %2786 to i64
  %2793 = getelementptr inbounds i32, i32* %2641, i64 %2792
  %2794 = load i32, i32* %2793, align 4
  %2795 = trunc i32 %2794 to i8
  %2796 = load i8*, i8** %2773, align 8
  %2797 = getelementptr inbounds i8, i8* %2796, i64 %2777
  store i8 %2795, i8* %2797, align 1
  %2798 = load i32*, i32** %2774, align 8
  %2799 = getelementptr inbounds i32, i32* %2798, i64 %2777
  store i32 %2782, i32* %2799, align 4
  %2800 = icmp ugt i8 %2776, %2795
  %2801 = select i1 %2800, i8 %2776, i8 %2795
  %2802 = add i64 %2777, 1
  br label %2803

2803:                                             ; preds = %2791, %2787
  %2804 = phi i32 [ 0, %2791 ], [ %2782, %2787 ]
  %2805 = phi i64 [ %2802, %2791 ], [ %2777, %2787 ]
  %2806 = phi i8 [ %2801, %2791 ], [ %2776, %2787 ]
  br i1 %2784, label %2807, label %2775

2807:                                             ; preds = %2803, %2771
  %2808 = phi i64 [ 0, %2771 ], [ %2805, %2803 ]
  %2809 = phi i8 [ 0, %2771 ], [ %2806, %2803 ]
  %2810 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 1
  store i64 %2808, i64* %2810, align 8
  %2811 = zext i8 %2809 to i64
  %2812 = add nuw nsw i64 %2811, 1
  %2813 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %8, i64 0, i32 0
  store i64 %2812, i64* %2813, align 8
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2640) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2289) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2288) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %2308) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %2307) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %2306) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %2305) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1781) #5
  br label %2814

2814:                                             ; preds = %1492, %1560, %2807
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %1446) #5
  br i1 %1440, label %2815, label %2819

2815:                                             ; preds = %2814
  %2816 = shl i64 %2, 1
  %2817 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2816) #5
  %2818 = bitcast i8* %2817 to i16*
  br label %2819

2819:                                             ; preds = %2814, %2815
  %2820 = phi i8* [ %2817, %2815 ], [ null, %2814 ]
  %2821 = phi i16* [ %2818, %2815 ], [ null, %2814 ]
  br i1 %21, label %2849, label %2822

2822:                                             ; preds = %2819, %2839
  %2823 = phi i64 [ %2841, %2839 ], [ 0, %2819 ]
  %2824 = phi i64 [ %2840, %2839 ], [ 0, %2819 ]
  %2825 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %2823, i32 1
  %2826 = load i32, i32* %2825, align 4
  %2827 = and i32 %2826, 33554431
  %2828 = icmp eq i32 %2827, 0
  br i1 %2828, label %2839, label %2829

2829:                                             ; preds = %2822
  %2830 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %2823, i32 3
  %2831 = load i16, i16* %2830, align 4
  %2832 = icmp ugt i16 %2831, 127
  br i1 %2832, label %2833, label %2839

2833:                                             ; preds = %2829
  %2834 = getelementptr inbounds %struct.Command, %struct.Command* %1, i64 %2823, i32 4
  %2835 = load i16, i16* %2834, align 2
  %2836 = and i16 %2835, 1023
  %2837 = add i64 %2824, 1
  %2838 = getelementptr inbounds i16, i16* %2821, i64 %2824
  store i16 %2836, i16* %2838, align 2
  br label %2839

2839:                                             ; preds = %2822, %2833, %2829
  %2840 = phi i64 [ %2837, %2833 ], [ %2824, %2829 ], [ %2824, %2822 ]
  %2841 = add nuw i64 %2823, 1
  %2842 = icmp eq i64 %2841, %2
  br i1 %2842, label %2843, label %2822

2843:                                             ; preds = %2839
  %2844 = udiv i64 %2840, 544
  %2845 = add nuw nsw i64 %2844, 1
  %2846 = icmp ugt i64 %2840, 27199
  br i1 %2846, label %2930, label %2847

2847:                                             ; preds = %2843
  %2848 = icmp eq i64 %2840, 0
  br i1 %2848, label %2849, label %2851

2849:                                             ; preds = %2819, %2847
  %2850 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 0
  store i64 1, i64* %2850, align 8
  br label %4172

2851:                                             ; preds = %2847
  %2852 = icmp ult i64 %2840, 128
  br i1 %2852, label %2853, label %2930

2853:                                             ; preds = %2851
  %2854 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 4
  %2855 = load i64, i64* %2854, align 8
  %2856 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 1
  %2857 = load i64, i64* %2856, align 8
  %2858 = add i64 %2857, 1
  %2859 = icmp ult i64 %2855, %2858
  br i1 %2859, label %2860, label %2884

2860:                                             ; preds = %2853
  %2861 = icmp eq i64 %2855, 0
  %2862 = select i1 %2861, i64 %2858, i64 %2855
  br label %2863

2863:                                             ; preds = %2863, %2860
  %2864 = phi i64 [ %2862, %2860 ], [ %2866, %2863 ]
  %2865 = icmp ult i64 %2864, %2858
  %2866 = shl i64 %2864, 1
  br i1 %2865, label %2863, label %2867

2867:                                             ; preds = %2863
  %2868 = icmp eq i64 %2864, 0
  br i1 %2868, label %2872, label %2869

2869:                                             ; preds = %2867
  %2870 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2864) #5
  %2871 = load i64, i64* %2854, align 8
  br label %2872

2872:                                             ; preds = %2869, %2867
  %2873 = phi i64 [ %2871, %2869 ], [ %2855, %2867 ]
  %2874 = phi i8* [ %2870, %2869 ], [ null, %2867 ]
  %2875 = icmp eq i64 %2873, 0
  br i1 %2875, label %2879, label %2876

2876:                                             ; preds = %2872
  %2877 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 2
  %2878 = load i8*, i8** %2877, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2874, i8* align 1 %2878, i64 %2873, i1 false) #5
  br label %2879

2879:                                             ; preds = %2876, %2872
  %2880 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 2
  %2881 = load i8*, i8** %2880, align 8
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2881) #5
  store i8* %2874, i8** %2880, align 8
  store i64 %2864, i64* %2854, align 8
  %2882 = load i64, i64* %2856, align 8
  %2883 = add i64 %2882, 1
  br label %2884

2884:                                             ; preds = %2879, %2853
  %2885 = phi i64 [ %2883, %2879 ], [ %2858, %2853 ]
  %2886 = phi i64 [ %2882, %2879 ], [ %2857, %2853 ]
  %2887 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 5
  %2888 = load i64, i64* %2887, align 8
  %2889 = icmp ult i64 %2888, %2885
  br i1 %2889, label %2890, label %2917

2890:                                             ; preds = %2884
  %2891 = icmp eq i64 %2888, 0
  %2892 = select i1 %2891, i64 %2885, i64 %2888
  br label %2893

2893:                                             ; preds = %2893, %2890
  %2894 = phi i64 [ %2892, %2890 ], [ %2896, %2893 ]
  %2895 = icmp ult i64 %2894, %2885
  %2896 = shl i64 %2894, 1
  br i1 %2895, label %2893, label %2897

2897:                                             ; preds = %2893
  %2898 = icmp eq i64 %2894, 0
  br i1 %2898, label %2903, label %2899

2899:                                             ; preds = %2897
  %2900 = shl i64 %2894, 2
  %2901 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2900) #5
  %2902 = load i64, i64* %2887, align 8
  br label %2903

2903:                                             ; preds = %2899, %2897
  %2904 = phi i64 [ %2902, %2899 ], [ %2888, %2897 ]
  %2905 = phi i8* [ %2901, %2899 ], [ null, %2897 ]
  %2906 = icmp eq i64 %2904, 0
  br i1 %2906, label %2912, label %2907

2907:                                             ; preds = %2903
  %2908 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 3
  %2909 = bitcast i32** %2908 to i8**
  %2910 = load i8*, i8** %2909, align 8
  %2911 = shl i64 %2904, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2905, i8* align 4 %2910, i64 %2911, i1 false) #5
  br label %2912

2912:                                             ; preds = %2903, %2907
  %2913 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 3
  %2914 = bitcast i32** %2913 to i8**
  %2915 = load i8*, i8** %2914, align 8
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2915) #5
  store i8* %2905, i8** %2914, align 8
  store i64 %2894, i64* %2887, align 8
  %2916 = load i64, i64* %2856, align 8
  br label %2917

2917:                                             ; preds = %2912, %2884
  %2918 = phi i64 [ %2916, %2912 ], [ %2886, %2884 ]
  %2919 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 0
  store i64 1, i64* %2919, align 8
  %2920 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 2
  %2921 = load i8*, i8** %2920, align 8
  %2922 = getelementptr inbounds i8, i8* %2921, i64 %2918
  store i8 0, i8* %2922, align 1
  %2923 = trunc i64 %2840 to i32
  %2924 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 3
  %2925 = load i32*, i32** %2924, align 8
  %2926 = load i64, i64* %2856, align 8
  %2927 = getelementptr inbounds i32, i32* %2925, i64 %2926
  store i32 %2923, i32* %2927, align 4
  %2928 = load i64, i64* %2856, align 8
  %2929 = add i64 %2928, 1
  store i64 %2929, i64* %2856, align 8
  br label %4172

2930:                                             ; preds = %2843, %2851
  %2931 = phi i64 [ %2845, %2851 ], [ 50, %2843 ]
  %2932 = mul i64 %2931, 2192
  %2933 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2932) #5
  %2934 = bitcast i8* %2933 to %struct.HistogramDistance*
  %2935 = add nsw i64 %2931, -1
  %2936 = and i64 %2931, 3
  %2937 = icmp ult i64 %2935, 3
  br i1 %2937, label %2961, label %2938

2938:                                             ; preds = %2930
  %2939 = sub nsw i64 %2931, %2936
  br label %2940

2940:                                             ; preds = %2940, %2938
  %2941 = phi i64 [ 0, %2938 ], [ %2958, %2940 ]
  %2942 = phi i64 [ %2939, %2938 ], [ %2959, %2940 ]
  %2943 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %2941
  %2944 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %2941, i32 2
  %2945 = bitcast %struct.HistogramDistance* %2943 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2945, i8 0, i64 2184, i1 false) #5
  store double 0x7FF0000000000000, double* %2944, align 8
  %2946 = or i64 %2941, 1
  %2947 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %2946
  %2948 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %2946, i32 2
  %2949 = bitcast %struct.HistogramDistance* %2947 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2949, i8 0, i64 2184, i1 false) #5
  store double 0x7FF0000000000000, double* %2948, align 8
  %2950 = or i64 %2941, 2
  %2951 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %2950
  %2952 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %2950, i32 2
  %2953 = bitcast %struct.HistogramDistance* %2951 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2953, i8 0, i64 2184, i1 false) #5
  store double 0x7FF0000000000000, double* %2952, align 8
  %2954 = or i64 %2941, 3
  %2955 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %2954
  %2956 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %2954, i32 2
  %2957 = bitcast %struct.HistogramDistance* %2955 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2957, i8 0, i64 2184, i1 false) #5
  store double 0x7FF0000000000000, double* %2956, align 8
  %2958 = add nuw i64 %2941, 4
  %2959 = add i64 %2942, -4
  %2960 = icmp eq i64 %2959, 0
  br i1 %2960, label %2961, label %2940

2961:                                             ; preds = %2940, %2930
  %2962 = phi i64 [ 0, %2930 ], [ %2958, %2940 ]
  %2963 = icmp eq i64 %2936, 0
  br i1 %2963, label %2973, label %2964

2964:                                             ; preds = %2961, %2964
  %2965 = phi i64 [ %2970, %2964 ], [ %2962, %2961 ]
  %2966 = phi i64 [ %2971, %2964 ], [ %2936, %2961 ]
  %2967 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %2965
  %2968 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %2965, i32 2
  %2969 = bitcast %struct.HistogramDistance* %2967 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2969, i8 0, i64 2184, i1 false) #5
  store double 0x7FF0000000000000, double* %2968, align 8
  %2970 = add nuw i64 %2965, 1
  %2971 = add i64 %2966, -1
  %2972 = icmp eq i64 %2971, 0
  br i1 %2972, label %2973, label %2964, !llvm.loop !29

2973:                                             ; preds = %2964, %2961
  %2974 = udiv i64 %2840, %2931
  %2975 = add i64 %2840, -41
  br label %2976

2976:                                             ; preds = %3014, %2973
  %2977 = phi i64 [ 0, %2973 ], [ %3015, %3014 ]
  %2978 = phi i32 [ 7, %2973 ], [ %2988, %3014 ]
  %2979 = mul i64 %2977, %2840
  %2980 = udiv i64 %2979, %2931
  %2981 = icmp eq i64 %2977, 0
  br i1 %2981, label %2987, label %2982

2982:                                             ; preds = %2976
  %2983 = mul i32 %2978, 16807
  %2984 = zext i32 %2983 to i64
  %2985 = urem i64 %2984, %2974
  %2986 = add i64 %2985, %2980
  br label %2987

2987:                                             ; preds = %2982, %2976
  %2988 = phi i32 [ %2978, %2976 ], [ %2983, %2982 ]
  %2989 = phi i64 [ %2980, %2976 ], [ %2986, %2982 ]
  %2990 = add i64 %2989, 40
  %2991 = icmp ult i64 %2990, %2840
  %2992 = select i1 %2991, i64 %2989, i64 %2975
  %2993 = getelementptr inbounds i16, i16* %2821, i64 %2992
  %2994 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %2977, i32 1
  %2995 = load i64, i64* %2994, align 8
  %2996 = add i64 %2995, 40
  store i64 %2996, i64* %2994, align 8
  br label %2997

2997:                                             ; preds = %2997, %2987
  %2998 = phi i64 [ 40, %2987 ], [ %3012, %2997 ]
  %2999 = phi i16* [ %2993, %2987 ], [ %3006, %2997 ]
  %3000 = getelementptr inbounds i16, i16* %2999, i64 1
  %3001 = load i16, i16* %2999, align 2
  %3002 = zext i16 %3001 to i64
  %3003 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %2977, i32 0, i64 %3002
  %3004 = load i32, i32* %3003, align 4
  %3005 = add i32 %3004, 1
  store i32 %3005, i32* %3003, align 4
  %3006 = getelementptr inbounds i16, i16* %2999, i64 2
  %3007 = load i16, i16* %3000, align 2
  %3008 = zext i16 %3007 to i64
  %3009 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %2977, i32 0, i64 %3008
  %3010 = load i32, i32* %3009, align 4
  %3011 = add i32 %3010, 1
  store i32 %3011, i32* %3009, align 4
  %3012 = add nsw i64 %2998, -2
  %3013 = icmp eq i64 %3012, 0
  br i1 %3013, label %3014, label %2997

3014:                                             ; preds = %2997
  %3015 = add nuw i64 %2977, 1
  %3016 = icmp eq i64 %3015, %2931
  br i1 %3016, label %3017, label %2976

3017:                                             ; preds = %3014
  %3018 = shl i64 %2840, 1
  %3019 = udiv i64 %3018, 40
  %3020 = add nuw nsw i64 %3019, 99
  %3021 = add nuw nsw i64 %3020, %2931
  %3022 = urem i64 %3021, %2931
  %3023 = sub nsw i64 %3021, %3022
  %3024 = icmp eq i64 %3023, 0
  br i1 %3024, label %3138, label %3025

3025:                                             ; preds = %3017
  %3026 = bitcast %struct.HistogramDistance* %15 to i8*
  %3027 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %15, i64 0, i32 2
  %3028 = icmp ult i64 %2840, 41
  %3029 = add i64 %2840, -39
  %3030 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %15, i64 0, i32 1
  br label %3031

3031:                                             ; preds = %3135, %3025
  %3032 = phi i64 [ 0, %3025 ], [ %3136, %3135 ]
  %3033 = phi i32 [ 7, %3025 ], [ %3040, %3135 ]
  call void @llvm.lifetime.start.p0i8(i64 2192, i8* nonnull %3026) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3026, i8 0, i64 2184, i1 false) #5
  store double 0x7FF0000000000000, double* %3027, align 8
  br i1 %3028, label %3038, label %3034

3034:                                             ; preds = %3031
  %3035 = mul i32 %3033, 16807
  %3036 = zext i32 %3035 to i64
  %3037 = urem i64 %3036, %3029
  br label %3038

3038:                                             ; preds = %3034, %3031
  %3039 = phi i64 [ 40, %3034 ], [ %2840, %3031 ]
  %3040 = phi i32 [ %3035, %3034 ], [ %3033, %3031 ]
  %3041 = phi i64 [ %3037, %3034 ], [ 0, %3031 ]
  store i64 %3039, i64* %3030, align 8
  %3042 = getelementptr inbounds i16, i16* %2821, i64 %3041
  %3043 = add i64 %3039, -1
  %3044 = and i64 %3039, 3
  %3045 = icmp eq i64 %3044, 0
  br i1 %3045, label %3059, label %3046

3046:                                             ; preds = %3038, %3046
  %3047 = phi i64 [ %3056, %3046 ], [ %3039, %3038 ]
  %3048 = phi i16* [ %3050, %3046 ], [ %3042, %3038 ]
  %3049 = phi i64 [ %3057, %3046 ], [ %3044, %3038 ]
  %3050 = getelementptr inbounds i16, i16* %3048, i64 1
  %3051 = load i16, i16* %3048, align 2
  %3052 = zext i16 %3051 to i64
  %3053 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %15, i64 0, i32 0, i64 %3052
  %3054 = load i32, i32* %3053, align 4
  %3055 = add i32 %3054, 1
  store i32 %3055, i32* %3053, align 4
  %3056 = add i64 %3047, -1
  %3057 = add i64 %3049, -1
  %3058 = icmp eq i64 %3057, 0
  br i1 %3058, label %3059, label %3046, !llvm.loop !30

3059:                                             ; preds = %3046, %3038
  %3060 = phi i64 [ %3039, %3038 ], [ %3056, %3046 ]
  %3061 = phi i16* [ %3042, %3038 ], [ %3050, %3046 ]
  %3062 = icmp ult i64 %3043, 3
  br i1 %3062, label %3092, label %3063

3063:                                             ; preds = %3059, %3063
  %3064 = phi i64 [ %3090, %3063 ], [ %3060, %3059 ]
  %3065 = phi i16* [ %3084, %3063 ], [ %3061, %3059 ]
  %3066 = getelementptr inbounds i16, i16* %3065, i64 1
  %3067 = load i16, i16* %3065, align 2
  %3068 = zext i16 %3067 to i64
  %3069 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %15, i64 0, i32 0, i64 %3068
  %3070 = load i32, i32* %3069, align 4
  %3071 = add i32 %3070, 1
  store i32 %3071, i32* %3069, align 4
  %3072 = getelementptr inbounds i16, i16* %3065, i64 2
  %3073 = load i16, i16* %3066, align 2
  %3074 = zext i16 %3073 to i64
  %3075 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %15, i64 0, i32 0, i64 %3074
  %3076 = load i32, i32* %3075, align 4
  %3077 = add i32 %3076, 1
  store i32 %3077, i32* %3075, align 4
  %3078 = getelementptr inbounds i16, i16* %3065, i64 3
  %3079 = load i16, i16* %3072, align 2
  %3080 = zext i16 %3079 to i64
  %3081 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %15, i64 0, i32 0, i64 %3080
  %3082 = load i32, i32* %3081, align 4
  %3083 = add i32 %3082, 1
  store i32 %3083, i32* %3081, align 4
  %3084 = getelementptr inbounds i16, i16* %3065, i64 4
  %3085 = load i16, i16* %3078, align 2
  %3086 = zext i16 %3085 to i64
  %3087 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %15, i64 0, i32 0, i64 %3086
  %3088 = load i32, i32* %3087, align 4
  %3089 = add i32 %3088, 1
  store i32 %3089, i32* %3087, align 4
  %3090 = add i64 %3064, -4
  %3091 = icmp eq i64 %3090, 0
  br i1 %3091, label %3092, label %3063

3092:                                             ; preds = %3063, %3059
  %3093 = load i64, i64* %3030, align 8
  %3094 = urem i64 %3032, %2931
  %3095 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3094, i32 1
  %3096 = load i64, i64* %3095, align 8
  %3097 = add i64 %3096, %3093
  store i64 %3097, i64* %3095, align 8
  br label %3098

3098:                                             ; preds = %3098, %3092
  %3099 = phi i64 [ 0, %3092 ], [ %3133, %3098 ]
  %3100 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %15, i64 0, i32 0, i64 %3099
  %3101 = bitcast i32* %3100 to <4 x i32>*
  %3102 = load <4 x i32>, <4 x i32>* %3101, align 8
  %3103 = getelementptr inbounds i32, i32* %3100, i64 4
  %3104 = bitcast i32* %3103 to <4 x i32>*
  %3105 = load <4 x i32>, <4 x i32>* %3104, align 8
  %3106 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3094, i32 0, i64 %3099
  %3107 = bitcast i32* %3106 to <4 x i32>*
  %3108 = load <4 x i32>, <4 x i32>* %3107, align 4
  %3109 = getelementptr inbounds i32, i32* %3106, i64 4
  %3110 = bitcast i32* %3109 to <4 x i32>*
  %3111 = load <4 x i32>, <4 x i32>* %3110, align 4
  %3112 = add <4 x i32> %3108, %3102
  %3113 = add <4 x i32> %3111, %3105
  %3114 = bitcast i32* %3106 to <4 x i32>*
  store <4 x i32> %3112, <4 x i32>* %3114, align 4
  %3115 = bitcast i32* %3109 to <4 x i32>*
  store <4 x i32> %3113, <4 x i32>* %3115, align 4
  %3116 = or i64 %3099, 8
  %3117 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %15, i64 0, i32 0, i64 %3116
  %3118 = bitcast i32* %3117 to <4 x i32>*
  %3119 = load <4 x i32>, <4 x i32>* %3118, align 8
  %3120 = getelementptr inbounds i32, i32* %3117, i64 4
  %3121 = bitcast i32* %3120 to <4 x i32>*
  %3122 = load <4 x i32>, <4 x i32>* %3121, align 8
  %3123 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3094, i32 0, i64 %3116
  %3124 = bitcast i32* %3123 to <4 x i32>*
  %3125 = load <4 x i32>, <4 x i32>* %3124, align 4
  %3126 = getelementptr inbounds i32, i32* %3123, i64 4
  %3127 = bitcast i32* %3126 to <4 x i32>*
  %3128 = load <4 x i32>, <4 x i32>* %3127, align 4
  %3129 = add <4 x i32> %3125, %3119
  %3130 = add <4 x i32> %3128, %3122
  %3131 = bitcast i32* %3123 to <4 x i32>*
  store <4 x i32> %3129, <4 x i32>* %3131, align 4
  %3132 = bitcast i32* %3126 to <4 x i32>*
  store <4 x i32> %3130, <4 x i32>* %3132, align 4
  %3133 = add nuw nsw i64 %3099, 16
  %3134 = icmp eq i64 %3133, 544
  br i1 %3134, label %3135, label %3098, !llvm.loop !31

3135:                                             ; preds = %3098
  call void @llvm.lifetime.end.p0i8(i64 2192, i8* nonnull %3026) #5
  %3136 = add nuw i64 %3032, 1
  %3137 = icmp ult i64 %3136, %3023
  br i1 %3137, label %3031, label %3138

3138:                                             ; preds = %3135, %3017
  %3139 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %2840) #5
  %3140 = add nuw nsw i64 %2931, 7
  %3141 = lshr i64 %3140, 3
  %3142 = mul i64 %2931, 544
  %3143 = icmp eq i64 %3142, 0
  br i1 %3143, label %3148, label %3144

3144:                                             ; preds = %3138
  %3145 = mul i64 %2931, 4352
  %3146 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3145) #5
  %3147 = bitcast i8* %3146 to double*
  br label %3148

3148:                                             ; preds = %3144, %3138
  %3149 = phi i8* [ %3146, %3144 ], [ null, %3138 ]
  %3150 = phi double* [ %3147, %3144 ], [ null, %3138 ]
  %3151 = shl nuw nsw i64 %2931, 3
  %3152 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3151) #5
  %3153 = bitcast i8* %3152 to double*
  %3154 = mul i64 %3141, %2840
  %3155 = icmp eq i64 %3154, 0
  br i1 %3155, label %3158, label %3156

3156:                                             ; preds = %3148
  %3157 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3154) #5
  br label %3158

3158:                                             ; preds = %3156, %3148
  %3159 = phi i8* [ %3157, %3156 ], [ null, %3148 ]
  %3160 = shl nuw nsw i64 %2931, 1
  %3161 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3160) #5
  %3162 = bitcast i8* %3161 to i16*
  %3163 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %6, i64 0, i32 1
  %3164 = load i32, i32* %3163, align 4
  %3165 = icmp slt i32 %3164, 11
  %3166 = select i1 %3165, i64 3, i64 10
  %3167 = add i64 %2840, -1
  %3168 = icmp eq i64 %3167, 0
  %3169 = getelementptr inbounds i8, i8* %3139, i64 %3167
  %3170 = and i64 %2840, 1
  %3171 = icmp eq i64 %3167, 0
  %3172 = sub i64 %2840, %3170
  %3173 = icmp eq i64 %3170, 0
  %3174 = and i64 %2840, 3
  %3175 = icmp ult i64 %3167, 3
  %3176 = sub i64 %2840, %3174
  %3177 = icmp eq i64 %3174, 0
  %3178 = and i64 %2840, 1
  %3179 = icmp eq i64 %3167, 0
  %3180 = sub i64 %2840, %3178
  %3181 = icmp eq i64 %3178, 0
  br label %3182

3182:                                             ; preds = %3613, %3158
  %3183 = phi i64 [ 0, %3158 ], [ %3614, %3613 ]
  %3184 = phi i64 [ %2931, %3158 ], [ %3525, %3613 ]
  %3185 = add nuw nsw i64 %3184, 7
  %3186 = lshr i64 %3185, 3
  %3187 = icmp ult i64 %3184, 2
  br i1 %3187, label %3188, label %3189

3188:                                             ; preds = %3182
  call void @llvm.memset.p0i8.i64(i8* align 1 %3139, i8 0, i64 %2840, i1 false) #5
  br label %3359

3189:                                             ; preds = %3182
  %3190 = mul i64 %3184, 4352
  call void @llvm.memset.p0i8.i64(i8* align 8 %3149, i8 0, i64 %3190, i1 false) #5
  br label %3193

3191:                                             ; preds = %3205
  %3192 = icmp eq i64 %3184, 0
  br label %3212

3193:                                             ; preds = %3205, %3189
  %3194 = phi i64 [ %3208, %3205 ], [ 0, %3189 ]
  %3195 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3194, i32 1
  %3196 = load i64, i64* %3195, align 8
  %3197 = and i64 %3196, 4294967295
  %3198 = icmp ult i64 %3197, 256
  br i1 %3198, label %3199, label %3202

3199:                                             ; preds = %3193
  %3200 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3197
  %3201 = load double, double* %3200, align 8
  br label %3205

3202:                                             ; preds = %3193
  %3203 = uitofp i64 %3197 to double
  %3204 = call double @log2(double %3203) #5
  br label %3205

3205:                                             ; preds = %3202, %3199
  %3206 = phi double [ %3201, %3199 ], [ %3204, %3202 ]
  %3207 = getelementptr inbounds double, double* %3150, i64 %3194
  store double %3206, double* %3207, align 8
  %3208 = add nuw nsw i64 %3194, 1
  %3209 = icmp eq i64 %3208, %3184
  br i1 %3209, label %3191, label %3193

3210:                                             ; preds = %3233, %3212
  %3211 = icmp eq i64 %3214, 0
  br i1 %3211, label %3240, label %3212

3212:                                             ; preds = %3210, %3191
  %3213 = phi i64 [ 544, %3191 ], [ %3214, %3210 ]
  %3214 = add nsw i64 %3213, -1
  br i1 %3192, label %3210, label %3215

3215:                                             ; preds = %3212
  %3216 = mul i64 %3214, %3184
  br label %3217

3217:                                             ; preds = %3233, %3215
  %3218 = phi i64 [ 0, %3215 ], [ %3238, %3233 ]
  %3219 = getelementptr inbounds double, double* %3150, i64 %3218
  %3220 = load double, double* %3219, align 8
  %3221 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3218, i32 0, i64 %3214
  %3222 = load i32, i32* %3221, align 4
  %3223 = zext i32 %3222 to i64
  %3224 = icmp eq i32 %3222, 0
  br i1 %3224, label %3233, label %3225

3225:                                             ; preds = %3217
  %3226 = icmp ult i32 %3222, 256
  br i1 %3226, label %3227, label %3230

3227:                                             ; preds = %3225
  %3228 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3223
  %3229 = load double, double* %3228, align 8
  br label %3233

3230:                                             ; preds = %3225
  %3231 = uitofp i32 %3222 to double
  %3232 = call double @log2(double %3231) #5
  br label %3233

3233:                                             ; preds = %3230, %3227, %3217
  %3234 = phi double [ -2.000000e+00, %3217 ], [ %3229, %3227 ], [ %3232, %3230 ]
  %3235 = fsub double %3220, %3234
  %3236 = add i64 %3218, %3216
  %3237 = getelementptr inbounds double, double* %3150, i64 %3236
  store double %3235, double* %3237, align 8
  %3238 = add nuw nsw i64 %3218, 1
  %3239 = icmp eq i64 %3238, %3184
  br i1 %3239, label %3210, label %3217

3240:                                             ; preds = %3210
  %3241 = shl nsw i64 %3184, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %3152, i8 0, i64 %3241, i1 false) #5
  %3242 = mul i64 %3186, %2840
  call void @llvm.memset.p0i8.i64(i8* align 1 %3159, i8 0, i64 %3242, i1 false) #5
  %3243 = and i64 %3184, 1
  %3244 = icmp eq i64 %3184, 1
  %3245 = sub nsw i64 %3184, %3243
  %3246 = icmp eq i64 %3243, 0
  br label %3247

3247:                                             ; preds = %3323, %3240
  %3248 = phi i64 [ %3324, %3323 ], [ 0, %3240 ]
  %3249 = mul i64 %3248, %3186
  %3250 = getelementptr inbounds i16, i16* %2821, i64 %3248
  %3251 = load i16, i16* %3250, align 2
  %3252 = zext i16 %3251 to i64
  %3253 = mul i64 %3184, %3252
  br i1 %3192, label %3293, label %3254

3254:                                             ; preds = %3247
  %3255 = getelementptr inbounds i8, i8* %3139, i64 %3248
  br i1 %3244, label %3279, label %3256

3256:                                             ; preds = %3254, %4187
  %3257 = phi i64 [ %4189, %4187 ], [ 0, %3254 ]
  %3258 = phi double [ %4188, %4187 ], [ 0x547D42AEA2879F2E, %3254 ]
  %3259 = phi i64 [ %4190, %4187 ], [ %3245, %3254 ]
  %3260 = add i64 %3257, %3253
  %3261 = getelementptr inbounds double, double* %3150, i64 %3260
  %3262 = load double, double* %3261, align 8
  %3263 = getelementptr inbounds double, double* %3153, i64 %3257
  %3264 = load double, double* %3263, align 8
  %3265 = fadd double %3262, %3264
  store double %3265, double* %3263, align 8
  %3266 = fcmp olt double %3265, %3258
  br i1 %3266, label %3267, label %3269

3267:                                             ; preds = %3256
  %3268 = trunc i64 %3257 to i8
  store i8 %3268, i8* %3255, align 1
  br label %3269

3269:                                             ; preds = %3267, %3256
  %3270 = phi double [ %3265, %3267 ], [ %3258, %3256 ]
  %3271 = or i64 %3257, 1
  %3272 = add i64 %3271, %3253
  %3273 = getelementptr inbounds double, double* %3150, i64 %3272
  %3274 = load double, double* %3273, align 8
  %3275 = getelementptr inbounds double, double* %3153, i64 %3271
  %3276 = load double, double* %3275, align 8
  %3277 = fadd double %3274, %3276
  store double %3277, double* %3275, align 8
  %3278 = fcmp olt double %3277, %3270
  br i1 %3278, label %4185, label %4187

3279:                                             ; preds = %4187, %3254
  %3280 = phi double [ undef, %3254 ], [ %4188, %4187 ]
  %3281 = phi i64 [ 0, %3254 ], [ %4189, %4187 ]
  %3282 = phi double [ 0x547D42AEA2879F2E, %3254 ], [ %4188, %4187 ]
  br i1 %3246, label %3293, label %3283

3283:                                             ; preds = %3279
  %3284 = add i64 %3281, %3253
  %3285 = getelementptr inbounds double, double* %3150, i64 %3284
  %3286 = load double, double* %3285, align 8
  %3287 = getelementptr inbounds double, double* %3153, i64 %3281
  %3288 = load double, double* %3287, align 8
  %3289 = fadd double %3286, %3288
  store double %3289, double* %3287, align 8
  %3290 = fcmp olt double %3289, %3282
  br i1 %3290, label %3291, label %3293

3291:                                             ; preds = %3283
  %3292 = trunc i64 %3281 to i8
  store i8 %3292, i8* %3255, align 1
  br label %3293

3293:                                             ; preds = %3279, %3283, %3291, %3247
  %3294 = phi double [ 0x547D42AEA2879F2E, %3247 ], [ %3280, %3279 ], [ %3289, %3291 ], [ %3282, %3283 ]
  %3295 = icmp ult i64 %3248, 2000
  br i1 %3295, label %3296, label %3302

3296:                                             ; preds = %3293
  %3297 = uitofp i64 %3248 to double
  %3298 = fmul double %3297, 7.000000e-02
  %3299 = fdiv double %3298, 2.000000e+03
  %3300 = fadd double %3299, 7.700000e-01
  %3301 = fmul double %3300, 1.460000e+01
  br label %3302

3302:                                             ; preds = %3296, %3293
  %3303 = phi double [ %3301, %3296 ], [ 1.460000e+01, %3293 ]
  br i1 %3192, label %3323, label %3304

3304:                                             ; preds = %3302, %3320
  %3305 = phi i64 [ %3321, %3320 ], [ 0, %3302 ]
  %3306 = getelementptr inbounds double, double* %3153, i64 %3305
  %3307 = load double, double* %3306, align 8
  %3308 = fsub double %3307, %3294
  store double %3308, double* %3306, align 8
  %3309 = fcmp ult double %3308, %3303
  br i1 %3309, label %3320, label %3310

3310:                                             ; preds = %3304
  %3311 = trunc i64 %3305 to i32
  %3312 = and i32 %3311, 7
  %3313 = shl i32 1, %3312
  store double %3303, double* %3306, align 8
  %3314 = lshr i64 %3305, 3
  %3315 = add i64 %3314, %3249
  %3316 = getelementptr inbounds i8, i8* %3159, i64 %3315
  %3317 = load i8, i8* %3316, align 1
  %3318 = trunc i32 %3313 to i8
  %3319 = or i8 %3317, %3318
  store i8 %3319, i8* %3316, align 1
  br label %3320

3320:                                             ; preds = %3310, %3304
  %3321 = add nuw nsw i64 %3305, 1
  %3322 = icmp eq i64 %3321, %3184
  br i1 %3322, label %3323, label %3304

3323:                                             ; preds = %3320, %3302
  %3324 = add nuw i64 %3248, 1
  %3325 = icmp eq i64 %3324, %2840
  br i1 %3325, label %3326, label %3247

3326:                                             ; preds = %3323
  br i1 %3168, label %3359, label %3327

3327:                                             ; preds = %3326
  %3328 = load i8, i8* %3169, align 1
  %3329 = mul i64 %3186, %3167
  br label %3330

3330:                                             ; preds = %3354, %3327
  %3331 = phi i8 [ %3356, %3354 ], [ %3328, %3327 ]
  %3332 = phi i64 [ %3339, %3354 ], [ %3329, %3327 ]
  %3333 = phi i64 [ %3338, %3354 ], [ %3167, %3327 ]
  %3334 = phi i64 [ %3355, %3354 ], [ 1, %3327 ]
  %3335 = zext i8 %3331 to i32
  %3336 = and i32 %3335, 7
  %3337 = shl i32 1, %3336
  %3338 = add i64 %3333, -1
  %3339 = sub i64 %3332, %3186
  %3340 = lshr i32 %3335, 3
  %3341 = zext i32 %3340 to i64
  %3342 = add i64 %3339, %3341
  %3343 = getelementptr inbounds i8, i8* %3159, i64 %3342
  %3344 = load i8, i8* %3343, align 1
  %3345 = zext i8 %3344 to i32
  %3346 = and i32 %3337, %3345
  %3347 = icmp eq i32 %3346, 0
  br i1 %3347, label %3354, label %3348

3348:                                             ; preds = %3330
  %3349 = getelementptr inbounds i8, i8* %3139, i64 %3338
  %3350 = load i8, i8* %3349, align 1
  %3351 = icmp ne i8 %3331, %3350
  %3352 = zext i1 %3351 to i64
  %3353 = add i64 %3334, %3352
  br label %3354

3354:                                             ; preds = %3348, %3330
  %3355 = phi i64 [ %3334, %3330 ], [ %3353, %3348 ]
  %3356 = phi i8 [ %3331, %3330 ], [ %3350, %3348 ]
  %3357 = getelementptr inbounds i8, i8* %3139, i64 %3338
  store i8 %3356, i8* %3357, align 1
  %3358 = icmp eq i64 %3338, 0
  br i1 %3358, label %3359, label %3330

3359:                                             ; preds = %3354, %3326, %3188
  %3360 = phi i64 [ 1, %3326 ], [ 1, %3188 ], [ %3355, %3354 ]
  %3361 = icmp eq i64 %3184, 0
  br i1 %3361, label %3440, label %3362

3362:                                             ; preds = %3359
  %3363 = icmp ult i64 %3184, 16
  br i1 %3363, label %3433, label %3364

3364:                                             ; preds = %3362
  %3365 = and i64 %3184, -16
  %3366 = add nsw i64 %3365, -16
  %3367 = lshr exact i64 %3366, 4
  %3368 = add nuw nsw i64 %3367, 1
  %3369 = and i64 %3368, 7
  %3370 = icmp ult i64 %3366, 112
  br i1 %3370, label %3418, label %3371

3371:                                             ; preds = %3364
  %3372 = sub nsw i64 %3368, %3369
  br label %3373

3373:                                             ; preds = %3373, %3371
  %3374 = phi i64 [ 0, %3371 ], [ %3415, %3373 ]
  %3375 = phi i64 [ %3372, %3371 ], [ %3416, %3373 ]
  %3376 = getelementptr inbounds i16, i16* %3162, i64 %3374
  %3377 = bitcast i16* %3376 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3377, align 2
  %3378 = getelementptr inbounds i16, i16* %3376, i64 8
  %3379 = bitcast i16* %3378 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3379, align 2
  %3380 = or i64 %3374, 16
  %3381 = getelementptr inbounds i16, i16* %3162, i64 %3380
  %3382 = bitcast i16* %3381 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3382, align 2
  %3383 = getelementptr inbounds i16, i16* %3381, i64 8
  %3384 = bitcast i16* %3383 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3384, align 2
  %3385 = or i64 %3374, 32
  %3386 = getelementptr inbounds i16, i16* %3162, i64 %3385
  %3387 = bitcast i16* %3386 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3387, align 2
  %3388 = getelementptr inbounds i16, i16* %3386, i64 8
  %3389 = bitcast i16* %3388 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3389, align 2
  %3390 = or i64 %3374, 48
  %3391 = getelementptr inbounds i16, i16* %3162, i64 %3390
  %3392 = bitcast i16* %3391 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3392, align 2
  %3393 = getelementptr inbounds i16, i16* %3391, i64 8
  %3394 = bitcast i16* %3393 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3394, align 2
  %3395 = or i64 %3374, 64
  %3396 = getelementptr inbounds i16, i16* %3162, i64 %3395
  %3397 = bitcast i16* %3396 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3397, align 2
  %3398 = getelementptr inbounds i16, i16* %3396, i64 8
  %3399 = bitcast i16* %3398 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3399, align 2
  %3400 = or i64 %3374, 80
  %3401 = getelementptr inbounds i16, i16* %3162, i64 %3400
  %3402 = bitcast i16* %3401 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3402, align 2
  %3403 = getelementptr inbounds i16, i16* %3401, i64 8
  %3404 = bitcast i16* %3403 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3404, align 2
  %3405 = or i64 %3374, 96
  %3406 = getelementptr inbounds i16, i16* %3162, i64 %3405
  %3407 = bitcast i16* %3406 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3407, align 2
  %3408 = getelementptr inbounds i16, i16* %3406, i64 8
  %3409 = bitcast i16* %3408 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3409, align 2
  %3410 = or i64 %3374, 112
  %3411 = getelementptr inbounds i16, i16* %3162, i64 %3410
  %3412 = bitcast i16* %3411 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3412, align 2
  %3413 = getelementptr inbounds i16, i16* %3411, i64 8
  %3414 = bitcast i16* %3413 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3414, align 2
  %3415 = add i64 %3374, 128
  %3416 = add i64 %3375, -8
  %3417 = icmp eq i64 %3416, 0
  br i1 %3417, label %3418, label %3373, !llvm.loop !32

3418:                                             ; preds = %3373, %3364
  %3419 = phi i64 [ 0, %3364 ], [ %3415, %3373 ]
  %3420 = icmp eq i64 %3369, 0
  br i1 %3420, label %3431, label %3421

3421:                                             ; preds = %3418, %3421
  %3422 = phi i64 [ %3428, %3421 ], [ %3419, %3418 ]
  %3423 = phi i64 [ %3429, %3421 ], [ %3369, %3418 ]
  %3424 = getelementptr inbounds i16, i16* %3162, i64 %3422
  %3425 = bitcast i16* %3424 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3425, align 2
  %3426 = getelementptr inbounds i16, i16* %3424, i64 8
  %3427 = bitcast i16* %3426 to <8 x i16>*
  store <8 x i16> <i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256, i16 256>, <8 x i16>* %3427, align 2
  %3428 = add i64 %3422, 16
  %3429 = add i64 %3423, -1
  %3430 = icmp eq i64 %3429, 0
  br i1 %3430, label %3431, label %3421, !llvm.loop !33

3431:                                             ; preds = %3421, %3418
  %3432 = icmp eq i64 %3184, %3365
  br i1 %3432, label %3440, label %3433

3433:                                             ; preds = %3431, %3362
  %3434 = phi i64 [ 0, %3362 ], [ %3365, %3431 ]
  br label %3435

3435:                                             ; preds = %3433, %3435
  %3436 = phi i64 [ %3438, %3435 ], [ %3434, %3433 ]
  %3437 = getelementptr inbounds i16, i16* %3162, i64 %3436
  store i16 256, i16* %3437, align 2
  %3438 = add nuw nsw i64 %3436, 1
  %3439 = icmp eq i64 %3438, %3184
  br i1 %3439, label %3440, label %3435, !llvm.loop !34

3440:                                             ; preds = %3435, %3431, %3359
  br i1 %3171, label %3462, label %3441

3441:                                             ; preds = %3440, %4194
  %3442 = phi i64 [ %4196, %4194 ], [ 0, %3440 ]
  %3443 = phi i16 [ %4195, %4194 ], [ 0, %3440 ]
  %3444 = phi i64 [ %4197, %4194 ], [ %3172, %3440 ]
  %3445 = getelementptr inbounds i8, i8* %3139, i64 %3442
  %3446 = load i8, i8* %3445, align 1
  %3447 = zext i8 %3446 to i64
  %3448 = getelementptr inbounds i16, i16* %3162, i64 %3447
  %3449 = load i16, i16* %3448, align 2
  %3450 = icmp eq i16 %3449, 256
  br i1 %3450, label %3451, label %3453

3451:                                             ; preds = %3441
  %3452 = add i16 %3443, 1
  store i16 %3443, i16* %3448, align 2
  br label %3453

3453:                                             ; preds = %3451, %3441
  %3454 = phi i16 [ %3452, %3451 ], [ %3443, %3441 ]
  %3455 = or i64 %3442, 1
  %3456 = getelementptr inbounds i8, i8* %3139, i64 %3455
  %3457 = load i8, i8* %3456, align 1
  %3458 = zext i8 %3457 to i64
  %3459 = getelementptr inbounds i16, i16* %3162, i64 %3458
  %3460 = load i16, i16* %3459, align 2
  %3461 = icmp eq i16 %3460, 256
  br i1 %3461, label %4192, label %4194

3462:                                             ; preds = %4194, %3440
  %3463 = phi i16 [ undef, %3440 ], [ %4195, %4194 ]
  %3464 = phi i64 [ 0, %3440 ], [ %4196, %4194 ]
  %3465 = phi i16 [ 0, %3440 ], [ %4195, %4194 ]
  br i1 %3173, label %3475, label %3466

3466:                                             ; preds = %3462
  %3467 = getelementptr inbounds i8, i8* %3139, i64 %3464
  %3468 = load i8, i8* %3467, align 1
  %3469 = zext i8 %3468 to i64
  %3470 = getelementptr inbounds i16, i16* %3162, i64 %3469
  %3471 = load i16, i16* %3470, align 2
  %3472 = icmp eq i16 %3471, 256
  br i1 %3472, label %3473, label %3475

3473:                                             ; preds = %3466
  %3474 = add i16 %3465, 1
  store i16 %3465, i16* %3470, align 2
  br label %3475

3475:                                             ; preds = %3473, %3466, %3462
  %3476 = phi i16 [ %3463, %3462 ], [ %3474, %3473 ], [ %3465, %3466 ]
  br i1 %3175, label %3510, label %3477

3477:                                             ; preds = %3475, %3477
  %3478 = phi i64 [ %3507, %3477 ], [ 0, %3475 ]
  %3479 = phi i64 [ %3508, %3477 ], [ %3176, %3475 ]
  %3480 = getelementptr inbounds i8, i8* %3139, i64 %3478
  %3481 = load i8, i8* %3480, align 1
  %3482 = zext i8 %3481 to i64
  %3483 = getelementptr inbounds i16, i16* %3162, i64 %3482
  %3484 = load i16, i16* %3483, align 2
  %3485 = trunc i16 %3484 to i8
  store i8 %3485, i8* %3480, align 1
  %3486 = or i64 %3478, 1
  %3487 = getelementptr inbounds i8, i8* %3139, i64 %3486
  %3488 = load i8, i8* %3487, align 1
  %3489 = zext i8 %3488 to i64
  %3490 = getelementptr inbounds i16, i16* %3162, i64 %3489
  %3491 = load i16, i16* %3490, align 2
  %3492 = trunc i16 %3491 to i8
  store i8 %3492, i8* %3487, align 1
  %3493 = or i64 %3478, 2
  %3494 = getelementptr inbounds i8, i8* %3139, i64 %3493
  %3495 = load i8, i8* %3494, align 1
  %3496 = zext i8 %3495 to i64
  %3497 = getelementptr inbounds i16, i16* %3162, i64 %3496
  %3498 = load i16, i16* %3497, align 2
  %3499 = trunc i16 %3498 to i8
  store i8 %3499, i8* %3494, align 1
  %3500 = or i64 %3478, 3
  %3501 = getelementptr inbounds i8, i8* %3139, i64 %3500
  %3502 = load i8, i8* %3501, align 1
  %3503 = zext i8 %3502 to i64
  %3504 = getelementptr inbounds i16, i16* %3162, i64 %3503
  %3505 = load i16, i16* %3504, align 2
  %3506 = trunc i16 %3505 to i8
  store i8 %3506, i8* %3501, align 1
  %3507 = add nuw i64 %3478, 4
  %3508 = add i64 %3479, -4
  %3509 = icmp eq i64 %3508, 0
  br i1 %3509, label %3510, label %3477

3510:                                             ; preds = %3477, %3475
  %3511 = phi i64 [ 0, %3475 ], [ %3507, %3477 ]
  br i1 %3177, label %3524, label %3512

3512:                                             ; preds = %3510, %3512
  %3513 = phi i64 [ %3521, %3512 ], [ %3511, %3510 ]
  %3514 = phi i64 [ %3522, %3512 ], [ %3174, %3510 ]
  %3515 = getelementptr inbounds i8, i8* %3139, i64 %3513
  %3516 = load i8, i8* %3515, align 1
  %3517 = zext i8 %3516 to i64
  %3518 = getelementptr inbounds i16, i16* %3162, i64 %3517
  %3519 = load i16, i16* %3518, align 2
  %3520 = trunc i16 %3519 to i8
  store i8 %3520, i8* %3515, align 1
  %3521 = add nuw i64 %3513, 1
  %3522 = add i64 %3514, -1
  %3523 = icmp eq i64 %3522, 0
  br i1 %3523, label %3524, label %3512, !llvm.loop !35

3524:                                             ; preds = %3512, %3510
  %3525 = zext i16 %3476 to i64
  %3526 = icmp eq i16 %3476, 0
  br i1 %3526, label %3566, label %3527

3527:                                             ; preds = %3524
  %3528 = add nsw i64 %3525, -1
  %3529 = and i64 %3525, 3
  %3530 = icmp ult i64 %3528, 3
  br i1 %3530, label %3554, label %3531

3531:                                             ; preds = %3527
  %3532 = sub nsw i64 %3525, %3529
  br label %3533

3533:                                             ; preds = %3533, %3531
  %3534 = phi i64 [ 0, %3531 ], [ %3551, %3533 ]
  %3535 = phi i64 [ %3532, %3531 ], [ %3552, %3533 ]
  %3536 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3534
  %3537 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3534, i32 2
  %3538 = bitcast %struct.HistogramDistance* %3536 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3538, i8 0, i64 2184, i1 false) #5
  store double 0x7FF0000000000000, double* %3537, align 8
  %3539 = or i64 %3534, 1
  %3540 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3539
  %3541 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3539, i32 2
  %3542 = bitcast %struct.HistogramDistance* %3540 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3542, i8 0, i64 2184, i1 false) #5
  store double 0x7FF0000000000000, double* %3541, align 8
  %3543 = or i64 %3534, 2
  %3544 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3543
  %3545 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3543, i32 2
  %3546 = bitcast %struct.HistogramDistance* %3544 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3546, i8 0, i64 2184, i1 false) #5
  store double 0x7FF0000000000000, double* %3545, align 8
  %3547 = or i64 %3534, 3
  %3548 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3547
  %3549 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3547, i32 2
  %3550 = bitcast %struct.HistogramDistance* %3548 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3550, i8 0, i64 2184, i1 false) #5
  store double 0x7FF0000000000000, double* %3549, align 8
  %3551 = add nuw nsw i64 %3534, 4
  %3552 = add i64 %3535, -4
  %3553 = icmp eq i64 %3552, 0
  br i1 %3553, label %3554, label %3533

3554:                                             ; preds = %3533, %3527
  %3555 = phi i64 [ 0, %3527 ], [ %3551, %3533 ]
  %3556 = icmp eq i64 %3529, 0
  br i1 %3556, label %3566, label %3557

3557:                                             ; preds = %3554, %3557
  %3558 = phi i64 [ %3563, %3557 ], [ %3555, %3554 ]
  %3559 = phi i64 [ %3564, %3557 ], [ %3529, %3554 ]
  %3560 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3558
  %3561 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3558, i32 2
  %3562 = bitcast %struct.HistogramDistance* %3560 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3562, i8 0, i64 2184, i1 false) #5
  store double 0x7FF0000000000000, double* %3561, align 8
  %3563 = add nuw nsw i64 %3558, 1
  %3564 = add i64 %3559, -1
  %3565 = icmp eq i64 %3564, 0
  br i1 %3565, label %3566, label %3557, !llvm.loop !36

3566:                                             ; preds = %3554, %3557, %3524
  br i1 %3179, label %3598, label %3567

3567:                                             ; preds = %3566, %3567
  %3568 = phi i64 [ %3595, %3567 ], [ 0, %3566 ]
  %3569 = phi i64 [ %3596, %3567 ], [ %3180, %3566 ]
  %3570 = getelementptr inbounds i8, i8* %3139, i64 %3568
  %3571 = load i8, i8* %3570, align 1
  %3572 = zext i8 %3571 to i64
  %3573 = getelementptr inbounds i16, i16* %2821, i64 %3568
  %3574 = load i16, i16* %3573, align 2
  %3575 = zext i16 %3574 to i64
  %3576 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3572, i32 0, i64 %3575
  %3577 = load i32, i32* %3576, align 4
  %3578 = add i32 %3577, 1
  store i32 %3578, i32* %3576, align 4
  %3579 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3572, i32 1
  %3580 = load i64, i64* %3579, align 8
  %3581 = add i64 %3580, 1
  store i64 %3581, i64* %3579, align 8
  %3582 = or i64 %3568, 1
  %3583 = getelementptr inbounds i8, i8* %3139, i64 %3582
  %3584 = load i8, i8* %3583, align 1
  %3585 = zext i8 %3584 to i64
  %3586 = getelementptr inbounds i16, i16* %2821, i64 %3582
  %3587 = load i16, i16* %3586, align 2
  %3588 = zext i16 %3587 to i64
  %3589 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3585, i32 0, i64 %3588
  %3590 = load i32, i32* %3589, align 4
  %3591 = add i32 %3590, 1
  store i32 %3591, i32* %3589, align 4
  %3592 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3585, i32 1
  %3593 = load i64, i64* %3592, align 8
  %3594 = add i64 %3593, 1
  store i64 %3594, i64* %3592, align 8
  %3595 = add nuw i64 %3568, 2
  %3596 = add i64 %3569, -2
  %3597 = icmp eq i64 %3596, 0
  br i1 %3597, label %3598, label %3567

3598:                                             ; preds = %3567, %3566
  %3599 = phi i64 [ 0, %3566 ], [ %3595, %3567 ]
  br i1 %3181, label %3613, label %3600

3600:                                             ; preds = %3598
  %3601 = getelementptr inbounds i8, i8* %3139, i64 %3599
  %3602 = load i8, i8* %3601, align 1
  %3603 = zext i8 %3602 to i64
  %3604 = getelementptr inbounds i16, i16* %2821, i64 %3599
  %3605 = load i16, i16* %3604, align 2
  %3606 = zext i16 %3605 to i64
  %3607 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3603, i32 0, i64 %3606
  %3608 = load i32, i32* %3607, align 4
  %3609 = add i32 %3608, 1
  store i32 %3609, i32* %3607, align 4
  %3610 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %2934, i64 %3603, i32 1
  %3611 = load i64, i64* %3610, align 8
  %3612 = add i64 %3611, 1
  store i64 %3612, i64* %3610, align 8
  br label %3613

3613:                                             ; preds = %3598, %3600
  %3614 = add nuw nsw i64 %3183, 1
  %3615 = icmp eq i64 %3614, %3166
  br i1 %3615, label %3616, label %3182

3616:                                             ; preds = %3613
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3149) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3152) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3159) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3161) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2933) #5
  %3617 = icmp eq i64 %3360, 0
  br i1 %3617, label %3630, label %3618

3618:                                             ; preds = %3616
  %3619 = shl i64 %3360, 2
  %3620 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3619) #5
  %3621 = bitcast i8* %3620 to i32*
  %3622 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3619) #5
  %3623 = bitcast i8* %3622 to i32*
  %3624 = shl i64 %3360, 4
  %3625 = add i64 %3624, 1008
  %3626 = lshr i64 %3625, 6
  %3627 = icmp eq i64 %3626, 0
  br i1 %3627, label %3642, label %3628

3628:                                             ; preds = %3618
  %3629 = mul i64 %3626, 2192
  br label %3630

3630:                                             ; preds = %3616, %3628
  %3631 = phi i64 [ %3629, %3628 ], [ 32880, %3616 ]
  %3632 = phi i32* [ %3621, %3628 ], [ null, %3616 ]
  %3633 = phi i8* [ %3620, %3628 ], [ null, %3616 ]
  %3634 = phi i8* [ %3622, %3628 ], [ null, %3616 ]
  %3635 = phi i32* [ %3623, %3628 ], [ null, %3616 ]
  %3636 = phi i64 [ %3626, %3628 ], [ 15, %3616 ]
  %3637 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3631) #5
  %3638 = bitcast i8* %3637 to %struct.HistogramDistance*
  %3639 = shl nuw nsw i64 %3636, 2
  %3640 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3639) #5
  %3641 = bitcast i8* %3640 to i32*
  br label %3642

3642:                                             ; preds = %3630, %3618
  %3643 = phi %struct.HistogramDistance* [ %3638, %3630 ], [ null, %3618 ]
  %3644 = phi i8* [ %3637, %3630 ], [ null, %3618 ]
  %3645 = phi i32* [ %3632, %3630 ], [ %3621, %3618 ]
  %3646 = phi i8* [ %3633, %3630 ], [ %3620, %3618 ]
  %3647 = phi i8* [ %3634, %3630 ], [ %3622, %3618 ]
  %3648 = phi i32* [ %3635, %3630 ], [ %3623, %3618 ]
  %3649 = phi i64 [ %3636, %3630 ], [ 0, %3618 ]
  %3650 = phi i8* [ %3640, %3630 ], [ null, %3618 ]
  %3651 = phi i32* [ %3641, %3630 ], [ null, %3618 ]
  %3652 = icmp ult i64 %3360, 64
  %3653 = select i1 %3652, i64 %3360, i64 64
  %3654 = icmp eq i64 %3653, 0
  br i1 %3654, label %3659, label %3655

3655:                                             ; preds = %3642
  %3656 = mul nuw nsw i64 %3653, 2192
  %3657 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3656) #5
  %3658 = bitcast i8* %3657 to %struct.HistogramDistance*
  br label %3659

3659:                                             ; preds = %3655, %3642
  %3660 = phi i8* [ %3657, %3655 ], [ null, %3642 ]
  %3661 = phi %struct.HistogramDistance* [ %3658, %3655 ], [ null, %3642 ]
  %3662 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 49176) #5
  %3663 = bitcast [64 x i32]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %3663) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3663, i8 0, i64 256, i1 false) #5
  %3664 = bitcast [64 x i32]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %3664) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3664, i8 0, i64 256, i1 false) #5
  %3665 = bitcast [64 x i32]* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %3665) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3665, i8 0, i64 256, i1 false) #5
  %3666 = bitcast [64 x i32]* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %3666) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3666, i8 0, i64 256, i1 false) #5
  %3667 = shl i64 %3360, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %3647, i8 0, i64 %3667, i1 false) #5
  %3668 = and i64 %2840, 1
  %3669 = icmp eq i64 %2840, 1
  br i1 %3669, label %3672, label %3670

3670:                                             ; preds = %3659
  %3671 = sub i64 %2840, %3668
  br label %3685

3672:                                             ; preds = %4181, %3659
  %3673 = phi i64 [ 0, %3659 ], [ %4182, %4181 ]
  %3674 = icmp eq i64 %3668, 0
  br i1 %3674, label %3679, label %3675

3675:                                             ; preds = %3672
  %3676 = getelementptr inbounds i32, i32* %3648, i64 %3673
  %3677 = load i32, i32* %3676, align 4
  %3678 = add i32 %3677, 1
  store i32 %3678, i32* %3676, align 4
  br label %3679

3679:                                             ; preds = %3675, %3672
  %3680 = bitcast i8* %3662 to %struct.HistogramPair*
  br i1 %3617, label %3892, label %3681

3681:                                             ; preds = %3679
  %3682 = getelementptr inbounds [64 x i32], [64 x i32]* %16, i64 0, i64 0
  %3683 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 0
  %3684 = getelementptr inbounds [64 x i32], [64 x i32]* %17, i64 0, i64 0
  br label %3709

3685:                                             ; preds = %4181, %3670
  %3686 = phi i64 [ 0, %3670 ], [ %4182, %4181 ]
  %3687 = phi i64 [ 0, %3670 ], [ %3707, %4181 ]
  %3688 = phi i64 [ %3671, %3670 ], [ %4183, %4181 ]
  %3689 = getelementptr inbounds i32, i32* %3648, i64 %3686
  %3690 = load i32, i32* %3689, align 4
  %3691 = add i32 %3690, 1
  store i32 %3691, i32* %3689, align 4
  %3692 = or i64 %3687, 1
  %3693 = icmp eq i64 %3692, %2840
  br i1 %3693, label %3700, label %3694

3694:                                             ; preds = %3685
  %3695 = getelementptr inbounds i8, i8* %3139, i64 %3687
  %3696 = load i8, i8* %3695, align 1
  %3697 = getelementptr inbounds i8, i8* %3139, i64 %3692
  %3698 = load i8, i8* %3697, align 1
  %3699 = icmp eq i8 %3696, %3698
  br i1 %3699, label %3702, label %3700

3700:                                             ; preds = %3694, %3685
  %3701 = add i64 %3686, 1
  br label %3702

3702:                                             ; preds = %3700, %3694
  %3703 = phi i64 [ %3701, %3700 ], [ %3686, %3694 ]
  %3704 = getelementptr inbounds i32, i32* %3648, i64 %3703
  %3705 = load i32, i32* %3704, align 4
  %3706 = add i32 %3705, 1
  store i32 %3706, i32* %3704, align 4
  %3707 = add nuw i64 %3687, 2
  %3708 = icmp eq i64 %3707, %2840
  br i1 %3708, label %4179, label %4173

3709:                                             ; preds = %3887, %3681
  %3710 = phi i64 [ %3891, %3887 ], [ 0, %3681 ]
  %3711 = phi i64 [ %3889, %3887 ], [ 0, %3681 ]
  %3712 = phi i64 [ %3768, %3887 ], [ 0, %3681 ]
  %3713 = phi i64 [ %3888, %3887 ], [ 0, %3681 ]
  %3714 = phi i32* [ %3819, %3887 ], [ %3651, %3681 ]
  %3715 = phi i8* [ %3818, %3887 ], [ %3650, %3681 ]
  %3716 = phi i64 [ %3817, %3887 ], [ %3649, %3681 ]
  %3717 = phi i64 [ %3823, %3887 ], [ 0, %3681 ]
  %3718 = phi %struct.HistogramDistance* [ %3794, %3887 ], [ %3643, %3681 ]
  %3719 = phi i8* [ %3793, %3887 ], [ %3644, %3681 ]
  %3720 = phi i64 [ %3792, %3887 ], [ %3649, %3681 ]
  %3721 = phi i64 [ %3822, %3887 ], [ 0, %3681 ]
  %3722 = mul i64 %3710, -64
  %3723 = add i64 %3360, %3722
  %3724 = icmp ult i64 %3723, 64
  %3725 = select i1 %3724, i64 %3723, i64 64
  %3726 = sub i64 %3360, %3711
  %3727 = icmp ult i64 %3726, 64
  %3728 = select i1 %3727, i64 %3726, i64 64
  %3729 = icmp eq i64 %3728, 0
  br i1 %3729, label %3767, label %3730

3730:                                             ; preds = %3709, %3758
  %3731 = phi i64 [ %3765, %3758 ], [ 0, %3709 ]
  %3732 = phi i64 [ %3759, %3758 ], [ %3712, %3709 ]
  %3733 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %3661, i64 %3731
  %3734 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %3661, i64 %3731, i32 2
  %3735 = bitcast %struct.HistogramDistance* %3733 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3735, i8 0, i64 2184, i1 false) #5
  store double 0x7FF0000000000000, double* %3734, align 8
  %3736 = add i64 %3731, %3711
  %3737 = getelementptr inbounds i32, i32* %3648, i64 %3736
  %3738 = load i32, i32* %3737, align 4
  %3739 = icmp eq i32 %3738, 0
  br i1 %3739, label %3758, label %3740

3740:                                             ; preds = %3730
  %3741 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %3661, i64 %3731, i32 1
  br label %3742

3742:                                             ; preds = %3742, %3740
  %3743 = phi i64 [ 0, %3740 ], [ %3754, %3742 ]
  %3744 = phi i64 [ %3732, %3740 ], [ %3745, %3742 ]
  %3745 = add i64 %3744, 1
  %3746 = getelementptr inbounds i16, i16* %2821, i64 %3744
  %3747 = load i16, i16* %3746, align 2
  %3748 = zext i16 %3747 to i64
  %3749 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %3661, i64 %3731, i32 0, i64 %3748
  %3750 = load i32, i32* %3749, align 4
  %3751 = add i32 %3750, 1
  store i32 %3751, i32* %3749, align 4
  %3752 = load i64, i64* %3741, align 8
  %3753 = add i64 %3752, 1
  store i64 %3753, i64* %3741, align 8
  %3754 = add nuw nsw i64 %3743, 1
  %3755 = load i32, i32* %3737, align 4
  %3756 = zext i32 %3755 to i64
  %3757 = icmp ult i64 %3754, %3756
  br i1 %3757, label %3742, label %3758

3758:                                             ; preds = %3742, %3730
  %3759 = phi i64 [ %3732, %3730 ], [ %3745, %3742 ]
  %3760 = call double @BrotliPopulationCostDistance(%struct.HistogramDistance* %3733) #5
  store double %3760, double* %3734, align 8
  %3761 = trunc i64 %3731 to i32
  %3762 = getelementptr inbounds [64 x i32], [64 x i32]* %17, i64 0, i64 %3731
  store i32 %3761, i32* %3762, align 4
  %3763 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 %3731
  store i32 %3761, i32* %3763, align 4
  %3764 = getelementptr inbounds [64 x i32], [64 x i32]* %16, i64 0, i64 %3731
  store i32 1, i32* %3764, align 4
  %3765 = add nuw i64 %3731, 1
  %3766 = icmp ult i64 %3765, %3728
  br i1 %3766, label %3730, label %3767

3767:                                             ; preds = %3758, %3709
  %3768 = phi i64 [ %3712, %3709 ], [ %3759, %3758 ]
  %3769 = call i64 @BrotliHistogramCombineDistance(%struct.HistogramDistance* %3661, i32* nonnull %3682, i32* nonnull %3683, i32* nonnull %3684, %struct.HistogramPair* %3680, i64 %3728, i64 %3728, i64 64, i64 2048) #5
  %3770 = add i64 %3769, %3721
  %3771 = icmp ult i64 %3720, %3770
  br i1 %3771, label %3772, label %3791

3772:                                             ; preds = %3767
  %3773 = icmp eq i64 %3720, 0
  %3774 = select i1 %3773, i64 %3770, i64 %3720
  br label %3775

3775:                                             ; preds = %3775, %3772
  %3776 = phi i64 [ %3774, %3772 ], [ %3778, %3775 ]
  %3777 = icmp ult i64 %3776, %3770
  %3778 = shl i64 %3776, 1
  br i1 %3777, label %3775, label %3779

3779:                                             ; preds = %3775
  %3780 = icmp eq i64 %3776, 0
  br i1 %3780, label %3785, label %3781

3781:                                             ; preds = %3779
  %3782 = mul i64 %3776, 2192
  %3783 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3782) #5
  %3784 = bitcast i8* %3783 to %struct.HistogramDistance*
  br label %3785

3785:                                             ; preds = %3781, %3779
  %3786 = phi i8* [ %3783, %3781 ], [ null, %3779 ]
  %3787 = phi %struct.HistogramDistance* [ %3784, %3781 ], [ null, %3779 ]
  br i1 %3773, label %3790, label %3788

3788:                                             ; preds = %3785
  %3789 = mul i64 %3720, 2192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3786, i8* align 8 %3719, i64 %3789, i1 false) #5
  br label %3790

3790:                                             ; preds = %3788, %3785
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3719) #5
  br label %3791

3791:                                             ; preds = %3790, %3767
  %3792 = phi i64 [ %3776, %3790 ], [ %3720, %3767 ]
  %3793 = phi i8* [ %3786, %3790 ], [ %3719, %3767 ]
  %3794 = phi %struct.HistogramDistance* [ %3787, %3790 ], [ %3718, %3767 ]
  %3795 = add i64 %3769, %3717
  %3796 = icmp ult i64 %3716, %3795
  br i1 %3796, label %3797, label %3816

3797:                                             ; preds = %3791
  %3798 = icmp eq i64 %3716, 0
  %3799 = select i1 %3798, i64 %3795, i64 %3716
  br label %3800

3800:                                             ; preds = %3800, %3797
  %3801 = phi i64 [ %3799, %3797 ], [ %3803, %3800 ]
  %3802 = icmp ult i64 %3801, %3795
  %3803 = shl i64 %3801, 1
  br i1 %3802, label %3800, label %3804

3804:                                             ; preds = %3800
  %3805 = icmp eq i64 %3801, 0
  br i1 %3805, label %3810, label %3806

3806:                                             ; preds = %3804
  %3807 = shl i64 %3801, 2
  %3808 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3807) #5
  %3809 = bitcast i8* %3808 to i32*
  br label %3810

3810:                                             ; preds = %3806, %3804
  %3811 = phi i8* [ %3808, %3806 ], [ null, %3804 ]
  %3812 = phi i32* [ %3809, %3806 ], [ null, %3804 ]
  br i1 %3798, label %3815, label %3813

3813:                                             ; preds = %3810
  %3814 = shl i64 %3716, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3811, i8* align 4 %3715, i64 %3814, i1 false) #5
  br label %3815

3815:                                             ; preds = %3813, %3810
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3715) #5
  br label %3816

3816:                                             ; preds = %3815, %3791
  %3817 = phi i64 [ %3801, %3815 ], [ %3716, %3791 ]
  %3818 = phi i8* [ %3811, %3815 ], [ %3715, %3791 ]
  %3819 = phi i32* [ %3812, %3815 ], [ %3714, %3791 ]
  %3820 = icmp eq i64 %3769, 0
  br i1 %3820, label %3821, label %3830

3821:                                             ; preds = %3830, %3816
  %3822 = phi i64 [ %3721, %3816 ], [ %3834, %3830 ]
  %3823 = phi i64 [ %3717, %3816 ], [ %3844, %3830 ]
  br i1 %3729, label %3887, label %3824

3824:                                             ; preds = %3821
  %3825 = trunc i64 %3713 to i32
  %3826 = and i64 %3725, 1
  %3827 = icmp eq i64 %3725, 1
  br i1 %3827, label %3875, label %3828

3828:                                             ; preds = %3824
  %3829 = sub nsw i64 %3725, %3826
  br label %3852

3830:                                             ; preds = %3816, %3830
  %3831 = phi i64 [ %3850, %3830 ], [ 0, %3816 ]
  %3832 = phi i64 [ %3844, %3830 ], [ %3717, %3816 ]
  %3833 = phi i64 [ %3834, %3830 ], [ %3721, %3816 ]
  %3834 = add i64 %3833, 1
  %3835 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %3794, i64 %3833
  %3836 = getelementptr inbounds [64 x i32], [64 x i32]* %17, i64 0, i64 %3831
  %3837 = load i32, i32* %3836, align 4
  %3838 = zext i32 %3837 to i64
  %3839 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %3661, i64 %3838
  %3840 = bitcast %struct.HistogramDistance* %3835 to i8*
  %3841 = bitcast %struct.HistogramDistance* %3839 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3840, i8* align 8 %3841, i64 2192, i1 false) #5
  %3842 = getelementptr inbounds [64 x i32], [64 x i32]* %16, i64 0, i64 %3838
  %3843 = load i32, i32* %3842, align 4
  %3844 = add i64 %3832, 1
  %3845 = getelementptr inbounds i32, i32* %3819, i64 %3832
  store i32 %3843, i32* %3845, align 4
  %3846 = trunc i64 %3831 to i32
  %3847 = load i32, i32* %3836, align 4
  %3848 = zext i32 %3847 to i64
  %3849 = getelementptr inbounds [64 x i32], [64 x i32]* %19, i64 0, i64 %3848
  store i32 %3846, i32* %3849, align 4
  %3850 = add nuw i64 %3831, 1
  %3851 = icmp eq i64 %3850, %3769
  br i1 %3851, label %3821, label %3830

3852:                                             ; preds = %3852, %3828
  %3853 = phi i64 [ 0, %3828 ], [ %3872, %3852 ]
  %3854 = phi i64 [ %3829, %3828 ], [ %3873, %3852 ]
  %3855 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 %3853
  %3856 = load i32, i32* %3855, align 8
  %3857 = zext i32 %3856 to i64
  %3858 = getelementptr inbounds [64 x i32], [64 x i32]* %19, i64 0, i64 %3857
  %3859 = load i32, i32* %3858, align 4
  %3860 = add i32 %3859, %3825
  %3861 = add i64 %3853, %3711
  %3862 = getelementptr inbounds i32, i32* %3645, i64 %3861
  store i32 %3860, i32* %3862, align 4
  %3863 = or i64 %3853, 1
  %3864 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 %3863
  %3865 = load i32, i32* %3864, align 4
  %3866 = zext i32 %3865 to i64
  %3867 = getelementptr inbounds [64 x i32], [64 x i32]* %19, i64 0, i64 %3866
  %3868 = load i32, i32* %3867, align 4
  %3869 = add i32 %3868, %3825
  %3870 = add i64 %3863, %3711
  %3871 = getelementptr inbounds i32, i32* %3645, i64 %3870
  store i32 %3869, i32* %3871, align 4
  %3872 = add nuw i64 %3853, 2
  %3873 = add i64 %3854, -2
  %3874 = icmp eq i64 %3873, 0
  br i1 %3874, label %3875, label %3852

3875:                                             ; preds = %3852, %3824
  %3876 = phi i64 [ 0, %3824 ], [ %3872, %3852 ]
  %3877 = icmp eq i64 %3826, 0
  br i1 %3877, label %3887, label %3878

3878:                                             ; preds = %3875
  %3879 = getelementptr inbounds [64 x i32], [64 x i32]* %18, i64 0, i64 %3876
  %3880 = load i32, i32* %3879, align 4
  %3881 = zext i32 %3880 to i64
  %3882 = getelementptr inbounds [64 x i32], [64 x i32]* %19, i64 0, i64 %3881
  %3883 = load i32, i32* %3882, align 4
  %3884 = add i32 %3883, %3825
  %3885 = add i64 %3876, %3711
  %3886 = getelementptr inbounds i32, i32* %3645, i64 %3885
  store i32 %3884, i32* %3886, align 4
  br label %3887

3887:                                             ; preds = %3878, %3875, %3821
  %3888 = add i64 %3769, %3713
  %3889 = add i64 %3711, 64
  %3890 = icmp ult i64 %3889, %3360
  %3891 = add i64 %3710, 1
  br i1 %3890, label %3709, label %3892

3892:                                             ; preds = %3887, %3679
  %3893 = phi i8* [ %3644, %3679 ], [ %3793, %3887 ]
  %3894 = phi %struct.HistogramDistance* [ %3643, %3679 ], [ %3794, %3887 ]
  %3895 = phi i8* [ %3650, %3679 ], [ %3818, %3887 ]
  %3896 = phi i32* [ %3651, %3679 ], [ %3819, %3887 ]
  %3897 = phi i64 [ 0, %3679 ], [ %3888, %3887 ]
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3660) #5
  %3898 = shl i64 %3897, 6
  %3899 = lshr i64 %3897, 1
  %3900 = mul i64 %3899, %3897
  %3901 = icmp ult i64 %3898, %3900
  %3902 = select i1 %3901, i64 %3898, i64 %3900
  %3903 = add i64 %3902, 1
  %3904 = icmp ugt i64 %3903, 2049
  br i1 %3904, label %3905, label %3909

3905:                                             ; preds = %3892
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3662) #5
  %3906 = mul i64 %3903, 24
  %3907 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3906) #5
  %3908 = bitcast i8* %3907 to %struct.HistogramPair*
  br label %3909

3909:                                             ; preds = %3905, %3892
  %3910 = phi i8* [ %3907, %3905 ], [ %3662, %3892 ]
  %3911 = phi %struct.HistogramPair* [ %3908, %3905 ], [ %3680, %3892 ]
  %3912 = icmp ne i64 %3897, 0
  br i1 %3912, label %3913, label %3988

3913:                                             ; preds = %3909
  %3914 = shl i64 %3897, 2
  %3915 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3914) #5
  %3916 = bitcast i8* %3915 to i32*
  %3917 = icmp ult i64 %3897, 8
  br i1 %3917, label %3980, label %3918

3918:                                             ; preds = %3913
  %3919 = and i64 %3897, -8
  %3920 = add i64 %3919, -8
  %3921 = lshr exact i64 %3920, 3
  %3922 = add nuw nsw i64 %3921, 1
  %3923 = and i64 %3922, 3
  %3924 = icmp ult i64 %3920, 24
  br i1 %3924, label %3961, label %3925

3925:                                             ; preds = %3918
  %3926 = sub nsw i64 %3922, %3923
  br label %3927

3927:                                             ; preds = %3927, %3925
  %3928 = phi i64 [ 0, %3925 ], [ %3957, %3927 ]
  %3929 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %3925 ], [ %3958, %3927 ]
  %3930 = phi i64 [ %3926, %3925 ], [ %3959, %3927 ]
  %3931 = add <4 x i32> %3929, <i32 4, i32 4, i32 4, i32 4>
  %3932 = getelementptr inbounds i32, i32* %3916, i64 %3928
  %3933 = bitcast i32* %3932 to <4 x i32>*
  store <4 x i32> %3929, <4 x i32>* %3933, align 4
  %3934 = getelementptr inbounds i32, i32* %3932, i64 4
  %3935 = bitcast i32* %3934 to <4 x i32>*
  store <4 x i32> %3931, <4 x i32>* %3935, align 4
  %3936 = or i64 %3928, 8
  %3937 = add <4 x i32> %3929, <i32 8, i32 8, i32 8, i32 8>
  %3938 = add <4 x i32> %3929, <i32 12, i32 12, i32 12, i32 12>
  %3939 = getelementptr inbounds i32, i32* %3916, i64 %3936
  %3940 = bitcast i32* %3939 to <4 x i32>*
  store <4 x i32> %3937, <4 x i32>* %3940, align 4
  %3941 = getelementptr inbounds i32, i32* %3939, i64 4
  %3942 = bitcast i32* %3941 to <4 x i32>*
  store <4 x i32> %3938, <4 x i32>* %3942, align 4
  %3943 = or i64 %3928, 16
  %3944 = add <4 x i32> %3929, <i32 16, i32 16, i32 16, i32 16>
  %3945 = add <4 x i32> %3929, <i32 20, i32 20, i32 20, i32 20>
  %3946 = getelementptr inbounds i32, i32* %3916, i64 %3943
  %3947 = bitcast i32* %3946 to <4 x i32>*
  store <4 x i32> %3944, <4 x i32>* %3947, align 4
  %3948 = getelementptr inbounds i32, i32* %3946, i64 4
  %3949 = bitcast i32* %3948 to <4 x i32>*
  store <4 x i32> %3945, <4 x i32>* %3949, align 4
  %3950 = or i64 %3928, 24
  %3951 = add <4 x i32> %3929, <i32 24, i32 24, i32 24, i32 24>
  %3952 = add <4 x i32> %3929, <i32 28, i32 28, i32 28, i32 28>
  %3953 = getelementptr inbounds i32, i32* %3916, i64 %3950
  %3954 = bitcast i32* %3953 to <4 x i32>*
  store <4 x i32> %3951, <4 x i32>* %3954, align 4
  %3955 = getelementptr inbounds i32, i32* %3953, i64 4
  %3956 = bitcast i32* %3955 to <4 x i32>*
  store <4 x i32> %3952, <4 x i32>* %3956, align 4
  %3957 = add i64 %3928, 32
  %3958 = add <4 x i32> %3929, <i32 32, i32 32, i32 32, i32 32>
  %3959 = add i64 %3930, -4
  %3960 = icmp eq i64 %3959, 0
  br i1 %3960, label %3961, label %3927, !llvm.loop !37

3961:                                             ; preds = %3927, %3918
  %3962 = phi i64 [ 0, %3918 ], [ %3957, %3927 ]
  %3963 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %3918 ], [ %3958, %3927 ]
  %3964 = icmp eq i64 %3923, 0
  br i1 %3964, label %3978, label %3965

3965:                                             ; preds = %3961, %3965
  %3966 = phi i64 [ %3974, %3965 ], [ %3962, %3961 ]
  %3967 = phi <4 x i32> [ %3975, %3965 ], [ %3963, %3961 ]
  %3968 = phi i64 [ %3976, %3965 ], [ %3923, %3961 ]
  %3969 = add <4 x i32> %3967, <i32 4, i32 4, i32 4, i32 4>
  %3970 = getelementptr inbounds i32, i32* %3916, i64 %3966
  %3971 = bitcast i32* %3970 to <4 x i32>*
  store <4 x i32> %3967, <4 x i32>* %3971, align 4
  %3972 = getelementptr inbounds i32, i32* %3970, i64 4
  %3973 = bitcast i32* %3972 to <4 x i32>*
  store <4 x i32> %3969, <4 x i32>* %3973, align 4
  %3974 = add i64 %3966, 8
  %3975 = add <4 x i32> %3967, <i32 8, i32 8, i32 8, i32 8>
  %3976 = add i64 %3968, -1
  %3977 = icmp eq i64 %3976, 0
  br i1 %3977, label %3978, label %3965, !llvm.loop !38

3978:                                             ; preds = %3965, %3961
  %3979 = icmp eq i64 %3897, %3919
  br i1 %3979, label %3988, label %3980

3980:                                             ; preds = %3978, %3913
  %3981 = phi i64 [ 0, %3913 ], [ %3919, %3978 ]
  br label %3982

3982:                                             ; preds = %3980, %3982
  %3983 = phi i64 [ %3986, %3982 ], [ %3981, %3980 ]
  %3984 = trunc i64 %3983 to i32
  %3985 = getelementptr inbounds i32, i32* %3916, i64 %3983
  store i32 %3984, i32* %3985, align 4
  %3986 = add nuw i64 %3983, 1
  %3987 = icmp eq i64 %3986, %3897
  br i1 %3987, label %3988, label %3982, !llvm.loop !39

3988:                                             ; preds = %3982, %3978, %3909
  %3989 = phi i1 [ true, %3909 ], [ false, %3978 ], [ false, %3982 ]
  %3990 = phi i32* [ null, %3909 ], [ %3916, %3978 ], [ %3916, %3982 ]
  %3991 = phi i8* [ null, %3909 ], [ %3915, %3978 ], [ %3915, %3982 ]
  %3992 = call i64 @BrotliHistogramCombineDistance(%struct.HistogramDistance* %3894, i32* %3896, i32* %3645, i32* %3990, %struct.HistogramPair* %3911, i64 %3897, i64 %3360, i64 256, i64 %3902) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3910) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3895) #5
  br i1 %3912, label %3993, label %3997

3993:                                             ; preds = %3988
  %3994 = shl i64 %3897, 2
  %3995 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %3994) #5
  %3996 = bitcast i8* %3995 to i32*
  br label %3997

3997:                                             ; preds = %3993, %3988
  %3998 = phi i8* [ %3995, %3993 ], [ null, %3988 ]
  %3999 = phi i32* [ %3996, %3993 ], [ null, %3988 ]
  br i1 %3989, label %4002, label %4000

4000:                                             ; preds = %3997
  %4001 = shl nuw i64 %3897, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %3998, i8 -1, i64 %4001, i1 false) #5
  br label %4002

4002:                                             ; preds = %4000, %3997
  br i1 %3617, label %4073, label %4003

4003:                                             ; preds = %4002
  %4004 = bitcast %struct.HistogramDistance* %20 to i8*
  %4005 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %20, i64 0, i32 2
  %4006 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %20, i64 0, i32 1
  %4007 = icmp eq i64 %3992, 0
  br label %4008

4008:                                             ; preds = %4069, %4003
  %4009 = phi i32 [ 0, %4003 ], [ %4070, %4069 ]
  %4010 = phi i64 [ 0, %4003 ], [ %4071, %4069 ]
  %4011 = phi i64 [ 0, %4003 ], [ %4032, %4069 ]
  call void @llvm.lifetime.start.p0i8(i64 2192, i8* nonnull %4004) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4004, i8 0, i64 2184, i1 false) #5
  store double 0x7FF0000000000000, double* %4005, align 8
  %4012 = getelementptr inbounds i32, i32* %3648, i64 %4010
  %4013 = load i32, i32* %4012, align 4
  %4014 = icmp eq i32 %4013, 0
  br i1 %4014, label %4031, label %4015

4015:                                             ; preds = %4008, %4015
  %4016 = phi i64 [ %4027, %4015 ], [ 0, %4008 ]
  %4017 = phi i64 [ %4018, %4015 ], [ %4011, %4008 ]
  %4018 = add i64 %4017, 1
  %4019 = getelementptr inbounds i16, i16* %2821, i64 %4017
  %4020 = load i16, i16* %4019, align 2
  %4021 = zext i16 %4020 to i64
  %4022 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %20, i64 0, i32 0, i64 %4021
  %4023 = load i32, i32* %4022, align 4
  %4024 = add i32 %4023, 1
  store i32 %4024, i32* %4022, align 4
  %4025 = load i64, i64* %4006, align 8
  %4026 = add i64 %4025, 1
  store i64 %4026, i64* %4006, align 8
  %4027 = add nuw nsw i64 %4016, 1
  %4028 = load i32, i32* %4012, align 4
  %4029 = zext i32 %4028 to i64
  %4030 = icmp ult i64 %4027, %4029
  br i1 %4030, label %4015, label %4031

4031:                                             ; preds = %4015, %4008
  %4032 = phi i64 [ %4011, %4008 ], [ %4018, %4015 ]
  %4033 = icmp eq i64 %4010, 0
  %4034 = add i64 %4010, -1
  %4035 = getelementptr inbounds i32, i32* %3645, i64 %4034
  %4036 = select i1 %4033, i32* %3645, i32* %4035
  %4037 = load i32, i32* %4036, align 4
  %4038 = zext i32 %4037 to i64
  %4039 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %3894, i64 %4038
  %4040 = call double @BrotliHistogramBitCostDistanceDistance(%struct.HistogramDistance* nonnull %20, %struct.HistogramDistance* %4039) #5
  br i1 %4007, label %4060, label %4041

4041:                                             ; preds = %4031, %4053
  %4042 = phi double [ %4055, %4053 ], [ %4040, %4031 ]
  %4043 = phi i32 [ %4054, %4053 ], [ %4037, %4031 ]
  %4044 = phi i64 [ %4056, %4053 ], [ 0, %4031 ]
  %4045 = getelementptr inbounds i32, i32* %3990, i64 %4044
  %4046 = load i32, i32* %4045, align 4
  %4047 = zext i32 %4046 to i64
  %4048 = getelementptr inbounds %struct.HistogramDistance, %struct.HistogramDistance* %3894, i64 %4047
  %4049 = call double @BrotliHistogramBitCostDistanceDistance(%struct.HistogramDistance* nonnull %20, %struct.HistogramDistance* %4048) #5
  %4050 = fcmp olt double %4049, %4042
  br i1 %4050, label %4051, label %4053

4051:                                             ; preds = %4041
  %4052 = load i32, i32* %4045, align 4
  br label %4053

4053:                                             ; preds = %4051, %4041
  %4054 = phi i32 [ %4052, %4051 ], [ %4043, %4041 ]
  %4055 = phi double [ %4049, %4051 ], [ %4042, %4041 ]
  %4056 = add nuw i64 %4044, 1
  %4057 = icmp eq i64 %4056, %3992
  br i1 %4057, label %4058, label %4041

4058:                                             ; preds = %4053
  %4059 = zext i32 %4054 to i64
  br label %4060

4060:                                             ; preds = %4058, %4031
  %4061 = phi i64 [ %4059, %4058 ], [ %4038, %4031 ]
  %4062 = phi i32 [ %4054, %4058 ], [ %4037, %4031 ]
  %4063 = getelementptr inbounds i32, i32* %3645, i64 %4010
  store i32 %4062, i32* %4063, align 4
  %4064 = getelementptr inbounds i32, i32* %3999, i64 %4061
  %4065 = load i32, i32* %4064, align 4
  %4066 = icmp eq i32 %4065, -1
  br i1 %4066, label %4067, label %4069

4067:                                             ; preds = %4060
  %4068 = add i32 %4009, 1
  store i32 %4009, i32* %4064, align 4
  br label %4069

4069:                                             ; preds = %4067, %4060
  %4070 = phi i32 [ %4068, %4067 ], [ %4009, %4060 ]
  call void @llvm.lifetime.end.p0i8(i64 2192, i8* nonnull %4004) #5
  %4071 = add nuw i64 %4010, 1
  %4072 = icmp eq i64 %4071, %3360
  br i1 %4072, label %4073, label %4008

4073:                                             ; preds = %4069, %4002
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3991) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3893) #5
  %4074 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 4
  %4075 = load i64, i64* %4074, align 8
  %4076 = icmp ult i64 %4075, %3360
  br i1 %4076, label %4077, label %4099

4077:                                             ; preds = %4073
  %4078 = icmp eq i64 %4075, 0
  %4079 = select i1 %4078, i64 %3360, i64 %4075
  br label %4080

4080:                                             ; preds = %4080, %4077
  %4081 = phi i64 [ %4079, %4077 ], [ %4083, %4080 ]
  %4082 = icmp ult i64 %4081, %3360
  %4083 = shl i64 %4081, 1
  br i1 %4082, label %4080, label %4084

4084:                                             ; preds = %4080
  %4085 = icmp eq i64 %4081, 0
  br i1 %4085, label %4089, label %4086

4086:                                             ; preds = %4084
  %4087 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %4081) #5
  %4088 = load i64, i64* %4074, align 8
  br label %4089

4089:                                             ; preds = %4086, %4084
  %4090 = phi i64 [ %4088, %4086 ], [ %4075, %4084 ]
  %4091 = phi i8* [ %4087, %4086 ], [ null, %4084 ]
  %4092 = icmp eq i64 %4090, 0
  br i1 %4092, label %4096, label %4093

4093:                                             ; preds = %4089
  %4094 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 2
  %4095 = load i8*, i8** %4094, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4091, i8* align 1 %4095, i64 %4090, i1 false) #5
  br label %4096

4096:                                             ; preds = %4093, %4089
  %4097 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 2
  %4098 = load i8*, i8** %4097, align 8
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %4098) #5
  store i8* %4091, i8** %4097, align 8
  store i64 %4081, i64* %4074, align 8
  br label %4099

4099:                                             ; preds = %4096, %4073
  %4100 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 5
  %4101 = load i64, i64* %4100, align 8
  %4102 = icmp ult i64 %4101, %3360
  br i1 %4102, label %4103, label %4129

4103:                                             ; preds = %4099
  %4104 = icmp eq i64 %4101, 0
  %4105 = select i1 %4104, i64 %3360, i64 %4101
  br label %4106

4106:                                             ; preds = %4106, %4103
  %4107 = phi i64 [ %4105, %4103 ], [ %4109, %4106 ]
  %4108 = icmp ult i64 %4107, %3360
  %4109 = shl i64 %4107, 1
  br i1 %4108, label %4106, label %4110

4110:                                             ; preds = %4106
  %4111 = icmp eq i64 %4107, 0
  br i1 %4111, label %4116, label %4112

4112:                                             ; preds = %4110
  %4113 = shl i64 %4107, 2
  %4114 = call i8* @BrotliAllocate(%struct.MemoryManager* %0, i64 %4113) #5
  %4115 = load i64, i64* %4100, align 8
  br label %4116

4116:                                             ; preds = %4112, %4110
  %4117 = phi i64 [ %4115, %4112 ], [ %4101, %4110 ]
  %4118 = phi i8* [ %4114, %4112 ], [ null, %4110 ]
  %4119 = icmp eq i64 %4117, 0
  br i1 %4119, label %4125, label %4120

4120:                                             ; preds = %4116
  %4121 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 3
  %4122 = bitcast i32** %4121 to i8**
  %4123 = load i8*, i8** %4122, align 8
  %4124 = shl i64 %4117, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4118, i8* align 4 %4123, i64 %4124, i1 false) #5
  br label %4125

4125:                                             ; preds = %4116, %4120
  %4126 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 3
  %4127 = bitcast i32** %4126 to i8**
  %4128 = load i8*, i8** %4127, align 8
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %4128) #5
  store i8* %4118, i8** %4127, align 8
  store i64 %4107, i64* %4100, align 8
  br label %4129

4129:                                             ; preds = %4125, %4099
  br i1 %3617, label %4165, label %4130

4130:                                             ; preds = %4129
  %4131 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 2
  %4132 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 3
  br label %4133

4133:                                             ; preds = %4161, %4130
  %4134 = phi i8 [ 0, %4130 ], [ %4164, %4161 ]
  %4135 = phi i64 [ 0, %4130 ], [ %4163, %4161 ]
  %4136 = phi i32 [ 0, %4130 ], [ %4162, %4161 ]
  %4137 = phi i64 [ 0, %4130 ], [ %4141, %4161 ]
  %4138 = getelementptr inbounds i32, i32* %3648, i64 %4137
  %4139 = load i32, i32* %4138, align 4
  %4140 = add i32 %4139, %4136
  %4141 = add nuw i64 %4137, 1
  %4142 = icmp eq i64 %4141, %3360
  %4143 = getelementptr inbounds i32, i32* %3645, i64 %4137
  %4144 = load i32, i32* %4143, align 4
  br i1 %4142, label %4149, label %4145

4145:                                             ; preds = %4133
  %4146 = getelementptr inbounds i32, i32* %3645, i64 %4141
  %4147 = load i32, i32* %4146, align 4
  %4148 = icmp eq i32 %4144, %4147
  br i1 %4148, label %4161, label %4149

4149:                                             ; preds = %4145, %4133
  %4150 = zext i32 %4144 to i64
  %4151 = getelementptr inbounds i32, i32* %3999, i64 %4150
  %4152 = load i32, i32* %4151, align 4
  %4153 = trunc i32 %4152 to i8
  %4154 = load i8*, i8** %4131, align 8
  %4155 = getelementptr inbounds i8, i8* %4154, i64 %4135
  store i8 %4153, i8* %4155, align 1
  %4156 = load i32*, i32** %4132, align 8
  %4157 = getelementptr inbounds i32, i32* %4156, i64 %4135
  store i32 %4140, i32* %4157, align 4
  %4158 = icmp ugt i8 %4134, %4153
  %4159 = select i1 %4158, i8 %4134, i8 %4153
  %4160 = add i64 %4135, 1
  br label %4161

4161:                                             ; preds = %4149, %4145
  %4162 = phi i32 [ 0, %4149 ], [ %4140, %4145 ]
  %4163 = phi i64 [ %4160, %4149 ], [ %4135, %4145 ]
  %4164 = phi i8 [ %4159, %4149 ], [ %4134, %4145 ]
  br i1 %4142, label %4165, label %4133

4165:                                             ; preds = %4161, %4129
  %4166 = phi i64 [ 0, %4129 ], [ %4163, %4161 ]
  %4167 = phi i8 [ 0, %4129 ], [ %4164, %4161 ]
  %4168 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 1
  store i64 %4166, i64* %4168, align 8
  %4169 = zext i8 %4167 to i64
  %4170 = add nuw nsw i64 %4169, 1
  %4171 = getelementptr inbounds %struct.BlockSplit, %struct.BlockSplit* %9, i64 0, i32 0
  store i64 %4170, i64* %4171, align 8
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3998) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3647) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3646) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %3666) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %3665) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %3664) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %3663) #5
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %3139) #5
  br label %4172

4172:                                             ; preds = %2849, %2917, %4165
  call void @BrotliFree(%struct.MemoryManager* %0, i8* %2820) #5
  ret void

4173:                                             ; preds = %3702
  %4174 = getelementptr inbounds i8, i8* %3139, i64 %3692
  %4175 = load i8, i8* %4174, align 1
  %4176 = getelementptr inbounds i8, i8* %3139, i64 %3707
  %4177 = load i8, i8* %4176, align 1
  %4178 = icmp eq i8 %4175, %4177
  br i1 %4178, label %4181, label %4179

4179:                                             ; preds = %4173, %3702
  %4180 = add i64 %3703, 1
  br label %4181

4181:                                             ; preds = %4179, %4173
  %4182 = phi i64 [ %4180, %4179 ], [ %3703, %4173 ]
  %4183 = add i64 %3688, -2
  %4184 = icmp eq i64 %4183, 0
  br i1 %4184, label %3672, label %3685

4185:                                             ; preds = %3269
  %4186 = trunc i64 %3271 to i8
  store i8 %4186, i8* %3255, align 1
  br label %4187

4187:                                             ; preds = %4185, %3269
  %4188 = phi double [ %3277, %4185 ], [ %3270, %3269 ]
  %4189 = add nuw nsw i64 %3257, 2
  %4190 = add i64 %3259, -2
  %4191 = icmp eq i64 %4190, 0
  br i1 %4191, label %3279, label %3256

4192:                                             ; preds = %3453
  %4193 = add i16 %3454, 1
  store i16 %3454, i16* %3459, align 2
  br label %4194

4194:                                             ; preds = %4192, %3453
  %4195 = phi i16 [ %4193, %4192 ], [ %3454, %3453 ]
  %4196 = add nuw i64 %3442, 2
  %4197 = add i64 %3444, -2
  %4198 = icmp eq i64 %4197, 0
  br i1 %4198, label %3462, label %3441

4199:                                             ; preds = %2344
  %4200 = getelementptr inbounds i8, i8* %1781, i64 %2334
  %4201 = load i8, i8* %4200, align 1
  %4202 = getelementptr inbounds i8, i8* %1781, i64 %2349
  %4203 = load i8, i8* %4202, align 1
  %4204 = icmp eq i8 %4201, %4203
  br i1 %4204, label %4207, label %4205

4205:                                             ; preds = %4199, %2344
  %4206 = add i64 %2345, 1
  br label %4207

4207:                                             ; preds = %4205, %4199
  %4208 = phi i64 [ %4206, %4205 ], [ %2345, %4199 ]
  %4209 = add i64 %2330, -2
  %4210 = icmp eq i64 %4209, 0
  br i1 %4210, label %2314, label %2327

4211:                                             ; preds = %1911
  %4212 = trunc i64 %1913 to i8
  store i8 %4212, i8* %1897, align 1
  br label %4213

4213:                                             ; preds = %4211, %1911
  %4214 = phi double [ %1919, %4211 ], [ %1912, %1911 ]
  %4215 = add nuw nsw i64 %1899, 2
  %4216 = add i64 %1901, -2
  %4217 = icmp eq i64 %4216, 0
  br i1 %4217, label %1921, label %1898

4218:                                             ; preds = %2095
  %4219 = add i16 %2096, 1
  store i16 %2096, i16* %2101, align 2
  br label %4220

4220:                                             ; preds = %4218, %2095
  %4221 = phi i16 [ %4219, %4218 ], [ %2096, %2095 ]
  %4222 = add nuw i64 %2084, 2
  %4223 = add i64 %2086, -2
  %4224 = icmp eq i64 %4223, 0
  br i1 %4224, label %2104, label %2083

4225:                                             ; preds = %968
  %4226 = getelementptr inbounds i8, i8* %411, i64 %958
  %4227 = load i8, i8* %4226, align 1
  %4228 = getelementptr inbounds i8, i8* %411, i64 %973
  %4229 = load i8, i8* %4228, align 1
  %4230 = icmp eq i8 %4227, %4229
  br i1 %4230, label %4233, label %4231

4231:                                             ; preds = %4225, %968
  %4232 = add i64 %969, 1
  br label %4233

4233:                                             ; preds = %4231, %4225
  %4234 = phi i64 [ %4232, %4231 ], [ %969, %4225 ]
  %4235 = add i64 %954, -2
  %4236 = icmp eq i64 %4235, 0
  br i1 %4236, label %938, label %951

4237:                                             ; preds = %535
  %4238 = trunc i64 %537 to i8
  store i8 %4238, i8* %521, align 1
  br label %4239

4239:                                             ; preds = %4237, %535
  %4240 = phi double [ %543, %4237 ], [ %536, %535 ]
  %4241 = add nuw nsw i64 %523, 2
  %4242 = add i64 %525, -2
  %4243 = icmp eq i64 %4242, 0
  br i1 %4243, label %545, label %522

4244:                                             ; preds = %719
  %4245 = add i16 %720, 1
  store i16 %720, i16* %725, align 2
  br label %4246

4246:                                             ; preds = %4244, %719
  %4247 = phi i16 [ %4245, %4244 ], [ %720, %719 ]
  %4248 = add nuw i64 %708, 2
  %4249 = add i64 %710, -2
  %4250 = icmp eq i64 %4249, 0
  br i1 %4250, label %728, label %707
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare hidden i8* @BrotliAllocate(%struct.MemoryManager*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree nounwind
declare double @log2(double) local_unnamed_addr #4

declare hidden double @BrotliPopulationCostLiteral(%struct.HistogramLiteral*) local_unnamed_addr #2

declare hidden i64 @BrotliHistogramCombineLiteral(%struct.HistogramLiteral*, i32*, i32*, i32*, %struct.HistogramPair*, i64, i64, i64, i64) local_unnamed_addr #2

declare hidden double @BrotliHistogramBitCostDistanceLiteral(%struct.HistogramLiteral*, %struct.HistogramLiteral*) local_unnamed_addr #2

declare hidden double @BrotliPopulationCostCommand(%struct.HistogramCommand*) local_unnamed_addr #2

declare hidden i64 @BrotliHistogramCombineCommand(%struct.HistogramCommand*, i32*, i32*, i32*, %struct.HistogramPair*, i64, i64, i64, i64) local_unnamed_addr #2

declare hidden double @BrotliHistogramBitCostDistanceCommand(%struct.HistogramCommand*, %struct.HistogramCommand*) local_unnamed_addr #2

declare hidden double @BrotliPopulationCostDistance(%struct.HistogramDistance*) local_unnamed_addr #2

declare hidden i64 @BrotliHistogramCombineDistance(%struct.HistogramDistance*, i32*, i32*, i32*, %struct.HistogramPair*, i64, i64, i64, i64) local_unnamed_addr #2

declare hidden double @BrotliHistogramBitCostDistanceDistance(%struct.HistogramDistance*, %struct.HistogramDistance*) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !3}
!10 = distinct !{!10, !11, !7}
!11 = !{!"llvm.loop.unroll.runtime.disable"}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !7}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !11, !7}
!17 = distinct !{!17, !3}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !3}
!20 = distinct !{!20, !7}
!21 = distinct !{!21, !7}
!22 = distinct !{!22, !3}
!23 = distinct !{!23, !11, !7}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !3}
!26 = distinct !{!26, !7}
!27 = distinct !{!27, !3}
!28 = distinct !{!28, !11, !7}
!29 = distinct !{!29, !3}
!30 = distinct !{!30, !3}
!31 = distinct !{!31, !7}
!32 = distinct !{!32, !7}
!33 = distinct !{!33, !3}
!34 = distinct !{!34, !11, !7}
!35 = distinct !{!35, !3}
!36 = distinct !{!36, !3}
!37 = distinct !{!37, !7}
!38 = distinct !{!38, !3}
!39 = distinct !{!39, !11, !7}
