; ModuleID = '../../services/network/pending_callback_chain.cc'
source_filename = "../../services/network/pending_callback_chain.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::PendingCallbackChain" = type { %"class.base::RefCounted", i32, i32, %"class.base::OnceCallback" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN7network20PendingCallbackChainEFviEJ13scoped_refptrIS4_EEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN7network20PendingCallbackChainEFviEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZN7network20PendingCallbackChainC1EN4base12OnceCallbackIFviEEE = hidden unnamed_addr alias void (%"class.network::PendingCallbackChain"*, %"class.base::OnceCallback"*), void (%"class.network::PendingCallbackChain"*, %"class.base::OnceCallback"*)* @_ZN7network20PendingCallbackChainC2EN4base12OnceCallbackIFviEEE
@_ZN7network20PendingCallbackChainD1Ev = hidden unnamed_addr alias void (%"class.network::PendingCallbackChain"*), void (%"class.network::PendingCallbackChain"*)* @_ZN7network20PendingCallbackChainD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7network20PendingCallbackChainC2EN4base12OnceCallbackIFviEEE(%"class.network::PendingCallbackChain"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network20PendingCallbackChainD2Ev(%"class.network::PendingCallbackChain"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network20PendingCallbackChain14CreateCallbackEv(%"class.base::OnceCallback"* noalias nocapture sret, %"class.network::PendingCallbackChain"*) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_Znwm(i64 56) #9, !noalias !2
  %4 = bitcast i8* %3 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %4, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7network20PendingCallbackChainEFviEJ13scoped_refptrIS4_EEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7network20PendingCallbackChainEFviEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !2
  %5 = getelementptr inbounds i8, i8* %3, i64 32
  %6 = bitcast i8* %5 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.network::PendingCallbackChain"*, i32)* @_ZN7network20PendingCallbackChain16CallbackCompleteEi to i64), i64 0>, <2 x i64>* %6, align 8, !noalias !2
  %7 = getelementptr inbounds i8, i8* %3, i64 48
  %8 = bitcast i8* %7 to %"class.network::PendingCallbackChain"**
  store %"class.network::PendingCallbackChain"* %1, %"class.network::PendingCallbackChain"** %8, align 8, !noalias !2
  %9 = icmp eq %"class.network::PendingCallbackChain"* %1, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %1, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %11) #8, !noalias !2
  br label %12

12:                                               ; preds = %2, %10
  %13 = bitcast %"class.base::OnceCallback"* %0 to i8**
  store i8* %3, i8** %13, align 8, !alias.scope !2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network20PendingCallbackChain16CallbackCompleteEi(%"class.network::PendingCallbackChain"* nocapture, i32) #1 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = icmp eq i32 %1, 0
  %9 = icmp eq i32 %5, %1
  %10 = or i1 %8, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %7, %2
  %12 = phi i32 [ %1, %2 ], [ -2, %7 ]
  store i32 %12, i32* %4, align 8
  br label %13

13:                                               ; preds = %11, %7
  %14 = phi i32 [ %5, %7 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, -1
  store i32 %17, i32* %15, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %0, i64 0, i32 3
  %21 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %27 = inttoptr i64 %24 to %"class.base::internal::BindStateBase"*
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %27, i64 0, i32 1
  %29 = bitcast void ()** %28 to void (%"class.base::internal::BindStateBase"*, i32)**
  %30 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %29, align 8
  tail call void %30(%"class.base::internal::BindStateBase"* %27, i32 %14) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %31

31:                                               ; preds = %19, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7network20PendingCallbackChain9AddResultEi(%"class.network::PendingCallbackChain"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, -1
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 4
  br label %18

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  store i32 %1, i32* %9, align 8
  br label %18

13:                                               ; preds = %8
  %14 = icmp eq i32 %1, 0
  %15 = icmp eq i32 %10, %1
  %16 = or i1 %14, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  store i32 -2, i32* %9, align 8
  br label %18

18:                                               ; preds = %17, %13, %12, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7network20PendingCallbackChain9SetResultEi(%"class.network::PendingCallbackChain"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0
  %8 = icmp eq i32 %4, %1
  %9 = or i1 %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %6, %2
  %11 = phi i32 [ %1, %2 ], [ -2, %6 ]
  store i32 %11, i32* %3, align 8
  br label %12

12:                                               ; preds = %10, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7network20PendingCallbackChain9GetResultEv(%"class.network::PendingCallbackChain"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ -1, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN7network20PendingCallbackChainEFviEJ13scoped_refptrIS4_EEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = bitcast void ()** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  %13 = bitcast i8* %12 to %"class.network::PendingCallbackChain"*
  %14 = and i64 %6, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %6, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.network::PendingCallbackChain"*, i32)**
  %22 = load void (%"class.network::PendingCallbackChain"*, i32)*, void (%"class.network::PendingCallbackChain"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %6 to void (%"class.network::PendingCallbackChain"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.network::PendingCallbackChain"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.network::PendingCallbackChain"* %13, i32 %1) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN7network20PendingCallbackChainEFviEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.network::PendingCallbackChain"**
  %6 = load %"class.network::PendingCallbackChain"*, %"class.network::PendingCallbackChain"** %5, align 8
  %7 = icmp eq %"class.network::PendingCallbackChain"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %6, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %9) #8
  %10 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %6, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.network::PendingCallbackChain", %"class.network::PendingCallbackChain"* %6, i64 0, i32 0
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 4
  %16 = bitcast %"class.base::RefCounted"* %15 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %16) #8
  %17 = bitcast %"class.network::PendingCallbackChain"* %6 to i8*
  tail call void @_ZdlPv(i8* %17) #9
  br label %18

18:                                               ; preds = %3, %8, %13
  %19 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7network20PendingCallbackChainEFviEJPS4_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7network20PendingCallbackChainEFviEJPS4_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN7network20PendingCallbackChainEFviEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN7network20PendingCallbackChainEFviEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
