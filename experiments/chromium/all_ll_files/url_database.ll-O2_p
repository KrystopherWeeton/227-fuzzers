; ModuleID = '../../components/history/core/browser/url_database.cc'
source_filename = "../../components/history/core/browser/url_database.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Component" = type { i32, i32 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.GURL* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.19" }
%"class.std::__1::basic_string.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.28 }
%union.anon.28 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"struct.history::VisitContentModelAnnotations::Category"*, %"struct.history::VisitContentModelAnnotations::Category"*, %"class.std::__1::__compressed_pair.64" }
%"struct.history::VisitContentModelAnnotations::Category" = type { i32, i32 }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.history::VisitContentModelAnnotations::Category"* }
%"class.query_parser::Snippet" = type { %"class.std::__1::basic_string.25", %"class.std::__1::vector.69" }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"struct.std::__1::pair.71"*, %"struct.std::__1::pair.71"*, %"class.std::__1::__compressed_pair.72" }
%"struct.std::__1::pair.71" = type { i64, i64 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.std::__1::pair.71"* }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.history::URLDatabase::URLEnumeratorBase" = type { i32 (...)**, i8, [7 x i8], %"class.sql::Statement" }
%"class.sql::Statement" = type <{ %class.scoped_refptr, i8, i8, [6 x i8] }>
%class.scoped_refptr = type { %"class.sql::Database::StatementRef"* }
%"class.sql::Database::StatementRef" = type <{ %"class.base::RefCounted", [4 x i8], %"class.sql::Database"*, %struct.sqlite3_stmt*, i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::HistogramBase" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%struct.sqlite3_stmt = type opaque
%"class.history::URLDatabase::URLEnumerator" = type { %"class.history::URLDatabase::URLEnumeratorBase" }
%"class.history::URLDatabase" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.history::URLRow" = type <{ i32 (...)**, i64, %class.GURL, %"class.std::__1::basic_string.25", i32, i32, %"class.base::Time", i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.29 }
%struct.anon.29 = type { %"struct.std::__1::__padding.30", i8 }
%"struct.std::__1::__padding.30" = type { [1 x i8] }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.history::URLRow"*, %"class.history::URLRow"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.history::URLRow"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator.14" = type { i8 }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.query_parser::QueryNode"* }
%"class.query_parser::QueryNode" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::unique_ptr.44"* }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"*, %"class.std::__1::__compressed_pair.57" }
%"struct.query_parser::QueryWord" = type { %"class.std::__1::basic_string.25", i64 }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.query_parser::QueryWord"* }
%"class.history::URLResult" = type <{ %"class.history::URLRow.base", [7 x i8], %"class.base::Time", %"struct.history::VisitContentAnnotations", %"class.query_parser::Snippet", %"class.std::__1::vector.69", i8, [7 x i8] }>
%"class.history::URLRow.base" = type <{ i32 (...)**, i64, %class.GURL, %"class.std::__1::basic_string.25", i32, i32, %"class.base::Time", i8 }>
%"struct.history::VisitContentAnnotations" = type { i64, %"struct.history::VisitContentModelAnnotations" }
%"struct.history::VisitContentModelAnnotations" = type { float, %"class.std::__1::vector.62", i64 }
%"struct.history::KeywordSearchTermRow" = type { i64, i64, %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.history::KeywordSearchTermRow"*, %"struct.history::KeywordSearchTermRow"*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.history::KeywordSearchTermRow"* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"struct.history::KeywordSearchTermVisit"*, %"struct.history::KeywordSearchTermVisit"*, %"class.std::__1::__compressed_pair.86" }
%"struct.history::KeywordSearchTermVisit" = type { %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25", i32, %"class.base::Time" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.history::KeywordSearchTermVisit"* }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"*, %"class.std::__1::__compressed_pair.93" }
%"struct.history::NormalizedKeywordSearchTermVisit" = type { %"class.std::__1::basic_string.25", i32, %"class.base::Time" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.history::NormalizedKeywordSearchTermVisit"* }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"class.history::VisitRow"*, %"class.history::VisitRow"*, %"class.std::__1::__compressed_pair.100" }
%"class.history::VisitRow" = type <{ i64, i64, %"class.base::Time", i64, i32, [4 x i8], i64, %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.history::VisitRow"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer.114" = type { %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"*, %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.94", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::allocator.96"* }
%"class.std::__1::allocator.96" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN7history11URLDatabase13URLEnumeratorD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN7history6URLRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN7history20KeywordSearchTermRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN7history22KeywordSearchTermVisitENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZN7history22KeywordSearchTermVisitC2ERKS0_ = comdat any

$_ZNSt3__16vectorIN7history32NormalizedKeywordSearchTermVisitENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN7history32NormalizedKeywordSearchTermVisitENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE = comdat any

$_ZTVN7history11URLDatabase13URLEnumeratorE = comdat any

@_ZN7history11URLDatabase13kURLRowFieldsE = hidden constant [103 x i8] c" urls.id, urls.url, urls.title, urls.visit_count, urls.typed_count, urls.last_visit_time, urls.hidden \00", align 16
@_ZN7history11URLDatabase16kNumURLRowFieldsE = hidden local_unnamed_addr constant i32 9, align 4
@_ZTVN7history11URLDatabase17URLEnumeratorBaseE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.history::URLDatabase::URLEnumeratorBase"*)* @_ZN7history11URLDatabase17URLEnumeratorBaseD2Ev to i8*), i8* bitcast (void (%"class.history::URLDatabase::URLEnumeratorBase"*)* @_ZN7history11URLDatabase17URLEnumeratorBaseD0Ev to i8*)] }, align 8
@_ZTVN7history11URLDatabase13URLEnumeratorE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.history::URLDatabase::URLEnumeratorBase"*)* @_ZN7history11URLDatabase17URLEnumeratorBaseD2Ev to i8*), i8* bitcast (void (%"class.history::URLDatabase::URLEnumerator"*)* @_ZN7history11URLDatabase13URLEnumeratorD0Ev to i8*)] }, comdat, align 8
@_ZTVN7history11URLDatabaseE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.history::URLDatabase"*)* @_ZN7history11URLDatabaseD2Ev to i8*), i8* bitcast (void (%"class.history::URLDatabase"*)* @_ZN7history11URLDatabaseD0Ev to i8*), i8* bitcast (i1 (%"class.history::URLDatabase"*, i64, %"class.std::__1::vector.98"*)* @_ZN7history11URLDatabase16GetVisitsForUrl2ElPNSt3__16vectorINS_8VisitRowENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [156 x i8] c"CREATE TABLE temp_keyword_search_terms (keyword_id INTEGER NOT NULL,url_id INTEGER NOT NULL,term LONGVARCHAR NOT NULL,normalized_term LONGVARCHAR NOT NULL)\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"../../components/history/core/browser/url_database.cc\00", align 1
@.str.2 = private unnamed_addr constant [70 x i8] c"SELECT keyword_id, url_id, lower_term, term FROM keyword_search_terms\00", align 1
@.str.3 = private unnamed_addr constant [99 x i8] c"INSERT INTO temp_keyword_search_terms (keyword_id, url_id, term, normalized_term) VALUES (?,?,?,?)\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"DROP TABLE keyword_search_terms\00", align 1
@.str.5 = private unnamed_addr constant [69 x i8] c"ALTER TABLE temp_keyword_search_terms RENAME TO keyword_search_terms\00", align 1
@.str.6 = private unnamed_addr constant [129 x i8] c"SELECT urls.id, urls.url, urls.title, urls.visit_count, urls.typed_count, urls.last_visit_time, urls.hidden FROM urls WHERE id=?\00", align 1
@.str.7 = private unnamed_addr constant [130 x i8] c"SELECT urls.id, urls.url, urls.title, urls.visit_count, urls.typed_count, urls.last_visit_time, urls.hidden FROM urls WHERE url=?\00", align 1
@.str.8 = private unnamed_addr constant [89 x i8] c"UPDATE urls SET title=?,visit_count=?,typed_count=?,last_visit_time=?,hidden=?WHERE id=?\00", align 1
@.str.9 = private unnamed_addr constant [107 x i8] c"INSERT INTO temp_urls (url, title, visit_count, typed_count, last_visit_time, hidden) VALUES (?,?,?,?,?,?)\00", align 1
@.str.10 = private unnamed_addr constant [102 x i8] c"INSERT INTO urls (url, title, visit_count, typed_count, last_visit_time, hidden) VALUES (?,?,?,?,?,?)\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"Failed to add url \00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c" to table history.urls.\00", align 1
@.str.13 = private unnamed_addr constant [69 x i8] c"SELECT sql FROM sqlite_master WHERE type = 'table' AND name = 'urls'\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"AUTOINCREMENT\00", align 1
@.str.15 = private unnamed_addr constant [125 x i8] c"INSERT OR REPLACE INTO urls (id, url, title, visit_count, typed_count, last_visit_time, hidden) VALUES (?, ?, ?, ?, ?, ?, ?)\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"DELETE FROM urls WHERE id = ?\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"DROP TABLE urls\00", align 1
@.str.18 = private unnamed_addr constant [37 x i8] c"ALTER TABLE temp_urls RENAME TO urls\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"SELECT \00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c" FROM urls\00", align 1
@.str.21 = private unnamed_addr constant [95 x i8] c" FROM urls WHERE hidden = 0 AND (last_visit_time >= ? OR visit_count >= ? OR typed_count >= ?)\00", align 1
@.str.22 = private unnamed_addr constant [67 x i8] c" ORDER BY typed_count DESC, last_visit_time DESC, visit_count DESC\00", align 1
@.str.23 = private unnamed_addr constant [254 x i8] c"SELECT urls.id, urls.url, urls.title, urls.visit_count, urls.typed_count, urls.last_visit_time, urls.hidden FROM urls WHERE url >= ? AND url < ? AND hidden = 0 AND typed_count > 0 ORDER BY typed_count DESC, visit_count DESC, last_visit_time DESC LIMIT ?\00", align 1
@.str.24 = private unnamed_addr constant [234 x i8] c"SELECT urls.id, urls.url, urls.title, urls.visit_count, urls.typed_count, urls.last_visit_time, urls.hidden FROM urls WHERE url >= ? AND url < ? AND hidden = 0 ORDER BY typed_count DESC, visit_count DESC, last_visit_time DESC LIMIT ?\00", align 1
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@_ZN3url10kFtpSchemeE = external constant [0 x i8], align 1
@__const._ZN7history11URLDatabase11IsTypedHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_.schemes = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url10kFtpSchemeE, i32 0, i32 0)], align 16
@_ZN3url24kStandardSchemeSeparatorE = external constant [0 x i8], align 1
@.str.25 = private unnamed_addr constant [22 x i8] c" FROM urls WHERE url \00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.28 = private unnamed_addr constant [135 x i8] c" ? AND url < :end AND url = substr(:end, 1, length(url)) AND hidden = 0 AND visit_count >= ? AND typed_count >= ? ORDER BY url LIMIT 1\00", align 1
@.str.29 = private unnamed_addr constant [135 x i8] c"SELECT urls.id, urls.url, urls.title, urls.visit_count, urls.typed_count, urls.last_visit_time, urls.hidden FROM urls WHERE hidden = 0\00", align 1
@__const._ZN7history11URLDatabase27GetTextMatchesWithAlgorithmERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEN12query_parser17MatchingAlgorithmEPNS1_6vectorINS_6URLRowENS5_ISD_EEEE.info = private unnamed_addr constant <{ <{ i32 (...)**, i64, { %"class.std::__1::basic_string", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr.19" }, %"class.std::__1::basic_string.25", i32, i32, %"class.base::Time", i8 }>, [7 x i8], %"class.base::Time", { i64, { float, [4 x i8], %"class.std::__1::vector.62", i64 } }, %"class.query_parser::Snippet", %"class.std::__1::vector.69", i8, [7 x i8] }> <{ <{ i32 (...)**, i64, { %"class.std::__1::basic_string", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr.19" }, %"class.std::__1::basic_string.25", i32, i32, %"class.base::Time", i8 }> <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i64 -6148914691236517206, { %"class.std::__1::basic_string", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr.19" } { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.11" { %"struct.std::__1::__compressed_pair_elem.12" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.std::__1::unique_ptr.19" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %class.GURL* inttoptr (i64 -6148914691236517206 to %class.GURL*) } } } }, %"class.std::__1::basic_string.25" { %"class.std::__1::__compressed_pair.26" { %"struct.std::__1::__compressed_pair_elem.27" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.28 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i32 -1431655766, i32 -1431655766, %"class.base::Time" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.base::Time" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, { i64, { float, [4 x i8], %"class.std::__1::vector.62", i64 } } { i64 -6148914691236517206, { float, [4 x i8], %"class.std::__1::vector.62", i64 } { float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector.62" { %"class.std::__1::__vector_base.63" { %"struct.history::VisitContentModelAnnotations::Category"* inttoptr (i64 -6148914691236517206 to %"struct.history::VisitContentModelAnnotations::Category"*), %"struct.history::VisitContentModelAnnotations::Category"* inttoptr (i64 -6148914691236517206 to %"struct.history::VisitContentModelAnnotations::Category"*), %"class.std::__1::__compressed_pair.64" { %"struct.std::__1::__compressed_pair_elem.65" { %"struct.history::VisitContentModelAnnotations::Category"* inttoptr (i64 -6148914691236517206 to %"struct.history::VisitContentModelAnnotations::Category"*) } } } }, i64 -6148914691236517206 } }, %"class.query_parser::Snippet" { %"class.std::__1::basic_string.25" { %"class.std::__1::__compressed_pair.26" { %"struct.std::__1::__compressed_pair_elem.27" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon.28 { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::vector.69" { %"class.std::__1::__vector_base.70" { %"struct.std::__1::pair.71"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.71"*), %"struct.std::__1::pair.71"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.71"*), %"class.std::__1::__compressed_pair.72" { %"struct.std::__1::__compressed_pair_elem.73" { %"struct.std::__1::pair.71"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.71"*) } } } } }, %"class.std::__1::vector.69" { %"class.std::__1::__vector_base.70" { %"struct.std::__1::pair.71"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.71"*), %"struct.std::__1::pair.71"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.71"*), %"class.std::__1::__compressed_pair.72" { %"struct.std::__1::__compressed_pair_elem.73" { %"struct.std::__1::pair.71"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.71"*) } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@.str.30 = private unnamed_addr constant [21 x i8] c"keyword_search_terms\00", align 1
@.str.31 = private unnamed_addr constant [151 x i8] c"CREATE TABLE keyword_search_terms (keyword_id INTEGER NOT NULL,url_id INTEGER NOT NULL,term LONGVARCHAR NOT NULL,normalized_term LONGVARCHAR NOT NULL)\00", align 1
@.str.32 = private unnamed_addr constant [109 x i8] c"CREATE INDEX IF NOT EXISTS keyword_search_terms_index1 ON keyword_search_terms (keyword_id, normalized_term)\00", align 1
@.str.33 = private unnamed_addr constant [88 x i8] c"CREATE INDEX IF NOT EXISTS keyword_search_terms_index2 ON keyword_search_terms (url_id)\00", align 1
@.str.34 = private unnamed_addr constant [86 x i8] c"CREATE INDEX IF NOT EXISTS keyword_search_terms_index3 ON keyword_search_terms (term)\00", align 1
@.str.35 = private unnamed_addr constant [74 x i8] c"SELECT term FROM keyword_search_terms WHERE keyword_id = ? AND url_id = ?\00", align 1
@.str.36 = private unnamed_addr constant [94 x i8] c"INSERT INTO keyword_search_terms (keyword_id, url_id, term, normalized_term) VALUES (?,?,?,?)\00", align 1
@.str.37 = private unnamed_addr constant [82 x i8] c"SELECT keyword_id, term, normalized_term FROM keyword_search_terms WHERE url_id=?\00", align 1
@.str.38 = private unnamed_addr constant [82 x i8] c"SELECT keyword_id, url_id, normalized_term FROM keyword_search_terms WHERE term=?\00", align 1
@.str.39 = private unnamed_addr constant [52 x i8] c"DELETE FROM keyword_search_terms WHERE keyword_id=?\00", align 1
@.str.40 = private unnamed_addr constant [238 x i8] c"SELECT DISTINCT kv.term, u.visit_count, u.last_visit_time FROM keyword_search_terms kv JOIN urls u ON kv.url_id = u.id WHERE kv.keyword_id = ? AND kv.normalized_term >= ? AND kv.normalized_term < ? ORDER BY u.last_visit_time DESC LIMIT ?\00", align 1
@.str.41 = private unnamed_addr constant [769 x i8] c"\0A      SELECT\0A        normalized_term,\0A        SUM(visit_count) AS visit_count,\0A        MAX(last_visit_time) AS last_visit_time\0A      FROM\0A        (\0A          SELECT\0A            normalized_term,\0A            AVG(visit_count) AS visit_count,\0A            MIN(u.last_visit_time) AS last_visit_time,\0A            u.last_visit_time - (u.last_visit_time % ?) as rnd_last_visit_time\0A          FROM\0A            keyword_search_terms kv JOIN urls u ON kv.url_id = u.id\0A          WHERE\0A            kv.keyword_id = ?\0A            AND u.last_visit_time > ?\0A            AND kv.normalized_term IS NOT NULL\0A            AND kv.normalized_term != \22\22\0A          GROUP BY normalized_term, rnd_last_visit_time\0A        )\0A      GROUP BY normalized_term\0A      ORDER BY last_visit_time DESC\0A      \00", align 1
@_ZN7history44kAutocompleteDuplicateVisitIntervalThresholdE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 300000000 }, align 8
@.str.42 = private unnamed_addr constant [46 x i8] c"DELETE FROM keyword_search_terms WHERE term=?\00", align 1
@.str.43 = private unnamed_addr constant [76 x i8] c"DELETE FROM keyword_search_terms WHERE keyword_id = ? AND normalized_term=?\00", align 1
@.str.44 = private unnamed_addr constant [48 x i8] c"DELETE FROM keyword_search_terms WHERE url_id=?\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"urls\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"starred_id\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"temp_urls\00", align 1
@.str.48 = private unnamed_addr constant [14 x i8] c"CREATE TABLE \00", align 1
@.str.49 = private unnamed_addr constant [218 x i8] c"(id INTEGER PRIMARY KEY AUTOINCREMENT,url LONGVARCHAR,title LONGVARCHAR,visit_count INTEGER DEFAULT 0 NOT NULL,typed_count INTEGER DEFAULT 0 NOT NULL,last_visit_time INTEGER NOT NULL,hidden INTEGER DEFAULT 0 NOT NULL)\00", align 1
@.str.50 = private unnamed_addr constant [56 x i8] c"CREATE INDEX IF NOT EXISTS urls_url_index ON urls (url)\00", align 1
@.str.51 = private unnamed_addr constant [173 x i8] c"INSERT INTO temp_urls (id, url, title, visit_count, typed_count, last_visit_time, hidden) SELECT id, url, title, visit_count, typed_count, last_visit_time, hidden FROM urls\00", align 1
@_ZN7history26kLowQualityMatchTypedLimitE = hidden local_unnamed_addr constant i32 1, align 4
@_ZN7history26kLowQualityMatchVisitLimitE = hidden local_unnamed_addr constant i32 4, align 4
@_ZN7history30kLowQualityMatchAgeLimitInDaysE = hidden local_unnamed_addr constant i32 3, align 4
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN7history11URLDatabase17URLEnumeratorBaseC1Ev = hidden unnamed_addr alias void (%"class.history::URLDatabase::URLEnumeratorBase"*), void (%"class.history::URLDatabase::URLEnumeratorBase"*)* @_ZN7history11URLDatabase17URLEnumeratorBaseC2Ev
@_ZN7history11URLDatabase17URLEnumeratorBaseD1Ev = hidden unnamed_addr alias void (%"class.history::URLDatabase::URLEnumeratorBase"*), void (%"class.history::URLDatabase::URLEnumeratorBase"*)* @_ZN7history11URLDatabase17URLEnumeratorBaseD2Ev
@_ZN7history11URLDatabase13URLEnumeratorC1Ev = hidden unnamed_addr alias void (%"class.history::URLDatabase::URLEnumerator"*), void (%"class.history::URLDatabase::URLEnumerator"*)* @_ZN7history11URLDatabase13URLEnumeratorC2Ev
@_ZN7history11URLDatabaseD1Ev = hidden unnamed_addr alias void (%"class.history::URLDatabase"*), void (%"class.history::URLDatabase"*)* @_ZN7history11URLDatabaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history11URLDatabase17URLEnumeratorBaseC2Ev(%"class.history::URLDatabase::URLEnumeratorBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::URLDatabase::URLEnumeratorBase", %"class.history::URLDatabase::URLEnumeratorBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history11URLDatabase17URLEnumeratorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.history::URLDatabase::URLEnumeratorBase", %"class.history::URLDatabase::URLEnumeratorBase"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.history::URLDatabase::URLEnumeratorBase", %"class.history::URLDatabase::URLEnumeratorBase"* %0, i64 0, i32 3
  tail call void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"* %4) #18
  ret void
}

declare void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history11URLDatabase17URLEnumeratorBaseD0Ev(%"class.history::URLDatabase::URLEnumeratorBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::URLDatabase::URLEnumeratorBase", %"class.history::URLDatabase::URLEnumeratorBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history11URLDatabase17URLEnumeratorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.history::URLDatabase::URLEnumeratorBase", %"class.history::URLDatabase::URLEnumeratorBase"* %0, i64 0, i32 3
  tail call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* %3) #18
  %4 = bitcast %"class.history::URLDatabase::URLEnumeratorBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history11URLDatabase13URLEnumeratorC2Ev(%"class.history::URLDatabase::URLEnumerator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::URLDatabase::URLEnumerator", %"class.history::URLDatabase::URLEnumerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history11URLDatabase17URLEnumeratorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.history::URLDatabase::URLEnumerator", %"class.history::URLDatabase::URLEnumerator"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.history::URLDatabase::URLEnumerator", %"class.history::URLDatabase::URLEnumerator"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"* %4) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history11URLDatabase13URLEnumeratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase13URLEnumerator10GetNextURLEPNS_6URLRowE(%"class.history::URLDatabase::URLEnumerator"*, %"class.history::URLRow"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.history::URLDatabase::URLEnumerator", %"class.history::URLDatabase::URLEnumerator"* %0, i64 0, i32 0, i32 3
  %4 = tail call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* %3) #18
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @_ZN7history11URLDatabase10FillURLRowERKN3sql9StatementEPNS_6URLRowE(%"class.sql::Statement"* dereferenceable(16) %3, %"class.history::URLRow"* %1)
  br label %6

6:                                                ; preds = %2, %5
  %7 = phi i1 [ true, %5 ], [ false, %2 ]
  ret i1 %7
}

declare zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history11URLDatabase10FillURLRowERKN3sql9StatementEPNS_6URLRowE(%"class.sql::Statement"* dereferenceable(16), %"class.history::URLRow"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.GURL, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string.25", align 8
  %6 = tail call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 0) #18
  %7 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 1
  store i64 %6, i64* %7, align 8
  %8 = bitcast %class.GURL* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %8) #18
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #18
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %4, %"class.sql::Statement"* %0, i32 1) #18
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %9
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i64 %18, i64 %19
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %3, i8* %16, i64 %20) #18
  %21 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 2
  %22 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %21, %class.GURL* nonnull dereferenceable(120) %3) #18
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #18
  %23 = load i8, i8* %11, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %2
  %26 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %26) #19
  br label %27

27:                                               ; preds = %2, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %8) #18
  %28 = bitcast %"class.std::__1::basic_string.25"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #18
  call void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.25"* nonnull sret %5, %"class.sql::Statement"* %0, i32 2) #18
  %29 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3
  %30 = bitcast %"class.std::__1::basic_string.25"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %32 to i64
  %37 = select i1 %33, i64 %35, i64 %36
  %38 = bitcast %"class.std::__1::basic_string.25"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %40 to i64
  %45 = select i1 %41, i64 %43, i64 %44
  %46 = icmp eq i64 %37, %45
  br i1 %46, label %47, label %70

47:                                               ; preds = %27
  %48 = icmp eq i64 %37, 0
  br i1 %48, label %73, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = bitcast %"class.std::__1::basic_string.25"* %29 to i16*
  %53 = select i1 %41, i16* %51, i16* %52
  %54 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i16*, i16** %54, align 8
  %56 = bitcast %"class.std::__1::basic_string.25"* %5 to i16*
  %57 = select i1 %33, i16* %55, i16* %56
  br label %58

58:                                               ; preds = %65, %49
  %59 = phi i64 [ %66, %65 ], [ %37, %49 ]
  %60 = phi i16* [ %68, %65 ], [ %53, %49 ]
  %61 = phi i16* [ %67, %65 ], [ %57, %49 ]
  %62 = load i16, i16* %61, align 2
  %63 = load i16, i16* %60, align 2
  %64 = icmp eq i16 %63, %62
  br i1 %64, label %65, label %70

65:                                               ; preds = %58
  %66 = add i64 %59, -1
  %67 = getelementptr inbounds i16, i16* %61, i64 1
  %68 = getelementptr inbounds i16, i16* %60, i64 1
  %69 = icmp eq i64 %66, 0
  br i1 %69, label %73, label %58

70:                                               ; preds = %58, %27
  %71 = call dereferenceable(24) %"class.std::__1::basic_string.25"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.25"* %29, %"class.std::__1::basic_string.25"* nonnull dereferenceable(24) %5) #18
  %72 = load i8, i8* %31, align 1
  br label %73

73:                                               ; preds = %65, %47, %70
  %74 = phi i8 [ %32, %47 ], [ %72, %70 ], [ %32, %65 ]
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %73
  %77 = bitcast %"class.std::__1::basic_string.25"* %5 to i8**
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #19
  br label %79

79:                                               ; preds = %73, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #18
  %80 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* %0, i32 3) #18
  %81 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 4
  store i32 %80, i32* %81, align 8
  %82 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* %0, i32 4) #18
  %83 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 5
  store i32 %82, i32* %83, align 4
  %84 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 5) #18
  %85 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 6, i32 0, i32 0
  store i64 %84, i64* %85, align 8
  %86 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* %0, i32 6) #18
  %87 = icmp ne i32 %86, 0
  %88 = zext i1 %87 to i8
  %89 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 7
  store i8 %88, i8* %89, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7history11URLDatabaseC2Ev(%"class.history::URLDatabase"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.history::URLDatabase", %"class.history::URLDatabase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7history11URLDatabaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.history::URLDatabase", %"class.history::URLDatabase"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7history11URLDatabaseD2Ev(%"class.history::URLDatabase"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7history11URLDatabaseD0Ev(%"class.history::URLDatabase"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

declare void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* sret, %"class.sql::Statement"*, i32) local_unnamed_addr #1

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

declare void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.25"* sret, %"class.sql::Statement"*, i32) local_unnamed_addr #1

declare i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase41MigrateKeywordsSearchTermsLowerTermColumnEv(%"class.history::URLDatabase"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.sql::Statement", align 8
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %"class.std::__1::basic_string.25", align 8
  %5 = alloca %"class.std::__1::basic_string.25", align 8
  %6 = alloca %"class.std::__1::basic_string.25", align 8
  %7 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %8 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %8, i64 3
  %10 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %9, align 8
  %11 = tail call dereferenceable(136) %"class.sql::Database"* %10(%"class.history::URLDatabase"* %0) #18
  %12 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %11, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str, i64 0, i64 0)) #18
  br i1 %12, label %13, label %129

13:                                               ; preds = %1
  %14 = bitcast %"class.sql::Statement"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #18
  %15 = bitcast %"class.sql::Statement"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %7, align 8
  %17 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %16, i64 3
  %18 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %17, align 8
  %19 = tail call dereferenceable(136) %"class.sql::Database"* %18(%"class.history::URLDatabase"* %0) #18
  %20 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %19, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 77, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.2, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %2, %"class.sql::Database::StatementRef"* %20) #18
  %21 = bitcast %"class.sql::Statement"* %3 to i8*
  %22 = bitcast %"class.std::__1::basic_string.25"* %4 to i8*
  %23 = bitcast %"class.std::__1::basic_string.25"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::basic_string.25"* %4 to i16*
  %27 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string.25"* %4 to i8**
  %29 = bitcast %"class.std::__1::basic_string.25"* %5 to i8*
  %30 = bitcast %"class.std::__1::basic_string.25"* %6 to i8*
  %31 = bitcast %"class.std::__1::basic_string.25"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::__1::basic_string.25"* %6 to i16*
  %35 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string.25"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string.25"* %5 to i16*
  %40 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string.25"* %5 to i8**
  %42 = bitcast %"class.std::__1::basic_string.25"* %6 to i8**
  %43 = bitcast %"class.sql::Statement"* %3 to i8*
  br label %44

44:                                               ; preds = %93, %13
  %45 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %2) #18
  br i1 %45, label %46, label %95

46:                                               ; preds = %44
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false)
  %47 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %7, align 8
  %48 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %47, i64 3
  %49 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %48, align 8
  %50 = call dereferenceable(136) %"class.sql::Database"* %49(%"class.history::URLDatabase"* %0) #18
  %51 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %50, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 82, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.3, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %51) #18
  %52 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %2, i32 0) #18
  %53 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %52) #18
  %54 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %2, i32 1) #18
  %55 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 1, i64 %54) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #18
  call void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.25"* nonnull sret %4, %"class.sql::Statement"* nonnull %2, i32 3) #18
  %56 = load i8, i8* %24, align 1
  %57 = icmp slt i8 %56, 0
  %58 = load i16*, i16** %25, align 8
  %59 = select i1 %57, i16* %58, i16* %26
  %60 = load i64, i64* %27, align 8
  %61 = zext i8 %56 to i64
  %62 = select i1 %57, i64 %60, i64 %61
  %63 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* nonnull %3, i32 2, i16* %59, i64 %62) #18
  %64 = load i8, i8* %24, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %46
  %67 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %67) #19
  br label %68

68:                                               ; preds = %46, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #18
  call void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.25"* nonnull sret %6, %"class.sql::Statement"* nonnull %2, i32 2) #18
  %69 = load i8, i8* %32, align 1
  %70 = icmp slt i8 %69, 0
  %71 = load i16*, i16** %33, align 8
  %72 = select i1 %70, i16* %71, i16* %34
  %73 = load i64, i64* %35, align 8
  %74 = zext i8 %69 to i64
  %75 = select i1 %70, i64 %73, i64 %74
  call void @_ZN4base18CollapseWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEb(%"class.std::__1::basic_string.25"* nonnull sret %5, i16* %72, i64 %75, i1 zeroext false) #18
  %76 = load i8, i8* %37, align 1
  %77 = icmp slt i8 %76, 0
  %78 = load i16*, i16** %38, align 8
  %79 = select i1 %77, i16* %78, i16* %39
  %80 = load i64, i64* %40, align 8
  %81 = zext i8 %76 to i64
  %82 = select i1 %77, i64 %80, i64 %81
  %83 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* nonnull %3, i32 3, i16* %79, i64 %82) #18
  %84 = load i8, i8* %37, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %68
  %87 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %87) #19
  br label %88

88:                                               ; preds = %68, %86
  %89 = load i8, i8* %32, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %88
  %92 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %92) #19
  br label %93

93:                                               ; preds = %88, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #18
  %94 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #18
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #18
  br i1 %94, label %44, label %127

95:                                               ; preds = %44
  %96 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %2) #18
  br i1 %96, label %97, label %127

97:                                               ; preds = %95
  %98 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %7, align 8
  %99 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %98, i64 3
  %100 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %99, align 8
  %101 = call dereferenceable(136) %"class.sql::Database"* %100(%"class.history::URLDatabase"* %0) #18
  %102 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %101, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0)) #18
  br i1 %102, label %103, label %127

103:                                              ; preds = %97
  %104 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %7, align 8
  %105 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %104, i64 3
  %106 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %105, align 8
  %107 = call dereferenceable(136) %"class.sql::Database"* %106(%"class.history::URLDatabase"* %0) #18
  %108 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %107, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.5, i64 0, i64 0)) #18
  br i1 %108, label %109, label %127

109:                                              ; preds = %103
  %110 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %7, align 8
  %111 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %110, i64 3
  %112 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %111, align 8
  %113 = call dereferenceable(136) %"class.sql::Database"* %112(%"class.history::URLDatabase"* %0) #18
  %114 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %113, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.32, i64 0, i64 0)) #18
  br i1 %114, label %115, label %127

115:                                              ; preds = %109
  %116 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %7, align 8
  %117 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %116, i64 3
  %118 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %117, align 8
  %119 = call dereferenceable(136) %"class.sql::Database"* %118(%"class.history::URLDatabase"* %0) #18
  %120 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %119, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.33, i64 0, i64 0)) #18
  br i1 %120, label %121, label %127

121:                                              ; preds = %115
  %122 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %7, align 8
  %123 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %122, i64 3
  %124 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %123, align 8
  %125 = call dereferenceable(136) %"class.sql::Database"* %124(%"class.history::URLDatabase"* %0) #18
  %126 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %125, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.34, i64 0, i64 0)) #18
  br label %127

127:                                              ; preds = %93, %121, %115, %109, %103, %97, %95
  %128 = phi i1 [ false, %95 ], [ false, %97 ], [ false, %103 ], [ true, %109 ], [ true, %115 ], [ true, %121 ], [ false, %93 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #18
  br label %129

129:                                              ; preds = %1, %127
  %130 = phi i1 [ %128, %127 ], [ false, %1 ]
  ret i1 %130
}

declare zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #1

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"*, i8*, i64, i8*) local_unnamed_addr #1

declare void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"*, i32, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"*, i32, i16*, i64) local_unnamed_addr #1

declare void @_ZN4base18CollapseWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEb(%"class.std::__1::basic_string.25"* sret, i16*, i64, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase31CreateKeywordSearchTermsIndicesEv(%"class.history::URLDatabase"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %3 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %3, i64 3
  %5 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %4, align 8
  %6 = tail call dereferenceable(136) %"class.sql::Database"* %5(%"class.history::URLDatabase"* %0) #18
  %7 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.32, i64 0, i64 0)) #18
  br i1 %7, label %8, label %20

8:                                                ; preds = %1
  %9 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %2, align 8
  %10 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %9, i64 3
  %11 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %10, align 8
  %12 = tail call dereferenceable(136) %"class.sql::Database"* %11(%"class.history::URLDatabase"* %0) #18
  %13 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %12, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.33, i64 0, i64 0)) #18
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %2, align 8
  %16 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %15, i64 3
  %17 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %16, align 8
  %18 = tail call dereferenceable(136) %"class.sql::Database"* %17(%"class.history::URLDatabase"* %0) #18
  %19 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %18, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.34, i64 0, i64 0)) #18
  br label %20

20:                                               ; preds = %14, %8, %1
  %21 = phi i1 [ false, %1 ], [ false, %8 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase9GetURLRowElPNS_6URLRowE(%"class.history::URLDatabase"*, i64, %"class.history::URLRow"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #18
  %6 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %6, align 8
  %9 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %8, i64 3
  %10 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %9, align 8
  %11 = tail call dereferenceable(136) %"class.sql::Database"* %10(%"class.history::URLDatabase"* %0) #18
  %12 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %11, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 116, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.6, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %12) #18
  %13 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %1) #18
  %14 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #18
  br i1 %14, label %15, label %16

15:                                               ; preds = %3
  call void @_ZN7history11URLDatabase10FillURLRowERKN3sql9StatementEPNS_6URLRowE(%"class.sql::Statement"* nonnull dereferenceable(16) %4, %"class.history::URLRow"* %2)
  br label %16

16:                                               ; preds = %3, %15
  %17 = phi i1 [ true, %15 ], [ false, %3 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #18
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7history11URLDatabase12GetRowForURLERK4GURLPNS_6URLRowE(%"class.history::URLDatabase"*, %class.GURL* dereferenceable(120), %"class.history::URLRow"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  %7 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %8 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %7, align 8
  %10 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %9, i64 3
  %11 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %10, align 8
  %12 = tail call dereferenceable(136) %"class.sql::Database"* %11(%"class.history::URLDatabase"* %0) #18
  %13 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %12, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 128, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.7, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %13) #18
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #18
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @_ZN14database_utils17GurlToDatabaseUrlERK4GURL(%"class.std::__1::basic_string"* nonnull sret %5, %class.GURL* dereferenceable(120) %1) #18
  %17 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %4, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #18
  %18 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #18
  br i1 %18, label %19, label %24

19:                                               ; preds = %3
  %20 = icmp eq %"class.history::URLRow"* %2, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %19
  call void @_ZN7history11URLDatabase10FillURLRowERKN3sql9StatementEPNS_6URLRowE(%"class.sql::Statement"* nonnull dereferenceable(16) %4, %"class.history::URLRow"* nonnull %2)
  br label %22

22:                                               ; preds = %19, %21
  %23 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %4, i32 0) #18
  br label %24

24:                                               ; preds = %3, %22
  %25 = phi i64 [ %23, %22 ], [ 0, %3 ]
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %31) #19
  br label %32

32:                                               ; preds = %24, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #18
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  ret i64 %25
}

declare void @_ZN14database_utils17GurlToDatabaseUrlERK4GURL(%"class.std::__1::basic_string"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase12UpdateURLRowElRKNS_6URLRowE(%"class.history::URLDatabase"*, i64, %"class.history::URLRow"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #18
  %6 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %6, align 8
  %9 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %8, i64 3
  %10 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %9, align 8
  %11 = tail call dereferenceable(136) %"class.sql::Database"* %10(%"class.history::URLDatabase"* %0) #18
  %12 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %11, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 142, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.8, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %12) #18
  %13 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 3
  %14 = bitcast %"class.std::__1::basic_string.25"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string.25"* %13 to i16*
  %21 = select i1 %17, i16* %19, i16* %20
  %22 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i64 %23, i64 %24
  %26 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* nonnull %4, i32 0, i16* %21, i64 %25) #18
  %27 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %4, i32 1, i32 %28) #18
  %30 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %4, i32 2, i32 %31) #18
  %33 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 6, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 3, i64 %34) #18
  %36 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %2, i64 0, i32 7
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = zext i8 %37 to i32
  %39 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %4, i32 4, i32 %38) #18
  %40 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 5, i64 %1) #18
  %41 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #18
  br i1 %41, label %42, label %49

42:                                               ; preds = %3
  %43 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %6, align 8
  %44 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %43, i64 3
  %45 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %44, align 8
  %46 = call dereferenceable(136) %"class.sql::Database"* %45(%"class.history::URLDatabase"* %0) #18
  %47 = call i32 @_ZNK3sql8Database18GetLastChangeCountEv(%"class.sql::Database"* %46) #18
  %48 = icmp sgt i32 %47, 0
  br label %49

49:                                               ; preds = %42, %3
  %50 = phi i1 [ false, %3 ], [ %48, %42 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #18
  ret i1 %50
}

declare zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK3sql8Database18GetLastChangeCountEv(%"class.sql::Database"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7history11URLDatabase14AddURLInternalERKNS_6URLRowEb(%"class.history::URLDatabase"*, %"class.history::URLRow"* dereferenceable(184), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = select i1 %2, i64 168, i64 171
  %8 = select i1 %2, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.10, i64 0, i64 0)
  %9 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #18
  %10 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %11 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  %12 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %10, align 8
  %13 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %12, i64 3
  %14 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %13, align 8
  %15 = tail call dereferenceable(136) %"class.sql::Database"* %14(%"class.history::URLDatabase"* %0) #18
  %16 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %15, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 %7, i8* %8) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %16) #18
  %17 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #18
  %18 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 2
  call void @_ZN14database_utils17GurlToDatabaseUrlERK4GURL(%"class.std::__1::basic_string"* nonnull sret %5, %class.GURL* dereferenceable(120) %18) #18
  %19 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %4, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #18
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #19
  br label %27

27:                                               ; preds = %3, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #18
  %28 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string.25"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string.25"* %28 to i16*
  %36 = select i1 %32, i16* %34, i16* %35
  %37 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %31 to i64
  %40 = select i1 %32, i64 %38, i64 %39
  %41 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* nonnull %4, i32 1, i16* %36, i64 %40) #18
  %42 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %4, i32 2, i32 %43) #18
  %45 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 5
  %46 = load i32, i32* %45, align 4
  %47 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %4, i32 3, i32 %46) #18
  %48 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 6, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 4, i64 %49) #18
  %51 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 7
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = zext i8 %52 to i32
  %54 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %4, i32 5, i32 %53) #18
  %55 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #18
  br i1 %55, label %78, label %56

56:                                               ; preds = %27
  %57 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 54) #18
  %58 = icmp sgt i32 %57, -1
  br i1 %58, label %59, label %84

59:                                               ; preds = %56
  %60 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %60) #18
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 186, i32 0) #18
  %61 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %62 = bitcast %"class.std::__1::basic_ostringstream"* %61 to %"class.std::__1::basic_ostream"*
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %62, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i64 18) #18
  %64 = bitcast %class.GURL* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = getelementptr inbounds %class.GURL, %class.GURL* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %class.GURL* %18 to i8*
  %73 = zext i8 %66 to i64
  %74 = select i1 %67, i8* %69, i8* %72
  %75 = select i1 %67, i64 %71, i64 %73
  %76 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %63, i8* %74, i64 %75) #18
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %76, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i64 23) #18
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %60) #18
  br label %84

78:                                               ; preds = %27
  %79 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %10, align 8
  %80 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %79, i64 3
  %81 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %80, align 8
  %82 = call dereferenceable(136) %"class.sql::Database"* %81(%"class.history::URLDatabase"* %0) #18
  %83 = call i64 @_ZNK3sql8Database18GetLastInsertRowIdEv(%"class.sql::Database"* %82) #18
  br label %84

84:                                               ; preds = %59, %56, %78
  %85 = phi i64 [ %83, %78 ], [ 0, %56 ], [ 0, %59 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #18
  ret i64 %85
}

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #2

declare i64 @_ZNK3sql8Database18GetLastInsertRowIdEv(%"class.sql::Database"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase29URLTableContainsAutoincrementEv(%"class.history::URLDatabase"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.sql::Statement", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.sql::Statement"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #18
  %5 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %6 = bitcast %"class.sql::Statement"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %5, align 8
  %8 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %7, i64 3
  %9 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %8, align 8
  %10 = tail call dereferenceable(136) %"class.sql::Database"* %9(%"class.history::URLDatabase"* %0) #18
  %11 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %10, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.13, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %2, %"class.sql::Database::StatementRef"* %11) #18
  %12 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %2) #18
  br i1 %12, label %13, label %58

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #18
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %3, %"class.sql::Statement"* nonnull %2, i32 0) #18
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = load i8*, i8** %15, align 8
  %23 = select i1 %21, i8* %22, i8* %14
  %24 = load i64, i64* %16, align 8
  %25 = zext i8 %20 to i64
  %26 = select i1 %21, i64 %24, i64 %25
  %27 = getelementptr inbounds i8, i8* %23, i64 %26
  %28 = ptrtoint i8* %27 to i64
  %29 = ptrtoint i8* %23 to i64
  %30 = icmp slt i64 %26, 13
  br i1 %30, label %49, label %31

31:                                               ; preds = %13, %44
  %32 = phi i64 [ %47, %44 ], [ %26, %13 ]
  %33 = phi i8* [ %45, %44 ], [ %23, %13 ]
  %34 = add nsw i64 %32, -12
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %49, label %36

36:                                               ; preds = %31
  %37 = call i8* @memchr(i8* %33, i32 65, i64 %34) #18
  %38 = icmp eq i8* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = call i32 @bcmp(i8* nonnull %37, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i64 13) #18
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  %43 = ptrtoint i8* %37 to i64
  br label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds i8, i8* %37, i64 1
  %46 = ptrtoint i8* %45 to i64
  %47 = sub i64 %28, %46
  %48 = icmp slt i64 %47, 13
  br i1 %48, label %49, label %31

49:                                               ; preds = %44, %36, %31, %42, %13
  %50 = phi i64 [ %28, %13 ], [ %43, %42 ], [ %28, %31 ], [ %28, %36 ], [ %28, %44 ]
  %51 = phi i8* [ %27, %13 ], [ %37, %42 ], [ %27, %31 ], [ %27, %36 ], [ %27, %44 ]
  %52 = icmp ne i8* %51, %27
  %53 = sub i64 %50, %29
  %54 = icmp ne i64 %53, -1
  %55 = and i1 %54, %52
  br i1 %21, label %56, label %57

56:                                               ; preds = %49
  call void @_ZdlPv(i8* %22) #19
  br label %57

57:                                               ; preds = %49, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #18
  br label %58

58:                                               ; preds = %1, %57
  %59 = phi i1 [ %55, %57 ], [ false, %1 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #18
  ret i1 %59
}

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase24InsertOrUpdateURLRowByIDERKNS_6URLRowE(%"class.history::URLDatabase"*, %"class.history::URLRow"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #18
  %6 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %7 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %6, align 8
  %9 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %8, i64 3
  %10 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %9, align 8
  %11 = tail call dereferenceable(136) %"class.sql::Database"* %10(%"class.history::URLDatabase"* %0) #18
  %12 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %11, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 227, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.15, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %12) #18
  %13 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %14) #18
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #18
  %17 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 2
  call void @_ZN14database_utils17GurlToDatabaseUrlERK4GURL(%"class.std::__1::basic_string"* nonnull sret %4, %class.GURL* dereferenceable(120) %17) #18
  %18 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %3, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #18
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #19
  br label %26

26:                                               ; preds = %2, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #18
  %27 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3
  %28 = bitcast %"class.std::__1::basic_string.25"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string.25"* %27 to i16*
  %35 = select i1 %31, i16* %33, i16* %34
  %36 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %30 to i64
  %39 = select i1 %31, i64 %37, i64 %38
  %40 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* nonnull %3, i32 2, i16* %35, i64 %39) #18
  %41 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 4
  %42 = load i32, i32* %41, align 8
  %43 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %3, i32 3, i32 %42) #18
  %44 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 5
  %45 = load i32, i32* %44, align 4
  %46 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %3, i32 4, i32 %45) #18
  %47 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 6, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 5, i64 %48) #18
  %50 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %1, i64 0, i32 7
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = zext i8 %51 to i32
  %53 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %3, i32 6, i32 %52) #18
  %54 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #18
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #18
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase12DeleteURLRowEl(%"class.history::URLDatabase"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #18
  %6 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %6, align 8
  %9 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %8, i64 3
  %10 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %9, align 8
  %11 = tail call dereferenceable(136) %"class.sql::Database"* %10(%"class.history::URLDatabase"* %0) #18
  %12 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %11, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 244, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %12) #18
  %13 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %1) #18
  %14 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #18
  br i1 %14, label %15, label %28

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.history::URLDatabase", %"class.history::URLDatabase"* %0, i64 0, i32 1
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false) #18
  %21 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %6, align 8
  %22 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %21, i64 3
  %23 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %22, align 8
  %24 = call dereferenceable(136) %"class.sql::Database"* %23(%"class.history::URLDatabase"* %0) #18
  %25 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %24, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 706, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.44, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %25) #18
  %26 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %1) #18
  %27 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #18
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #18
  br label %28

28:                                               ; preds = %19, %15, %2
  %29 = phi i1 [ false, %2 ], [ true, %15 ], [ %27, %19 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #18
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase29DeleteKeywordSearchTermForURLEl(%"class.history::URLDatabase"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #18
  %5 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %5, align 8
  %8 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %7, i64 3
  %9 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %8, align 8
  %10 = tail call dereferenceable(136) %"class.sql::Database"* %9(%"class.history::URLDatabase"* %0) #18
  %11 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %10, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 706, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.44, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %11) #18
  %12 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %1) #18
  %13 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #18
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #18
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase23CreateTemporaryURLTableEv(%"class.history::URLDatabase"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN7history11URLDatabase14CreateURLTableEb(%"class.history::URLDatabase"* %0, i1 zeroext true)
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase14CreateURLTableEb(%"class.history::URLDatabase"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = select i1 %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)
  %5 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %6 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %6, i64 3
  %8 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %7, align 8
  %9 = tail call dereferenceable(136) %"class.sql::Database"* %8(%"class.history::URLDatabase"* %0) #18
  %10 = tail call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %9, i8* %4) #18
  br i1 %10, label %33, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #18
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #18
  %14 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48, i64 0, i64 0)) #18
  %15 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* %4) #18
  %16 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([218 x i8], [218 x i8]* @.str.49, i64 0, i64 0)) #18
  %17 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %5, align 8
  %18 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %17, i64 3
  %19 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %18, align 8
  %20 = call dereferenceable(136) %"class.sql::Database"* %19(%"class.history::URLDatabase"* %0) #18
  %21 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = load i8*, i8** %13, align 8
  %26 = select i1 %24, i8* %25, i8* %12
  %27 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %20, i8* %26) #18
  %28 = load i8, i8* %22, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %11
  %31 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %31) #19
  br label %32

32:                                               ; preds = %11, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #18
  br label %33

33:                                               ; preds = %2, %32
  %34 = phi i1 [ %27, %32 ], [ true, %2 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase23CommitTemporaryURLTableEv(%"class.history::URLDatabase"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %3 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %3, i64 3
  %5 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %4, align 8
  %6 = tail call dereferenceable(136) %"class.sql::Database"* %5(%"class.history::URLDatabase"* %0) #18
  %7 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0)) #18
  br i1 %7, label %8, label %20

8:                                                ; preds = %1
  %9 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %2, align 8
  %10 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %9, i64 3
  %11 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %10, align 8
  %12 = tail call dereferenceable(136) %"class.sql::Database"* %11(%"class.history::URLDatabase"* %0) #18
  %13 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0)) #18
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %2, align 8
  %16 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %15, i64 3
  %17 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %16, align 8
  %18 = tail call dereferenceable(136) %"class.sql::Database"* %17(%"class.history::URLDatabase"* %0) #18
  %19 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %18, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.50, i64 0, i64 0)) #18
  br label %20

20:                                               ; preds = %8, %1, %14
  %21 = phi i1 [ %19, %14 ], [ false, %1 ], [ false, %8 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase18CreateMainURLIndexEv(%"class.history::URLDatabase"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %3 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %3, i64 3
  %5 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %4, align 8
  %6 = tail call dereferenceable(136) %"class.sql::Database"* %5(%"class.history::URLDatabase"* %0) #18
  %7 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.50, i64 0, i64 0)) #18
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase30InitURLEnumeratorForEverythingEPNS0_13URLEnumeratorE(%"class.history::URLDatabase"*, %"class.history::URLDatabase::URLEnumerator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #18
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  store i8 7, i8* %7, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), i64 7, i1 false) #18
  %10 = getelementptr inbounds i8, i8* %4, i64 7
  store i8 0, i8* %10, align 1
  %11 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @_ZN7history11URLDatabase13kURLRowFieldsE, i64 0, i64 0)) #18
  %12 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0)) #18
  %13 = getelementptr inbounds %"class.history::URLDatabase::URLEnumerator", %"class.history::URLDatabase::URLEnumerator"* %1, i64 0, i32 0, i32 3
  %14 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %15 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %15, i64 3
  %17 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %16, align 8
  %18 = call dereferenceable(136) %"class.sql::Database"* %17(%"class.history::URLDatabase"* %0) #18
  %19 = load i8, i8* %7, align 1
  %20 = icmp slt i8 %19, 0
  %21 = load i8*, i8** %5, align 8
  %22 = select i1 %20, i8* %21, i8* %4
  %23 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %18, i8* %22) #18
  call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* %13, %"class.sql::Database::StatementRef"* %23) #18
  %24 = getelementptr inbounds %"class.sql::Statement", %"class.sql::Statement"* %13, i64 0, i32 0, i32 0
  %25 = load %"class.sql::Database::StatementRef"*, %"class.sql::Database::StatementRef"** %24, align 8
  %26 = getelementptr inbounds %"class.sql::Database::StatementRef", %"class.sql::Database::StatementRef"* %25, i64 0, i32 3
  %27 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %26, align 8
  %28 = icmp ne %struct.sqlite3_stmt* %27, null
  %29 = getelementptr inbounds %"class.history::URLDatabase::URLEnumerator", %"class.history::URLDatabase::URLEnumerator"* %1, i64 0, i32 0, i32 1
  %30 = zext i1 %28 to i8
  store i8 %30, i8* %29, align 8
  %31 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %26, align 8
  %32 = icmp ne %struct.sqlite3_stmt* %31, null
  %33 = load i8, i8* %7, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %2
  %36 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %36) #19
  br label %37

37:                                               ; preds = %2, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #18
  ret i1 %32
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase31InitURLEnumeratorForSignificantEPNS0_13URLEnumeratorE(%"class.history::URLDatabase"*, %"class.history::URLDatabase::URLEnumerator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #18
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  store i8 7, i8* %7, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), i64 7, i1 false) #18
  %10 = getelementptr inbounds i8, i8* %4, i64 7
  store i8 0, i8* %10, align 1
  %11 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @_ZN7history11URLDatabase13kURLRowFieldsE, i64 0, i64 0)) #18
  %12 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.21, i64 0, i64 0)) #18
  %13 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.22, i64 0, i64 0)) #18
  %14 = getelementptr inbounds %"class.history::URLDatabase::URLEnumerator", %"class.history::URLDatabase::URLEnumerator"* %1, i64 0, i32 0, i32 3
  %15 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %16 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %16, i64 3
  %18 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %17, align 8
  %19 = call dereferenceable(136) %"class.sql::Database"* %18(%"class.history::URLDatabase"* %0) #18
  %20 = load i8, i8* %7, align 1
  %21 = icmp slt i8 %20, 0
  %22 = load i8*, i8** %5, align 8
  %23 = select i1 %21, i8* %22, i8* %4
  %24 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %19, i8* %23) #18
  call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* %14, %"class.sql::Database::StatementRef"* %24) #18
  %25 = call i64 @_ZN4base4Time3NowEv() #18
  %26 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %25, i64 -259200000000) #18
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  %29 = select i1 %27, i64 -9223372036854775808, i64 %28, !prof !3
  %30 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* %14, i32 0, i64 %29) #18
  %31 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* %14, i32 1, i32 4) #18
  %32 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* %14, i32 2, i32 1) #18
  %33 = getelementptr inbounds %"class.sql::Statement", %"class.sql::Statement"* %14, i64 0, i32 0, i32 0
  %34 = load %"class.sql::Database::StatementRef"*, %"class.sql::Database::StatementRef"** %33, align 8
  %35 = getelementptr inbounds %"class.sql::Database::StatementRef", %"class.sql::Database::StatementRef"* %34, i64 0, i32 3
  %36 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %35, align 8
  %37 = icmp ne %struct.sqlite3_stmt* %36, null
  %38 = getelementptr inbounds %"class.history::URLDatabase::URLEnumerator", %"class.history::URLDatabase::URLEnumerator"* %1, i64 0, i32 0, i32 1
  %39 = zext i1 %37 to i8
  store i8 %39, i8* %38, align 8
  %40 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %35, align 8
  %41 = icmp ne %struct.sqlite3_stmt* %40, null
  %42 = load i8, i8* %7, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %2
  %45 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %45) #19
  br label %46

46:                                               ; preds = %2, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #18
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7history24AutocompleteAgeThresholdEv() local_unnamed_addr #0 {
  %1 = tail call i64 @_ZN4base4Time3NowEv() #18
  %2 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1, i64 -259200000000)
  %3 = extractvalue { i64, i1 } %2, 1
  %4 = extractvalue { i64, i1 } %2, 0
  %5 = select i1 %3, i64 -9223372036854775808, i64 %4, !prof !3
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase21AutocompleteForPrefixERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEmbPNS1_6vectorINS_6URLRowENS5_ISB_EEEE(%"class.history::URLDatabase"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i1 zeroext, %"class.std::__1::vector.35"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.sql::Statement", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.history::URLRow", align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %4, i64 0, i32 0, i32 0
  %10 = load %"class.history::URLRow"*, %"class.history::URLRow"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %4, i64 0, i32 0, i32 1
  %12 = load %"class.history::URLRow"*, %"class.history::URLRow"** %11, align 8
  %13 = icmp eq %"class.history::URLRow"* %12, %10
  br i1 %13, label %21, label %14

14:                                               ; preds = %5, %14
  %15 = phi %"class.history::URLRow"* [ %16, %14 ], [ %12, %5 ]
  %16 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %15, i64 -1
  %17 = bitcast %"class.history::URLRow"* %16 to void (%"class.history::URLRow"*)***
  %18 = load void (%"class.history::URLRow"*)**, void (%"class.history::URLRow"*)*** %17, align 8
  %19 = load void (%"class.history::URLRow"*)*, void (%"class.history::URLRow"*)** %18, align 8
  tail call void %19(%"class.history::URLRow"* %16) #18
  %20 = icmp eq %"class.history::URLRow"* %16, %10
  br i1 %20, label %21, label %14

21:                                               ; preds = %14, %5
  store %"class.history::URLRow"* %10, %"class.history::URLRow"** %11, align 8
  %22 = select i1 %3, i64 324, i64 330
  %23 = select i1 %3, i8* getelementptr inbounds ([254 x i8], [254 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([234 x i8], [234 x i8]* @.str.24, i64 0, i64 0)
  %24 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #18
  %25 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %26 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %25, align 8
  %28 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %27, i64 3
  %29 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %28, align 8
  %30 = tail call dereferenceable(136) %"class.sql::Database"* %29(%"class.history::URLDatabase"* %0) #18
  %31 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %30, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 %22, i8* %23) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %6, %"class.sql::Database::StatementRef"* %31) #18
  %32 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #18
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %37 = load i8, i8* %35, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %21
  %40 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %40, i64 24, i1 false) #18
  br label %46

41:                                               ; preds = %21
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %43, i64 %45) #18
  br label %46

46:                                               ; preds = %39, %41
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %7, i8 signext -1) #18
  %47 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %6, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %1) #18
  %48 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %6, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #18
  %49 = trunc i64 %2 to i32
  %50 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %6, i32 2, i32 %49) #18
  %51 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %6) #18
  br i1 %51, label %52, label %70

52:                                               ; preds = %46
  %53 = bitcast %"class.history::URLRow"* %8 to i8*
  %54 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %8, i64 0, i32 2, i32 1
  %55 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"class.history::URLRow"** %11 to i64*
  br label %57

57:                                               ; preds = %52, %68
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %53) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 184, i1 false)
  call void @_ZN7history6URLRowC1Ev(%"class.history::URLRow"* nonnull %8) #18
  call void @_ZN7history11URLDatabase10FillURLRowERKN3sql9StatementEPNS_6URLRowE(%"class.sql::Statement"* nonnull dereferenceable(16) %6, %"class.history::URLRow"* nonnull %8)
  %58 = load i8, i8* %54, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %57
  %61 = load %"class.history::URLRow"*, %"class.history::URLRow"** %11, align 8
  %62 = load %"class.history::URLRow"*, %"class.history::URLRow"** %55, align 8
  %63 = icmp eq %"class.history::URLRow"* %61, %62
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  call void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"* %61, %"class.history::URLRow"* nonnull dereferenceable(184) %8) #18
  %65 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %61, i64 1
  %66 = ptrtoint %"class.history::URLRow"* %65 to i64
  store i64 %66, i64* %56, align 8
  br label %68

67:                                               ; preds = %60
  call void @_ZNSt3__16vectorIN7history6URLRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.35"* %4, %"class.history::URLRow"* nonnull dereferenceable(184) %8) #18
  br label %68

68:                                               ; preds = %57, %67, %64
  call void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %53) #18
  %69 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %6) #18
  br i1 %69, label %57, label %70

70:                                               ; preds = %68, %46
  %71 = load %"class.history::URLRow"*, %"class.history::URLRow"** %9, align 8
  %72 = load %"class.history::URLRow"*, %"class.history::URLRow"** %11, align 8
  %73 = icmp ne %"class.history::URLRow"* %71, %72
  %74 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %70
  %79 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %79) #19
  br label %80

80:                                               ; preds = %70, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #18
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #18
  ret i1 %73
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

declare void @_ZN7history6URLRowC1Ev(%"class.history::URLRow"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase11IsTypedHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_(%"class.history::URLDatabase"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca [3 x i8*], align 16
  %5 = alloca %"class.std::__1::vector.35", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast [3 x i8*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %10, i8* align 16 bitcast ([3 x i8*]* @__const._ZN7history11URLDatabase11IsTypedHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_.schemes to i8*), i64 24, i1 false)
  %11 = bitcast %"class.std::__1::vector.35"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #18
  %14 = getelementptr inbounds [3 x i8*], [3 x i8*]* %4, i64 0, i64 3
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %36 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = icmp eq %"class.std::__1::basic_string"* %2, null
  %39 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 24, i1 false)
  %45 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #18
  %46 = icmp ugt i64 %45, -17
  br i1 %46, label %55, label %47

47:                                               ; preds = %3
  %48 = getelementptr inbounds [3 x i8*], [3 x i8*]* %4, i64 0, i64 0
  br label %57

49:                                               ; preds = %187
  %50 = icmp eq i8** %189, %14
  br i1 %50, label %190, label %51

51:                                               ; preds = %49
  %52 = load i8*, i8** %189, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 24, i1 false)
  %53 = call i64 @strlen(i8* %52) #18
  %54 = icmp ugt i64 %53, -17
  br i1 %54, label %55, label %57

55:                                               ; preds = %51, %3
  %56 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %56) #20
  unreachable

57:                                               ; preds = %47, %51
  %58 = phi i64 [ %45, %47 ], [ %53, %51 ]
  %59 = phi i8** [ %48, %47 ], [ %189, %51 ]
  %60 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), %47 ], [ %52, %51 ]
  %61 = icmp ult i64 %58, 23
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = add nuw i64 %58, 16
  %64 = and i64 %63, -16
  %65 = call i8* @_Znwm(i64 %64) #19
  store i8* %65, i8** %16, align 8
  %66 = or i64 %64, -9223372036854775808
  store i64 %66, i64* %18, align 8
  store i64 %58, i64* %17, align 8
  br label %70

67:                                               ; preds = %57
  %68 = trunc i64 %58 to i8
  store i8 %68, i8* %20, align 1
  %69 = icmp eq i64 %58, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %67, %62
  %71 = phi i8* [ %65, %62 ], [ %15, %67 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %71, i8* align 1 %60, i64 %58, i1 false) #18
  br label %72

72:                                               ; preds = %67, %70
  %73 = phi i8* [ %15, %67 ], [ %71, %70 ]
  %74 = getelementptr inbounds i8, i8* %73, i64 %58
  store i8 0, i8* %74, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #18
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %1) #18
  %75 = load i8, i8* %23, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i8*, i8** %24, align 8
  %78 = load i64, i64* %25, align 8
  %79 = zext i8 %75 to i64
  %80 = select i1 %76, i8* %77, i8* %21
  %81 = select i1 %76, i64 %78, i64 %79
  %82 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %80, i64 %81) #18
  %83 = load i8, i8* %23, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %86) #19
  br label %87

87:                                               ; preds = %72, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #18, !alias.scope !4
  %88 = load i8, i8* %20, align 1, !noalias !4
  %89 = icmp slt i8 %88, 0
  %90 = load i64, i64* %17, align 8, !noalias !4
  %91 = load i8*, i8** %16, align 8, !noalias !4
  %92 = zext i8 %88 to i64
  %93 = select i1 %89, i64 %90, i64 %92
  %94 = select i1 %89, i8* %91, i8* %15
  %95 = add i64 %93, 1
  %96 = icmp ugt i64 %95, -17
  br i1 %96, label %97, label %99

97:                                               ; preds = %87
  %98 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %98) #20
  unreachable

99:                                               ; preds = %87
  %100 = icmp ult i64 %95, 23
  br i1 %100, label %106, label %101

101:                                              ; preds = %99
  %102 = add nuw i64 %93, 17
  %103 = and i64 %102, -16
  %104 = call i8* @_Znwm(i64 %103) #19
  store i8* %104, i8** %27, align 8, !alias.scope !4
  %105 = or i64 %103, -9223372036854775808
  store i64 %105, i64* %29, align 8, !alias.scope !4
  store i64 %93, i64* %28, align 8, !alias.scope !4
  br label %109

106:                                              ; preds = %99
  %107 = trunc i64 %93 to i8
  store i8 %107, i8* %31, align 1, !alias.scope !4
  %108 = icmp eq i64 %93, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %106, %101
  %110 = phi i8* [ %104, %101 ], [ %26, %106 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %110, i8* align 1 %94, i64 %93, i1 false) #18
  br label %111

111:                                              ; preds = %106, %109
  %112 = phi i8* [ %26, %106 ], [ %110, %109 ]
  %113 = getelementptr inbounds i8, i8* %112, i64 %93
  store i8 0, i8* %113, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %8, i8 signext 47) #18
  %114 = call zeroext i1 @_ZN7history11URLDatabase21AutocompleteForPrefixERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEmbPNS1_6vectorINS_6URLRowENS5_ISB_EEEE(%"class.history::URLDatabase"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i64 1, i1 zeroext true, %"class.std::__1::vector.35"* nonnull %5)
  br i1 %114, label %148, label %115

115:                                              ; preds = %111
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 24, i1 false) #18, !alias.scope !7
  %116 = load i8, i8* %20, align 1, !noalias !7
  %117 = icmp slt i8 %116, 0
  %118 = load i64, i64* %17, align 8, !noalias !7
  %119 = load i8*, i8** %16, align 8, !noalias !7
  %120 = zext i8 %116 to i64
  %121 = select i1 %117, i64 %118, i64 %120
  %122 = select i1 %117, i8* %119, i8* %15
  %123 = add i64 %121, 1
  %124 = icmp ugt i64 %123, -17
  br i1 %124, label %125, label %127

125:                                              ; preds = %115
  %126 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %126) #20
  unreachable

127:                                              ; preds = %115
  %128 = icmp ult i64 %123, 23
  br i1 %128, label %134, label %129

129:                                              ; preds = %127
  %130 = add nuw i64 %121, 17
  %131 = and i64 %130, -16
  %132 = call i8* @_Znwm(i64 %131) #19
  store i8* %132, i8** %33, align 8, !alias.scope !7
  %133 = or i64 %131, -9223372036854775808
  store i64 %133, i64* %35, align 8, !alias.scope !7
  store i64 %121, i64* %34, align 8, !alias.scope !7
  br label %137

134:                                              ; preds = %127
  %135 = trunc i64 %121 to i8
  store i8 %135, i8* %37, align 1, !alias.scope !7
  %136 = icmp eq i64 %121, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %134, %129
  %138 = phi i8* [ %132, %129 ], [ %32, %134 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %138, i8* align 1 %122, i64 %121, i1 false) #18
  br label %139

139:                                              ; preds = %137, %134
  %140 = phi i8* [ %32, %134 ], [ %138, %137 ]
  %141 = getelementptr inbounds i8, i8* %140, i64 %121
  store i8 0, i8* %141, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %9, i8 signext 58) #18
  %142 = call zeroext i1 @_ZN7history11URLDatabase21AutocompleteForPrefixERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEmbPNS1_6vectorINS_6URLRowENS5_ISB_EEEE(%"class.history::URLDatabase"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i64 1, i1 zeroext true, %"class.std::__1::vector.35"* nonnull %5)
  %143 = load i8, i8* %37, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %139
  %146 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %146) #19
  br label %147

147:                                              ; preds = %139, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #18
  br label %148

148:                                              ; preds = %111, %147
  %149 = phi i1 [ %142, %147 ], [ true, %111 ]
  %150 = load i8, i8* %31, align 1
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %148
  %153 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %153) #19
  br label %154

154:                                              ; preds = %148, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #18
  %155 = xor i1 %149, true
  %156 = or i1 %38, %155
  %157 = zext i1 %149 to i32
  br i1 %156, label %181, label %158

158:                                              ; preds = %154
  %159 = load i8, i8* %60, align 1
  %160 = call i1 @llvm.is.constant.i8(i8 %159) #18
  br i1 %160, label %161, label %179

161:                                              ; preds = %158
  %162 = call i64 @strlen(i8* %60) #18
  %163 = icmp ult i64 %162, 23
  br i1 %163, label %164, label %177

164:                                              ; preds = %161
  %165 = load i8, i8* %40, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %164
  store i64 %162, i64* %42, align 8
  %168 = load i8*, i8** %43, align 8
  br label %171

169:                                              ; preds = %164
  %170 = trunc i64 %162 to i8
  store i8 %170, i8* %40, align 1
  br label %171

171:                                              ; preds = %169, %167
  %172 = phi i8* [ %168, %167 ], [ %41, %169 ]
  %173 = icmp eq i64 %162, 0
  br i1 %173, label %175, label %174

174:                                              ; preds = %171
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %172, i8* align 1 %60, i64 %162, i1 false) #18
  br label %175

175:                                              ; preds = %174, %171
  %176 = getelementptr inbounds i8, i8* %172, i64 %162
  store i8 0, i8* %176, align 1
  br label %181

177:                                              ; preds = %161
  %178 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %60, i64 %162) #18
  br label %181

179:                                              ; preds = %158
  %180 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* %60) #18
  br label %181

181:                                              ; preds = %154, %179, %177, %175
  %182 = phi i32 [ %157, %154 ], [ 1, %175 ], [ 1, %177 ], [ 1, %179 ]
  %183 = load i8, i8* %20, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %181
  %186 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %186) #19
  br label %187

187:                                              ; preds = %181, %185
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #18
  %188 = icmp eq i32 %182, 0
  %189 = getelementptr inbounds i8*, i8** %59, i64 1
  br i1 %188, label %49, label %190

190:                                              ; preds = %49, %187
  %191 = phi i1 [ true, %187 ], [ false, %49 ]
  %192 = load %"class.history::URLRow"*, %"class.history::URLRow"** %12, align 8
  %193 = icmp eq %"class.history::URLRow"* %192, null
  br i1 %193, label %210, label %194

194:                                              ; preds = %190
  %195 = bitcast %"class.history::URLRow"* %192 to i8*
  %196 = load %"class.history::URLRow"*, %"class.history::URLRow"** %13, align 8
  %197 = icmp eq %"class.history::URLRow"* %196, %192
  br i1 %197, label %208, label %198

198:                                              ; preds = %194, %198
  %199 = phi %"class.history::URLRow"* [ %200, %198 ], [ %196, %194 ]
  %200 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %199, i64 -1
  %201 = bitcast %"class.history::URLRow"* %200 to void (%"class.history::URLRow"*)***
  %202 = load void (%"class.history::URLRow"*)**, void (%"class.history::URLRow"*)*** %201, align 8
  %203 = load void (%"class.history::URLRow"*)*, void (%"class.history::URLRow"*)** %202, align 8
  call void %203(%"class.history::URLRow"* %200) #18
  %204 = icmp eq %"class.history::URLRow"* %200, %192
  br i1 %204, label %205, label %198

205:                                              ; preds = %198
  %206 = bitcast %"class.std::__1::vector.35"* %5 to i8**
  %207 = load i8*, i8** %206, align 8
  br label %208

208:                                              ; preds = %205, %194
  %209 = phi i8* [ %207, %205 ], [ %195, %194 ]
  store %"class.history::URLRow"* %192, %"class.history::URLRow"** %13, align 8
  call void @_ZdlPv(i8* %209) #19
  br label %210

210:                                              ; preds = %190, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #18
  ret i1 %191
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #8

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase23FindShortestURLFromBaseERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_iibPNS_6URLRowE(%"class.history::URLDatabase"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i1 zeroext, %"class.history::URLRow"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.sql::Statement", align 8
  %10 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  store i8 7, i8* %13, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), i64 7, i1 false) #18
  %16 = getelementptr inbounds i8, i8* %10, i64 7
  store i8 0, i8* %16, align 1
  %17 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @_ZN7history11URLDatabase13kURLRowFieldsE, i64 0, i64 0)) #18
  %18 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i64 0, i64 0)) #18
  %19 = select i1 %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0)
  %20 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* %19) #18
  %21 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.28, i64 0, i64 0)) #18
  %22 = bitcast %"class.sql::Statement"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #18
  %23 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %24 = bitcast %"class.sql::Statement"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %23, align 8
  %26 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %25, i64 3
  %27 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %26, align 8
  %28 = call dereferenceable(136) %"class.sql::Database"* %27(%"class.history::URLDatabase"* %0) #18
  %29 = load i8, i8* %13, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %11, align 8
  %32 = select i1 %30, i8* %31, i8* %10
  %33 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %28, i8* %32) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %9, %"class.sql::Database::StatementRef"* %33) #18
  %34 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %9, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %1) #18
  %35 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %9, i32 1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #18
  %36 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %9, i32 2, i32 %3) #18
  %37 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %9, i32 3, i32 %4) #18
  %38 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %9) #18
  br i1 %38, label %39, label %40

39:                                               ; preds = %7
  call void @_ZN7history11URLDatabase10FillURLRowERKN3sql9StatementEPNS_6URLRowE(%"class.sql::Statement"* nonnull dereferenceable(16) %9, %"class.history::URLRow"* %6)
  br label %40

40:                                               ; preds = %7, %39
  %41 = phi i1 [ true, %39 ], [ false, %7 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #18
  %42 = load i8, i8* %13, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %45) #19
  br label %46

46:                                               ; preds = %40, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #18
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase14GetTextMatchesERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorINS_6URLRowENS5_ISB_EEEE(%"class.history::URLDatabase"*, %"class.std::__1::basic_string.25"* dereferenceable(24), %"class.std::__1::vector.35"*) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN7history11URLDatabase27GetTextMatchesWithAlgorithmERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEN12query_parser17MatchingAlgorithmEPNS1_6vectorINS_6URLRowENS5_ISD_EEEE(%"class.history::URLDatabase"* %0, %"class.std::__1::basic_string.25"* dereferenceable(24) %1, i32 0, %"class.std::__1::vector.35"* %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase27GetTextMatchesWithAlgorithmERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEN12query_parser17MatchingAlgorithmEPNS1_6vectorINS_6URLRowENS5_ISD_EEEE(%"class.history::URLDatabase"*, %"class.std::__1::basic_string.25"* dereferenceable(24), i32, %"class.std::__1::vector.35"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::allocator.14", align 1
  %6 = alloca %"class.std::__1::allocator.14", align 1
  %7 = alloca %"class.std::__1::vector.42", align 8
  %8 = alloca %"class.sql::Statement", align 8
  %9 = alloca %"class.std::__1::vector.55", align 8
  %10 = alloca %"class.std::__1::basic_string.25", align 8
  %11 = alloca %"class.std::__1::basic_string.25", align 8
  %12 = alloca %class.GURL, align 8
  %13 = alloca %"class.std::__1::basic_string.25", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string.25", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string.25", align 8
  %18 = alloca %"class.std::__1::basic_string.25", align 8
  %19 = alloca %"class.history::URLResult", align 8
  %20 = bitcast %"class.std::__1::vector.42"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #18
  %21 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %7, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #18
  call void @_ZN12query_parser11QueryParser15ParseQueryNodesERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_17MatchingAlgorithmEPNS1_6vectorINS1_10unique_ptrINS_9QueryNodeENS1_14default_deleteISD_EEEENS5_ISG_EEEE(%"class.std::__1::basic_string.25"* dereferenceable(24) %1, i32 %2, %"class.std::__1::vector.42"* nonnull %7) #18
  %23 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %3, i64 0, i32 0, i32 0
  %24 = load %"class.history::URLRow"*, %"class.history::URLRow"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %3, i64 0, i32 0, i32 1
  %26 = load %"class.history::URLRow"*, %"class.history::URLRow"** %25, align 8
  %27 = icmp eq %"class.history::URLRow"* %26, %24
  br i1 %27, label %35, label %28

28:                                               ; preds = %4, %28
  %29 = phi %"class.history::URLRow"* [ %30, %28 ], [ %26, %4 ]
  %30 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %29, i64 -1
  %31 = bitcast %"class.history::URLRow"* %30 to void (%"class.history::URLRow"*)***
  %32 = load void (%"class.history::URLRow"*)**, void (%"class.history::URLRow"*)*** %31, align 8
  %33 = load void (%"class.history::URLRow"*)*, void (%"class.history::URLRow"*)** %32, align 8
  call void %33(%"class.history::URLRow"* %30) #18
  %34 = icmp eq %"class.history::URLRow"* %30, %24
  br i1 %34, label %35, label %28

35:                                               ; preds = %28, %4
  store %"class.history::URLRow"* %24, %"class.history::URLRow"** %25, align 8
  %36 = bitcast %"class.sql::Statement"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #18
  %37 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %38 = bitcast %"class.sql::Statement"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false)
  %39 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %37, align 8
  %40 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %39, i64 3
  %41 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %40, align 8
  %42 = call dereferenceable(136) %"class.sql::Database"* %41(%"class.history::URLDatabase"* %0) #18
  %43 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %42, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 421, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.29, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %8, %"class.sql::Database::StatementRef"* %43) #18
  %44 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %8) #18
  br i1 %44, label %45, label %288

45:                                               ; preds = %35
  %46 = bitcast %"class.std::__1::vector.55"* %9 to i8*
  %47 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %9, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %9, i64 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::basic_string.25"* %10 to i8*
  %50 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string.25"* %11 to i8*
  %53 = bitcast %"class.std::__1::basic_string.25"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  %55 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.std::__1::basic_string.25"* %11 to i16*
  %57 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::basic_string.25"* %11 to i8**
  %59 = bitcast %class.GURL* %12 to i8*
  %60 = bitcast %"class.std::__1::basic_string.25"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  %62 = bitcast %"class.std::__1::basic_string.25"* %10 to i16*
  %63 = getelementptr inbounds %class.GURL, %class.GURL* %12, i64 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string.25"* %13 to i8*
  %65 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %68 = getelementptr inbounds %class.GURL, %class.GURL* %12, i64 0, i32 2, i32 3, i32 1
  %69 = getelementptr inbounds %class.GURL, %class.GURL* %12, i64 0, i32 0
  %70 = getelementptr inbounds %class.GURL, %class.GURL* %12, i64 0, i32 2, i32 3, i32 0
  %71 = getelementptr inbounds %"class.std::__1::allocator.14", %"class.std::__1::allocator.14"* %6, i64 0, i32 0
  %72 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = bitcast %"class.std::__1::basic_string.25"* %15 to i8*
  %77 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %80 = getelementptr inbounds %"class.std::__1::allocator.14", %"class.std::__1::allocator.14"* %5, i64 0, i32 0
  %81 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = bitcast %"class.std::__1::basic_string.25"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %85, i64 0, i32 1, i32 1
  %87 = bitcast %"class.std::__1::basic_string.25"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = bitcast %"class.std::__1::basic_string.25"* %15 to i16*
  %90 = bitcast %"class.std::__1::basic_string.25"* %13 to i16*
  %91 = bitcast %"class.std::__1::basic_string.25"* %15 to i8**
  %92 = bitcast %"class.std::__1::basic_string.25"* %13 to i8**
  %93 = bitcast %"class.std::__1::basic_string.25"* %17 to i8*
  %94 = bitcast %"class.std::__1::basic_string.25"* %18 to i8*
  %95 = bitcast %"class.std::__1::basic_string.25"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %95, i64 0, i32 1, i32 1
  %97 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.std::__1::basic_string.25"* %18 to i16*
  %99 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = bitcast %"class.std::__1::basic_string.25"* %18 to i8**
  %101 = bitcast %"class.history::URLResult"* %19 to i8*
  %102 = bitcast %"class.history::URLResult"* %19 to %"class.history::URLRow"*
  %103 = getelementptr inbounds %"class.history::URLResult", %"class.history::URLResult"* %19, i64 0, i32 0, i32 2, i32 1
  %104 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"class.history::URLRow"** %25 to i64*
  %106 = bitcast %"class.std::__1::basic_string.25"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %106, i64 0, i32 1, i32 1
  %108 = bitcast %"class.std::__1::basic_string.25"* %17 to i8**
  %109 = bitcast %"class.std::__1::basic_string.25"* %10 to i8**
  %110 = bitcast %"class.std::__1::vector.55"* %9 to i8**
  %111 = bitcast %"class.std::__1::basic_string.25"* %10 to i8*
  %112 = bitcast %"class.std::__1::basic_string.25"* %13 to i8*
  %113 = bitcast %"class.std::__1::basic_string.25"* %15 to i8*
  %114 = bitcast %"class.std::__1::basic_string.25"* %17 to i8*
  br label %115

115:                                              ; preds = %45, %286
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #18
  call void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.25"* nonnull sret %11, %"class.sql::Statement"* nonnull %8, i32 1) #18
  %116 = load i8, i8* %54, align 1
  %117 = icmp slt i8 %116, 0
  %118 = load i16*, i16** %55, align 8
  %119 = select i1 %117, i16* %118, i16* %56
  %120 = load i64, i64* %57, align 8
  %121 = zext i8 %116 to i64
  %122 = select i1 %117, i64 %120, i64 %121
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.25"* nonnull sret %10, i16* %119, i64 %122) #18
  %123 = load i8, i8* %54, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %115
  %126 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %126) #19
  br label %127

127:                                              ; preds = %115, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #18
  call void @_ZN12query_parser11QueryParser17ExtractQueryWordsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorINS_9QueryWordENS5_ISB_EEEE(%"class.std::__1::basic_string.25"* nonnull dereferenceable(24) %10, %"class.std::__1::vector.55"* nonnull %9) #18
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %59) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 120, i1 false)
  %128 = load i8, i8* %61, align 1
  %129 = icmp slt i8 %128, 0
  %130 = load i16*, i16** %50, align 8
  %131 = select i1 %129, i16* %130, i16* %62
  %132 = load i64, i64* %51, align 8
  %133 = zext i8 %128 to i64
  %134 = select i1 %129, i64 %132, i64 %133
  call void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL* nonnull %12, i16* %131, i64 %134) #18
  %135 = load i8, i8* %63, align 8, !range !2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %227, label %137

137:                                              ; preds = %127
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #18
  %138 = load i32, i32* %68, align 4, !noalias !10
  %139 = icmp slt i32 %138, 1
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #18, !alias.scope !10
  br label %148

141:                                              ; preds = %137
  %142 = load i32, i32* %70, align 8, !noalias !10
  %143 = sext i32 %142 to i64
  %144 = sext i32 %138 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %71) #18, !noalias !10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %69, i64 %143, i64 %144, %"class.std::__1::allocator.14"* nonnull dereferenceable(1) %6) #18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71) #18, !noalias !10
  %145 = load i8, i8* %73, align 1
  %146 = load i8*, i8** %74, align 8
  %147 = load i64, i64* %75, align 8
  br label %148

148:                                              ; preds = %140, %141
  %149 = phi i64 [ 0, %140 ], [ %147, %141 ]
  %150 = phi i8* [ null, %140 ], [ %146, %141 ]
  %151 = phi i8 [ 0, %140 ], [ %145, %141 ]
  %152 = icmp slt i8 %151, 0
  %153 = select i1 %152, i8* %150, i8* %67
  %154 = zext i8 %151 to i64
  %155 = select i1 %152, i64 %149, i64 %154
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.25"* nonnull sret %13, i8* %153, i64 %155) #18
  %156 = load i8, i8* %73, align 1
  %157 = icmp slt i8 %156, 0
  br i1 %157, label %158, label %160

158:                                              ; preds = %148
  %159 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %159) #19
  br label %160

160:                                              ; preds = %148, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #18
  %161 = load i32, i32* %68, align 4, !noalias !15
  %162 = icmp slt i32 %161, 1
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 24, i1 false) #18, !alias.scope !15
  br label %171

164:                                              ; preds = %160
  %165 = load i32, i32* %70, align 8, !noalias !15
  %166 = sext i32 %165 to i64
  %167 = sext i32 %161 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %80) #18, !noalias !15
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %16, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %69, i64 %166, i64 %167, %"class.std::__1::allocator.14"* nonnull dereferenceable(1) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %80) #18, !noalias !15
  %168 = load i8, i8* %82, align 1
  %169 = load i8*, i8** %83, align 8
  %170 = load i64, i64* %84, align 8
  br label %171

171:                                              ; preds = %163, %164
  %172 = phi i64 [ 0, %163 ], [ %170, %164 ]
  %173 = phi i8* [ null, %163 ], [ %169, %164 ]
  %174 = phi i8 [ 0, %163 ], [ %168, %164 ]
  %175 = icmp slt i8 %174, 0
  %176 = select i1 %175, i8* %173, i8* %79
  %177 = zext i8 %174 to i64
  %178 = select i1 %175, i64 %172, i64 %177
  call void @_ZN13url_formatter12IDNToUnicodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.25"* nonnull sret %15, i8* %176, i64 %178) #18
  %179 = load i8, i8* %82, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %171
  %182 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %182) #19
  br label %183

183:                                              ; preds = %171, %181
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #18
  %184 = load i8, i8* %86, align 1
  %185 = icmp slt i8 %184, 0
  %186 = load i64, i64* %66, align 8
  %187 = zext i8 %184 to i64
  %188 = select i1 %185, i64 %186, i64 %187
  %189 = load i8, i8* %88, align 1
  %190 = icmp slt i8 %189, 0
  %191 = load i64, i64* %78, align 8
  %192 = zext i8 %189 to i64
  %193 = select i1 %190, i64 %191, i64 %192
  %194 = icmp eq i64 %188, %193
  br i1 %194, label %195, label %214

195:                                              ; preds = %183
  %196 = icmp eq i64 %188, 0
  br i1 %196, label %216, label %197

197:                                              ; preds = %195
  %198 = load i16*, i16** %77, align 8
  %199 = select i1 %190, i16* %198, i16* %89
  %200 = load i16*, i16** %65, align 8
  %201 = select i1 %185, i16* %200, i16* %90
  br label %202

202:                                              ; preds = %209, %197
  %203 = phi i64 [ %210, %209 ], [ %188, %197 ]
  %204 = phi i16* [ %212, %209 ], [ %199, %197 ]
  %205 = phi i16* [ %211, %209 ], [ %201, %197 ]
  %206 = load i16, i16* %205, align 2
  %207 = load i16, i16* %204, align 2
  %208 = icmp eq i16 %207, %206
  br i1 %208, label %209, label %214

209:                                              ; preds = %202
  %210 = add i64 %203, -1
  %211 = getelementptr inbounds i16, i16* %205, i64 1
  %212 = getelementptr inbounds i16, i16* %204, i64 1
  %213 = icmp eq i64 %210, 0
  br i1 %213, label %216, label %202

214:                                              ; preds = %202, %183
  call void @_ZN12query_parser11QueryParser17ExtractQueryWordsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorINS_9QueryWordENS5_ISB_EEEE(%"class.std::__1::basic_string.25"* nonnull dereferenceable(24) %15, %"class.std::__1::vector.55"* nonnull %9) #18
  %215 = load i8, i8* %88, align 1
  br label %216

216:                                              ; preds = %209, %195, %214
  %217 = phi i8 [ %189, %195 ], [ %215, %214 ], [ %189, %209 ]
  %218 = icmp slt i8 %217, 0
  br i1 %218, label %219, label %221

219:                                              ; preds = %216
  %220 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %220) #19
  br label %221

221:                                              ; preds = %216, %219
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #18
  %222 = load i8, i8* %86, align 1
  %223 = icmp slt i8 %222, 0
  br i1 %223, label %224, label %226

224:                                              ; preds = %221
  %225 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %225) #19
  br label %226

226:                                              ; preds = %221, %224
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #18
  br label %227

227:                                              ; preds = %127, %226
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #18
  call void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.25"* nonnull sret %18, %"class.sql::Statement"* nonnull %8, i32 2) #18
  %228 = load i8, i8* %96, align 1
  %229 = icmp slt i8 %228, 0
  %230 = load i16*, i16** %97, align 8
  %231 = select i1 %229, i16* %230, i16* %98
  %232 = load i64, i64* %99, align 8
  %233 = zext i8 %228 to i64
  %234 = select i1 %229, i64 %232, i64 %233
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.25"* nonnull sret %17, i16* %231, i64 %234) #18
  %235 = load i8, i8* %96, align 1
  %236 = icmp slt i8 %235, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %227
  %238 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %238) #19
  br label %239

239:                                              ; preds = %227, %237
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #18
  call void @_ZN12query_parser11QueryParser17ExtractQueryWordsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorINS_9QueryWordENS5_ISB_EEEE(%"class.std::__1::basic_string.25"* nonnull dereferenceable(24) %17, %"class.std::__1::vector.55"* nonnull %9) #18
  %240 = call zeroext i1 @_ZN12query_parser11QueryParser14DoesQueryMatchERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEERKNS2_INS1_10unique_ptrINS_9QueryNodeENS1_14default_deleteISA_EEEENS4_ISD_EEEE(%"class.std::__1::vector.55"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.42"* nonnull dereferenceable(24) %7) #18
  br i1 %240, label %241, label %253

241:                                              ; preds = %239
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %101) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* align 8 bitcast (<{ <{ i32 (...)**, i64, { %"class.std::__1::basic_string", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr.19" }, %"class.std::__1::basic_string.25", i32, i32, %"class.base::Time", i8 }>, [7 x i8], %"class.base::Time", { i64, { float, [4 x i8], %"class.std::__1::vector.62", i64 } }, %"class.query_parser::Snippet", %"class.std::__1::vector.69", i8, [7 x i8] }>* @__const._ZN7history11URLDatabase27GetTextMatchesWithAlgorithmERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEN12query_parser17MatchingAlgorithmEPNS1_6vectorINS_6URLRowENS5_ISD_EEEE.info to i8*), i64 320, i1 false)
  call void @_ZN7history9URLResultC1Ev(%"class.history::URLResult"* nonnull %19) #18
  call void @_ZN7history11URLDatabase10FillURLRowERKN3sql9StatementEPNS_6URLRowE(%"class.sql::Statement"* nonnull dereferenceable(16) %8, %"class.history::URLRow"* nonnull %102)
  %242 = load i8, i8* %103, align 8, !range !2
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %252, label %244

244:                                              ; preds = %241
  %245 = load %"class.history::URLRow"*, %"class.history::URLRow"** %25, align 8
  %246 = load %"class.history::URLRow"*, %"class.history::URLRow"** %104, align 8
  %247 = icmp eq %"class.history::URLRow"* %245, %246
  br i1 %247, label %251, label %248

248:                                              ; preds = %244
  call void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"* %245, %"class.history::URLRow"* nonnull dereferenceable(184) %102) #18
  %249 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %245, i64 1
  %250 = ptrtoint %"class.history::URLRow"* %249 to i64
  store i64 %250, i64* %105, align 8
  br label %252

251:                                              ; preds = %244
  call void @_ZNSt3__16vectorIN7history6URLRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.35"* %3, %"class.history::URLRow"* nonnull dereferenceable(184) %102) #18
  br label %252

252:                                              ; preds = %241, %251, %248
  call void @_ZN7history9URLResultD1Ev(%"class.history::URLResult"* nonnull %19) #18
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %101) #18
  br label %253

253:                                              ; preds = %252, %239
  %254 = load i8, i8* %107, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %258

256:                                              ; preds = %253
  %257 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %257) #19
  br label %258

258:                                              ; preds = %253, %256
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #18
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %12) #18
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %59) #18
  %259 = load i8, i8* %61, align 1
  %260 = icmp slt i8 %259, 0
  br i1 %260, label %261, label %263

261:                                              ; preds = %258
  %262 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %262) #19
  br label %263

263:                                              ; preds = %258, %261
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #18
  %264 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %47, align 8
  %265 = icmp eq %"struct.query_parser::QueryWord"* %264, null
  br i1 %265, label %286, label %266

266:                                              ; preds = %263
  %267 = bitcast %"struct.query_parser::QueryWord"* %264 to i8*
  %268 = load %"struct.query_parser::QueryWord"*, %"struct.query_parser::QueryWord"** %48, align 8
  %269 = icmp eq %"struct.query_parser::QueryWord"* %268, %264
  br i1 %269, label %284, label %270

270:                                              ; preds = %266, %280
  %271 = phi %"struct.query_parser::QueryWord"* [ %272, %280 ], [ %268, %266 ]
  %272 = getelementptr inbounds %"struct.query_parser::QueryWord", %"struct.query_parser::QueryWord"* %271, i64 -1
  %273 = bitcast %"struct.query_parser::QueryWord"* %272 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %274 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %273, i64 0, i32 1, i32 1
  %275 = load i8, i8* %274, align 1
  %276 = icmp slt i8 %275, 0
  br i1 %276, label %277, label %280

277:                                              ; preds = %270
  %278 = bitcast %"struct.query_parser::QueryWord"* %272 to i8**
  %279 = load i8*, i8** %278, align 8
  call void @_ZdlPv(i8* %279) #19
  br label %280

280:                                              ; preds = %277, %270
  %281 = icmp eq %"struct.query_parser::QueryWord"* %272, %264
  br i1 %281, label %282, label %270

282:                                              ; preds = %280
  %283 = load i8*, i8** %110, align 8
  br label %284

284:                                              ; preds = %282, %266
  %285 = phi i8* [ %283, %282 ], [ %267, %266 ]
  store %"struct.query_parser::QueryWord"* %264, %"struct.query_parser::QueryWord"** %48, align 8
  call void @_ZdlPv(i8* %285) #19
  br label %286

286:                                              ; preds = %263, %284
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #18
  %287 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %8) #18
  br i1 %287, label %115, label %288

288:                                              ; preds = %286, %35
  %289 = load %"class.history::URLRow"*, %"class.history::URLRow"** %23, align 8
  %290 = load %"class.history::URLRow"*, %"class.history::URLRow"** %25, align 8
  %291 = icmp ne %"class.history::URLRow"* %289, %290
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #18
  %292 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %21, align 8
  %293 = icmp eq %"class.std::__1::unique_ptr.44"* %292, null
  br i1 %293, label %316, label %294

294:                                              ; preds = %288
  %295 = bitcast %"class.std::__1::unique_ptr.44"* %292 to i8*
  %296 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %22, align 8
  %297 = icmp eq %"class.std::__1::unique_ptr.44"* %296, %292
  br i1 %297, label %314, label %298

298:                                              ; preds = %294, %309
  %299 = phi %"class.std::__1::unique_ptr.44"* [ %300, %309 ], [ %296, %294 ]
  %300 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %299, i64 -1
  %301 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %300, i64 0, i32 0, i32 0, i32 0
  %302 = load %"class.query_parser::QueryNode"*, %"class.query_parser::QueryNode"** %301, align 8
  store %"class.query_parser::QueryNode"* null, %"class.query_parser::QueryNode"** %301, align 8
  %303 = icmp eq %"class.query_parser::QueryNode"* %302, null
  br i1 %303, label %309, label %304

304:                                              ; preds = %298
  %305 = bitcast %"class.query_parser::QueryNode"* %302 to void (%"class.query_parser::QueryNode"*)***
  %306 = load void (%"class.query_parser::QueryNode"*)**, void (%"class.query_parser::QueryNode"*)*** %305, align 8
  %307 = getelementptr inbounds void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %306, i64 1
  %308 = load void (%"class.query_parser::QueryNode"*)*, void (%"class.query_parser::QueryNode"*)** %307, align 8
  call void %308(%"class.query_parser::QueryNode"* nonnull %302) #18
  br label %309

309:                                              ; preds = %304, %298
  %310 = icmp eq %"class.std::__1::unique_ptr.44"* %300, %292
  br i1 %310, label %311, label %298

311:                                              ; preds = %309
  %312 = bitcast %"class.std::__1::vector.42"* %7 to i8**
  %313 = load i8*, i8** %312, align 8
  br label %314

314:                                              ; preds = %311, %294
  %315 = phi i8* [ %313, %311 ], [ %295, %294 ]
  store %"class.std::__1::unique_ptr.44"* %292, %"class.std::__1::unique_ptr.44"** %22, align 8
  call void @_ZdlPv(i8* %315) #19
  br label %316

316:                                              ; preds = %288, %314
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #18
  ret i1 %291
}

declare void @_ZN12query_parser11QueryParser15ParseQueryNodesERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_17MatchingAlgorithmEPNS1_6vectorINS1_10unique_ptrINS_9QueryNodeENS1_14default_deleteISD_EEEENS5_ISG_EEEE(%"class.std::__1::basic_string.25"* dereferenceable(24), i32, %"class.std::__1::vector.42"*) local_unnamed_addr #1

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.25"* sret, i16*, i64) local_unnamed_addr #1

declare void @_ZN12query_parser11QueryParser17ExtractQueryWordsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorINS_9QueryWordENS5_ISB_EEEE(%"class.std::__1::basic_string.25"* dereferenceable(24), %"class.std::__1::vector.55"*) local_unnamed_addr #1

declare void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL*, i16*, i64) unnamed_addr #1

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.25"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZN13url_formatter12IDNToUnicodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.25"* sret, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN12query_parser11QueryParser14DoesQueryMatchERKNSt3__16vectorINS_9QueryWordENS1_9allocatorIS3_EEEERKNS2_INS1_10unique_ptrINS_9QueryNodeENS1_14default_deleteISA_EEEENS4_ISD_EEEE(%"class.std::__1::vector.55"* dereferenceable(24), %"class.std::__1::vector.42"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN7history9URLResultC1Ev(%"class.history::URLResult"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7history9URLResultD1Ev(%"class.history::URLResult"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase27InitKeywordSearchTermsTableEv(%"class.history::URLDatabase"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::URLDatabase", %"class.history::URLDatabase"* %0, i64 0, i32 1
  store i8 1, i8* %2, align 8
  %3 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %4 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %4, i64 3
  %6 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %5, align 8
  %7 = tail call dereferenceable(136) %"class.sql::Database"* %6(%"class.history::URLDatabase"* %0) #18
  %8 = tail call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0)) #18
  br i1 %8, label %33, label %9

9:                                                ; preds = %1
  %10 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %3, align 8
  %11 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %10, i64 3
  %12 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %11, align 8
  %13 = tail call dereferenceable(136) %"class.sql::Database"* %12(%"class.history::URLDatabase"* %0) #18
  %14 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %13, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @.str.31, i64 0, i64 0)) #18
  br i1 %14, label %15, label %34

15:                                               ; preds = %9
  %16 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %3, align 8
  %17 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %16, i64 3
  %18 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %17, align 8
  %19 = tail call dereferenceable(136) %"class.sql::Database"* %18(%"class.history::URLDatabase"* %0) #18
  %20 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %19, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.32, i64 0, i64 0)) #18
  br i1 %20, label %21, label %34

21:                                               ; preds = %15
  %22 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %3, align 8
  %23 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %22, i64 3
  %24 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %23, align 8
  %25 = tail call dereferenceable(136) %"class.sql::Database"* %24(%"class.history::URLDatabase"* %0) #18
  %26 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %25, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.33, i64 0, i64 0)) #18
  br i1 %26, label %27, label %34

27:                                               ; preds = %21
  %28 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %3, align 8
  %29 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %28, i64 3
  %30 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %29, align 8
  %31 = tail call dereferenceable(136) %"class.sql::Database"* %30(%"class.history::URLDatabase"* %0) #18
  %32 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %31, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.34, i64 0, i64 0)) #18
  br i1 %32, label %33, label %34

33:                                               ; preds = %27, %1
  br label %34

34:                                               ; preds = %21, %15, %9, %27, %33
  %35 = phi i1 [ true, %33 ], [ false, %27 ], [ false, %9 ], [ false, %15 ], [ false, %21 ]
  ret i1 %35
}

declare zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase27DropKeywordSearchTermsTableEv(%"class.history::URLDatabase"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %3 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %3, i64 3
  %5 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %4, align 8
  %6 = tail call dereferenceable(136) %"class.sql::Database"* %5(%"class.history::URLDatabase"* %0) #18
  %7 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0)) #18
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase27SetKeywordSearchTermsForURLEllRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.history::URLDatabase"*, i64, i64, %"class.std::__1::basic_string.25"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.sql::Statement", align 8
  %6 = alloca %"class.sql::Statement", align 8
  %7 = alloca %"class.std::__1::basic_string.25", align 8
  %8 = alloca %"class.std::__1::basic_string.25", align 8
  %9 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #18
  %10 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %11 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  %12 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %10, align 8
  %13 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %12, i64 3
  %14 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %13, align 8
  %15 = tail call dereferenceable(136) %"class.sql::Database"* %14(%"class.history::URLDatabase"* %0) #18
  %16 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %15, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 500, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.35, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %16) #18
  %17 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 0, i64 %2) #18
  %18 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 1, i64 %1) #18
  %19 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %5) #18
  br i1 %19, label %92, label %20

20:                                               ; preds = %4
  %21 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %5) #18
  br i1 %21, label %22, label %92

22:                                               ; preds = %20
  %23 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #18
  %24 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %10, align 8
  %26 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %25, i64 3
  %27 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %26, align 8
  %28 = call dereferenceable(136) %"class.sql::Database"* %27(%"class.history::URLDatabase"* %0) #18
  %29 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %28, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 513, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.36, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %6, %"class.sql::Database::StatementRef"* %29) #18
  %30 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 0, i64 %2) #18
  %31 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 1, i64 %1) #18
  %32 = bitcast %"class.std::__1::basic_string.25"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string.25"* %3 to i16*
  %39 = select i1 %35, i16* %37, i16* %38
  %40 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = zext i8 %34 to i64
  %43 = select i1 %35, i64 %41, i64 %42
  %44 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* nonnull %6, i32 2, i16* %39, i64 %43) #18
  %45 = bitcast %"class.std::__1::basic_string.25"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #18
  %46 = bitcast %"class.std::__1::basic_string.25"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #18
  %47 = load i8, i8* %33, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i16*, i16** %36, align 8
  %50 = select i1 %48, i16* %49, i16* %38
  %51 = load i64, i64* %40, align 8
  %52 = zext i8 %47 to i64
  %53 = select i1 %48, i64 %51, i64 %52
  call void @_ZN4base18CollapseWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEb(%"class.std::__1::basic_string.25"* nonnull sret %8, i16* %50, i64 %53, i1 zeroext false) #18
  %54 = bitcast %"class.std::__1::basic_string.25"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i16*, i16** %58, align 8
  %60 = bitcast %"class.std::__1::basic_string.25"* %8 to i16*
  %61 = select i1 %57, i16* %59, i16* %60
  %62 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = zext i8 %56 to i64
  %65 = select i1 %57, i64 %63, i64 %64
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.25"* nonnull sret %7, i16* %61, i64 %65) #18
  %66 = bitcast %"class.std::__1::basic_string.25"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i16*, i16** %70, align 8
  %72 = bitcast %"class.std::__1::basic_string.25"* %7 to i16*
  %73 = select i1 %69, i16* %71, i16* %72
  %74 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %68 to i64
  %77 = select i1 %69, i64 %75, i64 %76
  %78 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* nonnull %6, i32 3, i16* %73, i64 %77) #18
  %79 = load i8, i8* %67, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %22
  %82 = bitcast %"class.std::__1::basic_string.25"* %7 to i8**
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #19
  br label %84

84:                                               ; preds = %22, %81
  %85 = load i8, i8* %55, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = bitcast %"class.std::__1::basic_string.25"* %8 to i8**
  %89 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %89) #19
  br label %90

90:                                               ; preds = %84, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #18
  %91 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %6) #18
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #18
  br label %92

92:                                               ; preds = %20, %4, %90
  %93 = phi i1 [ %91, %90 ], [ true, %4 ], [ false, %20 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #18
  ret i1 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase23GetKeywordSearchTermRowElPNS_20KeywordSearchTermRowE(%"class.history::URLDatabase"*, i64, %"struct.history::KeywordSearchTermRow"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = alloca %"class.std::__1::basic_string.25", align 8
  %6 = alloca %"class.std::__1::basic_string.25", align 8
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #18
  %8 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %9 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %8, align 8
  %11 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %10, i64 3
  %12 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %11, align 8
  %13 = tail call dereferenceable(136) %"class.sql::Database"* %12(%"class.history::URLDatabase"* %0) #18
  %14 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %13, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 528, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.37, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %14) #18
  %15 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %1) #18
  %16 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #18
  br i1 %16, label %17, label %45

17:                                               ; preds = %3
  %18 = icmp eq %"struct.history::KeywordSearchTermRow"* %2, null
  br i1 %18, label %45, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %2, i64 0, i32 1
  store i64 %1, i64* %20, align 8
  %21 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %4, i32 0) #18
  %22 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %2, i64 0, i32 0
  store i64 %21, i64* %22, align 8
  %23 = bitcast %"class.std::__1::basic_string.25"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #18
  call void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.25"* nonnull sret %5, %"class.sql::Statement"* nonnull %4, i32 1) #18
  %24 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %2, i64 0, i32 2
  %25 = bitcast %"class.std::__1::basic_string.25"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = bitcast %"class.std::__1::basic_string.25"* %24 to i8**
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #19
  br label %32

32:                                               ; preds = %29, %19
  %33 = bitcast %"class.std::__1::basic_string.25"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 8 %23, i64 24, i1 false) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #18
  %34 = bitcast %"class.std::__1::basic_string.25"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #18
  call void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.25"* nonnull sret %6, %"class.sql::Statement"* nonnull %4, i32 2) #18
  %35 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %2, i64 0, i32 3
  %36 = bitcast %"class.std::__1::basic_string.25"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %32
  %41 = bitcast %"class.std::__1::basic_string.25"* %35 to i8**
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #19
  br label %43

43:                                               ; preds = %40, %32
  %44 = bitcast %"class.std::__1::basic_string.25"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %34, i64 24, i1 false) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #18
  br label %45

45:                                               ; preds = %43, %17, %3
  %46 = phi i1 [ false, %3 ], [ true, %17 ], [ true, %43 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #18
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase24GetKeywordSearchTermRowsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorINS_20KeywordSearchTermRowENS5_ISB_EEEE(%"class.history::URLDatabase"*, %"class.std::__1::basic_string.25"* dereferenceable(24), %"class.std::__1::vector.77"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = alloca %"struct.history::KeywordSearchTermRow", align 8
  %6 = alloca %"class.std::__1::basic_string.25", align 8
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.sql::Statement", %"class.sql::Statement"* %4, i64 0, i32 0, i32 0
  %9 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %10 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %9, align 8
  %12 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %11, i64 3
  %13 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %12, align 8
  %14 = tail call dereferenceable(136) %"class.sql::Database"* %13(%"class.history::URLDatabase"* %0) #18
  %15 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %14, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 549, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.38, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %15) #18
  %16 = bitcast %"class.std::__1::basic_string.25"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = bitcast %"class.std::__1::basic_string.25"* %1 to i16*
  %23 = select i1 %19, i16* %21, i16* %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %18 to i64
  %27 = select i1 %19, i64 %25, i64 %26
  %28 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* nonnull %4, i32 0, i16* %23, i64 %27) #18
  %29 = load %"class.sql::Database::StatementRef"*, %"class.sql::Database::StatementRef"** %8, align 8
  %30 = getelementptr inbounds %"class.sql::Database::StatementRef", %"class.sql::Database::StatementRef"* %29, i64 0, i32 3
  %31 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %30, align 8
  %32 = icmp eq %struct.sqlite3_stmt* %31, null
  br i1 %32, label %67, label %33

33:                                               ; preds = %3
  %34 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #18
  br i1 %34, label %35, label %67

35:                                               ; preds = %33
  %36 = bitcast %"struct.history::KeywordSearchTermRow"* %5 to i8*
  %37 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %5, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %5, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %5, i64 0, i32 2
  %40 = bitcast %"class.std::__1::basic_string.25"* %6 to i8*
  %41 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %5, i64 0, i32 3
  %42 = bitcast %"class.std::__1::basic_string.25"* %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  %44 = bitcast %"class.std::__1::basic_string.25"* %41 to i8**
  %45 = bitcast %"class.std::__1::basic_string.25"* %41 to i8*
  %46 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %2, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast %"struct.history::KeywordSearchTermRow"** %46 to i64*
  br label %49

49:                                               ; preds = %35, %65
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %36) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 64, i1 false)
  call void @_ZN7history20KeywordSearchTermRowC1Ev(%"struct.history::KeywordSearchTermRow"* nonnull %5) #18
  %50 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %4, i32 1) #18
  store i64 %50, i64* %37, align 8
  %51 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %4, i32 0) #18
  store i64 %51, i64* %38, align 8
  %52 = call dereferenceable(24) %"class.std::__1::basic_string.25"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.25"* %39, %"class.std::__1::basic_string.25"* dereferenceable(24) %1)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #18
  call void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.25"* nonnull sret %6, %"class.sql::Statement"* nonnull %4, i32 2) #18
  %53 = load i8, i8* %43, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %49
  %56 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %56) #19
  br label %57

57:                                               ; preds = %55, %49
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %40, i64 24, i1 false) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #18
  %58 = load %"struct.history::KeywordSearchTermRow"*, %"struct.history::KeywordSearchTermRow"** %46, align 8
  %59 = load %"struct.history::KeywordSearchTermRow"*, %"struct.history::KeywordSearchTermRow"** %47, align 8
  %60 = icmp eq %"struct.history::KeywordSearchTermRow"* %58, %59
  br i1 %60, label %64, label %61

61:                                               ; preds = %57
  call void @_ZN7history20KeywordSearchTermRowC1ERKS0_(%"struct.history::KeywordSearchTermRow"* %58, %"struct.history::KeywordSearchTermRow"* nonnull dereferenceable(64) %5) #18
  %62 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %58, i64 1
  %63 = ptrtoint %"struct.history::KeywordSearchTermRow"* %62 to i64
  store i64 %63, i64* %48, align 8
  br label %65

64:                                               ; preds = %57
  call void @_ZNSt3__16vectorIN7history20KeywordSearchTermRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.77"* %2, %"struct.history::KeywordSearchTermRow"* nonnull dereferenceable(64) %5) #18
  br label %65

65:                                               ; preds = %61, %64
  call void @_ZN7history20KeywordSearchTermRowD1Ev(%"struct.history::KeywordSearchTermRow"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %36) #18
  %66 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #18
  br i1 %66, label %49, label %67

67:                                               ; preds = %65, %33, %3
  %68 = phi i1 [ false, %3 ], [ true, %33 ], [ true, %65 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #18
  ret i1 %68
}

declare void @_ZN7history20KeywordSearchTermRowC1Ev(%"struct.history::KeywordSearchTermRow"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.25"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.25"*, %"class.std::__1::basic_string.25"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.25"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.25"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.25"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.25"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.25"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.25"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.25"*
  %35 = icmp ugt %"class.std::__1::basic_string.25"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !20
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !20
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !23, !noalias !20
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !23, !noalias !20
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !20
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !20
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !23, !noalias !20
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !23, !noalias !20
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !20
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !20
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !23, !noalias !20
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !23, !noalias !20
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !20
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !20
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !23, !noalias !20
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !23, !noalias !20
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !25

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !20
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !20
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !23, !noalias !20
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !23, !noalias !20
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !27

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !29

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !30

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.25"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #20
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #20
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #19
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !31
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !31
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !34, !noalias !31
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !34, !noalias !31
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !31
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !31
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !34, !noalias !31
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !34, !noalias !31
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !31
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !31
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !34, !noalias !31
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !34, !noalias !31
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !31
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !31
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !34, !noalias !31
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !34, !noalias !31
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !36

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !31
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !31
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !34, !noalias !31
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !34, !noalias !31
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !37

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !38

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !39

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.25"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.25"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !40
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !40
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !43, !noalias !40
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !43, !noalias !40
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !40
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !40
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !43, !noalias !40
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !43, !noalias !40
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !40
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !40
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !43, !noalias !40
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !43, !noalias !40
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !40
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !40
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !43, !noalias !40
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !43, !noalias !40
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !45

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !40
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !40
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !43, !noalias !40
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !43, !noalias !40
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !46

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !47

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !48

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.25"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #18
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.25"* %0
}

; Function Attrs: nounwind
declare void @_ZN7history20KeywordSearchTermRowD1Ev(%"struct.history::KeywordSearchTermRow"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history11URLDatabase30DeleteAllSearchTermsForKeywordEl(%"class.history::URLDatabase"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #18
  %5 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %5, align 8
  %8 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %7, i64 3
  %9 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %8, align 8
  %10 = tail call dereferenceable(136) %"class.sql::Database"* %9(%"class.history::URLDatabase"* %0) #18
  %11 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %10, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 571, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.39, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %11) #18
  %12 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %1) #18
  %13 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #18
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history11URLDatabase31GetMostRecentKeywordSearchTermsElRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEiPNS1_6vectorINS_22KeywordSearchTermVisitENS5_ISB_EEEE(%"class.history::URLDatabase"*, i64, %"class.std::__1::basic_string.25"* dereferenceable(24), i32, %"class.std::__1::vector.84"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.sql::Statement", align 8
  %7 = alloca %"class.std::__1::basic_string.25", align 8
  %8 = alloca %"class.std::__1::basic_string.25", align 8
  %9 = alloca %"class.std::__1::basic_string.25", align 8
  %10 = alloca %"struct.history::KeywordSearchTermVisit", align 8
  %11 = alloca %"class.std::__1::basic_string.25", align 8
  %12 = icmp eq i64 %1, 0
  br i1 %12, label %318, label %13

13:                                               ; preds = %5
  %14 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #18
  %15 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %16 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %15, align 8
  %18 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %17, i64 3
  %19 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %18, align 8
  %20 = tail call dereferenceable(136) %"class.sql::Database"* %19(%"class.history::URLDatabase"* %0) #18
  %21 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %20, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 591, i8* getelementptr inbounds ([238 x i8], [238 x i8]* @.str.40, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %6, %"class.sql::Database::StatementRef"* %21) #18
  %22 = bitcast %"class.std::__1::basic_string.25"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #18
  %23 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string.25"* %8 to i8*
  %26 = bitcast %"class.std::__1::basic_string.25"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #18
  %27 = bitcast %"class.std::__1::basic_string.25"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string.25"* %2 to i16*
  %34 = select i1 %30, i16* %32, i16* %33
  %35 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %29 to i64
  %38 = select i1 %30, i64 %36, i64 %37
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.25"* nonnull sret %8, i16* %34, i64 %38) #18
  %39 = bitcast %"class.std::__1::basic_string.25"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = bitcast %"class.std::__1::basic_string.25"* %8 to i16*
  %46 = select i1 %42, i16* %44, i16* %45
  %47 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %41 to i64
  %50 = select i1 %42, i64 %48, i64 %49
  call void @_ZN4base18CollapseWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEb(%"class.std::__1::basic_string.25"* nonnull sret %7, i16* %46, i64 %50, i1 zeroext false) #18
  %51 = load i8, i8* %40, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %13
  %54 = bitcast %"class.std::__1::basic_string.25"* %8 to i8**
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #19
  br label %56

56:                                               ; preds = %13, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #18
  %57 = bitcast %"class.std::__1::basic_string.25"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #18
  %58 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %61 = bitcast %"class.std::__1::basic_string.25"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %61, i64 0, i32 1, i32 1
  %63 = bitcast %"class.std::__1::basic_string.25"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 24, i1 false)
  %64 = load i8, i8* %62, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* nonnull align 8 %22, i64 24, i1 false) #18
  br label %238

67:                                               ; preds = %56
  %68 = load i16*, i16** %23, align 8
  %69 = load i64, i64* %24, align 8
  %70 = icmp ult i64 %69, 11
  br i1 %70, label %71, label %76

71:                                               ; preds = %67
  %72 = bitcast %"class.std::__1::basic_string.25"* %9 to i16*
  %73 = trunc i64 %69 to i8
  %74 = bitcast %"class.std::__1::basic_string.25"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %74, i64 0, i32 1, i32 1
  store i8 %73, i8* %75, align 1
  br label %91

76:                                               ; preds = %67
  %77 = icmp ugt i64 %69, 9223372036854775791
  br i1 %77, label %78, label %80

78:                                               ; preds = %76
  %79 = bitcast %"class.std::__1::basic_string.25"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %79) #20
  unreachable

80:                                               ; preds = %76
  %81 = add nuw nsw i64 %69, 8
  %82 = and i64 %81, -8
  %83 = icmp slt i64 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %80
  call void @abort() #20
  unreachable

85:                                               ; preds = %80
  %86 = shl i64 %82, 1
  %87 = call i8* @_Znwm(i64 %86) #19
  %88 = bitcast i8* %87 to i16*
  %89 = bitcast %"class.std::__1::basic_string.25"* %9 to i8**
  store i8* %87, i8** %89, align 8
  %90 = or i64 %82, -9223372036854775808
  store i64 %90, i64* %60, align 8
  store i64 %69, i64* %59, align 8
  br label %91

91:                                               ; preds = %85, %71
  %92 = phi i16* [ %72, %71 ], [ %88, %85 ]
  %93 = add nuw nsw i64 %69, 1
  %94 = add i64 %69, 1
  %95 = icmp ult i64 %94, 16
  br i1 %95, label %185, label %96

96:                                               ; preds = %91
  %97 = add i64 %69, 1
  %98 = getelementptr i16, i16* %92, i64 %97
  %99 = getelementptr i16, i16* %68, i64 %97
  %100 = icmp ult i16* %92, %99
  %101 = icmp ult i16* %68, %98
  %102 = and i1 %100, %101
  br i1 %102, label %185, label %103

103:                                              ; preds = %96
  %104 = and i64 %94, -16
  %105 = sub i64 %93, %104
  %106 = getelementptr i16, i16* %68, i64 %104
  %107 = getelementptr i16, i16* %92, i64 %104
  %108 = add i64 %104, -16
  %109 = lshr exact i64 %108, 4
  %110 = add nuw nsw i64 %109, 1
  %111 = and i64 %110, 3
  %112 = icmp ult i64 %108, 48
  br i1 %112, label %164, label %113

113:                                              ; preds = %103
  %114 = sub nsw i64 %110, %111
  br label %115

115:                                              ; preds = %115, %113
  %116 = phi i64 [ 0, %113 ], [ %161, %115 ]
  %117 = phi i64 [ %114, %113 ], [ %162, %115 ]
  %118 = getelementptr i16, i16* %68, i64 %116
  %119 = getelementptr i16, i16* %92, i64 %116
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !49
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !49
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !52, !noalias !49
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !52, !noalias !49
  %128 = or i64 %116, 16
  %129 = getelementptr i16, i16* %68, i64 %128
  %130 = getelementptr i16, i16* %92, i64 %128
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !49
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !49
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !52, !noalias !49
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !52, !noalias !49
  %139 = or i64 %116, 32
  %140 = getelementptr i16, i16* %68, i64 %139
  %141 = getelementptr i16, i16* %92, i64 %139
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !49
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !49
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !52, !noalias !49
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !52, !noalias !49
  %150 = or i64 %116, 48
  %151 = getelementptr i16, i16* %68, i64 %150
  %152 = getelementptr i16, i16* %92, i64 %150
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !49
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !49
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !52, !noalias !49
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !52, !noalias !49
  %161 = add i64 %116, 64
  %162 = add i64 %117, -4
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %115, !llvm.loop !54

164:                                              ; preds = %115, %103
  %165 = phi i64 [ 0, %103 ], [ %161, %115 ]
  %166 = icmp eq i64 %111, 0
  br i1 %166, label %183, label %167

167:                                              ; preds = %164, %167
  %168 = phi i64 [ %180, %167 ], [ %165, %164 ]
  %169 = phi i64 [ %181, %167 ], [ %111, %164 ]
  %170 = getelementptr i16, i16* %68, i64 %168
  %171 = getelementptr i16, i16* %92, i64 %168
  %172 = bitcast i16* %170 to <8 x i16>*
  %173 = load <8 x i16>, <8 x i16>* %172, align 2, !alias.scope !49
  %174 = getelementptr i16, i16* %170, i64 8
  %175 = bitcast i16* %174 to <8 x i16>*
  %176 = load <8 x i16>, <8 x i16>* %175, align 2, !alias.scope !49
  %177 = bitcast i16* %171 to <8 x i16>*
  store <8 x i16> %173, <8 x i16>* %177, align 2, !alias.scope !52, !noalias !49
  %178 = getelementptr i16, i16* %171, i64 8
  %179 = bitcast i16* %178 to <8 x i16>*
  store <8 x i16> %176, <8 x i16>* %179, align 2, !alias.scope !52, !noalias !49
  %180 = add i64 %168, 16
  %181 = add i64 %169, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %167, !llvm.loop !55

183:                                              ; preds = %167, %164
  %184 = icmp eq i64 %94, %104
  br i1 %184, label %238, label %185

185:                                              ; preds = %183, %96, %91
  %186 = phi i64 [ %93, %96 ], [ %93, %91 ], [ %105, %183 ]
  %187 = phi i16* [ %68, %96 ], [ %68, %91 ], [ %106, %183 ]
  %188 = phi i16* [ %92, %96 ], [ %92, %91 ], [ %107, %183 ]
  %189 = add i64 %186, -1
  %190 = and i64 %186, 7
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %203, label %192

192:                                              ; preds = %185, %192
  %193 = phi i64 [ %198, %192 ], [ %186, %185 ]
  %194 = phi i16* [ %200, %192 ], [ %187, %185 ]
  %195 = phi i16* [ %199, %192 ], [ %188, %185 ]
  %196 = phi i64 [ %201, %192 ], [ %190, %185 ]
  %197 = load i16, i16* %194, align 2
  store i16 %197, i16* %195, align 2
  %198 = add i64 %193, -1
  %199 = getelementptr inbounds i16, i16* %195, i64 1
  %200 = getelementptr inbounds i16, i16* %194, i64 1
  %201 = add i64 %196, -1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %192, !llvm.loop !56

203:                                              ; preds = %192, %185
  %204 = phi i64 [ %186, %185 ], [ %198, %192 ]
  %205 = phi i16* [ %187, %185 ], [ %200, %192 ]
  %206 = phi i16* [ %188, %185 ], [ %199, %192 ]
  %207 = icmp ult i64 %189, 7
  br i1 %207, label %238, label %208

208:                                              ; preds = %203, %208
  %209 = phi i64 [ %234, %208 ], [ %204, %203 ]
  %210 = phi i16* [ %236, %208 ], [ %205, %203 ]
  %211 = phi i16* [ %235, %208 ], [ %206, %203 ]
  %212 = load i16, i16* %210, align 2
  store i16 %212, i16* %211, align 2
  %213 = getelementptr inbounds i16, i16* %211, i64 1
  %214 = getelementptr inbounds i16, i16* %210, i64 1
  %215 = load i16, i16* %214, align 2
  store i16 %215, i16* %213, align 2
  %216 = getelementptr inbounds i16, i16* %211, i64 2
  %217 = getelementptr inbounds i16, i16* %210, i64 2
  %218 = load i16, i16* %217, align 2
  store i16 %218, i16* %216, align 2
  %219 = getelementptr inbounds i16, i16* %211, i64 3
  %220 = getelementptr inbounds i16, i16* %210, i64 3
  %221 = load i16, i16* %220, align 2
  store i16 %221, i16* %219, align 2
  %222 = getelementptr inbounds i16, i16* %211, i64 4
  %223 = getelementptr inbounds i16, i16* %210, i64 4
  %224 = load i16, i16* %223, align 2
  store i16 %224, i16* %222, align 2
  %225 = getelementptr inbounds i16, i16* %211, i64 5
  %226 = getelementptr inbounds i16, i16* %210, i64 5
  %227 = load i16, i16* %226, align 2
  store i16 %227, i16* %225, align 2
  %228 = getelementptr inbounds i16, i16* %211, i64 6
  %229 = getelementptr inbounds i16, i16* %210, i64 6
  %230 = load i16, i16* %229, align 2
  store i16 %230, i16* %228, align 2
  %231 = getelementptr inbounds i16, i16* %211, i64 7
  %232 = getelementptr inbounds i16, i16* %210, i64 7
  %233 = load i16, i16* %232, align 2
  store i16 %233, i16* %231, align 2
  %234 = add i64 %209, -8
  %235 = getelementptr inbounds i16, i16* %211, i64 8
  %236 = getelementptr inbounds i16, i16* %210, i64 8
  %237 = icmp eq i64 %234, 0
  br i1 %237, label %238, label %208, !llvm.loop !57

238:                                              ; preds = %203, %208, %183, %66
  %239 = bitcast %"class.std::__1::basic_string.25"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %239, i64 0, i32 1, i32 1
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  %243 = load i16*, i16** %58, align 8
  %244 = load i64, i64* %59, align 8
  %245 = getelementptr inbounds i16, i16* %243, i64 %244
  %246 = bitcast %"class.std::__1::basic_string.25"* %9 to i16*
  %247 = zext i8 %241 to i64
  %248 = getelementptr inbounds i16, i16* %246, i64 %247
  %249 = select i1 %242, i16* %245, i16* %248
  %250 = select i1 %242, i16* %243, i16* %246
  %251 = select i1 %242, i64 %244, i64 %247
  %252 = getelementptr inbounds i16, i16* %249, i64 -1
  %253 = load i16, i16* %252, align 2
  %254 = add i16 %253, 1
  %255 = getelementptr inbounds i16, i16* %250, i64 %251
  %256 = getelementptr inbounds i16, i16* %255, i64 -1
  store i16 %254, i16* %256, align 2
  %257 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 0, i64 %1) #18
  %258 = load i8, i8* %62, align 1
  %259 = icmp slt i8 %258, 0
  %260 = load i16*, i16** %23, align 8
  %261 = bitcast %"class.std::__1::basic_string.25"* %7 to i16*
  %262 = select i1 %259, i16* %260, i16* %261
  %263 = load i64, i64* %24, align 8
  %264 = zext i8 %258 to i64
  %265 = select i1 %259, i64 %263, i64 %264
  %266 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* nonnull %6, i32 1, i16* %262, i64 %265) #18
  %267 = load i8, i8* %240, align 1
  %268 = icmp slt i8 %267, 0
  %269 = load i16*, i16** %58, align 8
  %270 = select i1 %268, i16* %269, i16* %246
  %271 = load i64, i64* %59, align 8
  %272 = zext i8 %267 to i64
  %273 = select i1 %268, i64 %271, i64 %272
  %274 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* nonnull %6, i32 2, i16* %270, i64 %273) #18
  %275 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %6, i32 3, i32 %3) #18
  %276 = bitcast %"struct.history::KeywordSearchTermVisit"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %276) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %276, i8 -86, i64 64, i1 false)
  call void @_ZN7history22KeywordSearchTermVisitC1Ev(%"struct.history::KeywordSearchTermVisit"* nonnull %10) #18
  %277 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %6) #18
  br i1 %277, label %278, label %305

278:                                              ; preds = %238
  %279 = bitcast %"class.std::__1::basic_string.25"* %11 to i8*
  %280 = bitcast %"struct.history::KeywordSearchTermVisit"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %281 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %280, i64 0, i32 1, i32 1
  %282 = bitcast %"struct.history::KeywordSearchTermVisit"* %10 to i8**
  %283 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %10, i64 0, i32 2
  %284 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %10, i64 0, i32 3, i32 0, i32 0
  %285 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %4, i64 0, i32 0, i32 1
  %286 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %287 = bitcast %"struct.history::KeywordSearchTermVisit"** %285 to i64*
  br label %288

288:                                              ; preds = %278, %303
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %279) #18
  call void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.25"* nonnull sret %11, %"class.sql::Statement"* nonnull %6, i32 0) #18
  %289 = load i8, i8* %281, align 1
  %290 = icmp slt i8 %289, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %288
  %292 = load i8*, i8** %282, align 8
  call void @_ZdlPv(i8* %292) #19
  br label %293

293:                                              ; preds = %291, %288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %276, i8* nonnull align 8 %279, i64 24, i1 false) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %279) #18
  %294 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* nonnull %6, i32 1) #18
  store i32 %294, i32* %283, align 8
  %295 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %6, i32 2) #18
  store i64 %295, i64* %284, align 8
  %296 = load %"struct.history::KeywordSearchTermVisit"*, %"struct.history::KeywordSearchTermVisit"** %285, align 8
  %297 = load %"struct.history::KeywordSearchTermVisit"*, %"struct.history::KeywordSearchTermVisit"** %286, align 8
  %298 = icmp eq %"struct.history::KeywordSearchTermVisit"* %296, %297
  br i1 %298, label %302, label %299

299:                                              ; preds = %293
  call void @_ZN7history22KeywordSearchTermVisitC2ERKS0_(%"struct.history::KeywordSearchTermVisit"* %296, %"struct.history::KeywordSearchTermVisit"* nonnull dereferenceable(64) %10) #18
  %300 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %296, i64 1
  %301 = ptrtoint %"struct.history::KeywordSearchTermVisit"* %300 to i64
  store i64 %301, i64* %287, align 8
  br label %303

302:                                              ; preds = %293
  call void @_ZNSt3__16vectorIN7history22KeywordSearchTermVisitENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.84"* %4, %"struct.history::KeywordSearchTermVisit"* nonnull dereferenceable(64) %10) #18
  br label %303

303:                                              ; preds = %299, %302
  %304 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %6) #18
  br i1 %304, label %288, label %305

305:                                              ; preds = %303, %238
  call void @_ZN7history22KeywordSearchTermVisitD1Ev(%"struct.history::KeywordSearchTermVisit"* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %276) #18
  %306 = load i8, i8* %240, align 1
  %307 = icmp slt i8 %306, 0
  br i1 %307, label %308, label %311

308:                                              ; preds = %305
  %309 = bitcast %"class.std::__1::basic_string.25"* %9 to i8**
  %310 = load i8*, i8** %309, align 8
  call void @_ZdlPv(i8* %310) #19
  br label %311

311:                                              ; preds = %305, %308
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #18
  %312 = load i8, i8* %62, align 1
  %313 = icmp slt i8 %312, 0
  br i1 %313, label %314, label %317

314:                                              ; preds = %311
  %315 = bitcast %"class.std::__1::basic_string.25"* %7 to i8**
  %316 = load i8*, i8** %315, align 8
  call void @_ZdlPv(i8* %316) #19
  br label %317

317:                                              ; preds = %311, %314
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #18
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #18
  br label %318

318:                                              ; preds = %5, %317
  ret void
}

declare void @_ZN7history22KeywordSearchTermVisitC1Ev(%"struct.history::KeywordSearchTermVisit"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7history22KeywordSearchTermVisitD1Ev(%"struct.history::KeywordSearchTermVisit"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history11URLDatabase41GetMostRecentNormalizedKeywordSearchTermsElN4base4TimeE(%"class.std::__1::vector.91"* noalias nocapture sret, %"class.history::URLDatabase"*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.sql::Statement", align 8
  %6 = alloca %"class.std::__1::vector.91", align 16
  %7 = alloca %"struct.history::NormalizedKeywordSearchTermVisit", align 8
  %8 = alloca %"class.std::__1::basic_string.25", align 8
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = bitcast %"class.std::__1::vector.91"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #18
  br label %249

12:                                               ; preds = %4
  %13 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #18
  %14 = bitcast %"class.history::URLDatabase"* %1 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %15 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %14, align 8
  %17 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %16, i64 3
  %18 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %17, align 8
  %19 = tail call dereferenceable(136) %"class.sql::Database"* %18(%"class.history::URLDatabase"* %1) #18
  %20 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %19, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 640, i8* getelementptr inbounds ([769 x i8], [769 x i8]* @.str.41, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %20) #18
  %21 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 0, i64 300000000) #18
  %22 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 1, i64 %2) #18
  %23 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 2, i64 %3) #18
  %24 = bitcast %"class.std::__1::vector.91"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #18
  %25 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %6, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 0, i64 24, i1 false) #18
  %27 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %5) #18
  br i1 %27, label %28, label %243

28:                                               ; preds = %12
  %29 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %7 to i8*
  %30 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %7, i64 0, i32 2, i32 0, i32 0
  %31 = bitcast %"class.std::__1::basic_string.25"* %8 to i8*
  %32 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %7 to i8**
  %35 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %7, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast i32* %35 to i8*
  %39 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"** %25 to i64*
  br label %40

40:                                               ; preds = %28, %236
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 32, i1 false)
  store i64 0, i64* %30, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 28, i1 false) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #18
  call void @_ZNK3sql9Statement14ColumnString16Ei(%"class.std::__1::basic_string.25"* nonnull sret %8, %"class.sql::Statement"* nonnull %5, i32 0) #18
  %41 = load i8, i8* %33, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %44) #19
  br label %45

45:                                               ; preds = %43, %40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* nonnull align 8 %31, i64 24, i1 false) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #18
  %46 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* nonnull %5, i32 1) #18
  store i32 %46, i32* %35, align 8
  %47 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %5, i32 2) #18
  store i64 %47, i64* %30, align 8
  %48 = load %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"** %25, align 8
  %49 = load %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"** %26, align 16
  %50 = icmp eq %"struct.history::NormalizedKeywordSearchTermVisit"* %48, %49
  br i1 %50, label %235, label %51

51:                                               ; preds = %45
  %52 = load i8, i8* %33, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %29, i64 24, i1 false) #18
  br label %230

56:                                               ; preds = %51
  %57 = load i16*, i16** %36, align 8
  %58 = load i64, i64* %37, align 8
  %59 = icmp ult i64 %58, 11
  br i1 %59, label %60, label %65

60:                                               ; preds = %56
  %61 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %48 to i16*
  %62 = trunc i64 %58 to i8
  %63 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %48 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  store i8 %62, i8* %64, align 1
  br label %82

65:                                               ; preds = %56
  %66 = icmp ugt i64 %58, 9223372036854775791
  br i1 %66, label %67, label %69

67:                                               ; preds = %65
  %68 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %48 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %68) #20
  unreachable

69:                                               ; preds = %65
  %70 = add nuw nsw i64 %58, 8
  %71 = and i64 %70, -8
  %72 = icmp slt i64 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %69
  call void @abort() #20
  unreachable

74:                                               ; preds = %69
  %75 = shl i64 %71, 1
  %76 = call i8* @_Znwm(i64 %75) #19
  %77 = bitcast i8* %76 to i16*
  %78 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %48 to i8**
  store i8* %76, i8** %78, align 8
  %79 = or i64 %71, -9223372036854775808
  %80 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %58, i64* %81, align 8
  br label %82

82:                                               ; preds = %74, %60
  %83 = phi i16* [ %61, %60 ], [ %77, %74 ]
  %84 = add nuw nsw i64 %58, 1
  %85 = add i64 %58, 1
  %86 = icmp ult i64 %85, 16
  br i1 %86, label %177, label %87

87:                                               ; preds = %82
  %88 = getelementptr i16, i16* %83, i64 1
  %89 = getelementptr i16, i16* %88, i64 %58
  %90 = getelementptr i16, i16* %57, i64 1
  %91 = getelementptr i16, i16* %90, i64 %58
  %92 = icmp ult i16* %83, %91
  %93 = icmp ult i16* %57, %89
  %94 = and i1 %92, %93
  br i1 %94, label %177, label %95

95:                                               ; preds = %87
  %96 = and i64 %85, -16
  %97 = sub i64 %84, %96
  %98 = getelementptr i16, i16* %57, i64 %96
  %99 = getelementptr i16, i16* %83, i64 %96
  %100 = add i64 %96, -16
  %101 = lshr exact i64 %100, 4
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 3
  %104 = icmp ult i64 %100, 48
  br i1 %104, label %156, label %105

105:                                              ; preds = %95
  %106 = sub nsw i64 %102, %103
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %153, %107 ]
  %109 = phi i64 [ %106, %105 ], [ %154, %107 ]
  %110 = getelementptr i16, i16* %57, i64 %108
  %111 = getelementptr i16, i16* %83, i64 %108
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !58
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !58
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !61, !noalias !58
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !61, !noalias !58
  %120 = or i64 %108, 16
  %121 = getelementptr i16, i16* %57, i64 %120
  %122 = getelementptr i16, i16* %83, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !58
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !58
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !61, !noalias !58
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !61, !noalias !58
  %131 = or i64 %108, 32
  %132 = getelementptr i16, i16* %57, i64 %131
  %133 = getelementptr i16, i16* %83, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !58
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !58
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !61, !noalias !58
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !61, !noalias !58
  %142 = or i64 %108, 48
  %143 = getelementptr i16, i16* %57, i64 %142
  %144 = getelementptr i16, i16* %83, i64 %142
  %145 = bitcast i16* %143 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !58
  %147 = getelementptr i16, i16* %143, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !58
  %150 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %150, align 2, !alias.scope !61, !noalias !58
  %151 = getelementptr i16, i16* %144, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %152, align 2, !alias.scope !61, !noalias !58
  %153 = add i64 %108, 64
  %154 = add i64 %109, -4
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %107, !llvm.loop !63

156:                                              ; preds = %107, %95
  %157 = phi i64 [ 0, %95 ], [ %153, %107 ]
  %158 = icmp eq i64 %103, 0
  br i1 %158, label %175, label %159

159:                                              ; preds = %156, %159
  %160 = phi i64 [ %172, %159 ], [ %157, %156 ]
  %161 = phi i64 [ %173, %159 ], [ %103, %156 ]
  %162 = getelementptr i16, i16* %57, i64 %160
  %163 = getelementptr i16, i16* %83, i64 %160
  %164 = bitcast i16* %162 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !58
  %166 = getelementptr i16, i16* %162, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !58
  %169 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %169, align 2, !alias.scope !61, !noalias !58
  %170 = getelementptr i16, i16* %163, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %171, align 2, !alias.scope !61, !noalias !58
  %172 = add i64 %160, 16
  %173 = add i64 %161, -1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %159, !llvm.loop !64

175:                                              ; preds = %159, %156
  %176 = icmp eq i64 %85, %96
  br i1 %176, label %230, label %177

177:                                              ; preds = %175, %87, %82
  %178 = phi i64 [ %84, %87 ], [ %84, %82 ], [ %97, %175 ]
  %179 = phi i16* [ %57, %87 ], [ %57, %82 ], [ %98, %175 ]
  %180 = phi i16* [ %83, %87 ], [ %83, %82 ], [ %99, %175 ]
  %181 = add i64 %178, -1
  %182 = and i64 %178, 7
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %195, label %184

184:                                              ; preds = %177, %184
  %185 = phi i64 [ %190, %184 ], [ %178, %177 ]
  %186 = phi i16* [ %192, %184 ], [ %179, %177 ]
  %187 = phi i16* [ %191, %184 ], [ %180, %177 ]
  %188 = phi i64 [ %193, %184 ], [ %182, %177 ]
  %189 = load i16, i16* %186, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %185, -1
  %191 = getelementptr inbounds i16, i16* %187, i64 1
  %192 = getelementptr inbounds i16, i16* %186, i64 1
  %193 = add i64 %188, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %184, !llvm.loop !65

195:                                              ; preds = %184, %177
  %196 = phi i64 [ %178, %177 ], [ %190, %184 ]
  %197 = phi i16* [ %179, %177 ], [ %192, %184 ]
  %198 = phi i16* [ %180, %177 ], [ %191, %184 ]
  %199 = icmp ult i64 %181, 7
  br i1 %199, label %230, label %200

200:                                              ; preds = %195, %200
  %201 = phi i64 [ %226, %200 ], [ %196, %195 ]
  %202 = phi i16* [ %228, %200 ], [ %197, %195 ]
  %203 = phi i16* [ %227, %200 ], [ %198, %195 ]
  %204 = load i16, i16* %202, align 2
  store i16 %204, i16* %203, align 2
  %205 = getelementptr inbounds i16, i16* %203, i64 1
  %206 = getelementptr inbounds i16, i16* %202, i64 1
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %203, i64 2
  %209 = getelementptr inbounds i16, i16* %202, i64 2
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %203, i64 3
  %212 = getelementptr inbounds i16, i16* %202, i64 3
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %203, i64 4
  %215 = getelementptr inbounds i16, i16* %202, i64 4
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %203, i64 5
  %218 = getelementptr inbounds i16, i16* %202, i64 5
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %203, i64 6
  %221 = getelementptr inbounds i16, i16* %202, i64 6
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = getelementptr inbounds i16, i16* %203, i64 7
  %224 = getelementptr inbounds i16, i16* %202, i64 7
  %225 = load i16, i16* %224, align 2
  store i16 %225, i16* %223, align 2
  %226 = add i64 %201, -8
  %227 = getelementptr inbounds i16, i16* %203, i64 8
  %228 = getelementptr inbounds i16, i16* %202, i64 8
  %229 = icmp eq i64 %226, 0
  br i1 %229, label %230, label %200, !llvm.loop !66

230:                                              ; preds = %195, %200, %175, %54
  %231 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %48, i64 0, i32 1
  %232 = bitcast i32* %231 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %232, i8* align 8 %38, i64 16, i1 false) #18
  %233 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %48, i64 1
  %234 = ptrtoint %"struct.history::NormalizedKeywordSearchTermVisit"* %233 to i64
  store i64 %234, i64* %39, align 8
  br label %236

235:                                              ; preds = %45
  call void @_ZNSt3__16vectorIN7history32NormalizedKeywordSearchTermVisitENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.91"* nonnull %6, %"struct.history::NormalizedKeywordSearchTermVisit"* nonnull dereferenceable(40) %7) #18
  br label %236

236:                                              ; preds = %230, %235
  call void @_ZN7history32NormalizedKeywordSearchTermVisitD1Ev(%"struct.history::NormalizedKeywordSearchTermVisit"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #18
  %237 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %5) #18
  br i1 %237, label %40, label %238

238:                                              ; preds = %236
  %239 = bitcast %"class.std::__1::vector.91"* %6 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 16
  %241 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"** %26 to i64*
  %242 = load i64, i64* %241, align 16
  br label %243

243:                                              ; preds = %238, %12
  %244 = phi i64 [ %242, %238 ], [ 0, %12 ]
  %245 = phi <2 x i64> [ %240, %238 ], [ zeroinitializer, %12 ]
  %246 = bitcast %"class.std::__1::vector.91"* %0 to <2 x i64>*
  store <2 x i64> %245, <2 x i64>* %246, align 8
  %247 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %248 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"** %247 to i64*
  store i64 %244, i64* %248, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #18
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #18
  br label %249

249:                                              ; preds = %243, %10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7history32NormalizedKeywordSearchTermVisitD1Ev(%"struct.history::NormalizedKeywordSearchTermVisit"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase23DeleteKeywordSearchTermERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.history::URLDatabase"*, %"class.std::__1::basic_string.25"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #18
  %5 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %5, align 8
  %8 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %7, i64 3
  %9 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %8, align 8
  %10 = tail call dereferenceable(136) %"class.sql::Database"* %9(%"class.history::URLDatabase"* %0) #18
  %11 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %10, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 684, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.42, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %11) #18
  %12 = bitcast %"class.std::__1::basic_string.25"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string.25"* %1 to i16*
  %19 = select i1 %15, i16* %17, i16* %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %14 to i64
  %23 = select i1 %15, i64 %21, i64 %22
  %24 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* nonnull %3, i32 0, i16* %19, i64 %23) #18
  %25 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #18
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #18
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase40DeleteKeywordSearchTermForNormalizedTermElRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.history::URLDatabase"*, i64, %"class.std::__1::basic_string.25"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #18
  %6 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %6, align 8
  %9 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %8, i64 3
  %10 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %9, align 8
  %11 = tail call dereferenceable(136) %"class.sql::Database"* %10(%"class.history::URLDatabase"* %0) #18
  %12 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %11, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 695, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.43, i64 0, i64 0)) #18
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %12) #18
  %13 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %1) #18
  %14 = bitcast %"class.std::__1::basic_string.25"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string.25"* %2 to i16*
  %21 = select i1 %17, i16* %19, i16* %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i64 %23, i64 %24
  %26 = call zeroext i1 @_ZN3sql9Statement12BindString16EiN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.sql::Statement"* nonnull %4, i32 1, i16* %21, i64 %25) #18
  %27 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #18
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #18
  ret i1 %27
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase16GetVisitsForUrl2ElPNSt3__16vectorINS_8VisitRowENS1_9allocatorIS3_EEEE(%"class.history::URLDatabase"* nocapture readnone, i64, %"class.std::__1::vector.98"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase21DropStarredIDFromURLsEv(%"class.history::URLDatabase"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %3 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %3, i64 3
  %5 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %4, align 8
  %6 = tail call dereferenceable(136) %"class.sql::Database"* %5(%"class.history::URLDatabase"* %0) #18
  %7 = tail call zeroext i1 @_ZNK3sql8Database15DoesColumnExistEPKcS2_(%"class.sql::Database"* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0)) #18
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = tail call zeroext i1 @_ZN7history11URLDatabase31RecreateURLTableWithAllContentsEv(%"class.history::URLDatabase"* %0)
  br label %10

10:                                               ; preds = %1, %8
  %11 = phi i1 [ %9, %8 ], [ true, %1 ]
  ret i1 %11
}

declare zeroext i1 @_ZNK3sql8Database15DoesColumnExistEPKcS2_(%"class.sql::Database"*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history11URLDatabase31RecreateURLTableWithAllContentsEv(%"class.history::URLDatabase"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN7history11URLDatabase14CreateURLTableEb(%"class.history::URLDatabase"* %0, i1 zeroext true) #18
  br i1 %2, label %3, label %28

3:                                                ; preds = %1
  %4 = bitcast %"class.history::URLDatabase"* %0 to %"class.sql::Database"* (%"class.history::URLDatabase"*)***
  %5 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %5, i64 3
  %7 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %6, align 8
  %8 = tail call dereferenceable(136) %"class.sql::Database"* %7(%"class.history::URLDatabase"* %0) #18
  %9 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %8, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @.str.51, i64 0, i64 0)) #18
  br i1 %9, label %10, label %28

10:                                               ; preds = %3
  %11 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %4, align 8
  %12 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %11, i64 3
  %13 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %12, align 8
  %14 = tail call dereferenceable(136) %"class.sql::Database"* %13(%"class.history::URLDatabase"* %0) #18
  %15 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0)) #18
  br i1 %15, label %16, label %28

16:                                               ; preds = %10
  %17 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %4, align 8
  %18 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %17, i64 3
  %19 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %18, align 8
  %20 = tail call dereferenceable(136) %"class.sql::Database"* %19(%"class.history::URLDatabase"* %0) #18
  %21 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %20, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0)) #18
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)**, %"class.sql::Database"* (%"class.history::URLDatabase"*)*** %4, align 8
  %24 = getelementptr inbounds %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %23, i64 3
  %25 = load %"class.sql::Database"* (%"class.history::URLDatabase"*)*, %"class.sql::Database"* (%"class.history::URLDatabase"*)** %24, align 8
  %26 = tail call dereferenceable(136) %"class.sql::Database"* %25(%"class.history::URLDatabase"* %0) #18
  %27 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %26, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.50, i64 0, i64 0)) #18
  br label %28

28:                                               ; preds = %22, %16, %10, %3, %1
  %29 = phi i1 [ false, %1 ], [ false, %3 ], [ %27, %22 ], [ false, %10 ], [ false, %16 ]
  ret i1 %29
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history25RowQualifiesAsSignificantERKNS_6URLRowERKN4base4TimeE(%"class.history::URLRow"* nocapture readonly dereferenceable(184), %"class.base::Time"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 7
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %29

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call i64 @_ZN4base4Time3NowEv() #18
  %12 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %11, i64 -259200000000) #18
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 -9223372036854775808, i64 %14, !prof !3
  br label %16

16:                                               ; preds = %6, %10
  %17 = phi i64 [ %15, %10 ], [ %8, %6 ]
  %18 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = icmp sgt i32 %23, 3
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %0, i64 0, i32 6, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp sge i64 %27, %17
  br label %29

29:                                               ; preds = %2, %16, %21, %25
  %30 = phi i1 [ false, %2 ], [ true, %21 ], [ true, %16 ], [ %28, %25 ]
  ret i1 %30
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history11URLDatabase17URLEnumeratorBaseD2Ev(%"class.history::URLDatabase::URLEnumeratorBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::URLDatabase::URLEnumeratorBase", %"class.history::URLDatabase::URLEnumeratorBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history11URLDatabase17URLEnumeratorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.history::URLDatabase::URLEnumeratorBase", %"class.history::URLDatabase::URLEnumeratorBase"* %0, i64 0, i32 3
  tail call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* %3) #18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7history11URLDatabase13URLEnumeratorD0Ev(%"class.history::URLDatabase::URLEnumerator"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.history::URLDatabase::URLEnumerator", %"class.history::URLDatabase::URLEnumerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7history11URLDatabase17URLEnumeratorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.history::URLDatabase::URLEnumerator", %"class.history::URLDatabase::URLEnumerator"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* %3) #18
  %4 = bitcast %"class.history::URLDatabase::URLEnumerator"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  ret void
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.14"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #18
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #18
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #18
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #18
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #18
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #18
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #18
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #18
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #18
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #19
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #18
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #18
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #19
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #18
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #18
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.25"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.25"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #20
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.25"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.25"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #20
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #19
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !67
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !67
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !70, !noalias !67
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !70, !noalias !67
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !67
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !67
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !70, !noalias !67
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !70, !noalias !67
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !67
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !67
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !70, !noalias !67
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !70, !noalias !67
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !67
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !67
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !70, !noalias !67
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !70, !noalias !67
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !72

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !67
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !67
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !70, !noalias !67
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !70, !noalias !67
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !73

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !74

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !75

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !76

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !77

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !78

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !80
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !80
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !83, !noalias !80
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !83, !noalias !80
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !80
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !80
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !83, !noalias !80
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !83, !noalias !80
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !80
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !80
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !83, !noalias !80
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !83, !noalias !80
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !80
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !80
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !83, !noalias !80
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !83, !noalias !80
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !85

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !80
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !80
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !83, !noalias !80
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !83, !noalias !80
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !86

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !87

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !88

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #19
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.25"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #14

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history6URLRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.35"*, %"class.history::URLRow"* dereferenceable(184)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.history::URLRow"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.35"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 184
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 100254043878856258
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.35"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.history::URLRow"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 184
  %20 = icmp ult i64 %19, 50127021939428129
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 100254043878856258, %14 ]
  %28 = mul i64 %27, 184
  %29 = tail call i8* @_Znwm(i64 %28) #19
  %30 = bitcast i8* %29 to %"class.history::URLRow"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.history::URLRow"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %33, i64 %9
  %35 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %33, i64 %32
  %36 = ptrtoint %"class.history::URLRow"* %35 to i64
  tail call void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"* %34, %"class.history::URLRow"* dereferenceable(184) %1) #18
  %37 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %34, i64 1
  %38 = ptrtoint %"class.history::URLRow"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.history::URLRow"*, %"class.history::URLRow"** %39, align 8
  %41 = load %"class.history::URLRow"*, %"class.history::URLRow"** %3, align 8
  %42 = icmp eq %"class.history::URLRow"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.history::URLRow"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.history::URLRow"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.history::URLRow"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %46, i64 -1
  %49 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %47, i64 -1
  tail call void @_ZN7history6URLRowC1EOS0_(%"class.history::URLRow"* %48, %"class.history::URLRow"* dereferenceable(184) %49) #18
  %50 = icmp eq %"class.history::URLRow"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.history::URLRow"*, %"class.history::URLRow"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.history::URLRow"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.history::URLRow"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.history::URLRow"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.history::URLRow"*
  %60 = icmp eq %"class.history::URLRow"* %55, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.history::URLRow"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %62, i64 -1
  %64 = bitcast %"class.history::URLRow"* %63 to void (%"class.history::URLRow"*)***
  %65 = load void (%"class.history::URLRow"*)**, void (%"class.history::URLRow"*)*** %64, align 8
  %66 = load void (%"class.history::URLRow"*)*, void (%"class.history::URLRow"*)** %65, align 8
  tail call void %66(%"class.history::URLRow"* %63) #18
  %67 = icmp eq %"class.history::URLRow"* %63, %59
  br i1 %67, label %68, label %61

68:                                               ; preds = %61, %54
  %69 = icmp eq i64 %57, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %71) #19
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN7history6URLRowC1EOS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #15

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history20KeywordSearchTermRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.77"*, %"struct.history::KeywordSearchTermRow"* dereferenceable(64)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.history::KeywordSearchTermRow"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.77"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 6
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 288230376151711743
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.77"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.history::KeywordSearchTermRow"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 6
  %20 = icmp ult i64 %19, 144115188075855871
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 5
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 288230376151711743
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 288230376151711743, %14 ]
  %31 = shl i64 %30, 6
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"struct.history::KeywordSearchTermRow"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.history::KeywordSearchTermRow"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %36, i64 %35
  %39 = ptrtoint %"struct.history::KeywordSearchTermRow"* %38 to i64
  tail call void @_ZN7history20KeywordSearchTermRowC1ERKS0_(%"struct.history::KeywordSearchTermRow"* %37, %"struct.history::KeywordSearchTermRow"* dereferenceable(64) %1) #18
  %40 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %37, i64 1
  %41 = ptrtoint %"struct.history::KeywordSearchTermRow"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.history::KeywordSearchTermRow"*, %"struct.history::KeywordSearchTermRow"** %42, align 8
  %44 = load %"struct.history::KeywordSearchTermRow"*, %"struct.history::KeywordSearchTermRow"** %3, align 8
  %45 = icmp eq %"struct.history::KeywordSearchTermRow"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.history::KeywordSearchTermRow"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"struct.history::KeywordSearchTermRow"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"struct.history::KeywordSearchTermRow"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %50, i64 -1
  tail call void @_ZN7history20KeywordSearchTermRowC1ERKS0_(%"struct.history::KeywordSearchTermRow"* %51, %"struct.history::KeywordSearchTermRow"* dereferenceable(64) %52) #18
  %53 = icmp eq %"struct.history::KeywordSearchTermRow"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"struct.history::KeywordSearchTermRow"*, %"struct.history::KeywordSearchTermRow"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"struct.history::KeywordSearchTermRow"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"struct.history::KeywordSearchTermRow"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"struct.history::KeywordSearchTermRow"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"struct.history::KeywordSearchTermRow"*
  %63 = icmp eq %"struct.history::KeywordSearchTermRow"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"struct.history::KeywordSearchTermRow"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"struct.history::KeywordSearchTermRow", %"struct.history::KeywordSearchTermRow"* %65, i64 -1
  tail call void @_ZN7history20KeywordSearchTermRowD1Ev(%"struct.history::KeywordSearchTermRow"* %66) #18
  %67 = icmp eq %"struct.history::KeywordSearchTermRow"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #19
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN7history20KeywordSearchTermRowC1ERKS0_(%"struct.history::KeywordSearchTermRow"*, %"struct.history::KeywordSearchTermRow"* dereferenceable(64)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history22KeywordSearchTermVisitENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.84"*, %"struct.history::KeywordSearchTermVisit"* dereferenceable(64)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.history::KeywordSearchTermVisit"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.84"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 6
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 288230376151711743
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.84"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.history::KeywordSearchTermVisit"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 6
  %20 = icmp ult i64 %19, 144115188075855871
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 5
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 288230376151711743
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 288230376151711743, %14 ]
  %31 = shl i64 %30, 6
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"struct.history::KeywordSearchTermVisit"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.history::KeywordSearchTermVisit"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %36, i64 %35
  %39 = ptrtoint %"struct.history::KeywordSearchTermVisit"* %38 to i64
  tail call void @_ZN7history22KeywordSearchTermVisitC2ERKS0_(%"struct.history::KeywordSearchTermVisit"* %37, %"struct.history::KeywordSearchTermVisit"* dereferenceable(64) %1) #18
  %40 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %37, i64 1
  %41 = ptrtoint %"struct.history::KeywordSearchTermVisit"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.history::KeywordSearchTermVisit"*, %"struct.history::KeywordSearchTermVisit"** %42, align 8
  %44 = load %"struct.history::KeywordSearchTermVisit"*, %"struct.history::KeywordSearchTermVisit"** %3, align 8
  %45 = icmp eq %"struct.history::KeywordSearchTermVisit"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.history::KeywordSearchTermVisit"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"struct.history::KeywordSearchTermVisit"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"struct.history::KeywordSearchTermVisit"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %50, i64 -1
  tail call void @_ZN7history22KeywordSearchTermVisitC2ERKS0_(%"struct.history::KeywordSearchTermVisit"* %51, %"struct.history::KeywordSearchTermVisit"* dereferenceable(64) %52) #18
  %53 = icmp eq %"struct.history::KeywordSearchTermVisit"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"struct.history::KeywordSearchTermVisit"*, %"struct.history::KeywordSearchTermVisit"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"struct.history::KeywordSearchTermVisit"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"struct.history::KeywordSearchTermVisit"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"struct.history::KeywordSearchTermVisit"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"struct.history::KeywordSearchTermVisit"*
  %63 = icmp eq %"struct.history::KeywordSearchTermVisit"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"struct.history::KeywordSearchTermVisit"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %65, i64 -1
  tail call void @_ZN7history22KeywordSearchTermVisitD1Ev(%"struct.history::KeywordSearchTermVisit"* %66) #18
  %67 = icmp eq %"struct.history::KeywordSearchTermVisit"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #19
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7history22KeywordSearchTermVisitC2ERKS0_(%"struct.history::KeywordSearchTermVisit"*, %"struct.history::KeywordSearchTermVisit"* dereferenceable(64)) unnamed_addr #9 comdat align 2 {
  %3 = bitcast %"struct.history::KeywordSearchTermVisit"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.history::KeywordSearchTermVisit"* %0 to i8*
  %9 = bitcast %"struct.history::KeywordSearchTermVisit"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #18
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.history::KeywordSearchTermVisit"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.history::KeywordSearchTermVisit"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.history::KeywordSearchTermVisit"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #20
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #20
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.history::KeywordSearchTermVisit"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !89
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !89
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !92, !noalias !89
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !92, !noalias !89
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !89
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !89
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !92, !noalias !89
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !92, !noalias !89
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !89
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !89
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !92, !noalias !89
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !92, !noalias !89
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !89
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !89
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !92, !noalias !89
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !92, !noalias !89
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !94

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !89
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !89
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !92, !noalias !89
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !92, !noalias !89
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !95

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !96

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !97

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::basic_string.25"* %187 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %188, i64 0, i32 1, i32 1
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %185
  %193 = bitcast %"class.std::__1::basic_string.25"* %186 to i8*
  %194 = bitcast %"class.std::__1::basic_string.25"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 24, i1 false) #18
  br label %370

195:                                              ; preds = %185
  %196 = getelementptr inbounds %"class.std::__1::basic_string.25", %"class.std::__1::basic_string.25"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %199, 11
  br i1 %200, label %201, label %206

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::basic_string.25"* %186 to i16*
  %203 = trunc i64 %199 to i8
  %204 = bitcast %"class.std::__1::basic_string.25"* %186 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  store i8 %203, i8* %205, align 1
  br label %223

206:                                              ; preds = %195
  %207 = icmp ugt i64 %199, 9223372036854775791
  br i1 %207, label %208, label %210

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::basic_string.25"* %186 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %209) #20
  unreachable

210:                                              ; preds = %206
  %211 = add nuw nsw i64 %199, 8
  %212 = and i64 %211, -8
  %213 = icmp slt i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  tail call void @abort() #20
  unreachable

215:                                              ; preds = %210
  %216 = shl i64 %212, 1
  %217 = tail call i8* @_Znwm(i64 %216) #19
  %218 = bitcast i8* %217 to i16*
  %219 = bitcast %"class.std::__1::basic_string.25"* %186 to i8**
  store i8* %217, i8** %219, align 8
  %220 = or i64 %212, -9223372036854775808
  %221 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %199, i64* %222, align 8
  br label %223

223:                                              ; preds = %215, %201
  %224 = phi i16* [ %202, %201 ], [ %218, %215 ]
  %225 = add nuw nsw i64 %199, 1
  %226 = add i64 %199, 1
  %227 = icmp ult i64 %226, 16
  br i1 %227, label %317, label %228

228:                                              ; preds = %223
  %229 = add i64 %199, 1
  %230 = getelementptr i16, i16* %224, i64 %229
  %231 = getelementptr i16, i16* %197, i64 %229
  %232 = icmp ult i16* %224, %231
  %233 = icmp ult i16* %197, %230
  %234 = and i1 %232, %233
  br i1 %234, label %317, label %235

235:                                              ; preds = %228
  %236 = and i64 %226, -16
  %237 = sub i64 %225, %236
  %238 = getelementptr i16, i16* %197, i64 %236
  %239 = getelementptr i16, i16* %224, i64 %236
  %240 = add i64 %236, -16
  %241 = lshr exact i64 %240, 4
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp ult i64 %240, 48
  br i1 %244, label %296, label %245

245:                                              ; preds = %235
  %246 = sub nsw i64 %242, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i64 [ 0, %245 ], [ %293, %247 ]
  %249 = phi i64 [ %246, %245 ], [ %294, %247 ]
  %250 = getelementptr i16, i16* %197, i64 %248
  %251 = getelementptr i16, i16* %224, i64 %248
  %252 = bitcast i16* %250 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !98
  %254 = getelementptr i16, i16* %250, i64 8
  %255 = bitcast i16* %254 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !98
  %257 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %257, align 2, !alias.scope !101, !noalias !98
  %258 = getelementptr i16, i16* %251, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %259, align 2, !alias.scope !101, !noalias !98
  %260 = or i64 %248, 16
  %261 = getelementptr i16, i16* %197, i64 %260
  %262 = getelementptr i16, i16* %224, i64 %260
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !98
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !98
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2, !alias.scope !101, !noalias !98
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2, !alias.scope !101, !noalias !98
  %271 = or i64 %248, 32
  %272 = getelementptr i16, i16* %197, i64 %271
  %273 = getelementptr i16, i16* %224, i64 %271
  %274 = bitcast i16* %272 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !98
  %276 = getelementptr i16, i16* %272, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !98
  %279 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %279, align 2, !alias.scope !101, !noalias !98
  %280 = getelementptr i16, i16* %273, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %281, align 2, !alias.scope !101, !noalias !98
  %282 = or i64 %248, 48
  %283 = getelementptr i16, i16* %197, i64 %282
  %284 = getelementptr i16, i16* %224, i64 %282
  %285 = bitcast i16* %283 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !98
  %287 = getelementptr i16, i16* %283, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !98
  %290 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %290, align 2, !alias.scope !101, !noalias !98
  %291 = getelementptr i16, i16* %284, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %292, align 2, !alias.scope !101, !noalias !98
  %293 = add i64 %248, 64
  %294 = add i64 %249, -4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %247, !llvm.loop !103

296:                                              ; preds = %247, %235
  %297 = phi i64 [ 0, %235 ], [ %293, %247 ]
  %298 = icmp eq i64 %243, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %296, %299
  %300 = phi i64 [ %312, %299 ], [ %297, %296 ]
  %301 = phi i64 [ %313, %299 ], [ %243, %296 ]
  %302 = getelementptr i16, i16* %197, i64 %300
  %303 = getelementptr i16, i16* %224, i64 %300
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !98
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !98
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !101, !noalias !98
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !101, !noalias !98
  %312 = add i64 %300, 16
  %313 = add i64 %301, -1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %299, !llvm.loop !104

315:                                              ; preds = %299, %296
  %316 = icmp eq i64 %226, %236
  br i1 %316, label %370, label %317

317:                                              ; preds = %315, %228, %223
  %318 = phi i64 [ %225, %228 ], [ %225, %223 ], [ %237, %315 ]
  %319 = phi i16* [ %197, %228 ], [ %197, %223 ], [ %238, %315 ]
  %320 = phi i16* [ %224, %228 ], [ %224, %223 ], [ %239, %315 ]
  %321 = add i64 %318, -1
  %322 = and i64 %318, 7
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %335, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %330, %324 ], [ %318, %317 ]
  %326 = phi i16* [ %332, %324 ], [ %319, %317 ]
  %327 = phi i16* [ %331, %324 ], [ %320, %317 ]
  %328 = phi i64 [ %333, %324 ], [ %322, %317 ]
  %329 = load i16, i16* %326, align 2
  store i16 %329, i16* %327, align 2
  %330 = add i64 %325, -1
  %331 = getelementptr inbounds i16, i16* %327, i64 1
  %332 = getelementptr inbounds i16, i16* %326, i64 1
  %333 = add i64 %328, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %324, !llvm.loop !105

335:                                              ; preds = %324, %317
  %336 = phi i64 [ %318, %317 ], [ %330, %324 ]
  %337 = phi i16* [ %319, %317 ], [ %332, %324 ]
  %338 = phi i16* [ %320, %317 ], [ %331, %324 ]
  %339 = icmp ult i64 %321, 7
  br i1 %339, label %370, label %340

340:                                              ; preds = %335, %340
  %341 = phi i64 [ %366, %340 ], [ %336, %335 ]
  %342 = phi i16* [ %368, %340 ], [ %337, %335 ]
  %343 = phi i16* [ %367, %340 ], [ %338, %335 ]
  %344 = load i16, i16* %342, align 2
  store i16 %344, i16* %343, align 2
  %345 = getelementptr inbounds i16, i16* %343, i64 1
  %346 = getelementptr inbounds i16, i16* %342, i64 1
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %343, i64 2
  %349 = getelementptr inbounds i16, i16* %342, i64 2
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %343, i64 3
  %352 = getelementptr inbounds i16, i16* %342, i64 3
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %343, i64 4
  %355 = getelementptr inbounds i16, i16* %342, i64 4
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %343, i64 5
  %358 = getelementptr inbounds i16, i16* %342, i64 5
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %343, i64 6
  %361 = getelementptr inbounds i16, i16* %342, i64 6
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %343, i64 7
  %364 = getelementptr inbounds i16, i16* %342, i64 7
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = add i64 %341, -8
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %342, i64 8
  %369 = icmp eq i64 %366, 0
  br i1 %369, label %370, label %340, !llvm.loop !106

370:                                              ; preds = %335, %340, %315, %192
  %371 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %0, i64 0, i32 2
  %372 = getelementptr inbounds %"struct.history::KeywordSearchTermVisit", %"struct.history::KeywordSearchTermVisit"* %1, i64 0, i32 2
  %373 = bitcast i32* %371 to i8*
  %374 = bitcast i32* %372 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %373, i8* align 8 %374, i64 16, i1 false)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history32NormalizedKeywordSearchTermVisitENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.91"*, %"struct.history::NormalizedKeywordSearchTermVisit"* dereferenceable(40)) local_unnamed_addr #9 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer.114", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"struct.std::__1::__split_buffer.114"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.114", %"struct.std::__1::__split_buffer.114"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.114", %"struct.std::__1::__split_buffer.114"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.114", %"struct.std::__1::__split_buffer.114"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer.114", %"struct.std::__1::__split_buffer.114"* %3, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.114", %"struct.std::__1::__split_buffer.114"* %3, i64 0, i32 3, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"** %11 to i64*
  %13 = bitcast %"struct.std::__1::__split_buffer.114"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  %14 = load i64, i64* %12, align 8
  %15 = bitcast %"class.std::__1::vector.91"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 40
  %19 = add nsw i64 %18, 1
  %20 = icmp ugt i64 %19, 461168601842738790
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::vector.91"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #20
  unreachable

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %16
  %28 = sdiv exact i64 %27, 40
  %29 = icmp ult i64 %28, 230584300921369395
  br i1 %29, label %32, label %30

30:                                               ; preds = %23
  store %"struct.history::NormalizedKeywordSearchTermVisit"* null, %"struct.history::NormalizedKeywordSearchTermVisit"** %9, align 8
  %31 = bitcast %"class.std::__1::allocator.96"** %10 to %"class.std::__1::__compressed_pair.93"**
  store %"class.std::__1::__compressed_pair.93"* %4, %"class.std::__1::__compressed_pair.93"** %31, align 8
  br label %38

32:                                               ; preds = %23
  %33 = shl nsw i64 %28, 1
  %34 = icmp ult i64 %33, %19
  %35 = select i1 %34, i64 %19, i64 %33
  store %"struct.history::NormalizedKeywordSearchTermVisit"* null, %"struct.history::NormalizedKeywordSearchTermVisit"** %9, align 8
  %36 = bitcast %"class.std::__1::allocator.96"** %10 to %"class.std::__1::__compressed_pair.93"**
  store %"class.std::__1::__compressed_pair.93"* %4, %"class.std::__1::__compressed_pair.93"** %36, align 8
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %32, %30
  %39 = phi i64 [ 461168601842738790, %30 ], [ %35, %32 ]
  %40 = mul i64 %39, 40
  %41 = tail call i8* @_Znwm(i64 %40) #19
  %42 = bitcast i8* %41 to %"struct.history::NormalizedKeywordSearchTermVisit"*
  br label %43

43:                                               ; preds = %32, %38
  %44 = phi i64 [ %39, %38 ], [ 0, %32 ]
  %45 = phi %"struct.history::NormalizedKeywordSearchTermVisit"* [ %42, %38 ], [ null, %32 ]
  store %"struct.history::NormalizedKeywordSearchTermVisit"* %45, %"struct.history::NormalizedKeywordSearchTermVisit"** %6, align 8
  %46 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %45, i64 %18
  store %"struct.history::NormalizedKeywordSearchTermVisit"* %46, %"struct.history::NormalizedKeywordSearchTermVisit"** %8, align 8
  store %"struct.history::NormalizedKeywordSearchTermVisit"* %46, %"struct.history::NormalizedKeywordSearchTermVisit"** %7, align 8
  %47 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %45, i64 %44
  store %"struct.history::NormalizedKeywordSearchTermVisit"* %47, %"struct.history::NormalizedKeywordSearchTermVisit"** %9, align 8
  %48 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %46 to i8*
  %54 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false) #18
  br label %232

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i16*, i16** %56, align 8
  %58 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %59, 11
  br i1 %60, label %61, label %66

61:                                               ; preds = %55
  %62 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %46 to i16*
  %63 = trunc i64 %59 to i8
  %64 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %46 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %64, i64 0, i32 1, i32 1
  store i8 %63, i8* %65, align 1
  br label %83

66:                                               ; preds = %55
  %67 = icmp ugt i64 %59, 9223372036854775791
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %46 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %69) #20
  unreachable

70:                                               ; preds = %66
  %71 = add nuw nsw i64 %59, 8
  %72 = and i64 %71, -8
  %73 = icmp slt i64 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  tail call void @abort() #20
  unreachable

75:                                               ; preds = %70
  %76 = shl i64 %72, 1
  %77 = tail call i8* @_Znwm(i64 %76) #19
  %78 = bitcast i8* %77 to i16*
  %79 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %46 to i8**
  store i8* %77, i8** %79, align 8
  %80 = or i64 %72, -9223372036854775808
  %81 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %45, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %45, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %59, i64* %82, align 8
  br label %83

83:                                               ; preds = %75, %61
  %84 = phi i16* [ %62, %61 ], [ %78, %75 ]
  %85 = add nuw nsw i64 %59, 1
  %86 = add i64 %59, 1
  %87 = icmp ult i64 %86, 16
  br i1 %87, label %177, label %88

88:                                               ; preds = %83
  %89 = add i64 %59, 1
  %90 = getelementptr i16, i16* %84, i64 %89
  %91 = getelementptr i16, i16* %57, i64 %89
  %92 = icmp ult i16* %84, %91
  %93 = icmp ult i16* %57, %90
  %94 = and i1 %92, %93
  br i1 %94, label %177, label %95

95:                                               ; preds = %88
  %96 = and i64 %86, -16
  %97 = sub i64 %85, %96
  %98 = getelementptr i16, i16* %57, i64 %96
  %99 = getelementptr i16, i16* %84, i64 %96
  %100 = add i64 %96, -16
  %101 = lshr exact i64 %100, 4
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 3
  %104 = icmp ult i64 %100, 48
  br i1 %104, label %156, label %105

105:                                              ; preds = %95
  %106 = sub nsw i64 %102, %103
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %153, %107 ]
  %109 = phi i64 [ %106, %105 ], [ %154, %107 ]
  %110 = getelementptr i16, i16* %57, i64 %108
  %111 = getelementptr i16, i16* %84, i64 %108
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !107
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !107
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !110, !noalias !107
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !110, !noalias !107
  %120 = or i64 %108, 16
  %121 = getelementptr i16, i16* %57, i64 %120
  %122 = getelementptr i16, i16* %84, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !107
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !107
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !110, !noalias !107
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !110, !noalias !107
  %131 = or i64 %108, 32
  %132 = getelementptr i16, i16* %57, i64 %131
  %133 = getelementptr i16, i16* %84, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !107
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !107
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !110, !noalias !107
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !110, !noalias !107
  %142 = or i64 %108, 48
  %143 = getelementptr i16, i16* %57, i64 %142
  %144 = getelementptr i16, i16* %84, i64 %142
  %145 = bitcast i16* %143 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !107
  %147 = getelementptr i16, i16* %143, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !107
  %150 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %150, align 2, !alias.scope !110, !noalias !107
  %151 = getelementptr i16, i16* %144, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %152, align 2, !alias.scope !110, !noalias !107
  %153 = add i64 %108, 64
  %154 = add i64 %109, -4
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %107, !llvm.loop !112

156:                                              ; preds = %107, %95
  %157 = phi i64 [ 0, %95 ], [ %153, %107 ]
  %158 = icmp eq i64 %103, 0
  br i1 %158, label %175, label %159

159:                                              ; preds = %156, %159
  %160 = phi i64 [ %172, %159 ], [ %157, %156 ]
  %161 = phi i64 [ %173, %159 ], [ %103, %156 ]
  %162 = getelementptr i16, i16* %57, i64 %160
  %163 = getelementptr i16, i16* %84, i64 %160
  %164 = bitcast i16* %162 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !107
  %166 = getelementptr i16, i16* %162, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !107
  %169 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %169, align 2, !alias.scope !110, !noalias !107
  %170 = getelementptr i16, i16* %163, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %171, align 2, !alias.scope !110, !noalias !107
  %172 = add i64 %160, 16
  %173 = add i64 %161, -1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %159, !llvm.loop !113

175:                                              ; preds = %159, %156
  %176 = icmp eq i64 %86, %96
  br i1 %176, label %230, label %177

177:                                              ; preds = %175, %88, %83
  %178 = phi i64 [ %85, %88 ], [ %85, %83 ], [ %97, %175 ]
  %179 = phi i16* [ %57, %88 ], [ %57, %83 ], [ %98, %175 ]
  %180 = phi i16* [ %84, %88 ], [ %84, %83 ], [ %99, %175 ]
  %181 = add i64 %178, -1
  %182 = and i64 %178, 7
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %195, label %184

184:                                              ; preds = %177, %184
  %185 = phi i64 [ %190, %184 ], [ %178, %177 ]
  %186 = phi i16* [ %192, %184 ], [ %179, %177 ]
  %187 = phi i16* [ %191, %184 ], [ %180, %177 ]
  %188 = phi i64 [ %193, %184 ], [ %182, %177 ]
  %189 = load i16, i16* %186, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %185, -1
  %191 = getelementptr inbounds i16, i16* %187, i64 1
  %192 = getelementptr inbounds i16, i16* %186, i64 1
  %193 = add i64 %188, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %184, !llvm.loop !114

195:                                              ; preds = %184, %177
  %196 = phi i64 [ %178, %177 ], [ %190, %184 ]
  %197 = phi i16* [ %179, %177 ], [ %192, %184 ]
  %198 = phi i16* [ %180, %177 ], [ %191, %184 ]
  %199 = icmp ult i64 %181, 7
  br i1 %199, label %230, label %200

200:                                              ; preds = %195, %200
  %201 = phi i64 [ %226, %200 ], [ %196, %195 ]
  %202 = phi i16* [ %228, %200 ], [ %197, %195 ]
  %203 = phi i16* [ %227, %200 ], [ %198, %195 ]
  %204 = load i16, i16* %202, align 2
  store i16 %204, i16* %203, align 2
  %205 = getelementptr inbounds i16, i16* %203, i64 1
  %206 = getelementptr inbounds i16, i16* %202, i64 1
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %203, i64 2
  %209 = getelementptr inbounds i16, i16* %202, i64 2
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %203, i64 3
  %212 = getelementptr inbounds i16, i16* %202, i64 3
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %203, i64 4
  %215 = getelementptr inbounds i16, i16* %202, i64 4
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %203, i64 5
  %218 = getelementptr inbounds i16, i16* %202, i64 5
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %203, i64 6
  %221 = getelementptr inbounds i16, i16* %202, i64 6
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = getelementptr inbounds i16, i16* %203, i64 7
  %224 = getelementptr inbounds i16, i16* %202, i64 7
  %225 = load i16, i16* %224, align 2
  store i16 %225, i16* %223, align 2
  %226 = add i64 %201, -8
  %227 = getelementptr inbounds i16, i16* %203, i64 8
  %228 = getelementptr inbounds i16, i16* %202, i64 8
  %229 = icmp eq i64 %226, 0
  br i1 %229, label %230, label %200, !llvm.loop !115

230:                                              ; preds = %195, %200, %175
  %231 = load %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"** %8, align 8
  br label %232

232:                                              ; preds = %230, %52
  %233 = phi %"struct.history::NormalizedKeywordSearchTermVisit"* [ %231, %230 ], [ %46, %52 ]
  %234 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %45, i64 %18, i32 1
  %235 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %1, i64 0, i32 1
  %236 = bitcast i32* %234 to i8*
  %237 = bitcast i32* %235 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %237, i64 16, i1 false) #18
  %238 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %233, i64 1
  store %"struct.history::NormalizedKeywordSearchTermVisit"* %238, %"struct.history::NormalizedKeywordSearchTermVisit"** %8, align 8
  call void @_ZNSt3__16vectorIN7history32NormalizedKeywordSearchTermVisitENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.91"* %0, %"struct.std::__1::__split_buffer.114"* nonnull dereferenceable(40) %3)
  %239 = load %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"** %7, align 8
  %240 = load %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"** %8, align 8
  %241 = icmp eq %"struct.history::NormalizedKeywordSearchTermVisit"* %240, %239
  br i1 %241, label %247, label %242

242:                                              ; preds = %232, %242
  %243 = phi %"struct.history::NormalizedKeywordSearchTermVisit"* [ %245, %242 ], [ %240, %232 ]
  %244 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %243, i64 -1
  store %"struct.history::NormalizedKeywordSearchTermVisit"* %244, %"struct.history::NormalizedKeywordSearchTermVisit"** %8, align 8
  call void @_ZN7history32NormalizedKeywordSearchTermVisitD1Ev(%"struct.history::NormalizedKeywordSearchTermVisit"* %244) #18
  %245 = load %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"** %8, align 8
  %246 = icmp eq %"struct.history::NormalizedKeywordSearchTermVisit"* %245, %239
  br i1 %246, label %247, label %242

247:                                              ; preds = %242, %232
  %248 = load %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"** %6, align 8
  %249 = icmp eq %"struct.history::NormalizedKeywordSearchTermVisit"* %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %247
  %251 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %248 to i8*
  call void @_ZdlPv(i8* %251) #19
  br label %252

252:                                              ; preds = %247, %250
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history32NormalizedKeywordSearchTermVisitENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.91"*, %"struct.std::__1::__split_buffer.114"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 1
  %6 = load %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.114", %"struct.std::__1::__split_buffer.114"* %1, i64 0, i32 1
  %8 = icmp eq %"struct.history::NormalizedKeywordSearchTermVisit"* %6, %4
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = ptrtoint %"struct.history::NormalizedKeywordSearchTermVisit"* %4 to i64
  %11 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"** %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.91"* %0 to i64*
  br label %217

14:                                               ; preds = %2
  %15 = load %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"** %7, align 8
  br label %16

16:                                               ; preds = %204, %14
  %17 = phi %"struct.history::NormalizedKeywordSearchTermVisit"* [ %210, %204 ], [ %15, %14 ]
  %18 = phi %"struct.history::NormalizedKeywordSearchTermVisit"* [ %20, %204 ], [ %6, %14 ]
  %19 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %17, i64 -1
  %20 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %18, i64 -1
  %21 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %16
  %26 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %19 to i8*
  %27 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #18
  br label %204

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i16*, i16** %29, align 8
  %31 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %18, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %32, 11
  br i1 %33, label %34, label %39

34:                                               ; preds = %28
  %35 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %19 to i16*
  %36 = trunc i64 %32 to i8
  %37 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %19 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  store i8 %36, i8* %38, align 1
  br label %56

39:                                               ; preds = %28
  %40 = icmp ugt i64 %32, 9223372036854775791
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %19 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %42) #20
  unreachable

43:                                               ; preds = %39
  %44 = add nuw nsw i64 %32, 8
  %45 = and i64 %44, -8
  %46 = icmp slt i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %43
  tail call void @abort() #20
  unreachable

48:                                               ; preds = %43
  %49 = shl i64 %45, 1
  %50 = tail call i8* @_Znwm(i64 %49) #19
  %51 = bitcast i8* %50 to i16*
  %52 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"* %19 to i8**
  store i8* %50, i8** %52, align 8
  %53 = or i64 %45, -9223372036854775808
  %54 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %17, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %17, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %32, i64* %55, align 8
  br label %56

56:                                               ; preds = %48, %34
  %57 = phi i16* [ %35, %34 ], [ %51, %48 ]
  %58 = add nuw nsw i64 %32, 1
  %59 = add i64 %32, 1
  %60 = icmp ult i64 %59, 16
  br i1 %60, label %151, label %61

61:                                               ; preds = %56
  %62 = getelementptr i16, i16* %57, i64 1
  %63 = getelementptr i16, i16* %62, i64 %32
  %64 = getelementptr i16, i16* %30, i64 1
  %65 = getelementptr i16, i16* %64, i64 %32
  %66 = icmp ult i16* %57, %65
  %67 = icmp ult i16* %30, %63
  %68 = and i1 %66, %67
  br i1 %68, label %151, label %69

69:                                               ; preds = %61
  %70 = and i64 %59, -16
  %71 = sub i64 %58, %70
  %72 = getelementptr i16, i16* %30, i64 %70
  %73 = getelementptr i16, i16* %57, i64 %70
  %74 = add i64 %70, -16
  %75 = lshr exact i64 %74, 4
  %76 = add nuw nsw i64 %75, 1
  %77 = and i64 %76, 3
  %78 = icmp ult i64 %74, 48
  br i1 %78, label %130, label %79

79:                                               ; preds = %69
  %80 = sub nsw i64 %76, %77
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i64 [ 0, %79 ], [ %127, %81 ]
  %83 = phi i64 [ %80, %79 ], [ %128, %81 ]
  %84 = getelementptr i16, i16* %30, i64 %82
  %85 = getelementptr i16, i16* %57, i64 %82
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !116
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !116
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !119, !noalias !116
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !119, !noalias !116
  %94 = or i64 %82, 16
  %95 = getelementptr i16, i16* %30, i64 %94
  %96 = getelementptr i16, i16* %57, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !116
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !116
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !119, !noalias !116
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !119, !noalias !116
  %105 = or i64 %82, 32
  %106 = getelementptr i16, i16* %30, i64 %105
  %107 = getelementptr i16, i16* %57, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !116
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !116
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !119, !noalias !116
  %114 = getelementptr i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !119, !noalias !116
  %116 = or i64 %82, 48
  %117 = getelementptr i16, i16* %30, i64 %116
  %118 = getelementptr i16, i16* %57, i64 %116
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !116
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !116
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !119, !noalias !116
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !119, !noalias !116
  %127 = add i64 %82, 64
  %128 = add i64 %83, -4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %81, !llvm.loop !121

130:                                              ; preds = %81, %69
  %131 = phi i64 [ 0, %69 ], [ %127, %81 ]
  %132 = icmp eq i64 %77, 0
  br i1 %132, label %149, label %133

133:                                              ; preds = %130, %133
  %134 = phi i64 [ %146, %133 ], [ %131, %130 ]
  %135 = phi i64 [ %147, %133 ], [ %77, %130 ]
  %136 = getelementptr i16, i16* %30, i64 %134
  %137 = getelementptr i16, i16* %57, i64 %134
  %138 = bitcast i16* %136 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !116
  %140 = getelementptr i16, i16* %136, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !116
  %143 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %143, align 2, !alias.scope !119, !noalias !116
  %144 = getelementptr i16, i16* %137, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %145, align 2, !alias.scope !119, !noalias !116
  %146 = add i64 %134, 16
  %147 = add i64 %135, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %133, !llvm.loop !122

149:                                              ; preds = %133, %130
  %150 = icmp eq i64 %59, %70
  br i1 %150, label %204, label %151

151:                                              ; preds = %149, %61, %56
  %152 = phi i64 [ %58, %61 ], [ %58, %56 ], [ %71, %149 ]
  %153 = phi i16* [ %30, %61 ], [ %30, %56 ], [ %72, %149 ]
  %154 = phi i16* [ %57, %61 ], [ %57, %56 ], [ %73, %149 ]
  %155 = add i64 %152, -1
  %156 = and i64 %152, 7
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %169, label %158

158:                                              ; preds = %151, %158
  %159 = phi i64 [ %164, %158 ], [ %152, %151 ]
  %160 = phi i16* [ %166, %158 ], [ %153, %151 ]
  %161 = phi i16* [ %165, %158 ], [ %154, %151 ]
  %162 = phi i64 [ %167, %158 ], [ %156, %151 ]
  %163 = load i16, i16* %160, align 2
  store i16 %163, i16* %161, align 2
  %164 = add i64 %159, -1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = getelementptr inbounds i16, i16* %160, i64 1
  %167 = add i64 %162, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %158, !llvm.loop !123

169:                                              ; preds = %158, %151
  %170 = phi i64 [ %152, %151 ], [ %164, %158 ]
  %171 = phi i16* [ %153, %151 ], [ %166, %158 ]
  %172 = phi i16* [ %154, %151 ], [ %165, %158 ]
  %173 = icmp ult i64 %155, 7
  br i1 %173, label %204, label %174

174:                                              ; preds = %169, %174
  %175 = phi i64 [ %200, %174 ], [ %170, %169 ]
  %176 = phi i16* [ %202, %174 ], [ %171, %169 ]
  %177 = phi i16* [ %201, %174 ], [ %172, %169 ]
  %178 = load i16, i16* %176, align 2
  store i16 %178, i16* %177, align 2
  %179 = getelementptr inbounds i16, i16* %177, i64 1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %177, i64 2
  %183 = getelementptr inbounds i16, i16* %176, i64 2
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %177, i64 3
  %186 = getelementptr inbounds i16, i16* %176, i64 3
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %177, i64 4
  %189 = getelementptr inbounds i16, i16* %176, i64 4
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %177, i64 5
  %192 = getelementptr inbounds i16, i16* %176, i64 5
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %177, i64 6
  %195 = getelementptr inbounds i16, i16* %176, i64 6
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %177, i64 7
  %198 = getelementptr inbounds i16, i16* %176, i64 7
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = add i64 %175, -8
  %201 = getelementptr inbounds i16, i16* %177, i64 8
  %202 = getelementptr inbounds i16, i16* %176, i64 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %174, !llvm.loop !124

204:                                              ; preds = %169, %174, %149, %25
  %205 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %17, i64 -1, i32 1
  %206 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %18, i64 -1, i32 1
  %207 = bitcast i32* %205 to i8*
  %208 = bitcast i32* %206 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %207, i8* align 8 %208, i64 16, i1 false) #18
  %209 = load %"struct.history::NormalizedKeywordSearchTermVisit"*, %"struct.history::NormalizedKeywordSearchTermVisit"** %7, align 8
  %210 = getelementptr inbounds %"struct.history::NormalizedKeywordSearchTermVisit", %"struct.history::NormalizedKeywordSearchTermVisit"* %209, i64 -1
  store %"struct.history::NormalizedKeywordSearchTermVisit"* %210, %"struct.history::NormalizedKeywordSearchTermVisit"** %7, align 8
  %211 = icmp eq %"struct.history::NormalizedKeywordSearchTermVisit"* %20, %4
  br i1 %211, label %212, label %16

212:                                              ; preds = %204
  %213 = ptrtoint %"struct.history::NormalizedKeywordSearchTermVisit"* %210 to i64
  %214 = bitcast %"class.std::__1::vector.91"* %0 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"** %7 to i64*
  br label %217

217:                                              ; preds = %9, %212
  %218 = phi i64* [ %11, %9 ], [ %216, %212 ]
  %219 = phi i64* [ %13, %9 ], [ %214, %212 ]
  %220 = phi i64 [ %12, %9 ], [ %213, %212 ]
  %221 = phi i64 [ %10, %9 ], [ %215, %212 ]
  store i64 %220, i64* %219, align 8
  store i64 %221, i64* %218, align 8
  %222 = getelementptr inbounds %"struct.std::__1::__split_buffer.114", %"struct.std::__1::__split_buffer.114"* %1, i64 0, i32 2
  %223 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"** %5 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"** %222 to i64*
  %226 = load i64, i64* %225, align 8
  store i64 %226, i64* %223, align 8
  store i64 %224, i64* %225, align 8
  %227 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %228 = getelementptr inbounds %"struct.std::__1::__split_buffer.114", %"struct.std::__1::__split_buffer.114"* %1, i64 0, i32 3, i32 0, i32 0
  %229 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"** %227 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"struct.history::NormalizedKeywordSearchTermVisit"** %228 to i64*
  %232 = load i64, i64* %231, align 8
  store i64 %232, i64* %229, align 8
  store i64 %230, i64* %231, align 8
  %233 = load i64, i64* %218, align 8
  %234 = bitcast %"struct.std::__1::__split_buffer.114"* %1 to i64*
  store i64 %233, i64* %234, align 8
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #17

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { argmemonly nounwind }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone }
attributes #16 = { nofree nounwind readonly }
attributes #17 = { nounwind readnone speculatable }
attributes #18 = { nounwind }
attributes #19 = { builtin nounwind }
attributes #20 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!12 = distinct !{!12, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!13 = distinct !{!13, !14, !"_ZNK4GURL4hostEv: argument 0"}
!14 = distinct !{!14, !"_ZNK4GURL4hostEv"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!17 = distinct !{!17, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!18 = distinct !{!18, !19, !"_ZNK4GURL4hostEv: argument 0"}
!19 = distinct !{!19, !"_ZNK4GURL4hostEv"}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.isvectorized", i32 1}
!27 = distinct !{!27, !28}
!28 = !{!"llvm.loop.unroll.disable"}
!29 = distinct !{!29, !28}
!30 = distinct !{!30, !26}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !26}
!37 = distinct !{!37, !28}
!38 = distinct !{!38, !28}
!39 = distinct !{!39, !26}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !26}
!46 = distinct !{!46, !28}
!47 = distinct !{!47, !28}
!48 = distinct !{!48, !26}
!49 = !{!50}
!50 = distinct !{!50, !51}
!51 = distinct !{!51, !"LVerDomain"}
!52 = !{!53}
!53 = distinct !{!53, !51}
!54 = distinct !{!54, !26}
!55 = distinct !{!55, !28}
!56 = distinct !{!56, !28}
!57 = distinct !{!57, !26}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !26}
!64 = distinct !{!64, !28}
!65 = distinct !{!65, !28}
!66 = distinct !{!66, !26}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !26}
!73 = distinct !{!73, !28}
!74 = distinct !{!74, !28}
!75 = distinct !{!75, !26}
!76 = distinct !{!76, !26}
!77 = distinct !{!77, !28}
!78 = distinct !{!78, !79, !26}
!79 = !{!"llvm.loop.unroll.runtime.disable"}
!80 = !{!81}
!81 = distinct !{!81, !82}
!82 = distinct !{!82, !"LVerDomain"}
!83 = !{!84}
!84 = distinct !{!84, !82}
!85 = distinct !{!85, !26}
!86 = distinct !{!86, !28}
!87 = distinct !{!87, !28}
!88 = distinct !{!88, !26}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !26}
!95 = distinct !{!95, !28}
!96 = distinct !{!96, !28}
!97 = distinct !{!97, !26}
!98 = !{!99}
!99 = distinct !{!99, !100}
!100 = distinct !{!100, !"LVerDomain"}
!101 = !{!102}
!102 = distinct !{!102, !100}
!103 = distinct !{!103, !26}
!104 = distinct !{!104, !28}
!105 = distinct !{!105, !28}
!106 = distinct !{!106, !26}
!107 = !{!108}
!108 = distinct !{!108, !109}
!109 = distinct !{!109, !"LVerDomain"}
!110 = !{!111}
!111 = distinct !{!111, !109}
!112 = distinct !{!112, !26}
!113 = distinct !{!113, !28}
!114 = distinct !{!114, !28}
!115 = distinct !{!115, !26}
!116 = !{!117}
!117 = distinct !{!117, !118}
!118 = distinct !{!118, !"LVerDomain"}
!119 = !{!120}
!120 = distinct !{!120, !118}
!121 = distinct !{!121, !26}
!122 = distinct !{!122, !28}
!123 = distinct !{!123, !28}
!124 = distinct !{!124, !26}
