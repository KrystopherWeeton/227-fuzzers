; ModuleID = '../../third_party/blink/renderer/modules/webdatabase/sql_transaction.cc'
source_filename = "../../third_party/blink/renderer/modules/webdatabase/sql_transaction.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.244" }
%"struct.std::__1::atomic.244" = type { %"struct.std::__1::__atomic_base.245" }
%"struct.std::__1::__atomic_base.245" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl.247" }
%"struct.std::__1::__cxx_atomic_impl.247" = type { %"struct.std::__1::__cxx_atomic_base_impl.248" }
%"struct.std::__1::__cxx_atomic_base_impl.248" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.177", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.120", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.100", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.114", [4 x i8] }>
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102", %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { float }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.123", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.51"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.185" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.176 }
%class.scoped_refptr.176 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.232" }
%"struct.std::__1::atomic.232" = type { %"struct.std::__1::__atomic_base.233" }
%"struct.std::__1::__atomic_base.233" = type { %"struct.std::__1::__atomic_base.234" }
%"struct.std::__1::__atomic_base.234" = type { %"struct.std::__1::__cxx_atomic_impl.235" }
%"struct.std::__1::__cxx_atomic_impl.235" = type { %"struct.std::__1::__cxx_atomic_base_impl.236" }
%"struct.std::__1::__cxx_atomic_base_impl.236" = type { i32 }
%"class.blink::SQLTransaction" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SQLTransactionStateMachine", %"class.blink::Member.190", %"class.blink::Member.327", %"class.blink::Member.329", %"class.blink::Member.331", %"class.blink::Member.335", i8, [7 x i8], %"class.std::__1::unique_ptr.290", %"class.blink::probe::AsyncTaskId", i8, [7 x i8] }>
%"class.blink::SQLTransactionStateMachine" = type { i32 (...)**, i32, i32 }
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::Database"* }
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::SQLTransactionBackend"* }
%"class.blink::SQLTransactionBackend" = type { %"class.blink::SQLTransactionStateMachine.263", %"class.blink::CrossThreadPersistent.264", %"class.blink::CrossThreadPersistent.266", %"class.blink::CrossThreadPersistent", %"class.blink::Member.305", %"class.std::__1::unique_ptr.290", i8, i8, i8, i8, i8, i8, i8, i8, %"class.WTF::Mutex", %"class.WTF::Deque.309", %"class.std::__1::unique_ptr.314" }
%"class.blink::SQLTransactionStateMachine.263" = type { i32 (...)**, i32, i32 }
%"class.blink::CrossThreadPersistent.264" = type { %"class.blink::PersistentBase.265" }
%"class.blink::PersistentBase.265" = type { %"class.blink::SQLTransaction"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.219" }
%"struct.std::__1::atomic.219" = type { %"struct.std::__1::__atomic_base.220" }
%"struct.std::__1::__atomic_base.220" = type { %"struct.std::__1::__cxx_atomic_impl.221" }
%"struct.std::__1::__cxx_atomic_impl.221" = type { %"struct.std::__1::__cxx_atomic_base_impl.222" }
%"struct.std::__1::__cxx_atomic_base_impl.222" = type { %"class.blink::PersistentNode"* }
%"class.blink::CrossThreadPersistent.266" = type { %"class.blink::PersistentBase.267" }
%"class.blink::PersistentBase.267" = type { %"class.blink::SQLStatementBackend"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLStatementBackend" = type <{ %"class.blink::Member.270", %"class.WTF::String", %"class.WTF::Vector.285", i8, i8, [6 x i8], %"class.std::__1::unique_ptr.290", %"class.blink::Member.296", i32, [4 x i8] }>
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::SQLStatement"* }
%"class.blink::SQLStatement" = type { %"class.blink::Member.274", %"class.blink::Member.276", %"class.blink::Member.280", %"class.blink::probe::AsyncTaskId" }
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::SQLStatementBackend"* }
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::SQLStatement::OnSuccessCallback"* }
%"class.blink::SQLStatement::OnSuccessCallback" = type { i32 (...)** }
%"class.blink::Member.280" = type { %"class.blink::MemberBase.281" }
%"class.blink::MemberBase.281" = type { %"class.blink::SQLStatement::OnErrorCallback"* }
%"class.blink::SQLStatement::OnErrorCallback" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr.243 }
%class.scoped_refptr.243 = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector.285" = type { %"class.WTF::VectorBuffer.286" }
%"class.WTF::VectorBuffer.286" = type { %"class.WTF::VectorBufferBase.287" }
%"class.WTF::VectorBufferBase.287" = type { %"class.blink::SQLValue"*, i32, i32 }
%"class.blink::SQLValue" = type { i32, double, %"class.WTF::String" }
%"class.blink::Member.296" = type { %"class.blink::MemberBase.297" }
%"class.blink::MemberBase.297" = type { %"class.blink::SQLResultSet"* }
%"class.blink::SQLResultSet" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.298", i64, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::SQLResultSetRowList"* }
%"class.blink::SQLResultSetRowList" = type { %"class.blink::ScriptWrappable", %"class.WTF::Vector.300", %"class.WTF::Vector.285" }
%"class.WTF::Vector.300" = type { %"class.WTF::VectorBuffer.301" }
%"class.WTF::VectorBuffer.301" = type { %"class.WTF::VectorBufferBase.302" }
%"class.WTF::VectorBufferBase.302" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.218" }
%"class.blink::PersistentBase.218" = type { %"class.blink::Database"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::SQLTransactionWrapper"* }
%"class.blink::SQLTransactionWrapper" = type { i32 (...)** }
%"class.WTF::Deque.309" = type { %"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLStatementBackend>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLStatementBackend>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.312" }
%"class.WTF::VectorBuffer.312" = type { %"class.WTF::VectorBufferBase.313" }
%"class.WTF::VectorBufferBase.313" = type { %"class.blink::CrossThreadPersistent.266"*, i32, i32 }
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.blink::SQLiteTransaction"* }
%"class.blink::SQLiteTransaction" = type opaque
%"class.blink::Member.329" = type { %"class.blink::MemberBase.330" }
%"class.blink::MemberBase.330" = type { %"class.blink::SQLTransaction::OnProcessCallback"* }
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::SQLTransaction::OnSuccessCallback"* }
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::SQLTransaction::OnErrorCallback"* }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::SQLErrorData"* }
%"class.blink::SQLErrorData" = type { i32, %"class.WTF::String" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.284 }
%union.anon.284 = type { i64 }
%"class.blink::Database" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.192, %class.scoped_refptr.192, %"class.blink::Member.193", %class.scoped_refptr.241, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, %"struct.std::__1::atomic.177", i8, %"class.blink::DatabaseAuthorizer", %"class.blink::SQLiteDatabase", %"class.WTF::Deque.254", %"class.WTF::Mutex", i8, i8, %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%class.scoped_refptr.192 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.339", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.341", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.192 }
%"class.WTF::RefCounted.339" = type { %"class.base::RefCounted.340" }
%"class.base::RefCounted.340" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.341" = type { %"class.absl::optional_internal::optional_data.342" }
%"class.absl::optional_internal::optional_data.342" = type { %"class.absl::optional_internal::optional_data_base.343" }
%"class.absl::optional_internal::optional_data_base.343" = type { %"class.absl::optional_internal::optional_data_dtor_base.344" }
%"class.absl::optional_internal::optional_data_dtor_base.344" = type { i8, %union.anon.345 }
%union.anon.345 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::Member.193" = type { %"class.blink::MemberBase.194" }
%"class.blink::MemberBase.194" = type { %"class.blink::DatabaseContext"* }
%"class.blink::DatabaseContext" = type <{ %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::Member.204", i8, i8, [6 x i8] }>
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.197" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.201" }
%"class.WTF::HashTable.201" = type <{ %"class.blink::WeakMember.203"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.203" = type opaque
%"class.blink::Member.204" = type { %"class.blink::MemberBase.205" }
%"class.blink::MemberBase.205" = type { %"class.blink::DatabaseThread"* }
%"class.blink::DatabaseThread" = type <{ %"class.std::__1::unique_ptr.208", %"class.WTF::HashSet.214", %"class.std::__1::unique_ptr.223", %"class.blink::CrossThreadPersistent.229", %"class.base::WaitableEvent"*, %"class.WTF::Mutex", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::Thread"* }
%"class.blink::Thread" = type { i32 (...)** }
%"class.WTF::HashSet.214" = type { %"class.WTF::HashTable.215" }
%"class.WTF::HashTable.215" = type <{ %"class.blink::CrossThreadPersistent"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::SQLTransactionClient"* }
%"class.blink::SQLTransactionClient" = type { i8 }
%"class.blink::CrossThreadPersistent.229" = type { %"class.blink::PersistentBase.230" }
%"class.blink::PersistentBase.230" = type { %"class.blink::SQLTransactionCoordinator"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLTransactionCoordinator" = type opaque
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.231, i8, [7 x i8] }>
%class.scoped_refptr.231 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.232" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.237" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%class.scoped_refptr.241 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.242" }>
%"class.base::RefCountedThreadSafe.242" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::DatabaseAuthorizer" = type { i32, i8, %"class.WTF::String" }
%"class.blink::SQLiteDatabase" = type <{ %struct.sqlite3*, i32, i8, [3 x i8], %"class.WTF::Mutex", %"class.blink::DatabaseAuthorizer"*, i32, [4 x i8], %"class.WTF::Mutex", i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%struct.sqlite3 = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::Deque.254" = type { %"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLTransactionBackend>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLTransactionBackend>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.257" }
%"class.WTF::VectorBuffer.257" = type { %"class.WTF::VectorBufferBase.258" }
%"class.WTF::VectorBufferBase.258" = type { %"class.blink::CrossThreadPersistent.259"*, i32, i32 }
%"class.blink::CrossThreadPersistent.259" = type { %"class.blink::PersistentBase.260" }
%"class.blink::PersistentBase.260" = type { %"class.blink::SQLTransactionBackend"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.320 }
%class.scoped_refptr.320 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.321", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.321" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.322" }
%"struct.std::__1::atomic.322" = type { %"struct.std::__1::__atomic_base.323" }
%"struct.std::__1::__atomic_base.323" = type { %"struct.std::__1::__atomic_base.324" }
%"struct.std::__1::__atomic_base.324" = type { %"struct.std::__1::__cxx_atomic_impl.325" }
%"struct.std::__1::__cxx_atomic_impl.325" = type { %"struct.std::__1::__cxx_atomic_base_impl.326" }
%"struct.std::__1::__cxx_atomic_base_impl.326" = type { i8 }
%"class.blink::SQLTransaction::OnProcessCallback" = type { i32 (...)** }
%"class.blink::SQLTransaction::OnSuccessCallback" = type { i32 (...)** }
%"class.blink::SQLTransaction::OnErrorCallback" = type { i32 (...)** }
%"class.blink::SQLTransaction::OnProcessV8Impl" = type { %"class.blink::SQLTransaction::OnProcessCallback", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::V8SQLTransactionCallback"* }
%"class.blink::V8SQLTransactionCallback" = type { %"class.blink::CallbackInterfaceBase" }
%"class.blink::CallbackInterfaceBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", i8, %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.181", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.181" = type { %"class.blink::MemberBase.182" }
%"class.blink::MemberBase.182" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.183" }
%"class.blink::Persistent.183" = type { %"class.blink::PersistentBase.184" }
%"class.blink::PersistentBase.184" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::SQLTransaction::OnSuccessV8Impl" = type { %"class.blink::SQLTransaction::OnSuccessCallback", %"class.blink::Member.346" }
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::V8VoidCallback"* }
%"class.blink::V8VoidCallback" = type { %"class.blink::CallbackInterfaceBase" }
%"class.blink::SQLTransaction::OnErrorV8Impl" = type { %"class.blink::SQLTransaction::OnErrorCallback", %"class.blink::Member.348" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::V8SQLTransactionErrorCallback"* }
%"class.blink::V8SQLTransactionErrorCallback" = type { %"class.blink::CallbackInterfaceBase" }
%"class.blink::SQLError" = type { %"class.blink::ScriptWrappable", %"class.blink::SQLErrorData" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.402", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.411", %"class.blink::Member.413", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.422", %"class.blink::Member.547", %"class.blink::Member.549", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.350" }
%"class.blink::HeapHashMap.350" = type { %"class.WTF::HashMap.353" }
%"class.WTF::HashMap.353" = type { %"class.WTF::HashTable.354" }
%"class.WTF::HashTable.354" = type <{ %"struct.WTF::KeyValuePair.356"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.356" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.357" }
%"class.blink::Supplementable.357" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.358" }
%"class.blink::HeapHashMap.358" = type { %"class.WTF::HashMap.361" }
%"class.WTF::HashMap.361" = type { %"class.WTF::HashTable.362" }
%"class.WTF::HashTable.362" = type <{ %"struct.WTF::KeyValuePair.364"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.364" = type { i8*, %"class.blink::Member.1838" }
%"class.blink::Member.1838" = type { %"class.blink::MemberBase.1839" }
%"class.blink::MemberBase.1839" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1840" }
%"class.blink::Member.1840" = type { %"class.blink::MemberBase.1841" }
%"class.blink::MemberBase.1841" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.365, %"class.std::__1::unique_ptr.366", %"class.std::__1::unique_ptr.366", %"class.std::__1::unique_ptr.390", %"class.std::__1::unique_ptr.390", %"class.blink::Member.396", i32, [4 x i8], %"class.WTF::HashSet.398", i32, i32 }
%class.scoped_refptr.365 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.377", %"class.std::__1::map.386"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.341" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.369", %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::map.377" = type { %"class.std::__1::__tree.378" }
%"class.std::__1::__tree.378" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.379", %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::map.386" = type opaque
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.398" = type { %"class.WTF::HashTable.399" }
%"class.WTF::HashTable.399" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.406" }
%"class.WTF::Vector.406" = type { %"class.WTF::VectorBuffer.407" }
%"class.WTF::VectorBuffer.407" = type { %"class.WTF::VectorBufferBase.408" }
%"class.WTF::VectorBufferBase.408" = type { %"class.blink::Member.409"*, i32, i32 }
%"class.blink::Member.409" = type opaque
%"class.blink::Member.411" = type { %"class.blink::MemberBase.412" }
%"class.blink::MemberBase.412" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.415", i32, i32 }
%"class.blink::HeapHashMap.415" = type { %"class.WTF::HashMap.418" }
%"class.WTF::HashMap.418" = type { %"class.WTF::HashTable.419" }
%"class.WTF::HashTable.419" = type <{ %"struct.WTF::KeyValuePair.421"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.421" = type opaque
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.425" }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.428" }
%"class.WTF::Vector.428" = type { %"class.WTF::VectorBuffer.429" }
%"class.WTF::VectorBuffer.429" = type { %"class.WTF::VectorBufferBase.430" }
%"class.WTF::VectorBufferBase.430" = type { %"class.mojo::StructPtr.431"*, i32, i32 }
%"class.mojo::StructPtr.431" = type { %"class.std::__1::unique_ptr.432" }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.435", %"class.WTF::HashMap.442", %"class.WTF::HashMap.447", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.300", i32, %"class.mojo::StructPtr.452", %"class.WTF::Vector.300" }
%"class.mojo::StructPtr.435" = type { %"class.std::__1::unique_ptr.436" }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.442" = type { %"class.WTF::HashTable.443" }
%"class.WTF::HashTable.443" = type <{ %"struct.WTF::KeyValuePair.446"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.446" = type opaque
%"class.WTF::HashMap.447" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ %"struct.WTF::KeyValuePair.451"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.451" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.452" = type { %"class.std::__1::unique_ptr.453" }
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.300", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.538" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.467", i32 }>
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.472", %"class.absl::optional.477", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.491", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.513", %"class.std::__1::map.524", i64, %"class.base::OnceCallback.484", %"class.base::OnceCallback.533", i8, %class.scoped_refptr.482, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.534" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.470 }
%class.scoped_refptr.470 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.471", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.471" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.472" = type { %"class.absl::optional_internal::optional_data.473" }
%"class.absl::optional_internal::optional_data.473" = type { %"class.absl::optional_internal::optional_data_base.474" }
%"class.absl::optional_internal::optional_data_base.474" = type { %"class.absl::optional_internal::optional_data_dtor_base.475" }
%"class.absl::optional_internal::optional_data_dtor_base.475" = type { i8, %union.anon.476 }
%union.anon.476 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.477" = type { %"class.absl::optional_internal::optional_data.478" }
%"class.absl::optional_internal::optional_data.478" = type { %"class.absl::optional_internal::optional_data_base.479" }
%"class.absl::optional_internal::optional_data_base.479" = type { %"class.absl::optional_internal::optional_data_dtor_base.480" }
%"class.absl::optional_internal::optional_data_dtor_base.480" = type { i8, %union.anon.481 }
%union.anon.481 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.484" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.482, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.483 }
%class.scoped_refptr.483 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.489 }
%class.scoped_refptr.489 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.561", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.482, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.244", [4 x i8] }>
%"class.base::RefCountedThreadSafe.561" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.494", %class.scoped_refptr.495 }
%"class.base::RepeatingCallback.494" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.495 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.496", [4 x i8] }>
%"class.base::RefCountedThreadSafe.496" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.500", %"class.std::__1::unique_ptr.506", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.512" }
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.512" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.513" = type { %"class.std::__1::__tree.514" }
%"class.std::__1::__tree.514" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::map.524" = type { %"class.std::__1::__tree.525" }
%"class.std::__1::__tree.525" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.526", %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.base::OnceCallback.484" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.533" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.482 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.484" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.534" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.413", i8, [7 x i8], %"class.WTF::Vector.428", %"class.blink::HeapVector.553", i8, [7 x i8], %"class.WTF::HashSet.398", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.553" = type { %"class.WTF::Vector.556" }
%"class.WTF::Vector.556" = type { %"class.WTF::VectorBuffer.557" }
%"class.WTF::VectorBuffer.557" = type { %"class.WTF::VectorBufferBase.558" }
%"class.WTF::VectorBufferBase.558" = type { %"class.blink::Member.559"*, i32, i32 }
%"class.blink::Member.559" = type opaque
%"class.blink::probe::AsyncTask" = type { %"class.blink::ThreadDebugger"*, %"class.blink::probe::AsyncTaskId"*, i8, i8, %"class.blink::Persistent.562" }
%"class.blink::ThreadDebugger" = type opaque
%"class.blink::Persistent.562" = type { %"class.blink::PersistentBase.563" }
%"class.blink::PersistentBase.563" = type { %"class.blink::AdTracker"*, %"class.blink::PersistentNodePtr" }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.566", %"class.WTF::Vector.568", i32, [4 x i8], %"class.blink::HeapHashMap.573", i32, i8, [3 x i8] }>
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.752", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.760", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.774", %"class.blink::FrameLoader", %"class.blink::Member.801", %"class.blink::Member.803", %"class.blink::Member.832", %"class.blink::Member.834", %"class.blink::Member.836", %"class.blink::Member.838", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.840", %class.scoped_refptr.1060, %"class.blink::Member.1061", %"class.blink::Member.1063", %"class.blink::Member.1065", %"class.blink::Member.1067", %"class.blink::Member.1069", %"class.blink::Member.1071", %"class.blink::Member.1073", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1077", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1083", %"class.std::__1::unique_ptr.1084", %"class.absl::optional.739", i32, [4 x i8], %"class.std::__1::unique_ptr.1090", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1098", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1103", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1108", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1111", %"class.blink::Member.1113", %"class.blink::Member.1115", %"class.blink::Member.1117", %"class.mojo::StructPtr.1120", %"class.blink::Member.1129", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1131", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.584", %"class.blink::Member.586", %"class.blink::Member.588", i8, i32, i8, i32, %"class.blink::Member.722", %"class.blink::Member.611", %"class.blink::FrameLifecycle", %"class.blink::Member.582", %"class.blink::Member.582", %"class.blink::Member.582", %"class.blink::Member.582", %"class.blink::Member.582", %"class.blink::Member.582", %"class.blink::Member.566", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.732", i8, %"class.base::UnguessableToken", %"class.absl::optional.734", %"class.absl::optional.739", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.582", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.582", %"class.blink::Member.611", %"class.blink::Member.613", %"class.blink::Member.615", i8, %"class.WTF::Vector.617" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.604" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.592" }
%"class.blink::HeapVector.592" = type { %"class.WTF::Vector.595" }
%"class.WTF::Vector.595" = type { %"class.WTF::VectorBuffer.596" }
%"class.WTF::VectorBuffer.596" = type { %"class.WTF::VectorBufferBase.597", [32 x i8] }
%"class.WTF::VectorBufferBase.597" = type { %"struct.std::__1::pair.598"*, i32, i32 }
%"struct.std::__1::pair.598" = type { %"class.WTF::AtomicString", %"class.blink::Member.599" }
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::HeapVector.601"* }
%"class.blink::HeapVector.601" = type opaque
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.WTF::Vector.607"* }
%"class.WTF::Vector.607" = type opaque
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.617" = type { %"class.WTF::VectorBuffer.618" }
%"class.WTF::VectorBuffer.618" = type { %"class.WTF::VectorBufferBase.619" }
%"class.WTF::VectorBufferBase.619" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.620", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.620" = type { %"class.base::StrongAlias.621" }
%"class.base::StrongAlias.621" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.714" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.622, %"class.std::__1::unique_ptr.467", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.482, i32 }>
%class.scoped_refptr.622 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.482, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.680", %"class.absl::optional.685", %"class.absl::optional.639", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.705", i8, [7 x i8], %class.scoped_refptr.482, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.496" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.484", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.482, %"class.std::__1::unique_ptr.623", %"class.absl::optional.633", %"struct.std::__1::atomic.177", i8, i8, i8, i8, i32, i32, %"class.absl::optional.639", %"class.std::__1::unique_ptr.644", i8, i64, %class.scoped_refptr.677, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.678", %"class.base::WeakPtrFactory.679" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.482, i8, %"class.mojo::ScopedHandleBase.626", %class.scoped_refptr.627, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.628", i8*, %"class.base::WeakPtrFactory.629" }
%"class.mojo::ScopedHandleBase.626" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.627 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.628" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.629" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.633" = type { %"class.absl::optional_internal::optional_data.634" }
%"class.absl::optional_internal::optional_data.634" = type { %"class.absl::optional_internal::optional_data_base.635" }
%"class.absl::optional_internal::optional_data_base.635" = type { %"class.absl::optional_internal::optional_data_dtor_base.636" }
%"class.absl::optional_internal::optional_data_dtor_base.636" = type { i8, %union.anon.637 }
%union.anon.637 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.638", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.638" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.647", i8, i64, %class.scoped_refptr.648, %class.scoped_refptr.673 }
%"class.base::RepeatingCallback.647" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.648 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.649", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.651", %"class.std::__1::map.662", i8, [7 x i8] }>
%"class.base::RefCounted.649" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.650 }
%class.scoped_refptr.650 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.651" = type { %"class.std::__1::__tree.652" }
%"class.std::__1::__tree.652" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.653", %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::map.662" = type { %"class.std::__1::__tree.663" }
%"class.std::__1::__tree.663" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.664", %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%class.scoped_refptr.673 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.677 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.678" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.679" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.680" = type { %"class.absl::optional_internal::optional_data.681" }
%"class.absl::optional_internal::optional_data.681" = type { %"class.absl::optional_internal::optional_data_base.682" }
%"class.absl::optional_internal::optional_data_base.682" = type { %"class.absl::optional_internal::optional_data_dtor_base.683" }
%"class.absl::optional_internal::optional_data_dtor_base.683" = type { i8, %union.anon.684 }
%union.anon.684 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.685" = type { %"class.absl::optional_internal::optional_data.686" }
%"class.absl::optional_internal::optional_data.686" = type { %"class.absl::optional_internal::optional_data_base.687" }
%"class.absl::optional_internal::optional_data_base.687" = type { %"class.absl::optional_internal::optional_data_dtor_base.688" }
%"class.absl::optional_internal::optional_data_dtor_base.688" = type { i8, [7 x i8], %union.anon.689 }
%union.anon.689 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.639" = type { %"class.absl::optional_internal::optional_data.640" }
%"class.absl::optional_internal::optional_data.640" = type { %"class.absl::optional_internal::optional_data_base.641" }
%"class.absl::optional_internal::optional_data_base.641" = type { %"class.absl::optional_internal::optional_data_dtor_base.642" }
%"class.absl::optional_internal::optional_data_dtor_base.642" = type { i8, %union.anon.643 }
%union.anon.643 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.690 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.690 = type { %"class.std::__1::map.693" }
%"class.std::__1::map.693" = type { %"class.std::__1::__tree.694" }
%"class.std::__1::__tree.694" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.695", %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.704"*, i64 }
%"class.std::__1::unique_ptr.704" = type opaque
%"class.std::__1::map.705" = type { %"class.std::__1::__tree.706" }
%"class.std::__1::__tree.706" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.707", %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.582", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.724" }
%"class.std::__1::vector.724" = type { %"class.std::__1::__vector_base.725" }
%"class.std::__1::__vector_base.725" = type { %"struct.std::__1::pair.726"*, %"struct.std::__1::pair.726"*, %"class.std::__1::__compressed_pair.727" }
%"struct.std::__1::pair.726" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"struct.std::__1::pair.726"* }
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.734" = type { %"class.absl::optional_internal::optional_data.735" }
%"class.absl::optional_internal::optional_data.735" = type { %"class.absl::optional_internal::optional_data_base.736" }
%"class.absl::optional_internal::optional_data_base.736" = type { %"class.absl::optional_internal::optional_data_dtor_base.737" }
%"class.absl::optional_internal::optional_data_dtor_base.737" = type { i8, %union.anon.738 }
%union.anon.738 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.744 }
%class.scoped_refptr.744 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.745" }
%"class.blink::HeapHashSet.745" = type { %"class.WTF::HashSet.748" }
%"class.WTF::HashSet.748" = type { %"class.WTF::HashTable.749" }
%"class.WTF::HashTable.749" = type <{ %"class.blink::WeakMember.751"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.751" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.752" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.753" }
%"class.blink::HeapHashMap.753" = type { %"class.WTF::HashMap.756" }
%"class.WTF::HashMap.756" = type { %"class.WTF::HashTable.757" }
%"class.WTF::HashTable.757" = type <{ %"struct.WTF::KeyValuePair.759"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.759" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.763", %"class.base::WeakPtrFactory.768" }
%"class.WTF::HashMap.763" = type { %"class.WTF::HashTable.764" }
%"class.WTF::HashTable.764" = type <{ %"struct.WTF::KeyValuePair.767"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.767" = type opaque
%"class.base::WeakPtrFactory.768" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.772" }
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1844", i64, %"class.std::__1::map.1845", i8*, i64, %"class.base::WeakPtrFactory.1854" }
%"class.base::RepeatingCallback.1844" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1845" = type { %"class.std::__1::__tree.1846" }
%"class.std::__1::__tree.1846" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1847", %"class.std::__1::__compressed_pair.1851" }
%"class.std::__1::__compressed_pair.1847" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"class.std::__1::__compressed_pair.1851" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.base::WeakPtrFactory.1854" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.774" = type { %"class.WTF::HashSet.777" }
%"class.WTF::HashSet.777" = type { %"class.WTF::HashTable.778" }
%"class.WTF::HashTable.778" = type <{ %"class.blink::WeakMember.780"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.780" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.566", %"class.blink::Member.781", %"class.blink::Member.783", %"class.std::__1::unique_ptr.785", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.797" }
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.788" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.243 }
%"class.WTF::HashSet.797" = type { %"class.WTF::HashTable.798" }
%"class.WTF::HashTable.798" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1546", %"class.blink::Member.566", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1551", i8, i32, %"class.blink::Color", %"class.absl::optional.1553", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1558", %"class.blink::Member.1560", %"class.blink::Member.1560", %"class.std::__1::unique_ptr.1563", i32, [4 x i8], %"class.WTF::HashSet.1566", %"class.blink::Member.1573", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1575", %"class.blink::HeapHashSet.1582", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1590", i8, %"class.blink::Member.1596", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1608", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1622", i8, %"class.std::__1::unique_ptr.1628", %"class.std::__1::unique_ptr.1745", %"class.WTF::Vector.1751", i32, %class.scoped_refptr.1756, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1757", %"class.blink::Member.1759", %"class.blink::Member.1761", %"class.blink::HeapHashSet.1763", %"class.blink::HeapHashSet.1770", %"class.std::__1::unique_ptr.1777", %"class.std::__1::unique_ptr.1784", %"class.WTF::Vector.1296" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1546" = type { %"class.WTF::HashTable.1547" }
%"class.WTF::HashTable.1547" = type <{ %class.scoped_refptr.1550*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1550 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1551" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1552", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.241, %"class.base::WeakPtrFactory.1327" }
%"class.base::WeakPtrFactory.1327" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1552" = type { %"class.blink::MemberBase.802" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1553" = type { %"class.absl::optional_internal::optional_data.1554" }
%"class.absl::optional_internal::optional_data.1554" = type { %"class.absl::optional_internal::optional_data_base.1555" }
%"class.absl::optional_internal::optional_data_base.1555" = type { %"class.absl::optional_internal::optional_data_dtor_base.1556" }
%"class.absl::optional_internal::optional_data_dtor_base.1556" = type { i8, %union.anon.1557 }
%union.anon.1557 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1558" = type { %"class.blink::MemberBase.1559" }
%"class.blink::MemberBase.1559" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1560" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::HeapHashSet.1562"* }
%"class.blink::HeapHashSet.1562" = type opaque
%"class.std::__1::unique_ptr.1563" = type { %"class.std::__1::__compressed_pair.1564" }
%"class.std::__1::__compressed_pair.1564" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"struct.std::__1::__compressed_pair_elem.1565" = type { %"class.WTF::HashSet.1566"* }
%"class.WTF::HashSet.1566" = type { %"class.WTF::HashTable.1567" }
%"class.WTF::HashTable.1567" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1575" = type { %"class.WTF::HashSet.1578" }
%"class.WTF::HashSet.1578" = type { %"class.WTF::HashTable.1579" }
%"class.WTF::HashTable.1579" = type <{ %"class.blink::Member.1581"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1581" = type opaque
%"class.blink::HeapHashSet.1582" = type { %"class.WTF::HashSet.1585" }
%"class.WTF::HashSet.1585" = type { %"class.WTF::HashTable.1586" }
%"class.WTF::HashTable.1586" = type <{ %"class.blink::Member.1588"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1588" = type { %"class.blink::MemberBase.1589" }
%"class.blink::MemberBase.1589" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1590" = type { %"class.std::__1::__compressed_pair.1591" }
%"class.std::__1::__compressed_pair.1591" = type { %"struct.std::__1::__compressed_pair_elem.1592" }
%"struct.std::__1::__compressed_pair_elem.1592" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1600", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1600" = type { %"class.WTF::HashTable.1601" }
%"class.WTF::HashTable.1601" = type <{ %"struct.WTF::KeyValuePair.1603"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1603" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1604", i32, i32 }
%"class.WTF::Vector.1604" = type { %"class.WTF::VectorBuffer.1605" }
%"class.WTF::VectorBuffer.1605" = type { %"class.WTF::VectorBufferBase.1606" }
%"class.WTF::VectorBufferBase.1606" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1608" = type { %"class.WTF::LinkedHashSet.1611" }
%"class.WTF::LinkedHashSet.1611" = type { %"class.WTF::HashMap.1612", %"class.WTF::VectorBackedLinkedList.1616" }
%"class.WTF::HashMap.1612" = type { %"class.WTF::HashTable.1613" }
%"class.WTF::HashTable.1613" = type <{ %"struct.WTF::KeyValuePair.1615"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1615" = type opaque
%"class.WTF::VectorBackedLinkedList.1616" = type { %"class.WTF::Vector.1617", i32, i32 }
%"class.WTF::Vector.1617" = type { %"class.WTF::VectorBuffer.1618" }
%"class.WTF::VectorBuffer.1618" = type { %"class.WTF::VectorBufferBase.1619" }
%"class.WTF::VectorBufferBase.1619" = type { %"class.WTF::VectorBackedLinkedListNode.1620"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1620" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1622" = type { %"class.std::__1::__compressed_pair.1623" }
%"class.std::__1::__compressed_pair.1623" = type { %"struct.std::__1::__compressed_pair_elem.1624" }
%"struct.std::__1::__compressed_pair_elem.1624" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1628" = type { %"class.std::__1::__compressed_pair.1629" }
%"class.std::__1::__compressed_pair.1629" = type { %"struct.std::__1::__compressed_pair_elem.1630" }
%"struct.std::__1::__compressed_pair_elem.1630" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1631, %class.scoped_refptr.1631, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1722", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1727", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1631 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1639" }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1634", i32, [4 x i8] }>
%"class.WTF::Vector.1634" = type { %"class.WTF::VectorBuffer.1635" }
%"class.WTF::VectorBuffer.1635" = type { %"class.WTF::VectorBufferBase.1636" }
%"class.WTF::VectorBufferBase.1636" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1639" = type { %"class.WTF::VectorBuffer.1640" }
%"class.WTF::VectorBuffer.1640" = type { %"class.WTF::VectorBufferBase.1641" }
%"class.WTF::VectorBufferBase.1641" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1645", %"class.std::__1::unique_ptr.1694", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1642, %class.scoped_refptr.1643, %class.scoped_refptr.1644 }
%class.scoped_refptr.1642 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1658", i8, i8, %class.scoped_refptr.1642, i32, i32 }
%"class.WTF::RefCounted.1658" = type { %"class.base::RefCounted.1659" }
%"class.base::RefCounted.1659" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1643 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1813" }
%"class.blink::PaintPropertyNode.1813" = type { %"class.WTF::RefCounted.1814", i8, i8, %class.scoped_refptr.1643, i32, i32 }
%"class.WTF::RefCounted.1814" = type { %"class.base::RefCounted.1815" }
%"class.base::RefCounted.1815" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1644 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1810" }
%"class.blink::PaintPropertyNode.1810" = type { %"class.WTF::RefCounted.1811", i8, i8, %class.scoped_refptr.1644, i32, i32 }
%"class.WTF::RefCounted.1811" = type { %"class.base::RefCounted.1812" }
%"class.base::RefCounted.1812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1645" = type { %"class.std::__1::__compressed_pair.1646" }
%"class.std::__1::__compressed_pair.1646" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"struct.std::__1::__compressed_pair_elem.1647" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1648", %"class.WTF::Vector.1653", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1648" = type { %"class.WTF::VectorBuffer.1649" }
%"class.WTF::VectorBuffer.1649" = type { %"class.WTF::VectorBufferBase.1650" }
%"class.WTF::VectorBufferBase.1650" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1653" = type { %"class.WTF::VectorBuffer.1654" }
%"class.WTF::VectorBuffer.1654" = type { %"class.WTF::VectorBufferBase.1655" }
%"class.WTF::VectorBufferBase.1655" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1673" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1666, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1667", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1660" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1660" = type { %"class.std::__1::__compressed_pair.1661" }
%"class.std::__1::__compressed_pair.1661" = type { %"struct.std::__1::__compressed_pair_elem.1662" }
%"struct.std::__1::__compressed_pair_elem.1662" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1666 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1795" = type { %"class.WTF::RefCounted.1796", i8, i8, %class.scoped_refptr.1666, i32, i32 }
%"class.WTF::RefCounted.1796" = type { %"class.base::RefCounted.1797" }
%"class.base::RefCounted.1797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1798" = type { %"class.absl::optional_internal::optional_data.1799" }
%"class.absl::optional_internal::optional_data.1799" = type { %"class.absl::optional_internal::optional_data_base.1800" }
%"class.absl::optional_internal::optional_data_base.1800" = type { %"class.absl::optional_internal::optional_data_dtor_base.1801" }
%"class.absl::optional_internal::optional_data_dtor_base.1801" = type { i8, %union.anon.1802 }
%union.anon.1802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1803", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1803" = type { %"class.std::__1::__vector_base.1804" }
%"class.std::__1::__vector_base.1804" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1805" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1805" = type { %"struct.std::__1::__compressed_pair_elem.1806" }
%"struct.std::__1::__compressed_pair_elem.1806" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1667" = type { %"class.std::__1::__compressed_pair.1668" }
%"class.std::__1::__compressed_pair.1668" = type { %"struct.std::__1::__compressed_pair_elem.1669" }
%"struct.std::__1::__compressed_pair_elem.1669" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1673" = type { %"class.std::__1::__compressed_pair.1674" }
%"class.std::__1::__compressed_pair.1674" = type { %"struct.std::__1::__compressed_pair_elem.1675" }
%"struct.std::__1::__compressed_pair_elem.1675" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1676", %"class.std::__1::unique_ptr.1682", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1676" = type { %"class.std::__1::__compressed_pair.1677" }
%"class.std::__1::__compressed_pair.1677" = type { %"struct.std::__1::__compressed_pair_elem.1678" }
%"struct.std::__1::__compressed_pair_elem.1678" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1682" = type { %"class.std::__1::__compressed_pair.1683" }
%"class.std::__1::__compressed_pair.1683" = type { %"struct.std::__1::__compressed_pair_elem.1684" }
%"struct.std::__1::__compressed_pair_elem.1684" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1697", %"class.absl::optional.1697" }
%"class.absl::optional.1697" = type { %"class.absl::optional_internal::optional_data.1698" }
%"class.absl::optional_internal::optional_data.1698" = type { %"class.absl::optional_internal::optional_data_base.1699" }
%"class.absl::optional_internal::optional_data_base.1699" = type { %"class.absl::optional_internal::optional_data_dtor_base.1700" }
%"class.absl::optional_internal::optional_data_dtor_base.1700" = type { i8, [3 x i8], %union.anon.1701 }
%union.anon.1701 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1639"*, %"class.absl::optional.1707", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1707" = type { %"class.absl::optional_internal::optional_data.1708" }
%"class.absl::optional_internal::optional_data.1708" = type { %"class.absl::optional_internal::optional_data_base.1709" }
%"class.absl::optional_internal::optional_data_base.1709" = type { %"class.absl::optional_internal::optional_data_dtor_base.1710" }
%"class.absl::optional_internal::optional_data_dtor_base.1710" = type { i8, %union.anon.1711 }
%union.anon.1711 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1712", %"class.WTF::Vector.1717" }
%"class.WTF::Vector.1712" = type { %"class.WTF::VectorBuffer.1713" }
%"class.WTF::VectorBuffer.1713" = type { %"class.WTF::VectorBufferBase.1714", [128 x i8] }
%"class.WTF::VectorBufferBase.1714" = type { i32*, i32, i32 }
%"class.WTF::Vector.1717" = type { %"class.WTF::VectorBuffer.1718" }
%"class.WTF::VectorBuffer.1718" = type { %"class.WTF::VectorBufferBase.1719", [128 x i8] }
%"class.WTF::VectorBufferBase.1719" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1722" = type { %"class.WTF::VectorBuffer.1723" }
%"class.WTF::VectorBuffer.1723" = type { %"class.WTF::VectorBufferBase.1724" }
%"class.WTF::VectorBufferBase.1724" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1727" = type { %"class.WTF::HashTable.1728" }
%"class.WTF::HashTable.1728" = type <{ %"struct.WTF::KeyValuePair.1731"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1731" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1732", %"class.WTF::Vector.1737" }
%"class.WTF::HashMap.1732" = type { %"class.WTF::HashTable.1733" }
%"class.WTF::HashTable.1733" = type <{ %"struct.WTF::KeyValuePair.1736"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1736" = type opaque
%"class.WTF::Vector.1737" = type { %"class.WTF::VectorBuffer.1738" }
%"class.WTF::VectorBuffer.1738" = type { %"class.WTF::VectorBufferBase.1739" }
%"class.WTF::VectorBufferBase.1739" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1745" = type { %"class.std::__1::__compressed_pair.1746" }
%"class.std::__1::__compressed_pair.1746" = type { %"struct.std::__1::__compressed_pair_elem.1747" }
%"struct.std::__1::__compressed_pair_elem.1747" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1751" = type { %"class.WTF::VectorBuffer.1752" }
%"class.WTF::VectorBuffer.1752" = type { %"class.WTF::VectorBufferBase.1753" }
%"class.WTF::VectorBufferBase.1753" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1756 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1759" = type { %"class.blink::MemberBase.1760" }
%"class.blink::MemberBase.1760" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1761" = type { %"class.blink::MemberBase.1762" }
%"class.blink::MemberBase.1762" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1763" = type { %"class.WTF::HashSet.1766" }
%"class.WTF::HashSet.1766" = type { %"class.WTF::HashTable.1767" }
%"class.WTF::HashTable.1767" = type <{ %"class.blink::WeakMember.1769"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1769" = type opaque
%"class.blink::HeapHashSet.1770" = type { %"class.WTF::HashSet.1773" }
%"class.WTF::HashSet.1773" = type { %"class.WTF::HashTable.1774" }
%"class.WTF::HashTable.1774" = type <{ %"class.blink::WeakMember.1776"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1776" = type opaque
%"class.std::__1::unique_ptr.1777" = type { %"class.std::__1::__compressed_pair.1778" }
%"class.std::__1::__compressed_pair.1778" = type { %"struct.std::__1::__compressed_pair_elem.1779" }
%"struct.std::__1::__compressed_pair_elem.1779" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1780" }
%"class.base::time_internal::TimeBase.1780" = type { i64 }
%"class.std::__1::unique_ptr.1784" = type { %"class.std::__1::__compressed_pair.1785" }
%"class.std::__1::__compressed_pair.1785" = type { %"struct.std::__1::__compressed_pair_elem.1786" }
%"struct.std::__1::__compressed_pair_elem.1786" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1787", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1787" = type { %"class.absl::optional_internal::optional_data.1788" }
%"class.absl::optional_internal::optional_data.1788" = type { %"class.absl::optional_internal::optional_data_base.1789" }
%"class.absl::optional_internal::optional_data_base.1789" = type { %"class.absl::optional_internal::optional_data_dtor_base.1790" }
%"class.absl::optional_internal::optional_data_dtor_base.1790" = type { i8, %union.anon.1791 }
%union.anon.1791 = type { %"class.base::Time" }
%"class.WTF::Vector.1296" = type { %"class.WTF::VectorBuffer.1297" }
%"class.WTF::VectorBuffer.1297" = type { %"class.WTF::VectorBufferBase.1298" }
%"class.WTF::VectorBufferBase.1298" = type { %"class.base::OnceCallback.484"*, i32, i32 }
%"class.blink::Member.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.816" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.805", %"class.blink::Member.805" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.805", %"class.blink::Member.807", %"class.blink::Member.805", %"class.blink::Member.805", %"class.blink::Member.809" }
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1208", %"class.blink::Member.1210", %"class.blink::Member.807", %"class.blink::Member.1212", %"class.blink::Member.1212", %"class.blink::Member.1234", %"class.blink::Member.1236", %"class.blink::Member.1238", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1243", %"class.blink::HeapVector.1245" }
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1288", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1296", %"class.WTF::Vector.1296", i8, i32, %"class.blink::Member.1301", %"class.blink::Member.396", %"class.blink::Member.1303", %"class.blink::Member.1305", %"class.blink::Member.1307", %"class.blink::Member.1309", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1311", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1317", %"class.blink::Member.1319", %"class.blink::Member.1251", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1321", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.1227", %"class.blink::Member.803", %"class.blink::Member.1329", %"class.blink::Member.803", %"class.blink::Member.803", %"class.blink::Member.803", %"class.blink::UserActionElementSet", %"class.blink::Member.1338", double, double, i64, i64, %"class.blink::HeapHashSet.1340", %"class.blink::HeapHashSet.1347", i16, i8, %"class.blink::Member.1354", %"class.blink::Member.1356", %"class.blink::Member.1358", %"class.blink::Member.1360", %"class.blink::TextLinkColors", %"class.blink::Member.1362", i8, [7 x i8], %"class.blink::HeapHashMap.1364", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.803", %"class.WTF::Vector.1371", %"class.blink::Member.1376", %"class.blink::Member.1380", i8, %"class.blink::Member.803", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1382", %"class.blink::HeapVector.1384", %"class.std::__1::unique_ptr.1392", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1398", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1411", %"class.WTF::Vector.1413", i8, i8, %"class.std::__1::unique_ptr.1418", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1227", %"class.blink::HeapVector.1424", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1432", i8, i32, %"class.blink::Member.1434", %"class.blink::Member.1436", %"class.blink::Member.1438", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1440", %"class.WTF::HashMap.1442", %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", %"class.blink::Member.1453", %"class.blink::Member.1210", %"class.blink::Member.1210", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1455", i8, i32, %"class.blink::Member.1462", %"class.blink::Member.1464", i32, %"class.blink::Member.1466", %"class.blink::Member.1468", %"class.blink::Member.1470", %"class.std::__1::unique_ptr.1472", i64, %"class.std::__1::unique_ptr.1478", i32, i32, %"class.blink::Member.1484", %"class.blink::Member.1486", %"class.blink::Member.1488", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1490", %"class.WTF::Vector.568", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1492", %"class.blink::Member.1499", %"class.std::__1::unique_ptr.1501", %"class.blink::Member.1507", i8, i8, %"class.WTF::String", %"class.blink::Member.1509", i8, [7 x i8], %"class.blink::HeapHashMap.1511", %"class.blink::HeapObserverSet.1518", %"class.blink::Member.1526", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1528", i32, i8, i8, %"class.blink::WeakMember.1530", %"class.blink::Member.1531" }
%"class.blink::Supplementable.1288" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1289" }
%"class.blink::HeapHashMap.1289" = type { %"class.WTF::HashMap.1292" }
%"class.WTF::HashMap.1292" = type { %"class.WTF::HashTable.1293" }
%"class.WTF::HashTable.1293" = type <{ %"struct.WTF::KeyValuePair.1295"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1295" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1303" = type { %"class.blink::MemberBase.1304" }
%"class.blink::MemberBase.1304" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1305" = type { %"class.blink::MemberBase.1306" }
%"class.blink::MemberBase.1306" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1307" = type { %"class.blink::MemberBase.1308" }
%"class.blink::MemberBase.1308" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1309" = type { %"class.blink::MemberBase.1310" }
%"class.blink::MemberBase.1310" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1311" = type { %"class.std::__1::__compressed_pair.1312" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1319" = type { %"class.blink::MemberBase.1320" }
%"class.blink::MemberBase.1320" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1253", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1255, %"class.WTF::Vector.1256", %"class.WTF::Vector.1256", %"class.blink::Member.805", %"class.blink::Member.1261", %"class.blink::HeapHashSet.1265", %"class.blink::Member.1210", %"class.WTF::HashSet.1272", %"class.WTF::TextPosition", %"class.blink::Member.1276", %"class.blink::HeapVector.1278", %"class.blink::Member.1285" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1255 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1256" = type { %"class.WTF::VectorBuffer.1257" }
%"class.WTF::VectorBuffer.1257" = type { %"class.WTF::VectorBufferBase.1258" }
%"class.WTF::VectorBufferBase.1258" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.1262" }
%"class.blink::MemberBase.1262" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1263" }
%"class.blink::Member.1263" = type { %"class.blink::MemberBase.1264" }
%"class.blink::MemberBase.1264" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1265" = type { %"class.WTF::HashSet.1268" }
%"class.WTF::HashSet.1268" = type { %"class.WTF::HashTable.1269" }
%"class.WTF::HashTable.1269" = type <{ %"class.blink::WeakMember.1271"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1271" = type { %"class.blink::MemberBase.808" }
%"class.WTF::HashSet.1272" = type { %"class.WTF::HashTable.1273" }
%"class.WTF::HashTable.1273" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.1276" = type { %"class.blink::MemberBase.1277" }
%"class.blink::MemberBase.1277" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1278" = type { %"class.WTF::Vector.1281" }
%"class.WTF::Vector.1281" = type { %"class.WTF::VectorBuffer.1282" }
%"class.WTF::VectorBuffer.1282" = type { %"class.WTF::VectorBufferBase.1283" }
%"class.WTF::VectorBufferBase.1283" = type { %"class.blink::Member.1261"*, i32, i32 }
%"class.blink::Member.1285" = type { %"class.blink::MemberBase.1286" }
%"class.blink::MemberBase.1286" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1321" = type { %"class.WTF::VectorBuffer.1322" }
%"class.WTF::VectorBuffer.1322" = type { %"class.WTF::VectorBufferBase.1323" }
%"class.WTF::VectorBufferBase.1323" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1324 }
%class.scoped_refptr.1324 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1329" = type { %"class.blink::MemberBase.1330" }
%"class.blink::MemberBase.1330" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.1210", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.805", %"class.blink::Member.805", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1331" }
%"class.blink::HeapHashMap.1331" = type { %"class.WTF::HashMap.1334" }
%"class.WTF::HashMap.1334" = type { %"class.WTF::HashTable.1335" }
%"class.WTF::HashTable.1335" = type <{ %"struct.WTF::KeyValuePair.1337"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1337" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1340" = type { %"class.WTF::HashSet.1343" }
%"class.WTF::HashSet.1343" = type { %"class.WTF::HashTable.1344" }
%"class.WTF::HashTable.1344" = type <{ %"class.blink::WeakMember.1346"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1346" = type opaque
%"class.blink::HeapHashSet.1347" = type { %"class.WTF::HashSet.1350" }
%"class.WTF::HashSet.1350" = type { %"class.WTF::HashTable.1351" }
%"class.WTF::HashTable.1351" = type <{ %"class.blink::WeakMember.1353"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1353" = type opaque
%"class.blink::Member.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1358" = type { %"class.blink::MemberBase.1359" }
%"class.blink::MemberBase.1359" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.807", %"class.blink::HeapVector.1245" }
%"class.blink::Member.1360" = type { %"class.blink::MemberBase.1361" }
%"class.blink::MemberBase.1361" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1362" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1364" = type { %"class.WTF::HashMap.1367" }
%"class.WTF::HashMap.1367" = type { %"class.WTF::HashTable.1368" }
%"class.WTF::HashTable.1368" = type <{ %"struct.WTF::KeyValuePair.1370"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1370" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1376" = type { %"class.blink::MemberBase.1377" }
%"class.blink::MemberBase.1377" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1380" = type { %"class.blink::MemberBase.1381" }
%"class.blink::MemberBase.1381" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1382" = type { %"class.blink::MemberBase.1383" }
%"class.blink::MemberBase.1383" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1384" = type { %"class.WTF::Vector.1387" }
%"class.WTF::Vector.1387" = type { %"class.WTF::VectorBuffer.1388" }
%"class.WTF::VectorBuffer.1388" = type { %"class.WTF::VectorBufferBase.1389" }
%"class.WTF::VectorBufferBase.1389" = type { %"class.blink::Member.1390"*, i32, i32 }
%"class.blink::Member.1390" = type opaque
%"class.std::__1::unique_ptr.1392" = type { %"class.std::__1::__compressed_pair.1393" }
%"class.std::__1::__compressed_pair.1393" = type { %"struct.std::__1::__compressed_pair_elem.1394" }
%"struct.std::__1::__compressed_pair_elem.1394" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1398" = type { %"class.WTF::HashSet.1401" }
%"class.WTF::HashSet.1401" = type { %"class.WTF::HashTable.1402" }
%"class.WTF::HashTable.1402" = type <{ %"class.blink::WeakMember.1404"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1404" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1405", i32, [4 x i8] }>
%"class.WTF::Vector.1405" = type { %"class.WTF::VectorBuffer.1406" }
%"class.WTF::VectorBuffer.1406" = type { %"class.WTF::VectorBufferBase.1407" }
%"class.WTF::VectorBufferBase.1407" = type { %"struct.std::__1::pair.1408"*, i32, i32 }
%"struct.std::__1::pair.1408" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1413" = type { %"class.WTF::VectorBuffer.1414" }
%"class.WTF::VectorBuffer.1414" = type { %"class.WTF::VectorBufferBase.1415" }
%"class.WTF::VectorBufferBase.1415" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1418" = type { %"class.std::__1::__compressed_pair.1419" }
%"class.std::__1::__compressed_pair.1419" = type { %"struct.std::__1::__compressed_pair_elem.1420" }
%"struct.std::__1::__compressed_pair_elem.1420" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1227" = type { %"class.WTF::Vector.1230" }
%"class.WTF::Vector.1230" = type { %"class.WTF::VectorBuffer.1231" }
%"class.WTF::VectorBuffer.1231" = type { %"class.WTF::VectorBufferBase.1232" }
%"class.WTF::VectorBufferBase.1232" = type { %"class.blink::Member.803"*, i32, i32 }
%"class.blink::HeapVector.1424" = type { %"class.WTF::Vector.1427" }
%"class.WTF::Vector.1427" = type { %"class.WTF::VectorBuffer.1428" }
%"class.WTF::VectorBuffer.1428" = type { %"class.WTF::VectorBufferBase.1429" }
%"class.WTF::VectorBufferBase.1429" = type { %"class.blink::Member.1430"*, i32, i32 }
%"class.blink::Member.1430" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1210" }
%"class.blink::Member.1432" = type { %"class.blink::MemberBase.1433" }
%"class.blink::MemberBase.1433" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1434" = type { %"class.blink::MemberBase.1435" }
%"class.blink::MemberBase.1435" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1436" = type { %"class.blink::MemberBase.1437" }
%"class.blink::MemberBase.1437" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1440" = type { %"class.blink::MemberBase.1441" }
%"class.blink::MemberBase.1441" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1442" = type { %"class.WTF::HashTable.1443" }
%"class.WTF::HashTable.1443" = type <{ %"struct.WTF::KeyValuePair.1446"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1446" = type opaque
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1328", { i64, i64 } }
%"class.blink::WeakMember.1328" = type { %"class.blink::MemberBase.1211" }
%"class.blink::HeapHashSet.1455" = type { %"class.WTF::HashSet.1458" }
%"class.WTF::HashSet.1458" = type { %"class.WTF::HashTable.1459" }
%"class.WTF::HashTable.1459" = type <{ %"class.blink::Member.1461"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1461" = type opaque
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1464" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1466" = type { %"class.blink::MemberBase.1467" }
%"class.blink::MemberBase.1467" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1472" = type { %"class.std::__1::__compressed_pair.1473" }
%"class.std::__1::__compressed_pair.1473" = type { %"struct.std::__1::__compressed_pair_elem.1474" }
%"struct.std::__1::__compressed_pair_elem.1474" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1478" = type { %"class.std::__1::__compressed_pair.1479" }
%"class.std::__1::__compressed_pair.1479" = type { %"struct.std::__1::__compressed_pair_elem.1480" }
%"struct.std::__1::__compressed_pair_elem.1480" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1486" = type { %"class.blink::MemberBase.1487" }
%"class.blink::MemberBase.1487" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1488" = type { %"class.blink::MemberBase.1489" }
%"class.blink::MemberBase.1489" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1492" = type { %"class.WTF::HashMap.1495" }
%"class.WTF::HashMap.1495" = type { %"class.WTF::HashTable.1496" }
%"class.WTF::HashTable.1496" = type <{ %"struct.WTF::KeyValuePair.1498"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1498" = type opaque
%"class.blink::Member.1499" = type { %"class.blink::MemberBase.1500" }
%"class.blink::MemberBase.1500" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1501" = type { %"class.std::__1::__compressed_pair.1502" }
%"class.std::__1::__compressed_pair.1502" = type { %"struct.std::__1::__compressed_pair_elem.1503" }
%"struct.std::__1::__compressed_pair_elem.1503" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1507" = type { %"class.blink::MemberBase.1508" }
%"class.blink::MemberBase.1508" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1511" = type { %"class.WTF::HashMap.1514" }
%"class.WTF::HashMap.1514" = type { %"class.WTF::HashTable.1515" }
%"class.WTF::HashTable.1515" = type <{ %"struct.WTF::KeyValuePair.1517"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1517" = type opaque
%"class.blink::HeapObserverSet.1518" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1519" }
%"class.blink::HeapHashSet.1519" = type { %"class.WTF::HashSet.1522" }
%"class.WTF::HashSet.1522" = type { %"class.WTF::HashTable.1523" }
%"class.WTF::HashTable.1523" = type <{ %"class.blink::WeakMember.1525"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1525" = type opaque
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1210", %"class.blink::HeapHashSet.1535", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1542", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1535" = type { %"class.WTF::HashSet.1538" }
%"class.WTF::HashSet.1538" = type { %"class.WTF::HashTable.1539" }
%"class.WTF::HashTable.1539" = type <{ %"class.blink::Member.1541"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1541" = type opaque
%"class.blink::HeapTaskRunnerTimer.1542" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1543", { i64, i64 } }
%"class.blink::WeakMember.1543" = type { %"class.blink::MemberBase.1529" }
%"class.blink::WeakMember.1530" = type { %"class.blink::MemberBase.806" }
%"class.blink::MemberBase.806" = type { %"class.blink::Node"* }
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1216" }
%"class.blink::HeapHashMap.1216" = type { %"class.WTF::HashMap.1219" }
%"class.WTF::HashMap.1219" = type { %"class.WTF::HashTable.1220" }
%"class.WTF::HashTable.1220" = type <{ %"struct.WTF::KeyValuePair.1222"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1222" = type { %"class.WTF::AtomicString", %"class.blink::Member.1223" }
%"class.blink::Member.1223" = type { %"class.blink::MemberBase.1224" }
%"class.blink::MemberBase.1224" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.803", i32, %"class.blink::HeapVector.1227" }
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1236" = type { %"class.blink::MemberBase.1237" }
%"class.blink::MemberBase.1237" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1238" = type { %"class.blink::MemberBase.1239" }
%"class.blink::MemberBase.1239" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1240" }
%"class.blink::Member.1240" = type { %"class.blink::MemberBase.1241" }
%"class.blink::MemberBase.1241" = type { %"class.blink::HeapHashMap.1242"* }
%"class.blink::HeapHashMap.1242" = type opaque
%"class.blink::Member.1243" = type { %"class.blink::MemberBase.1244" }
%"class.blink::MemberBase.1244" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1245" = type { %"class.WTF::Vector.1248" }
%"class.WTF::Vector.1248" = type { %"class.WTF::VectorBuffer.1249" }
%"class.WTF::VectorBuffer.1249" = type { %"class.WTF::VectorBufferBase.1250" }
%"class.WTF::VectorBufferBase.1250" = type { %"class.blink::Member.1251"*, i32, i32 }
%"class.blink::Member.809" = type { %"class.blink::MemberBase.810" }
%"class.blink::MemberBase.810" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.805" = type { %"class.blink::MemberBase.806" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.813 }
%class.scoped_refptr.813 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.814", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.814" = type { %"class.base::RefCounted.815" }
%"class.base::RefCounted.815" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.816" = type { %"class.blink::MemberBase.817" }
%"class.blink::MemberBase.817" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.820", %"class.blink::Member.822", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.820" = type { %"class.WTF::SingleThreadedBitField.821" }
%"class.WTF::SingleThreadedBitField.821" = type { i32 }
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.824 }
%class.scoped_refptr.824 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.825", %"class.WTF::AtomicString", %"class.WTF::Vector.827" }
%"class.WTF::RefCounted.825" = type { %"class.base::RefCounted.826" }
%"class.base::RefCounted.826" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.827" = type { %"class.WTF::VectorBuffer.828" }
%"class.WTF::VectorBuffer.828" = type { %"class.WTF::VectorBufferBase.829", [32 x i8] }
%"class.WTF::VectorBufferBase.829" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.832" = type { %"class.blink::MemberBase.833" }
%"class.blink::MemberBase.833" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.851", %"class.blink::HeapListHashSet.862", %"class.blink::HeapListHashSet.873", %"class.blink::HeapListHashSet.884", %"class.blink::HeapListHashSet.895", %"class.blink::HeapListHashSet.906", %"class.blink::HeapListHashSet.917", %"class.blink::HeapListHashSet.928", %"class.blink::HeapListHashSet.939", %"class.blink::HeapListHashSet.950", %"class.blink::HeapListHashSet.961", %"class.blink::HeapListHashSet.972", %"class.blink::HeapListHashSet.983", %"class.blink::HeapListHashSet.994", %"class.blink::HeapListHashSet.1005", %"class.blink::HeapListHashSet.1016", %"class.blink::HeapListHashSet.1027", %"class.blink::HeapListHashSet.1038", %"class.blink::HeapListHashSet.1049" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.847", %"class.blink::Member.849", %"class.blink::Member.849", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.847" = type <{ %"class.blink::Member.849"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1063", %"class.blink::Member.849", %"class.blink::Member.849" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.851" = type { %"class.WTF::ListHashSet.base.861", [7 x i8] }
%"class.WTF::ListHashSet.base.861" = type <{ %"class.WTF::HashTable.856", %"class.blink::Member.858", %"class.blink::Member.858", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.856" = type <{ %"class.blink::Member.858"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::HeapListHashSetNode.860"* }
%"class.blink::HeapListHashSetNode.860" = type { %"class.blink::Member.1204", %"class.blink::Member.858", %"class.blink::Member.858" }
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.862" = type { %"class.WTF::ListHashSet.base.872", [7 x i8] }
%"class.WTF::ListHashSet.base.872" = type <{ %"class.WTF::HashTable.867", %"class.blink::Member.869", %"class.blink::Member.869", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.867" = type <{ %"class.blink::Member.869"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::HeapListHashSetNode.871"* }
%"class.blink::HeapListHashSetNode.871" = type { %"class.blink::Member.1200", %"class.blink::Member.869", %"class.blink::Member.869" }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.873" = type { %"class.WTF::ListHashSet.base.883", [7 x i8] }
%"class.WTF::ListHashSet.base.883" = type <{ %"class.WTF::HashTable.878", %"class.blink::Member.880", %"class.blink::Member.880", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.878" = type <{ %"class.blink::Member.880"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.880" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::HeapListHashSetNode.882"* }
%"class.blink::HeapListHashSetNode.882" = type { %"class.blink::Member.1196", %"class.blink::Member.880", %"class.blink::Member.880" }
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.884" = type { %"class.WTF::ListHashSet.base.894", [7 x i8] }
%"class.WTF::ListHashSet.base.894" = type <{ %"class.WTF::HashTable.889", %"class.blink::Member.891", %"class.blink::Member.891", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.889" = type <{ %"class.blink::Member.891"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.891" = type { %"class.blink::MemberBase.892" }
%"class.blink::MemberBase.892" = type { %"class.blink::HeapListHashSetNode.893"* }
%"class.blink::HeapListHashSetNode.893" = type { %"class.blink::Member.1192", %"class.blink::Member.891", %"class.blink::Member.891" }
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.895" = type { %"class.WTF::ListHashSet.base.905", [7 x i8] }
%"class.WTF::ListHashSet.base.905" = type <{ %"class.WTF::HashTable.900", %"class.blink::Member.902", %"class.blink::Member.902", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.900" = type <{ %"class.blink::Member.902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.902" = type { %"class.blink::MemberBase.903" }
%"class.blink::MemberBase.903" = type { %"class.blink::HeapListHashSetNode.904"* }
%"class.blink::HeapListHashSetNode.904" = type { %"class.blink::Member.1188", %"class.blink::Member.902", %"class.blink::Member.902" }
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.906" = type { %"class.WTF::ListHashSet.base.916", [7 x i8] }
%"class.WTF::ListHashSet.base.916" = type <{ %"class.WTF::HashTable.911", %"class.blink::Member.913", %"class.blink::Member.913", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.911" = type <{ %"class.blink::Member.913"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::HeapListHashSetNode.915"* }
%"class.blink::HeapListHashSetNode.915" = type { %"class.blink::Member.1184", %"class.blink::Member.913", %"class.blink::Member.913" }
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.1185" }
%"class.blink::MemberBase.1185" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.917" = type { %"class.WTF::ListHashSet.base.927", [7 x i8] }
%"class.WTF::ListHashSet.base.927" = type <{ %"class.WTF::HashTable.922", %"class.blink::Member.924", %"class.blink::Member.924", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.922" = type <{ %"class.blink::Member.924"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::HeapListHashSetNode.926"* }
%"class.blink::HeapListHashSetNode.926" = type { %"class.blink::Member.1180", %"class.blink::Member.924", %"class.blink::Member.924" }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.928" = type { %"class.WTF::ListHashSet.base.938", [7 x i8] }
%"class.WTF::ListHashSet.base.938" = type <{ %"class.WTF::HashTable.933", %"class.blink::Member.935", %"class.blink::Member.935", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.933" = type <{ %"class.blink::Member.935"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::HeapListHashSetNode.937"* }
%"class.blink::HeapListHashSetNode.937" = type { %"class.blink::Member.1176", %"class.blink::Member.935", %"class.blink::Member.935" }
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.939" = type { %"class.WTF::ListHashSet.base.949", [7 x i8] }
%"class.WTF::ListHashSet.base.949" = type <{ %"class.WTF::HashTable.944", %"class.blink::Member.946", %"class.blink::Member.946", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.944" = type <{ %"class.blink::Member.946"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::HeapListHashSetNode.948"* }
%"class.blink::HeapListHashSetNode.948" = type { %"class.blink::Member.1172", %"class.blink::Member.946", %"class.blink::Member.946" }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.950" = type { %"class.WTF::ListHashSet.base.960", [7 x i8] }
%"class.WTF::ListHashSet.base.960" = type <{ %"class.WTF::HashTable.955", %"class.blink::Member.957", %"class.blink::Member.957", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.955" = type <{ %"class.blink::Member.957"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::HeapListHashSetNode.959"* }
%"class.blink::HeapListHashSetNode.959" = type { %"class.blink::Member.1067", %"class.blink::Member.957", %"class.blink::Member.957" }
%"class.blink::HeapListHashSet.961" = type { %"class.WTF::ListHashSet.base.971", [7 x i8] }
%"class.WTF::ListHashSet.base.971" = type <{ %"class.WTF::HashTable.966", %"class.blink::Member.968", %"class.blink::Member.968", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.966" = type <{ %"class.blink::Member.968"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::HeapListHashSetNode.970"* }
%"class.blink::HeapListHashSetNode.970" = type { %"class.blink::Member.1166", %"class.blink::Member.968", %"class.blink::Member.968" }
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.972" = type { %"class.WTF::ListHashSet.base.982", [7 x i8] }
%"class.WTF::ListHashSet.base.982" = type <{ %"class.WTF::HashTable.977", %"class.blink::Member.979", %"class.blink::Member.979", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.977" = type <{ %"class.blink::Member.979"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::HeapListHashSetNode.981"* }
%"class.blink::HeapListHashSetNode.981" = type { %"class.blink::Member.1162", %"class.blink::Member.979", %"class.blink::Member.979" }
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.983" = type { %"class.WTF::ListHashSet.base.993", [7 x i8] }
%"class.WTF::ListHashSet.base.993" = type <{ %"class.WTF::HashTable.988", %"class.blink::Member.990", %"class.blink::Member.990", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.988" = type <{ %"class.blink::Member.990"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::HeapListHashSetNode.992"* }
%"class.blink::HeapListHashSetNode.992" = type { %"class.blink::Member.1158", %"class.blink::Member.990", %"class.blink::Member.990" }
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.994" = type { %"class.WTF::ListHashSet.base.1004", [7 x i8] }
%"class.WTF::ListHashSet.base.1004" = type <{ %"class.WTF::HashTable.999", %"class.blink::Member.1001", %"class.blink::Member.1001", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.999" = type <{ %"class.blink::Member.1001"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::HeapListHashSetNode.1003"* }
%"class.blink::HeapListHashSetNode.1003" = type { %"class.blink::Member.1154", %"class.blink::Member.1001", %"class.blink::Member.1001" }
%"class.blink::Member.1154" = type { %"class.blink::MemberBase.1155" }
%"class.blink::MemberBase.1155" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1005" = type { %"class.WTF::ListHashSet.base.1015", [7 x i8] }
%"class.WTF::ListHashSet.base.1015" = type <{ %"class.WTF::HashTable.1010", %"class.blink::Member.1012", %"class.blink::Member.1012", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1010" = type <{ %"class.blink::Member.1012"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::HeapListHashSetNode.1014"* }
%"class.blink::HeapListHashSetNode.1014" = type { %"class.blink::Member.1150", %"class.blink::Member.1012", %"class.blink::Member.1012" }
%"class.blink::Member.1150" = type { %"class.blink::MemberBase.1151" }
%"class.blink::MemberBase.1151" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1016" = type { %"class.WTF::ListHashSet.base.1026", [7 x i8] }
%"class.WTF::ListHashSet.base.1026" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode.1025"* }
%"class.blink::HeapListHashSetNode.1025" = type { %"class.blink::Member.1146", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1027" = type { %"class.WTF::ListHashSet.base.1037", [7 x i8] }
%"class.WTF::ListHashSet.base.1037" = type <{ %"class.WTF::HashTable.1032", %"class.blink::Member.1034", %"class.blink::Member.1034", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1032" = type <{ %"class.blink::Member.1034"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::HeapListHashSetNode.1036"* }
%"class.blink::HeapListHashSetNode.1036" = type { %"class.blink::Member.1142", %"class.blink::Member.1034", %"class.blink::Member.1034" }
%"class.blink::Member.1142" = type { %"class.blink::MemberBase.1143" }
%"class.blink::MemberBase.1143" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1038" = type { %"class.WTF::ListHashSet.base.1048", [7 x i8] }
%"class.WTF::ListHashSet.base.1048" = type <{ %"class.WTF::HashTable.1043", %"class.blink::Member.1045", %"class.blink::Member.1045", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1043" = type <{ %"class.blink::Member.1045"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::HeapListHashSetNode.1047"* }
%"class.blink::HeapListHashSetNode.1047" = type { %"class.blink::Member.1069", %"class.blink::Member.1045", %"class.blink::Member.1045" }
%"class.blink::HeapListHashSet.1049" = type { %"class.WTF::ListHashSet.base.1059", [7 x i8] }
%"class.WTF::ListHashSet.base.1059" = type <{ %"class.WTF::HashTable.1054", %"class.blink::Member.1056", %"class.blink::Member.1056", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1054" = type <{ %"class.blink::Member.1056"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::HeapListHashSetNode.1058"* }
%"class.blink::HeapListHashSetNode.1058" = type { %"class.blink::Member.1061", %"class.blink::Member.1056", %"class.blink::Member.1056" }
%class.scoped_refptr.1060 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1061" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::AdTracker"* }
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1075" }
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1857" }
%"class.mojo::Remote.1857" = type { %"class.mojo::internal::InterfacePtrState.1858" }
%"class.mojo::internal::InterfacePtrState.1858" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1859" }
%"class.std::__1::unique_ptr.1859" = type { %"class.std::__1::__compressed_pair.1860" }
%"class.std::__1::__compressed_pair.1860" = type { %"struct.std::__1::__compressed_pair_elem.1861" }
%"struct.std::__1::__compressed_pair_elem.1861" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1083" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.739" = type { %"class.absl::optional_internal::optional_data.740" }
%"class.absl::optional_internal::optional_data.740" = type { %"class.absl::optional_internal::optional_data_base.741" }
%"class.absl::optional_internal::optional_data_base.741" = type { %"class.absl::optional_internal::optional_data_dtor_base.742" }
%"class.absl::optional_internal::optional_data_dtor_base.742" = type { i8, %union.anon.743 }
%union.anon.743 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1096" }
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1867" }
%"class.mojo::AssociatedRemote.1867" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1868" }
%"class.mojo::internal::AssociatedInterfacePtrState.1868" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1869" }
%"class.std::__1::unique_ptr.1869" = type { %"class.std::__1::__compressed_pair.1870" }
%"class.std::__1::__compressed_pair.1870" = type { %"struct.std::__1::__compressed_pair_elem.1871" }
%"struct.std::__1::__compressed_pair_elem.1871" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1098" = type { %"class.blink::Member.1099" }
%"class.blink::Member.1099" = type { %"class.blink::MemberBase.1100" }
%"class.blink::MemberBase.1100" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1877" }
%"class.mojo::AssociatedRemote.1877" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1878" }
%"class.mojo::internal::AssociatedInterfacePtrState.1878" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1879" }
%"class.std::__1::unique_ptr.1879" = type { %"class.std::__1::__compressed_pair.1880" }
%"class.std::__1::__compressed_pair.1880" = type { %"struct.std::__1::__compressed_pair_elem.1881" }
%"struct.std::__1::__compressed_pair_elem.1881" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1101" }
%"class.blink::Member.1101" = type { %"class.blink::MemberBase.1102" }
%"class.blink::MemberBase.1102" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.566", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1887" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.467" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1887" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1103" = type { %"class.blink::Member.1104" }
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1890", %"class.blink::Member.566", %"class.mojo::AssociatedReceiver.1891" }
%"class.blink::ThreadState::PrefinalizerRegistration.1890" = type { i8 }
%"class.mojo::AssociatedReceiver.1891" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1892" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1892" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1106" }
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1895", %"class.blink::Member.566", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1895" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.622, %"class.std::__1::unique_ptr.467", %"class.base::WeakPtrFactory.1896" }
%"class.base::WeakPtrFactory.1896" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1108" = type { %"class.blink::Member.1109" }
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1899", %"class.blink::Member.566", %"class.mojo::AssociatedReceiver.1900" }
%"class.blink::ThreadState::PrefinalizerRegistration.1899" = type { i8 }
%"class.mojo::AssociatedReceiver.1900" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1901" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1901" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1113" = type { %"class.blink::MemberBase.1114" }
%"class.blink::MemberBase.1114" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::HeapHashMap.1119"* }
%"class.blink::HeapHashMap.1119" = type opaque
%"class.mojo::StructPtr.1120" = type { %"class.std::__1::unique_ptr.1121" }
%"class.std::__1::unique_ptr.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1124", %"class.mojo::InlinedStructPtr.1125" }
%"class.mojo::InlinedStructPtr.1124" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1125" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1131" = type { %"class.absl::optional_internal::optional_data.1132" }
%"class.absl::optional_internal::optional_data.1132" = type { %"class.absl::optional_internal::optional_data_base.1133" }
%"class.absl::optional_internal::optional_data_base.1133" = type { %"class.absl::optional_internal::optional_data_dtor_base.1134" }
%"class.absl::optional_internal::optional_data_dtor_base.1134" = type { i8, %union.anon.1135 }
%union.anon.1135 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.568" = type { %"class.WTF::VectorBuffer.569" }
%"class.WTF::VectorBuffer.569" = type { %"class.WTF::VectorBufferBase.570" }
%"class.WTF::VectorBufferBase.570" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.573" = type { %"class.WTF::HashMap.576" }
%"class.WTF::HashMap.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"struct.WTF::KeyValuePair.579"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.579" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1816" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1816" = type { %"class.v8::TracedReference.1817" }
%"class.v8::TracedReference.1817" = type { %"class.v8::BasicTracedReference.1818" }
%"class.v8::BasicTracedReference.1818" = type { %"class.v8::TracedReferenceBase" }
%"class.absl::optional.1819" = type { %"class.absl::optional_internal::optional_data.1820" }
%"class.absl::optional_internal::optional_data.1820" = type { %"class.absl::optional_internal::optional_data_base.1821" }
%"class.absl::optional_internal::optional_data_base.1821" = type { %"class.absl::optional_internal::optional_data_dtor_base.1822" }
%"class.absl::optional_internal::optional_data_dtor_base.1822" = type { i8, %union.anon.1823 }
%union.anon.1823 = type { %"class.blink::HeapVector.1824" }
%"class.blink::HeapVector.1824" = type { %"class.WTF::Vector.1827" }
%"class.WTF::Vector.1827" = type { %"class.WTF::VectorBuffer.1828" }
%"class.WTF::VectorBuffer.1828" = type { %"class.WTF::VectorBufferBase.1829" }
%"class.WTF::VectorBufferBase.1829" = type { %"class.blink::ScriptValue"*, i32, i32 }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.1816", %class.scoped_refptr.1324 }
%"class.blink::V8SQLStatementCallback" = type { %"class.blink::CallbackInterfaceBase" }
%"class.blink::V8SQLStatementErrorCallback" = type { %"class.blink::CallbackInterfaceBase" }
%"class.blink::SQLStatement::OnSuccessV8Impl" = type { %"class.blink::SQLStatement::OnSuccessCallback", %"class.blink::Member.1831" }
%"class.blink::Member.1831" = type { %"class.blink::MemberBase.1832" }
%"class.blink::MemberBase.1832" = type { %"class.blink::V8SQLStatementCallback"* }
%"class.blink::SQLStatement::OnErrorV8Impl" = type { %"class.blink::SQLStatement::OnErrorCallback", %"class.blink::Member.1833" }
%"class.blink::Member.1833" = type { %"class.blink::MemberBase.1834" }
%"class.blink::MemberBase.1834" = type { %"class.blink::V8SQLStatementErrorCallback"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink14SQLTransaction17OnProcessCallbackD2Ev = comdat any

$_ZN5blink14SQLTransaction15OnProcessV8ImplD0Ev = comdat any

$_ZN5blink14SQLTransaction17OnSuccessCallbackD2Ev = comdat any

$_ZN5blink14SQLTransaction15OnSuccessV8ImplD0Ev = comdat any

$_ZN5blink14SQLTransaction15OnErrorCallbackD2Ev = comdat any

$_ZN5blink14SQLTransaction13OnErrorV8ImplD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink14SQLTransaction18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12SQLStatement17OnSuccessCallbackEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_12SQLStatement17OnSuccessCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_12SQLStatement17OnSuccessCallbackEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_12SQLStatement17OnSuccessCallbackEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12SQLStatement15OnErrorCallbackEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_12SQLStatement15OnErrorCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_12SQLStatement15OnErrorCallbackEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_12SQLStatement15OnErrorCallbackEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_24V8SQLTransactionCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14V8VoidCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_29V8SQLTransactionErrorCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8DatabaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_21SQLTransactionBackendEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14SQLTransaction17OnProcessCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14SQLTransaction17OnSuccessCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14SQLTransaction15OnErrorCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8SQLErrorD2Ev = comdat any

$_ZN5blink8SQLErrorD0Ev = comdat any

$_ZNK5blink8SQLError18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12SQLStatementEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_12SQLStatementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_12SQLStatementEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8SQLValueEEEmm = comdat any

$_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink8SQLErrorE = comdat any

$_ZZN5blink11GCInfoTraitINS_12SQLStatementEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12SQLStatementEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink14SQLTransactionE = hidden unnamed_addr constant { [12 x i8*], [5 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransactionD2Ev to i8*), i8* bitcast (void (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransactionD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::SQLTransaction"*, %"class.blink::Visitor"*)* @_ZNK5blink14SQLTransaction5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::SQLTransaction"*)* @_ZNK5blink14SQLTransaction18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::SQLTransaction"*, i32)* @_ZN5blink14SQLTransaction16StateFunctionForENS_19SQLTransactionStateE to i8*)], [5 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::SQLTransaction"*)* @_ZThn16_N5blink14SQLTransactionD1Ev to i8*), i8* bitcast (void (%"class.blink::SQLTransaction"*)* @_ZThn16_N5blink14SQLTransactionD0Ev to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::SQLTransaction"*, i32)* @_ZThn16_N5blink14SQLTransaction16StateFunctionForENS_19SQLTransactionStateE to i8*)] }, align 8
@.str = private unnamed_addr constant [15 x i8] c"SQLTransaction\00", align 1
@_ZZN5blink14SQLTransaction16StateFunctionForENS_19SQLTransactionStateEE15kStateFunctions = internal unnamed_addr constant [13 x { i64, i64 }] [{ i64, i64 } { i64 ptrtoint (i32 (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction16UnreachableStateEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction16UnreachableStateEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction16UnreachableStateEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction16UnreachableStateEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction18SendToBackendStateEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction16UnreachableStateEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction18SendToBackendStateEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction18SendToBackendStateEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction26DeliverTransactionCallbackEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction31DeliverTransactionErrorCallbackEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction24DeliverStatementCallbackEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction28DeliverQuotaIncreaseCallbackEv to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction22DeliverSuccessCallbackEv to i64), i64 0 }], align 16
@.str.1 = private unnamed_addr constant [12 x i8] c"transaction\00", align 1
@.str.2 = private unnamed_addr constant [58 x i8] c"the SQLTransactionCallback was null or threw an exception\00", align 1
@.str.3 = private unnamed_addr constant [92 x i8] c"the statement callback raised an exception or statement error callback did not return false\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"SQL execution is disallowed.\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"The database has not been opened.\00", align 1
@_ZTVN5blink14SQLTransaction15OnProcessV8ImplE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SQLTransaction::OnProcessCallback"*)* @_ZN5blink14SQLTransaction17OnProcessCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::SQLTransaction::OnProcessV8Impl"*)* @_ZN5blink14SQLTransaction15OnProcessV8ImplD0Ev to i8*), i8* bitcast (void (%"class.blink::SQLTransaction::OnProcessV8Impl"*, %"class.blink::Visitor"*)* @_ZNK5blink14SQLTransaction15OnProcessV8Impl5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::SQLTransaction::OnProcessV8Impl"*, %"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransaction15OnProcessV8Impl9OnProcessEPS0_ to i8*)] }, align 8
@_ZTVN5blink14SQLTransaction15OnSuccessV8ImplE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SQLTransaction::OnSuccessCallback"*)* @_ZN5blink14SQLTransaction17OnSuccessCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::SQLTransaction::OnSuccessV8Impl"*)* @_ZN5blink14SQLTransaction15OnSuccessV8ImplD0Ev to i8*), i8* bitcast (void (%"class.blink::SQLTransaction::OnSuccessV8Impl"*, %"class.blink::Visitor"*)* @_ZNK5blink14SQLTransaction15OnSuccessV8Impl5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::SQLTransaction::OnSuccessV8Impl"*)* @_ZN5blink14SQLTransaction15OnSuccessV8Impl9OnSuccessEv to i8*)] }, align 8
@_ZTVN5blink14SQLTransaction13OnErrorV8ImplE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SQLTransaction::OnErrorCallback"*)* @_ZN5blink14SQLTransaction15OnErrorCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::SQLTransaction::OnErrorV8Impl"*)* @_ZN5blink14SQLTransaction13OnErrorV8ImplD0Ev to i8*), i8* bitcast (void (%"class.blink::SQLTransaction::OnErrorV8Impl"*, %"class.blink::Visitor"*)* @_ZNK5blink14SQLTransaction13OnErrorV8Impl5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::SQLTransaction::OnErrorV8Impl"*, %"class.blink::SQLError"*)* @_ZN5blink14SQLTransaction13OnErrorV8Impl7OnErrorEPNS_8SQLErrorE to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12SQLStatement17OnSuccessCallbackEEEPKcv = private unnamed_addr constant [86 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SQLStatement::OnSuccessCallback]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12SQLStatement17OnSuccessCallbackEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12SQLStatement17OnSuccessCallbackEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12SQLStatement17OnSuccessCallbackEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink12SQLStatement15OnSuccessV8ImplE = external unnamed_addr constant { [6 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12SQLStatement15OnErrorCallbackEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SQLStatement::OnErrorCallback]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12SQLStatement15OnErrorCallbackEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12SQLStatement15OnErrorCallbackEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12SQLStatement15OnErrorCallbackEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink12SQLStatement13OnErrorV8ImplE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZN5blink14SQLTransaction18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZTVN5blink8SQLErrorE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::SQLError"*)* @_ZN5blink8SQLErrorD2Ev to i8*), i8* bitcast (void (%"class.blink::SQLError"*)* @_ZN5blink8SQLErrorD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::SQLError"*)* @_ZNK5blink8SQLError18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@_ZN5blink8SQLError18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12SQLStatementEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SQLStatement]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12SQLStatementEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12SQLStatementEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12SQLStatementEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12SQLStatementEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8SQLValueEEEPKcv = private unnamed_addr constant [63 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SQLValue]\00", align 1

@_ZN5blink14SQLTransactionC1EPNS_8DatabaseEPNS0_17OnProcessCallbackEPNS0_17OnSuccessCallbackEPNS0_15OnErrorCallbackEb = hidden unnamed_addr alias void (%"class.blink::SQLTransaction"*, %"class.blink::Database"*, %"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction::OnSuccessCallback"*, %"class.blink::SQLTransaction::OnErrorCallback"*, i1), void (%"class.blink::SQLTransaction"*, %"class.blink::Database"*, %"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction::OnSuccessCallback"*, %"class.blink::SQLTransaction::OnErrorCallback"*, i1)* @_ZN5blink14SQLTransactionC2EPNS_8DatabaseEPNS0_17OnProcessCallbackEPNS0_17OnSuccessCallbackEPNS0_15OnErrorCallbackEb
@_ZN5blink14SQLTransactionD1Ev = hidden unnamed_addr alias void (%"class.blink::SQLTransaction"*), void (%"class.blink::SQLTransaction"*)* @_ZN5blink14SQLTransactionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SQLTransaction15OnProcessV8Impl5TraceEPNS_7VisitorE(%"class.blink::SQLTransaction::OnProcessV8Impl"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SQLTransaction::OnProcessV8Impl", %"class.blink::SQLTransaction::OnProcessV8Impl"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_24V8SQLTransactionCallbackEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SQLTransaction15OnProcessV8Impl9OnProcessEPS0_(%"class.blink::SQLTransaction::OnProcessV8Impl"* nocapture readonly, %"class.blink::SQLTransaction"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.blink::SQLTransaction::OnProcessV8Impl", %"class.blink::SQLTransaction::OnProcessV8Impl"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::V8SQLTransactionCallback"*, %"class.blink::V8SQLTransactionCallback"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::V8SQLTransactionCallback", %"class.blink::V8SQLTransactionCallback"* %6, i64 0, i32 0, i32 4, i32 0, i32 0
  %8 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %8, i64 0, i32 0
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %10) #10
  call void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"* nonnull %3, i1 zeroext true) #10
  %11 = load %"class.blink::V8SQLTransactionCallback"*, %"class.blink::V8SQLTransactionCallback"** %5, align 8
  %12 = call i8 @_ZN5blink24V8SQLTransactionCallback11handleEventENS_8bindings31V8ValueOrScriptWrappableAdapterEPNS_14SQLTransactionE(%"class.blink::V8SQLTransactionCallback"* %11, %"class.v8::Value"* null, %"class.blink::ScriptWrappable"* null, %"class.blink::SQLTransaction"* %1) #10
  %13 = icmp ne i8 %12, 0
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #10
  ret i1 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"*, i1 zeroext) local_unnamed_addr #2

declare i8 @_ZN5blink24V8SQLTransactionCallback11handleEventENS_8bindings31V8ValueOrScriptWrappableAdapterEPNS_14SQLTransactionE(%"class.blink::V8SQLTransactionCallback"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*, %"class.blink::SQLTransaction"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SQLTransaction15OnSuccessV8Impl5TraceEPNS_7VisitorE(%"class.blink::SQLTransaction::OnSuccessV8Impl"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SQLTransaction::OnSuccessV8Impl", %"class.blink::SQLTransaction::OnSuccessV8Impl"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.346"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14V8VoidCallbackEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SQLTransaction15OnSuccessV8Impl9OnSuccessEv(%"class.blink::SQLTransaction::OnSuccessV8Impl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction::OnSuccessV8Impl", %"class.blink::SQLTransaction::OnSuccessV8Impl"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::V8VoidCallback"*, %"class.blink::V8VoidCallback"** %2, align 8
  tail call void @_ZN5blink14V8VoidCallback24InvokeAndReportExceptionENS_8bindings31V8ValueOrScriptWrappableAdapterE(%"class.blink::V8VoidCallback"* %3, %"class.v8::Value"* null, %"class.blink::ScriptWrappable"* null) #10
  ret void
}

declare void @_ZN5blink14V8VoidCallback24InvokeAndReportExceptionENS_8bindings31V8ValueOrScriptWrappableAdapterE(%"class.blink::V8VoidCallback"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SQLTransaction13OnErrorV8Impl5TraceEPNS_7VisitorE(%"class.blink::SQLTransaction::OnErrorV8Impl"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SQLTransaction::OnErrorV8Impl", %"class.blink::SQLTransaction::OnErrorV8Impl"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.348"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_29V8SQLTransactionErrorCallbackEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SQLTransaction13OnErrorV8Impl7OnErrorEPNS_8SQLErrorE(%"class.blink::SQLTransaction::OnErrorV8Impl"* nocapture readonly, %"class.blink::SQLError"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.blink::SQLTransaction::OnErrorV8Impl", %"class.blink::SQLTransaction::OnErrorV8Impl"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::V8SQLTransactionErrorCallback"*, %"class.blink::V8SQLTransactionErrorCallback"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::V8SQLTransactionErrorCallback", %"class.blink::V8SQLTransactionErrorCallback"* %6, i64 0, i32 0, i32 4, i32 0, i32 0
  %8 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %8, i64 0, i32 0
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %10) #10
  call void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"* nonnull %3, i1 zeroext true) #10
  %11 = load %"class.blink::V8SQLTransactionErrorCallback"*, %"class.blink::V8SQLTransactionErrorCallback"** %5, align 8
  %12 = call i8 @_ZN5blink29V8SQLTransactionErrorCallback11handleEventENS_8bindings31V8ValueOrScriptWrappableAdapterEPNS_8SQLErrorE(%"class.blink::V8SQLTransactionErrorCallback"* %11, %"class.v8::Value"* null, %"class.blink::ScriptWrappable"* null, %"class.blink::SQLError"* %1) #10
  %13 = icmp ne i8 %12, 0
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #10
  ret i1 %13
}

declare i8 @_ZN5blink29V8SQLTransactionErrorCallback11handleEventENS_8bindings31V8ValueOrScriptWrappableAdapterEPNS_8SQLErrorE(%"class.blink::V8SQLTransactionErrorCallback"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*, %"class.blink::SQLError"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SQLTransaction"* @_ZN5blink14SQLTransaction6CreateEPNS_8DatabaseEPNS0_17OnProcessCallbackEPNS0_17OnSuccessCallbackEPNS0_15OnErrorCallbackEb(%"class.blink::Database"*, %"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction::OnSuccessCallback"*, %"class.blink::SQLTransaction::OnErrorCallback"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = ptrtoint %"class.blink::SQLTransaction::OnProcessCallback"* %1 to i64
  %8 = ptrtoint %"class.blink::SQLTransaction::OnSuccessCallback"* %2 to i64
  %9 = ptrtoint %"class.blink::SQLTransaction::OnErrorCallback"* %3 to i64
  %10 = zext i1 %4 to i8
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #10
  %12 = bitcast i8* %11 to %"class.blink::SQLTransaction"*
  %13 = bitcast i8* %11 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  %15 = bitcast i8* %14 to i64**
  store i64* null, i64** %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 16
  %17 = bitcast i8* %16 to i32 (...)***
  %18 = getelementptr inbounds i8, i8* %11, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 28
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN5blink14SQLTransactionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN5blink14SQLTransactionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %22 = getelementptr inbounds i8, i8* %11, i64 32
  %23 = bitcast i8* %22 to %"class.blink::Database"**
  store %"class.blink::Database"* %0, %"class.blink::Database"** %23, align 8
  %24 = getelementptr inbounds i8, i8* %11, i64 40
  %25 = bitcast i8* %24 to %"class.blink::SQLTransactionBackend"**
  store %"class.blink::SQLTransactionBackend"* null, %"class.blink::SQLTransactionBackend"** %25, align 8
  %26 = getelementptr inbounds i8, i8* %11, i64 48
  %27 = bitcast i8* %26 to i64*
  store i64 %7, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %11, i64 56
  %29 = bitcast i8* %28 to i64*
  store i64 %8, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %11, i64 64
  %31 = bitcast i8* %30 to i64*
  store i64 %9, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %11, i64 72
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds i8, i8* %11, i64 80
  %34 = bitcast i8* %33 to i64*
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %11, i64 88
  %36 = bitcast i8* %35 to %"class.blink::probe::AsyncTaskId"*
  store i8 0, i8* %35, align 8
  %37 = getelementptr inbounds i8, i8* %11, i64 96
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds i8, i8* %11, i64 112
  store i8 %10, i8* %38, align 8
  %39 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Database19GetExecutionContextEv(%"class.blink::Database"* %0) #10
  %40 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #10
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 14, i32* %44, align 8
  call void @_ZN5blink5probe18AsyncTaskScheduledEPNS_16ExecutionContextERKN3WTF10StringViewEPNS0_11AsyncTaskIdE(%"class.blink::ExecutionContext"* %39, %"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.blink::probe::AsyncTaskId"* %36) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #10
  %45 = getelementptr inbounds i8, i8* %11, i64 -4
  %46 = bitcast i8* %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = or i16 %47, 1
  store atomic i16 %48, i16* %46 release, align 2
  ret %"class.blink::SQLTransaction"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SQLTransactionC2EPNS_8DatabaseEPNS0_17OnProcessCallbackEPNS0_17OnSuccessCallbackEPNS0_15OnErrorCallbackEb(%"class.blink::SQLTransaction"*, %"class.blink::Database"*, %"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction::OnSuccessCallback"*, %"class.blink::SQLTransaction::OnErrorCallback"*, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = zext i1 %5 to i8
  %9 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %10, align 8
  %11 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 1, i32 1
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 1, i32 2
  store i32 1, i32* %13, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN5blink14SQLTransactionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN5blink14SQLTransactionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::Database"* %1, %"class.blink::Database"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::SQLTransactionBackend"* null, %"class.blink::SQLTransactionBackend"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::SQLTransaction::OnProcessCallback"* %2, %"class.blink::SQLTransaction::OnProcessCallback"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::SQLTransaction::OnSuccessCallback"* %3, %"class.blink::SQLTransaction::OnSuccessCallback"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.blink::SQLTransaction::OnErrorCallback"* %4, %"class.blink::SQLTransaction::OnErrorCallback"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 7
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 9
  %21 = bitcast %"class.std::__1::unique_ptr.290"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 10
  %23 = getelementptr inbounds %"class.blink::probe::AsyncTaskId", %"class.blink::probe::AsyncTaskId"* %22, i64 0, i32 0
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 11
  store i8 %8, i8* %25, align 8
  %26 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Database19GetExecutionContextEv(%"class.blink::Database"* %1) #10
  %27 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %29 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 14, i32* %31, align 8
  call void @_ZN5blink5probe18AsyncTaskScheduledEPNS_16ExecutionContextERKN3WTF10StringViewEPNS0_11AsyncTaskIdE(%"class.blink::ExecutionContext"* %26, %"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.blink::probe::AsyncTaskId"* %22) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  ret void
}

declare void @_ZN5blink5probe18AsyncTaskScheduledEPNS_16ExecutionContextERKN3WTF10StringViewEPNS0_11AsyncTaskIdE(%"class.blink::ExecutionContext"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::probe::AsyncTaskId"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Database19GetExecutionContextEv(%"class.blink::Database"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SQLTransactionD2Ev(%"class.blink::SQLTransaction"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN5blink14SQLTransactionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN5blink14SQLTransactionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %5 = load %"class.blink::SQLErrorData"*, %"class.blink::SQLErrorData"** %4, align 8
  store %"class.blink::SQLErrorData"* null, %"class.blink::SQLErrorData"** %4, align 8
  %6 = icmp eq %"class.blink::SQLErrorData"* %5, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SQLErrorData", %"class.blink::SQLErrorData"* %5, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #10
  br label %24

24:                                               ; preds = %23, %20, %7
  %25 = bitcast %"class.blink::SQLErrorData"* %5 to i8*
  tail call void @free(i8* %25) #10
  br label %26

26:                                               ; preds = %1, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14SQLTransactionD1Ev(%"class.blink::SQLTransaction"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 -1, i32 10, i32 1, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %union.anon.284* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN5blink14SQLTransactionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %union.anon.284, %union.anon.284* %2, i64 2
  %5 = bitcast %union.anon.284* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN5blink14SQLTransactionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %union.anon.284, %union.anon.284* %2, i64 10
  %7 = bitcast %union.anon.284* %6 to %"class.blink::SQLErrorData"**
  %8 = load %"class.blink::SQLErrorData"*, %"class.blink::SQLErrorData"** %7, align 8
  store %"class.blink::SQLErrorData"* null, %"class.blink::SQLErrorData"** %7, align 8
  %9 = icmp eq %"class.blink::SQLErrorData"* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::SQLErrorData", %"class.blink::SQLErrorData"* %8, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #10
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = bitcast %"class.blink::SQLErrorData"* %8 to i8*
  tail call void @free(i8* %28) #10
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SQLTransactionD0Ev(%"class.blink::SQLTransaction"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN5blink14SQLTransactionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN5blink14SQLTransactionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %5 = load %"class.blink::SQLErrorData"*, %"class.blink::SQLErrorData"** %4, align 8
  store %"class.blink::SQLErrorData"* null, %"class.blink::SQLErrorData"** %4, align 8
  %6 = icmp eq %"class.blink::SQLErrorData"* %5, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SQLErrorData", %"class.blink::SQLErrorData"* %5, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #10
  br label %24

24:                                               ; preds = %23, %20, %7
  %25 = bitcast %"class.blink::SQLErrorData"* %5 to i8*
  tail call void @free(i8* %25) #10
  br label %26

26:                                               ; preds = %1, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14SQLTransactionD0Ev(%"class.blink::SQLTransaction"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 -1, i32 10, i32 1, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %union.anon.284* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN5blink14SQLTransactionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %union.anon.284, %union.anon.284* %2, i64 2
  %5 = bitcast %union.anon.284* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTVN5blink14SQLTransactionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %union.anon.284, %union.anon.284* %2, i64 10
  %7 = bitcast %union.anon.284* %6 to %"class.blink::SQLErrorData"**
  %8 = load %"class.blink::SQLErrorData"*, %"class.blink::SQLErrorData"** %7, align 8
  store %"class.blink::SQLErrorData"* null, %"class.blink::SQLErrorData"** %7, align 8
  %9 = icmp eq %"class.blink::SQLErrorData"* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::SQLErrorData", %"class.blink::SQLErrorData"* %8, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #10
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = bitcast %"class.blink::SQLErrorData"* %8 to i8*
  tail call void @free(i8* %28) #10
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SQLTransaction5TraceEPNS_7VisitorE(%"class.blink::SQLTransaction"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.190"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DatabaseEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.327"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21SQLTransactionBackendEE5TraceEPNS_7VisitorEPKv) #10
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 4
  %26 = bitcast %"class.blink::Member.329"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SQLTransaction17OnProcessCallbackEE5TraceEPNS_7VisitorEPKv) #10
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 5
  %37 = bitcast %"class.blink::Member.331"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SQLTransaction17OnSuccessCallbackEE5TraceEPNS_7VisitorEPKv) #10
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 6
  %48 = bitcast %"class.blink::Member.335"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %1, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SQLTransaction15OnErrorCallbackEE5TraceEPNS_7VisitorEPKv) #10
  br label %57

57:                                               ; preds = %46, %51
  %58 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %58, %"class.blink::Visitor"* %1) #10
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SQLTransaction11HasCallbackEv(%"class.blink::SQLTransaction"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction::OnProcessCallback"** %2, align 8
  %4 = icmp ne %"class.blink::SQLTransaction::OnProcessCallback"* %3, null
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SQLTransaction18HasSuccessCallbackEv(%"class.blink::SQLTransaction"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::SQLTransaction::OnSuccessCallback"*, %"class.blink::SQLTransaction::OnSuccessCallback"** %2, align 8
  %4 = icmp ne %"class.blink::SQLTransaction::OnSuccessCallback"* %3, null
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SQLTransaction16HasErrorCallbackEv(%"class.blink::SQLTransaction"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::SQLTransaction::OnErrorCallback"** %2, align 8
  %4 = icmp ne %"class.blink::SQLTransaction::OnErrorCallback"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SQLTransaction10SetBackendEPNS_21SQLTransactionBackendE(%"class.blink::SQLTransaction"* nocapture, %"class.blink::SQLTransactionBackend"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 3
  %4 = ptrtoint %"class.blink::SQLTransactionBackend"* %1 to i64
  %5 = bitcast %"class.blink::Member.327"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::SQLTransactionBackend"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #10
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i64 } @_ZN5blink14SQLTransaction16StateFunctionForENS_19SQLTransactionStateE(%"class.blink::SQLTransaction"* nocapture readnone, i32) unnamed_addr #5 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds [13 x { i64, i64 }], [13 x { i64, i64 }]* @_ZZN5blink14SQLTransaction16StateFunctionForENS_19SQLTransactionStateEE15kStateFunctions, i64 0, i64 %3, i32 0
  %5 = load i64, i64* %4, align 16
  %6 = insertvalue { i64, i64 } undef, i64 %5, 0
  %7 = getelementptr inbounds [13 x { i64, i64 }], [13 x { i64, i64 }]* @_ZZN5blink14SQLTransaction16StateFunctionForENS_19SQLTransactionStateEE15kStateFunctions, i64 0, i64 %3, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } %6, i64 %8, 1
  ret { i64, i64 } %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink14SQLTransaction16UnreachableStateEv(%"class.blink::SQLTransaction"* nocapture readnone) #5 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14SQLTransaction18SendToBackendStateEv(%"class.blink::SQLTransaction"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 1, i32 1
  %5 = load i32, i32* %4, align 8
  tail call void @_ZN5blink21SQLTransactionBackend21RequestTransitToStateENS_19SQLTransactionStateE(%"class.blink::SQLTransactionBackend"* %3, i32 %5) #10
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14SQLTransaction26DeliverTransactionCallbackEv(%"class.blink::SQLTransaction"*) #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::probe::AsyncTask", align 8
  %4 = bitcast %"class.blink::probe::AsyncTask"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 40, i1 false)
  %5 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Database"*, %"class.blink::Database"** %5, align 8
  %7 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Database19GetExecutionContextEv(%"class.blink::Database"* %6) #10
  %8 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 10
  call void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"* nonnull %3, %"class.blink::ExecutionContext"* %7, %"class.blink::probe::AsyncTaskId"* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i1 zeroext true, i32 1) #10
  %9 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 4, i32 0
  %10 = getelementptr inbounds %"class.blink::MemberBase.330", %"class.blink::MemberBase.330"* %9, i64 0, i32 0
  %11 = load %"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction::OnProcessCallback"** %10, align 8
  %12 = bitcast %"class.blink::MemberBase.330"* %9 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = icmp eq %"class.blink::SQLTransaction::OnProcessCallback"* %11, null
  br i1 %13, label %70, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 7
  store i8 1, i8* %15, align 8
  %16 = bitcast %"class.blink::SQLTransaction::OnProcessCallback"* %11 to i1 (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction"*)***
  %17 = load i1 (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction"*)**, i1 (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction"*)*, i1 (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction"*)** %17, i64 3
  %19 = load i1 (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction"*)*, i1 (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::SQLTransaction"*)** %18, align 8
  %20 = call zeroext i1 %19(%"class.blink::SQLTransaction::OnProcessCallback"* nonnull %11, %"class.blink::SQLTransaction"* %0) #10
  store i8 0, i8* %15, align 8
  br i1 %20, label %70, label %21

21:                                               ; preds = %14
  %22 = call noalias i8* @malloc(i64 16) #10
  %23 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.2, i64 0, i64 0), i64 57) #10
  %24 = bitcast i8* %22 to i32*
  store i32 0, i32* %24, align 8
  %25 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* nonnull %2) #10
  %26 = getelementptr inbounds i8, i8* %22, i64 8
  %27 = bitcast i8* %26 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #10
  br label %44

44:                                               ; preds = %21, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  %45 = ptrtoint i8* %22 to i64
  %46 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 9
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.290"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::SQLErrorData"*, %"class.blink::SQLErrorData"** %47, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.290"* %46 to i64*
  store i64 %45, i64* %49, align 8
  %50 = icmp eq %"class.blink::SQLErrorData"* %48, null
  br i1 %50, label %70, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.blink::SQLErrorData", %"class.blink::SQLErrorData"* %48, i64 0, i32 1, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #10
  br label %68

68:                                               ; preds = %67, %64, %51
  %69 = bitcast %"class.blink::SQLErrorData"* %48 to i8*
  call void @free(i8* %69) #10
  br label %70

70:                                               ; preds = %14, %44, %68, %1
  %71 = phi i32 [ 4, %14 ], [ 4, %1 ], [ 9, %68 ], [ 9, %44 ]
  call void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #10
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14SQLTransaction31DeliverTransactionErrorCallbackEv(%"class.blink::SQLTransaction"*) #0 align 2 {
  %2 = alloca %"class.blink::probe::AsyncTask", align 8
  %3 = bitcast %"class.blink::probe::AsyncTask"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 40, i1 false)
  %4 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Database"*, %"class.blink::Database"** %4, align 8
  %6 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Database19GetExecutionContextEv(%"class.blink::Database"* %5) #10
  %7 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 10
  call void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"* nonnull %2, %"class.blink::ExecutionContext"* %6, %"class.blink::probe::AsyncTaskId"* %7, i8* null, i1 zeroext true, i32 1) #10
  %8 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 6, i32 0
  %9 = getelementptr inbounds %"class.blink::MemberBase.336", %"class.blink::MemberBase.336"* %8, i64 0, i32 0
  %10 = load %"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::SQLTransaction::OnErrorCallback"** %9, align 8
  %11 = bitcast %"class.blink::MemberBase.336"* %8 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = icmp eq %"class.blink::SQLTransaction::OnErrorCallback"* %10, null
  br i1 %12, label %100, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 9
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.290"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::SQLErrorData"*, %"class.blink::SQLErrorData"** %15, align 8
  %17 = icmp eq %"class.blink::SQLErrorData"* %16, null
  br i1 %17, label %18, label %55

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %19, align 8
  %21 = call %"class.blink::SQLErrorData"* @_ZN5blink21SQLTransactionBackend16TransactionErrorEv(%"class.blink::SQLTransactionBackend"* %20) #10
  %22 = call noalias i8* @malloc(i64 16) #10
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds %"class.blink::SQLErrorData", %"class.blink::SQLErrorData"* %21, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %23, align 8
  %26 = getelementptr inbounds %"class.blink::SQLErrorData", %"class.blink::SQLErrorData"* %21, i64 0, i32 1
  %27 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %26) #10
  %28 = getelementptr inbounds i8, i8* %22, i64 8
  %29 = bitcast i8* %28 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %29, align 8
  %30 = ptrtoint i8* %22 to i64
  %31 = load %"class.blink::SQLErrorData"*, %"class.blink::SQLErrorData"** %15, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.290"* %14 to i64*
  store i64 %30, i64* %32, align 8
  %33 = icmp eq %"class.blink::SQLErrorData"* %31, null
  %34 = bitcast i8* %22 to %"class.blink::SQLErrorData"*
  br i1 %33, label %55, label %35

35:                                               ; preds = %18
  %36 = getelementptr inbounds %"class.blink::SQLErrorData", %"class.blink::SQLErrorData"* %31, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #10
  br label %52

52:                                               ; preds = %51, %48, %35
  %53 = bitcast %"class.blink::SQLErrorData"* %31 to i8*
  call void @free(i8* %53) #10
  %54 = load %"class.blink::SQLErrorData"*, %"class.blink::SQLErrorData"** %15, align 8
  br label %55

55:                                               ; preds = %13, %18, %52
  %56 = phi %"class.blink::SQLErrorData"* [ %16, %13 ], [ %34, %18 ], [ %54, %52 ]
  %57 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #10
  %58 = bitcast i8* %57 to %"class.blink::SQLError"*
  %59 = bitcast i8* %57 to i32 (...)***
  %60 = getelementptr inbounds i8, i8* %57, i64 8
  %61 = bitcast i8* %60 to i64**
  store i64* null, i64** %61, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8SQLErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %62 = getelementptr inbounds i8, i8* %57, i64 16
  %63 = bitcast i8* %62 to i32*
  %64 = getelementptr inbounds %"class.blink::SQLErrorData", %"class.blink::SQLErrorData"* %56, i64 0, i32 0
  %65 = load i32, i32* %64, align 8
  store i32 %65, i32* %63, align 8
  %66 = getelementptr inbounds %"class.blink::SQLErrorData", %"class.blink::SQLErrorData"* %56, i64 0, i32 1
  %67 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %66) #10
  %68 = getelementptr inbounds i8, i8* %57, i64 24
  %69 = bitcast i8* %68 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds i8, i8* %57, i64 -4
  %71 = bitcast i8* %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = or i16 %72, 1
  store atomic i16 %73, i16* %71 release, align 2
  %74 = bitcast %"class.blink::SQLTransaction::OnErrorCallback"* %10 to i1 (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::SQLError"*)***
  %75 = load i1 (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::SQLError"*)**, i1 (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::SQLError"*)*** %74, align 8
  %76 = getelementptr inbounds i1 (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::SQLError"*)*, i1 (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::SQLError"*)** %75, i64 3
  %77 = load i1 (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::SQLError"*)*, i1 (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::SQLError"*)** %76, align 8
  %78 = call zeroext i1 %77(%"class.blink::SQLTransaction::OnErrorCallback"* nonnull %10, %"class.blink::SQLError"* %58) #10
  %79 = load %"class.blink::SQLErrorData"*, %"class.blink::SQLErrorData"** %15, align 8
  store %"class.blink::SQLErrorData"* null, %"class.blink::SQLErrorData"** %15, align 8
  %80 = icmp eq %"class.blink::SQLErrorData"* %79, null
  br i1 %80, label %100, label %81

81:                                               ; preds = %55
  %82 = getelementptr inbounds %"class.blink::SQLErrorData", %"class.blink::SQLErrorData"* %79, i64 0, i32 1, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #10
  br label %98

98:                                               ; preds = %97, %94, %81
  %99 = bitcast %"class.blink::SQLErrorData"* %79 to i8*
  call void @free(i8* %99) #10
  br label %100

100:                                              ; preds = %98, %55, %1
  %101 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 4, i32 0
  %102 = bitcast %"class.blink::MemberBase.330"* %101 to i64*
  store atomic i64 0, i64* %102 monotonic, align 8
  %103 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 5, i32 0
  %104 = bitcast %"class.blink::MemberBase.332"* %103 to i64*
  store atomic i64 0, i64* %104 monotonic, align 8
  store atomic i64 0, i64* %11 monotonic, align 8
  call void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #10
  ret i32 7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14SQLTransaction24DeliverStatementCallbackEv(%"class.blink::SQLTransaction"*) #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 7
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %4, align 8
  %6 = tail call %"class.blink::SQLStatement"* @_ZN5blink21SQLTransactionBackend16CurrentStatementEv(%"class.blink::SQLTransactionBackend"* %5) #10
  %7 = tail call zeroext i1 @_ZN5blink12SQLStatement15PerformCallbackEPNS_14SQLTransactionE(%"class.blink::SQLStatement"* %6, %"class.blink::SQLTransaction"* %0) #10
  store i8 0, i8* %3, align 8
  br i1 %7, label %8, label %62

8:                                                ; preds = %1
  %9 = tail call noalias i8* @malloc(i64 16) #10
  %10 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.3, i64 0, i64 0), i64 91) #10
  %11 = bitcast i8* %9 to i32*
  store i32 0, i32* %11, align 8
  %12 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* nonnull %2) #10
  %13 = getelementptr inbounds i8, i8* %9, i64 8
  %14 = bitcast i8* %13 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %8, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %32 = ptrtoint i8* %9 to i64
  %33 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 9
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.290"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::SQLErrorData"*, %"class.blink::SQLErrorData"** %34, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.290"* %33 to i64*
  store i64 %32, i64* %36, align 8
  %37 = icmp eq %"class.blink::SQLErrorData"* %35, null
  br i1 %37, label %57, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::SQLErrorData", %"class.blink::SQLErrorData"* %35, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #10
  br label %55

55:                                               ; preds = %54, %51, %38
  %56 = bitcast %"class.blink::SQLErrorData"* %35 to i8*
  call void @free(i8* %56) #10
  br label %57

57:                                               ; preds = %55, %31
  %58 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 6, i32 0, i32 0
  %59 = load %"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::SQLTransaction::OnErrorCallback"** %58, align 8
  %60 = icmp eq %"class.blink::SQLTransaction::OnErrorCallback"* %59, null
  %61 = select i1 %60, i32 7, i32 9
  br label %62

62:                                               ; preds = %1, %57
  %63 = phi i32 [ %61, %57 ], [ 4, %1 ]
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14SQLTransaction28DeliverQuotaIncreaseCallbackEv(%"class.blink::SQLTransaction"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Database"*, %"class.blink::Database"** %2, align 8
  %4 = tail call %"class.blink::SQLTransactionClient"* @_ZNK5blink8Database17TransactionClientEv(%"class.blink::Database"* %3) #10
  %5 = load %"class.blink::Database"*, %"class.blink::Database"** %2, align 8
  %6 = tail call zeroext i1 @_ZN5blink20SQLTransactionClient14DidExceedQuotaEPNS_8DatabaseE(%"class.blink::SQLTransactionClient"* %4, %"class.blink::Database"* %5) #10
  %7 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %7, align 8
  tail call void @_ZN5blink21SQLTransactionBackend30SetShouldRetryCurrentStatementEb(%"class.blink::SQLTransactionBackend"* %8, i1 zeroext %6) #10
  ret i32 4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14SQLTransaction22DeliverSuccessCallbackEv(%"class.blink::SQLTransaction"*) #0 align 2 {
  %2 = alloca %"class.blink::probe::AsyncTask", align 8
  %3 = bitcast %"class.blink::probe::AsyncTask"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 40, i1 false)
  %4 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Database"*, %"class.blink::Database"** %4, align 8
  %6 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Database19GetExecutionContextEv(%"class.blink::Database"* %5) #10
  %7 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 10
  call void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"* nonnull %2, %"class.blink::ExecutionContext"* %6, %"class.blink::probe::AsyncTaskId"* %7, i8* null, i1 zeroext true, i32 1) #10
  %8 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 5, i32 0
  %9 = getelementptr inbounds %"class.blink::MemberBase.332", %"class.blink::MemberBase.332"* %8, i64 0, i32 0
  %10 = load %"class.blink::SQLTransaction::OnSuccessCallback"*, %"class.blink::SQLTransaction::OnSuccessCallback"** %9, align 8
  %11 = bitcast %"class.blink::MemberBase.332"* %8 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = icmp eq %"class.blink::SQLTransaction::OnSuccessCallback"* %10, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::SQLTransaction::OnSuccessCallback"* %10 to void (%"class.blink::SQLTransaction::OnSuccessCallback"*)***
  %15 = load void (%"class.blink::SQLTransaction::OnSuccessCallback"*)**, void (%"class.blink::SQLTransaction::OnSuccessCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::SQLTransaction::OnSuccessCallback"*)*, void (%"class.blink::SQLTransaction::OnSuccessCallback"*)** %15, i64 3
  %17 = load void (%"class.blink::SQLTransaction::OnSuccessCallback"*)*, void (%"class.blink::SQLTransaction::OnSuccessCallback"*)** %16, align 8
  call void %17(%"class.blink::SQLTransaction::OnSuccessCallback"* nonnull %10) #10
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 4, i32 0
  %20 = bitcast %"class.blink::MemberBase.330"* %19 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store atomic i64 0, i64* %11 monotonic, align 8
  %21 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 6, i32 0
  %22 = bitcast %"class.blink::MemberBase.336"* %21 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  call void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #10
  ret i32 6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i64 } @_ZThn16_N5blink14SQLTransaction16StateFunctionForENS_19SQLTransactionStateE(%"class.blink::SQLTransaction"* nocapture readnone, i32) unnamed_addr #5 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds [13 x { i64, i64 }], [13 x { i64, i64 }]* @_ZZN5blink14SQLTransaction16StateFunctionForENS_19SQLTransactionStateEE15kStateFunctions, i64 0, i64 %3, i32 0
  %5 = load i64, i64* %4, align 16
  %6 = insertvalue { i64, i64 } undef, i64 %5, 0
  %7 = getelementptr inbounds [13 x { i64, i64 }], [13 x { i64, i64 }]* @_ZZN5blink14SQLTransaction16StateFunctionForENS_19SQLTransactionStateEE15kStateFunctions, i64 0, i64 %3, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } %6, i64 %8, 1
  ret { i64, i64 } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SQLTransaction21RequestTransitToStateENS_19SQLTransactionStateE(%"class.blink::SQLTransaction"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 1, i32 2
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Database"*, %"class.blink::Database"** %4, align 8
  tail call void @_ZN5blink8Database27ScheduleTransactionCallbackEPNS_14SQLTransactionE(%"class.blink::Database"* %5, %"class.blink::SQLTransaction"* %0) #10
  ret void
}

declare void @_ZN5blink8Database27ScheduleTransactionCallbackEPNS_14SQLTransactionE(%"class.blink::Database"*, %"class.blink::SQLTransaction"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink14SQLTransaction28NextStateForTransactionErrorEv(%"class.blink::SQLTransaction"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::SQLTransaction::OnErrorCallback"** %2, align 8
  %4 = icmp eq %"class.blink::SQLTransaction::OnErrorCallback"* %3, null
  %5 = select i1 %4, i32 7, i32 9
  ret i32 %5
}

declare void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"*, %"class.blink::ExecutionContext"*, %"class.blink::probe::AsyncTaskId"*, i8*, i1 zeroext, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"*) unnamed_addr #3

declare %"class.blink::SQLErrorData"* @_ZN5blink21SQLTransactionBackend16TransactionErrorEv(%"class.blink::SQLTransactionBackend"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink14SQLTransaction14ClearCallbacksEv(%"class.blink::SQLTransaction"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 4, i32 0
  %3 = bitcast %"class.blink::MemberBase.330"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 5, i32 0
  %5 = bitcast %"class.blink::MemberBase.332"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 6, i32 0
  %7 = bitcast %"class.blink::MemberBase.336"* %6 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  ret void
}

declare %"class.blink::SQLStatement"* @_ZN5blink21SQLTransactionBackend16CurrentStatementEv(%"class.blink::SQLTransactionBackend"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink12SQLStatement15PerformCallbackEPNS_14SQLTransactionE(%"class.blink::SQLStatement"*, %"class.blink::SQLTransaction"*) local_unnamed_addr #2

declare %"class.blink::SQLTransactionClient"* @_ZNK5blink8Database17TransactionClientEv(%"class.blink::Database"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink20SQLTransactionClient14DidExceedQuotaEPNS_8DatabaseE(%"class.blink::SQLTransactionClient"*, %"class.blink::Database"*) local_unnamed_addr #2

declare void @_ZN5blink21SQLTransactionBackend30SetShouldRetryCurrentStatementEb(%"class.blink::SQLTransactionBackend"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink21SQLTransactionBackend21RequestTransitToStateENS_19SQLTransactionStateE(%"class.blink::SQLTransactionBackend"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SQLTransaction22PerformPendingCallbackEv(%"class.blink::SQLTransaction"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Database"*, %"class.blink::Database"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Database", %"class.blink::Database"* %3, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i8, i8* %4 acquire, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 4, i32 0
  %10 = bitcast %"class.blink::MemberBase.330"* %9 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 5, i32 0
  %12 = bitcast %"class.blink::MemberBase.332"* %11 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 6, i32 0
  %14 = bitcast %"class.blink::MemberBase.336"* %13 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 1, i32 1
  store i32 6, i32* %15, align 8
  br label %21

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 1, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 1, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 1, i32 1
  store i32 %18, i32* %19, align 8
  %20 = icmp sgt i32 %18, 1
  br i1 %20, label %21, label %53

21:                                               ; preds = %8, %16
  %22 = phi i32* [ %15, %8 ], [ %19, %16 ]
  %23 = phi i32 [ 6, %8 ], [ %18, %16 ]
  %24 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 1
  %25 = bitcast %"class.blink::SQLTransactionStateMachine"* %24 to { i64, i64 } (%"class.blink::SQLTransactionStateMachine"*, i32)***
  %26 = getelementptr inbounds %"class.blink::SQLTransactionStateMachine", %"class.blink::SQLTransactionStateMachine"* %24, i64 -1
  %27 = bitcast %"class.blink::SQLTransactionStateMachine"* %26 to i8*
  br label %28

28:                                               ; preds = %49, %21
  %29 = phi i32 [ %23, %21 ], [ %51, %49 ]
  %30 = load { i64, i64 } (%"class.blink::SQLTransactionStateMachine"*, i32)**, { i64, i64 } (%"class.blink::SQLTransactionStateMachine"*, i32)*** %25, align 8
  %31 = getelementptr inbounds { i64, i64 } (%"class.blink::SQLTransactionStateMachine"*, i32)*, { i64, i64 } (%"class.blink::SQLTransactionStateMachine"*, i32)** %30, i64 2
  %32 = load { i64, i64 } (%"class.blink::SQLTransactionStateMachine"*, i32)*, { i64, i64 } (%"class.blink::SQLTransactionStateMachine"*, i32)** %31, align 8
  %33 = tail call { i64, i64 } %32(%"class.blink::SQLTransactionStateMachine"* %24, i32 %29) #10
  %34 = extractvalue { i64, i64 } %33, 0
  %35 = extractvalue { i64, i64 } %33, 1
  %36 = getelementptr inbounds i8, i8* %27, i64 %35
  %37 = bitcast i8* %36 to %"class.blink::SQLTransaction"*
  %38 = and i64 %34, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %28
  %41 = bitcast i8* %36 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = add i64 %34, -1
  %44 = getelementptr i8, i8* %42, i64 %43
  %45 = bitcast i8* %44 to i32 (%"class.blink::SQLTransaction"*)**
  %46 = load i32 (%"class.blink::SQLTransaction"*)*, i32 (%"class.blink::SQLTransaction"*)** %45, align 8
  br label %49

47:                                               ; preds = %28
  %48 = inttoptr i64 %34 to i32 (%"class.blink::SQLTransaction"*)*
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 (%"class.blink::SQLTransaction"*)* [ %46, %40 ], [ %48, %47 ]
  %51 = tail call i32 %50(%"class.blink::SQLTransaction"* %37) #10
  store i32 %51, i32* %22, align 8
  %52 = icmp sgt i32 %51, 1
  br i1 %52, label %28, label %53

53:                                               ; preds = %49, %16
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SQLTransaction34ComputeNextStateAndCleanupIfNeededEv(%"class.blink::SQLTransaction"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Database"*, %"class.blink::Database"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Database", %"class.blink::Database"* %3, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i8, i8* %4 acquire, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 1, i32 2
  %10 = load i32, i32* %9, align 4
  store i32 1, i32* %9, align 4
  br label %18

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 4, i32 0
  %13 = bitcast %"class.blink::MemberBase.330"* %12 to i64*
  store atomic i64 0, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 5, i32 0
  %15 = bitcast %"class.blink::MemberBase.332"* %14 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  %16 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 6, i32 0
  %17 = bitcast %"class.blink::MemberBase.336"* %16 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  br label %18

18:                                               ; preds = %11, %8
  %19 = phi i32 [ 6, %11 ], [ %10, %8 ]
  %20 = phi i1 [ true, %11 ], [ false, %8 ]
  %21 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 1, i32 1
  store i32 %19, i32* %21, align 8
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SQLTransaction10ExecuteSQLERKN3WTF6StringERKNS1_6VectorINS_8SQLValueELj0ENS1_18PartitionAllocatorEEEPNS_12SQLStatement17OnSuccessCallbackEPNSB_15OnErrorCallbackERNS_14ExceptionStateE(%"class.blink::SQLTransaction"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.285"* dereferenceable(16), %"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 7
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0)) #10
  br label %40

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Database"*, %"class.blink::Database"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Database", %"class.blink::Database"* %13, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i8, i8* %14 acquire, align 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %11
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0)) #10
  br label %40

19:                                               ; preds = %11
  %20 = load %"class.blink::Database"*, %"class.blink::Database"** %12, align 8
  %21 = getelementptr inbounds %"class.blink::Database", %"class.blink::Database"* %20, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::DatabaseContext"*, %"class.blink::DatabaseContext"** %21, align 8
  %23 = tail call zeroext i1 @_ZNK5blink15DatabaseContext19AllowDatabaseAccessEv(%"class.blink::DatabaseContext"* %22) #10
  br i1 %23, label %24, label %29

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 11
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  %28 = select i1 %27, i32 0, i32 2
  br label %29

29:                                               ; preds = %24, %19
  %30 = phi i32 [ 4, %19 ], [ %28, %24 ]
  %31 = load %"class.blink::Database"*, %"class.blink::Database"** %12, align 8
  %32 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12SQLStatementEEEPhm(i64 48) #10
  %33 = bitcast i8* %32 to %"class.blink::SQLStatement"*
  tail call void @_ZN5blink12SQLStatementC1EPNS_8DatabaseEPNS0_17OnSuccessCallbackEPNS0_15OnErrorCallbackE(%"class.blink::SQLStatement"* %33, %"class.blink::Database"* %31, %"class.blink::SQLStatement::OnSuccessCallback"* %3, %"class.blink::SQLStatement::OnErrorCallback"* %4) #10
  %34 = getelementptr inbounds i8, i8* %32, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  %38 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::SQLTransactionBackend"*, %"class.blink::SQLTransactionBackend"** %38, align 8
  tail call void @_ZN5blink21SQLTransactionBackend10ExecuteSQLEPNS_12SQLStatementERKN3WTF6StringERKNS3_6VectorINS_8SQLValueELj0ENS3_18PartitionAllocatorEEEi(%"class.blink::SQLTransactionBackend"* %39, %"class.blink::SQLStatement"* %33, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::Vector.285"* dereferenceable(16) %2, i32 %30) #10
  br label %40

40:                                               ; preds = %29, %18, %10
  ret void
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink15DatabaseContext19AllowDatabaseAccessEv(%"class.blink::DatabaseContext"*) local_unnamed_addr #2

declare void @_ZN5blink21SQLTransactionBackend10ExecuteSQLEPNS_12SQLStatementERKN3WTF6StringERKNS3_6VectorINS_8SQLValueELj0ENS3_18PartitionAllocatorEEEi(%"class.blink::SQLTransactionBackend"*, %"class.blink::SQLStatement"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.285"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SQLTransaction10executeSqlEPNS_11ScriptStateERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::SQLTransaction"* nocapture readonly, %"class.blink::ScriptState"* nocapture readnone, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.285", align 8
  %6 = bitcast %"class.WTF::Vector.285"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #10
  call void @_ZN5blink14SQLTransaction10ExecuteSQLERKN3WTF6StringERKNS1_6VectorINS_8SQLValueELj0ENS1_18PartitionAllocatorEEEPNS_12SQLStatement17OnSuccessCallbackEPNSB_15OnErrorCallbackERNS_14ExceptionStateE(%"class.blink::SQLTransaction"* %0, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::Vector.285"* nonnull dereferenceable(16) %5, %"class.blink::SQLStatement::OnSuccessCallback"* null, %"class.blink::SQLStatement::OnErrorCallback"* null, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %7 = getelementptr inbounds %"class.WTF::Vector.285", %"class.WTF::Vector.285"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::SQLValue"*, %"class.blink::SQLValue"** %7, align 8
  %9 = icmp eq %"class.blink::SQLValue"* %8, null
  br i1 %9, label %44, label %10, !prof !3

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::SQLValue"* %8 to i8*
  %12 = getelementptr inbounds %"class.WTF::Vector.285", %"class.WTF::Vector.285"* %5, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %42, label %15, !prof !4

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %8, i64 %16
  br label %18

18:                                               ; preds = %36, %15
  %19 = phi %"class.blink::SQLValue"* [ %37, %36 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #10
  br label %36

36:                                               ; preds = %35, %32, %18
  %37 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %19, i64 1
  %38 = icmp eq %"class.blink::SQLValue"* %37, %17
  br i1 %38, label %39, label %18

39:                                               ; preds = %36
  store i32 0, i32* %12, align 4
  %40 = bitcast %"class.WTF::Vector.285"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %10
  %43 = phi i8* [ %41, %39 ], [ %11, %10 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #10
  store %"class.blink::SQLValue"* null, %"class.blink::SQLValue"** %7, align 8
  br label %44

44:                                               ; preds = %4, %42
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SQLTransaction10executeSqlEPNS_11ScriptStateERKN3WTF6StringERKN4absl8optionalINS_10HeapVectorINS_11ScriptValueELj0EEEEEPNS_22V8SQLStatementCallbackEPNS_27V8SQLStatementErrorCallbackERNS_14ExceptionStateE(%"class.blink::SQLTransaction"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.absl::optional.1819"* nocapture readonly dereferenceable(24), %"class.blink::V8SQLStatementCallback"*, %"class.blink::V8SQLStatementErrorCallback"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::Vector.285", align 8
  %9 = alloca %"class.blink::SQLValue", align 8
  %10 = bitcast %"class.WTF::Vector.285"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::Vector.285", %"class.WTF::Vector.285"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::Vector.285", %"class.WTF::Vector.285"* %8, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.285", %"class.WTF::Vector.285"* %8, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #10
  %14 = getelementptr inbounds %"class.absl::optional.1819", %"class.absl::optional.1819"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %111, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.absl::optional.1819", %"class.absl::optional.1819"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %17
  %22 = zext i32 %19 to i64
  %23 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8SQLValueEEEmm(i64 %22) #10
  %24 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8SQLValueEEEPKcv, i64 0, i64 0)) #10
  %25 = ptrtoint i8* %24 to i64
  %26 = bitcast %"class.WTF::Vector.285"* %8 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = udiv i64 %23, 24
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %12, align 8
  %29 = load i8, i8* %14, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %21
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #11
  unreachable

32:                                               ; preds = %21
  %33 = load i32, i32* %18, align 4
  %34 = getelementptr inbounds %"class.absl::optional.1819", %"class.absl::optional.1819"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %34, align 8
  %36 = zext i32 %33 to i64
  %37 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %35, i64 %36
  %38 = icmp eq i32 %33, 0
  br i1 %38, label %111, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::SQLValue"* %9 to i8*
  %41 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %42 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %9, i64 0, i32 2, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  br label %46

44:                                               ; preds = %71
  %45 = icmp eq %"class.blink::ScriptValue"* %74, %37
  br i1 %45, label %111, label %46

46:                                               ; preds = %39, %44
  %47 = phi %"class.blink::ScriptValue"* [ %35, %39 ], [ %74, %44 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #10
  %48 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %41, align 8
  %49 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %47) #10
  call void @_ZN5blink17NativeValueTraitsINS_8SQLValueEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::SQLValue"* nonnull sret %9, %"class.v8::Isolate"* %48, %"class.v8::Value"* %49, %"class.blink::ExceptionState"* dereferenceable(72) %6) #10
  %50 = load %"class.blink::SQLValue"*, %"class.blink::SQLValue"** %11, align 8
  %51 = load i32, i32* %13, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %50, i64 %52
  call void @_ZN5blink8SQLValueC1ERKS0_(%"class.blink::SQLValue"* %53, %"class.blink::SQLValue"* nonnull dereferenceable(24) %9) #10
  %54 = load i32, i32* %13, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %13, align 4
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #10
  br label %71

71:                                               ; preds = %46, %67, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #10
  %72 = load i32, i32* %43, align 8
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %47, i64 1
  br i1 %73, label %44, label %75

75:                                               ; preds = %71
  %76 = load i32, i32* %12, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %111, label %78

78:                                               ; preds = %75
  %79 = load i32, i32* %13, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %107, label %81

81:                                               ; preds = %78
  %82 = load %"class.blink::SQLValue"*, %"class.blink::SQLValue"** %11, align 8
  %83 = zext i32 %79 to i64
  %84 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %82, i64 %83
  br label %85

85:                                               ; preds = %103, %81
  %86 = phi %"class.blink::SQLValue"* [ %104, %103 ], [ %82, %81 ]
  %87 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %86, i64 0, i32 2, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #10
  br label %103

103:                                              ; preds = %102, %99, %85
  %104 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %86, i64 1
  %105 = icmp eq %"class.blink::SQLValue"* %104, %84
  br i1 %105, label %106, label %85

106:                                              ; preds = %103
  store i32 0, i32* %13, align 4
  br label %107

107:                                              ; preds = %106, %78
  %108 = bitcast %"class.WTF::Vector.285"* %8 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = bitcast %"class.WTF::Vector.285"* %8 to i64*
  store atomic i64 0, i64* %110 monotonic, align 8
  store i32 0, i32* %12, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %109) #10
  br label %111

111:                                              ; preds = %44, %17, %32, %7, %107, %75
  %112 = icmp eq %"class.blink::V8SQLStatementCallback"* %4, null
  br i1 %112, label %124, label %113

113:                                              ; preds = %111
  %114 = ptrtoint %"class.blink::V8SQLStatementCallback"* %4 to i64
  %115 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12SQLStatement17OnSuccessCallbackEEEPhm(i64 16) #10
  %116 = bitcast i8* %115 to %"class.blink::SQLStatement::OnSuccessV8Impl"*
  %117 = bitcast i8* %115 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12SQLStatement15OnSuccessV8ImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %118 = getelementptr inbounds i8, i8* %115, i64 8
  %119 = bitcast i8* %118 to i64*
  store i64 %114, i64* %119, align 8
  %120 = getelementptr inbounds i8, i8* %115, i64 -4
  %121 = bitcast i8* %120 to i16*
  %122 = load atomic i16, i16* %121 monotonic, align 2
  %123 = or i16 %122, 1
  store atomic i16 %123, i16* %121 release, align 2
  br label %124

124:                                              ; preds = %111, %113
  %125 = phi %"class.blink::SQLStatement::OnSuccessV8Impl"* [ %116, %113 ], [ null, %111 ]
  %126 = getelementptr inbounds %"class.blink::SQLStatement::OnSuccessV8Impl", %"class.blink::SQLStatement::OnSuccessV8Impl"* %125, i64 0, i32 0
  %127 = icmp eq %"class.blink::V8SQLStatementErrorCallback"* %5, null
  br i1 %127, label %139, label %128

128:                                              ; preds = %124
  %129 = ptrtoint %"class.blink::V8SQLStatementErrorCallback"* %5 to i64
  %130 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12SQLStatement15OnErrorCallbackEEEPhm(i64 16) #10
  %131 = bitcast i8* %130 to %"class.blink::SQLStatement::OnErrorV8Impl"*
  %132 = bitcast i8* %130 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12SQLStatement13OnErrorV8ImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %132, align 8
  %133 = getelementptr inbounds i8, i8* %130, i64 8
  %134 = bitcast i8* %133 to i64*
  store i64 %129, i64* %134, align 8
  %135 = getelementptr inbounds i8, i8* %130, i64 -4
  %136 = bitcast i8* %135 to i16*
  %137 = load atomic i16, i16* %136 monotonic, align 2
  %138 = or i16 %137, 1
  store atomic i16 %138, i16* %136 release, align 2
  br label %139

139:                                              ; preds = %124, %128
  %140 = phi %"class.blink::SQLStatement::OnErrorV8Impl"* [ %131, %128 ], [ null, %124 ]
  %141 = getelementptr inbounds %"class.blink::SQLStatement::OnErrorV8Impl", %"class.blink::SQLStatement::OnErrorV8Impl"* %140, i64 0, i32 0
  call void @_ZN5blink14SQLTransaction10ExecuteSQLERKN3WTF6StringERKNS1_6VectorINS_8SQLValueELj0ENS1_18PartitionAllocatorEEEPNS_12SQLStatement17OnSuccessCallbackEPNSB_15OnErrorCallbackERNS_14ExceptionStateE(%"class.blink::SQLTransaction"* %0, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::Vector.285"* nonnull dereferenceable(16) %8, %"class.blink::SQLStatement::OnSuccessCallback"* %126, %"class.blink::SQLStatement::OnErrorCallback"* %141, %"class.blink::ExceptionState"* dereferenceable(72) %6)
  %142 = load %"class.blink::SQLValue"*, %"class.blink::SQLValue"** %11, align 8
  %143 = icmp eq %"class.blink::SQLValue"* %142, null
  br i1 %143, label %177, label %144, !prof !3

144:                                              ; preds = %139
  %145 = bitcast %"class.blink::SQLValue"* %142 to i8*
  %146 = load i32, i32* %13, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %175, label %148, !prof !4

148:                                              ; preds = %144
  %149 = zext i32 %146 to i64
  %150 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %142, i64 %149
  br label %151

151:                                              ; preds = %169, %148
  %152 = phi %"class.blink::SQLValue"* [ %170, %169 ], [ %142, %148 ]
  %153 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %152, i64 0, i32 2, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #10
  br label %169

169:                                              ; preds = %168, %165, %151
  %170 = getelementptr inbounds %"class.blink::SQLValue", %"class.blink::SQLValue"* %152, i64 1
  %171 = icmp eq %"class.blink::SQLValue"* %170, %150
  br i1 %171, label %172, label %151

172:                                              ; preds = %169
  store i32 0, i32* %13, align 4
  %173 = bitcast %"class.WTF::Vector.285"* %8 to i8**
  %174 = load i8*, i8** %173, align 8
  br label %175

175:                                              ; preds = %172, %144
  %176 = phi i8* [ %174, %172 ], [ %145, %144 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %176) #10
  store %"class.blink::SQLValue"* null, %"class.blink::SQLValue"** %11, align 8
  br label %177

177:                                              ; preds = %139, %175
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret void
}

declare void @_ZN5blink17NativeValueTraitsINS_8SQLValueEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::SQLValue"* sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.blink::SQLTransaction::OnErrorCallback"* @_ZN5blink14SQLTransaction20ReleaseErrorCallbackEv(%"class.blink::SQLTransaction"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLTransaction", %"class.blink::SQLTransaction"* %0, i64 0, i32 6, i32 0
  %3 = getelementptr inbounds %"class.blink::MemberBase.336", %"class.blink::MemberBase.336"* %2, i64 0, i32 0
  %4 = load %"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::SQLTransaction::OnErrorCallback"** %3, align 8
  %5 = bitcast %"class.blink::MemberBase.336"* %2 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  ret %"class.blink::SQLTransaction::OnErrorCallback"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SQLTransaction17OnProcessCallbackD2Ev(%"class.blink::SQLTransaction::OnProcessCallback"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SQLTransaction15OnProcessV8ImplD0Ev(%"class.blink::SQLTransaction::OnProcessV8Impl"*) unnamed_addr #7 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SQLTransaction17OnSuccessCallbackD2Ev(%"class.blink::SQLTransaction::OnSuccessCallback"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SQLTransaction15OnSuccessV8ImplD0Ev(%"class.blink::SQLTransaction::OnSuccessV8Impl"*) unnamed_addr #7 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SQLTransaction15OnErrorCallbackD2Ev(%"class.blink::SQLTransaction::OnErrorCallback"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SQLTransaction13OnErrorV8ImplD0Ev(%"class.blink::SQLTransaction::OnErrorV8Impl"*) unnamed_addr #7 comdat align 2 {
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink14SQLTransaction18GetWrapperTypeInfoEv(%"class.blink::SQLTransaction"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink14SQLTransaction18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12SQLStatement17OnSuccessCallbackEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.244"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12SQLStatement17OnSuccessCallbackEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.244"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12SQLStatement17OnSuccessCallbackEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12SQLStatement17OnSuccessCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SQLStatement::OnSuccessCallback"*
  %4 = bitcast i8* %1 to void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)**, void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SQLStatement::OnSuccessCallback"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_12SQLStatement17OnSuccessCallbackEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SQLStatement::OnSuccessCallback"*
  %3 = bitcast i8* %0 to void (%"class.blink::SQLStatement::OnSuccessCallback"*)***
  %4 = load void (%"class.blink::SQLStatement::OnSuccessCallback"*)**, void (%"class.blink::SQLStatement::OnSuccessCallback"*)*** %3, align 8
  %5 = load void (%"class.blink::SQLStatement::OnSuccessCallback"*)*, void (%"class.blink::SQLStatement::OnSuccessCallback"*)** %4, align 8
  tail call void %5(%"class.blink::SQLStatement::OnSuccessCallback"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12SQLStatement17OnSuccessCallbackEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.244"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12SQLStatement15OnErrorCallbackEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.244"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12SQLStatement15OnErrorCallbackEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.244"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12SQLStatement15OnErrorCallbackEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12SQLStatement15OnErrorCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SQLStatement::OnErrorCallback"*
  %4 = bitcast i8* %1 to void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)**, void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLStatement::OnErrorCallback"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SQLStatement::OnErrorCallback"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_12SQLStatement15OnErrorCallbackEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SQLStatement::OnErrorCallback"*
  %3 = bitcast i8* %0 to void (%"class.blink::SQLStatement::OnErrorCallback"*)***
  %4 = load void (%"class.blink::SQLStatement::OnErrorCallback"*)**, void (%"class.blink::SQLStatement::OnErrorCallback"*)*** %3, align 8
  %5 = load void (%"class.blink::SQLStatement::OnErrorCallback"*)*, void (%"class.blink::SQLStatement::OnErrorCallback"*)** %4, align 8
  tail call void %5(%"class.blink::SQLStatement::OnErrorCallback"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12SQLStatement15OnErrorCallbackEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_24V8SQLTransactionCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackInterfaceBase"*
  tail call void @_ZNK5blink21CallbackInterfaceBase5TraceEPNS_7VisitorE(%"class.blink::CallbackInterfaceBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink21CallbackInterfaceBase5TraceEPNS_7VisitorE(%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14V8VoidCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackInterfaceBase"*
  tail call void @_ZNK5blink21CallbackInterfaceBase5TraceEPNS_7VisitorE(%"class.blink::CallbackInterfaceBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_29V8SQLTransactionErrorCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackInterfaceBase"*
  tail call void @_ZNK5blink21CallbackInterfaceBase5TraceEPNS_7VisitorE(%"class.blink::CallbackInterfaceBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.244"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.244"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DatabaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Database"*
  tail call void @_ZNK5blink8Database5TraceEPNS_7VisitorE(%"class.blink::Database"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink8Database5TraceEPNS_7VisitorE(%"class.blink::Database"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21SQLTransactionBackendEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SQLTransactionBackend"*
  tail call void @_ZNK5blink21SQLTransactionBackend5TraceEPNS_7VisitorE(%"class.blink::SQLTransactionBackend"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink21SQLTransactionBackend5TraceEPNS_7VisitorE(%"class.blink::SQLTransactionBackend"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14SQLTransaction17OnProcessCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SQLTransaction::OnProcessCallback"*
  %4 = bitcast i8* %1 to void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)**, void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLTransaction::OnProcessCallback"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SQLTransaction::OnProcessCallback"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14SQLTransaction17OnSuccessCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SQLTransaction::OnSuccessCallback"*
  %4 = bitcast i8* %1 to void (%"class.blink::SQLTransaction::OnSuccessCallback"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SQLTransaction::OnSuccessCallback"*, %"class.blink::Visitor"*)**, void (%"class.blink::SQLTransaction::OnSuccessCallback"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SQLTransaction::OnSuccessCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLTransaction::OnSuccessCallback"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::SQLTransaction::OnSuccessCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLTransaction::OnSuccessCallback"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SQLTransaction::OnSuccessCallback"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14SQLTransaction15OnErrorCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SQLTransaction::OnErrorCallback"*
  %4 = bitcast i8* %1 to void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)**, void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::SQLTransaction::OnErrorCallback"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SQLTransaction::OnErrorCallback"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8SQLErrorD2Ev(%"class.blink::SQLError"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLError", %"class.blink::SQLError"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8SQLErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SQLError", %"class.blink::SQLError"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8SQLErrorD0Ev(%"class.blink::SQLError"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SQLError", %"class.blink::SQLError"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8SQLErrorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SQLError", %"class.blink::SQLError"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink8SQLError18GetWrapperTypeInfoEv(%"class.blink::SQLError"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink8SQLError18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare void @_ZN5blink12SQLStatementC1EPNS_8DatabaseEPNS0_17OnSuccessCallbackEPNS0_15OnErrorCallbackE(%"class.blink::SQLStatement"*, %"class.blink::Database"*, %"class.blink::SQLStatement::OnSuccessCallback"*, %"class.blink::SQLStatement::OnErrorCallback"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12SQLStatementEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12SQLStatementEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12SQLStatementEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.244"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12SQLStatementEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.244"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12SQLStatementEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12SQLStatementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SQLStatement"*
  tail call void @_ZNK5blink12SQLStatement5TraceEPNS_7VisitorE(%"class.blink::SQLStatement"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12SQLStatementEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink12SQLStatement5TraceEPNS_7VisitorE(%"class.blink::SQLStatement"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8SQLValueEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN5blink8SQLValueC1ERKS0_(%"class.blink::SQLValue"*, %"class.blink::SQLValue"* dereferenceable(24)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
